.code32
.text
.globl main
main:
		jmp	_0858ac_func

.data

_010003_data:
		.ascii  "\x90\x90\x90\x90\x90\x90\x90\x90"
		.ascii  "\x90\x90\x90\x90\x90"

.text



_010010_func:
		inc    %ebx
		cmp    0x000044(%ebp,%eax,2),%bl
		push   %ebp
		pop    %edi
		pop    %edi
		pop    %edi
		pop    %edi
		pop    %edi
		cs inc %edx
		inc    %ecx
		push   %esp
		add    %dl,0x000057(%esi)
		mov    %ebx,%esi
		mov    _0bf318_data,%ebx
		cmpb   $0x000000,0x000015(%ebx)
		je     _010032_jump
		xor    %esi,%esi

	_010032_jump:
		xor    %ah,%ah
		and    $0x00000f,%al
		mov    %ax,_0ae670_data
		xor    %dh,%dh
		mov    _0ae66e_data,%ebx
		and    $0x00000f,%dl
		sar    $0x000010,%ebx
		mov    %dx,_0ae672_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0ae670_data,%edx
		mov    _0c0f78_data,%edi
		sar    $0x000010,%edx
		sub    %eax,%edi
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000004,%eax
		sub    %eax,%edi
		lea    0x000001(%edi),%eax
		mov    %eax,_0ae674_data
		cmpb   $0x000000,_0c3371_data
		je     _01009a_jump
		xor    %edx,%edx
		mov    %edx,_0ae678_data
		jmp    _0100a7_jump

	_01009a_jump:
		movswl %si,%eax
		add    $0x000010,%eax
		sub    %ebx,%eax
		mov    %eax,_0ae678_data

	_0100a7_jump:
		mov    _0ae670_data,%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		add    $0x000010,%edx
		sub    %eax,%edx
		mov    _0ae678_data,%eax
		mov    %edx,_0ae67c_data
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0c0fc0_data,%ebx
		shr    $0x000002,%ebx
		imul   %edx,%ebx
		mov    _0ae678_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    _0c0fc8_data,%eax
		mov    _0c0fac_data,%esi
		add    %eax,%ebx
		mov    _0ae67c_data,%eax
		imul   %esi,%eax
		add    %eax,%ebx
		mov    _0ae670_data,%ax
		xor    %ah,%ah
		and    $0x000003,%al
		movswl %ax,%ecx
		mov    $0x000003,%eax
		sub    %ecx,%eax
		mov    %eax,%ecx
		mov    $0x000001,%eax
		shl    %cl,%eax
		mov    %ebx,_0ae680_data
		mov    %eax,_0ae684_data
		pop    %edi
		pop    %esi
		ret    



_010130_func:
		push   %ebx
		push   %edx
		mov    %al,%dl
		cmpb   $0x000000,_0c3372_data
		je     _01014b_jump
		cmpb   $0x000001,_0c33b4_data
		je     _01014b_jump
		call   _071d10_func

	_01014b_jump:
		mov    _0a7c8d_data,%bl
		test   %bl,%bl
		jbe    _01015f_jump
		mov    %bl,%bh
		dec    %bh
		mov    %bh,_0a7c8d_data

	_01015f_jump:
		cmpb   $0x000000,_0c33b4_data
		jne    _01017d_jump
		call   _05f434_func
		cmpb   $0x000000,_0c33b4_data
		jne    _010182_jump
		call   _05f5f8_func
		jmp    _010182_jump

	_01017d_jump:
		call   _05ffe8_func

	_010182_jump:
		call   _04e290_func
		test   %dl,%dl
		jne    _010195_jump
		mov    $_0ae6d8_data,%eax
		call   _061650_func

	_010195_jump:
		pop    %edx
		pop    %ebx
		ret    



_010198_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000138,%esp
		mov    %eax,%ebp
		mov    $0x000001,%ah
		mov    _0c1074_data,%edx
		mov    %ah,_0c33e1_data
		test   %edx,%edx
		jle    _01020b_jump
		cmp    _0c107c_data,%edx
		jle    _01020b_jump
		mov    $0x00003c,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0c1074_data,%eax
		push   %edx
		mov    %eax,%edx
		mov    $0x000e10,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		push   %eax
		mov    _0bf2f4_data,%eax
		mov    0x00024c(%eax),%ecx
		push   %ecx
		lea    0x00000c(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x000010,%esp
		mov    %esp,%eax
		call   _040b7c_func
		call   _040d70_func

	_01020b_jump:
		mov    $0x000001,%edx
		xor    %esi,%esi
		xor    %ebx,%ebx
		mov    %esi,_0bf31c_data
		mov    %dx,_0c3016_data
		mov    _0c33cf_data,%dl
		mov    %bx,_0c3014_data
		test   %dl,%dl
		je     _010804_jump

	_010236_jump:
		cmpw   $0x000000,_0c3146_data
		jne    _010804_jump
		cmpw   $0x000000,_0c3156_data
		jne    _010804_jump
		cmpb   $0x000002,_0bf2fd_data
		je     _010804_jump
		call   _018bed_func
		cmpb   $0x000000,_0c33a2_data
		je     _010272_jump
		call   _018aff_func

	_010272_jump:
		cmpb   $0x000000,_0c339f_data
		je     _010287_jump
		call   _018b72_func
		mov    %eax,0x00012c(%esp)

	_010287_jump:
		cmpb   $0x000000,_0c339f_data
		je     _0102a8_jump
		xor    %eax,%eax
		mov    0x00012c(%esp),%edx
		mov    _0c30b6_data,%ax
		add    %eax,%edx
		mov    %edx,0x000130(%esp)

	_0102a8_jump:
		call   _05a148_func
		cmpb   $0x000020,_0c33cf_data
		jb     _0102c4_jump
		cmpb   $0x000000,_0c33b4_data
		jne    _0102c4_jump
		call   _03f6ac_func

	_0102c4_jump:
		cmpw   $0x000000,_0a7cd6_data
		jne    _010376_jump
		cmpw   $0x000000,_0a7cda_data
		jne    _010376_jump
		mov    _0c0ebc_data,%edx
		mov    _0c0ebc_data,%eax
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		mov    _0c0eb0_data,%edi
		add    %edx,%eax
		mov    _0c3378_data,%bl
		add    %edi,%eax
		cmp    $0x000001,%bl
		jne    _010342_jump
		cmpb   $0x000000,_0a7d24_data
		je     _010342_jump
		mov    _0c0eb4_data,%ebx
		mov    _0c0ebc_data,%esi
		mov    _0c0eac_data,%ecx
		sub    %esi,%ebx
		sub    %edi,%ecx
		mov    _0a7c98_data,%edi
		mov    _0c0f50_data,%esi
		add    %eax,%edi
		add    %eax,%esi
		mov    %ebx,%eax
		call   *_0c0f54_data
		jmp    _0103c1_jump

	_010342_jump:
		mov    _0c0eb4_data,%edx
		mov    _0c0ebc_data,%ebx
		mov    _0c0eb0_data,%ecx
		mov    _0a7c98_data,%edi
		mov    _0c0f50_data,%esi
		sub    %ebx,%edx
		add    %eax,%edi
		mov    %edx,%ebx
		mov    _0c0eac_data,%edx
		add    %eax,%esi
		sub    %ecx,%edx
		mov    %ebx,%eax
		mov    %edx,%ecx
		jmp    _0103bc_jump

	_010376_jump:
		cmpb   $0x000001,_0c3378_data
		jne    _0103a6_jump
		cmpb   $0x000000,_0a7d24_data
		je     _0103a6_jump
		mov    $0x000140,%ecx
		mov    _0c0eb4_data,%eax
		mov    _0a7c98_data,%edi
		mov    _0c0f50_data,%esi
		call   *_0c0f54_data
		jmp    _0103c1_jump

	_0103a6_jump:
		mov    $0x000140,%ecx
		mov    _0c0eb4_data,%eax
		mov    _0a7c98_data,%edi
		mov    _0c0f50_data,%esi

	_0103bc_jump:
		call   _01697d_func

	_0103c1_jump:
		cmpb   $0x000000,_0c339f_data
		je     _0103cf_jump
		call   _018b72_func

	_0103cf_jump:
		cmpb   $0x000000,_0c3378_data
		jne    _0103dd_jump
		call   _042170_func

	_0103dd_jump:
		mov    _0c30b8_data,%dl
		xor    %ebx,%ebx

	_0103e5_jump:
		mov    %ebx,%eax
		call   _010130_func
		mov    _0c3146_data,%cx
		cmp    %cx,%bx
		jne    _01040d_jump
		cmp    _0c3156_data,%cx
		jne    _01040d_jump
		cmp    _0c33cb_data,%cl
		jne    _01040d_jump
		mov    $0x000001,%al
		jmp    _01040f_jump

	_01040d_jump:
		mov    %bl,%al

	_01040f_jump:
		mov    %al,0x000134(%esp)
		test   %al,%al
		je     _010421_jump
		dec    %dl
		cmp    $0x0000ff,%dl
		jne    _0103e5_jump

	_010421_jump:
		cmpb   $0x000000,_0c339f_data
		je     _01042f_jump
		call   _018b72_func

	_01042f_jump:
		call   _04e308_func
		cmpb   $0x000000,_0a7ce0_data
		je     _010498_jump
		mov    _0c3160_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c30b4_data,%bx
		mov    _0c30ae_data,%dx
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		call   _07c284_func
		xor    %eax,%eax
		mov    _0c0ebc_data,%cx
		mov    _0c0eb4_data,%ax
		xor    %ebx,%ebx
		push   %eax
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c0eac_data,%ax
		mov    _0c0eb0_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0c30b4_data,%dx
		mov    _0c30ae_data,%ax
		call   _07b76c_func
		jmp    _0104aa_jump

	_010498_jump:
		mov    _0c0f78_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e88,%ecx
		rep stos %eax,%es:(%edi)

	_0104aa_jump:
		cmpw   $0x000001,_0a7c90_data
		je     _0104c5_jump
		mov    $_0ae6d8_data,%edx
		mov    _0c0f50_data,%eax
		call   _061f50_func
		jmp    _0104d4_jump

	_0104c5_jump:
		mov    $_0ae6d8_data,%edx
		mov    _0c0f50_data,%eax
		call   _062354_func

	_0104d4_jump:
		call   _01b984_func
		cmpb   $0x000000,_0c339f_data
		je     _0104e7_jump
		call   _018b72_func

	_0104e7_jump:
		call   _01ab74_func
		cmpb   $0x000000,_0c339f_data
		je     _0104fa_jump
		call   _018b72_func

	_0104fa_jump:
		call   _01ae18_func
		xor    %eax,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    _0c0eb4_data,%ax
		xor    %edx,%edx
		push   %eax
		xor    %eax,%eax
		mov    _0c0ebc_data,%cx
		mov    _0c0eac_data,%ax
		mov    _0c0eb0_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0c30b4_data,%dx
		mov    _0c30ae_data,%ax
		call   _07bf5c_func
		mov    _0c0f50_data,%eax
		call   _04e6e4_func
		mov    _0c0f50_data,%eax
		mov    _0c0eb0_data,%edx
		add    %eax,%edx
		mov    _0c0ebc_data,%eax
		shl    $0x000008,%eax
		add    %edx,%eax
		mov    _0c0ebc_data,%edx
		shl    $0x000006,%edx
		add    %edx,%eax
		sub    $0x000144,%eax
		mov    _0c0ebc_data,%ebx
		mov    %eax,_0bf2c4_data
		mov    _0c0eb4_data,%eax
		sub    %ebx,%eax
		add    $0x000002,%eax
		mov    _0c0eb0_data,%ecx
		mov    %eax,_0bf2c8_data
		mov    _0c0eac_data,%eax
		sub    %ecx,%eax
		mov    _0c309e_data,%bx
		lea    0x000004(%eax),%edx
		cmp    $0x000001,%bx
		sete   %al
		and    $0x0000ff,%eax
		shl    $0x000002,%eax
		mov    _0bf2c8_data,%ecx
		add    %eax,%edx
		mov    _0bf2c4_data,%edi
		mov    %edx,_0bf2c0_data
		call   _0169a8_func
		testb  $0x000010,_0c31b3_data
		je     _0105d3_jump
		call   _01ba50_func
		jmp    _0105da_jump

	_0105d3_jump:
		xor    %eax,%eax
		call   _01a290_func

	_0105da_jump:
		cmpb   $0x000000,_0c3363_data
		je     _0105e8_jump
		call   _01a250_func

	_0105e8_jump:
		cmpb   $0x000000,_0a7c8e_data
		je     _010600_jump
		mov    $0x000017,%edx
		mov    $0x0000a0,%eax
		call   _030300_func

	_010600_jump:
		cmpb   $0x000001,_0c33aa_data
		je     _010634_jump
		cmpw   $0x000000,_0a7cd8_data
		je     _010634_jump
		mov    _0c1080_data,%esi
		test   %esi,%esi
		jle    _010621_jump
		mov    %esi,%eax
		jmp    _01062f_jump

	_010621_jump:
		cmp    $0xffffffff,%esi
		jge    _010634_jump
		mov    _0c107c_data,%eax
		test   %eax,%eax
		jl     _010634_jump

	_01062f_jump:
		call   _01bee8_func

	_010634_jump:
		cmpb   $0x000000,_0c339c_data
		je     _010642_jump
		call   _01ba90_func

	_010642_jump:
		cmpw   $0x000001,_0c309e_data
		jne    _010672_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c339e_data,%dl
		mov    0x000000(%ebp),%al
		call   _0376f0_func
		xor    %edx,%edx
		mov    %edx,_0bf31c_data
		xor    %dl,%dl
		movb   $0x0000fe,0x000000(%ebp)
		mov    %dl,_0c33a4_data

	_010672_jump:
		cmpb   $0x000000,_0c3394_data
		je     _010680_jump
		call   _02f010_func

	_010680_jump:
		call   _040e50_func
		call   _03b930_func
		test   %al,%al
		jne    _0106db_jump
		mov    $0x000001,%eax
		call   _041ce0_func
		test   %al,%al
		je     _0106db_jump
		cmpw   $0x000000,_0c317e_data
		jne    _0106db_jump
		cmpb   $0x000000,_0a7cd4_data
		jne    _0106db_jump
		cmpb   $0x000000,_0bf2fd_data
		jne    _0106db_jump
		cmpb   $0x000000,_0c33b4_data
		jne    _0106db_jump
		cmpb   $0x000040,_0c33cf_data
		jne    _0106db_jump
		cmpw   $0x000001,_0c309e_data
		je     _0106db_jump
		movb   $0x000001,_0a7cd4_data

	_0106db_jump:
		call   _04fd08_func
		call   _041d78_func
		test   %ax,%ax
		jne    _010730_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _010730_jump
		call   _041ddc_func
		test   %ax,%ax
		jne    _010730_jump
		call   _041e40_func
		test   %ax,%ax
		jne    _010730_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _010730_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _010730_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _010730_jump
		call   _042060_func
		test   %ax,%ax
		je     _010738_jump

	_010730_jump:
		xor    %ebx,%ebx
		mov    %ebx,_0bf31c_data

	_010738_jump:
		mov    _0bf31c_data,%ecx
		inc    %ecx
		mov    %ecx,_0bf31c_data
		cmp    $0x005460,%ecx
		jl     _010754_jump
		movb   $0x000001,_0c33a4_data

	_010754_jump:
		cmpb   $0x000000,_0c33a4_data
		je     _010793_jump
		cmpb   $0x000000,_0a7cd4_data
		jne    _010793_jump
		cmpb   $0x000041,_0c33d8_data
		jne    _01078b_jump
		mov    _0c309c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _01078b_jump
		xor    %edi,%edi
		call   _038534_func
		mov    %edi,_0bf31c_data
		jmp    _010793_jump

	_01078b_jump:
		xor    %bh,%bh
		mov    %bh,_0c33a4_data

	_010793_jump:
		mov    %ebp,%eax
		call   _0428f8_func
		cmpb   $0x000000,_0c339f_data
		je     _0107f7_jump
		cmpb   $0x000000,_0c33a2_data
		je     _0107f7_jump
		cmpb   $0x000000,0x000134(%esp)
		je     _0107f7_jump
		mov    0x000130(%esp),%ebx
		call   _018bd2_func
		test   %ecx,%ecx
		jne    _0107f7_jump
		mov    $0x000001,%eax
		call   _010130_func
		mov    _0b9352_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0107e4_jump
		incw   _0b9354_data

	_0107e4_jump:
		call   _04e7a8_func
		cmpb   $0x000000,_0c33a2_data
		je     _0107f7_jump
		call   _018b0f_func

	_0107f7_jump:
		cmpb   $0x000000,_0c33cf_data
		jne    _010236_jump

	_010804_jump:
		xor    %dl,%dl
		mov    %dl,_0c33e1_data
		add    $0x000138,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_010d38_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,0x000018(%esp)
		mov    %esp,%edi
		mov    $_010010_func,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		xor    %ebx,%ebx
		mov    $_0bf324_data,%edi
		mov    $_0a0004_data,%esi
		mov    %ebx,0x00001c(%esp)
		mov    %ebx,0x000014(%esp)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x000001,%eax
		jle    _011048_jump
		mov    $0x000001,%edi
		mov    %edi,0x000020(%esp)
		cmp    %edi,%eax
		jle    _011048_jump
		lea    0x000004(%edx),%ebp

	_010d83_jump:
		mov    $0x000004,%ebx
		mov    0x000000(%ebp),%eax
		mov    $_0a0008_data,%edx
		call   _085309_func
		call   _08532e_func
		test   %eax,%eax
		jne    _010e31_jump
		mov    $0x00003d,%dl
		mov    0x000000(%ebp),%esi

	_010da7_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _010dbf_jump
		cmp    $0x000000,%al
		je     _010dbd_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _010dbf_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _010da7_jump

	_010dbd_jump:
		sub    %esi,%esi

	_010dbf_jump:
		test   %esi,%esi
		jne    _010dcd_jump
		mov    $_0a0010_data,%eax
		call   _020150_func

	_010dcd_jump:
		mov    $0x00003d,%dl
		mov    0x000000(%ebp),%esi
		mov    $_0bf324_data,%edi

	_010dd7_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _010def_jump
		cmp    $0x000000,%al
		je     _010ded_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _010def_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _010dd7_jump

	_010ded_jump:
		sub    %esi,%esi

	_010def_jump:
		inc    %esi
		push   %edi

	_010df1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _010e09_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _010df1_jump

	_010e09_jump:
		pop    %edi
		mov    $_0a0044_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_010e18_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _010e30_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _010e18_jump

	_010e30_jump:
		pop    %edi

	_010e31_jump:
		mov    $0x000003,%ebx
		mov    0x000000(%ebp),%eax
		mov    $_0a0048_data,%edx
		call   _085309_func
		call   _08532e_func
		test   %eax,%eax
		jne    _010eef_jump
		mov    $0x00003d,%dl
		mov    0x000000(%ebp),%esi

	_010e55_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _010e6d_jump
		cmp    $0x000000,%al
		je     _010e6b_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _010e6d_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _010e55_jump

	_010e6b_jump:
		sub    %esi,%esi

	_010e6d_jump:
		test   %esi,%esi
		je     _011013_jump
		call   _07ab94_func
		mov    $0x000005,%ebx
		mov    $_0c214e_data,%eax
		xor    %edx,%edx
		call   _085360_func
		mov    $0x000003,%ebx
		mov    $_0c214e_data,%eax
		lea    0x000001(%esi),%edx
		xor    %ecx,%ecx
		call   _085378_func
		mov    $_0c1dbe_data,%ebx
		mov    _0c1dbc_data,%al
		mov    $_0c214e_data,%esi
		mov    %al,_0c1dbd_data
		jmp    _010ece_jump

	_010eb5_jump:
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _010eca_jump
		mov    %cl,_0c1dbd_data
		jmp    _010ed9_jump

	_010eca_jump:
		add    $0x000005,%ebx
		inc    %ecx

	_010ece_jump:
		xor    %eax,%eax
		mov    _0c1dbc_data,%al
		cmp    %eax,%ecx
		jl     _010eb5_jump

	_010ed9_jump:
		mov    _0c1dbd_data,%al
		cmp    _0c1dbc_data,%al
		je     _011013_jump
		jmp    _01100b_jump

	_010eef_jump:
		mov    $0x000003,%ebx
		mov    0x000000(%ebp),%eax
		mov    $_0a004c_data,%edx
		call   _085309_func
		call   _08532e_func
		test   %eax,%eax
		jne    _011013_jump
		mov    $0x000007,%ebx
		mov    0x000000(%ebp),%eax
		mov    $_0a0050_data,%edx
		add    $0x000003,%eax
		xor    %cl,%cl
		call   _085309_func
		call   _08532e_func
		test   %eax,%eax
		jne    _010f39_jump
		mov    _0a0058_data,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000010(%esp)

	_010f39_jump:
		mov    0x000000(%ebp),%eax
		mov    $0x000006,%ebx
		add    $0x000003,%eax
		mov    $_0a005c_data,%edx
		call   _085309_func
		call   _08532e_func
		test   %eax,%eax
		jne    _010f65_jump
		lea    0x000010(%esp),%edi
		mov    $_0a0064_data,%esi
		mov    $0x000001,%cl
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

	_010f65_jump:
		mov    0x000000(%ebp),%eax
		mov    $0x000006,%ebx
		add    $0x000003,%eax
		mov    $_0a0068_data,%edx
		call   _085309_func
		call   _08532e_func
		test   %eax,%eax
		jne    _010f91_jump
		lea    0x000010(%esp),%edi
		mov    $_0a0070_data,%esi
		mov    $0x000001,%cl
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

	_010f91_jump:
		test   %cl,%cl
		je     _011013_jump
		call   _07ab94_func
		mov    $0x000005,%ebx
		mov    $_0c214e_data,%eax
		xor    %edx,%edx
		mov    $_0c214e_data,%esi
		call   _085360_func
		mov    $0x000003,%ebx
		lea    0x000010(%esp),%edx
		mov    $_0c214e_data,%eax
		xor    %ecx,%ecx
		call   _085378_func
		mov    _0c1dbc_data,%al
		mov    $_0c1dbe_data,%ebx
		mov    %al,_0c1dbd_data
		jmp    _010ff3_jump

	_010fda_jump:
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _010fef_jump
		mov    %cl,_0c1dbd_data
		jmp    _010ffe_jump

	_010fef_jump:
		add    $0x000005,%ebx
		inc    %ecx

	_010ff3_jump:
		xor    %eax,%eax
		mov    _0c1dbc_data,%al
		cmp    %eax,%ecx
		jl     _010fda_jump

	_010ffe_jump:
		mov    _0c1dbd_data,%al
		cmp    _0c1dbc_data,%al
		je     _011013_jump

	_01100b_jump:
		movl   $0x000001,0x00001c(%esp)

	_011013_jump:
		mov    0x000000(%ebp),%eax
		mov    $_0a0074_data,%edx
		call   _085309_func
		call   _0853a0_func
		test   %eax,%eax
		jne    _011030_jump
		movb   $0x000046,_0a7cde_data

	_011030_jump:
		mov    0x000020(%esp),%eax
		mov    0x000018(%esp),%edx
		inc    %eax
		add    $0x000004,%ebp
		mov    %eax,0x000020(%esp)
		cmp    %edx,%eax
		jl     _010d83_jump

	_011048_jump:
		mov    $0x000001,%bl
		mov    0x00001c(%esp),%esi
		xor    %cl,%cl
		mov    %bl,_0c33dc_data
		mov    %bl,_0c33e2_data
		mov    %cl,_0c33df_data
		test   %esi,%esi
		jne    _0110b5_jump
		cmpl   $0x000000,0x000014(%esp)
		je     _01107f_jump
		mov    %esp,%eax
		push   %eax
		push   $_0a007c_data
		call   _085441_func
		add    $0x000008,%esp
		jmp    _0110ab_jump

	_01107f_jump:
		call   _07ab94_func
		push   $_0a0098_data
		call   _085441_func
		add    $0x000004,%esp
		push   $_0a00b4_data
		call   _085441_func
		add    $0x000004,%esp
		push   $_0a00d4_data
		call   _085441_func
		add    $0x000004,%esp

	_0110ab_jump:
		mov    $0xffffffff,%eax
		call   _085464_func

	_0110b5_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0110c0_func:
		mov    _0c3364_data,%al
		cmp    $0x00000d,%al
		jb     _011107_jump
		jbe    _011139_jump
		cmp    $0x00004d,%al
		jb     _0110f4_jump
		jbe    _011132_jump
		cmp    $0x0000ee,%al
		jb     _01115c_jump
		jbe    _01114e_jump
		cmp    $0x0000ff,%al
		je     _011155_jump
		jmp    _01115c_jump

	_0110f4_jump:
		cmp    $0x000016,%al
		jb     _01115c_jump
		jbe    _011140_jump
		cmp    $0x000023,%al
		je     _011147_jump
		jmp    _01115c_jump

	_011107_jump:
		cmp    $0x000001,%al
		jb     _011119_jump
		jbe    _011124_jump
		cmp    $0x000004,%al
		jb     _01115c_jump
		jbe    _01112b_jump
		cmp    $0x000006,%al
		je     _011132_jump
		jmp    _01115c_jump

	_011119_jump:
		test   %al,%al
		jne    _01115c_jump
		push   $_0a00ec_data
		jmp    _011161_jump

	_011124_jump:
		push   $_0a00f0_data
		jmp    _011161_jump

	_01112b_jump:
		push   $_0a00f8_data
		jmp    _011161_jump

	_011132_jump:
		push   $_0a0100_data
		jmp    _011161_jump

	_011139_jump:
		push   $_0a0110_data
		jmp    _011161_jump

	_011140_jump:
		push   $_0a0120_data
		jmp    _011161_jump

	_011147_jump:
		push   $_0a0124_data
		jmp    _011161_jump

	_01114e_jump:
		push   $_0a0130_data
		jmp    _011161_jump

	_011155_jump:
		push   $_0a0134_data
		jmp    _011161_jump

	_01115c_jump:
		push   $_0a0140_data

	_011161_jump:
		call   _085441_func
		add    $0x000004,%esp
		push   $_0a0148_data
		call   _085441_func
		mov    _0c3367_data,%al
		add    $0x000004,%esp
		cmp    $0x00000a,%al
		jb     _0111bd_jump
		jbe    _011187_jump
		cmp    $0x000014,%al
		je     _011196_jump
		jmp    _0111bd_jump

	_011187_jump:
		push   $_0a014c_data
		call   _085441_func
		add    $0x000004,%esp
		jmp    _0111da_jump

	_011196_jump:
		cmpb   $0x00001e,_0c3369_data
		jne    _0111ae_jump
		push   $_0a0158_data
		call   _085441_func
		add    $0x000004,%esp
		jmp    _0111da_jump

	_0111ae_jump:
		push   $_0a0168_data
		call   _085441_func
		add    $0x000004,%esp
		jmp    _0111da_jump

	_0111bd_jump:
		xor    %eax,%eax
		mov    _0c3369_data,%al
		push   %eax
		xor    %eax,%eax
		mov    _0c3367_data,%al
		push   %eax
		push   $_0a0174_data
		call   _085441_func
		add    $0x00000c,%esp

	_0111da_jump:
		push   $_0a0184_data
		call   _085441_func
		add    $0x000004,%esp
		ret    



_0111e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    $0x0b8000,%edx
		mov    $_0a0188_data,%esi
		mov    $0x0b8000,%ebp
		mov    %edx,0x000008(%esp)
		mov    $_0a01a0_data,%edx

	_01120b_jump:
		add    $0x000002,%ebp
		movb   $0x00001e,-0x000001(%ebp)
		cmp    $0x0b80a0,%ebp
		jne    _01120b_jump
		mov    0x000008(%esp),%eax
		mov    %esi,0x00000c(%esp)
		xor    %ebp,%ebp
		mov    %eax,0x000014(%esp)
		jmp    _011247_jump

	_01122a_jump:
		mov    0x00000c(%esp),%eax
		mov    0x000014(%esp),%ecx
		mov    (%eax),%al
		inc    %ebp
		mov    %al,(%ecx)
		mov    0x00000c(%esp),%eax
		lea    0x000002(%ecx),%edi
		inc    %eax
		mov    %edi,0x000014(%esp)
		mov    %eax,0x00000c(%esp)

	_011247_jump:
		mov    %esi,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%ebp
		jb     _01122a_jump
		mov    0x000008(%esp),%eax
		mov    %edx,0x000018(%esp)
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		add    $0x0000a0,%eax
		mov    %ecx,0x00001c(%esp)
		mov    %eax,(%esp)
		jmp    _0112c9_jump

	_011271_jump:
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		lea    0x000000(,%ecx,2),%eax
		mov    (%esp),%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    0x000018(%esp),%ecx
		mov    (%ecx),%cl
		mov    %edx,%edi
		mov    %cl,(%eax,%ebp,1)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    (%esp),%eax
		add    %ecx,%ecx
		sub    %ecx,%eax
		mov    %eax,%ecx
		mov    0x000001(%ecx,%ebp,1),%ah
		add    $0x000002,%ebp
		or     $0x000080,%ah
		mov    0x00001c(%esp),%edi
		mov    %ah,-0x000001(%ecx,%ebp,1)
		mov    0x000018(%esp),%ecx
		inc    %edi
		inc    %ecx
		mov    %edi,0x00001c(%esp)
		mov    %ecx,0x000018(%esp)

	_0112c9_jump:
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    0x00001c(%esp),%ecx
		ja     _011271_jump
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		jbe    _011379_jump
		xor    %ebp,%ebp
		mov    %ebp,0x000020(%esp)
		mov    %ebp,0x000010(%esp)
		mov    %ebx,%ebp
		jmp    _011367_jump

	_0112fd_jump:
		mov    %esi,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %edx,%edi
		mov    %ecx,0x000004(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000004(%esp),%eax
		add    $0x000050,%eax
		sub    %ecx,%eax
		mov    %ebx,%edi
		mov    %eax,0x000004(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000004(%esp),%eax
		sub    %ecx,%eax
		mov    %eax,%ecx
		shr    %ecx
		lea    0x000000(,%ecx,2),%eax
		add    0x000008(%esp),%eax
		mov    0x000010(%esp),%ecx
		inc    %ebp
		add    %eax,%ecx
		mov    -0x000001(%ebp),%al
		mov    0x000010(%esp),%edi
		mov    %al,(%ecx)
		mov    0x000020(%esp),%eax
		add    $0x000002,%edi
		inc    %eax
		mov    %edi,0x000010(%esp)
		mov    %eax,0x000020(%esp)

	_011367_jump:
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    0x000020(%esp),%ecx
		ja     _0112fd_jump

	_011379_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_011384_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000028,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    $0x000028,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x00ebab,%edi
		call   _085360_func
		mov    $0x004a10,%edx
		mov    $0x00002f,%eax
		mov    %di,0x000008(%esp)
		xor    %ebx,%ebx
		mov    %dx,(%esp)
		mov    %esp,%edx
		mov    %bx,0x000004(%esp)
		call   _085492_func
		cmpw   $0x00babe,(%esp)
		sete   %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		test   %edx,%edx
		je     _011488_jump
		mov    0x000010(%esp),%eax
		xor    %al,%al
		and    $0x0000f0,%ah
		mov    %eax,%edx
		and    $0x00ffff,%edx
		sar    $0x00000c,%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    0x000010(%esp),%eax
		xor    %al,%al
		add    %edx,%edx
		and    $0x00000f,%ah
		and    $0x00ffff,%eax
		sar    $0x000008,%eax
		add    %edx,%eax
		mov    %al,(%ecx)
		mov    0x000010(%esp),%eax
		xor    %ah,%ah
		and    $0x0000f0,%al
		mov    %eax,%edx
		and    $0x00ffff,%edx
		sar    $0x000004,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    0x000010(%esp),%edx
		xor    %dh,%dh
		add    %eax,%eax
		and    $0x00000f,%dl
		mov    $0x004a10,%ebx
		and    $0x00ffff,%edx
		mov    $0x000004,%ecx
		add    %edx,%eax
		mov    %esp,%edx
		mov    %al,(%esi)
		mov    $0x00002f,%eax
		mov    %bx,(%esp)
		mov    %cx,0x000004(%esp)
		call   _085492_func
		xor    %eax,%eax
		xor    %edx,%edx
		mov    (%esp),%ax
		mov    0x000004(%esp),%dx
		cmp    %eax,%edx
		jbe    _011471_jump
		mov    %edx,%eax

	_011471_jump:
		xor    %edx,%edx
		mov    0x00000c(%esp),%dx
		cmp    %eax,%edx
		jbe    _01147e_jump
		mov    %edx,%eax

	_01147e_jump:
		xor    %edx,%edx
		mov    0x000008(%esp),%dx
		imul   %edx,%eax

	_011488_jump:
		add    $0x000028,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_011490_func:
		test   %eax,%eax
		je     _0114c8_jump
		cmp    %edx,%ebx
		jb     _0114c8_jump
		sub    %edx,%ebx
		lea    0x040000(%ebx),%edx
		cmp    %edx,%eax
		jb     _0114c8_jump
		mov    %eax,%ebx
		sub    %edx,%ebx
		lea    0x000200(%ebx),%edx
		shr    $0x00000a,%edx
		add    $0x000200,%eax
		push   %edx
		shr    $0x00000a,%eax
		push   %eax
		push   $_0a01c0_data
		call   _085441_func
		add    $0x00000c,%esp

	_0114c8_jump:
		ret    



_0114cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    $0x3eb00000,%ecx
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,0x00000c(%esp)
		mov    %ah,0x000008(%esp)
		call   _084980_func
		mov    %eax,%edi
		call   _0854a5_func
		call   _085695_func
		push   %edx
		push   %eax
		push   $_0a01f4_data
		call   _085441_func
		xor    %eax,%eax
		mov    _0c1dbd_data,%al
		shl    $0x000005,%eax
		add    $0x00000c,%esp
		mov    _0c1f4e_data(%eax),%edx
		mov    _0c1f56_data(%eax),%esi
		mov    _0c1f5e_data(%eax),%ecx
		mov    _0c1f66_data(%eax),%ebx
		shl    $0x00000a,%edx
		shl    $0x00000a,%esi
		shl    $0x00000a,%ecx
		shl    $0x00000a,%ebx
		mov    %edx,(%esp)
		mov    %edx,_0c101c_data
		mov    %esi,_0c1064_data
		mov    %ecx,_0c0ff4_data
		mov    %ebx,0x000004(%esp)
		mov    %ebx,_0c0fec_data
		mov    _0c1f52_data(%eax),%edx
		mov    (%esp),%ebp
		shl    $0x00000a,%edx
		mov    _0c1f6a_data(%eax),%ebx
		mov    %edx,(%esp)
		mov    %edx,_0c1060_data
		mov    _0c1f5a_data(%eax),%edx
		add    (%esp),%ebp
		shl    $0x00000a,%edx
		add    %ebp,%esi
		mov    %edx,_0c0ff0_data
		add    %esi,%edx
		shl    $0x00000a,%ebx
		add    %ecx,%edx
		mov    0x000004(%esp),%ecx
		mov    _0c1f62_data(%eax),%eax
		add    %ecx,%edx
		shl    $0x00000a,%eax
		add    %ebx,%edx
		add    %edx,%eax
		mov    %ebx,_0c0fe0_data
		lea    0x0c0800(%eax),%esi
		mov    $0x3eb00000,%ecx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _0854a5_func
		call   _085695_func
		push   %edx
		push   %eax
		push   $_0a0218_data
		call   _085441_func
		add    $0x00000c,%esp
		push   $_0a0234_data
		call   _085441_func
		add    $0x000004,%esp
		lea    0x000008(%esp),%edx
		lea    0x00000c(%esp),%eax
		call   _011384_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _011610_jump
		add    $0x000200,%eax
		shr    $0x00000a,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		push   %eax
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		push   %eax
		push   $_0a0250_data
		call   _085441_func
		add    $0x000010,%esp
		jmp    _01161d_jump

	_011610_jump:
		push   $_0a0278_data
		call   _085441_func
		add    $0x000004,%esp

	_01161d_jump:
		push   $_0a0288_data
		call   _085441_func
		mov    _0c3379_data,%al
		add    $0x000004,%esp
		cmp    $0x000003,%al
		jb     _011668_jump
		jbe    _01163b_jump
		cmp    $0x000004,%al
		je     _011661_jump
		jmp    _011668_jump

	_01163b_jump:
		push   $_0a028c_data
		call   _085441_func
		add    $0x000004,%esp
		push   $_0a02a8_data
		call   _085441_func
		add    $0x000004,%esp
		mov    $0xffffffff,%eax
		call   _085464_func
		jmp    _01169d_jump

	_011661_jump:
		push   $_0a02c8_data
		jmp    _011695_jump

	_011668_jump:
		mov    _0c3379_data,%dh
		cmp    $0x000005,%dh
		jne    _01167a_jump
		push   $_0a02e4_data
		jmp    _011695_jump

	_01167a_jump:
		jbe    _011690_jump
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		push   $_0a0304_data
		call   _085441_func
		add    $0x000008,%esp
		jmp    _01169d_jump

	_011690_jump:
		push   $_0a0328_data

	_011695_jump:
		call   _085441_func
		add    $0x000004,%esp

	_01169d_jump:
		mov    _0c336d_data,%al
		cmp    $0x000081,%al
		jb     _0116b5_jump
		jbe    _0116d1_jump
		cmp    $0x000082,%al
		jbe    _0116e0_jump
		cmp    $0x000083,%al
		je     _0116fe_jump
		jmp    _011737_jump

	_0116b5_jump:
		test   %al,%al
		jbe    _0116c2_jump
		cmp    $0x000001,%al
		je     _0116ef_jump
		jmp    _011737_jump

	_0116c2_jump:
		push   $_0a0348_data
		call   _085441_func
		add    $0x000004,%esp
		jmp    _011737_jump

	_0116d1_jump:
		push   $_0a0360_data
		call   _085441_func
		add    $0x000004,%esp
		jmp    _011737_jump

	_0116e0_jump:
		push   $_0a0380_data
		call   _085441_func
		add    $0x000004,%esp
		jmp    _011737_jump

	_0116ef_jump:
		push   $_0a03a4_data
		call   _085441_func
		add    $0x000004,%esp
		jmp    _011737_jump

	_0116fe_jump:
		mov    _0c336b_data,%bh
		cmp    $0x000004,%bh
		jne    _01171d_jump
		xor    %eax,%eax
		mov    _0c336a_data,%al
		push   %eax
		xor    %eax,%eax
		mov    %bh,%al
		push   %eax
		push   $_0a03c4_data
		jmp    _01172f_jump

	_01171d_jump:
		xor    %eax,%eax
		mov    _0c336a_data,%al
		push   %eax
		xor    %eax,%eax
		mov    %bh,%al
		push   %eax
		push   $_0a03dc_data

	_01172f_jump:
		call   _085441_func
		add    $0x00000c,%esp

	_011737_jump:
		call   _0110c0_func
		xor    %al,%al
		mov    %al,_0c336e_data
		cmpb   $0x000000,_0c336d_data
		je     _01175f_jump
		cmpb   $0x000004,_0c336b_data
		jae    _01175f_jump
		mov    $0xffffffff,%eax
		call   _085464_func

	_01175f_jump:
		cmp    %esi,%edi
		jae    _0117a0_jump
		push   $_0a03f8_data
		call   _085441_func
		mov    _0bf2f4_data,%eax
		add    $0x000004,%esp
		mov    0x0002e8(%eax),%ebp
		push   %ebp
		push   $_0a0420_data
		mov    %esi,%ebx
		call   _085441_func
		add    $0x000008,%esp
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _011490_func
		mov    $0xffffffff,%eax
		call   _085464_func
		jmp    _0117bc_jump

	_0117a0_jump:
		xor    %dh,%dh
		mov    $0x000001,%bl
		mov    %dh,_0c3385_data
		mov    %bl,_0c3372_data
		mov    %dh,_0c336f_data
		mov    %bl,_0c3373_data

	_0117bc_jump:
		cmpb   $0x000000,_0c3372_data
		je     _0117cc_jump
		push   $_0a0428_data
		jmp    _0117d1_jump

	_0117cc_jump:
		push   $_0a0444_data

	_0117d1_jump:
		call   _085441_func
		add    $0x000004,%esp
		push   $_0a0184_data
		call   _085441_func
		add    $0x000004,%esp
		call   _0117f8_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0117f8_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    $0x000300,%edx
		mov    %ah,_0c3368_data
		mov    %ah,_0c3363_data
		mov    $0x000010,%eax
		call   _08529c_func
		mov    %eax,_0c0fe4_data
		test   %eax,%eax
		jne    _01182a_jump
		mov    $_0a045c_data,%eax
		call   _020150_func

	_01182a_jump:
		xor    %dh,%dh
		mov    %dh,_0a7c9d_data
		xor    %edx,%edx
		mov    _0c1dbd_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		xor    %bl,%bl
		add    $_0c1e0e_data,%eax
		xor    %edx,%edx
		call   _0111e8_func
		mov    %bl,_0c3368_data
		call   _076c98_func
		call   _07a3f4_func
		call   _07995c_func
		mov    $0x001acc,%ebx
		mov    $_0bf388_data,%eax
		call   _085360_func
		pop    %edx
		pop    %ebx
		ret    



_01187c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $_0c320f_data,%edi
		mov    (%edx),%esi
		push   %edi

	_01188c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0118a4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _01188c_jump

	_0118a4_jump:
		pop    %edi
		call   _03fa5c_func
		push   $_0a047c_data
		call   _085441_func
		add    $0x000004,%esp
		mov    $_0a0480_data,%eax
		mov    $_0c3369_data,%edx
		call   _0111e8_func
		mov    $_0c3367_data,%eax
		call   _0812dc_func
		mov    $_0c336a_data,%edx
		mov    %al,_0c3364_data
		mov    $_0c336b_data,%eax
		call   _0811b0_func
		mov    %al,_0c336d_data
		xor    %ah,%ah
		mov    %ebx,%edx
		mov    %ah,_0a7d28_data
		mov    %ecx,%eax
		call   _010d38_func
		call   _011904_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_011904_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    $0x000001,%dl
		xor    %ah,%ah
		mov    $0x000140,%ebx
		mov    %ah,(%esp)
		call   _017dfe_func
		mov    %al,_0c3379_data
		mov    $0x000001,%eax
		xor    %ecx,%ecx
		call   _06a9d8_func
		mov    %dl,_0c33a3_data
		call   _0424b0_func
		mov    $_060a48_func,%eax
		mov    $0x0000c8,%edx
		call   _08586d_func
		call   _06a960_func
		call   _0114cc_func
		xor    %eax,%eax
		call   _017eca_func
		xor    %dh,%dh
		mov    $0x000005,%bl
		mov    %dh,_0c338d_data
		call   _05ee1c_func
		call   _0600dc_func
		call   _070714_func
		call   _0205f8_func
		call   _060658_func
		call   _04f46c_func
		call   _026b98_func
		call   _060c8c_func
		mov    %bl,_0c338a_data
		cmpb   $0x000000,_0c33c5_data
		jne    _011c34_jump
		mov    $0x00000f,%ebp
		mov    $0x000140,%edi
		mov    $0x0000c8,%esi

	_0119ae_jump:
		call   _0709d0_func
		call   _0605d0_jump
		call   _08220c_func
		call   _06172c_func
		call   _04fa00_func
		cmpb   $0x000000,_0c33cb_data
		jne    _011c14_jump

	_0119d4_jump:
		cmpw   $0x000000,_0c2f40_data
		jl     _011c14_jump
		cmpw   $0x000000,_0c3156_data
		je     _011c14_jump
		call   _0709d0_func
		mov    $0x000001,%eax
		call   _06a9d8_func
		call   _06057c_func
		call   _017e64_func
		mov    %esi,%edx
		mov    %edi,%ebx
		mov    _0bf320_data,%eax
		xor    %ecx,%ecx
		call   _084760_func
		xor    %eax,%eax
		call   _017eca_func
		call   _0601c4_func
		cmpb   $0x000000,_0c33cb_data
		jne    _011a4d_jump
		cmpb   $0x000000,_0c3372_data
		je     _011a4d_jump
		cmpb   $0x000000,_0c336f_data
		jne    _011a4d_jump
		mov    _0c3102_data,%eax
		sar    $0x000010,%eax
		call   _04056c_func

	_011a4d_jump:
		cmpb   $0x000000,_0c33cb_data
		jne    _011bf2_jump
		cmpw   $0x000000,_0c3156_data
		jne    _011bf2_jump
		cmpw   $0x000000,_0c3146_data
		je     _011bf2_jump
		mov    $0x000005,%eax
		call   _03fc90_func
		call   _0709d0_func
		call   _018bed_func
		call   _0602d4_func
		mov    %esp,%eax
		call   _060194_func
		cmpb   $0x000000,_0a7c9d_data
		jne    _011aad_jump
		testb  $0x000002,_0c31b3_data
		je     _011aad_jump
		call   _04f810_func

	_011aad_jump:
		mov    _0c3144_data,%eax
		sar    $0x000010,%eax
		call   _05ef1c_func
		call   _07dd78_func
		call   _03ef60_func
		cmpb   $0x000000,_0c337d_data
		je     _011adc_jump
		mov    $_0b4028_data,%edx
		mov    $0x000002,%eax
		call   _03e87c_func

	_011adc_jump:
		cmpb   $0x000000,_0c33cb_data
		jne    _011bd7_jump
		cmpw   $0x000000,_0c3146_data
		jne    _011bd7_jump
		cmpw   $0x000000,_0c3156_data
		jne    _011bd7_jump
		mov    %ebp,%eax
		call   _03fc90_func
		call   _0709d0_func
		call   _05f30c_func
		call   _05f36c_func
		call   _043394_func
		call   _04f8e8_func
		mov    _0a7c9d_data,%bh
		mov    %al,_0a7ce0_data
		test   %bh,%bh
		jne    _011b76_jump
		call   _04f810_func
		xor    %eax,%eax
		mov    _0c33a0_data,%al
		call   _03fa6c_func
		xor    %eax,%eax
		mov    _0a7cde_data,%al
		call   _04f728_func
		call   _0622d4_func
		xor    %eax,%eax
		mov    %ax,_0a7d26_data
		mov    %esp,%eax
		mov    $0x000001,%edx
		call   _010198_func
		mov    %dx,_0a7d26_data
		call   _062344_func

	_011b76_jump:
		cmpb   $0x000007,_0bf2fd_data
		jne    _011b84_jump
		call   _0302a0_func

	_011b84_jump:
		cmpb   $0x000000,_0c3372_data
		je     _011b92_jump
		call   _070a20_func

	_011b92_jump:
		mov    %esi,%edx
		xor    %eax,%eax
		mov    %edi,%ebx
		mov    _0c33a0_data,%al
		xor    %ecx,%ecx
		call   _03fa6c_func
		xor    %eax,%eax
		call   _017eca_func
		call   _043394_func
		cmpb   $0x000000,_0a7d22_data
		jne    _011bc5_jump
		call   _02ec90_func
		call   _02f654_func
		jmp    _011bca_jump

	_011bc5_jump:
		call   _02ed18_func

	_011bca_jump:
		xor    %ah,%ah
		mov    %ah,_0a7d22_data
		jmp    _011adc_jump

	_011bd7_jump:
		call   _05f244_func
		mov    $0x000001,%ecx
		call   _060608_func
		mov    %cx,_0c3156_data
		jmp    _011a4d_jump

	_011bf2_jump:
		call   _0605f8_func
		cmpb   $0x000002,_0bf2fd_data
		jne    _011c07_jump
		movb   $0x000001,_0c33cb_data

	_011c07_jump:
		cmpb   $0x000000,_0c33cb_data
		je     _0119d4_jump

	_011c14_jump:
		call   _0605d4_func
		cmpb   $0x000002,_0bf2fd_data
		jne    _011c27_jump
		call   _0301e8_func

	_011c27_jump:
		cmpb   $0x000000,_0c33c5_data
		je     _0119ae_jump

	_011c34_jump:
		call   _021390_func
		cmpb   $0x000000,_0c3372_data
		je     _011c4c_jump
		call   _070a20_func
		call   _040744_func

	_011c4c_jump:
		call   _06065c_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_011c5b_func:
		pusha  
		mov    $_012406_func,%edi
		add    $0x00005a,%edi
		mov    $0xfffffec0,%eax

	_011c69_jump:
		mov    %eax,(%edi)
		add    $0x000060,%edi
		add    $0x000004,%eax
		jne    _011c69_jump
		mov    $_0a7d3c_data,%edi
		mov    $0x0000c8,%cl

	_011c7a_jump:
		movl   $0x00ffff,(%edi)
		movl   $0x000000,0x000004(%edi)
		add    $0x000020,%edi
		dec    %cl
		jne    _011c7a_jump
		popa   
		ret    



_011c90_func:
		pusha  
		mov    %eax,_0a9666_data
		mov    %esi,%eax
		add    $0x000004,%eax
		mov    %eax,_0a963c_data
		mov    (%esi),%eax
		mov    %eax,_0a964a_data
		xor    %eax,%eax
		mov    0x00002a(%esi),%al
		sub    0x000024(%esi),%al
		mov    %eax,_0a9656_data
		neg    %eax
		mov    %eax,_0a965a_data
		xor    %eax,%eax
		mov    0x000027(%esi),%al
		sub    0x000025(%esi),%al
		mov    %eax,_0a965e_data
		neg    %eax
		mov    %eax,_0a9662_data
		mov    %esi,%ebx
		mov    $0x000003,%cl
		add    $0x000004,%ebx
		add    $0x000010,%esi
		mov    0x000004(%ebx),%eax
		mov    %eax,%edx

	_011cde_jump:
		mov    (%esi),%edi
		cmp    %eax,%edi
		jge    _011ce6_jump
		mov    %edi,%eax

	_011ce6_jump:
		cmp    %edx,%edi
		jle    _011cec_jump
		mov    %edi,%edx

	_011cec_jump:
		add    $0x000008,%esi
		dec    %cl
		jne    _011cde_jump
		cmp    $0x0000c8,%eax
		jge    _014289_jump
		or     %edx,%edx
		js     _014289_jump
		or     %eax,%eax
		jns    _011d0c_jump
		xor    %eax,%eax

	_011d0c_jump:
		mov    %eax,_0a7d38_data
		cmp    $0x0000c8,%edx
		jb     _011d1e_jump
		mov    $0x0000c7,%edx

	_011d1e_jump:
		sub    %eax,%edx
		inc    %edx
		mov    %edx,_0a9672_data
		mov    (%ebx),%esi
		mov    0x000004(%ebx),%ecx
		mov    0x000018(%ebx),%ebp
		mov    0x00001c(%ebx),%edi
		or     %ecx,%ecx
		jns    _011d3e_jump
		or     %edi,%edi
		js     _011e79_jump

	_011d3e_jump:
		cmp    $0x0000c8,%ecx
		jl     _011d52_jump
		cmp    $0x0000c8,%edi
		jge    _011e79_jump

	_011d52_jump:
		mov    0x000026(%ebx),%ah
		sub    %ebp,%esi
		mov    0x000027(%ebx),%al
		mov    _0a965a_data,%edx
		sub    %edi,%ecx
		jns    _011d74_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000020(%ebx),%ah
		neg    %esi
		mov    0x000021(%ebx),%al
		neg    %edx

	_011d74_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_011e44_func
		mov    %al,_011e61_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_011e6e_jump
		mov    %ax,_011de3_data
		or     %edx,%edx
		jns    _011dad_jump
		sub    $0x000002,%edx

	_011dad_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_011e65_jump
		mov    %ax,_011dfb_func
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _011e11_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
		data16 		.byte 0x0000b8

.data

_011de3_data:
		.ascii  "\xff\xff\xf7\xe7\x66\x89\xc2\xc1"
		.ascii  "\xe2\x10\xc1\xe8\x10\x00\xc7\x52"
		.ascii  "\x66\x89\xf0\xc1\xe0\x10\x66\xb8"

_011dfb_data:
		.ascii  "\xff\xff\xf7\xe7\x5a\x66\x89\xc2"
		.ascii  "\xc1\xe8\x10\x66\x01\xc5\x29\xf9"
		.ascii  "\x58\xbf\xac\x26\x00\x00"

_011e11_data:
		.ascii  "\x57\x01\xcf\x81\xff\x74\x27\x00"
		.ascii  "\x00\x72\x08\x81\xef\x74\x27\x00"
		.ascii  "\x00\x29\xf9\x5f\xc1\xe7\x05"

_011e28_data:
		.ascii  "\x66\x39\xaf"
		.long   _05a7bc_unknown
		.ascii  "\x76\x14\x66\x89\xaf"
		.long   _05a7bc_unknown
		.ascii  "\x88\xbf"
		.long   _05a7c4_unknown
		.ascii  "\xc6\x87"
		.long   _05a7cc_unknown

.text



_011e44_func:
		add    %ah,0x000039(%esi)
		scas   %es:(%edi),%eax
		shlb   $0x000066,0x14730005(%edi)
		mov    %ebp,0x05a7c0(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		mov    %bh,0x05a7c8(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		movb   $0x000000,0x05a7d0(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _011e28_jump

	_011e79_jump:
		mov    _0a963c_data,%ebx
		mov    0x000018(%ebx),%esi
		mov    0x00001c(%ebx),%ecx
		mov    0x000010(%ebx),%ebp
		mov    0x000014(%ebx),%edi
		or     %ecx,%ecx
		jns    _011e97_jump
		or     %edi,%edi
		js     _011fd2_jump

	_011e97_jump:
		cmp    $0x0000c8,%ecx
		jl     _011eab_jump
		cmp    $0x0000c8,%edi
		jge    _011fd2_jump

	_011eab_jump:
		mov    0x000024(%ebx),%al
		sub    %ebp,%esi
		mov    0x000025(%ebx),%ah
		mov    _0a9662_data,%edx
		sub    %edi,%ecx
		jns    _011ecd_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000026(%ebx),%al
		neg    %esi
		mov    0x000027(%ebx),%ah
		neg    %edx

	_011ecd_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_011f97_jump
		mov    %al,_011fb4_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_011fc7_jump
		mov    %ax,_011f3c_jump
		or     %edx,%edx
		jns    _011f06_jump
		sub    $0x000002,%edx

	_011f06_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_011fbe_jump
		mov    %ax,_011f54_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _011f6a_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_011f3c_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_011f54_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_011f6a_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _011f7d_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_011f7d_jump:
		pop    %edi
		shl    $0x000005,%edi

	_011f81_jump:
		cmp    %bp,_05a7bc_unknown(%edi)
		jbe    _011f9e_jump
		mov    %bp,_05a7bc_unknown(%edi)
		movb   $0x0000ff,_05a7c4_unknown(%edi)
		mov    %bh,_05a7cc_unknown(%edi)

	_011f9e_jump:
		cmp    %bp,0x05a7c0(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		jae    _011fbb_jump
		mov    %bp,0x05a7c0(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		movb   $0x0000ff,0x05a7c8(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		mov    %bh,0x05a7d0(%edi) /* Warning: address points to a valid object/reloc, but no label found */

	_011fbb_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _011f81_jump

	_011fd2_jump:
		mov    _0a963c_data,%ebx
		mov    0x000010(%ebx),%esi
		mov    0x000014(%ebx),%ecx
		mov    0x000008(%ebx),%ebp
		mov    0x00000c(%ebx),%edi
		or     %ecx,%ecx
		jns    _011ff0_jump
		or     %edi,%edi
		js     _01212b_jump

	_011ff0_jump:
		cmp    $0x0000c8,%ecx
		jl     _012004_jump
		cmp    $0x0000c8,%edi
		jge    _01212b_jump

	_012004_jump:
		mov    0x000023(%ebx),%al
		sub    %ebp,%esi
		mov    0x000022(%ebx),%ah
		mov    _0a9656_data,%edx
		sub    %edi,%ecx
		jns    _012026_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000025(%ebx),%al
		neg    %esi
		mov    0x000024(%ebx),%ah
		neg    %edx

	_012026_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0120f6_jump
		mov    %al,_012113_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_012120_jump
		mov    %ax,_012095_jump
		or     %edx,%edx
		jns    _01205f_jump
		sub    $0x000002,%edx

	_01205f_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_012117_jump
		mov    %ax,_0120ad_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _0120c3_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_012095_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_0120ad_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_0120c3_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _0120d6_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_0120d6_jump:
		pop    %edi
		shl    $0x000005,%edi

	_0120da_jump:
		cmp    %bp,_05a7bc_unknown(%edi)
		jbe    _0120f7_jump
		mov    %bp,_05a7bc_unknown(%edi)
		mov    %bh,_05a7c4_unknown(%edi)
		movb   $0x0000ff,_05a7cc_unknown(%edi)

	_0120f7_jump:
		cmp    %bp,0x05a7c0(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		jae    _012114_jump
		mov    %bp,0x05a7c0(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		mov    %bh,0x05a7c8(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		movb   $0x0000ff,0x05a7d0(%edi) /* Warning: address points to a valid object/reloc, but no label found */

	_012114_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _0120da_jump

	_01212b_jump:
		mov    _0a963c_data,%ebx
		mov    (%ebx),%ebp
		mov    0x000004(%ebx),%edi
		mov    0x000008(%ebx),%esi
		mov    0x00000c(%ebx),%ecx
		or     %ecx,%ecx
		jns    _012148_jump
		or     %edi,%edi
		js     _012283_jump

	_012148_jump:
		cmp    $0x0000c8,%ecx
		jl     _01215c_jump
		cmp    $0x0000c8,%edi
		jge    _012283_jump

	_01215c_jump:
		mov    0x000020(%ebx),%al
		sub    %ebp,%esi
		mov    0x000021(%ebx),%ah
		mov    _0a965e_data,%edx
		sub    %edi,%ecx
		jns    _01217e_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000022(%ebx),%al
		neg    %esi
		mov    0x000023(%ebx),%ah
		neg    %edx

	_01217e_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_012248_jump
		mov    %al,_012265_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_012278_jump
		mov    %ax,_0121ed_jump
		or     %edx,%edx
		jns    _0121b7_jump
		sub    $0x000002,%edx

	_0121b7_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_01226f_jump
		mov    %ax,_012205_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _01221b_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0121ed_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_012205_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_01221b_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _01222e_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_01222e_jump:
		pop    %edi
		shl    $0x000005,%edi

	_012232_jump:
		cmp    %bp,_05a7bc_unknown(%edi)
		jbe    _01224f_jump
		mov    %bp,_05a7bc_unknown(%edi)
		movb   $0x000000,_05a7c4_unknown(%edi)
		mov    %bh,_05a7cc_unknown(%edi)

	_01224f_jump:
		cmp    %bp,0x05a7c0(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		jae    _01226c_jump
		mov    %bp,0x05a7c0(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		movb   $0x000000,0x05a7c8(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		mov    %bh,0x05a7d0(%edi) /* Warning: address points to a valid object/reloc, but no label found */

	_01226c_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _012232_jump

	_012283_jump:
		mov    _0a7d38_data,%ebp
		mov    %ebp,%esi
		shl    $0x000002,%esi
		add    %ebp,%esi
		shl    $0x000006,%esi
		shl    $0x000005,%ebp
		add    _0a9666_data,%esi
		mov    %esi,_0a966a_data
		mov    %ebp,_0a966e_data

	_0122a8_jump:
		mov    _0a966e_data,%ebp
		mov    _0a7d3c_data(%ebp),%edi
		movw   $0x00ffff,_0a7d3c_data(%ebp)
		mov    _0a7d40_data(%ebp),%ecx
		movw   $0x000000,_0a7d40_data(%ebp)
		cmp    $0x007e40,%edi
		jae    _01426c_jump
		cmp    $0x007d00,%ecx
		jb     _01426c_jump
		sub    %edi,%ecx
		inc    %ecx
		mov    _0a7d50_data(%ebp),%edx
		mov    _0a7d4c_data(%ebp),%esi
		shl    $0x000010,%ecx
		sub    %esi,%edx
		xor    %eax,%eax
		inc    %edx
		shl    $0x000008,%esi
		idiv   %ecx
		mov    %eax,%ebx
		mov    _0a7d48_data(%ebp),%edx
		mov    _0a7d44_data(%ebp),%eax
		sub    %eax,%edx
		add    %eax,%esi
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,%dx
		shl    $0x000010,%edx
		mov    %bx,%ax
		rol    $0x000010,%eax
		shr    $0x000010,%ebx
		mov    %bl,%dl
		mov    %si,%bx
		xor    %esi,%esi
		shr    $0x000010,%ecx
		sub    $0x007d00,%edi
		jns    _012356_jump
		mov    %eax,%ebp
		mov    %edx,%esi
		neg    %edi
		sub    %edi,%ecx
		mul    %edi
		add    %eax,%ebx
		adc    %dl,%bh
		mov    %esi,%eax
		mul    %edi
		add    %dl,%bl
		add    %al,%bh
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ebp,%eax
		xor    %edi,%edi

	_012356_jump:
		mov    %edi,%ebp
		add    %ecx,%edi
		cmp    $0x000140,%edi
		jb     _01236a_jump
		sub    $0x000140,%edi
		sub    %edi,%ecx

	_01236a_jump:
		mov    %ebp,%edi
		add    _0a966a_data,%edi
		mov    %edi,%ebp
		and    $0x000003,%ebp
		sub    %bp,%cx
		jns    _012383_jump
		add    %bp,%cx
		mov    %ecx,%ebp
		xor    %ecx,%ecx

	_012383_jump:
		add    %ebp,%edi
		push   %ecx
		mov    %bp,%cx
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_0123e6_func,%ecx
		neg    %ecx
		jmp    *%ecx



_0123e6_func:
		pop    %ecx
		push   %ecx
		shr    $0x000002,%ecx
		lea    (%edi,%ecx,4),%edi
		mov    %cx,%bp
		shl    $0x000005,%bp
		shl    $0x000007,%cx
		sub    %bp,%cx
		sub    $_014206_jump,%ecx
		neg    %ecx
		jmp    *%ecx



_012406_func:
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _0a964a_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh

	_014206_jump:
		pop    %ecx
		and    $0x000003,%ecx
		add    %ecx,%edi
		mov    %cx,%bp
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_01426c_jump,%ecx
		neg    %ecx
		jmp    *%ecx

	_01426c_jump:
		addl   $0x000140,_0a966a_data
		addl   $0x000020,_0a966e_data
		decl   _0a9672_data
		jne    _0122a8_jump

	_014289_jump:
		popa   
		ret    



_0142d5_func:
		pushaw 
		cld    
		sub    $0x000050,%ebx
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000001,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0142f4_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0142f4_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000002,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_01431e_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _01431e_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000004,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_014348_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _014348_jump
		pop    %esi
		add    %edx,%esi
		mov    $0x0ab000,%edi
		mov    $0x000008,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_014371_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _014371_jump
		popaw  
		ret    



_0143ce_func:
		mov    $0x0003c4,%edx
		mov    $0x000f02,%eax
		out    %ax,(%dx)
		mov    $0x000fa0,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		ret    

_0143e4_switch:
		.long   0

_0143e8_switch:
		.long   0


	_0143ec_jump:
		add    %dl,-0x000077(%ebp)
		or     $_0143e8_switch,%eax
		mov    %eax,%ebp
		mov    %edx,%ecx
		and    $0x0000ff,%ecx
		mov    %ecx,_0143e4_switch
		and    $0x00ff00,%edx
		mov    %dh,_0143ec_jump
		mov    $0x000001,%ah
		mov    %edi,%ecx
		and    $0x000003,%ecx
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000001,%ch
		sub    _0143e8_switch,%esi
		mov    $0x000002,%al
		out    %ax,(%dx)

	_014429_jump:
		push   %ecx
		push   %edi
		add    _0143e8_switch,%esi
		push   %esi
		push   %ebp

	_014433_jump:
		push   %edi
		push   %esi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %esi
		pop    %edi
		add    $0x000050,%edi
		add    _0143e4_switch,%esi
		dec    %ebp
		jne    _014433_jump
		pop    %ebp
		pop    %esi
		pop    %edi
		call   _01477b_func
		mov    _0143ec_jump,%ch
		shl    %ch
		cmp    $0x000010,%ch
		jne    _014477_jump
		sub    _0143e8_switch,%esi
		sub    _0143e8_switch,%esi
		sub    _0143e8_switch,%esi
		sub    _0143e8_switch,%esi
		inc    %esi
		mov    $0x000001,%ch

	_014477_jump:
		mov    %ch,_0143ec_jump
		pop    %ecx
		shl    %ch
		cmp    $0x000010,%ch
		jne    _014429_jump
		pop    %ebp
		ret    



_01477b_func:
		shl    %ah
		cmp    $0x000010,%ah
		jne    _014785_jump
		inc    %edi
		mov    $0x000001,%ah

	_014785_jump:
		out    %ax,(%dx)
		ret    



_014788_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _0147cf_jump
		cmp    $0x000140,%eax
		ja     _0147cf_jump
		cmp    $0x000000,%ebx
		jl     _0147cf_jump
		cmp    $0x0000c8,%ebx
		ja     _0147cf_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,(%edi)
		pop    %edx
		pop    %ecx

	_0147cf_jump:
		pop    %edi
		ret    



_0147d1_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		mov    %esi,%edx
		mov    %dl,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_014802_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _014849_jump
		cmp    $0x000140,%eax
		ja     _014849_jump
		cmp    $0x000000,%ebx
		jl     _014849_jump
		cmp    $0x0000c8,%ebx
		ja     _014849_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000007,(%edi)
		pop    %edx
		pop    %ecx

	_014849_jump:
		pop    %edi
		ret    



_01484b_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _0148a2_jump
		cmp    $0x000140,%eax
		ja     _0148a2_jump
		cmp    $0x000000,%ebx
		jl     _0148a2_jump
		cmp    $0x0000c8,%ebx
		ja     _0148a2_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000008,(%edi)
		movb   $0x000007,0x000050(%edi)
		call   _01477b_func
		movb   $0x000007,(%edi)
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx

	_0148a2_jump:
		pop    %edi
		ret    



_0148a4_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _014908_jump
		cmp    $0x000140,%eax
		ja     _014908_jump
		cmp    $0x000000,%ebx
		jl     _014908_jump
		cmp    $0x0000c8,%ebx
		ja     _014908_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		call   _01477b_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _01477b_func
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx

	_014908_jump:
		pop    %edi
		ret    



_01490a_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _014951_jump
		cmp    $0x000140,%eax
		ja     _014951_jump
		cmp    $0x000000,%ebx
		jl     _014951_jump
		cmp    $0x0000c8,%ebx
		ja     _014951_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,(%edi)
		pop    %edx
		pop    %ecx

	_014951_jump:
		pop    %edi
		ret    



_014953_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _0149f2_jump
		cmp    $0x000140,%eax
		ja     _0149f2_jump
		cmp    $0x000000,%ebx
		jl     _0149f2_jump
		cmp    $0x0000c8,%ebx
		ja     _0149f2_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		call   _01477b_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _01477b_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _01477b_func
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		pop    %edx
		pop    %ecx

	_0149f2_jump:
		pop    %edi
		ret    



_0149f4_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _014a44_jump
		cmp    $0x000140,%eax
		ja     _014a44_jump
		cmp    $0x000000,%ebx
		jl     _014a44_jump
		cmp    $0x0000c8,%ebx
		ja     _014a44_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		call   _01477b_func
		movb   $0x000004,(%edi)
		pop    %edx
		pop    %ecx

	_014a44_jump:
		pop    %edi
		ret    



_014a46_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _014ae5_jump
		cmp    $0x000140,%eax
		ja     _014ae5_jump
		cmp    $0x000000,%ebx
		jl     _014ae5_jump
		cmp    $0x0000c8,%ebx
		ja     _014ae5_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _01477b_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _01477b_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _01477b_func
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		pop    %edx
		pop    %ecx

	_014ae5_jump:
		pop    %edi
		ret    



_014ae7_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _014b55_jump
		cmp    $0x000140,%eax
		ja     _014b55_jump
		cmp    $0x000000,%ebx
		jl     _014b55_jump
		cmp    $0x0000c8,%ebx
		ja     _014b55_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _01477b_func
		movb   $0x000002,(%edi)
		movb   $0x000005,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _01477b_func
		movb   $0x000004,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx

	_014b55_jump:
		pop    %edi
		ret    



_014b57_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _014c58_jump
		cmp    $0x000140,%eax
		ja     _014c58_jump
		cmp    $0x000000,%ebx
		jl     _014c58_jump
		cmp    $0x0000c8,%ebx
		ja     _014c58_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _01477b_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _01477b_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _01477b_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _01477b_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _01477b_func
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		pop    %edx
		pop    %ecx

	_014c58_jump:
		pop    %edi
		ret    



_014c5a_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _014ce6_jump
		cmp    $0x000140,%eax
		ja     _014ce6_jump
		cmp    $0x000000,%ebx
		jl     _014ce6_jump
		cmp    $0x0000c8,%ebx
		ja     _014ce6_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000004,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _01477b_func
		movb   $0x000003,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		movb   $0x000004,0x0000f0(%edi)
		call   _01477b_func
		movb   $0x000002,(%edi)
		movb   $0x000004,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _01477b_func
		movb   $0x000003,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx

	_014ce6_jump:
		pop    %edi
		ret    



_014d68_func:
		femms  
		or     $0x000008,%al

	_014d6c_jump:
		sgdtl  (%ebx)
		pop    %es



_014d70_func:
		pusha  
		cmp    $0x000000,%ebx
		jle    _014e36_jump
		cmp    $0x000000,%ecx
		jle    _014e36_jump
		shl    $0x000004,%edx
		add    %edx,%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %edx
		add    %esi,%ecx
		mov    %esi,%eax
		shr    $0x000002,%esi
		and    $0x000003,%eax
		je     _014dd1_jump
		push   %edi
		push   %ebx
		mov    _014d68_func(%eax),%al
		mov    %ecx,%ebx
		shr    $0x000002,%ebx
		cmp    %esi,%ebx
		jne    _014dc0_jump
		mov    %ecx,%ebx
		and    $0x000003,%ebx
		mov    _014d6c_jump(%ebx),%ah
		and    %ah,%al

	_014dc0_jump:
		pop    %ebx
		out    %al,(%dx)
		add    %esi,%edi
		mov    %ebx,%eax

	_014dc6_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _014dc6_jump
		pop    %edi
		inc    %esi

	_014dd1_jump:
		mov    %ecx,%eax
		shr    $0x000002,%eax
		sub    %esi,%eax
		jl     _014e36_jump
		je     _014e18_jump
		push   %edi
		push   %ecx
		push   %ebx
		add    %esi,%edi
		mov    %eax,%ecx
		mov    $0x000050,%esi
		mov    $0x00000f,%al
		sub    %ecx,%esi
		out    %al,(%dx)
		xor    %eax,%eax
		push   %edx
		mov    %ecx,%edx
		shr    $0x000002,%ecx
		and    $0x000003,%edx
		jne    _014e07_jump
		mov    %ecx,%edx

	_014dfc_jump:
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		add    %esi,%edi
		dec    %ebx
		jne    _014dfc_jump
		jmp    _014e14_jump

	_014e07_jump:
		push   %ecx
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		rep stos %al,%es:(%edi)
		pop    %ecx
		add    %esi,%edi
		dec    %ebx
		jne    _014e07_jump

	_014e14_jump:
		pop    %edx
		pop    %ebx
		pop    %ecx
		pop    %edi

	_014e18_jump:
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		and    $0x000003,%eax
		je     _014e36_jump
		mov    _014d6c_jump(%eax),%al
		add    %ecx,%edi
		out    %al,(%dx)
		mov    %ebx,%eax

	_014e2d_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _014e2d_jump

	_014e36_jump:
		popa   
		ret    



_014e38_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		pop    %ebp
		pop    %ecx
		push   %edi
		mov    %ecx,%ebx
		inc    %ebx

	_014e68_jump:
		movb   $0x0000ff,(%edi)
		add    $0x000050,%edi
		dec    %ebx
		jne    _014e68_jump
		pop    %edi
		call   _01477b_func
		mov    %ecx,%ebx
		dec    %ebp
		push   %ecx
		mov    %ecx,%ebx
		shl    $0x000006,%ecx
		shl    $0x000004,%ebx
		add    %ecx,%ebx

	_014e85_jump:
		movb   $0x0000ff,(%edi)
		movb   $0x0000ff,(%edi,%ebx,1)
		call   _01477b_func
		dec    %ebp
		jne    _014e85_jump
		pop    %ecx
		inc    %ecx

	_014e96_jump:
		movb   $0x0000ff,(%edi)
		add    $0x000050,%edi
		dec    %ecx
		jne    _014e96_jump
		pop    %edi
		pop    %ebp
		ret    



_0161e0_func:
		pusha  
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_016201_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _016201_jump
		popa   
		ret    



_0162cd_func:
		push   %edx
		mov    $0x0003d4,%dx
		mov    $0x00000c,%al
		out    %ax,(%dx)
		pop    %edx
		ret    



_0162d8_func:
		mov    $0x0003c4,%dx
		mov    %al,%ah
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %cl,(%edi)
		ret    



_0162e5_func:
		pusha  
		mov    $0x000013,%ax
		int    $0x000010
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_0a9692_data
		mov    $0x0003ce,%dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_0a9693_data
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_0a9694_data
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_0a9695_data
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_0a9696_data
		mov    $0x0003d4,%dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_0a9697_data
		popa   
		ret    



_016348_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _0a9692_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _0a9693_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _0a9694_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _0a9695_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _0a9696_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _0a9697_data,%al
		out    %al,(%dx)
		popa   
		ret    



_0163a1_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _0a9692_data,%al
		and    $0x0000ef,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _0a9693_data,%al
		and    $0x0000fd,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _0a9694_data,%al
		and    $0x0000f7,%al
		or     $0x000004,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _0a9695_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _0a9696_data,%al
		and    $0x0000bf,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _0a9697_data,%al
		or     $0x000040,%al
		out    %al,(%dx)
		popa   
		ret    



_016406_func:
		pusha  
		mov    $0x000000,%eax
		mov    $0x000050,%ebx
		mov    $0x000140,%ecx
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		popa   
		ret    



_01644e_func:
		pusha  
		mov    $0x000050,%ebp
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		popa   
		ret    



_0164d0_func:
		pusha  
		mov    $0x000003,%ax
		int    $0x000010
		popa   
		ret    

_0164d9_switch:
		.long   0

_0164dd_switch:
		.long   0

_0164e1_switch:
		.long   0

_0164e5_switch:
		.long   0

_0164e9_switch:
		.long   0

_0164ed_switch:
		.long   0

_0164f1_switch:
		.long   0

_0164f5_switch:
		.long   0

_0164f9_switch:
		.long   0

_0164fd_switch:
		.long   0

_016501_switch:
		.long   0

_016505_switch:
		.long   0

_016509_switch:
		.long   0

_01650d_switch:
		.long   0




_016511_func:
		pusha  
		dec    %esi
		mov    %esi,_0164f9_switch
		push   %ecx
		push   %edi
		mov    0x000020(%ecx),%ebx
		mov    0x000024(%ecx),%edx
		sar    $0x000002,%ebx
		mov    $0xa1a1a1a1,%eax
		inc    %ebx

	_01652a_jump:
		mov    %ebx,%ecx
		rep stos %eax,%es:(%edi)
		dec    %edx
		jne    _01652a_jump
		pop    %edi
		pop    %ecx
		mov    (%ecx),%eax
		mov    0x000004(%ecx),%ebx
		mov    %eax,_0164d9_switch
		mov    %ebx,_0164dd_switch
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%ebx
		mov    %eax,_0164e1_switch
		mov    %ebx,_0164e5_switch
		mov    0x000010(%ecx),%eax
		mov    0x000014(%ecx),%ebx
		mov    %eax,_0164e9_switch
		mov    %ebx,_0164ed_switch
		mov    0x000018(%ecx),%eax
		mov    0x00001c(%ecx),%ebx
		mov    %eax,_0164f1_switch
		mov    %ebx,_0164f5_switch
		mov    %ebx,%edx
		add    %eax,%edx
		mov    %edx,_01650d_switch
		mov    0x00002c(%ecx),%ebx
		mov    0x000030(%ecx),%eax
		mov    %ebx,_016509_switch
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _01650d_switch
		mov    %eax,_016505_switch
		mov    _0164f9_switch,%esi
		add    0x000028(%ecx),%edi
		mov    _0164e1_switch,%eax
		mov    _0164e5_switch,%ebx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %edx,%edx
		cmp    %ebx,%eax
		jbe    _016695_jump
		mov    _0164f5_switch,%ebx
		push   %eax
		mov    _016509_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _0164e1_switch
		mov    %eax,_016501_switch
		mov    %eax,_0164fd_switch
		pop    %eax
		xor    %edx,%edx

	_0165e4_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_0165ef_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x0000a1,(%edi)
		jne    _0165ff_jump
		mov    %dh,(%edi)

	_0165ff_jump:
		add    _016501_switch,%ebx
		add    _0164e5_switch,%ecx
		cmp    %eax,%ebp
		jge    _01662b_jump
		add    _0164d9_switch,%edi
		cmp    _0164e1_switch,%ecx
		jbe    _0165ef_jump
		add    _0164dd_switch,%edi
		sub    _0164e1_switch,%ecx
		jmp    _0165ef_jump

	_01662b_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _0164f9_switch,%esi
		add    _0164f1_switch,%ecx
		add    _0164ed_switch,%edi
		add    _016505_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_01664d_jump:
		je     _016658_jump
		add    _016509_switch,%esi
		dec    %edx
		jmp    _01664d_jump

	_016658_jump:
		mov    _0164fd_switch,%edx
		mov    %edx,_016501_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _01676a_jump
		cmp    $0x000000,%ecx
		jle    _0165e4_jump
		add    _0164e9_switch,%edi
		dec    %ebp
		sub    _01650d_switch,%ecx
		sub    _0164ed_switch,%edi
		subl   $0x000040,_016501_switch
		jmp    _0165e4_jump

	_016695_jump:
		mov    _016509_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _0164e5_switch
		mov    %eax,_016501_switch
		mov    %eax,_0164fd_switch
		xor    %edx,%edx
		mov    _0164f1_switch,%ebx
		mov    _0164e5_switch,%eax

	_0166bd_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_0166c8_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x000081,(%edi)
		jne    _0166d8_jump
		mov    %dh,(%edi)

	_0166d8_jump:
		add    _016501_switch,%ebx
		add    _0164e1_switch,%ecx
		cmp    %eax,%ebp
		jge    _016701_jump
		add    _0164dd_switch,%edi
		cmp    $0x000000,%ecx
		jle    _0166c8_jump
		add    _0164d9_switch,%edi
		sub    _0164e5_switch,%ecx
		jmp    _0166c8_jump

	_016701_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _0164f9_switch,%esi
		add    _0164f5_switch,%ecx
		add    _0164e9_switch,%edi
		add    _016505_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_016723_jump:
		je     _01672e_jump
		add    _016509_switch,%esi
		dec    %edx
		jmp    _016723_jump

	_01672e_jump:
		mov    _0164fd_switch,%edx
		mov    %edx,_016501_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _01676a_jump
		cmp    _0164f1_switch,%ecx
		jle    _0166bd_jump
		add    _0164ed_switch,%edi
		dec    %ebp
		sub    _01650d_switch,%ecx
		sub    _0164e9_switch,%edi
		subl   $0x000040,_016501_switch
		jmp    _0166bd_jump

	_01676a_jump:
		popa   
		ret    



_0167a0_func:
		push   %ecx
		mov    $0x003e80,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		ret    



_0167aa_func:
		imul   %edx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		movw   $0x000c00,0x000001(%edi)
		add    %edx,%edi
		movl   $0xc0e0a00,(%edi)
		add    %edx,%edi
		movl   $_0a0900_data,(%edi)
		add    %edx,%edi
		movw   $0x000000,0x000001(%edi)
		ret    



_0167d0_func:
		pusha  
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		mov    $0x000000,%eax
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_0167e7_jump:
		push   %ecx
		mov    %edx,%ecx
		test   $0x000001,%ecx
		je     _0167f4_jump
		stos   %al,%es:(%edi)
		dec    %ecx

	_0167f4_jump:
		test   $0x000002,%ecx
		je     _016801_jump
		stos   %ax,%es:(%edi)
		sub    $0x000002,%ecx

	_016801_jump:
		sar    $0x000002,%ecx
		rep stos %eax,%es:(%edi)
		add    %ebx,%edi
		pop    %ecx
		loop   _0167e7_jump
		popa   
		ret    



_01680d_func:
		cmp    $0x000002,%eax
		je     _016852_jump
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		mov    %edi,%esi
		add    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_01682b_jump:
		push   %ecx
		mov    %edx,%ecx

	_01682e_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		sub    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _016842_jump
		mov    %ah,%al
		and    $0x0000e0,%al

	_016842_jump:
		mov    %al,(%edi)
		inc    %edi
		inc    %esi
		dec    %ecx
		jne    _01682e_jump
		add    %ebx,%edi
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _01682b_jump
		ret    

	_016852_jump:
		add    %ecx,%ebx
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %edx,%edi
		add    %esi,%edi
		sub    $0x000141,%edi
		mov    %edi,%esi
		sub    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_016875_jump:
		push   %ecx
		mov    %edx,%ecx

	_016878_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		add    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _01688c_jump
		mov    %ah,%al
		or     $0x00001f,%al

	_01688c_jump:
		mov    %al,(%edi)
		dec    %edi
		dec    %esi
		dec    %ecx
		jne    _016878_jump
		sub    %ebx,%edi
		sub    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _016875_jump
		ret    



_01689c_func:
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		dec    %edx
		mov    %ecx,%ebx
		push   %edi

	_0168aa_jump:
		mov    %al,(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _0168aa_jump
		mov    %edx,%ecx
		sub    $0x000140,%edi
		inc    %edi
		xchg   %al,%ah
		rep stos %al,%es:(%edi)
		add    $0x00013f,%edi
		sub    %edx,%edi
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		pop    %edi
		xchg   %al,%ah
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		mov    %ebx,%ecx
		dec    %ecx
		mov    %ah,%al
		add    $0x00013f,%edi

	_0168e2_jump:
		mov    %al,(%edi)
		mov    %al,-0x00013f(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _0168e2_jump
		mov    %al,-0x00013f(%edi)
		ret    



_0168fa_func:
		imul   0x000004(%esp),%ebx
		add    %ebx,%esi
		add    %eax,%esi
		imul   $0x000140,%edx,%edx
		add    %edx,%edi
		add    %ecx,%edi
		mov    $0x000140,%ebx
		sub    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edx
		sub    0x000008(%esp),%edx
		mov    0x00000c(%esp),%eax

	_016922_jump:
		mov    0x000008(%esp),%ecx
		test   $0x000001,%ecx
		je     _016930_jump
		movsb  %ds:(%esi),%es:(%edi)
		dec    %ecx

	_016930_jump:
		test   $0x000002,%ecx
		je     _01693d_jump
		movsw  %ds:(%esi),%es:(%edi)
		sub    $0x000002,%ecx

	_01693d_jump:
		sar    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %ebx,%edi
		add    %edx,%esi
		dec    %eax
		jne    _016922_jump
		ret    $0x00000c



_01694c_func:
		push   %ecx
		push   %eax
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    %esi,%edi
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    

	_016967_jump:
		inc    %eax
		add    %eax,(%eax)
	_01696b_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)



_01696f_func:
		push   %ecx
		push   %eax
		mov    $0x003e80,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    



_01697d_func:
		pusha  
		sub    $0x000004,%esp
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_01698b_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _016967_jump,%ebx
		add    _01696b_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _01698b_jump
		add    $0x000004,%esp
		popa   
		ret    



_0169a8_func:
		pusha  
		mov    $0x000140,%ebx
		lea    0x000140(%edx),%eax
		shr    %ecx

	_0169b6_jump:
		movl   $0x000000,(%edi)
		movl   $0x000000,(%edi,%edx,1)
		mov    %edi,%esi
		movl   $0x000000,(%edi,%ebx,1)
		movl   $0x000000,(%edi,%eax,1)
		dec    %ecx
		lea    (%esi,%ebx,2),%edi
		jne    _0169b6_jump
		popa   
		ret    



_0169db_func:
		pusha  
		cmp    $0x000000,%ecx
		jle    _016a34_jump
		cmp    $0x000000,%ebx
		jle    _016a34_jump
		sub    $0x000008,%esp
		mov    %ebx,0x000004(%esp)
		mov    %edx,%eax
		mov    %ecx,(%esp)
		mov    %esi,%ebp
		shrl   $0x000003,(%esp)
		and    $0x000007,%ecx
		je     _016a00_jump
		incl   (%esp)

	_016a00_jump:
		mov    %edi,%ebx
		mov    (%esp),%ecx
		push   %ebx
		push   %edx

	_016a07_jump:
		mov    (%esi),%edx
		mov    0x000004(%esi),%ebx
		mov    %edx,(%edi)
		mov    %ebx,0x000004(%edi)
		add    $0x000008,%esi
		add    $0x000008,%edi
		sub    $0x000001,%ecx
		jne    _016a07_jump
		pop    %edx
		pop    %ebx
		lea    0x000000(%ebp,%edx,1),%esi
		lea    (%edx,%eax,1),%edx
		lea    0x000140(%ebx),%edi
		decl   0x000004(%esp)
		jne    _016a00_jump
		add    $0x000008,%esp

	_016a34_jump:
		popa   
		ret    



_016b45_func:
		pusha  
		mov    0x000200(%esi),%eax
		sub    $0x000004,%esp
		movl   $0x000004,(%esp)

	_016b56_jump:
		test   $0x40000000,%eax
		jne    _016ba1_jump
		test   $0x80000000,%eax
		jne    _016cb4_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_016ba1_jump:
		add    _016967_jump,%edi
		add    $0x000010,%esi
		test   $0x10000000,%eax
		jne    _016bf5_jump
		test   $0x20000000,%eax
		jne    _016ccf_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_016bf5_jump:
		add    _016967_jump,%edi
		add    $0x000010,%esi
		test   $0x4000000,%eax
		jne    _016c49_jump
		test   $0x8000000,%eax
		jne    _016cea_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_016c49_jump:
		add    _016967_jump,%edi
		add    $0x000010,%esi
		test   $0x1000000,%eax
		jne    _016c9d_jump
		test   $0x2000000,%eax
		jne    _016d05_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_016c9d_jump:
		add    _016967_jump,%edi
		add    $0x000010,%esi
		shl    $0x000008,%eax
		decl   (%esp)
		jne    _016b56_jump
		jmp    _016d1d_jump

	_016cb4_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _016ba1_jump

	_016ccf_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _016bf5_jump

	_016cea_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _016c49_jump

	_016d05_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _016c9d_jump

	_016d1d_jump:
		add    $0x000004,%esp
		popa   
		ret    



_016d22_func:
		pusha  
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		mov    0x000010(%esi),%ebx
		mov    0x000014(%esi),%ecx
		mov    0x000018(%esi),%edx
		mov    0x00001c(%esi),%ebp
		mov    %ebx,0x000140(%edi)
		mov    %ecx,0x000144(%edi)
		mov    %edx,0x000148(%edi)
		mov    %ebp,0x00014c(%edi)
		mov    0x000020(%esi),%ebx
		mov    0x000024(%esi),%ecx
		mov    0x000028(%esi),%edx
		mov    0x00002c(%esi),%ebp
		mov    %ebx,0x000280(%edi)
		mov    %ecx,0x000284(%edi)
		mov    %edx,0x000288(%edi)
		mov    %ebp,0x00028c(%edi)
		mov    0x000030(%esi),%ebx
		mov    0x000034(%esi),%ecx
		mov    0x000038(%esi),%edx
		mov    0x00003c(%esi),%ebp
		mov    %ebx,0x0003c0(%edi)
		mov    %ecx,0x0003c4(%edi)
		mov    %edx,0x0003c8(%edi)
		mov    %ebp,0x0003cc(%edi)
		mov    0x000040(%esi),%ebx
		mov    0x000044(%esi),%ecx
		mov    0x000048(%esi),%edx
		mov    0x00004c(%esi),%ebp
		mov    %ebx,0x000500(%edi)
		mov    %ecx,0x000504(%edi)
		mov    %edx,0x000508(%edi)
		mov    %ebp,0x00050c(%edi)
		mov    0x000050(%esi),%ebx
		mov    0x000054(%esi),%ecx
		mov    0x000058(%esi),%edx
		mov    0x00005c(%esi),%ebp
		mov    %ebx,0x000640(%edi)
		mov    %ecx,0x000644(%edi)
		mov    %edx,0x000648(%edi)
		mov    %ebp,0x00064c(%edi)
		mov    0x000060(%esi),%ebx
		mov    0x000064(%esi),%ecx
		mov    0x000068(%esi),%edx
		mov    0x00006c(%esi),%ebp
		mov    %ebx,0x000780(%edi)
		mov    %ecx,0x000784(%edi)
		mov    %edx,0x000788(%edi)
		mov    %ebp,0x00078c(%edi)
		mov    0x000070(%esi),%ebx
		mov    0x000074(%esi),%ecx
		mov    0x000078(%esi),%edx
		mov    0x00007c(%esi),%ebp
		mov    %ebx,0x0008c0(%edi)
		mov    %ecx,0x0008c4(%edi)
		mov    %edx,0x0008c8(%edi)
		mov    %ebp,0x0008cc(%edi)
		mov    0x000080(%esi),%ebx
		mov    0x000084(%esi),%ecx
		mov    0x000088(%esi),%edx
		mov    0x00008c(%esi),%ebp
		mov    %ebx,0x000a00(%edi)
		mov    %ecx,0x000a04(%edi)
		mov    %edx,0x000a08(%edi)
		mov    %ebp,0x000a0c(%edi)
		mov    0x000090(%esi),%ebx
		mov    0x000094(%esi),%ecx
		mov    0x000098(%esi),%edx
		mov    0x00009c(%esi),%ebp
		mov    %ebx,0x000b40(%edi)
		mov    %ecx,0x000b44(%edi)
		mov    %edx,0x000b48(%edi)
		mov    %ebp,0x000b4c(%edi)
		mov    0x0000a0(%esi),%ebx
		mov    0x0000a4(%esi),%ecx
		mov    0x0000a8(%esi),%edx
		mov    0x0000ac(%esi),%ebp
		mov    %ebx,0x000c80(%edi)
		mov    %ecx,0x000c84(%edi)
		mov    %edx,0x000c88(%edi)
		mov    %ebp,0x000c8c(%edi)
		mov    0x0000b0(%esi),%ebx
		mov    0x0000b4(%esi),%ecx
		mov    0x0000b8(%esi),%edx
		mov    0x0000bc(%esi),%ebp
		mov    %ebx,0x000dc0(%edi)
		mov    %ecx,0x000dc4(%edi)
		mov    %edx,0x000dc8(%edi)
		mov    %ebp,0x000dcc(%edi)
		mov    0x0000c0(%esi),%ebx
		mov    0x0000c4(%esi),%ecx
		mov    0x0000c8(%esi),%edx
		mov    0x0000cc(%esi),%ebp
		mov    %ebx,0x000f00(%edi)
		mov    %ecx,0x000f04(%edi)
		mov    %edx,0x000f08(%edi)
		mov    %ebp,0x000f0c(%edi)
		mov    0x0000d0(%esi),%ebx
		mov    0x0000d4(%esi),%ecx
		mov    0x0000d8(%esi),%edx
		mov    0x0000dc(%esi),%ebp
		mov    %ebx,0x001040(%edi)
		mov    %ecx,0x001044(%edi)
		mov    %edx,0x001048(%edi)
		mov    %ebp,0x00104c(%edi)
		mov    0x0000e0(%esi),%ebx
		mov    0x0000e4(%esi),%ecx
		mov    0x0000e8(%esi),%edx
		mov    0x0000ec(%esi),%ebp
		mov    %ebx,0x001180(%edi)
		mov    %ecx,0x001184(%edi)
		mov    %edx,0x001188(%edi)
		mov    %ebp,0x00118c(%edi)
		mov    0x0000f0(%esi),%ebx
		mov    0x0000f4(%esi),%ecx
		mov    0x0000f8(%esi),%edx
		mov    0x0000fc(%esi),%ebp
		mov    %ebx,0x0012c0(%edi)
		mov    %ecx,0x0012c4(%edi)
		mov    %edx,0x0012c8(%edi)
		mov    %ebp,0x0012cc(%edi)
		popa   
		ret    

_016fb7_switch:
		.long   0




_016fbb_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_016fb7_switch
		cmp    _0c0eb0_data,%eax
		jl     _01700a_jump
		add    %eax,%edx
		cmp    _0c0eac_data,%edx
		ja     _016ff3_jump
		mov    $0x000004,%cl

	_016fd9_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0c0ebc_data,%ebx
		jl     _017043_jump

	_016fe5_jump:
		add    %ebx,%edx
		cmp    _0c0eb4_data,%edx
		ja     _01702f_jump

	_016fef_jump:
		clc    
		ret    

	_016ff1_jump:
		stc    
		ret    

	_016ff3_jump:
		cmp    _0c0eac_data,%eax
		jae    _016ff1_jump
		mov    _0c0eac_data,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _017090_jump

	_01700a_jump:
		sub    _0c0eb0_data,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _016ff1_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		lea    (%esi,%eax,1),%esi
		lea    (%edi,%eax,1),%edi
		mov    _0c0eb0_data,%eax
		shr    $0x000002,%cl
		jmp    _016fd9_jump

	_01702f_jump:
		cmp    _0c0eb4_data,%ebx
		jae    _016ff1_jump
		mov    _0c0eb4_data,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _016fef_jump

	_017043_jump:
		add    %ebx,%edx
		cmp    _0c0ebc_data,%edx
		jle    _016ff1_jump
		xor    %edx,%edx
		sub    _0c0ebc_data,%ebx
		mov    %ch,%dl
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _016fb7_switch,%eax
		mul    %bx
		add    %eax,%esi
		mov    _016967_jump,%eax
		mul    %bx
		add    %eax,%edi

	_017078_jump:
		shll   $0x000002,0x000008(%esp)
		dec    %ebx
		jne    _017078_jump
		pop    %eax
		mov    _0c0ebc_data,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _016fe5_jump

	_017090_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _016fd9_jump
		inc    %cl
		jmp    _016fd9_jump



_0170a7_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		mov    0x000200(%esi),%ebp
		mov    %ebp,(%esp)
		call   _016fbb_func
		jb     _01723a_jump
		mov    (%esp),%eax
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _01715c_jump
		cmp    $0x000002,%cl
		je     _0171bd_jump
		cmp    $0x000001,%cl
		je     _017206_jump

	_0170e6_jump:
		test   $0x40000000,%eax
		jne    _01710a_jump
		test   $0x80000000,%eax
		je     _017121_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)

	_01710a_jump:
		add    _016967_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _0170e6_jump
		jmp    _01723a_jump

	_017121_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)
		jmp    _01710a_jump

	_01715c_jump:
		test   $0x40000000,%eax
		jne    _01717a_jump
		test   $0x80000000,%eax
		je     _017191_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)

	_01717a_jump:
		add    _016967_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _01715c_jump
		jmp    _01723a_jump

	_017191_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x000008(%esi),%ebx
		and    %ecx,0x000008(%edi)
		or     %ebx,0x000008(%edi)
		jmp    _01717a_jump

	_0171bd_jump:
		test   $0x40000000,%eax
		jne    _0171d5_jump
		test   $0x80000000,%eax
		je     _0171e9_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)

	_0171d5_jump:
		add    _016967_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _0171bd_jump
		jmp    _01723a_jump

	_0171e9_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		jmp    _0171d5_jump

	_017206_jump:
		test   $0x40000000,%eax
		jne    _017218_jump
		test   $0x80000000,%eax
		je     _01722c_jump
		mov    (%esi),%ebx
		mov    %ebx,(%edi)

	_017218_jump:
		add    _016967_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _017206_jump
		jmp    _01723a_jump

	_01722c_jump:
		mov    0x000100(%esi),%ecx
		mov    (%esi),%ebx
		and    %ecx,(%edi)
		or     %ebx,(%edi)
		jmp    _017218_jump

	_01723a_jump:
		add    $0x000005,%esp
		popa   
		ret    



_01723f_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		movl   $0x000000,(%esp)
		call   _016fbb_func
		jb     _0172e5_jump
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _017294_jump
		cmp    $0x000002,%cl
		je     _0172b5_jump
		cmp    $0x000001,%cl
		je     _0172d0_jump

	_01726d_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		add    _016967_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _01726d_jump
		jmp    _0172e5_jump

	_017294_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		add    _016967_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _017294_jump
		jmp    _0172e5_jump

	_0172b5_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		add    _016967_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _0172b5_jump
		jmp    _0172e5_jump

	_0172d0_jump:
		mov    (%esi),%ebx
		mov    %ebx,(%edi)
		add    _016967_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _0172d0_jump
		jmp    _0172e5_jump

	_0172e5_jump:
		add    $0x000005,%esp
		popa   
		ret    



_0172ea_func:
		pusha  
		add    _0a9828_data(,%ebx,4),%eax
		mov    %esi,%edx
		mov    %dl,(%edi,%eax,1)
		popa   
		ret    

_0172f9_switch:
		.long   0

_0172fd_switch:
		.long   0

_017301_switch:
		.long   0

_017305_switch:
		.long   0




_017321_func:
		push   %eax
		push   %edi
		cmp    _017301_switch,%eax
		jl     _01734e_jump
		cmp    _017305_switch,%eax
		ja     _01734e_jump
		cmp    _0172f9_switch,%ebx
		jl     _01734e_jump
		cmp    _0172fd_switch,%ebx
		ja     _01734e_jump
		add    _0a9828_data(,%ebx,4),%eax
		movb   $0x000005,(%edi,%eax,1)

	_01734e_jump:
		pop    %edi
		pop    %eax
		ret    



_017351_func:
		push   %eax
		push   %edi
		cmp    _017301_switch,%eax
		jl     _01737e_jump
		cmp    _017305_switch,%eax
		ja     _01737e_jump
		cmp    _0172f9_switch,%ebx
		jl     _01737e_jump
		cmp    _0172fd_switch,%ebx
		ja     _01737e_jump
		add    _0a9828_data(,%ebx,4),%eax
		movb   $0x000007,(%edi,%eax,1)

	_01737e_jump:
		pop    %edi
		pop    %eax
		ret    



_017381_func:
		push   %edi
		push   %eax
		cmp    _017301_switch,%eax
		jl     _0173ba_jump
		cmp    _017305_switch,%eax
		ja     _0173ba_jump
		cmp    _0172f9_switch,%ebx
		jl     _0173ba_jump
		cmp    _0172fd_switch,%ebx
		ja     _0173ba_jump
		add    _0a9828_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000807,(%edi)
		movw   $0x000706,0x000140(%edi)

	_0173ba_jump:
		pop    %eax
		pop    %edi
		ret    



_0173bd_func:
		push   %edi
		push   %eax
		cmp    _017301_switch,%eax
		jl     _017403_jump
		cmp    _017305_switch,%eax
		ja     _017403_jump
		cmp    _0172f9_switch,%ebx
		jl     _017403_jump
		cmp    _0172fd_switch,%ebx
		ja     _017403_jump
		add    _0a9828_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000608,0x000140(%edi)
		movb   $0x000006,0x000142(%edi)
		movb   $0x000006,0x000001(%edi)
		movb   $0x000006,0x000281(%edi)

	_017403_jump:
		pop    %eax
		pop    %edi
		ret    



_017406_func:
		push   %edi
		push   %eax
		cmp    _017301_switch,%eax
		jl     _017433_jump
		cmp    _017305_switch,%eax
		ja     _017433_jump
		cmp    _0172f9_switch,%ebx
		jl     _017433_jump
		cmp    _0172fd_switch,%ebx
		ja     _017433_jump
		add    _0a9828_data(,%ebx,4),%eax
		movb   $0x000003,(%edi,%eax,1)

	_017433_jump:
		pop    %eax
		pop    %edi
		ret    



_017436_func:
		push   %edi
		push   %eax
		cmp    _017301_switch,%eax
		jl     _017484_jump
		cmp    _017305_switch,%eax
		ja     _017484_jump
		cmp    _0172f9_switch,%ebx
		jl     _017484_jump
		cmp    _0172fd_switch,%ebx
		ja     _017484_jump
		add    _0a9828_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000505,0x000001(%edi)
		movl   $0x5070705,0x000140(%edi)
		movl   $0x5070705,0x000280(%edi)
		movw   $0x000505,0x0003c1(%edi)

	_017484_jump:
		pop    %eax
		pop    %edi
		ret    



_017487_func:
		push   %edi
		push   %eax
		cmp    _017301_switch,%eax
		jl     _0174bd_jump
		cmp    _017305_switch,%eax
		ja     _0174bd_jump
		cmp    _0172f9_switch,%ebx
		jl     _0174bd_jump
		cmp    _0172fd_switch,%ebx
		ja     _0174bd_jump
		add    _0a9828_data(,%ebx,4),%eax
		add    %eax,%edi
		movb   $0x000005,0x000140(%edi)
		movb   $0x000004,0x000001(%edi)

	_0174bd_jump:
		pop    %eax
		pop    %edi
		ret    



_0174c0_func:
		push   %edi
		push   %eax
		cmp    _017301_switch,%eax
		jl     _01750e_jump
		cmp    _017305_switch,%eax
		ja     _01750e_jump
		cmp    _0172f9_switch,%ebx
		jl     _01750e_jump
		cmp    _0172fd_switch,%ebx
		ja     _01750e_jump
		add    _0a9828_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000001(%edi)
		movl   $0x6080806,0x000140(%edi)
		movl   $0x6080806,0x000280(%edi)
		movw   $0x000606,0x0003c1(%edi)

	_01750e_jump:
		pop    %eax
		pop    %edi
		ret    



_017511_func:
		push   %edi
		push   %eax
		cmp    _017301_switch,%eax
		jl     _01755b_jump
		cmp    _017305_switch,%eax
		ja     _01755b_jump
		cmp    _0172f9_switch,%ebx
		jl     _01755b_jump
		cmp    _0172fd_switch,%ebx
		ja     _01755b_jump
		add    _0a9828_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000204,0x000001(%edi)
		movw   $0x000305,0x000140(%edi)
		movb   $0x000002,0x000142(%edi)
		movw   $0x000603,0x000280(%edi)

	_01755b_jump:
		pop    %eax
		pop    %edi
		ret    



_01755e_func:
		push   %edi
		push   %eax
		cmp    _017301_switch,%eax
		jl     _0175d2_jump
		cmp    _017305_switch,%eax
		ja     _0175d2_jump
		cmp    _0172f9_switch,%ebx
		jl     _0175d2_jump
		cmp    _0172fd_switch,%ebx
		ja     _0175d2_jump
		add    _0a9828_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000002(%edi)
		movl   $0x7080807,0x000141(%edi)
		movl   $0x8080806,0x000280(%edi)
		movl   $0x8080806,0x0003c0(%edi)
		movl   $0x7080807,0x000501(%edi)
		movw   $0x000606,0x000642(%edi)
		movw   $0x000608,0x000284(%edi)
		movw   $0x000608,0x0003c4(%edi)

	_0175d2_jump:
		pop    %eax
		pop    %edi
		ret    



_0175d5_func:
		push   %edi
		push   %eax
		cmp    _017301_switch,%eax
		jl     _01762f_jump
		cmp    _017305_switch,%eax
		ja     _01762f_jump
		cmp    _0172f9_switch,%ebx
		jl     _01762f_jump
		cmp    _0172fd_switch,%ebx
		ja     _01762f_jump
		add    _0a9828_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000203,0x000002(%edi)
		movb   $0x000003,0x000141(%edi)
		movw   $0x000402,0x000142(%edi)
		movw   $0x000405,0x000280(%edi)
		movb   $0x000003,0x000282(%edi)
		movw   $0x000604,0x0003c0(%edi)

	_01762f_jump:
		pop    %eax
		pop    %edi
		ret    

	_017632_jump:
		inc    %eax
		add    %eax,(%eax)
	_017636_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)

_01763a_switch:
		.long   0




_01763e_func:
		pusha  
		cli    
		cld    
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0c30c4_data
		sbbw   $0x000000,_0c30c4_data
		shr    %al
		movw   $0x000001,_0c30c6_data
		sbbw   $0x000000,_0c30c6_data
		shr    %al
		movw   $0x000001,_0c30c0_data
		sbbw   $0x000000,_0c30c0_data
		shr    %al
		movw   $0x000001,_0c30c2_data
		sbbw   $0x000000,_0c30c2_data
		mov    _0a7d26_data,%ax
		cmp    $0x000001,%ax
		je     _01770f_jump
		and    $0x000003,%ebx
		jne    _0176f3_jump
		movw   $0x000000,_0c301a_data
		movw   $0x000000,_0c3018_data
		mov    $0x0007d0,%ebx
		call   _018b72_func
		mov    %eax,_01763a_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_0176cc_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0c301a_data,%ax
		je     _017712_jump

	_0176db_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0c3018_data,%ax
		je     _017725_jump

	_0176e9_jump:
		dec    %ebx
		je     _0176f3_jump
		and    $0x000003,%ebp
		jne    _0176cc_jump
		jmp    _01770f_jump

	_0176f3_jump:
		mov    _0c3022_data,%bx
		mov    %bx,_0c301a_data
		mov    _0c3020_data,%bx
		mov    %bx,_0c3018_data

	_01770f_jump:
		sti    
		popa   
		ret    

	_017712_jump:
		call   _018b72_func
		sub    _01763a_switch,%eax
		mov    %ax,_0c301a_data
		jmp    _0176db_jump

	_017725_jump:
		call   _018b72_func
		sub    _01763a_switch,%eax
		mov    %ax,_0c3018_data
		jmp    _0176e9_jump



_017738_func:
		pusha  
		cli    
		cld    
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0c30c0_data
		sbbw   $0x000000,_0c30c0_data
		shr    %al
		movw   $0x000001,_0c30c2_data
		sbbw   $0x000000,_0c30c2_data
		shr    %al
		movw   $0x000001,_0c30c4_data
		sbbw   $0x000000,_0c30c4_data
		shr    %al
		movw   $0x000001,_0c30c6_data
		sbbw   $0x000000,_0c30c6_data
		mov    _0a7d26_data,%ax
		cmp    $0x000001,%ax
		je     _01770f_jump
		and    $0x00000c,%ebx
		jne    _0177f1_jump
		movw   $0x000000,_0c301a_data
		movw   $0x000000,_0c3018_data
		mov    $0x0007d0,%ebx
		call   _018b72_func
		mov    %eax,_01763a_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_0177ca_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0c301a_data,%ax
		je     _017810_jump

	_0177d9_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0c3018_data,%ax
		je     _017823_jump

	_0177e7_jump:
		dec    %ebx
		je     _0177f1_jump
		and    $0x00000c,%ebp
		jne    _0177ca_jump
		jmp    _01780d_jump

	_0177f1_jump:
		mov    _0c3022_data,%bx
		mov    %bx,_0c301a_data
		mov    _0c3020_data,%bx
		mov    %bx,_0c3018_data

	_01780d_jump:
		sti    
		popa   
		ret    

	_017810_jump:
		call   _018b72_func
		sub    _01763a_switch,%eax
		mov    %ax,_0c301a_data
		jmp    _0177d9_jump

	_017823_jump:
		call   _018b72_func
		sub    _01763a_switch,%eax
		mov    %ax,_0c3018_data
		jmp    _0177e7_jump



_017836_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0c301a_data
		movw   $0x000000,_0c3018_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0c30c4_data
		sbbw   $0x000000,_0c30c4_data
		shr    %al
		movw   $0x000001,_0c30c6_data
		sbbw   $0x000000,_0c30c6_data
		shr    %al
		movw   $0x000001,_0c30c0_data
		sbbw   $0x000000,_0c30c0_data
		shr    %al
		movw   $0x000001,_0c30c2_data
		sbbw   $0x000000,_0c30c2_data
		and    $0x000003,%ebx
		jne    _0178d5_jump
		mov    $0x0007d0,%ebx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_0178ae_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		je     _0178bd_jump
		incw   _0c301a_data

	_0178bd_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		je     _0178cb_jump
		incw   _0c3018_data

	_0178cb_jump:
		dec    %ebx
		je     _0178d5_jump
		and    $0x000003,%ebp
		jne    _0178ae_jump
		jmp    _0178f1_jump

	_0178d5_jump:
		mov    _0c3022_data,%bx
		mov    %bx,_0c301a_data
		mov    _0c3020_data,%bx
		mov    %bx,_0c3018_data

	_0178f1_jump:
		sti    
		popa   
		ret    



_0178f4_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0c301a_data
		movw   $0x000000,_0c3018_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0c30c0_data
		sbbw   $0x000000,_0c30c0_data
		shr    %al
		movw   $0x000001,_0c30c2_data
		sbbw   $0x000000,_0c30c2_data
		shr    %al
		movw   $0x000001,_0c30c4_data
		sbbw   $0x000000,_0c30c4_data
		shr    %al
		movw   $0x000001,_0c30c6_data
		sbbw   $0x000000,_0c30c6_data
		and    $0x00000c,%ebx
		jne    _0179a1_jump
		mov    $0x0007d0,%ebx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_01796c_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0c301a_data,%ax
		je     _017982_jump
		incw   _0c301a_data

	_017982_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0c3018_data,%ax
		je     _017997_jump
		incw   _0c3018_data

	_017997_jump:
		dec    %ebx
		je     _0179a1_jump
		and    $0x00000c,%ebp
		jne    _01796c_jump
		jmp    _0179bd_jump

	_0179a1_jump:
		mov    _0c3022_data,%bx
		mov    %bx,_0c301a_data
		mov    _0c3020_data,%bx
		mov    %bx,_0c3018_data

	_0179bd_jump:
		sti    
		popa   
		ret    



_0179c0_func:
		pusha  
		cli    
		cld    
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx
		mov    $0x0000ff,%eax
		out    %al,(%dx)

	_0179d2_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000003,%ebp
		je     _0179e5_jump
		dec    %ebx
		jne    _0179d2_jump

	_0179dd_jump:
		popa   
		mov    $0x000000,%eax
		jmp    _0179f3_jump

	_0179e5_jump:
		cmp    $0x0007d0,%ebx
		je     _0179dd_jump
		popa   
		mov    $0x000001,%eax

	_0179f3_jump:
		sti    
		ret    



_0179f5_func:
		pusha  
		cli    
		cld    
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx
		mov    $0x0000ff,%eax
		out    %al,(%dx)

	_017a07_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x00000c,%ebp
		je     _017a1a_jump
		dec    %ebx
		jne    _017a07_jump

	_017a12_jump:
		popa   
		mov    $0x000000,%eax
		jmp    _017a28_jump

	_017a1a_jump:
		cmp    $0x0007d0,%ebx
		je     _017a12_jump
		popa   
		mov    $0x000001,%eax

	_017a28_jump:
		sti    
		ret    



_017a2a_func:
		pusha  
		cli    
		cld    
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		movw   $0x000000,_0c301a_data
		movw   $0x000000,_0c3018_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		shr    $0x000005,%al
		movw   $0x000001,_0c30c4_data
		sbbw   $0x000000,_0c30c4_data
		shr    %al
		movw   $0x000001,_0c30c6_data
		sbbw   $0x000000,_0c30c6_data
		shr    %al
		movw   $0x000001,_0c30c0_data
		sbbw   $0x000000,_0c30c0_data
		shr    %al
		movw   $0x000001,_0c30c2_data
		sbbw   $0x000000,_0c30c2_data
		mov    0x000004(%esp),%eax
		and    $0x000003,%ebp
		jne    _017b78_jump
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %eax,0x000004(%esp)
		call   _018b72_func
		mov    %eax,_01763a_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)
		mov    0x000004(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%edx

	_017ac8_jump:
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000004(%esp)
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0c301a_data,%ax
		je     _017bbc_jump

	_017ae7_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0c3018_data,%ax
		je     _017bd2_jump

	_017af9_jump:
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%eax
		and    $0x000003,%ebp
		je     _017b9e_jump
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _017632_jump,%ebx
		add    _017636_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _017ac8_jump
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx

	_017b2b_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0c301a_data,%ax
		je     _017be8_jump

	_017b3e_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0c3018_data,%ax
		je     _017bfe_jump

	_017b50_jump:
		dec    %ebx
		je     _017b5a_jump
		and    $0x000003,%ebp
		jne    _017b2b_jump
		jmp    _017b76_jump

	_017b5a_jump:
		mov    _0c3022_data,%bx
		mov    %bx,_0c301a_data
		mov    _0c3020_data,%bx
		mov    %bx,_0c3018_data

	_017b76_jump:
		jmp    _017bb6_jump

	_017b78_jump:
		mov    _0c3022_data,%bx
		mov    %bx,_0c301a_data
		mov    _0c3020_data,%bx
		mov    %bx,_0c3018_data
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_017b9e_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _017632_jump,%ebx
		add    _017636_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _017b9e_jump

	_017bb6_jump:
		add    $0x00000c,%esp
		sti    
		popa   
		ret    

	_017bbc_jump:
		call   _018b72_func
		sub    _01763a_switch,%eax
		mov    %ax,_0c301a_data
		jmp    _017ae7_jump

	_017bd2_jump:
		call   _018b72_func
		sub    _01763a_switch,%eax
		mov    %ax,_0c3018_data
		jmp    _017af9_jump

	_017be8_jump:
		call   _018b72_func
		sub    _01763a_switch,%eax
		mov    %ax,_0c301a_data
		jmp    _017b3e_jump

	_017bfe_jump:
		call   _018b72_func
		sub    _01763a_switch,%eax
		mov    %ax,_0c3018_data
		jmp    _017b50_jump



_017c14_func:
		pusha  
		cli    
		cld    
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		movw   $0x000000,_0c301a_data
		movw   $0x000000,_0c3018_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		shr    $0x000005,%al
		movw   $0x000001,_0c30c4_data
		sbbw   $0x000000,_0c30c4_data
		shr    %al
		movw   $0x000001,_0c30c6_data
		sbbw   $0x000000,_0c30c6_data
		shr    %al
		movw   $0x000001,_0c30c0_data
		sbbw   $0x000000,_0c30c0_data
		shr    %al
		movw   $0x000001,_0c30c2_data
		sbbw   $0x000000,_0c30c2_data
		mov    0x000004(%esp),%eax
		and    $0x00000c,%ebp
		jne    _017d62_jump
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %eax,0x000004(%esp)
		call   _018b72_func
		mov    %eax,_01763a_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)
		mov    0x000004(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%edx

	_017cb2_jump:
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000004(%esp)
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0c301a_data,%ax
		je     _017da6_jump

	_017cd1_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0c3018_data,%ax
		je     _017dbc_jump

	_017ce3_jump:
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%eax
		and    $0x00000c,%ebp
		je     _017d88_jump
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _017632_jump,%ebx
		add    _017636_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _017cb2_jump
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx

	_017d15_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0c301a_data,%ax
		je     _017dd2_jump

	_017d28_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0c3018_data,%ax
		je     _017de8_jump

	_017d3a_jump:
		dec    %ebx
		je     _017d44_jump
		and    $0x00000c,%ebp
		jne    _017d15_jump
		jmp    _017d60_jump

	_017d44_jump:
		mov    _0c3022_data,%bx
		mov    %bx,_0c301a_data
		mov    _0c3020_data,%bx
		mov    %bx,_0c3018_data

	_017d60_jump:
		jmp    _017da0_jump

	_017d62_jump:
		mov    _0c3022_data,%bx
		mov    %bx,_0c301a_data
		mov    _0c3020_data,%bx
		mov    %bx,_0c3018_data
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_017d88_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _017632_jump,%ebx
		add    _017636_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _017d88_jump

	_017da0_jump:
		add    $0x00000c,%esp
		sti    
		popa   
		ret    

	_017da6_jump:
		call   _018b72_func
		sub    _01763a_switch,%eax
		mov    %ax,_0c301a_data
		jmp    _017cd1_jump

	_017dbc_jump:
		call   _018b72_func
		sub    _01763a_switch,%eax
		mov    %ax,_0c3018_data
		jmp    _017ce3_jump

	_017dd2_jump:
		call   _018b72_func
		sub    _01763a_switch,%eax
		mov    %ax,_0c301a_data
		jmp    _017d28_jump

	_017de8_jump:
		call   _018b72_func
		sub    _01763a_switch,%eax
		mov    %ax,_0c3018_data
		jmp    _017d3a_jump



_017dfe_func:
		push   %bx
		pushfw 
		mov    %sp,%ax
		and    $0x00fffc,%sp
		pushf  
		pushf  
		pop    %ebx
		or     $0x040000,%ebx
		push   %ebx
		popf   
		pushf  
		pop    %ebx
		popf   
		mov    %ax,%sp
		test   $0x040000,%ebx
		je     _017e5a_jump
		pushf  
		pop    %eax
		mov    %eax,%ebx
		xor    $0x200000,%eax
		push   %eax
		popf   
		pushf  
		pop    %eax
		push   %ebx
		popf   
		and    $0x200000,%eax
		and    $0x200000,%ebx
		cmp    %ebx,%eax
		je     _017e53_jump
		mov    $0x000001,%eax
		push   %edx
		cpuid  
		pop    %edx
		shr    $0x000008,%ax
		and    $0x00000f,%eax
		jmp    _017e5f_jump

	_017e53_jump:
		mov    $0x000004,%eax
		jmp    _017e5f_jump

	_017e5a_jump:
		mov    $0x000003,%eax

	_017e5f_jump:
		popfw  
		pop    %bx
		ret    



_017e64_func:
		movl   $0x000008,_0a9e84_data
		movl   $0x000138,_0a9e88_data
		movl   $0x000000,_0a9e8c_data
		movl   $0x0000c8,_0a9e90_data
		ret    



_017e8d_func:
		push   %ebp
		push   %edi
		mov    _0a9e84_data,%ebp
		mov    %ebp,(%eax)
		mov    _0a9e88_data,%edi
		mov    %edi,(%ebx)
		mov    _0a9e8c_data,%ebp
		mov    %ebp,(%ecx)
		mov    _0a9e90_data,%edi
		mov    %edi,(%edx)
		pop    %edi
		pop    %ebp
		ret    



_017eca_func:
		cmp    $0x000000,%eax
		jge    _017ed4_jump
		mov    $0x000000,%eax

	_017ed4_jump:
		cmp    $0x000140,%eax
		jle    _017ee0_jump
		mov    $0x000140,%eax

	_017ee0_jump:
		mov    %eax,_0a9e84_data
		cmp    $0x000000,%ebx
		jge    _017eef_jump
		mov    $0x000000,%ebx

	_017eef_jump:
		cmp    $0x000140,%ebx
		jle    _017efc_jump
		mov    $0x000140,%ebx

	_017efc_jump:
		mov    %ebx,_0a9e88_data
		cmp    $0x000000,%ecx
		jge    _017f0c_jump
		mov    $0x000000,%ecx

	_017f0c_jump:
		cmp    $0x0000c8,%ecx
		jle    _017f19_jump
		mov    $0x0000c8,%ecx

	_017f19_jump:
		mov    %ecx,_0a9e8c_data
		cmp    $0x000000,%edx
		jge    _017f29_jump
		mov    $0x000000,%edx

	_017f29_jump:
		cmp    $0x0000c8,%edx
		jle    _017f36_jump
		mov    $0x0000c8,%edx

	_017f36_jump:
		mov    %edx,_0a9e90_data
		ret    



_017f3d_func:
		pusha  
		mov    $_0a9b48_data,%edi
		mov    $0x0000c8,%ecx
		xor    %eax,%eax

	_017f4a_jump:
		mov    %eax,(%edi)
		add    $0x000004,%edi
		add    $0x000140,%eax
		dec    %ecx
		jne    _017f4a_jump
		popa   
		ret    



_017f59_func:
		pusha  
		mov    $_0a9b48_data,%edi
		mov    $0x0000c8,%ecx
		xor    %eax,%eax

	_017f66_jump:
		mov    %eax,(%edi)
		add    $0x000004,%edi
		add    $0x000050,%eax
		dec    %ecx
		jne    _017f66_jump
		popa   
		ret    



_017f73_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_0a9e6c_data
		cmp    _0a9e84_data,%eax
		jl     _017fbd_jump

	_017f85_jump:
		add    %eax,%edx
		cmp    _0a9e88_data,%edx
		ja     _017fa9_jump

	_017f8f_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0a9e8c_data,%ebx
		jl     _017fef_jump

	_017f9b_jump:
		add    %ebx,%edx
		cmp    _0a9e90_data,%edx
		ja     _017fdb_jump

	_017fa5_jump:
		clc    
		ret    

	_017fa7_jump:
		stc    
		ret    

	_017fa9_jump:
		cmp    _0a9e88_data,%eax
		jae    _017fa7_jump
		mov    _0a9e88_data,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _017f8f_jump

	_017fbd_jump:
		sub    _0a9e84_data,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _017fa7_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		add    %eax,%esi
		mov    _0a9e84_data,%eax
		jmp    _017f85_jump

	_017fdb_jump:
		cmp    _0a9e90_data,%ebx
		jae    _017fa7_jump
		mov    _0a9e90_data,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _017fa5_jump

	_017fef_jump:
		add    %ebx,%edx
		cmp    _0a9e8c_data,%edx
		jle    _017fa7_jump
		sub    _0a9e8c_data,%ebx
		xor    %edx,%edx
		neg    %ebx
		mov    %ch,%dl
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _0a9e6c_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _0a9e8c_data,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _017f9b_jump



_01802a_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_0a9e6c_data
		cmp    _0a9e84_data,%eax
		jl     _01807b_jump

	_01803c_jump:
		add    %eax,%edx
		cmp    _0a9e88_data,%edx
		ja     _01805f_jump

	_018046_jump:
		movzbl %ch,%edx
		cmp    _0a9e8c_data,%ebx
		jl     _0180ab_jump

	_018051_jump:
		add    %ebx,%edx
		cmp    _0a9e90_data,%edx
		ja     _018097_jump

	_01805b_jump:
		clc    
		ret    

	_01805d_jump:
		stc    
		ret    

	_01805f_jump:
		cmp    _0a9e88_data,%eax
		jae    _01805d_jump
		mov    _0a9e88_data,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		add    _0a9e6c_data,%esi
		sub    %edx,%esi
		jmp    _018046_jump

	_01807b_jump:
		sub    _0a9e84_data,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _01805d_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    _0a9e84_data,%eax
		jmp    _01803c_jump

	_018097_jump:
		cmp    _0a9e90_data,%ebx
		jae    _01805d_jump
		mov    _0a9e90_data,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _01805b_jump

	_0180ab_jump:
		add    %ebx,%edx
		cmp    _0a9e8c_data,%edx
		jle    _01805d_jump
		sub    _0a9e8c_data,%ebx
		xor    %edx,%edx
		neg    %ebx
		mov    %ch,%dl
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _0a9e6c_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _0a9e8c_data,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _018051_jump



_0180e6_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_0a9e6c_data
		jmp    _0180fd_jump



_0180f2_func:
		call   _017f73_func
		jb     _018258_jump

	_0180fd_jump:
		push   %ebp
		mov    _0a9e6c_data,%edx
		mov    %edx,_0a9e74_data
		add    _0a9b48_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _0a9b48_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $0x0000ff,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01817e_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0a9e78_data
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_01815a_jump:
		xor    %ebp,%ebp

	_01815c_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _018166_jump
		mov    %ah,(%edi)

	_018166_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _01815c_jump
		add    _0a9e78_data,%edi
		add    _0a9e74_data,%esi
		cmp    %ebx,%edi
		jb     _01815a_jump
		pop    %edi
		pop    %esi

	_01817e_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0181c9_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0a9e78_data
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0181a2_jump
		inc    %edi
		mov    $0x000001,%al

	_0181a2_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_0181a5_jump:
		xor    %ebp,%ebp

	_0181a7_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0181b1_jump
		mov    %ah,(%edi)

	_0181b1_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0181a7_jump
		add    _0a9e78_data,%edi
		add    _0a9e74_data,%esi
		cmp    %ebx,%edi
		jb     _0181a5_jump
		pop    %edi
		pop    %esi

	_0181c9_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _018214_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0a9e78_data
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0181ed_jump
		inc    %edi
		mov    $0x000001,%al

	_0181ed_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_0181f0_jump:
		xor    %ebp,%ebp

	_0181f2_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0181fc_jump
		mov    %ah,(%edi)

	_0181fc_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0181f2_jump
		add    _0a9e78_data,%edi
		add    _0a9e74_data,%esi
		cmp    %ebx,%edi
		jb     _0181f0_jump
		pop    %edi
		pop    %esi

	_018214_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _018257_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0a9e78_data
		add    %al,%al
		cmp    $0x000010,%al
		jne    _018234_jump
		inc    %edi
		mov    $0x000001,%al

	_018234_jump:
		out    %al,(%dx)

	_018235_jump:
		xor    %ebp,%ebp

	_018237_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _018241_jump
		mov    %ah,(%edi)

	_018241_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _018237_jump
		add    _0a9e78_data,%edi
		add    _0a9e74_data,%esi
		cmp    %ebx,%edi
		jb     _018235_jump

	_018257_jump:
		pop    %ebp

	_018258_jump:
		ret    



_018259_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_0a9e6c_data
		jmp    _018270_jump



_018265_func:
		call   _01802a_func
		jb     _0183d6_jump

	_018270_jump:
		push   %ebp
		mov    _0a9e6c_data,%edx
		mov    %edx,_0a9e74_data
		add    _0a9b48_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _0a9b48_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $0x0000ff,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0182f6_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0a9e78_data
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_0182d2_jump:
		xor    %ebp,%ebp

	_0182d4_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0182de_jump
		mov    %ah,(%edi)

	_0182de_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0182d4_jump
		add    _0a9e78_data,%edi
		add    _0a9e74_data,%esi
		cmp    %ebx,%edi
		jb     _0182d2_jump
		pop    %edi
		pop    %esi

	_0182f6_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _018343_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0a9e78_data
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01831c_jump
		inc    %edi
		mov    $0x000001,%al

	_01831c_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_01831f_jump:
		xor    %ebp,%ebp

	_018321_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01832b_jump
		mov    %ah,(%edi)

	_01832b_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _018321_jump
		add    _0a9e78_data,%edi
		add    _0a9e74_data,%esi
		cmp    %ebx,%edi
		jb     _01831f_jump
		pop    %edi
		pop    %esi

	_018343_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _018390_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0a9e78_data
		add    %al,%al
		cmp    $0x000010,%al
		jne    _018369_jump
		inc    %edi
		mov    $0x000001,%al

	_018369_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_01836c_jump:
		xor    %ebp,%ebp

	_01836e_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _018378_jump
		mov    %ah,(%edi)

	_018378_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _01836e_jump
		add    _0a9e78_data,%edi
		add    _0a9e74_data,%esi
		cmp    %ebx,%edi
		jb     _01836c_jump
		pop    %edi
		pop    %esi

	_018390_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0183d5_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0a9e78_data
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0183b2_jump
		inc    %edi
		mov    $0x000001,%al

	_0183b2_jump:
		out    %al,(%dx)

	_0183b3_jump:
		xor    %ebp,%ebp

	_0183b5_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0183bf_jump
		mov    %ah,(%edi)

	_0183bf_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0183b5_jump
		add    _0a9e78_data,%edi
		add    _0a9e74_data,%esi
		cmp    %ebx,%edi
		jb     _0183b3_jump

	_0183d5_jump:
		pop    %ebp

	_0183d6_jump:
		ret    



_0183d7_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_0a9e68_data
		call   _017f73_func
		jb     _01856d_jump
		push   %ebp
		mov    _0a9e6c_data,%edx
		mov    %edx,_0a9e7c_data
		xor    %edx,%edx
		add    _0a9b48_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _0a9b48_data(,%edx,4),%ebx
		and    $0x0000ff,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01847a_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0a9e80_data
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _0a9e68_data,%eax

	_018453_jump:
		xor    %ebp,%ebp

	_018455_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _018461_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_018461_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _018455_jump
		add    _0a9e80_data,%edi
		add    _0a9e7c_data,%esi
		cmp    %ebx,%edi
		jb     _018453_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_01847a_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0184ce_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0a9e80_data
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01849e_jump
		inc    %edi
		mov    $0x000001,%al

	_01849e_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _0a9e68_data,%eax

	_0184a7_jump:
		xor    %ebp,%ebp

	_0184a9_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0184b5_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0184b5_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0184a9_jump
		add    _0a9e80_data,%edi
		add    _0a9e7c_data,%esi
		cmp    %ebx,%edi
		jb     _0184a7_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_0184ce_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _018522_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0a9e80_data
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0184f2_jump
		inc    %edi
		mov    $0x000001,%al

	_0184f2_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _0a9e68_data,%eax

	_0184fb_jump:
		xor    %ebp,%ebp

	_0184fd_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _018509_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_018509_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0184fd_jump
		add    _0a9e80_data,%edi
		add    _0a9e7c_data,%esi
		cmp    %ebx,%edi
		jb     _0184fb_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_018522_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01856c_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0a9e80_data
		add    %al,%al
		cmp    $0x000010,%al
		jne    _018542_jump
		inc    %edi
		mov    $0x000001,%al

	_018542_jump:
		out    %al,(%dx)

	_018543_jump:
		xor    %ebp,%ebp
		mov    _0a9e68_data,%eax

	_01854a_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _018556_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_018556_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _01854a_jump
		add    _0a9e80_data,%edi
		add    _0a9e7c_data,%esi
		cmp    %ebx,%edi
		jb     _018543_jump

	_01856c_jump:
		pop    %ebp

	_01856d_jump:
		ret    



_01856e_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_0a9e68_data
		call   _01802a_func
		jb     _01870f_jump
		push   %ebp
		mov    _0a9e6c_data,%edx
		mov    %edx,_0a9e7c_data
		xor    %edx,%edx
		add    _0a9b48_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _0a9b48_data(,%edx,4),%ebx
		and    $0x0000ff,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _018616_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0a9e80_data
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _0a9e68_data,%eax

	_0185ef_jump:
		xor    %ebp,%ebp

	_0185f1_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0185fd_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0185fd_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0185f1_jump
		add    _0a9e80_data,%edi
		add    _0a9e7c_data,%esi
		cmp    %ebx,%edi
		jb     _0185ef_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_018616_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01866c_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0a9e80_data
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01863c_jump
		inc    %edi
		mov    $0x000001,%al

	_01863c_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _0a9e68_data,%eax

	_018645_jump:
		xor    %ebp,%ebp

	_018647_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _018653_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_018653_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _018647_jump
		add    _0a9e80_data,%edi
		add    _0a9e7c_data,%esi
		cmp    %ebx,%edi
		jb     _018645_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_01866c_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0186c2_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0a9e80_data
		add    %al,%al
		cmp    $0x000010,%al
		jne    _018692_jump
		inc    %edi
		mov    $0x000001,%al

	_018692_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _0a9e68_data,%eax

	_01869b_jump:
		xor    %ebp,%ebp

	_01869d_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0186a9_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0186a9_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _01869d_jump
		add    _0a9e80_data,%edi
		add    _0a9e7c_data,%esi
		cmp    %ebx,%edi
		jb     _01869b_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_0186c2_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01870e_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0a9e80_data
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0186e4_jump
		inc    %edi
		mov    $0x000001,%al

	_0186e4_jump:
		out    %al,(%dx)
		mov    _0a9e68_data,%eax

	_0186ea_jump:
		xor    %ebp,%ebp

	_0186ec_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0186f8_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0186f8_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0186ec_jump
		add    _0a9e80_data,%edi
		add    _0a9e7c_data,%esi
		cmp    %ebx,%edi
		jb     _0186ea_jump

	_01870e_jump:
		pop    %ebp

	_01870f_jump:
		ret    



_018710_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_0a9e6c_data
		jmp    _018728_jump



_01871c_func:
		call   _017f73_func
		jb     _018786_jump
		cmp    $0x000000,%cl
		jbe    _018786_jump

	_018728_jump:
		mov    _0a9b48_data(,%ebx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _0a9b48_data(,%edx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _0a9e6c_data,%edx
		xor    %eax,%eax

	_01874f_jump:
		xor    %ebp,%ebp

	_018751_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _01876e_jump
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _018751_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _01874f_jump
		pop    %ebp
		ret    

	_01876e_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		cmp    %ecx,%ebp
		jl     _018751_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _01874f_jump
		pop    %ebp

	_018786_jump:
		ret    

	_018787_jump:
		call   _017f73_func
		jb     _0187d4_jump
		cmp    $0x000000,%cl
		jbe    _0187d4_jump
		add    _0a9b48_data(,%ebx,4),%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _0a9b48_data(,%edx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _0a9e6c_data,%edx

	_0187b6_jump:
		xor    %ebp,%ebp

	_0187b8_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _0187c2_jump
		mov    %al,(%edi,%ebp,1)

	_0187c2_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _0187b8_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _0187b6_jump
		pop    %ebp

	_0187d4_jump:
		ret    



_0187d5_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_0a9e6c_data
		jmp    _0187ed_jump



_0187e1_func:
		call   _01802a_func
		jb     _018850_jump
		cmp    $0x000000,%cl
		jbe    _018850_jump

	_0187ed_jump:
		xor    %edx,%edx
		add    _0a9b48_data(,%ebx,4),%edi
		mov    %ch,%dl
		and    $0x0000ff,%ecx
		mov    _0a9b48_data(,%edx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		push   %ebp
		mov    _0a9e6c_data,%edx
		xor    %eax,%eax

	_018812_jump:
		xor    %ebp,%ebp
		push   %edi

	_018815_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _018835_jump
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _018815_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _018812_jump
		pop    %ebp
		ret    

	_018835_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		cmp    %ecx,%ebp
		jl     _018815_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _018812_jump
		pop    %ebp

	_018850_jump:
		ret    

	_018851_jump:
		call   _01802a_func
		jb     _0188a2_jump
		cmp    $0x000000,%cl
		jbe    _0188a2_jump
		xor    %edx,%edx
		add    _0a9b48_data(,%ebx,4),%edi
		mov    %ch,%dl
		and    $0x0000ff,%ecx
		mov    _0a9b48_data(,%edx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		push   %ebp
		mov    _0a9e6c_data,%edx

	_018880_jump:
		xor    %ebp,%ebp
		push   %edi

	_018883_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _01888e_jump
		mov    %al,-0x000001(%edi,%ecx,1)

	_01888e_jump:
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _018883_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _018880_jump
		pop    %ebp

	_0188a2_jump:
		ret    



_0188a3_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_0a9e68_data
		call   _017f73_func
		jb     _018929_jump
		cmp    $0x000000,%cl
		jbe    _018929_jump
		xor    %edx,%edx
		add    _0a9b48_data(,%ebx,4),%edi
		mov    %ch,%dl
		and    $0x0000ff,%ecx
		mov    _0a9b48_data(,%edx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		push   %ebp
		mov    _0a9e6c_data,%edx
		mov    _0a9e68_data,%ah

	_0188e5_jump:
		xor    %ebp,%ebp

	_0188e7_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _018906_jump
		or     %ah,%al
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _0188e7_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _0188e5_jump
		pop    %ebp
		ret    

	_018906_jump:
		and    $0x0000ff,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		mov    _0a9e68_data,%ah
		cmp    %ecx,%ebp
		jl     _0188e7_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _0188e5_jump
		pop    %ebp

	_018929_jump:
		ret    



_01892a_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_0a9e68_data
		call   _01802a_func
		jb     _0189b7_jump
		cmp    $0x000000,%cl
		jbe    _0189b7_jump
		xor    %edx,%edx
		add    _0a9b48_data(,%ebx,4),%edi
		mov    %ch,%dl
		and    $0x0000ff,%ecx
		mov    _0a9b48_data(,%edx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		push   %ebp
		mov    _0a9e6c_data,%edx
		mov    _0a9e68_data,%ah

	_01896c_jump:
		xor    %ebp,%ebp
		push   %edi

	_01896f_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _018991_jump
		or     %ah,%al
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _01896f_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _01896c_jump
		pop    %ebp
		ret    

	_018991_jump:
		and    $0x0000ff,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		mov    _0a9e68_data,%ah
		cmp    %ecx,%ebp
		jl     _01896f_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _01896c_jump
		pop    %ebp

	_0189b7_jump:
		ret    



_0189b8_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_0a9e70_data
		cmp    _0a9e84_data,%eax
		jl     _018a06_jump
		add    %eax,%edx
		cmp    _0a9e88_data,%edx
		ja     _0189f2_jump
		shr    $0x000002,%cl

	_0189d7_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0a9e8c_data,%ebx
		jl     _018a40_jump

	_0189e3_jump:
		add    %ebx,%edx
		cmp    _0a9e90_data,%edx
		ja     _018a2c_jump

	_0189ed_jump:
		clc    
		ret    

	_0189ef_jump:
		pop    %eax

	_0189f0_jump:
		stc    
		ret    

	_0189f2_jump:
		cmp    _0a9e88_data,%eax
		jae    _0189f0_jump
		mov    _0a9e88_data,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _018a7a_jump

	_018a06_jump:
		push   %eax
		sub    _0a9e84_data,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0189ef_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    %eax,%edx
		pop    %eax
		add    %edx,%eax
		add    %edx,0x000004(%esp)
		add    %edx,%esi
		shr    $0x000002,%cl
		jmp    _0189d7_jump

	_018a2c_jump:
		cmp    _0a9e90_data,%ebx
		jae    _0189f0_jump
		mov    _0a9e90_data,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0189ed_jump

	_018a40_jump:
		add    %ebx,%edx
		cmp    _0a9e8c_data,%edx
		jle    _0189f0_jump
		sub    _0a9e8c_data,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _0a9e70_data,%eax
		mul    %bx
		add    %eax,%esi
		add    %eax,0x000008(%esp)
		pop    %eax
		mov    _0a9e8c_data,%ebx
		jmp    _0189e3_jump

	_018a7a_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _0189d7_jump
		inc    %cl
		jmp    _0189d7_jump



_018a92_func:
		sub    $0x00000c,%esp
		mov    %edx,(%esp)
		call   _0189b8_func
		jb     _018afb_jump
		cmp    $0x000000,%cl
		jbe    _018afb_jump
		xor    %edx,%edx
		add    _0a9b48_data(,%ebx,4),%edi
		mov    %ch,%dl
		and    $0x0000ff,%ecx
		mov    _0a9b48_data(,%edx,4),%ebx
		add    %edi,%ebx
		mov    %ebx,0x000004(%esp)
		add    %eax,%edi
		mov    (%esp),%edx
		push   %ebp
		xor    %ebx,%ebx

	_018aca_jump:
		xor    %ebp,%ebp

	_018acc_jump:
		mov    (%esi,%ebp,4),%eax
		cmp    $0x000000,%eax
		je     _018add_jump
		mov    (%edx,%ebp,4),%ebx
		and    %ebx,(%edi,%ebp,4)
		or     %eax,(%edi,%ebp,4)

	_018add_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _018acc_jump
		add    $0x000140,%edi
		add    _0a9e70_data,%esi
		add    _0a9e70_data,%edx
		cmp    0x000008(%esp),%edi
		jb     _018aca_jump
		pop    %ebp

	_018afb_jump:
		add    $0x00000c,%esp
		ret    



_018aff_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_018b05_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		je     _018b05_jump
		pop    %eax
		pop    %edx
		ret    



_018b0f_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_018b15_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		jne    _018b15_jump
		pop    %eax
		pop    %edx
		ret    



_018b1f_func:
		movl   $0x000000,_0a9ea4_data
		movl   $0x000000,_0a9ea0_data
		movl   $0x000000,_0a9e9c_data
		push   %eax
		in     $0x000061,%al
		or     $0x000003,%al
		out    %al,$0x000061
		movl   $0x00ffff,_0a9e94_data
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    _0a9e94_data,%eax
		out    %al,$0x000042
		mov    %ah,%al
		out    %al,$0x000042
		pop    %eax
		ret    



_018b5f_func:
		push   %eax
		in     $0x000061,%al
		and    $0x0000fc,%al
		out    %al,$0x000061
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    $0x000000,%al
		out    %al,$0x000042
		out    %al,$0x000042
		pop    %eax
		ret    



_018b72_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000080,%eax
		out    %al,$0x000043
		nop
		in     $0x000042,%al
		mov    %al,%ah
		in     $0x000042,%al
		xchg   %al,%ah
		mov    _0a9e94_data,%ebx
		sub    %eax,%ebx
		mov    %ebx,%eax
		cmp    _0a9e9c_data,%eax
		jg     _018bbe_jump
		jne    _018bb2_jump
		mov    _0a9ea4_data,%edx
		inc    %edx
		cmp    $0x000014,%edx
		jle    _018bb2_jump
		movl   $0x000000,_0a9e94_data
		xor    %edx,%edx

	_018bb2_jump:
		mov    _0a9e94_data,%ebx
		add    %ebx,_0a9ea0_data

	_018bbe_jump:
		mov    %eax,_0a9e9c_data
		add    _0a9ea0_data,%eax
		mov    %edx,_0a9ea4_data
		pop    %edx
		pop    %ebx
		ret    



_018bd2_func:
		mov    $0x000001,%ecx
		cmpl   $0x000000,_0a9e94_data
		je     _018bec_jump
		dec    %ecx
		dec    %ecx

	_018be2_jump:
		call   _018b72_func
		inc    %ecx
		cmp    %ebx,%eax
		jle    _018be2_jump

	_018bec_jump:
		ret    



_018bed_func:
		call   _018b1f_func
		ret    



_018c00_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %dl,0x000018(%esp)
		mov    %bl,0x000014(%esp)
		mov    %cl,0x000010(%esp)
		mov    _0c3112_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _018dbf_jump
		mov    _0c310e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _018dbf_jump
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x000070(%esi),%dl
		mov    _0c1090_data,%ebx
		movsbl (%eax,%edx,8),%edx
		mov    _0c1094_data,%eax
		add    %ebx,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x00000e,%edx
		sbb    %edx,%eax
		sar    $0x00000e,%eax
		mov    _0c3114_data,%di
		sub    0x000028(%esi),%di
		shl    $0x000004,%edi
		mov    0x00002c(%esi),%cx
		mov    %di,0x000008(%esp)
		mov    _0c3110_data,%di
		sub    %ecx,%edi
		mov    %eax,%edx
		mov    0x000008(%esp),%eax
		shl    $0x000004,%edi
		test   %ax,%ax
		jne    _018ca6_jump
		test   %di,%di
		je     _018dbf_jump

	_018ca6_jump:
		test   %edx,%edx
		je     _018dbf_jump
		movswl %di,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _018cb9_jump
		neg    %eax

	_018cb9_jump:
		mov    %eax,%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _018cc8_jump
		neg    %eax

	_018cc8_jump:
		cmp    %ebx,%eax
		jge    _018cce_jump
		mov    %ebx,%eax

	_018cce_jump:
		mov    %eax,(%esp)
		mov    -0x000002(%esp),%eax
		mov    %edx,%ebx
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		cmp    %ebx,%eax
		jle    _018ce2_jump
		mov    %ebx,%eax

	_018ce2_jump:
		mov    %eax,0x000004(%esp)
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		mov    0x000004(%esp),%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000004,%cl
		mov    %ax,0x00000c(%esp)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmpb   $0x000000,_0c334a_data(%eax)
		jne    _018dcb_jump
		xor    %eax,%eax
		mov    $0x0000ff,%ebx
		mov    0x000014(%esp),%al
		mov    0x00003e(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		imul   %eax,%edx
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%eax
		mov    0x000014(%esp),%bl
		sar    $0x000010,%eax
		imul   %ebx,%eax
		add    %eax,%edx
		mov    $0x0000ff,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000071(%esi),%dh
		mov    %ax,0x000040(%esi)
		cmp    $0x000002,%dh
		jne    _018d7f_jump
		cmp    0x000004(%esp),%ebp
		jg     _018d7f_jump
		movb   $0x0000ff,0x000010(%esp)

	_018d7f_jump:
		xor    %eax,%eax
		mov    $0x0000ff,%ebx
		mov    0x000010(%esp),%al
		mov    0x000040(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		mov    %edx,%ebx
		imul   %eax,%ebx
		xor    %eax,%eax
		movswl %di,%edx
		mov    0x000010(%esp),%al
		imul   %eax,%edx
		add    %ebx,%edx
		mov    $0x0000ff,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_018dbf_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_018dcb_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_018dd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0c3112_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		cmp    $0xffff8300,%ebx
		jne    _018e07_jump
		mov    _0c310e_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffff8300,%ebx
		jne    _018e07_jump
		cmpw   $0x000000,0x000048(%edx)
		jne    _018e2c_jump
		jmp    _018e27_jump

	_018e07_jump:
		mov    _0c3112_data,%ebx
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jne    _018e2c_jump
		mov    _0c310e_data,%ebx
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%ebx
		cmp    %esi,%ebx
		jne    _018e2c_jump

	_018e27_jump:
		mov    $0x000001,%eax

	_018e2c_jump:
		test   %ax,%ax
		je     _018e38_jump
		movb   $0x000001,_0c33be_data

	_018e38_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018e40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ebx,%ebx
		mov    0x00002c(%eax),%cx
		mov    0x00006d(%eax),%bl
		movzbw 0x00006c(%eax),%si
		add    %ecx,%ebx
		mov    0x000028(%eax),%dx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%esi

	_018e60_jump:
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_0a525d_data(%edx)
		jne    _018e9d_jump
		mov    _0c3148_data,%edx
		sar    $0x000010,%edx
		movswl %bx,%ecx
		add    $0x0000c8,%edx
		cmp    %edx,%ecx
		jg     _018e9d_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		jmp    _018e60_jump

	_018e9d_jump:
		and    $0x0000f0,%bl
		and    $0x00000f,%esi
		mov    %ebx,%ecx
		movswl %si,%edx
		and    $0x0000ff,%eax
		xor    %ebx,%ebx
		call   _02302c_func
		add    %ecx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018ebc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c313c_data,%dx
		mov    _0c311e_data,%bx
		mov    _0c311c_data,%cx
		mov    _0c314a_data,%di
		cmpb   $0x000000,_0a7c9d_data
		jne    _018f46_jump
		mov    _0c0eb0_data,%eax
		neg    %eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _018f03_jump
		mov    _0c0eb0_data,%cx
		neg    %ecx
		add    $0x000008,%ecx

	_018f03_jump:
		movswl %dx,%eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _018f15_jump
		mov    %edx,%ecx
		add    $0x000008,%ecx

	_018f15_jump:
		mov    _0c0eb0_data,%eax
		neg    %eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _018f32_jump
		mov    _0c0eb0_data,%bx
		neg    %ebx
		add    $0x000008,%ebx

	_018f32_jump:
		movswl %dx,%eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _018f62_jump
		mov    %edx,%ebx
		add    $0x000008,%ebx
		jmp    _018f62_jump

	_018f46_jump:
		test   %cx,%cx
		jge    _018f4d_jump
		xor    %ecx,%ecx

	_018f4d_jump:
		cmp    %dx,%cx
		jle    _018f54_jump
		mov    %edx,%ecx

	_018f54_jump:
		test   %bx,%bx
		jge    _018f5b_jump
		xor    %ebx,%ebx

	_018f5b_jump:
		cmp    %dx,%bx
		jle    _018f62_jump
		mov    %edx,%ebx

	_018f62_jump:
		mov    _0c3118_data,%eax
		mov    _0c0ebc_data,%esi
		sar    $0x000010,%eax
		neg    %esi
		cmp    %esi,%eax
		jge    _018f8d_jump
		mov    _0c0ebc_data,%ax
		mov    %eax,%esi
		mov    %ax,_0c311a_data
		neg    %esi
		mov    %si,_0c311a_data

	_018f8d_jump:
		mov    _0c311a_data,%ax
		cmp    %di,%ax
		jle    _018f9f_jump
		mov    %di,_0c311a_data

	_018f9f_jump:
		mov    _0c311e_data,%esi
		mov    _0c0ebc_data,%eax
		sar    $0x000010,%esi
		neg    %eax
		cmp    %eax,%esi
		jge    _018fc7_jump
		mov    _0c0ebc_data,%ax
		mov    %ax,_0c3120_data
		neg    %eax
		mov    %ax,_0c3120_data

	_018fc7_jump:
		mov    _0c3120_data,%ax
		cmp    %di,%ax
		jle    _018fd9_jump
		mov    %di,_0c3120_data

	_018fd9_jump:
		mov    %di,_0c314a_data
		mov    %cx,_0c311c_data
		mov    %bx,_0c311e_data
		mov    %dx,_0c313c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018ffc_func:
		push   %edx
		mov    _0c3116_data,%dx
		mov    %dx,_0c311c_data
		mov    _0c3124_data,%dx
		mov    %dx,_0c311e_data
		call   _018e40_func
		mov    _0c0eb4_data,%dx
		sub    _0c0ebc_data,%dx
		mov    %ax,_0c30dc_data
		sub    %edx,%eax
		sub    $0x000010,%eax
		mov    %ax,_0c311a_data
		mov    _0c314a_data,%ax
		mov    %ax,_0c3120_data
		call   _018ebc_func
		pop    %edx
		ret    



_019050_func:
		add    %eax,(%eax)
		add    %al,(%eax)
		or     (%eax),%al
		add    %al,(%eax)
		add    %al,%fs:(%eax)
		add    %ch,%al
		add    (%eax),%eax
		add    %dl,(%eax)
		daa    
		add    %al,(%eax)
		mov    0x15000186,%al
		push   %ss
		pop    %ss
		sbb    %dl,0x53151619
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000058,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    0x00006e(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		and    $0x00003f,%dh
		mov    %dx,0x000044(%esp)
		mov    0x000042(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006f(%ebp),%dl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,0x000034(%esp)
		mov    _0c0f78_data,%eax
		mov    0x000064(%ebp),%dx
		mov    %eax,0x000028(%esp)
		cmp    $0x000040,%dx
		jne    _0192cb_jump
		mov    0x00007a(%ebp),%dl
		test   %dl,%dl
		jne    _019136_jump
		mov    $0x00000f,%ecx
		xor    %eax,%eax
		mov    0x000036(%ebp),%di
		mov    0x00006c(%ebp),%al
		mov    $0x0000be,%ebx
		add    %edi,%eax
		mov    $0x00000a,%edx
		cwtl   
		call   _03e270_func
		mov    $0x00000f,%ecx
		mov    0x000036(%ebp),%ax
		mov    $0x00000b,%ebx
		add    $0x000019,%eax
		mov    $0x00001e,%edx
		cwtl   
		call   _03e270_func
		mov    $0x00000f,%ecx
		mov    0x000036(%ebp),%ax
		mov    $0x00000b,%ebx
		add    $0x000014,%eax
		mov    $0x000023,%edx
		cwtl   
		call   _03e20c_func
		jmp    _0192f8_jump

	_019136_jump:
		cmp    $0x000001,%dl
		jne    _019184_jump
		mov    $0x00000f,%ecx
		xor    %eax,%eax
		mov    0x000036(%ebp),%si
		mov    0x00006c(%ebp),%al
		mov    $0x0000be,%ebx
		add    %esi,%eax
		mov    $0x00000a,%edx
		cwtl   
		call   _03e270_func
		mov    $0x00000f,%ecx
		mov    0x000036(%ebp),%ax
		mov    $0x00000b,%ebx
		add    $0x000014,%eax
		mov    $0x000023,%edx
		cwtl   
		call   _03e20c_func
		xor    %eax,%eax
		mov    %eax,0x000040(%esp)
		jmp    _01953e_jump

	_019184_jump:
		cmp    $0x000004,%dl
		jne    _0191f0_jump
		mov    $0x000136,%ebx
		xor    %eax,%eax
		mov    0x000038(%ebp),%cx
		mov    0x00006d(%ebp),%al
		mov    $0x00000a,%edx
		add    %ecx,%eax
		mov    $0x00000f,%ecx
		cwtl   
		call   _03e20c_func
		mov    $0x00000f,%ecx
		mov    0x000036(%ebp),%ax
		mov    $0x00000b,%ebx
		add    $0x000019,%eax
		mov    $0x00001e,%edx
		cwtl   
		call   _03e270_func
		mov    $0x00000f,%ecx
		mov    0x000036(%ebp),%ax
		mov    $0x00000b,%ebx
		add    $0x000014,%eax
		mov    $0x000023,%edx
		cwtl   
		call   _03e20c_func
		xor    %eax,%eax
		mov    %eax,0x000040(%esp)
		jmp    _01953e_jump

	_0191f0_jump:
		cmp    $0x000005,%dl
		jne    _01923e_jump
		mov    $0x00000f,%ecx
		xor    %eax,%eax
		mov    0x000038(%ebp),%bx
		mov    0x00006d(%ebp),%al
		mov    $0x00000a,%edx
		add    %ebx,%eax
		mov    $0x000136,%ebx
		cwtl   
		call   _03e20c_func
		mov    $0x00000f,%ecx
		mov    0x000036(%ebp),%ax
		mov    $0x00000b,%ebx
		add    $0x000014,%eax
		mov    $0x000023,%edx
		cwtl   
		call   _03e20c_func
		xor    %eax,%eax
		mov    %eax,0x000040(%esp)
		jmp    _01953e_jump

	_01923e_jump:
		cmp    $0x000003,%dl
		jne    _01929a_jump
		xor    %eax,%eax
		mov    0x000038(%ebp),%di
		mov    0x00006d(%ebp),%al
		add    %edi,%eax
		sub    $0x00001e,%eax
		mov    $0x00000f,%ecx
		movswl %ax,%edx
		mov    0x000034(%ebp),%eax
		mov    $0x000096,%ebx
		sar    $0x000010,%eax
		call   _03e20c_func
		xor    %eax,%eax
		mov    0x000038(%ebp),%dx
		mov    0x00006d(%ebp),%al
		add    %edx,%eax
		sub    $0x000014,%eax
		mov    $0x00000f,%ecx
		movswl %ax,%edx
		mov    0x000034(%ebp),%eax
		mov    $0x000096,%ebx
		sar    $0x000010,%eax
		call   _03e20c_func
		xor    %eax,%eax
		mov    %eax,0x000040(%esp)
		jmp    _01953e_jump

	_01929a_jump:
		xor    %eax,%eax
		mov    0x000038(%ebp),%si
		mov    0x00006d(%ebp),%al
		add    %esi,%eax
		sub    $0x00001e,%eax
		mov    $0x00000f,%ecx
		movswl %ax,%edx
		mov    0x000034(%ebp),%eax
		mov    $0x000096,%ebx
		sar    $0x000010,%eax
		call   _03e20c_func
		xor    %eax,%eax
		mov    %eax,0x000040(%esp)
		jmp    _01953e_jump

	_0192cb_jump:
		cmp    $0x000093,%dx
		jne    _0192f8_jump
		cmpb   $0x000000,0x00007a(%ebp)
		je     _0192f8_jump
		mov    $0x0000be,%ebx
		xor    %eax,%eax
		mov    0x000036(%ebp),%cx
		mov    0x00006c(%ebp),%al
		mov    $0x00000a,%edx
		add    %ecx,%eax
		mov    $0x00000f,%ecx
		cwtl   
		call   _03e270_func

	_0192f8_jump:
		xor    %eax,%eax
		mov    %eax,0x000040(%esp)
		jmp    _01953e_jump

	_019303_jump:
		mov    0x000034(%esp),%edx
		xor    %eax,%eax
		mov    0x000038(%ebp),%cx
		mov    0x000002(%edx),%al
		add    %ecx,%eax
		movswl %ax,%edx
		mov    0x00005c(%ebp),%eax
		sar    $0x000010,%eax
		call   _01dcd4_func
		mov    %ax,0x000048(%esp)
		mov    0x000034(%esp),%eax
		xor    %bh,%bh
		mov    0x000044(%ebp),%si
		mov    0x000003(%eax),%bl
		cmp    %si,%bx
		jb     _019369_jump
		mov    0x000032(%ebp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c3140_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c3150_data,%eax
		sar    $0x000010,%eax
		push   %eax
		push   $_0a0484_data
		lea    0x000010(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x000014,%esp
		mov    %esp,%eax
		call   _020150_func

	_019369_jump:
		test   %bx,%bx
		je     _01952a_jump
		xor    %eax,%eax
		mov    %bx,%ax
		imul   $0x00000c,%eax,%eax
		mov    0x000000(%ebp),%ebx
		add    %eax,%ebx
		cmpl   $0x01ccf0,(%ebx)
		jbe    _019391_jump
		mov    $_0a04a4_data,%eax
		call   _020150_func

	_019391_jump:
		cmpb   $0x000000,0x000004(%ebx)
		je     _01952a_jump
		testb  $0x000008,0x000085(%ebp)
		jne    _0193b5_jump
		mov    0x000034(%esp),%eax
		xor    %edx,%edx
		mov    0x000036(%ebp),%cx
		mov    0x000001(%eax),%dl
		add    %ecx,%edx
		jmp    _01940b_jump

	_0193b5_jump:
		cmpw   $0x000100,0x00005e(%ebp)
		jne    _0193e6_jump
		cmpw   $0x000005,0x000040(%esp)
		jne    _0193e6_jump
		mov    0x00006e(%ebp),%dl
		cmp    $0x00000e,%dl
		jb     _0193d2_jump
		cmp    $0x000010,%dl
		jbe    _0193df_jump

	_0193d2_jump:
		mov    0x00006e(%ebp),%cl
		cmp    $0x000036,%cl
		jb     _0193e6_jump
		cmp    $0x000038,%cl
		ja     _0193e6_jump

	_0193df_jump:
		mov    $0xffffffee,%eax
		jmp    _0193e8_jump

	_0193e6_jump:
		xor    %eax,%eax

	_0193e8_jump:
		xor    %edx,%edx
		mov    0x000034(%esp),%ecx
		mov    0x00006c(%ebp),%dl
		movzbw 0x000001(%ecx),%si
		add    %edx,%edx
		sub    %esi,%edx
		mov    %edx,%esi
		xor    %edx,%edx
		mov    0x000005(%ebx),%dl
		sub    %edx,%esi
		mov    0x000036(%ebp),%dx
		add    %esi,%eax
		add    %eax,%edx

	_01940b_jump:
		mov    0x000064(%ebp),%si
		cmp    $0x000110,%si
		je     _019424_jump
		cmp    $0x00010b,%si
		je     _019424_jump
		cmp    $0x00010a,%si
		jne    _019453_jump

	_019424_jump:
		mov    0x000085(%ebp),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    0x000034(%esp),%edi
		movzbl %al,%esi
		xor    %eax,%eax
		mov    (%edi),%al
		mov    0x00007a(%ebp),%cl
		xor    %esi,%eax
		jne    _01944c_jump
		mov    _0c0ef4_data,%eax
		jmp    _0194b7_jump

	_01944c_jump:
		mov    _0c0f24_data,%eax
		jmp    _0194b7_jump

	_019453_jump:
		cmp    $0x000114,%si
		jne    _019489_jump
		mov    0x000085(%ebp),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    0x000034(%esp),%edi
		movzbl %al,%esi
		xor    %eax,%eax
		mov    0x00000a(%ebx),%cl
		mov    (%edi),%al
		shr    $0x000004,%cl
		xor    %esi,%eax
		jne    _019482_jump
		mov    $_018787_jump,%eax
		jmp    _0194b7_jump

	_019482_jump:
		mov    $_018851_jump,%eax
		jmp    _0194b7_jump

	_019489_jump:
		mov    0x000085(%ebp),%al
		mov    0x00000a(%ebx),%cl
		shl    $0x000004,%al
		shr    $0x000004,%cl
		shr    $0x000007,%al
		mov    0x000034(%esp),%esi
		movzbl (%esi),%esi
		and    $0x0000ff,%eax
		xor    %esi,%eax
		jne    _0194b2_jump
		mov    _0c0f4c_data,%eax
		jmp    _0194b7_jump

	_0194b2_jump:
		mov    _0c0f20_data,%eax

	_0194b7_jump:
		mov    %eax,0x00002c(%esp)
		mov    0x00005c(%ebp),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		call   _01dc98_func
		movswl %ax,%edi
		mov    0x00005c(%ebp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000006(%ebx),%dl
		call   _01dc30_func
		shl    $0x000008,%eax
		mov    %eax,0x00003c(%esp)
		mov    0x00005c(%ebp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000005(%ebx),%dl
		call   _01dc30_func
		add    0x00003c(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    0x000008(%ebp),%eax
		mov    0x000046(%esp),%esi
		add    (%ebx),%eax
		sar    $0x000010,%esi
		mov    %eax,0x000030(%esp)
		xor    %eax,%eax
		mov    %esi,%ebx
		mov    %cl,%al
		mov    0x000030(%esp),%esi
		mov    %eax,0x000030(%esp)
		mov    %edx,%ecx
		mov    0x000030(%esp),%edx
		mov    %edi,%eax
		mov    0x000028(%esp),%edi
		call   *0x00002c(%esp)

	_01952a_jump:
		mov    0x000040(%esp),%ebx
		mov    0x000034(%esp),%edi
		inc    %ebx
		add    $0x000004,%edi
		mov    %ebx,0x000040(%esp)
		mov    %edi,0x000034(%esp)

	_01953e_jump:
		xor    %edx,%edx
		mov    0x000042(%esp),%eax
		mov    0x000040(%esp),%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _019303_jump
		cmpw   $0x000000,_0c30ce_data
		je     _0196cf_jump
		mov    _0c0f78_data,%eax
		mov    _0c0f9c_data,%esi
		mov    %eax,_0c0f9c_data
		xor    %eax,%eax
		mov    0x000038(%ebp),%bx
		mov    0x00006d(%ebp),%al
		add    %ebx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000036(%ebp),%cx
		mov    0x00006c(%ebp),%al
		add    %ecx,%eax
		mov    $0x00000a,%ebx
		sub    $0x000005,%eax
		mov    $0x00001e,%ecx
		cwtl   
		call   _03e160_func
		xor    %eax,%eax
		mov    0x000038(%ebp),%di
		mov    0x00006d(%ebp),%al
		add    %edi,%eax
		sub    $0x000005,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000036(%ebp),%bx
		mov    0x00006c(%ebp),%al
		mov    $0x00001e,%ecx
		add    %ebx,%eax
		mov    $0x00000a,%ebx
		cwtl   
		call   _03e1b8_func
		testb  $0x000020,0x000085(%ebp)
		je     _019635_jump
		lea    0x000038(%esp),%eax
		lea    0x000054(%esp),%ecx
		lea    0x000050(%esp),%ebx
		push   %eax
		lea    0x000050(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%ebp),%dl
		mov    %ebp,%eax
		call   _01e1b8_func
		mov    0x000054(%esp),%eax
		xor    %edx,%edx
		mov    _0c3166_data,%cx
		mov    0x000078(%ebp),%dl
		sub    %ecx,%eax
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000036(%ebp),%di
		mov    0x00006c(%ebp),%al
		add    %edi,%eax
		mov    $0x00000a,%ebx
		sub    $0x000005,%eax
		mov    $0x00001e,%ecx
		cwtl   
		call   _03e160_func
		mov    0x000054(%esp),%edx
		sub    _0c3166_data,%dx
		xor    %eax,%eax
		jmp    _019667_jump

	_019635_jump:
		xor    %eax,%eax
		mov    0x000038(%ebp),%cx
		mov    0x000078(%ebp),%al
		add    %ecx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000036(%ebp),%di
		mov    0x00006c(%ebp),%al
		add    %edi,%eax
		mov    $0x00000a,%ebx
		sub    $0x000005,%eax
		mov    $0x00001e,%ecx
		cwtl   
		call   _03e160_func
		xor    %eax,%eax
		mov    0x000038(%ebp),%dx

	_019667_jump:
		mov    0x000078(%ebp),%al
		add    %edx,%eax
		sub    $0x000005,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000036(%ebp),%bx
		mov    0x00006c(%ebp),%al
		mov    $0x00001e,%ecx
		add    %ebx,%eax
		mov    $0x00000a,%ebx
		cwtl   
		call   _03e1b8_func
		mov    $0x00001e,%ecx
		mov    $0x000014,%ebx
		mov    0x000036(%ebp),%ax
		mov    0x000036(%ebp),%edx
		sub    $0x00000a,%eax
		sar    $0x000010,%edx
		cwtl   
		call   _03e160_func
		mov    0x000038(%ebp),%ax
		sub    $0x00000a,%eax
		mov    $0x00001e,%ecx
		movswl %ax,%edx
		mov    0x000034(%ebp),%eax
		mov    $0x000014,%ebx
		sar    $0x000010,%eax
		call   _03e1b8_func
		mov    %esi,_0c0f9c_data

	_0196cf_jump:
		add    $0x000058,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_019d1d_jump:
		ret    



_019d20_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %al,0x00000c(%esp)
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000020(%esp),%dl
		xor    %edx,%eax
		je     _019d69_jump
		mov    _0c0f4c_data,%eax
		jmp    _019d6e_jump

	_019d69_jump:
		mov    _0c0f20_data,%eax

	_019d6e_jump:
		mov    %eax,(%esp)
		mov    0x00005c(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01dcd4_func
		movswl %ax,%ecx
		mov    0x00005c(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01dc98_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x00005c(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01dc30_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x00005c(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01dc30_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		xor    %eax,%eax
		mov    _0c0f78_data,%ebp
		mov    0x00000c(%esp),%al
		mov    %ecx,%ebx
		mov    %eax,0x000004(%esp)
		mov    %edx,%ecx
		mov    0x000004(%esp),%edx
		mov    %edi,%eax
		mov    %ebp,%edi
		call   *(%esp)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_019df4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %bx,0x00000c(%esp)
		mov    %dl,%al
		mov    %ecx,%edx
		mov    0x000020(%esp),%ch
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		shl    $0x000002,%ebx
		mov    (%esi),%eax
		mov    0x000064(%esi),%di
		add    %eax,%ebx
		cmp    $0x000110,%di
		je     _019e37_jump
		cmp    $0x00010b,%di
		je     _019e37_jump
		cmp    $0x00010a,%di
		jne    _019e5c_jump

	_019e37_jump:
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		mov    0x00007a(%esi),%cl
		movzbl %al,%edi
		xor    %eax,%eax
		mov    %ch,%al
		xor    %edi,%eax
		je     _019e55_jump
		mov    _0c0ef4_data,%eax
		jmp    _019eb2_jump

	_019e55_jump:
		mov    _0c0f24_data,%eax
		jmp    _019eb2_jump

	_019e5c_jump:
		cmp    $0x000114,%di
		jne    _019e8c_jump
		mov    0x00000b(%ebx),%al
		mov    0x00000a(%ebx),%cl
		shl    $0x000005,%al
		shr    $0x000004,%cl
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		movzbl %ch,%edi
		xor    %edi,%eax
		je     _019e85_jump
		mov    $_018787_jump,%eax
		jmp    _019eb2_jump

	_019e85_jump:
		mov    $_018851_jump,%eax
		jmp    _019eb2_jump

	_019e8c_jump:
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		mov    0x00000a(%ebx),%cl
		shr    $0x000007,%al
		shr    $0x000004,%cl
		movzbl %al,%edi
		xor    %eax,%eax
		mov    %ch,%al
		xor    %edi,%eax
		je     _019ead_jump
		mov    _0c0ef0_data,%eax
		jmp    _019eb2_jump

	_019ead_jump:
		mov    _0c0f14_data,%eax

	_019eb2_jump:
		mov    %eax,(%esp)
		mov    0x00005c(%esi),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		call   _01dcd4_func
		mov    0x00000a(%esp),%edx
		movswl %ax,%edi
		mov    0x00005c(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01dc98_func
		movswl %ax,%ebp
		xor    %edx,%edx
		mov    0x00005c(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01dc30_func
		shl    $0x000008,%eax
		mov    %eax,0x000008(%esp)
		mov    0x00005c(%esi),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000005(%ebx),%dl
		call   _01dc30_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0c0f78_data,%eax
		mov    0x000008(%esi),%esi
		mov    %eax,0x000004(%esp)
		add    (%ebx),%esi
		xor    %eax,%eax
		mov    %edi,%ebx
		mov    %cl,%al
		mov    0x000004(%esp),%edi
		mov    %eax,0x000004(%esp)
		mov    %edx,%ecx
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   *(%esp)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_019f3c_func:
		cmpb   $0x000000,_0c1156_data
		je     _019d1d_jump
		mov    _0c1144_data,%eax
		jmp    _019070_func



_019f54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _0a7c9d_data,%ah
		cmp    $0x000001,%ah
		jne    _019f76_jump
		cmp    _0c336e_data,%ah
		jne    _019f76_jump
		mov    $0x000010,%eax
		jmp    _019f78_jump

	_019f76_jump:
		xor    %eax,%eax

	_019f78_jump:
		mov    %eax,%edi
		mov    _0c30f4_data,%eax
		mov    $0x000001,%edx
		sar    $0x000010,%eax
		mov    %dx,_0c30fc_data
		cmp    $0xffffffff,%eax
		je     _01a013_jump
		mov    %eax,%esi
		shl    $0x000004,%esi
		add    %eax,%esi
		mov    _0b9410_data,%eax
		shl    $0x000003,%esi
		add    %eax,%esi
		cmpb   $0x000000,0x000083(%esi)
		jne    _01a013_jump
		xor    %eax,%eax
		mov    $0x00003d,%edx
		mov    0x00006c(%esi),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x000005,%edx
		mov    0x000078(%esi),%al
		sub    %eax,%edx
		lea    0x000004(%esp),%ecx
		mov    %edx,%eax
		lea    0x000008(%esp),%ebx
		add    %edi,%eax
		mov    %esp,%edx
		mov    %ax,0x000038(%esi)
		lea    0x00000c(%esp),%eax
		call   _017e8d_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _017eca_func
		mov    %esi,%eax
		call   _019070_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _017eca_func

	_01a013_jump:
		mov    _0c310a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _01a0a0_jump
		mov    %eax,%esi
		shl    $0x000004,%esi
		add    %eax,%esi
		mov    _0b9410_data,%eax
		shl    $0x000003,%esi
		add    %eax,%esi
		cmpb   $0x000000,0x000083(%esi)
		jne    _01a0a0_jump
		xor    %eax,%eax
		mov    $0x000042,%edx
		mov    0x00006c(%esi),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x00000e,%edx
		mov    0x000078(%esi),%al
		sub    %eax,%edx
		lea    0x000004(%esp),%ecx
		mov    %edx,%eax
		lea    0x000008(%esp),%ebx
		add    %edi,%eax
		mov    %esp,%edx
		mov    %ax,0x000038(%esi)
		lea    0x00000c(%esp),%eax
		call   _017e8d_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _017eca_func
		mov    %esi,%eax
		call   _019070_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _017eca_func

	_01a0a0_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a0ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		cmpb   $0x000000,_0a7c9d_data
		jne    _01a0cc_jump
		mov    $0x000004,%ebx
		xor    %esi,%esi
		mov    %ebx,0x000004(%esp)
		jmp    _01a0e6_jump

	_01a0cc_jump:
		movl   $0x000008,0x000004(%esp)
		cmpb   $0x000001,_0c336e_data
		jne    _01a0e4_jump
		mov    $0x000008,%esi
		jmp    _01a0e6_jump

	_01a0e4_jump:
		xor    %esi,%esi

	_01a0e6_jump:
		cmpb   $0x000000,_0c33ba_data
		je     _01a1fb_jump
		mov    0x00007a(%edi),%bl
		test   %bl,%bl
		je     _01a1fb_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00007b(%edi),%al
		mov    %bl,%dl
		mov    %eax,%ebx
		sub    %edx,%ebx
		imul   $0x000006,%ebx,%edx
		mov    $0x00001d,%ebx
		sub    %eax,%ebx
		imul   $0x000006,%ebx,%eax
		mov    %eax,(%esp)
		mov    _0c0eb4_data,%ax
		sub    $0x000013,%eax
		sub    %esi,%eax
		movswl %ax,%ecx
		mov    _0c0eb0_data,%ax
		mov    0x000004(%esp),%ebx
		sub    $0x000004,%eax
		add    %ebx,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003d,%edx
		movswl %ax,%ebx
		mov    _0c1144_data,%eax
		call   _019d20_func
		mov    _0c0eb4_data,%ax
		sub    $0x000014,%eax
		sub    %esi,%eax
		movswl %ax,%ecx
		mov    _0c0eb0_data,%ax
		mov    0x000004(%esp),%ebx
		sub    $0x000004,%eax
		add    %ebx,%eax
		mov    (%esp),%edx
		add    $0x000015,%eax
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003c,%edx
		movswl %ax,%ebx
		mov    _0c1144_data,%eax
		call   _019d20_func
		mov    0x000064(%edi),%di
		cmp    $0x0000d4,%di
		jb     _01a1a9_jump
		jbe    _01a1b6_jump
		cmp    $0x0000e3,%di
		je     _01a1af_jump
		jmp    _01a1bb_jump

	_01a1a9_jump:
		cmp    $0x000032,%di
		jne    _01a1bb_jump

	_01a1af_jump:
		movb   $0x00002c,0x000008(%esp)
		jmp    _01a1bb_jump

	_01a1b6_jump:
		movb   $0x000070,0x000008(%esp)

	_01a1bb_jump:
		mov    _0c0eb4_data,%ax
		sub    $0x00001e,%eax
		sub    %esi,%eax
		mov    0x000004(%esp),%ebx
		movswl %ax,%ecx
		mov    _0c0eb0_data,%ax
		push   $0x000001
		add    %ebx,%eax
		xor    %edx,%edx
		sub    $0x000004,%eax
		mov    0x00000c(%esp),%dl
		movswl %ax,%ebx
		mov    _0c1144_data,%eax
		call   _020184_func
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0c1144_data,%eax
		call   _019d20_func

	_01a1fb_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a250_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		mov    $0x000001,%ecx
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    $_0a04bc_data,%eax
		call   _01b0f8_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0a04c8_data,%eax
		call   _01b0f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a290_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		cmpb   $0x000040,_0c33cf_data
		je     _01a2b4_jump
		cmpw   $0x000000,_0a7cda_data
		jne    _01a2b4_jump
		movw   $0x00012c,_0a7cda_data

	_01a2b4_jump:
		mov    _0a7cda_data,%cx
		test   %cx,%cx
		jle    _01a33e_jump
		cmp    $0x000001,%cx
		jne    _01a337_jump
		cmpb   $0x000000,_0a7c9d_data
		jne    _01a337_jump
		mov    _0c0f9c_data,%eax
		mov    _0c0eaa_data,%ecx
		mov    _0c0eae_data,%ebx
		mov    _0c0eb2_data,%edx
		mov    %eax,_0c0f78_data
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _0c0eba_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _022f0c_func
		mov    _0c0f50_data,%eax
		mov    _0c0eaa_data,%ecx
		mov    _0c0eae_data,%ebx
		mov    _0c0eb2_data,%edx
		mov    %eax,_0c0f78_data
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _0c0eba_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _022f0c_func

	_01a337_jump:
		decw   _0a7cda_data

	_01a33e_jump:
		cmpw   $0x000000,_0a7cd6_data
		jne    _01a356_jump
		cmpw   $0x000000,_0a7cda_data
		je     _01a709_jump

	_01a356_jump:
		testb  $0x000010,_0c31b4_data
		jne    _01a709_jump
		mov    $0x000023,%esi
		mov    _0a7c9d_data,%bl
		mov    $0x00004d,%eax
		test   %bl,%bl
		jne    _01a4b0_jump
		cmpl   $0x000010,_0c0eb0_data
		jg     _01a391_jump
		cmpl   $0x000005,_0c0ebc_data
		jle    _01a4b0_jump

	_01a391_jump:
		cmpw   $0x000000,_0c30fc_data
		je     _01a3ae_jump
		mov    $0x000055,%eax
		xor    %ecx,%ecx
		mov    $0x00002d,%esi
		mov    %cx,_0c30fc_data

	_01a3ae_jump:
		mov    _0c0ebc_data,%edx
		movswl %si,%ecx
		sub    $0x000005,%edx
		cmp    %ecx,%edx
		jge    _01a40a_jump
		push   $0x000000
		mov    _0c0eba_data,%ecx
		movswl %ax,%ebx
		xor    %edx,%edx
		push   $0x0000ff
		mov    $0x00000d,%eax
		sar    $0x000010,%ecx
		add    $0x000005,%esi
		call   _01aecc_func
		push   $0x000000
		mov    _0c0ebc_data,%di
		mov    _0c0eb0_data,%ax
		mov    _0c0eba_data,%edx
		push   $0x0000ff
		sub    $0x00000f,%eax
		sub    %edi,%esi
		sar    $0x000010,%edx
		movswl %si,%ecx
		movswl %ax,%ebx
		jmp    _01a416_jump

	_01a40a_jump:
		push   $0x000000
		movswl %ax,%ebx
		push   $0x0000ff
		xor    %edx,%edx

	_01a416_jump:
		mov    $0x00000d,%eax
		call   _01aecc_func
		mov    _0c0ebc_data,%eax
		sub    $0x000005,%eax
		cmp    $0x000017,%eax
		jge    _01a490_jump
		push   $0x000000
		mov    $0x000044,%ebx
		mov    _0c0ebc_data,%ax
		mov    $0x000004,%edx
		sub    $0x000004,%eax
		push   $0x0000ff
		movswl %ax,%ecx
		mov    $0x0000f1,%eax
		call   _01aecc_func
		mov    $0x00001c,%eax
		mov    _0c0ebc_data,%dx
		push   $0x000000
		sub    %edx,%eax
		mov    _0c0eac_data,%bx
		movswl %ax,%ecx
		mov    $0x000138,%eax
		push   $0x0000ff
		sub    %ebx,%eax
		mov    _0c0eba_data,%edx
		movswl %ax,%ebx
		mov    _0c0eaa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		jmp    _01a4ab_jump

	_01a490_jump:
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $0x0000ff
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax

	_01a4ab_jump:
		call   _01aecc_func

	_01a4b0_jump:
		mov    _0c3142_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000004,%esi
		add    %esi,%eax
		mov    _0b9410_data,%esi
		shl    $0x000003,%eax
		mov    _0a7c9d_data,%bh
		add    %eax,%esi
		cmp    $0x000001,%bh
		jne    _01a4e4_jump
		cmp    _0c336e_data,%bh
		jne    _01a4e4_jump
		mov    $0x000010,%eax
		jmp    _01a4e6_jump

	_01a4e4_jump:
		xor    %eax,%eax

	_01a4e6_jump:
		push   $0x000001
		mov    %eax,0x000004(%esp)
		add    $0x000005,%eax
		mov    $0x000010,%ebx
		movswl %ax,%edi
		mov    $0x00001b,%edx
		mov    %edi,%ecx
		mov    %esi,%eax
		call   _019df4_func
		push   $0x000001
		mov    $0x0000f4,%ebx
		mov    $0x000038,%edx
		mov    %edi,%ecx
		mov    %esi,%eax
		call   _019df4_func
		push   $0x000001
		mov    $0x000037,%ebx
		mov    _0c2f42_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _019df4_func
		push   $0x000001
		mov    $0x000046,%ebx
		mov    _0c2f43_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _019df4_func
		cmpb   $0x0000ff,_0b9372_data
		je     _01a5ae_jump
		cmpb   $0x000000,_0c33cb_data
		jne    _01a5ae_jump
		mov    (%esp),%eax
		push   $0x000001
		add    $0x00001b,%eax
		mov    $0x000023,%ebx
		movswl %ax,%edi
		mov    _0c2f45_data,%al
		xor    %edx,%edx
		add    $0x000011,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _019df4_func
		cmpb   $0x000004,_0c2f49_data
		jne    _01a5ae_jump
		push   $0x000001
		mov    $0x00003b,%ebx
		mov    _0c2f44_data,%al
		xor    %edx,%edx
		add    $0x000014,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _019df4_func

	_01a5ae_jump:
		mov    $0xffffffff,%eax
		xor    %edx,%edx
		call   _060eec_func
		mov    %al,%dl
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0xffffffff,%eax
		mov    %dl,0x000004(%esp)
		xor    %edx,%edx
		call   _060eec_func
		mov    %al,%dl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		push   $0x000001
		mov    %dl,%al
		mov    0x000004(%esp),%edx
		mov    $0x000114,%ebx
		add    $0x000005,%edx
		add    $0x00001c,%al
		movswl %dx,%edi
		xor    %edx,%edx
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _019df4_func
		push   $0x000001
		mov    0x000008(%esp),%al
		mov    $0x000122,%ebx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _019df4_func
		mov    _0c0eb4_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0c0eb0_data,%ax
		push   $0x000001
		add    $0x00000e,%eax
		xor    %edx,%edx
		movswl %ax,%ebx
		call   _040e40_func
		add    $0x00003a,%al
		mov    %al,%dl
		mov    %esi,%eax
		call   _019df4_func
		call   _040e40_func
		movsbl %al,%eax
		xor    %edx,%edx
		call   _060eec_func
		mov    %al,%dl
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		call   _040e40_func
		mov    %dl,0x000004(%esp)
		movsbl %al,%eax
		xor    %edx,%edx
		call   _060eec_func
		mov    %al,%dl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %dl,%al
		mov    _0c0eb4_data,%dx
		sub    $0x000020,%edx
		movswl %dx,%ecx
		mov    _0c0eb0_data,%dx
		add    $0x00002e,%edx
		add    $0x00001c,%al
		movswl %dx,%ebx
		xor    %edx,%edx
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _019df4_func
		mov    _0c0eb4_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0c0eb0_data,%ax
		add    $0x00003c,%eax
		movswl %ax,%ebx
		mov    0x000004(%esp),%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _019df4_func
		mov    _0c30f4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _01a704_jump
		mov    _0c310a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _01a709_jump

	_01a704_jump:
		call   _019f54_func

	_01a709_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a9a0_func:
		push   %ebx
		push   %edi
		mov    %edx,%ebx
		mov    _0c0fcc_data,%edi
		movswl %bx,%ebx
		xor    %edx,%edx
		cwtl   
		mov    _0c303c_data,%dx
		sub    $0x000002,%ebx
		call   _0167aa_func
		pop    %edi
		pop    %ebx
		ret    



_01aa0c_func:
		push   %esi
		mov    0x000006(%esp),%esi
		sar    $0x000010,%esi
		push   %esi
		movswl %cx,%ecx
		push   $0x000007
		add    $0x000008,%ebx
		add    $0x000008,%eax
		push   %ecx
		movswl %bx,%ecx
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_01a9a0_func,%eax
		call   _01fc9c_func
		pop    %esi
		ret    $0x000004



_01aa3c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    0x00006e(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		xor    %ecx,%ecx
		and    $0x00003f,%dh
		mov    %dx,%cx
		xor    %edx,%edx
		mov    0x00006f(%ebp),%dl
		imul   %ecx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,0x000004(%esp)
		test   %bl,%bl
		jne    _01aa91_jump
		mov    $0x000005,%ebx
		mov    $0x000003,%eax
		mov    %ebx,0x000010(%esp)
		jmp    _01aa9c_jump

	_01aa91_jump:
		mov    $0x000002,%edx
		xor    %eax,%eax
		mov    %edx,0x000010(%esp)

	_01aa9c_jump:
		mov    0x000010(%esp),%ecx
		mov    %eax,0x00000c(%esp)
		cmp    %cx,%ax
		ja     _01ab6c_jump

	_01aaad_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%ax
		mov    0x000004(%esp),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %ecx,%ecx
		mov    0x000002(%eax),%cl
		add    0x000038(%ebp),%cx
		xor    %edx,%edx
		mov    0x000003(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000000(%ebp),%ebx
		add    %edx,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _01ab56_jump
		mov    0x000001(%eax),%al
		mov    0x000036(%ebp),%si
		xor    %ah,%ah
		add    %eax,%esi
		mov    0x00005c(%ebp),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01dcd4_func
		movswl %ax,%ecx
		mov    0x00005c(%ebp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   _01dc98_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x00005c(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01dc30_func
		mov    %eax,%esi
		xor    %edx,%edx
		mov    0x00005c(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%esi
		call   _01dc30_func
		add    %esi,%eax
		and    $0x00ffff,%eax
		mov    (%ebx),%esi
		mov    %eax,0x000008(%esp)
		add    0x000008(%ebp),%esi
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ecx,%ebx
		mov    0x000008(%esp),%ecx
		mov    %al,%dl
		mov    %edi,%eax
		mov    (%esp),%edi
		call   *_0c0f4c_data

	_01ab56_jump:
		mov    0x00000c(%esp),%esi
		inc    %esi
		mov    0x000010(%esp),%edi
		mov    %esi,0x00000c(%esp)
		cmp    %di,%si
		jbe    _01aaad_jump

	_01ab6c_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_01ab74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		movl   $0x000007,(%esp)
		mov    $0x001000,%ebp

	_01ab89_jump:
		mov    _0c2f48_data,%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%esi
		add    %eax,%esi
		mov    _0c3012_data,%ax
		xor    %edi,%edi
		test   %ax,%ax
		jle    _01acbd_jump

	_01abb0_jump:
		cmpw   $0x000001,(%esp)
		jne    _01abce_jump
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		testb  $0x000080,_0a529d_data(,%eax,4)
		je     _01abce_jump
		mov    %esi,%eax
		call   _01a0ac_func

	_01abce_jump:
		xor    %eax,%eax
		mov    (%esp),%ecx
		mov    0x000082(%esi),%al
		cmp    %cx,%ax
		jne    _01ac92_jump
		cmpb   $0x000000,_0a9ea8_data
		je     _01abf4_jump
		cmpw   $0x000091,0x000034(%esi)
		jne    _01abf4_jump
		int3   

	_01abf4_jump:
		mov    0x000064(%esi),%dx
		cmp    $0x00009d,%dx
		jne    _01ac1c_jump
		cmpw   $0x000001,_0c309e_data
		je     _01ac8b_jump
		cmpl   $0x00012c,0x000028(%esi)
		jl     _01ac92_jump
		jmp    _01ac8b_jump

	_01ac1c_jump:
		cmp    $0x000051,%dx
		jne    _01ac36_jump
		mov    $0x000001,%ebx
		mov    _0c0f78_data,%edx
		mov    %esi,%eax
		call   _01aa3c_func
		jmp    _01ac92_jump

	_01ac36_jump:
		cmp    $0x0000fe,%dx
		jne    _01ac8b_jump
		mov    0x000077(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _01ac49_jump
		neg    %eax

	_01ac49_jump:
		mov    _0a79ae_data(,%eax,2),%edx
		mov    0x000077(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		shl    $0x000009,%edx
		cmp    $0x000000,%eax
		je     _01ac6a_jump
		mov    $0x000001,%eax
		jg     _01ac6a_jump
		neg    %eax

	_01ac6a_jump:
		neg    %eax
		imul   %eax,%edx
		mov    $0x000168,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ebp,%ecx
		movswl %ax,%edx
		mov    %ebp,%ebx
		mov    %esi,%eax
		call   _01c344_func
		jmp    _01ac92_jump

	_01ac8b_jump:
		mov    %esi,%eax
		call   _019070_func

	_01ac92_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0c2f48_data(,%eax,2),%esi
		sar    $0x000010,%esi
		imul   $0x000088,%esi,%esi
		mov    _0b9410_data,%eax
		mov    _0c3012_data,%cx
		add    %eax,%esi
		cmp    %cx,%di
		jl     _01abb0_jump

	_01acbd_jump:
		mov    (%esp),%esi
		cmp    $0x000003,%si
		jne    _01ad4a_jump
		cmpb   $0x000000,_0c33b4_data
		jne    _01ad15_jump
		mov    _0c30b6_data,%esi
		mov    _0b9352_data,%edx
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		lea    0x000000(,%esi,2),%ebx
		mov    %edx,%eax
		add    $0x000002,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    %esi,%edx
		jle    _01ad15_jump
		cmpw   $0x00005a,_0b9354_data
		jle    _01ad98_jump
		testb  $0x000080,_0c3348_data
		jne    _01ad98_jump

	_01ad15_jump:
		testb  $0x000004,_0b937d_data
		je     _01ad98_jump
		cmpl   $0x000000,_0b931c_data
		je     _01ad98_jump
		cmpw   $0x000001,_0c309e_data
		je     _01ad98_jump
		mov    $_0b92f8_data,%eax
		call   _019070_func
		call   _019f3c_func
		jmp    _01ad98_jump

	_01ad4a_jump:
		cmp    $0x000002,%si
		jne    _01ad98_jump
		cmpb   $0x000000,_0c33d2_data
		je     _01ad98_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _01ad8c_jump

	_01ad5f_jump:
		movswl %cx,%eax
		mov    _0c110e_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%edx
		mov    _0b9410_data,%eax
		add    %edx,%eax
		cmp    0x000024(%eax),%esi
		je     _01ad8b_jump
		mov    _0c0f78_data,%edx
		mov    %esi,%ebx
		call   _01aa3c_func

	_01ad8b_jump:
		inc    %ecx

	_01ad8c_jump:
		xor    %eax,%eax
		mov    _0c33d2_data,%al
		cmp    %ax,%cx
		jl     _01ad5f_jump

	_01ad98_jump:
		mov    (%esp),%ebx
		dec    %ebx
		mov    %ebx,(%esp)
		cmp    $0x000001,%bx
		jge    _01ab89_jump
		mov    _0c2f48_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		mov    _0c3012_data,%si
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		xor    %edi,%edi
		add    %edx,%eax
		test   %si,%si
		jle    _01ae0e_jump

	_01add1_jump:
		cmpb   $0x000000,0x000082(%eax)
		jne    _01ade9_jump
		cmpw   $0x0000f5,0x000064(%eax)
		jne    _01ade9_jump
		call   _019070_func
		jmp    _01ae0e_jump

	_01ade9_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0c2f48_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		add    %edx,%eax
		cmp    _0c3012_data,%di
		jl     _01add1_jump

	_01ae0e_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ae18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    %dx,(%esp)

	_01ae26_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0b5aa0_data(%edx)
		je     _01aeb1_jump
		add    $_0b5820_data,%edx
		xor    %ecx,%ecx

	_01ae49_jump:
		mov    0x000009(%edx),%bl
		cmp    $0x000080,%bl
		jb     _01aea7_jump
		mov    (%edx),%esi
		mov    _0c0e94_data,%eax
		sar    $0x000010,%esi
		shl    $0x000006,%eax
		cmp    %eax,%esi
		jle    _01aea7_jump
		xor    %eax,%eax
		mov    0x000006(%edx),%al
		and    $0x00007f,%bl
		test   %eax,%eax
		jge    _01ae70_jump
		neg    %eax

	_01ae70_jump:
		cmp    $0x000080,%ax
		jl     _01ae7c_jump
		mov    %bl,%al
		add    $0x000003,%al
		jmp    _01ae8a_jump

	_01ae7c_jump:
		movzbl %bl,%esi
		movswl %ax,%ebx
		sar    $0x000005,%ebx
		lea    0x000004(%esi),%eax
		add    %ebx,%eax

	_01ae8a_jump:
		mov    _0c0f78_data,%edi
		mov    (%edx),%ebx
		movzbl %al,%esi
		sar    $0x000010,%ebx
		movswl (%edx),%eax
		sar    $0x000006,%ebx
		sar    $0x000006,%eax
		call   *_0c0ef8_data

	_01aea7_jump:
		inc    %ecx
		add    $0x00000a,%edx
		cmp    $0x000040,%cx
		jl     _01ae49_jump

	_01aeb1_jump:
		mov    (%esp),%ebx
		inc    %ebx
		mov    %bx,(%esp)
		cmp    $0x000008,%bx
		jl     _01ae26_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01aecc_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %ax,0x00000c(%esp)
		mov    %dx,(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000008(%esp)
		test   %ax,%ax
		jge    _01aefb_jump
		mov    %ebx,%esi
		xor    %edi,%edi
		add    %eax,%esi
		mov    %di,0x00000c(%esp)
		mov    %si,0x000004(%esp)
		jmp    _01af08_jump

	_01aefb_jump:
		cmp    $0x000140,%ax
		jle    _01af08_jump
		movw   $0x000140,0x00000c(%esp)

	_01af08_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x000140,%eax
		jle    _01af2f_jump
		mov    $0x000140,%eax
		mov    0x00000c(%esp),%edx
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)

	_01af2f_jump:
		mov    (%esp),%ebx
		test   %bx,%bx
		jge    _01af4c_jump
		mov    0x000008(%esp),%edi
		mov    %ebx,%eax
		add    %ebx,%edi
		xor    %ebx,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,(%esp)
		jmp    _01af59_jump

	_01af4c_jump:
		cmp    $0x0000c8,%bx
		jle    _01af59_jump
		movw   $0x0000c8,(%esp)

	_01af59_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x0000c8,%eax
		jle    _01af7f_jump
		mov    $0x0000c8,%eax
		mov    (%esp),%edx
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)

	_01af7f_jump:
		cmpw   $0x000000,0x000004(%esp)
		jle    _01b0ed_jump
		cmpw   $0x000000,0x000008(%esp)
		jle    _01b0ed_jump
		cmpb   $0x0000ff,0x00001c(%esp)
		jne    _01b030_jump
		cmpb   $0x000001,_0a7c9c_data
		jne    _01afd4_jump
		mov    0x000002(%esp),%ecx
		mov    0x000006(%esp),%ebx
		mov    -0x000002(%esp),%edx
		mov    0x00000a(%esp),%esi
		mov    _0c0f78_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%esi
		call   _014d70_func
		jmp    _01b030_jump

	_01afd4_jump:
		mov    0x000020(%esp),%dh
		test   %dh,%dh
		je     _01b009_jump
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		xor    %eax,%eax
		mov    _0c0f78_data,%edi
		mov    %dh,%al
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		call   _01680d_func
		jmp    _01b030_jump

	_01b009_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0c0f78_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _0167d0_func

	_01b030_jump:
		mov    0x000020(%esp),%bl
		cmp    $0x000001,%bl
		jne    _01b084_jump
		cmp    _0a7c9c_data,%bl
		jne    _01b06d_jump
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0c0f78_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _014e38_func
		jmp    _01b0ed_jump

	_01b06d_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		mov    $0x002026,%eax
		jmp    _01b0d6_jump

	_01b084_jump:
		cmp    $0x000002,%bl
		jne    _01b0ed_jump
		cmpb   $0x000001,_0a7c9c_data
		jne    _01b0c1_jump
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0c0f78_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _014e38_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01b0c1_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		mov    $0x002620,%eax

	_01b0d6_jump:
		mov    _0c0f78_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _01689c_func

	_01b0ed_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01b0f8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		mov    %ebx,%esi
		mov    %cl,0x00002c(%esp)
		cmpb   $0x0000ff,0x000040(%esp)
		sete   %al
		and    $0x0000ff,%eax
		lea    0x000018(%esp),%ebx
		mov    %al,0x000024(%esp)
		xor    %eax,%eax
		lea    0x00001c(%esp),%edx
		mov    %cl,%al
		lea    0x000014(%esp),%ecx
		call   _01f3b8_func
		mov    0x000008(%esp),%eax
		mov    %ax,0x000020(%esp)
		mov    0x000004(%esp),%eax
		mov    (%eax),%dl
		mov    %esi,0x000010(%esp)
		test   %dl,%dl
		je     _01b35f_jump
		xor    %edx,%edx
		mov    %dx,0x00000c(%esp)
		jmp    _01b349_jump

	_01b15a_jump:
		mov    0x000024(%esp),%al
		mov    0x000040(%esp),%cl
		add    %al,%cl
		xor    %edx,%edx
		mov    %cl,0x000040(%esp)
		mov    %cl,%dl
		mov    $0x000006,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		xor    %esi,%esi
		mov    0x00002c(%esp),%al
		mov    %dl,0x000040(%esp)
		mov    (%ebx),%ch
		mov    %al,0x000028(%esp)
		cmp    $0x00002f,%ch
		jne    _01b1d7_jump
		mov    0x000016(%esp),%ecx
		mov    0x000012(%esp),%ebx
		xor    %eax,%eax
		mov    %edi,%edx
		mov    0x00002c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000008(%esp),%eax
		call   _01f824_func
		cwtl   
		mov    0x000006(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x00000c(%esp),%ecx
		mov    %dx,0x000020(%esp)
		cmp    $0x000001,%cx
		jle    _01b1d0_jump
		mov    0x00001c(%esp),%eax
		add    %eax,0x000010(%esp)

	_01b1d0_jump:
		xor    %dl,%dl
		jmp    _01b24d_jump

	_01b1d7_jump:
		cmp    $0x000020,%ch
		jne    _01b1ef_jump
		mov    0x000014(%esp),%eax
		mov    0x000020(%esp),%ebx
		add    %eax,%ebx
		xor    %dl,%dl
		mov    %bx,0x000020(%esp)
		jmp    _01b24d_jump

	_01b1ef_jump:
		xor    %eax,%eax
		mov    %ch,%al
		call   _01f328_func
		test   %al,%al
		je     _01b23c_jump
		mov    0x00002c(%esp),%ah
		cmp    $0x000002,%ah
		jne    _01b212_jump
		mov    $0x000001,%dl
		mov    $0xfffffffc,%esi
		mov    %dl,0x000028(%esp)
		jmp    _01b216_jump

	_01b212_jump:
		mov    %ah,0x000028(%esp)

	_01b216_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%eax
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000028(%esp),%dl
		mov    (%eax),%al
		and    $0x0000ff,%eax
		call   _085b84_func
		and    $0x0000ff,%eax
		jmp    _01b246_jump

	_01b23c_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00002c(%esp),%dl
		mov    (%ebx),%al

	_01b246_jump:
		call   _01f4b0_func
		mov    %al,%dl

	_01b24d_jump:
		test   %dl,%dl
		je     _01b344_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    %dl,%bl
		mov    0x000028(%esp),%al
		mov    %ebx,%edx
		call   _01f3f0_func
		imul   $0x00000c,%ebx,%edx
		mov    0x000028(%esp),%bl
		cmp    $0x000001,%bl
		jbe    _01b27c_jump
		cmp    $0x000002,%bl
		je     _01b2cc_jump
		jmp    _01b31b_jump

	_01b27c_jump:
		mov    _0c1130_data,%ebp
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x000010(%esp),%ebx
		mov    0x000006(%ebp),%dl
		mov    0x00001e(%esp),%edi
		sub    %edx,%ebx
		xor    %dh,%dh
		xor    %ecx,%ecx
		shl    $0x000008,%edx
		sar    $0x000010,%edi
		add    %edx,%eax
		mov    _0c1134_data,%edx
		mov    %ax,%cx
		mov    0x000000(%ebp),%eax
		add    %ebx,%esi
		add    %eax,%edx
		xor    %eax,%eax
		movswl %si,%ebx
		mov    0x000040(%esp),%al
		mov    _0c0f78_data,%esi
		mov    %eax,(%esp)
		mov    %edi,%eax
		mov    %esi,%edi
		mov    %edx,%esi
		mov    (%esp),%edx
		jmp    _01b315_jump

	_01b2cc_jump:
		mov    _0c1114_data,%ebp
		mov    0x000010(%esp),%ebx
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x00001e(%esp),%edi
		mov    0x000006(%ebp),%dl
		xor    %ecx,%ecx
		sub    %edx,%ebx
		sar    $0x000010,%edi
		add    %ebx,%esi
		xor    %dh,%dh
		movswl %si,%ebx
		shl    $0x000008,%edx
		mov    0x000000(%ebp),%esi
		add    %edx,%eax
		mov    _0c1118_data,%edx
		mov    %ax,%cx
		mov    _0c0f78_data,%eax
		add    %edx,%esi
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    0x000040(%esp),%dl
		mov    %edi,%eax
		mov    (%esp),%edi

	_01b315_jump:
		call   *_0c0ef4_data

	_01b31b_jump:
		mov    0x000009(%ebp),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebp),%al
		add    %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %dx,0x000020(%esp)

	_01b344_jump:
		incw   0x00000c(%esp)

	_01b349_jump:
		mov    0x00000a(%esp),%edi
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%edi
		add    %edi,%ebx
		cmpb   $0x000000,(%ebx)
		jne    _01b15a_jump

	_01b35f_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01b368_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%ebp
		mov    %dx,0x000010(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %cl,0x00001c(%esp)
		mov    %esp,%ebx
		xor    %eax,%eax
		lea    0x000004(%esp),%edx
		mov    %cl,%al
		lea    0x000008(%esp),%ecx
		call   _01f3b8_func
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000014(%esp)
		mov    0x000000(%ebp),%ah
		mov    0x000010(%esp),%edi
		test   %ah,%ah
		je     _01b4f7_jump
		xor    %edx,%edx
		mov    %dx,0x000018(%esp)
		jmp    _01b4e3_jump

	_01b3b3_jump:
		cmp    $0x00002f,%bl
		jne    _01b3fa_jump
		mov    -0x000002(%esp),%ecx
		xor    %eax,%eax
		mov    0x000006(%esp),%ebx
		mov    0x00001c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    %ebp,%eax
		call   _01f824_func
		cwtl   
		mov    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000018(%esp),%ecx
		mov    %eax,%edi
		cmp    $0x000001,%cx
		jle    _01b3f6_jump
		mov    0x000004(%esp),%eax
		add    %eax,0x000014(%esp)

	_01b3f6_jump:
		xor    %al,%al
		jmp    _01b41b_jump

	_01b3fa_jump:
		cmp    $0x000020,%bl
		jne    _01b409_jump
		mov    0x000008(%esp),%ebx
		xor    %al,%al
		add    %ebx,%edi
		jmp    _01b41b_jump

	_01b409_jump:
		xor    %edx,%edx
		mov    %bl,%al
		mov    0x00001c(%esp),%dl
		and    $0x0000ff,%eax
		call   _01f4b0_func

	_01b41b_jump:
		test   %al,%al
		je     _01b4de_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    0x00001c(%esp),%al
		call   _01f3f0_func
		imul   $0x00000c,%ebx,%eax
		mov    0x00001c(%esp),%ch
		cmp    $0x000001,%ch
		jbe    _01b447_jump
		cmp    $0x000002,%ch
		je     _01b482_jump
		jmp    _01b4c0_jump

	_01b447_jump:
		mov    _0c1130_data,%esi
		add    %eax,%esi
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000020(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0c1134_data,%edx
		jmp    _01b4bb_jump

	_01b482_jump:
		mov    _0c1114_data,%esi
		add    %eax,%esi
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000020(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0c1118_data,%edx

	_01b4bb_jump:
		call   _01c670_func

	_01b4c0_jump:
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		add    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		movswl %di,%edi
		sub    %eax,%edx
		add    %edx,%edi

	_01b4de_jump:
		incw   0x000018(%esp)

	_01b4e3_jump:
		mov    0x000016(%esp),%edx
		sar    $0x000010,%edx
		lea    (%edx,%ebp,1),%eax
		mov    (%eax),%bl
		test   %bl,%bl
		jne    _01b3b3_jump

	_01b4f7_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000010



_01b500_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x000014(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		lea    0x000010(%esp),%ecx
		lea    0x00001c(%esp),%ebx
		xor    %eax,%eax
		lea    0x000008(%esp),%edx
		mov    0x000038(%esp),%al
		call   _01f3b8_func
		mov    0x000014(%esp),%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000004(%esp),%eax
		mov    (%eax),%dl
		mov    %esi,0x000024(%esp)
		test   %dl,%dl
		je     _01b70a_jump
		xor    %edx,%edx
		mov    %di,0x000018(%esp)
		mov    %dx,0x000020(%esp)
		jmp    _01b6f3_jump

	_01b556_jump:
		cmp    $0x00002f,%bl
		jne    _01b5a0_jump
		mov    0x00001a(%esp),%ecx
		xor    %eax,%eax
		mov    0x00000e(%esp),%ebx
		mov    0x000038(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000008(%esp),%eax
		call   _01f824_func
		cwtl   
		mov    0x000012(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000020(%esp),%ecx
		mov    %dx,0x00000c(%esp)
		cmp    $0x000001,%cx
		jle    _01b59c_jump
		mov    0x000008(%esp),%eax
		add    %eax,0x000024(%esp)

	_01b59c_jump:
		xor    %al,%al
		jmp    _01b5c4_jump

	_01b5a0_jump:
		cmp    $0x000020,%bl
		jne    _01b5b2_jump
		mov    0x000010(%esp),%eax
		add    %ax,0x00000c(%esp)
		xor    %al,%al
		jmp    _01b5c4_jump

	_01b5b2_jump:
		xor    %edx,%edx
		mov    %bl,%al
		mov    0x000038(%esp),%dl
		and    $0x0000ff,%eax
		call   _01f4b0_func

	_01b5c4_jump:
		test   %al,%al
		je     _01b6dd_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    0x000038(%esp),%al
		call   _01f3f0_func
		mov    %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000006,%cl
		call   _0626d0_func
		test   %ax,%ax
		js     _01b5f7_jump
		sar    %cl,%ax
		jmp    _01b600_jump

	_01b5f7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01b600_jump:
		imul   $0x00000c,%ebx,%ebx
		mov    0x000038(%esp),%ch
		cmp    $0x000001,%ch
		jbe    _01b616_jump
		cmp    $0x000002,%ch
		je     _01b663_jump
		jmp    _01b6b5_jump

	_01b616_jump:
		mov    _0c1130_data,%ebp
		add    %ebx,%ebp
		xor    %ebx,%ebx
		mov    0x000024(%esp),%ecx
		mov    0x000006(%ebp),%bl
		sub    %ebx,%ecx
		add    %ecx,%eax
		mov    0x00000a(%esp),%edi
		movswl %ax,%ebx
		xor    %ah,%ah
		sar    $0x000010,%edi
		mov    0x000006(%ebp),%al
		mov    0x000000(%ebp),%esi
		shl    $0x000008,%eax
		xor    %ecx,%ecx
		add    %eax,%edx
		mov    _0c0f78_data,%eax
		mov    %dx,%cx
		mov    %eax,(%esp)
		xor    %edx,%edx
		mov    _0c1134_data,%eax
		mov    0x00003c(%esp),%dl
		add    %eax,%esi
		mov    %edi,%eax
		mov    (%esp),%edi
		jmp    _01b6af_jump

	_01b663_jump:
		mov    _0c1114_data,%ebp
		add    %ebx,%ebp
		xor    %ebx,%ebx
		mov    0x000024(%esp),%ecx
		mov    0x000006(%ebp),%bl
		sub    %ebx,%ecx
		add    %ecx,%eax
		movswl %ax,%ebx
		xor    %ah,%ah
		mov    0x000006(%ebp),%al
		mov    0x00000a(%esp),%esi
		shl    $0x000008,%eax
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    _0c0f78_data,%edi
		mov    %ax,%cx
		mov    0x000000(%ebp),%edx
		mov    _0c1118_data,%eax
		sar    $0x000010,%esi
		add    %edx,%eax
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    0x00003c(%esp),%dl
		mov    %esi,%eax
		mov    (%esp),%esi

	_01b6af_jump:
		call   *_0c0ef4_data

	_01b6b5_jump:
		mov    0x000009(%ebp),%al
		and    $0x00000f,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebp),%dl
		add    %eax,%edx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)

	_01b6dd_jump:
		mov    0x000018(%esp),%edi
		mov    0x000020(%esp),%eax
		add    $0x000020,%edi
		inc    %eax
		mov    %di,0x000018(%esp)
		mov    %ax,0x000020(%esp)

	_01b6f3_jump:
		mov    0x00001e(%esp),%edx
		mov    0x000004(%esp),%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    (%eax),%bl
		test   %bl,%bl
		jne    _01b556_jump

	_01b70a_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01b714_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x0000c8(%eax),%ax
		mov    0x0000ca(%esi),%dx
		mov    0x0000cc(%esi),%bx
		mov    0x0000ce(%esi),%cx
		sub    $0x000003,%eax
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		cmpb   $0x000000,0x0000d5(%esi)
		je     _01b7dc_jump
		movzbl 0x0000d6(%esi),%edi
		movswl %cx,%ecx
		push   %edi
		movswl %bx,%ebx
		push   $0x0000ff
		movswl %dx,%edx
		cwtl   
		call   _01aecc_func
		mov    0x0000d6(%esi),%ah
		cmp    $0x000001,%ah
		jne    _01b7a3_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		dec    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		dec    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		jmp    _01b824_jump

	_01b7a3_jump:
		cmp    $0x000002,%ah
		jne    _01b801_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		inc    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		inc    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01b0f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01b7dc_jump:
		cmpb   $0x000000,0x0000d6(%esi)
		je     _01b801_jump
		movzbl 0x0000d6(%esi),%edi
		movswl %cx,%ecx
		push   %edi
		movswl %bx,%ebx
		push   $0x0000fe
		movswl %dx,%edx
		cwtl   
		call   _01aecc_func

	_01b801_jump:
		mov    0x0000d0(%esi),%ebx
		mov    0x0000ce(%esi),%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d7(%esi),%al
		sar    $0x000010,%edx
		push   %eax
		mov    0x0000d4(%esi),%cl

	_01b824_jump:
		mov    %esi,%eax
		call   _01b0f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b834_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000001,_0a7c9c_data
		jne    _01b856_jump
		mov    $0x003e80,%ecx
		mov    _0c0f78_data,%edi
		call   _0143ce_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01b856_jump:
		mov    $0x00fa00,%ebx
		mov    _0c0f50_data,%eax
		xor    %edx,%edx
		call   _085360_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b86c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,%ecx
		mov    _0c30c8_data,%eax
		mov    %esp,%edi
		sar    $0x000010,%eax
		mov    $_0b5798_data,%edx
		shl    $0x000002,%eax
		mov    $_019068_jump,%esi
		add    %eax,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    (%edx),%ah
		mov    %edx,%esi
		inc    %ah
		mov    0x000001(%edx),%bl
		mov    %ah,(%edx)
		cmp    %bl,%ah
		jbe    _01b8c6_jump
		mov    $0x000007,%eax
		call   _06a9a0_func
		mov    %eax,%ebx
		mov    $0x000005,%eax
		movb   $0x000000,(%edx)
		call   _06a9a0_func
		mov    %al,0x000001(%edx)
		mov    %bl,0x000002(%edx)
		mov    %bl,0x000003(%edx)

	_01b8c6_jump:
		mov    0x000008(%esp),%edx
		mov    _0c3162_data,%bx
		mov    0x000002(%esi),%al
		sub    %ebx,%edx
		mov    _0c3166_data,%di
		xor    %ah,%ah
		sub    %edi,%ecx
		add    %eax,%edx
		add    %ecx,%eax
		test   %dx,%dx
		jle    _01b964_jump
		movswl %dx,%ecx
		mov    $0x000140,%edx
		sub    %ecx,%edx
		test   %edx,%edx
		jle    _01b964_jump
		test   %ax,%ax
		jle    _01b964_jump
		movswl %ax,%ebx
		mov    $0x0000c8,%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jle    _01b964_jump
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		mov    (%esp,%eax,1),%al
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    _0c1144_data,%eax
		shl    $0x000002,%esi
		mov    (%eax),%edx
		add    %esi,%edx
		movzbw 0x000006(%edx),%si
		movzbw 0x000005(%edx),%di
		shl    $0x000008,%esi
		add    %edi,%esi
		mov    0x000008(%eax),%eax
		movzwl %si,%ebp
		mov    (%edx),%esi
		add    %eax,%esi
		mov    0x00000a(%edx),%al
		shr    $0x000004,%al
		xor    %edx,%edx
		mov    _0c0f78_data,%edi
		mov    %al,%dl
		mov    %ecx,%eax
		mov    %ebp,%ecx
		call   *_0c0f4c_data

	_01b964_jump:
		mov    _0c30ca_data,%ax
		cmp    $0x00001e,%ax
		jge    _01b97a_jump
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0c30ca_data

	_01b97a_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01b984_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpb   $0x000007,_0b9369_data
		jne    _01ba46_jump
		testb  $0x000004,_0b937d_data
		je     _01ba46_jump
		mov    _0c3108_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		mov    %esp,%ecx
		add    %ebx,%eax
		mov    _0b9410_data,%esi
		shl    $0x000003,%eax
		xor    %edx,%edx
		add    %eax,%esi
		lea    0x000004(%esp),%eax
		mov    %dx,_0c30ca_data
		push   %eax
		lea    0x00000c(%esp),%eax
		mov    $0x000001,%edx
		push   %eax
		lea    0x000014(%esp),%ebx
		mov    $_0b92f8_data,%eax
		call   _01e1b8_func
		mov    0x000006(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    0x000028(%esi),%cx
		mov    %eax,%edi
		mov    0x000002(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    0x00006c(%esi),%bl
		sub    $0x000006,%eax
		add    %ecx,%ebx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000078(%esi),%al
		push   $0x000080
		add    %ecx,%eax
		push   $0x000005
		cwtl   
		movswl %bx,%ecx
		push   %eax
		movswl %dx,%ebx
		mov    $_01b86c_func,%eax
		movswl %di,%edx
		call   _01fc9c_func

	_01ba46_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ba50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		mov    $0x000010,%ecx
		mov    $0x000140,%ebx
		push   $0x0000ff
		xor    %edx,%edx
		xor    %eax,%eax
		call   _01aecc_func
		push   $0x000000
		mov    $0x000028,%ecx
		mov    $0x000140,%ebx
		push   $0x0000ff
		mov    $0x0000a0,%edx
		xor    %eax,%eax
		call   _01aecc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ba90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		xor    %edx,%edx
		mov    _0b9366_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0b92fc_data,%eax
		mov    0x000008(%edx,%eax,1),%ax
		xor    %ebx,%ebx
		and    $0x00003f,%ah
		mov    _0c1124_data,%bx
		mov    %eax,0x000014(%esp)
		mov    $0x00003c,%eax
		cmp    %ebx,%eax
		jle    _01bad5_jump
		mov    %ebx,%eax

	_01bad5_jump:
		mov    %eax,%edx
		mov    %eax,0x000024(%esp)
		xor    %ebx,%ebx
		mov    $0x00001e,%eax
		mov    _0c1126_data,%bx
		cmp    %ebx,%eax
		jle    _01baef_jump
		mov    %ebx,%eax

	_01baef_jump:
		mov    _0c3162_data,%bx
		mov    %ax,0x000018(%esp)
		mov    _0b932e_data,%ax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0b9364_data,%bl
		mov    $0x000004,%cl
		add    %ebx,%eax
		test   %ax,%ax
		js     _01bb19_jump
		sar    %cl,%ax
		jmp    _01bb22_jump

	_01bb19_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01bb22_jump:
		mov    _0b9330_data,%bx
		mov    _0c3166_data,%cx
		mov    %ax,0x000008(%esp)
		add    %ecx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0b9370_data,%al
		mov    _0b9365_data,%cl
		add    %ecx,%eax
		mov    $0x000001,%cl
		test   %ax,%ax
		js     _01bb54_jump
		sar    %cl,%ax
		jmp    _01bb5d_jump

	_01bb54_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01bb5d_jump:
		mov    $0x000004,%cl
		add    %ebx,%eax
		test   %ax,%ax
		js     _01bb6b_jump
		sar    %cl,%ax
		jmp    _01bb74_jump

	_01bb6b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01bb74_jump:
		mov    $0x000001,%cl
		mov    %ax,(%esp)
		mov    %edx,%eax
		test   %ax,%ax
		js     _01bb86_jump
		sar    %cl,%ax
		jmp    _01bb8f_jump

	_01bb86_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01bb8f_jump:
		mov    0x000008(%esp),%ebx
		sub    %eax,%ebx
		mov    %bx,0x000004(%esp)
		test   %bx,%bx
		jge    _01bba8_jump
		xor    %edi,%edi
		mov    %di,0x000004(%esp)
		jmp    _01bbcd_jump

	_01bba8_jump:
		xor    %eax,%eax
		movswl %dx,%ebx
		mov    _0c1124_data,%ax
		sub    %ebx,%eax
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jl     _01bbcd_jump
		mov    _0c1124_data,%ax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)

	_01bbcd_jump:
		mov    $0x000001,%cl
		mov    0x000018(%esp),%eax
		test   %ax,%ax
		js     _01bbdd_jump
		sar    %cl,%ax
		jmp    _01bbe6_jump

	_01bbdd_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01bbe6_jump:
		mov    (%esp),%edx
		sub    %eax,%edx
		mov    %dx,0x000028(%esp)
		test   %dx,%dx
		jge    _01bbfe_jump
		xor    %ebx,%ebx
		mov    %bx,0x000028(%esp)
		jmp    _01bc2c_jump

	_01bbfe_jump:
		xor    %edx,%edx
		mov    0x000016(%esp),%eax
		mov    _0c1126_data,%dx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _01bc2c_jump
		mov    0x000018(%esp),%edx
		mov    _0c1126_data,%ax
		sub    %edx,%eax
		mov    %ax,0x000028(%esp)

	_01bc2c_jump:
		mov    0x000024(%esp),%eax
		mov    $0x000001,%ecx
		inc    %eax
		mov    $0x00009a,%edx
		movswl %ax,%edi
		mov    $0x000013,%eax
		mov    %edi,%ebx
		call   _03e160_func
		mov    0x000018(%esp),%eax
		mov    $0x000001,%ecx
		inc    %eax
		mov    $0x00009a,%edx
		movswl %ax,%esi
		mov    $0x000013,%eax
		mov    %esi,%ebx
		call   _03e1b8_func
		mov    0x000018(%esp),%eax
		mov    $0x000001,%ecx
		add    $0x00009b,%eax
		mov    %edi,%ebx
		movswl %ax,%edx
		mov    $0x000013,%eax
		call   _03e160_func
		mov    0x000024(%esp),%eax
		mov    $0x000001,%ecx
		mov    $0x00009a,%edx
		add    $0x000014,%eax
		mov    %esi,%ebx
		cwtl   
		call   _03e1b8_func
		mov    0x000018(%esp),%ecx
		xor    %edi,%edi
		test   %cx,%cx
		jle    _01bd41_jump
		movl   $0x00009b,0x00001c(%esp)

	_01bcb7_jump:
		mov    0x000024(%esp),%esi
		xor    %ecx,%ecx
		test   %si,%si
		jle    _01bd2a_jump
		mov    0x00001c(%esp),%eax
		mov    $0x000014,%esi
		mov    %ax,0x000020(%esp)

	_01bcd0_jump:
		mov    0x000026(%esp),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1124_data,%ax
		imul   %eax,%edx
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		movswl %cx,%eax
		add    %ebx,%eax
		add    %edx,%eax
		imul   $0x000006,%eax,%eax
		mov    _0c112c_data,%edx
		mov    0x000002(%edx,%eax,1),%al
		test   %al,%al
		je     _01bd1f_jump
		xor    %ah,%ah
		mov    0x00001e(%esp),%edx
		add    $0x00000d,%eax
		sar    $0x000010,%edx
		movswl %ax,%ebx
		movswl %si,%eax
		call   _03d51c_func

	_01bd1f_jump:
		mov    0x000024(%esp),%eax
		inc    %ecx
		inc    %esi
		cmp    %ax,%cx
		jl     _01bcd0_jump

	_01bd2a_jump:
		mov    0x00001c(%esp),%esi
		mov    0x000018(%esp),%eax
		inc    %esi
		inc    %edi
		mov    %esi,0x00001c(%esp)
		cmp    %ax,%di
		jl     _01bcb7_jump

	_01bd41_jump:
		mov    0x000014(%esp),%edx
		xor    %esi,%esi
		test   %dx,%dx
		jle    _01bdfc_jump
		mov    $_0b92f8_data,%edi

	_01bd55_jump:
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000014(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		movswl %si,%edx
		mov    %edi,%eax
		call   _01e1b8_func
		mov    0x00000e(%esp),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx
		mov    $0x000004,%cl
		add    %edx,%eax
		test   %ax,%ax
		js     _01bd8d_jump
		sar    %cl,%ax
		jmp    _01bd96_jump

	_01bd8d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01bd96_jump:
		mov    %ax,0x000008(%esp)
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0x000004,%cl
		add    %edx,%eax
		test   %ax,%ax
		js     _01bdb9_jump
		sar    %cl,%ax
		jmp    _01bdc2_jump

	_01bdb9_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01bdc2_jump:
		mov    0x000028(%esp),%edx
		mov    %ax,(%esp)
		add    $0x00009b,%eax
		sub    %edx,%eax
		movswl %ax,%edx
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ebx
		add    $0x000014,%eax
		inc    %esi
		sub    %ebx,%eax
		mov    $0x000004,%ebx
		cwtl   
		mov    0x000014(%esp),%ecx
		call   _03d51c_func
		cmp    %cx,%si
		jl     _01bd55_jump

	_01bdfc_jump:
		add    $0x00002c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01bee8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		cmp    $0xfffffffe,%eax
		je     _01bfe7_jump
		mov    %eax,%edx
		mov    $0x00003c,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000e10,%ebx
		mov    %edx,%edi
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x00003c,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		push   %edx
		push   $_0a04dc_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0852d9_func
		mov    _0c0eb4_data,%ax
		sub    $0x000005,%eax
		add    $0x00000c,%esp
		movswl %ax,%ebx
		mov    _0c0eac_data,%ax
		mov    $0x000001,%ecx
		sub    $0x000040,%eax
		push   $0x000001
		movswl %ax,%edx
		lea    0x000004(%esp),%eax
		call   _01b0f8_func
		mov    $0x00001e,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000002,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _01bfac_jump
		mov    _0c0eb4_data,%ax
		sub    $0x000005,%eax
		movswl %ax,%ebx
		mov    _0c0eac_data,%ax
		push   $0x000005
		sub    $0x000025,%eax
		mov    $0x000001,%ecx
		movswl %ax,%edx
		mov    $_0a04e0_data,%eax
		call   _01b0f8_func

	_01bfac_jump:
		push   %edi
		push   $_0a04e4_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0852d9_func
		mov    _0c0eb4_data,%ax
		sub    $0x000005,%eax
		add    $0x00000c,%esp
		movswl %ax,%ebx
		mov    _0c0eac_data,%ax
		mov    $0x000001,%ecx
		sub    $0x00001e,%eax
		push   $0x000000
		movswl %ax,%edx
		lea    0x000004(%esp),%eax
		call   _01b0f8_func

	_01bfe7_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01bff0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		movswl %cx,%esi
		push   $0x00001e
		mov    %esi,0x000004(%esp)
		push   %esi
		movswl %bx,%esi
		movswl %dx,%edi
		mov    %esi,0x000014(%esp)
		mov    %edi,%ebx
		mov    0x000014(%esp),%ecx
		movswl %ax,%esi
		mov    _0c0f9c_data,%eax
		mov    %esi,%edx
		call   _03e0bc_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		push   $0x00001e
		mov    %eax,0x000008(%esp)
		push   %eax
		mov    0x000026(%esp),%eax
		mov    0x00002e(%esp),%ebp
		sar    $0x000010,%eax
		mov    %edi,%ebx
		mov    %eax,0x000010(%esp)
		mov    %esi,%edx
		mov    0x000010(%esp),%ecx
		mov    _0c0f9c_data,%eax
		sar    $0x000010,%ebp
		call   _03e0bc_func
		push   $0x00001e
		mov    0x00002e(%esp),%eax
		mov    0x000004(%esp),%ebx
		mov    0x000010(%esp),%edx
		sar    $0x000010,%eax
		mov    %ebp,%ecx
		push   %eax
		mov    %eax,0x000014(%esp)
		mov    _0c0f9c_data,%eax
		call   _03e0bc_func
		push   $0x00001e
		mov    0x000010(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    _0c0f9c_data,%eax
		push   %edx
		mov    %ebp,%ecx
		mov    0x000010(%esp),%edx
		call   _03e0bc_func
		mov    0x00000c(%esp),%edx
		add    %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		lea    (%esi,%ebp,1),%edx
		movswl %ax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x00001e,%ebx
		cwtl   
		mov    %edi,%edx
		call   _03d51c_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000010



_01c0c4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    0x000078(%esp),%esi
		mov    %eax,0x000054(%esp)
		mov    %edx,0x00003c(%esp)
		mov    0x00007c(%esp),%eax
		mov    0x000088(%esp),%edi
		mov    %ebx,%edx
		mov    %di,0x000060(%esp)
		cmp    %bx,%si
		jge    _01c0fb_jump
		mov    0x000080(%esp),%edi
		mov    %esi,%edx
		mov    %di,0x000060(%esp)

	_01c0fb_jump:
		mov    0x000080(%esp),%edi
		cmp    %di,%dx
		jle    _01c10e_jump
		mov    %edi,%edx
		mov    %si,0x000060(%esp)

	_01c10e_jump:
		mov    0x000088(%esp),%edi
		cmp    %di,%dx
		jle    _01c121_jump
		mov    %edi,%edx
		mov    %bx,0x000060(%esp)

	_01c121_jump:
		mov    0x00008c(%esp),%edi
		mov    %cx,0x00005c(%esp)
		mov    %di,0x000064(%esp)
		cmp    %cx,%ax
		jge    _01c148_jump
		mov    0x000084(%esp),%edi
		mov    %ax,0x00005c(%esp)
		mov    %di,0x000064(%esp)

	_01c148_jump:
		mov    0x000084(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01c160_jump
		mov    %di,0x00005c(%esp)
		mov    %ax,0x000064(%esp)

	_01c160_jump:
		mov    0x00008c(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01c178_jump
		mov    %di,0x00005c(%esp)
		mov    %cx,0x000064(%esp)

	_01c178_jump:
		mov    0x00005e(%esp),%edi
		sar    $0x000010,%edi
		cwtl   
		mov    %edi,0x000034(%esp)
		movswl %si,%esi
		mov    0x000034(%esp),%ebp
		movswl %dx,%edi
		mov    %eax,0x000034(%esp)
		sub    %edi,%ebp
		movswl %cx,%eax
		mov    %ebp,%edi
		mov    0x000034(%esp),%ebp
		mov    %esi,0x000034(%esp)
		sub    %eax,%ebp
		movswl %bx,%esi
		mov    %ebp,%eax
		mov    0x000034(%esp),%ebp
		sub    %esi,%ebp
		mov    %ebp,0x000058(%esp)
		test   %eax,%eax
		jge    _01c1c6_jump
		mov    %edi,%esi
		mov    %edi,0x000048(%esp)
		neg    %esi
		neg    %eax
		mov    %esi,0x000048(%esp)
		jmp    _01c1ca_jump

	_01c1c6_jump:
		mov    %edi,0x000048(%esp)

	_01c1ca_jump:
		cmpl   $0x000000,0x000058(%esp)
		jge    _01c1e6_jump
		mov    0x000058(%esp),%esi
		mov    $0xffffffff,%ebp
		neg    %esi
		mov    %ebp,0x000040(%esp)
		mov    %esi,0x000058(%esp)
		jmp    _01c1ee_jump

	_01c1e6_jump:
		movl   $0x000001,0x000040(%esp)

	_01c1ee_jump:
		mov    0x000082(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,0x000034(%esp)
		mov    0x000034(%esp),%ebp
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		mov    0x00007e(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x000034(%esp)
		movswl %bx,%ebp
		mov    %ebp,0x000038(%esp)
		mov    0x000034(%esp),%ebp
		sub    0x000038(%esp),%ebp
		mov    %ebp,0x000050(%esp)
		test   %esi,%esi
		jge    _01c239_jump
		mov    %edi,%ebp
		mov    %edi,0x000044(%esp)
		neg    %ebp
		neg    %esi
		mov    %ebp,0x000044(%esp)
		jmp    _01c23d_jump

	_01c239_jump:
		mov    %edi,0x000044(%esp)

	_01c23d_jump:
		cmpl   $0x000000,0x000050(%esp)
		jge    _01c252_jump
		movl   $0xffffffff,0x00004c(%esp)
		negl   0x000050(%esp)
		jmp    _01c25a_jump

	_01c252_jump:
		movl   $0x000001,0x00004c(%esp)

	_01c25a_jump:
		test   %eax,%eax
		jne    _01c25f_jump
		inc    %eax

	_01c25f_jump:
		test   %esi,%esi
		jne    _01c264_jump
		inc    %esi

	_01c264_jump:
		mov    0x000040(%esp),%ebp
		mov    %eax,0x00000c(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,(%esp)
		mov    0x000048(%esp),%ebp
		mov    %eax,0x000010(%esp)
		mov    0x000044(%esp),%eax
		mov    %ebp,0x000004(%esp)
		mov    0x000058(%esp),%ebp
		mov    %eax,0x000014(%esp)
		mov    0x000050(%esp),%eax
		mov    %ebp,0x000008(%esp)
		mov    0x00005a(%esp),%ebp
		mov    %eax,0x000018(%esp)
		mov    0x000062(%esp),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		sub    %ebp,%eax
		mov    %eax,0x000024(%esp)
		movswl %cx,%eax
		sub    %ebp,%eax
		mov    %edi,0x000020(%esp)
		imul   %eax,%edi
		movswl %dx,%ecx
		movswl %bx,%eax
		mov    %esi,0x00001c(%esp)
		sub    %ecx,%eax
		mov    %ecx,0x000038(%esp)
		add    %edi,%eax
		mov    0x000054(%esp),%ecx
		mov    %eax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		mov    %eax,0x00002c(%esp)
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		mov    %eax,0x000030(%esp)
		mov    0x00003c(%esp),%esi
		mov    (%ecx),%ecx
		mov    _0c0f7c_data,%edi
		add    %ecx,%esi
		mov    %esp,%ecx
		mov    0x00005c(%esp),%ebx
		call   _016511_func
		mov    0x000064(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000060(%esp),%eax
		shl    $0x000008,%ebx
		sub    %edx,%eax
		xor    %ecx,%ecx
		add    %ebx,%eax
		mov    %ax,%cx
		mov    0x000054(%esp),%eax
		mov    _0c0f78_data,%edi
		mov    _0c0f7c_data,%esi
		mov    0x00000a(%eax),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ebp,%ebx
		mov    %al,%dl
		mov    0x000038(%esp),%eax
		call   *_0c0f4c_data
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000018



_01c344_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000060,%esp
		mov    %eax,0x00000c(%esp)
		mov    %dx,0x000020(%esp)
		mov    %bx,0x000050(%esp)
		mov    %cx,0x000024(%esp)
		xor    %edx,%edx
		mov    0x00006e(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esp),%eax
		mov    0x000004(%eax),%eax
		add    %edx,%eax
		mov    %eax,0x000008(%esp)
		mov    0x000008(%eax),%ax
		xor    %edx,%edx
		and    $0x00003f,%ah
		mov    0x00000c(%esp),%ebx
		mov    %ax,%dx
		xor    %eax,%eax
		mov    0x00006f(%ebx),%al
		imul   %edx,%eax
		mov    0x000008(%esp),%edx
		shl    $0x000002,%eax
		mov    (%edx),%edx
		add    %eax,%edx
		mov    %edx,0x000004(%esp)
		testb  $0x000020,0x000085(%ebx)
		je     _01c40e_jump
		lea    0x000014(%esp),%eax
		lea    0x000010(%esp),%ecx
		xor    %edx,%edx
		push   %eax
		lea    0x00003c(%esp),%eax
		mov    0x000079(%ebx),%dl
		push   %eax
		mov    %ebx,%eax
		lea    0x000024(%esp),%ebx
		call   _01e1b8_func
		mov    0x00001a(%esp),%edx
		mov    _0c3160_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    0x000036(%esp),%eax
		mov    0x00000c(%esp),%ebx
		sar    $0x000010,%eax
		add    $0x000008,%edx
		sar    %eax
		mov    _0c3166_data,%cx
		add    %edx,%eax
		mov    0x000010(%esp),%edx
		mov    %eax,0x000058(%esp)
		xor    %eax,%eax
		sub    %ecx,%edx
		mov    0x000078(%ebx),%al
		add    %eax,%edx
		mov    %edx,0x000028(%esp)
		jmp    _01c479_jump

	_01c40e_jump:
		lea    0x00005c(%esp),%eax
		lea    0x00003c(%esp),%ecx
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x00004c(%esp),%edx
		mov    0x000010(%esp),%eax
		call   _01ddf8_func
		mov    0x000048(%esp),%eax
		sub    _0c3162_data,%ax
		add    $0x000008,%eax
		mov    0x000018(%esp),%ebx
		mov    %ax,0x000048(%esp)
		sub    _0c3166_data,%bx
		mov    0x00003a(%esp),%eax
		mov    0x000046(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    %bx,0x000018(%esp)
		mov    %eax,0x000058(%esp)
		mov    0x00005a(%esp),%eax
		mov    0x000016(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    %eax,0x000028(%esp)

	_01c479_jump:
		xor    %esi,%esi
		mov    %si,0x00002c(%esp)
		jmp    _01c649_jump

	_01c485_jump:
		mov    0x000004(%esp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		test   %ax,%ax
		je     _01c644_jump
		cwtl   
		imul   $0x00000c,%eax,%eax
		mov    0x00000c(%esp),%ebp
		mov    0x00000c(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x000036(%edx),%di
		xor    %edx,%edx
		mov    0x000038(%ebx),%cx
		mov    0x000002(%esi),%dl
		xor    %ebx,%ebx
		add    %ecx,%edx
		add    %eax,%ebp
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    0x000001(%esi),%al
		mov    0x000005(%ebp),%cl
		add    %edi,%eax
		mov    0x000058(%esp),%edi
		mov    %eax,%esi
		mov    0x000006(%ebp),%bl
		sub    %edi,%esi
		add    %ecx,%eax
		mov    %si,0x000034(%esp)
		mov    %si,0x000044(%esp)
		sub    %edi,%eax
		mov    0x000028(%esp),%esi
		mov    0x00001e(%esp),%edi
		mov    %ax,0x00004c(%esp)
		mov    %edx,%eax
		sar    $0x000010,%edi
		sub    %esi,%eax
		add    %ebx,%edx
		mov    %ax,0x000030(%esp)
		mov    %ax,0x000054(%esp)
		mov    %edi,%ebx
		sub    %esi,%edx
		mov    0x000022(%esp),%eax
		mov    0x00004e(%esp),%esi
		mov    %dx,0x000040(%esp)
		lea    0x000030(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,(%esp)
		push   %eax
		mov    %esi,%ecx
		lea    0x000038(%esp),%eax
		call   _01c7e0_func
		mov    (%esp),%ebx
		lea    0x000054(%esp),%edx
		lea    0x00004c(%esp),%eax
		push   %ebx
		mov    %esi,%ecx
		mov    %edi,%ebx
		call   _01c7e0_func
		mov    (%esp),%ecx
		lea    0x000040(%esp),%edx
		lea    0x000044(%esp),%eax
		push   %ecx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _01c7e0_func
		mov    0x000058(%esp),%eax
		mov    0x000034(%esp),%edx
		mov    0x00004c(%esp),%ebx
		mov    0x000044(%esp),%ecx
		mov    0x000030(%esp),%esi
		mov    0x000054(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x000028(%esp),%eax
		mov    %dx,0x000034(%esp)
		mov    %bx,0x00004c(%esp)
		mov    %cx,0x000044(%esp)
		mov    0x000040(%esp),%edx
		add    %eax,%esi
		add    %eax,%edi
		mov    %si,0x000030(%esp)
		mov    %di,0x000054(%esp)
		add    %eax,%edx
		mov    0x000054(%esp),%esi
		mov    0x000030(%esp),%eax
		mov    %dx,0x000040(%esp)
		mov    %ebx,%edi
		mov    0x000034(%esp),%ebx
		sub    %eax,%esi
		sub    %ebx,%edi
		add    %edx,%esi
		mov    _0c30ce_data,%bx
		add    %ecx,%edi
		test   %bx,%bx
		je     _01c600_jump
		movswl %si,%eax
		push   %eax
		movswl %di,%eax
		mov    0x000056(%esp),%ecx
		push   %eax
		mov    0x000046(%esp),%eax
		mov    0x000052(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000036(%esp),%edx
		push   %eax
		mov    0x00004e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000042(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01bff0_func

	_01c600_jump:
		movswl %si,%eax
		push   %eax
		movswl %di,%eax
		push   %eax
		mov    0x000046(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00004e(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00003a(%esp),%ecx
		push   %eax
		mov    0x000062(%esp),%eax
		mov    0x000042(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001c(%esp),%edx
		push   %eax
		mov    0x00005e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000008(%edx),%edx
		mov    %ebp,%eax
		call   _01c0c4_func

	_01c644_jump:
		incw   0x00002c(%esp)

	_01c649_jump:
		mov    0x000008(%esp),%eax
		mov    0x000008(%eax),%ax
		xor    %edx,%edx
		and    $0x00003f,%ah
		mov    %ax,%dx
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _01c485_jump
		add    $0x000060,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01c670_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		mov    %eax,%edx
		sar    %edx
		movswl %bx,%eax
		add    %edx,%eax
		mov    %eax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x000006(%esi),%al
		movswl %cx,%edx
		sar    %eax
		add    %edx,%eax
		mov    0x000010(%esp),%edx
		mov    %eax,0x00000c(%esp)
		mov    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		add    %eax,%ebx
		mov    0x00001c(%esp),%eax
		sub    %edx,%ebx
		mov    0x00000c(%esp),%edx
		mov    %ax,0x000008(%esp)
		mov    %ecx,%eax
		mov    0x00003a(%esp),%ebp
		sub    %edx,%eax
		mov    %bx,0x000024(%esp)
		mov    %ax,0x000018(%esp)
		mov    %ax,0x000014(%esp)
		xor    %eax,%eax
		mov    0x000036(%esp),%edi
		mov    0x000006(%esi),%al
		sar    $0x000010,%ebp
		add    %ecx,%eax
		sar    $0x000010,%edi
		sub    %edx,%eax
		mov    %edi,%ebx
		mov    %ax,0x000020(%esp)
		mov    0x00003e(%esp),%eax
		mov    %ebp,%ecx
		sar    $0x000010,%eax
		lea    0x000018(%esp),%edx
		push   %eax
		mov    %eax,0x000004(%esp)
		lea    0x000020(%esp),%eax
		call   _01c7e0_func
		mov    (%esp),%ebx
		lea    0x000014(%esp),%edx
		lea    0x000024(%esp),%eax
		push   %ebx
		mov    %ebp,%ecx
		mov    %edi,%ebx
		call   _01c7e0_func
		mov    (%esp),%ecx
		lea    0x000020(%esp),%edx
		lea    0x000008(%esp),%eax
		push   %ecx
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _01c7e0_func
		mov    0x000010(%esp),%eax
		mov    0x00001c(%esp),%ecx
		mov    0x000024(%esp),%edi
		mov    0x000008(%esp),%edx
		mov    0x000018(%esp),%ebx
		add    %eax,%ecx
		add    %eax,%edi
		add    %eax,%edx
		mov    0x00000c(%esp),%eax
		mov    %cx,0x00001c(%esp)
		mov    %di,0x000024(%esp)
		mov    %dx,0x000008(%esp)
		mov    0x000014(%esp),%ecx
		mov    0x000020(%esp),%edi
		mov    0x00001c(%esp),%edx
		add    %eax,%ebx
		add    %eax,%ecx
		add    %eax,%edi
		mov    0x000024(%esp),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%edx
		add    %eax,%edx
		mov    %ecx,%eax
		sub    %ebx,%eax
		add    %edi,%eax
		cwtl   
		push   %eax
		movswl %dx,%eax
		mov    %di,0x000024(%esp)
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		mov    %bx,0x000024(%esp)
		sar    $0x000010,%eax
		mov    %cx,0x000020(%esp)
		push   %eax
		mov    0x000022(%esp),%eax
		mov    0x000026(%esp),%ecx
		sar    $0x000010,%eax
		mov    0x00002a(%esp),%ebx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001c(%esp),%edx
		mov    %esi,%eax
		call   _01c0c4_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01c7e0_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		movswl %cx,%edx
		movswl (%eax),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		mov    0x000016(%esp),%edx
		mov    %eax,%ecx
		sar    $0x000010,%edx
		movswl (%esi),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		lea    0x000008(%esp),%edx
		mov    %ax,(%esp)
		movswl %bx,%eax
		lea    0x000004(%esp),%ebx
		call   _06274c_func
		mov    0x000002(%esp),%ebx
		movswl %cx,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		imul   %eax,%ecx
		sub    %ecx,%ebx
		sar    $0x000009,%ebx
		mov    %bx,(%edi)
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   %edx,%eax
		add    %ebx,%eax
		sar    $0x000009,%eax
		mov    %ax,(%esi)
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_01c868_jump:
		mov    $0x000001,%eax
		call   _05a0ec_func
		call   _01b834_func
		call   _042170_func
		mov    $_0b92f8_data,%eax
		call   _019070_func
		mov    $_0b92f8_data,%eax
		call   _05b0d8_func
		call   _04280c_func
		call   _041ea4_func
		test   %ax,%ax
		jne    _01c8bd_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _01c8bd_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _01c8bd_jump
		call   _042060_func
		test   %ax,%ax
		je     _01c8c4_jump

	_01c8bd_jump:
		movb   $0x000001,_0c338e_data

	_01c8c4_jump:
		call   *_0c0f60_data
		xor    %eax,%eax
		mov    _0c338e_data,%al
		ret    



_01c8e0_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    0x000010(%esp),%ebp
		movzbl 0x000071(%eax),%esi
		lea    0x000000(,%esi,4),%edi
		mov    0x00000c(%eax),%esi
		add    %esi,%edi
		movzbl 0x000070(%eax),%esi
		mov    (%edi),%edi
		shl    $0x000003,%esi
		add    %edi,%esi
		testb  $0x000040,0x000007(%esi)
		je     _01c92b_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000026,%eax
		mov    %ax,(%ebx)
		movw   $0x000015,(%ecx)
		movw   $0x00001e,0x000000(%ebp)
		jmp    _01c979_jump

	_01c92b_jump:
		testb  $0x000080,0x000007(%esi)
		je     _01c958_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000056,%eax
		mov    %ax,(%ebx)
		movw   $0x000022,(%ecx)
		movw   $0x00000a,0x000000(%ebp)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_01c958_jump:
		mov    0x000028(%eax),%si
		add    $0x000047,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000047,%eax
		mov    %ax,(%ebx)
		movw   $0x00001d,(%ecx)
		movw   $0x000013,0x000000(%ebp)

	_01c979_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01c980_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _01deb4_func
		mov    %ax,0x000018(%esp)
		mov    %edi,%eax
		call   _01df9c_func
		mov    %ax,0x00001c(%esp)
		cmpb   $0x000000,0x000071(%edi)
		jne    _01c9bd_jump
		mov    0x000070(%edi),%dl
		cmp    $0x00001b,%dl
		je     _01c9d1_jump
		cmp    $0x000018,%dl
		je     _01c9d1_jump
		cmp    $0x00001e,%dl
		je     _01c9d1_jump
		cmp    $0x00000b,%dl
		je     _01c9d1_jump

	_01c9bd_jump:
		cmpb   $0x000001,0x000071(%edi)
		jne    _01ca84_jump
		cmpb   $0x000002,0x000070(%edi)
		jne    _01ca84_jump

	_01c9d1_jump:
		cmpb   $0x000000,_0c1156_data
		je     _01caa5_jump
		mov    _0c1144_data,%esi
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    0x000028(%esi),%bx
		mov    0x00002c(%esi),%dx
		add    %eax,%ebx
		mov    %edx,%ecx
		mov    %bx,0x000010(%esp)
		xor    %eax,%eax
		xor    %edx,%ecx
		mov    0x00006d(%esi),%al
		xor    %ebx,%ebx
		mov    0x00006c(%edi),%cl
		mov    0x000078(%esi),%bl
		mov    0x000028(%edi),%si
		add    %edx,%eax
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    %si,0x000014(%esp)
		mov    0x00006d(%edi),%cl
		mov    0x00002c(%edi),%si
		add    %edx,%ebx
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x00002c(%edi),%dx
		mov    0x000078(%edi),%cl
		add    %edx,%ecx
		add    $0x000005,%esi
		sub    $0x000005,%ecx
		cmp    %si,%ax
		jle    _01ca42_jump
		cmp    %si,%bx
		jg     _01caa5_jump

	_01ca42_jump:
		cmp    %cx,%ax
		jge    _01ca4c_jump
		cmp    %cx,%bx
		jl     _01caa5_jump

	_01ca4c_jump:
		mov    0x000012(%esp),%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		lea    0x00003c(%ecx),%esi
		cmp    %esi,%ebx
		jg     _01caa5_jump
		sub    $0x00003c,%ecx
		cmp    %ecx,%ebx
		jl     _01caa5_jump
		mov    $0x000019,%ebx
		mov    %edi,%eax
		movw   $0x000000,0x000040(%edi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%edi)
		call   _01dea8_func
		jmp    _01caa5_jump

	_01ca84_jump:
		cmpb   $0x000000,0x000071(%edi)
		jne    _01caa5_jump
		cmpb   $0x00001a,0x000070(%edi)
		jne    _01caa5_jump
		cmpb   $0x000000,_0c1156_data
		jne    _01caa5_jump
		mov    $0x00001b,%edx
		mov    %edi,%eax
		call   _01de98_func

	_01caa5_jump:
		cmpb   $0x000001,0x000071(%edi)
		jne    _01cb25_jump
		cmpb   $0x000002,0x000070(%edi)
		jne    _01cb25_jump
		mov    %edi,%eax
		call   _05a530_func
		xor    %edx,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _02346c_func
		mov    %al,%bl
		testb  $0x000001,_0a525d_data(%ebx)
		je     _01cb1e_jump
		mov    0x000085(%edi),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    $0x000001,%ecx
		mov    %al,%bl
		sub    %ebx,%ecx
		mov    %cl,%al
		mov    0x000085(%edi),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		xor    %edx,%edx
		mov    %ch,%ah
		mov    %ch,0x000085(%edi)
		or     %al,%ah
		mov    $0x000018,%ebx
		mov    %ah,0x000085(%edi)
		mov    %edi,%eax
		call   _01dea8_func
		mov    %edi,%eax
		call   _05a530_func

	_01cb1e_jump:
		mov    %edi,%eax
		call   _023aac_func

	_01cb25_jump:
		mov    0x00001a(%esp),%esi
		mov    0x000016(%esp),%ecx
		mov    %edi,%eax
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		mov    %esi,%ebx
		mov    %ecx,%edx
		call   _01e0cc_func
		test   %ax,%ax
		je     _01cbfd_jump
		mov    %esi,%ebx
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _02bb40_func
		test   %ax,%ax
		je     _01cbfd_jump
		cmpb   $0x000001,0x000071(%edi)
		jne    _01cbbd_jump
		cmpb   $0x000002,0x000070(%edi)
		jne    _01cbbd_jump
		mov    $0x000015,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    0x000085(%edi),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    $0x000001,%ecx
		mov    %al,%bl
		sub    %ebx,%ecx
		movw   $0x000000,0x000040(%edi)
		mov    %cl,%al
		mov    0x000085(%edi),%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,0x000085(%edi)
		mov    %cl,%ch
		movw   $0x000000,0x000042(%edi)
		or     %al,%ch
		mov    %ch,0x000085(%edi)
		jmp    _01cd5e_jump

	_01cbbd_jump:
		mov    0x000071(%edi),%dl
		cmp    $0x000002,%dl
		jne    _01cd5e_jump
		mov    0x000070(%edi),%dh
		cmp    $0x000003,%dh
		je     _01cbde_jump
		cmp    $0x000001,%dh
		je     _01cbde_jump
		cmp    %dl,%dh
		jne    _01cd5e_jump

	_01cbde_jump:
		mov    $0x00000c,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		movw   $0x000000,0x000040(%edi)
		movw   $0x000000,0x000042(%edi)
		jmp    _01cd5e_jump

	_01cbfd_jump:
		cmpb   $0x000002,0x000071(%edi)
		jne    _01cc20_jump
		cmpb   $0x000001,0x000070(%edi)
		jne    _01cc20_jump
		cmpb   $0x000000,0x00006f(%edi)
		jne    _01cc20_jump
		movw   $0x000000,0x000040(%edi)
		movw   $0x00fff6,0x000042(%edi)
		jmp    _01cd5e_jump

	_01cc20_jump:
		cmpb   $0x000000,0x000071(%edi)
		jne    _01cd5e_jump
		cmpb   $0x000014,0x000070(%edi)
		jne    _01cd5e_jump
		cmpb   $0x00001b,0x00006f(%edi)
		jne    _01cd5e_jump
		mov    _0b9410_data,%esi
		mov    _0b9414_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _01cd5e_jump

	_01cc56_jump:
		cmpw   $0x0000c4,0x000064(%esi)
		jne    _01cd4e_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01cd4e_jump
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		lea    0x000004(%esp),%ebx
		mov    $0x000002,%edx
		push   %ebx
		mov    %edi,%eax
		lea    0x000014(%esp),%ebx
		call   _01e1b8_func
		andb   $0x0000f7,0x000085(%esi)
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%ecx
		mov    0x00006c(%esi),%bl
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		sar    %ebx
		add    %ebx,%ecx
		mov    %ecx,0x000028(%esi)
		mov    %ecx,%ebx
		mov    %cx,0x00003c(%esi)
		xor    %ecx,%ebx
		mov    0x000006(%esp),%ecx
		mov    0x00006d(%esi),%bl
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x000085(%esi),%ah
		mov    %ecx,%ebx
		mov    0x000002(%esp),%ecx
		movw   $0x000000,0x000040(%esi)
		or     $0x000004,%ah
		movw   $0x000020,0x000042(%esi)
		sar    $0x000010,%ecx
		movl   $0x000001,0x000024(%esi)
		sar    %ecx
		mov    %ah,0x000085(%esi)
		add    %ecx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    %esi,%eax
		mov    %bx,0x00003e(%esi)
		call   _020064_func
		mov    _0b9304_data,%ecx
		mov    0x000085(%esi),%dl
		xor    %ebx,%ebx
		movw   $0x00ffff,0x000046(%esi)
		mov    _0b9369_data,%bl
		movw   $0x000000,0x000048(%esi)
		shl    $0x000002,%ebx
		or     $0x000010,%dl
		add    %ecx,%ebx
		mov    %dl,0x000085(%esi)
		xor    %ecx,%ecx
		mov    (%ebx),%ebx
		mov    _0b9368_data,%cl
		mov    0x000007(%ebx,%ecx,8),%dh
		test   $0x000040,%dh
		setne  %al
		mov    %al,_0c33e8_data
		mov    %esi,%eax
		call   _01cf7c_func
		jmp    _01cd5e_jump

	_01cd4e_jump:
		inc    %eax
		add    $0x000088,%esi
		cmp    %bx,%ax
		jl     _01cc56_jump

	_01cd5e_jump:
		cmpb   $0x000000,0x000071(%edi)
		jne    _01cd9c_jump
		mov    0x000070(%edi),%bh
		cmp    $0x000014,%bh
		je     _01cd76_jump
		cmp    $0x00000d,%bh
		je     _01cd76_jump
		cmp    $0x000017,%bh
		jne    _01cd9c_jump

	_01cd76_jump:
		mov    _0b9320_data,%ebx
		mov    0x000028(%edi),%esi
		lea    0x000085(%edi),%ecx
		cmp    %esi,%ebx
		setg   %al
		and    $0x000001,%al
		mov    (%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,(%ecx)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,(%ecx)

	_01cd9c_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cda8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    0x00007a(%eax),%ah
		dec    %ah
		mov    %ah,0x00007a(%ecx)
		jne    _01ce27_jump
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01cdd7_jump
		mov    0x000070(%ecx),%dh
		cmp    $0x00000c,%dh
		je     _01cdf5_jump
		cmp    $0x00000d,%dh
		je     _01cdf5_jump
		cmp    $0x000017,%dh
		je     _01cdf5_jump
		cmp    $0x000014,%dh
		je     _01cdf5_jump

	_01cdd7_jump:
		mov    0x000071(%ecx),%ah
		cmp    $0x000002,%ah
		jne    _01cdfc_jump
		mov    0x000070(%ecx),%dl
		cmp    %ah,%dl
		je     _01cdf5_jump
		cmp    $0x000003,%dl
		je     _01cdf5_jump
		cmp    $0x00001c,%dl
		je     _01cdf5_jump
		cmp    $0x000007,%dl
		jne    _01cdfc_jump

	_01cdf5_jump:
		mov    $0x000013,%ebx
		jmp    _01ce01_jump

	_01cdfc_jump:
		mov    $0x000012,%ebx

	_01ce01_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000085(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%al
		mov    %al,0x000085(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01ce27_jump:
		cmpb   $0x000001,0x000071(%ecx)
		jne    _01ce33_jump
		cmpb   $0x000002,0x000070(%ecx)
		je     _01ce58_jump

	_01ce33_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01ce77_jump
		mov    0x000070(%ecx),%al
		cmp    $0x00000b,%al
		je     _01ce58_jump
		cmp    $0x00001d,%al
		je     _01ce58_jump
		cmp    $0x00001a,%al
		je     _01ce58_jump
		cmp    $0x000019,%al
		je     _01ce58_jump
		cmp    $0x00001b,%al
		je     _01ce58_jump
		cmp    $0x000018,%al
		je     _01ce58_jump
		cmp    $0x00001e,%al
		jne    _01ce77_jump

	_01ce58_jump:
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01ce77_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01cebd_jump
		mov    0x000070(%ecx),%dl
		cmp    $0x00000c,%dl
		je     _01ce94_jump
		cmp    $0x00000d,%dl
		je     _01ce94_jump
		cmp    $0x000017,%dl
		je     _01ce94_jump
		cmp    $0x000014,%dl
		jne    _01cebd_jump

	_01ce94_jump:
		mov    _0b9320_data,%edx
		cmp    0x000028(%ecx),%edx
		jle    _01cea8_jump
		orb    $0x000008,0x000085(%ecx)
		jmp    _01ceaf_jump

	_01cea8_jump:
		andb   $0x0000f7,0x000085(%ecx)

	_01ceaf_jump:
		mov    $0x000011,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func

	_01cebd_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01cec0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x000071(%eax)
		jne    _01cee4_jump
		mov    0x000070(%eax),%dh
		cmp    $0x00000d,%dh
		je     _01ced6_jump
		cmp    $0x00000c,%dh
		jne    _01cee4_jump

	_01ced6_jump:
		mov    $0x000014,%edx
		call   _01de98_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cee4_jump:
		cmpb   $0x000000,0x000071(%eax)
		jne    _01cef0_jump
		cmpb   $0x00000b,0x000070(%eax)
		je     _01cf08_jump

	_01cef0_jump:
		cmpb   $0x000000,0x000071(%eax)
		jne    _01cefc_jump
		cmpb   $0x00001e,0x000070(%eax)
		je     _01cf08_jump

	_01cefc_jump:
		cmpb   $0x000001,0x000071(%eax)
		jne    _01cf76_jump
		cmpb   $0x000002,0x000070(%eax)
		jne    _01cf76_jump

	_01cf08_jump:
		mov    _0b9320_data,%edx
		mov    0x000028(%eax),%ebx
		cmp    %ebx,%edx
		setg   %dl
		mov    %dl,%dh
		mov    0x000085(%eax),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		cmp    %dh,%dl
		setne  %dl
		and    $0x0000ff,%edx
		je     _01cf76_jump
		mov    _0b9320_data,%ebx
		mov    0x000028(%eax),%ecx
		lea    0x000085(%eax),%edx
		cmp    %ecx,%ebx
		setg   %bl
		and    $0x0000ff,%ebx
		and    $0x000001,%bl
		mov    (%edx),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%edx)
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%edx)
		mov    $0x000018,%ebx
		movw   $0x000000,0x000040(%eax)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%eax)
		call   _01dea8_func

	_01cf76_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cf7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000001,0x000074(%eax)
		je     _01d1e8_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%di
		mov    0x00006c(%esi),%al
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0b9320_data,%dx
		mov    _0b9364_data,%al
		add    %edx,%eax
		sub    %edi,%eax
		mov    _0c33e8_data,%bl
		mov    %eax,%edi
		test   %bl,%bl
		je     _01cfda_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x00006d(%esi),%al
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0b9324_data,%cx
		mov    _0b9365_data,%bl
		add    %ecx,%ebx
		sub    %eax,%ebx
		jmp    _01cff9_jump

	_01cfda_jump:
		xor    %eax,%eax
		mov    _0b9365_data,%al
		mov    _0b9324_data,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x00006d(%esi),%al
		add    %ebp,%eax
		sub    %eax,%edx
		mov    %edx,%ebx

	_01cff9_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _01d002_jump
		neg    %eax

	_01d002_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _01d00d_jump
		neg    %eax

	_01d00d_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000078(%esi),%al
		mov    0x00006d(%esi),%dl
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x00002c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0b9324_data,%ecx
		mov    _0b9365_data,%al
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01d1ad_jump
		mov    _0b9320_data,%ecx
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%dl
		mov    _0b9364_data,%al
		add    %ebp,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01d063_jump
		testb  $0x000008,0x000085(%esi)
		je     _01d092_jump

	_01d063_jump:
		mov    _0b9320_data,%ecx
		mov    0x000028(%esi),%ebp
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00006c(%esi),%al
		mov    _0b9364_data,%dl
		add    %ebp,%eax
		add    %ecx,%edx
		cmp    %eax,%edx
		jge    _01d1ad_jump
		testb  $0x000008,0x000085(%esi)
		je     _01d1ad_jump

	_01d092_jump:
		cmpw   $0x000000,(%esp)
		jle    _01d0c0_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_01d0c0_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01d0de_jump
		mov    $0x000001,%eax
		jg     _01d0de_jump
		neg    %eax

	_01d0de_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01d0e6_jump
		mov    %ebx,%eax

	_01d0e6_jump:
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jge    _01d0ee_jump
		mov    %ebx,%eax

	_01d0ee_jump:
		mov    %ax,0x000042(%esi)
		test   %ax,%ax
		je     _01d131_jump
		mov    0x00003e(%esi),%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01d115_jump
		mov    $0x000001,%eax
		jg     _01d115_jump
		neg    %eax

	_01d115_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01d11d_jump
		mov    %ebx,%eax

	_01d11d_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01d128_jump
		mov    %ebx,%eax

	_01d128_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01d217_jump

	_01d131_jump:
		testb  $0x000008,0x000085(%esi)
		je     _01d175_jump
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setg   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $0x0000ff,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01d164_jump
		mov    %ebx,%eax

	_01d164_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01d16c_jump
		mov    %ebx,%eax

	_01d16c_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01d217_jump

	_01d175_jump:
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setl   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $0x0000ff,%ecx
		sar    $0x000010,%eax
		add    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01d19f_jump
		mov    %ebx,%eax

	_01d19f_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01d1a7_jump
		mov    %ebx,%eax

	_01d1a7_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01d217_jump

	_01d1ad_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01d1c0_jump
		mov    %ebx,%eax

	_01d1c0_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01d1cb_jump
		mov    %ebx,%eax

	_01d1cb_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01d1e2_jump
		mov    %ebx,%eax

	_01d1e2_jump:
		mov    %ax,0x000042(%esi)
		jmp    _01d217_jump

	_01d1e8_jump:
		mov    _0b9320_data,%ecx
		mov    0x000028(%esi),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%dl
		mov    _0b9364_data,%al
		add    %ebx,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01d20e_jump
		andb   $0x0000f7,0x000085(%esi)
		jmp    _01d217_jump

	_01d20e_jump:
		jge    _01d217_jump
		orb    $0x000008,0x000085(%esi)

	_01d217_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _01d23e_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _01d23e_jump
		testb  $0x000008,0x000085(%esi)
		je     _01d235_jump
		mov    $0xffffffff,%eax
		jmp    _01d23a_jump

	_01d235_jump:
		mov    $0x000001,%eax

	_01d23a_jump:
		mov    %ax,0x000040(%esi)

	_01d23e_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01d24a_jump
		neg    %eax

	_01d24a_jump:
		movswl %ax,%edx
		mov    0x000040(%esi),%ebx
		lea    0x000000(,%edx,4),%edi
		sar    $0x000010,%ebx
		sub    %edx,%edi
		cmp    %ebx,%edi
		jge    _01d266_jump
		movb   $0x000000,0x00006f(%esi)
		jmp    _01d29b_jump

	_01d266_jump:
		lea    0x000000(,%ebx,4),%eax
		lea    0x000000(,%edx,4),%ecx
		sub    %ebx,%eax
		cmp    %eax,%ecx
		jge    _01d280_jump
		movb   $0x000000,0x00006f(%esi)
		jmp    _01d29b_jump

	_01d280_jump:
		shl    $0x000002,%ebx
		cmp    %ebx,%edi
		jge    _01d28d_jump
		movb   $0x00000b,0x00006f(%esi)
		jmp    _01d29b_jump

	_01d28d_jump:
		cmp    %eax,%edx
		jge    _01d297_jump
		movb   $0x00000a,0x00006f(%esi)
		jmp    _01d29b_jump

	_01d297_jump:
		movb   $0x000009,0x00006f(%esi)

	_01d29b_jump:
		cmpw   $0x000000,0x000040(%esi)
		jle    _01d2ba_jump
		mov    0x000085(%esi),%dl
		test   $0x000008,%dl
		je     _01d2ba_jump
		mov    %dl,%bh
		and    $0x0000f7,%bh
		mov    %bh,0x000085(%esi)
		jmp    _01d2d7_jump

	_01d2ba_jump:
		cmpw   $0x000000,0x000040(%esi)
		jge    _01d2d7_jump
		mov    0x000085(%esi),%dh
		test   $0x000008,%dh
		jne    _01d2d7_jump
		mov    %dh,%bl
		or     $0x000008,%bl
		mov    %bl,0x000085(%esi)

	_01d2d7_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d2e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000007,0x000070(%eax)
		jne    _01d30e_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000085(%ecx),%dh
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000085(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01d30e_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01d320_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _01d320_jump
		movw   $0x000000,0x000052(%ecx)

	_01d320_jump:
		mov    0x000074(%ecx),%al
		cmp    $0x000001,%al
		jbe    _01d333_jump
		cmp    $0x000002,%al
		je     _01d3dd_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01d333_jump:
		test   %al,%al
		jne    _01d340_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _01d347_jump

	_01d340_jump:
		orb    $0x000008,0x000085(%ecx)

	_01d347_jump:
		mov    %ecx,%eax
		call   _05a530_func
		mov    0x000071(%ecx),%dh
		movw   $0x000001,0x000050(%ecx)
		test   %dh,%dh
		jne    _01d369_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01dea8_func

	_01d369_jump:
		mov    0x000071(%ecx),%bl
		cmp    $0x000001,%bl
		jne    _01d43f_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02346c_func
		and    $0x0000ff,%eax
		test   %bl,_0a525d_data(%eax)
		je     _01d3cb_jump
		cmpb   $0x000000,0x000074(%ecx)
		jne    _01d3ae_jump
		mov    0x000085(%ecx),%dl
		mov    $0x000001,%ebx
		or     $0x000008,%dl
		mov    %ecx,%eax
		mov    %dl,0x000085(%ecx)
		mov    $0x000002,%edx
		jmp    _01d3c6_jump

	_01d3ae_jump:
		mov    0x000085(%ecx),%ah
		mov    $0x000001,%ebx
		and    $0x0000f7,%ah
		xor    %edx,%edx
		mov    %ah,0x000085(%ecx)
		mov    %ecx,%eax

	_01d3c6_jump:
		call   _065368_func

	_01d3cb_jump:
		mov    %ecx,%eax
		call   _05a530_func
		mov    %ecx,%eax
		call   _023aac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01d3dd_jump:
		mov    0x000071(%ecx),%al
		test   %al,%al
		jbe    _01d3ec_jump
		cmp    $0x000001,%al
		je     _01d409_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01d3ec_jump:
		cmpb   $0x000004,0x000070(%ecx)
		jne    _01d3f8_jump
		movw   $0x000000,0x000052(%ecx)

	_01d3f8_jump:
		cmpb   $0x000008,0x000070(%ecx)
		jne    _01d43f_jump
		mov    %ecx,%eax
		call   _023610_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01d409_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02346c_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		jne    _01d432_jump
		mov    %ecx,%eax
		call   _05a530_func
		mov    %ecx,%eax
		call   _023aac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01d432_jump:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		call   _023aac_func

	_01d43f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d444_func:
		push   %edx
		mov    %eax,%edx
		call   _01d2e4_func
		cmpb   $0x000000,0x000071(%edx)
		jne    _01d46c_jump
		cmpb   $0x000003,0x000070(%edx)
		jne    _01d46c_jump
		cmpw   $0x000000,0x000052(%edx)
		jne    _01d46c_jump
		mov    %edx,%eax
		call   _01d470_func
		movw   $0x000001,0x000052(%edx)

	_01d46c_jump:
		pop    %edx
		ret    



_01d470_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0b9410_data,%esi
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _01d5c8_jump

	_01d492_jump:
		cmpw   $0x000042,0x000064(%esi)
		jne    _01d5b8_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01d5b8_jump
		mov    0x000085(%edi),%al
		and    $0x000008,%al
		mov    0x000085(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000085(%esi)
		or     %al,%dl
		mov    %dl,0x000085(%esi)
		mov    0x000085(%esi),%dh
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%dh
		je     _01d4e0_jump
		mov    $0xfffffffd,%eax
		jmp    _01d4e5_jump

	_01d4e0_jump:
		mov    $0x000003,%eax

	_01d4e5_jump:
		mov    %ax,0x000040(%esi)
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %edi,%eax
		call   _01e1b8_func
		mov    0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    $0x000001,%ebx
		mov    0x000085(%esi),%al
		movb   $0x000004,0x000082(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		movb   $0x000000,0x000071(%esi)
		mov    %al,%dl
		mov    %esi,%eax
		movb   $0x000009,0x000070(%esi)
		call   _065368_func
		mov    %esi,%eax
		call   _01e53c_func
		mov    0x000085(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000085(%esi)
		call   _020064_func
		mov    0x000085(%esi),%bh
		movb   $0x000009,0x00006f(%esi)
		and    $0x0000bf,%bh
		mov    %bh,0x000085(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01d5b8_jump:
		inc    %eax
		add    $0x000088,%esi
		cmp    %dx,%ax
		jl     _01d492_jump

	_01d5c8_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d5d4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01f090_func
		cmpb   $0x000000,0x00007a(%ecx)
		jne    _01d607_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    0x000085(%ecx),%dh
		movb   $0x000000,0x00006f(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000085(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01d607_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01d62b_jump
		mov    0x000070(%ecx),%dh
		cmp    $0x000002,%dh
		je     _01d624_jump
		cmp    $0x000003,%dh
		je     _01d624_jump
		cmp    $0x000004,%dh
		je     _01d624_jump
		cmp    $0x000005,%dh
		jne    _01d62b_jump

	_01d624_jump:
		movb   $0x0000ff,0x000080(%ecx)

	_01d62b_jump:
		mov    _0c1144_data,%eax
		movw   $0x000000,0x000050(%ecx)
		cmpw   $0x000000,0x000040(%eax)
		jle    _01d657_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _065368_func
		orb    $0x000008,0x000085(%ecx)
		jmp    _01d66c_jump

	_01d657_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _065368_func
		andb   $0x0000f7,0x000085(%ecx)

	_01d66c_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _065408_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		movb   $0x000000,0x00006f(%ecx)
		call   _065408_func
		pop    %ecx
		pop    %ebx
		ret    



_01d698_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000001,0x000071(%eax)
		jne    _01d702_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _01d702_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _01d702_jump
		mov    0x000085(%ecx),%dh
		movb   $0x000000,0x00006f(%ecx)
		test   $0x000008,%dh
		jne    _01d6d8_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000003,%edx
		mov    %bh,0x000085(%ecx)
		mov    $0x000001,%ebx
		jmp    _01d6ec_jump

	_01d6d8_jump:
		mov    %dh,%bl
		and    $0x0000f7,%bl
		mov    %bl,0x000085(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_01d6ec_jump:
		call   _065368_func
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _065408_func

	_01d702_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d718_func:
		push   %edx
		xor    %edx,%edx
		mov    %edx,_0c33ec_data
		pop    %edx
		mov    %eax,%eax



_01d724_func:
		ret    



_01d728_func:
		cmpb   $0x000000,_0c3372_data
		je     _01d724_func
		mov    $_0c31d0_data,%eax
		jmp    _071f50_func



_01d740_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000071(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000070(%eax),%dl
		mov    (%ebx),%ecx
		shl    $0x000003,%edx
		add    %edx,%ecx
		testb  $0x000010,0x000007(%ecx)
		je     _01d768_jump
		cmpb   $0x000000,0x00006f(%eax)
		jmp    _01d78f_jump

	_01d768_jump:
		xor    %ebx,%ebx
		mov    0x00006e(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		mov    0x00006f(%eax),%al
		and    $0x0000ff,%eax
		dec    %edx
		cmp    %edx,%eax

	_01d78f_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _01d7b2_jump
		mov    0x000005(%ecx),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0c334a_data(%eax)
		jne    _01d7b2_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01d7b2_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d828_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0b9412_data,%ebp
		mov    _0b9410_data,%esi
		sar    $0x000010,%ebp
		xor    %edi,%edi
		test   %ebp,%ebp
		jle    _01d899_jump

	_01d846_jump:
		mov    %edi,%eax
		mov    %edi,%edx
		sar    $0x000004,%eax
		and    $0x00000f,%edx
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		shl    $0x000002,%eax
		and    $0x0000ff,%edx
		add    $_0bef10_data,%eax
		call   _062634_func
		mov    0x000004(%esp),%eax
		mov    %eax,0x000024(%esi)
		mov    (%esp),%al
		and    $0x000001,%al
		mov    0x000085(%esi),%ah
		and    $0x0000fb,%ah
		mov    %ah,0x000085(%esi)
		shl    $0x000002,%al
		mov    %ah,%dl
		add    $0x000088,%esi
		or     %al,%dl
		inc    %edi
		mov    %dl,-0x000003(%esi)
		cmp    %ebp,%edi
		jl     _01d846_jump

	_01d899_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01d8a4_switch:
		.long   _01dadf_case
		.long   _01daf0_case
		.long   _01daf9_case
		.long   _01dae5_case

_01d8b4_switch:
		.long   _01db4a_case
		.long   _01db5b_case
		.long   _01db64_case
		.long   _01db50_case


	_01dadf_case:
		add    0x000040(%edi),%bx
		jmp    _01db06_jump

	_01dae5_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ebx
		jmp    _01daff_jump

	_01daf0_case:
		add    0x000040(%edi),%bx
		shl    $0x000004,%ebx
		jmp    _01db06_jump

	_01daf9_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax

	_01daff_jump:
		call   _05a4ac_func
		add    %eax,%ebx

	_01db06_jump:
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		mov    _0a529e_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000064(%edi),%ax
		mov    _0a529e_data(,%eax,4),%al
		shl    $0x000002,%dl
		shl    $0x000002,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %eax,%eax
		and    $0x0000ff,%edx
		add    %edx,%eax
		cmp    $0x000003,%eax
		ja     _01db71_jump
		jmp    *%cs:_01d8b4_switch(,%eax,4)

	_01db4a_case:
		add    0x000042(%edi),%cx
		jmp    _01db71_jump

	_01db50_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ecx
		jmp    _01db6a_jump

	_01db5b_case:
		add    0x000042(%edi),%cx
		shl    $0x000004,%ecx
		jmp    _01db71_jump

	_01db64_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax

	_01db6a_jump:
		call   _05a4ac_func
		add    %eax,%ecx

	_01db71_jump:
		mov    %bx,0x000040(%esi)
		mov    %cx,0x000042(%esi)
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01db84_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0b9410_data,%eax
		mov    _0b9414_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _01dbad_jump

	_01db9c_jump:
		cmp    0x000064(%eax),%cx
		je     _01dbad_jump
		inc    %edx
		add    $0x000088,%eax
		cmp    %bx,%dx
		jl     _01db9c_jump

	_01dbad_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01dbe8_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		add    (%ecx),%dx
		mov    0x00002c(%eax),%ax
		and    $0x00000f,%dh
		mov    0x00003e(%esi),%di
		mov    %eax,%esi
		movswl %dx,%eax
		sar    $0x000003,%eax
		cwtl   
		sub    %edi,%esi
		call   _062710_func
		movswl %ax,%edi
		movswl %bx,%eax
		imul   %edi,%eax
		sar    $0x000009,%eax
		mov    %dx,(%ecx)
		sub    %esi,%eax
		pop    %edi
		pop    %esi
		ret    



_01dc20_func:
		mov    %ax,_0c3100_data
		mov    %dx,_0c30fe_data
		ret    



_01dc30_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cmpb   $0x000000,_0c33b5_data
		jne    _01dc42_jump
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_01dc42_jump:
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01dc70_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%ecx
		imul   %ecx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01dc98_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0c30fe_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01dcd4_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0c30fc_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01dd10_func:
		mov    %al,_0c33b5_data
		ret    



_01dd88_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x000071(%ebx),%al
		mov    0x00000c(%ebx),%ecx
		shl    $0x000002,%eax
		lea    (%ecx,%eax,1),%esi
		xor    %eax,%eax
		mov    0x000070(%ebx),%al
		lea    0x000000(,%eax,8),%ecx
		mov    (%esi),%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    0x000004(%ebx),%ebx
		mov    0x000002(%eax),%cl
		mov    0x000005(%eax),%dh
		lea    0x000000(,%ecx,4),%eax
		and    $0x00000f,%dh
		sub    %ecx,%eax
		movzbw %dh,%si
		imul   0x00000a(%ebx,%eax,4),%si
		xor    %ebx,%ebx
		mov    %dl,%bl
		imul   %esi,%ebx
		xor    %eax,%eax
		mov    %dh,%al
		mov    _0c334a_data(%eax),%al
		xor    %ah,%ah
		sub    %eax,%ebx
		mov    %ebx,%eax
		inc    %eax
		test   %ax,%ax
		jle    _01ddee_jump
		cwtl   
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_01ddee_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01ddf8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x00006e(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x000004(%ebx,%edx,4),%edx
		xor    %ebx,%ebx
		mov    0x00006f(%eax),%bl
		shl    $0x000002,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%edx),%bl
		mov    %bx,(%ecx)
		xor    %ebx,%ebx
		mov    0x000018(%esp),%ebp
		mov    0x000003(%edx),%bl
		mov    %bx,0x000000(%ebp)
		testb  $0x000008,0x000085(%eax)
		jne    _01de4b_jump
		xor    %ebx,%ebx
		mov    0x000028(%eax),%cx
		mov    (%edx),%bl
		add    %ebx,%ecx
		jmp    _01de7b_jump

	_01de4b_jump:
		xor    %ebx,%ebx
		mov    0x00006c(%eax),%bl
		add    %ebx,%ebx
		mov    %ebx,(%esp)
		mov    0x000028(%eax),%bx
		add    (%esp),%ebx
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		mov    (%edx),%bl
		mov    %ebx,0x000004(%esp)
		mov    (%esp),%ebx
		sub    0x000004(%esp),%ebx
		mov    %ebx,0x000004(%esp)
		mov    (%ecx),%bx
		mov    0x000004(%esp),%ecx
		sub    %ebx,%ecx

	_01de7b_jump:
		mov    %cx,(%esi)
		mov    0x000001(%edx),%dl
		mov    0x00002c(%eax),%ax
		xor    %dh,%dh
		add    %edx,%eax
		mov    %ax,(%edi)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01de98_func:
		movb   $0x000001,0x000077(%eax)
		mov    %dl,0x000070(%eax)
		ret    



_01dea0_func:
		movb   $0x000001,0x000077(%eax)
		mov    %dl,0x000071(%eax)
		ret    



_01dea8_func:
		movb   $0x000001,0x000077(%eax)
		mov    %dl,0x000071(%eax)
		mov    %bl,0x000070(%eax)
		ret    



_01deb4_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000064(%eax),%ax
		cmp    $0x00008a,%ax
		jb     _01df30_jump
		jbe    _01df86_jump
		cmp    $0x0000ae,%ax
		jb     _01df07_jump
		jbe    _01df7f_jump
		cmp    $0x0000bd,%ax
		jb     _01def8_jump
		jbe    _01df5f_jump
		cmp    $0x0000e1,%ax
		jb     _01df94_jump
		cmp    $0x0000e2,%ax
		jbe    _01df7f_jump
		jmp    _01df94_jump

	_01def8_jump:
		cmp    $0x0000b8,%ax
		je     _01df7f_jump
		jmp    _01df94_jump

	_01df07_jump:
		cmp    $0x00008c,%ax
		jb     _01df94_jump
		jbe    _01df8d_jump
		cmp    $0x00009a,%ax
		jb     _01df94_jump
		cmp    $0x00009b,%ax
		jbe    _01df86_jump
		jmp    _01df94_jump

	_01df30_jump:
		cmp    $0x000031,%ax
		jb     _01df51_jump
		jbe    _01df6d_jump
		cmp    $0x00006a,%ax
		jb     _01df94_jump
		jbe    _01df66_jump
		cmp    $0x00007b,%ax
		je     _01df74_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01df51_jump:
		cmp    $0x000016,%ax
		jb     _01df94_jump
		jbe    _01df94_jump
		cmp    $0x00002d,%ax
		jne    _01df94_jump

	_01df5f_jump:
		mov    $0x000012,%eax
		pop    %edx
		ret    

	_01df66_jump:
		mov    $0x000046,%eax
		pop    %edx
		ret    

	_01df6d_jump:
		mov    $0x000080,%eax
		pop    %edx
		ret    

	_01df74_jump:
		mov    0x000079(%edx),%al
		cmp    $0x000005,%al
		jb     _01df94_jump
		cmp    $0x000007,%al
		ja     _01df94_jump

	_01df7f_jump:
		mov    $0x000050,%eax
		pop    %edx
		ret    

	_01df86_jump:
		mov    $0x000068,%eax
		pop    %edx
		ret    

	_01df8d_jump:
		mov    $0x000024,%eax
		pop    %edx
		ret    

	_01df94_jump:
		mov    $0x000028,%eax
		pop    %edx
		ret    



_01df9c_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000064(%eax),%ax
		cmp    $0x00008c,%ax
		jb     _01e013_jump
		jbe    _01e0a1_jump
		cmp    $0x0000b8,%ax
		jb     _01dff0_jump
		jbe    _01e0ab_jump
		cmp    $0x0000c3,%ax
		jb     _01dfe1_jump
		jbe    _01e0b5_jump
		cmp    $0x0000e1,%ax
		jb     _01e0bf_jump
		cmp    $0x0000e2,%ax
		jbe    _01e0ab_jump
		jmp    _01e0bf_jump

	_01dfe1_jump:
		cmp    $0x0000bd,%ax
		je     _01e05b_jump
		jmp    _01e0bf_jump

	_01dff0_jump:
		cmp    $0x00009a,%ax
		jb     _01e0bf_jump
		cmp    $0x00009b,%ax
		jbe    _01e097_jump
		cmp    $0x0000ae,%ax
		je     _01e0ab_jump
		jmp    _01e0bf_jump

	_01e013_jump:
		cmp    $0x000031,%ax
		jb     _01e045_jump
		jbe    _01e079_jump
		cmp    $0x00007b,%ax
		jb     _01e037_jump
		jbe    _01e065_jump
		cmp    $0x00008a,%ax
		je     _01e097_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01e037_jump:
		cmp    $0x00006a,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01e045_jump:
		cmp    $0x000016,%ax
		jb     _01e0bf_jump
		jbe    _01e0bf_jump
		cmp    $0x00002d,%ax
		jne    _01e0bf_jump

	_01e05b_jump:
		mov    $0x000012,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01e065_jump:
		mov    0x000079(%ebx),%al
		cmp    $0x000005,%al
		jb     _01e0c4_jump
		jbe    _01e08d_jump
		cmp    $0x000007,%al
		ja     _01e0c4_jump
		cmpw   $0x000000,0x000042(%ebx)
		jle    _01e083_jump

	_01e079_jump:
		mov    $0x000040,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01e083_jump:
		mov    $0x00004e,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01e08d_jump:
		mov    $0x000048,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01e097_jump:
		mov    $0x000068,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01e0a1_jump:
		mov    $0x000020,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01e0ab_jump:
		mov    $0x000060,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01e0b5_jump:
		mov    $0x00005a,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01e0bf_jump:
		mov    $0x000028,%edx

	_01e0c4_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_01e0cc_func:
		push   %ecx
		push   %esi
		movswl %bx,%ebx
		movswl %dx,%edx
		mov    0x00002c(%eax),%ecx
		mov    0x000028(%eax),%esi
		add    %ecx,%ebx
		add    %esi,%edx
		sar    $0x000004,%ebx
		sar    $0x000004,%edx
		movswl %bx,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _01ea94_func
		and    $0x0000ff,%eax
		mov    _0a525d_data(%eax),%al
		shl    $0x000002,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		pop    %esi
		pop    %ecx
		ret    



_01e108_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %ebx,%edx
		mov    0x000008(%esi),%bx
		and    $0x00003f,%bh
		xor    %ecx,%ecx
		and    $0x00ffff,%ebx
		mov    0x00006f(%eax),%cl
		imul   %ecx,%ebx
		lea    0x000000(,%ebx,4),%ecx
		mov    (%esi),%ebx
		mov    0x000008(%edx),%si
		and    $0x003fff,%esi
		movzwl %si,%ebp
		movswl %di,%esi
		imul   %ebp,%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x000079(%eax),%cl
		mov    (%edx),%edx
		shl    $0x000002,%ecx
		shl    $0x000002,%esi
		add    %ecx,%ebx
		add    %esi,%edx
		movzbl 0x000003(%ebx),%esi
		add    %edx,%ecx
		lea    0x000000(,%esi,4),%edx
		sub    %esi,%edx
		mov    (%eax),%esi
		movzbw 0x000005(%esi,%edx,4),%si
		testb  $0x000008,0x000085(%eax)
		je     _01e192_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		add    %edx,%edx
		sub    %esi,%edx
		mov    %edx,%edi
		movzbw 0x000001(%ecx),%si
		sub    %esi,%edi
		mov    %edi,%esi
		movzbw 0x000001(%ebx),%di
		sub    %edi,%edx
		jmp    _01e19c_jump

	_01e192_jump:
		xor    %edx,%edx
		movzbw 0x000001(%ecx),%si
		mov    0x000001(%ebx),%dl

	_01e19c_jump:
		mov    0x000002(%ebx),%bl
		mov    0x000002(%ecx),%cl
		xor    %bh,%bh
		xor    %ch,%ch
		sub    %esi,%edx
		sub    %ecx,%ebx
		mov    %dx,0x00004e(%eax)
		mov    %bx,0x00004c(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01e1b8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		xor    %ebx,%ebx
		mov    0x00006e(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ebx
		add    %ebx,%edx
		mov    0x000008(%edx),%bx
		xor    %ecx,%ecx
		and    $0x00003f,%bh
		mov    %bx,%cx
		xor    %ebx,%ebx
		mov    0x00006f(%eax),%bl
		imul   %ecx,%ebx
		mov    (%edx),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%dl
		mov    %dl,%cl
		mov    %dl,0x000008(%esp)
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    (%eax),%ecx
		add    %ecx,%edx
		cmpb   $0x000000,0x000008(%esp)
		je     _01e2f3_jump
		cmpb   $0x000000,0x000004(%edx)
		je     _01e2f3_jump
		xor    %ecx,%ecx
		mov    0x000007(%edx),%cl
		mov    0x000020(%esp),%ebp
		mov    %cx,0x000000(%ebp)
		xor    %ecx,%ecx
		mov    0x000024(%esp),%ebp
		mov    0x000008(%edx),%cl
		mov    %cx,0x000000(%ebp)
		mov    0x000085(%eax),%cl
		shl    $0x000004,%cl
		shr    $0x000007,%cl
		movzbl %cl,%ebp
		mov    0x00000b(%edx),%cl
		shl    $0x000005,%cl
		shr    $0x000007,%cl
		mov    %cl,0x00000c(%esp)
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%cl
		xor    %ebp,%ecx
		je     _01e2aa_jump
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %ecx,(%esp)
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		mov    (%esp),%ebp
		and    $0x0000ff,%ecx
		add    %ecx,%ebp
		xor    %ecx,%ecx
		mov    0x00006c(%eax),%cl
		add    %ecx,%ecx
		sub    %ebp,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    (%esp),%ebp
		mov    0x000005(%edx),%cl
		sub    %ecx,%ebp
		mov    %ebp,%ecx
		mov    0x000028(%eax),%ebp
		jmp    _01e2be_jump

	_01e2aa_jump:
		mov    0x000001(%ebx),%cl
		mov    0x000028(%eax),%ebp
		add    %ecx,%ebp
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		and    $0x0000ff,%ecx

	_01e2be_jump:
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		mov    (%esp),%ecx
		mov    %cx,(%esi)
		mov    0x000002(%ebx),%bl
		mov    0x000009(%edx),%dl
		and    $0x0000ff,%ebx
		shr    $0x000004,%dl
		and    $0x0000ff,%edx
		add    %ebx,%edx
		add    0x00002c(%eax),%edx
		mov    $0x000001,%al
		mov    %dx,(%edi)
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01e2f3_jump:
		xor    %al,%al
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01e300_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    0x000018(%esp),%ebp
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		shl    $0x000002,%eax
		mov    %eax,(%esp)
		mov    (%esp),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%edx),%eax
		add    (%esp),%eax
		testb  $0x000040,0x000007(%eax)
		je     _01e35f_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00000e,0x000000(%ebp)
		jmp    _01e41b_jump

	_01e35f_jump:
		mov    0x000071(%esi),%dh
		cmp    $0x000005,%dh
		jne    _01e38f_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00002e,0x000000(%ebp)
		jmp    _01e41b_jump

	_01e38f_jump:
		cmp    $0x000007,%dh
		jne    _01e3f8_jump
		xor    %eax,%eax
		mov    0x00006f(%esi),%al
		cmp    $0x000020,%ax
		jle    _01e3a2_jump
		sub    $0x000020,%eax

	_01e3a2_jump:
		cmp    $0x000009,%ax
		jle    _01e3d3_jump
		cmp    $0x000017,%ax
		jge    _01e3d3_jump
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,(%ebx)
		movw   $0x000024,(%ecx)
		movw   $0x000014,0x000000(%ebp)
		jmp    _01e41b_jump

	_01e3d3_jump:
		mov    0x000028(%esi),%ax
		add    $0x000046,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000014,(%ecx)
		movw   $0x000028,0x000000(%ebp)
		jmp    _01e41b_jump

	_01e3f8_jump:
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000018,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x000036,0x000000(%ebp)

	_01e41b_jump:
		cmpw   $0x000000,0x00005e(%esi)
		je     _01e4bb_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x00006d(%esi),%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    %eax,0x000004(%esp)
		mov    0x000028(%esi),%ax
		add    0x000004(%esp),%eax
		mov    %ax,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _01dc20_func
		mov    0x00005c(%esi),%eax
		movswl (%edi),%edx
		sar    $0x000010,%eax
		call   _01dc98_func
		mov    %ax,(%edi)
		mov    0x00005c(%esi),%eax
		movswl (%ebx),%edx
		sar    $0x000010,%eax
		call   _01dcd4_func
		mov    %ax,(%ebx)
		mov    0x00005c(%esi),%eax
		movswl (%ecx),%edx
		sar    $0x000010,%eax
		call   _01dc70_func
		mov    %ax,(%ecx)
		mov    0x00005c(%esi),%eax
		movswl 0x000000(%ebp),%edx
		sar    $0x000010,%eax
		call   _01dc70_func
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x000038(%esi),%bx
		mov    0x00006d(%esi),%al
		add    %ebx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000036(%esi),%cx
		mov    0x00006c(%esi),%al
		add    %ecx,%eax
		cwtl   
		call   _01dc20_func

	_01e4bb_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01e4c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0b9320_data,%ebx
		mov    _0b9364_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		xor    %ebx,%ebx
		sub    %ecx,%edx
		mov    0x00006c(%eax),%bl
		sub    %ebx,%edx
		test   %edx,%edx
		jle    _01e4f2_jump
		orb    $0x000008,0x000085(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01e4f2_jump:
		andb   $0x0000f7,0x000085(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e500_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000064(%eax),%ax
		cmp    $0x000009,%ax
		jb     _01e51f_jump
		jbe    _01e525_jump
		cmp    $0x000090,%ax
		jb     _01e530_jump
		jbe    _01e525_jump
		cmp    $0x0000a5,%ax
		je     _01e525_jump
		jmp    _01e530_jump

	_01e51f_jump:
		cmp    $0x000003,%ax
		jne    _01e530_jump

	_01e525_jump:
		cmpb   $0x000001,0x00007f(%edx)
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    

	_01e530_jump:
		cmpb   $0x000001,0x00007f(%edx)
		setae  %al
		xor    %ah,%ah
		pop    %edx
		ret    



_01e53c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c3166_data,%bx
		mov    0x00002c(%eax),%dx
		sub    %ebx,%edx
		mov    %dx,0x000038(%eax)
		mov    _0c3162_data,%cx
		mov    0x000028(%eax),%dx
		sub    %ecx,%edx
		add    $0x000008,%edx
		mov    %dx,0x000036(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e568_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		movb   $0x0000ff,(%esp)
		mov    0x000064(%ecx),%ax
		cmp    $0x000046,%ax
		jb     _01e5e4_jump
		jbe    _01e83b_jump
		cmp    $0x00009c,%ax
		jb     _01e5ba_jump
		jbe    _01e992_jump
		cmp    $0x0000c3,%ax
		jb     _01e5ab_jump
		jbe    _01e9c9_jump
		cmp    $0x0000d9,%ax
		je     _01e8fc_jump
		jmp    _01ea41_jump

	_01e5ab_jump:
		cmp    $0x0000a5,%ax
		je     _01e716_jump
		jmp    _01ea41_jump

	_01e5ba_jump:
		cmp    $0x00007b,%ax
		jb     _01e5d5_jump
		jbe    _01e643_jump
		cmp    $0x000098,%ax
		je     _01e93f_jump
		jmp    _01ea41_jump

	_01e5d5_jump:
		cmp    $0x000064,%ax
		je     _01e91f_jump
		jmp    _01ea41_jump

	_01e5e4_jump:
		cmp    $0x000023,%ax
		jb     _01e61e_jump
		jbe    _01e7fa_jump
		cmp    $0x00003c,%ax
		jb     _01e60f_jump
		cmp    $0x00003d,%ax
		jbe    _01e890_jump
		cmp    $0x000041,%ax
		je     _01e8d5_jump
		jmp    _01ea41_jump

	_01e60f_jump:
		cmp    $0x00002b,%ax
		je     _01e7fa_jump
		jmp    _01ea41_jump

	_01e61e_jump:
		cmp    $0x000009,%ax
		jb     _01e639_jump
		jbe    _01e716_jump
		cmp    $0x000014,%ax
		je     _01e7a9_jump
		jmp    _01ea41_jump

	_01e639_jump:
		test   %ax,%ax
		je     _01e69f_jump
		jmp    _01ea41_jump

	_01e643_jump:
		mov    0x000079(%ecx),%dh
		cmp    $0x000001,%dh
		je     _01e65e_jump
		cmp    $0x000002,%dh
		je     _01e65e_jump
		cmp    $0x000004,%dh
		je     _01e65e_jump
		cmp    $0x000007,%dh
		jne    _01ea41_jump

	_01e65e_jump:
		mov    0x000074(%ecx),%ah
		test   %ah,%ah
		jne    _01e67d_jump
		mov    0x000085(%ecx),%al
		mov    $0x000003,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e67d_jump:
		cmp    $0x000001,%ah
		jne    _01ea41_jump
		mov    0x000085(%ecx),%bl
		mov    $0x000002,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e69f_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01e6d5_jump
		mov    0x000070(%ecx),%dl
		cmp    $0x000003,%dl
		je     _01ea41_jump
		cmp    $0x000001,%dl
		je     _01ea41_jump
		cmp    $0x000005,%dl
		je     _01ea41_jump
		cmp    $0x000004,%dl
		je     _01ea41_jump
		cmp    $0x000006,%dl
		je     _01ea41_jump

	_01e6d5_jump:
		mov    0x000074(%ecx),%ah
		test   %ah,%ah
		jne    _01e6f4_jump
		mov    0x000085(%ecx),%al
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e6f4_jump:
		cmp    $0x000001,%ah
		jne    _01ea41_jump
		mov    0x000085(%ecx),%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e716_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01e731_jump
		mov    0x000070(%ecx),%bl
		cmp    $0x000003,%bl
		je     _01ea41_jump
		cmp    $0x000001,%bl
		je     _01ea41_jump

	_01e731_jump:
		mov    0x000085(%ecx),%al
		test   $0x000010,%al
		je     _01e772_jump
		mov    0x000074(%ecx),%ah
		test   %ah,%ah
		jne    _01e754_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e754_jump:
		cmp    $0x000001,%ah
		jne    _01ea41_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e772_jump:
		mov    0x000074(%ecx),%ah
		test   %ah,%ah
		jne    _01e78b_jump
		mov    $0x000006,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e78b_jump:
		cmp    $0x000001,%ah
		jne    _01ea41_jump
		mov    %al,%bl
		mov    $0x000005,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e7a9_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01e7b9_jump
		cmpb   $0x000003,0x000070(%ecx)
		je     _01ea41_jump

	_01e7b9_jump:
		mov    0x000074(%ecx),%dh
		test   %dh,%dh
		jne    _01e7d9_jump
		mov    0x000085(%ecx),%dl
		mov    $0x000001,%ah
		or     $0x000008,%dl
		mov    %ah,(%esp)
		mov    %dl,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e7d9_jump:
		cmp    $0x000001,%dh
		jne    _01ea41_jump
		mov    0x000085(%ecx),%al
		xor    %bh,%bh
		and    $0x0000f7,%al
		mov    %bh,(%esp)
		mov    %al,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e7fa_jump:
		mov    0x000074(%ecx),%ah
		test   %ah,%ah
		jne    _01e819_jump
		mov    0x000085(%ecx),%al
		mov    $0x000005,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e819_jump:
		cmp    $0x000001,%ah
		jne    _01ea41_jump
		mov    0x000085(%ecx),%bl
		mov    $0x000004,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e83b_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01e84b_jump
		cmpb   $0x000001,0x000070(%ecx)
		je     _01ea41_jump

	_01e84b_jump:
		mov    0x000085(%ecx),%al
		test   $0x000010,%al
		je     _01ea41_jump
		mov    0x000074(%ecx),%ah
		test   %ah,%ah
		jne    _01e872_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e872_jump:
		cmp    $0x000001,%ah
		jne    _01ea41_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e890_jump:
		mov    0x000085(%ecx),%al
		test   $0x000010,%al
		je     _01ea41_jump
		mov    0x000074(%ecx),%ah
		test   %ah,%ah
		jne    _01e8b7_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e8b7_jump:
		cmp    $0x000001,%ah
		jne    _01ea41_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e8d5_jump:
		cmpb   $0x000000,0x000074(%ecx)
		jne    _01e8eb_jump
		orb    $0x000008,0x000085(%ecx)
		movb   $0x000002,(%esp)
		jmp    _01ea41_jump

	_01e8eb_jump:
		andb   $0x0000f7,0x000085(%ecx)
		xor    %dh,%dh
		mov    %dh,(%esp)
		jmp    _01ea41_jump

	_01e8fc_jump:
		mov    0x000085(%ecx),%dl
		test   $0x000008,%dl
		jne    _01e914_jump
		mov    %dl,%bl
		or     $0x000008,%bl
		mov    %bl,0x000085(%ecx)
		jmp    _01e91f_jump

	_01e914_jump:
		mov    %dl,%dh
		and    $0x0000f7,%dh
		mov    %dh,0x000085(%ecx)

	_01e91f_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01e92f_jump
		cmpb   $0x000003,0x000070(%ecx)
		je     _01ea41_jump

	_01e92f_jump:
		mov    $0x000003,%dh
		movw   $0x000000,0x00004a(%ecx)
		mov    %dh,(%esp)
		jmp    _01ea41_jump

	_01e93f_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01e94f_jump
		cmpb   $0x000002,0x000070(%ecx)
		je     _01ea41_jump

	_01e94f_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01dea8_func
		mov    0x000085(%ecx),%bl
		test   $0x000008,%bl
		jne    _01e97d_jump
		mov    %bl,%ah
		mov    $0x000003,%dl
		or     $0x000008,%ah
		mov    %dl,(%esp)
		mov    %ah,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e97d_jump:
		mov    %bl,%bh
		mov    $0x000002,%al
		and    $0x0000f7,%bh
		mov    %al,(%esp)
		mov    %bh,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e992_jump:
		mov    0x000074(%ecx),%dl
		test   %dl,%dl
		jne    _01e9a9_jump
		movb   $0x000002,(%esp)
		orb    $0x000008,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e9a9_jump:
		cmp    $0x000001,%dl
		jne    _01ea41_jump
		mov    0x000085(%ecx),%bh
		and    $0x0000f7,%bh
		mov    %dl,(%esp)
		mov    %bh,0x000085(%ecx)
		jmp    _01ea41_jump

	_01e9c9_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01e9d5_jump
		cmpb   $0x000018,0x000070(%ecx)
		je     _01ea41_jump

	_01e9d5_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01e9e1_jump
		cmpb   $0x000012,0x000070(%ecx)
		je     _01ea41_jump

	_01e9e1_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _01e9ed_jump
		cmpb   $0x000013,0x000070(%ecx)
		je     _01ea41_jump

	_01e9ed_jump:
		mov    $0x000018,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    0x000085(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000085(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		movw   $0x000000,0x000042(%ecx)
		mov    %bh,%ah
		mov    %bh,0x000085(%ecx)
		or     %al,%ah
		mov    %ah,0x000085(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)

	_01ea41_jump:
		cmpb   $0x0000ff,(%esp)
		je     _01ea8d_jump
		xor    %eax,%eax
		mov    0x000064(%ecx),%ax
		testb  $0x000010,_0a529e_data(,%eax,4)
		je     _01ea68_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _05a4ac_func
		cwtl   
		sub    %eax,0x000028(%ecx)
		jmp    _01ea76_jump

	_01ea68_jump:
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_01ea76_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		movw   $0x000000,0x000040(%ecx)
		call   _065368_func

	_01ea8d_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ea94_func:
		push   %ebx
		push   %ecx
		push   %esi
		movswl %ax,%esi
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    _0c1124_data,%cx
		mov    %esi,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01eab7_jump
		cmp    %ecx,%eax
		jg     _01eab7_jump
		mov    $0x000001,%eax
		jmp    _01eab9_jump

	_01eab7_jump:
		xor    %eax,%eax

	_01eab9_jump:
		test   %eax,%eax
		je     _01eb0c_jump
		movswl %dx,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    _0c1126_data,%cx
		mov    %edx,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01eadd_jump
		cmp    %ecx,%eax
		jg     _01eadd_jump
		mov    $0x000001,%eax
		jmp    _01eadf_jump

	_01eadd_jump:
		xor    %eax,%eax

	_01eadf_jump:
		test   %eax,%eax
		je     _01eb0c_jump
		xor    %eax,%eax
		mov    _0c1124_data,%ax
		imul   %eax,%edx
		add    %esi,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c112c_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_01eb0c_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01eb14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		cmpw   $0x000017,0x000064(%eax)
		jne    _01eb37_jump
		testb  $0x000002,_0c3348_data
		je     _01eb33_jump
		mov    $0x000004,%dl
		jmp    _01eb39_jump

	_01eb33_jump:
		mov    $0x000008,%dl
		jmp    _01eb39_jump

	_01eb37_jump:
		mov    $0x000010,%dl

	_01eb39_jump:
		movzbw 0x00006c(%esi),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x00006d(%esi),%al
		add    %ebx,%edi
		mov    0x00002c(%esi),%bx
		add    %eax,%ebx
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    %ebx,0x000010(%esp)
		test   %ax,%ax
		js     _01eb61_jump
		sar    %cl,%ax
		jmp    _01eb6a_jump

	_01eb61_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01eb6a_jump:
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %ax,0x000014(%esp)
		mov    %edi,%eax
		test   %ax,%ax
		js     _01eb7f_jump
		sar    %cl,%ax
		jmp    _01eb88_jump

	_01eb7f_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01eb88_jump:
		mov    %ax,0x00000c(%esp)
		mov    %ax,0x000008(%esp)
		mov    %edi,%eax
		xor    %dh,%dh
		mov    $0x000004,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _01eba4_jump
		sar    %cl,%ax
		jmp    _01ebad_jump

	_01eba4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01ebad_jump:
		mov    %ax,(%esp)
		mov    %edi,%eax
		mov    $0x000004,%cl
		add    %edx,%eax
		test   %ax,%ax
		js     _01ebc1_jump
		sar    %cl,%ax
		jmp    _01ebca_jump

	_01ebc1_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01ebca_jump:
		mov    %ax,0x000004(%esp)
		mov    %ebx,%eax
		mov    0x00000a(%esp),%ecx
		dec    %eax
		sar    $0x000010,%ecx
		movswl %ax,%edx
		mov    %ecx,%eax
		movswl %bx,%ebx
		call   _01ea94_func
		mov    %al,0x000069(%esi)
		mov    -0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		call   _01ea94_func
		mov    0x000071(%esi),%dl
		mov    %al,0x000067(%esi)
		cmp    $0x000002,%dl
		jne    _01ec2d_jump
		mov    0x000010(%esp),%eax
		xor    %ah,%ah
		and    $0x00000f,%edi
		and    $0x00000f,%al
		mov    %ebx,%edx
		movswl %ax,%ebp
		mov    %ecx,%eax
		movswl %di,%edi
		call   _01ea94_func
		and    $0x0000ff,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _023048_func
		cwtl   
		jmp    _01ec3b_jump

	_01ec2d_jump:
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01ea94_func
		and    $0x0000ff,%eax

	_01ec3b_jump:
		mov    0x000012(%esp),%edx
		mov    %al,0x000066(%esi)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01ea94_func
		mov    %al,0x000068(%esi)
		mov    0x000014(%esp),%eax
		inc    %eax
		movswl %ax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		call   _01ea94_func
		mov    %al,0x00006a(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ec9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _01eb14_func
		movzbw 0x00006c(%ebx),%si
		mov    0x000028(%ebx),%dx
		movzbw 0x00006d(%ebx),%di
		mov    0x00002c(%ebx),%cx
		mov    0x000064(%ebx),%ax
		add    %edx,%esi
		add    %ecx,%edi
		cmp    $0x000017,%ax
		jne    _01ed22_jump
		mov    $0xffffffff,%edx
		mov    _0b935e_data,%cl
		mov    %dx,_0b9348_data
		cmp    $0x00000c,%cl
		jb     _01ed07_jump
		jbe    _01ed11_jump
		cmp    $0x000012,%cl
		jb     _01ecfb_jump
		cmp    $0x000017,%cl
		jbe    _01ed1a_jump
		cmp    $0x000019,%cl
		jbe    _01ed22_jump
		cmp    $0x00001e,%cl
		je     _01ed1a_jump
		jmp    _01ed22_jump

	_01ecfb_jump:
		cmp    $0x00000e,%cl
		jb     _01ed22_jump
		cmp    $0x00000f,%cl
		jbe    _01ed11_jump
		jmp    _01ed22_jump

	_01ed07_jump:
		cmp    $0x000002,%cl
		jb     _01ed22_jump
		cmp    $0x000007,%cl
		ja     _01ed22_jump

	_01ed11_jump:
		movb   $0x000001,_0c33c4_data
		jmp    _01ed22_jump

	_01ed1a_jump:
		xor    %ah,%ah
		mov    %ah,_0c33c4_data

	_01ed22_jump:
		xor    %eax,%eax
		mov    0x000066(%ebx),%al
		testb  $0x000002,_0a525d_data(%eax)
		jne    _01efad_jump
		cmpw   $0x000017,0x000064(%ebx)
		jne    _01ed56_jump
		mov    _0b934c_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c112c_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		jmp    _01ed6b_jump

	_01ed56_jump:
		movswl %di,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func

	_01ed6b_jump:
		mov    0x000071(%ebx),%cl
		cmp    $0x000002,%cl
		jne    _01ed97_jump
		xor    %edx,%edx
		mov    %al,%dl
		test   %cl,_0a525d_data(%edx)
		jne    _01ed97_jump
		movswl %di,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func

	_01ed97_jump:
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_0a525d_data(%edx)
		je     _01edab_jump
		xor    %ah,%ah
		jmp    _01efb2_jump

	_01edab_jump:
		xor    %eax,%eax
		mov    0x000068(%ebx),%al
		mov    _0a525d_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,2),%edx
		xor    %eax,%eax
		mov    0x000067(%ebx),%al
		mov    _0a525d_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    %al,%cl
		cmp    $0x000003,%al
		jne    _01edf8_jump
		mov    %esi,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		cmp    $0x000008,%ax
		jge    _01edf6_jump
		mov    $0x000001,%cl
		jmp    _01edf8_jump

	_01edf6_jump:
		mov    $0x000002,%cl

	_01edf8_jump:
		test   %cl,%cl
		je     _01efad_jump
		mov    0x000064(%ebx),%ax
		dec    %cl
		cmp    $0x000017,%ax
		jne    _01ee9a_jump
		cmpb   $0x000001,_0c33c4_data
		jne    _01efad_jump
		test   %cl,%cl
		je     _01ee26_jump
		add    $0x000010,%esi
		jmp    _01ee29_jump

	_01ee26_jump:
		sub    $0x000010,%esi

	_01ee29_jump:
		movswl %di,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		and    $0x0000ff,%eax
		testb  $0x000002,_0a525d_data(%eax)
		jne    _01efad_jump
		cmpb   $0x000002,_0b9369_data
		je     _01ee79_jump
		mov    _0b937d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%cl
		je     _01ee73_jump
		movw   $0x000000,0x000050(%ebx)
		jmp    _01ee79_jump

	_01ee73_jump:
		movw   $0x000001,0x000050(%ebx)

	_01ee79_jump:
		test   %cl,%cl
		setne  %al
		and    $0x0000ff,%eax
		inc    %eax
		mov    _0b935e_data(%eax),%al
		mov    %al,_0b935e_data
		xor    %eax,%eax
		mov    0x000066(%ebx),%al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ee9a_jump:
		mov    0x000085(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _01efad_jump
		cmpb   $0x000002,0x000071(%ebx)
		setne  %al
		and    $0x0000ff,%eax
		je     _01efad_jump
		cmpw   $0x000000,0x000064(%ebx)
		jne    _01eed4_jump
		testb  $0x000010,0x000085(%ebx)
		jne    _01efa2_jump

	_01eed4_jump:
		mov    0x000064(%ebx),%cx
		cmp    $0x000009,%cx
		je     _01efa2_jump
		cmp    $0x0000a5,%cx
		je     _01efa2_jump
		cmp    $0x000014,%cx
		je     _01efa2_jump
		cmp    $0x000023,%cx
		je     _01efa2_jump
		cmp    $0x00002b,%cx
		je     _01efa2_jump
		cmp    $0x00003c,%cx
		je     _01efa2_jump
		cmp    $0x00003d,%cx
		je     _01efa2_jump
		cmp    $0x000041,%cx
		jne    _01ef30_jump
		cmpw   $0x000000,0x000050(%ebx)
		jne    _01efa2_jump

	_01ef30_jump:
		mov    0x000064(%ebx),%dx
		cmp    $0x000046,%dx
		je     _01efa2_jump
		cmp    $0x000064,%dx
		je     _01efa2_jump
		cmp    $0x0000d9,%dx
		je     _01efa2_jump
		cmp    $0x000098,%dx
		je     _01efa2_jump
		cmp    $0x00009c,%dx
		je     _01efa2_jump
		cmp    $0x0000c3,%dx
		je     _01efa2_jump
		cmp    $0x00007b,%dx
		jne    _01efad_jump
		mov    0x000079(%ebx),%cl
		cmp    $0x000001,%cl
		je     _01ef89_jump
		cmp    $0x000004,%cl
		je     _01ef89_jump
		cmp    $0x000007,%cl
		jne    _01efad_jump
		cmpb   $0x000002,0x000081(%ebx)
		jne    _01efad_jump

	_01ef89_jump:
		cmpb   $0x000000,0x000071(%ebx)
		jne    _01ef95_jump
		cmpb   $0x000004,0x000070(%ebx)
		je     _01ef9c_jump

	_01ef95_jump:
		mov    $0x000001,%eax
		jmp    _01ef9e_jump

	_01ef9c_jump:
		xor    %eax,%eax

	_01ef9e_jump:
		test   %eax,%eax
		je     _01efad_jump

	_01efa2_jump:
		mov    %ebx,%eax
		call   _01e568_func
		movb   $0x00000f,0x000066(%ebx)

	_01efad_jump:
		xor    %eax,%eax
		mov    0x000066(%ebx),%al

	_01efb2_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01efb8_func:
		movb   $0x000000,0x000075(%eax)
		movb   $0x000000,0x000076(%eax)
		ret    



_01efc4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x000071(%eax)
		jne    _01efe3_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01efda_jump
		neg    %eax

	_01efda_jump:
		cmp    $0x000020,%eax
		jge    _01efe3_jump
		add    %dx,0x000040(%ecx)

	_01efe3_jump:
		cmpw   $0x000006,0x000064(%ecx)
		jne    _01f001_jump
		cmpb   $0x000002,0x000071(%ecx)
		jne    _01eff6_jump
		cmpb   $0x000000,0x000070(%ecx)
		je     _01f023_jump

	_01eff6_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		jmp    _01f017_jump

	_01f001_jump:
		mov    0x000071(%ecx),%dl
		cmp    $0x000002,%dl
		jne    _01f00e_jump
		cmp    0x000070(%ecx),%dl
		je     _01f023_jump

	_01f00e_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_01f017_jump:
		call   _01dea8_func
		mov    %ecx,%eax
		call   _01efb8_func

	_01f023_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01f028_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _01d740_func
		test   %al,%al
		je     _01f08b_jump
		mov    0x000085(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    _0c3130_data,%bx
		mov    %ah,0x000085(%edx)
		cmp    $0x000005,%bx
		jne    _01f06b_jump
		mov    0x000064(%edx),%cx
		cmp    $0x0000a1,%cx
		jne    _01f06b_jump
		cmp    $0x00010b,%cx
		je     _01f076_jump

	_01f06b_jump:
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _0200e0_func

	_01f076_jump:
		cmpw   $0x00004b,0x000064(%edx)
		jne    _01f08b_jump
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_01f08b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f090_func:
		push   %ebx
		push   %edx
		mov    0x00007a(%eax),%dl
		mov    _0c1157_data,%dh
		cmp    %dh,%dl
		jae    _01f0a6_jump
		movb   $0x000000,0x00007a(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_01f0a6_jump:
		mov    %dl,%bl
		sub    %dh,%bl
		mov    %bl,0x00007a(%eax)
		pop    %edx
		pop    %ebx
		ret    



_01f0b0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %cx,0x000014(%esp)
		movw   $0x000000,(%edx)
		xor    %eax,%eax
		movw   $0x000000,(%ebx)
		mov    _0b9364_data,%al
		mov    0x00004e(%esi),%dx
		mov    0x000028(%esi),%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x00006c(%esi),%dl
		sub    %edx,%eax
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x00004c(%esi),%cx
		mov    _0b9365_data,%al
		mov    0x00002c(%esi),%dx
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000e(%esp),%ebx
		mov    0x00006d(%esi),%al
		sar    $0x000010,%ebx
		sub    %eax,%edx
		mov    %ebx,%eax
		mov    %dx,0x00000c(%esp)
		test   %eax,%eax
		jge    _01f11a_jump
		neg    %eax

	_01f11a_jump:
		mov    0x00000a(%esp),%ecx
		mov    %eax,%edx
		sar    $0x000010,%ecx
		mov    %ax,0x000018(%esp)
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _01f130_jump
		neg    %eax

	_01f130_jump:
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    %ax,0x00001c(%esp)
		cmpw   $0x000000,0x000010(%esp)
		je     _01f269_jump
		cmpw   $0x000000,0x00000c(%esp)
		je     _01f269_jump
		cmp    (%esp),%dx
		jle    _01f1fc_jump
		mov    -0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		sar    $0x00001f,%edx
		mov    %eax,0x000004(%esp)
		mov    %ebx,%eax
		idivl  0x000004(%esp)
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %eax,%ecx
		cmpw   $0x000000,0x000010(%esp)
		jle    _01f193_jump
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01f19c_jump

	_01f193_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01f19c_jump:
		mov    0x00002e(%esp),%edx
		mov    %ax,(%edi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %ax,0x000000(%ebp)
		test   %ax,%ax
		jne    _01f2d6_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _01f1e3_jump
		movl   $0x000010,0x000008(%esp)
		jmp    _01f1eb_jump

	_01f1e3_jump:
		movl   $0xfffffff0,0x000008(%esp)

	_01f1eb_jump:
		mov    0x000008(%esp),%eax
		movswl (%edi),%edx
		add    %eax,%edx
		mov    %dx,(%edi)
		jmp    _01f2d6_jump

	_01f1fc_jump:
		movswl %dx,%eax
		mov    %eax,0x000004(%esp)
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %eax,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    0x00000c(%esp),%edx
		mov    %eax,%ebx
		test   %dx,%dx
		jle    _01f22f_jump
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01f238_jump

	_01f22f_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01f238_jump:
		mov    0x000012(%esp),%edx
		mov    %ax,0x000000(%ebp)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %ax,(%edi)
		jmp    _01f2d6_jump

	_01f269_jump:
		mov    0x00000c(%esp),%edx
		test   %dx,%dx
		jne    _01f2a7_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _01f285_jump
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx
		neg    %edx
		jmp    _01f28c_jump

	_01f285_jump:
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx

	_01f28c_jump:
		mov    %dx,(%edi)
		cmpw   $0x000000,0x000010(%esp)
		jle    _01f29e_jump
		mov    $0x000001,%ebx
		jmp    _01f2a3_jump

	_01f29e_jump:
		mov    $0xffffffff,%ebx

	_01f2a3_jump:
		xor    %ecx,%ecx
		jmp    _01f2d6_jump

	_01f2a7_jump:
		jle    _01f2b2_jump
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01f2bb_jump

	_01f2b2_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01f2bb_jump:
		mov    0x00000c(%esp),%ecx
		xor    %ebx,%ebx
		mov    %ax,0x000000(%ebp)
		test   %cx,%cx
		jle    _01f2d1_jump
		mov    $0x000001,%ecx
		jmp    _01f2d6_jump

	_01f2d1_jump:
		mov    $0xffffffff,%ecx

	_01f2d6_jump:
		testb  $0x000008,0x000085(%esi)
		jne    _01f2e5_jump
		cmpw   $0x000000,(%edi)
		jg     _01f2f4_jump

	_01f2e5_jump:
		testb  $0x000008,0x000085(%esi)
		je     _01f304_jump
		cmpw   $0x000000,(%edi)
		jge    _01f304_jump

	_01f2f4_jump:
		negw   (%edi)
		cmpw   $0x000000,0x000000(%ebp)
		jne    _01f304_jump
		movw   $0x000002,0x000000(%ebp)

	_01f304_jump:
		mov    0x00004e(%esi),%ax
		mov    0x00004c(%esi),%dx
		add    %ebx,%ebx
		add    %ecx,%ecx
		add    %ebx,%eax
		add    %ecx,%edx
		mov    %ax,0x00004e(%esi)
		mov    %dx,0x00004c(%esi)
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01f328_func:
		cmp    $0x00008e,%al
		je     _01f334_jump
		cmp    $0x000099,%al
		je     _01f334_jump
		cmp    $0x00009a,%al
		jne    _01f337_jump

	_01f334_jump:
		mov    $0x000002,%al
		ret    

	_01f337_jump:
		inc    %al
		and    $0x0000ff,%eax
		testb  $0x000040,_0a4f18_data(%eax)
		je     _01f34a_jump
		mov    $0x000001,%al
		ret    

	_01f34a_jump:
		xor    %al,%al
		ret    



_01f350_func:
		push   %edx
		xor    %edx,%edx
		cmp    $0x000001,%al
		jb     _01f361_jump
		jbe    _01f372_jump
		cmp    $0x000002,%al
		je     _01f369_jump
		mov    %edx,%eax
		pop    %edx
		ret    

	_01f361_jump:
		test   %al,%al
		je     _01f37b_jump
		mov    %edx,%eax
		pop    %edx
		ret    

	_01f369_jump:
		mov    $0x000006,%edx
		mov    %edx,%eax
		pop    %edx
		ret    

	_01f372_jump:
		mov    $0x00000b,%edx
		mov    %edx,%eax
		pop    %edx
		ret    

	_01f37b_jump:
		mov    $0x000012,%edx
		mov    %edx,%eax
		pop    %edx
		ret    



_01f384_func:
		push   %edx
		xor    %edx,%edx
		cmp    $0x000001,%al
		jb     _01f395_jump
		jbe    _01f3a6_jump
		cmp    $0x000002,%al
		je     _01f39d_jump
		mov    %edx,%eax
		pop    %edx
		ret    

	_01f395_jump:
		test   %al,%al
		je     _01f3af_jump
		mov    %edx,%eax
		pop    %edx
		ret    

	_01f39d_jump:
		mov    $0x000014,%edx
		mov    %edx,%eax
		pop    %edx
		ret    

	_01f3a6_jump:
		mov    $0x000017,%edx
		mov    %edx,%eax
		pop    %edx
		ret    

	_01f3af_jump:
		mov    $0x000024,%edx
		mov    %edx,%eax
		pop    %edx
		ret    



_01f3b8_func:
		cmp    $0x000002,%al
		jne    _01f3cc_jump
		movw   $0x000014,(%edx)
		movw   $0x000000,(%ebx)
		movw   $0x000005,(%ecx)
		ret    

	_01f3cc_jump:
		cmp    $0x000001,%al
		jne    _01f3e0_jump
		movw   $0x000017,(%edx)
		movw   $0x000000,(%ebx)
		movw   $0x000008,(%ecx)
		ret    

	_01f3e0_jump:
		movw   $0x000024,(%edx)
		movw   $0x000000,(%ebx)
		movw   $0x00000a,(%ecx)
		ret    



_01f3f0_func:
		push   %ebx
		cmp    $0x000001,%al
		jbe    _01f3fb_jump
		cmp    $0x000002,%al
		je     _01f410_jump
		jmp    _01f428_jump

	_01f3fb_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c1130_data,%ebx
		jmp    _01f423_jump

	_01f410_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c1114_data,%ebx

	_01f423_jump:
		shl    $0x000002,%eax
		add    %eax,%ebx

	_01f428_jump:
		xor    %eax,%eax
		mov    0x000005(%ebx),%al
		pop    %ebx
		ret    



_01f430_func:
		push   %ebx
		cmp    $0x000001,%al
		jbe    _01f43b_jump
		cmp    $0x000002,%al
		je     _01f450_jump
		jmp    _01f468_jump

	_01f43b_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c1130_data,%ebx
		jmp    _01f463_jump

	_01f450_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c1114_data,%ebx

	_01f463_jump:
		shl    $0x000002,%eax
		add    %eax,%ebx

	_01f468_jump:
		mov    0x000009(%ebx),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x000007(%ebx),%dl
		and    $0x0000ff,%eax
		add    %edx,%eax
		pop    %ebx
		ret    



_01f47c_func:
		push   %ebx
		push   %edx
		mov    _0a04ec_data,%dh
		xor    %eax,%eax

	_01f486_jump:
		add    $0x0000d8,%eax
		mov    %dh,%dl
		xor    %bl,%bl
		mov    %dh,_0b8930_data(%eax)
		mov    %bl,_0b8a06_data(%eax)
		xor    %dh,%dl
		mov    %dl,_0b8a05_data(%eax)
		cmp    $0x000870,%eax
		jne    _01f486_jump
		pop    %edx
		pop    %ebx
		ret    



_01f4b0_func:
		push   %ebx
		mov    %dl,%dh
		xor    %bl,%bl
		xor    %ah,%ah
		cmp    $0x000002,%dl
		jne    _01f6a2_jump
		cmp    $0x000061,%al
		jb     _01f4cd_jump
		cmp    $0x00007a,%al
		ja     _01f4cd_jump
		mov    %al,%ah
		sub    $0x00005d,%ah

	_01f4cd_jump:
		cmp    $0x000030,%al
		jb     _01f4da_jump
		cmp    $0x000039,%al
		ja     _01f4da_jump
		mov    %al,%ah
		sub    $0x000012,%ah

	_01f4da_jump:
		mov    %al,%dl
		cmp    $0x000084,%al
		jb     _01f587_jump
		jbe    _01f670_jump
		cmp    $0x00008e,%al
		jb     _01f546_jump
		jbe    _01f670_jump
		cmp    $0x000097,%al
		jb     _01f522_jump
		jbe    _01f688_jump
		cmp    $0x00009a,%al
		jb     _01f515_jump
		jbe    _01f68c_jump
		cmp    $0x0000e1,%al
		je     _01f6a0_jump
		jmp    _01f6a2_jump

	_01f515_jump:
		cmp    $0x000099,%al
		je     _01f680_jump
		jmp    _01f6a2_jump

	_01f522_jump:
		cmp    $0x000094,%al
		jb     _01f539_jump
		jbe    _01f680_jump
		cmp    $0x000096,%al
		je     _01f684_jump
		jmp    _01f6a2_jump

	_01f539_jump:
		cmp    $0x000093,%al
		je     _01f67c_jump
		jmp    _01f6a2_jump

	_01f546_jump:
		cmp    $0x000089,%al
		jb     _01f56b_jump
		jbe    _01f664_jump
		cmp    $0x00008b,%al
		jb     _01f65c_jump
		jbe    _01f678_jump
		cmp    $0x00008c,%al
		je     _01f674_jump
		jmp    _01f6a2_jump

	_01f56b_jump:
		cmp    $0x000087,%al
		jb     _01f57a_jump
		jbe    _01f651_jump
		jmp    _01f660_jump

	_01f57a_jump:
		cmp    $0x000085,%al
		je     _01f668_jump
		jmp    _01f6a2_jump

	_01f587_jump:
		cmp    $0x00003a,%al
		jb     _01f5d7_jump
		jbe    _01f62e_jump
		cmp    $0x00007e,%al
		jb     _01f5b7_jump
		jbe    _01f69c_jump
		cmp    $0x000082,%al
		jb     _01f5aa_jump
		jbe    _01f658_jump
		jmp    _01f66c_jump

	_01f5aa_jump:
		cmp    $0x000081,%al
		je     _01f68c_jump
		jmp    _01f6a2_jump

	_01f5b7_jump:
		cmp    $0x00005c,%al
		jb     _01f5ce_jump
		jbe    _01f63c_jump
		cmp    $0x00007c,%al
		je     _01f635_jump
		jmp    _01f6a2_jump

	_01f5ce_jump:
		cmp    $0x00003f,%al
		je     _01f619_jump
		jmp    _01f6a2_jump

	_01f5d7_jump:
		cmp    $0x000027,%al
		jb     _01f5f9_jump
		jbe    _01f643_jump
		cmp    $0x00002d,%al
		jb     _01f5f0_jump
		jbe    _01f698_jump
		cmp    $0x00002e,%al
		je     _01f627_jump
		jmp    _01f6a2_jump

	_01f5f0_jump:
		cmp    $0x00002c,%al
		je     _01f64a_jump
		jmp    _01f6a2_jump

	_01f5f9_jump:
		cmp    $0x000023,%al
		jb     _01f610_jump
		jbe    _01f690_jump
		cmp    $0x000025,%al
		je     _01f694_jump
		jmp    _01f6a2_jump

	_01f610_jump:
		cmp    $0x000021,%al
		je     _01f620_jump
		jmp    _01f6a2_jump

	_01f619_jump:
		mov    $0x000001,%ah
		jmp    _01f6a2_jump

	_01f620_jump:
		mov    $0x000002,%ah
		jmp    _01f6a2_jump

	_01f627_jump:
		mov    $0x000003,%ah
		jmp    _01f6a2_jump

	_01f62e_jump:
		mov    $0x000028,%ah
		jmp    _01f6a2_jump

	_01f635_jump:
		mov    $0x00003a,%ah
		jmp    _01f6a2_jump

	_01f63c_jump:
		mov    $0x00003b,%ah
		jmp    _01f6a2_jump

	_01f643_jump:
		mov    $0x000029,%ah
		jmp    _01f6a2_jump

	_01f64a_jump:
		mov    $0x00002a,%ah
		jmp    _01f6a2_jump

	_01f651_jump:
		mov    $0x00002b,%ah
		jmp    _01f6a2_jump

	_01f658_jump:
		mov    $0x00002c,%ah
		jmp    _01f6a2_jump

	_01f65c_jump:
		mov    $0x00002d,%ah
		jmp    _01f6a2_jump

	_01f660_jump:
		mov    $0x00002e,%ah
		jmp    _01f6a2_jump

	_01f664_jump:
		mov    $0x00002f,%ah
		jmp    _01f6a2_jump

	_01f668_jump:
		mov    $0x000030,%ah
		jmp    _01f6a2_jump

	_01f66c_jump:
		mov    $0x000031,%ah
		jmp    _01f6a2_jump

	_01f670_jump:
		mov    $0x000032,%ah
		jmp    _01f6a2_jump

	_01f674_jump:
		mov    $0x000033,%ah
		jmp    _01f6a2_jump

	_01f678_jump:
		mov    $0x000034,%ah
		jmp    _01f6a2_jump

	_01f67c_jump:
		mov    $0x000035,%ah
		jmp    _01f6a2_jump

	_01f680_jump:
		mov    $0x000036,%ah
		jmp    _01f6a2_jump

	_01f684_jump:
		mov    $0x000037,%ah
		jmp    _01f6a2_jump

	_01f688_jump:
		mov    $0x000038,%ah
		jmp    _01f6a2_jump

	_01f68c_jump:
		mov    $0x000039,%ah
		jmp    _01f6a2_jump

	_01f690_jump:
		mov    $0x00003c,%ah
		jmp    _01f6a2_jump

	_01f694_jump:
		mov    $0x00003d,%ah
		jmp    _01f6a2_jump

	_01f698_jump:
		mov    $0x00003e,%ah
		jmp    _01f6a2_jump

	_01f69c_jump:
		mov    $0x00003f,%ah
		jmp    _01f6a2_jump

	_01f6a0_jump:
		mov    $0x000040,%ah

	_01f6a2_jump:
		cmp    $0x000002,%dh
		je     _01f81d_jump
		cmp    $0x000061,%al
		jb     _01f6bd_jump
		cmp    $0x00007a,%al
		ja     _01f6bd_jump
		mov    %al,%ah
		sub    $0x00005d,%ah
		jmp    _01f80d_jump

	_01f6bd_jump:
		cmp    $0x000030,%al
		jb     _01f6cf_jump
		cmp    $0x000039,%al
		ja     _01f6cf_jump
		mov    %al,%ah
		sub    $0x000012,%ah
		jmp    _01f80d_jump

	_01f6cf_jump:
		cmp    $0x00005c,%al
		jne    _01f6ed_jump
		cmp    $0x000001,%dh
		jne    _01f6df_jump
		mov    $0x00005c,%eax
		jmp    _01f6e4_jump

	_01f6df_jump:
		mov    $0x000058,%eax

	_01f6e4_jump:
		mov    $0x000001,%bl
		mov    %al,%ah
		jmp    _01f80d_jump

	_01f6ed_jump:
		cmp    $0x00008e,%al
		je     _01f6f5_jump
		cmp    $0x000084,%al
		jne    _01f70f_jump

	_01f6f5_jump:
		cmp    $0x000001,%dh
		jne    _01f701_jump
		mov    $0x000059,%eax
		jmp    _01f706_jump

	_01f701_jump:
		mov    $0x000055,%eax

	_01f706_jump:
		mov    $0x000001,%bl
		mov    %al,%ah
		jmp    _01f80d_jump

	_01f70f_jump:
		cmp    $0x000099,%al
		je     _01f717_jump
		cmp    $0x000094,%al
		jne    _01f731_jump

	_01f717_jump:
		cmp    $0x000001,%dh
		jne    _01f723_jump
		mov    $0x00005a,%eax
		jmp    _01f728_jump

	_01f723_jump:
		mov    $0x000056,%eax

	_01f728_jump:
		mov    $0x000001,%bl
		mov    %al,%ah
		jmp    _01f80d_jump

	_01f731_jump:
		cmp    $0x00009a,%al
		je     _01f739_jump
		cmp    $0x000081,%al
		jne    _01f753_jump

	_01f739_jump:
		cmp    $0x000001,%dh
		jne    _01f745_jump
		mov    $0x00005b,%eax
		jmp    _01f74a_jump

	_01f745_jump:
		mov    $0x000057,%eax

	_01f74a_jump:
		mov    $0x000001,%bl
		mov    %al,%ah
		jmp    _01f80d_jump

	_01f753_jump:
		mov    %al,%dl
		cmp    $0x000082,%al
		jb     _01f7bb_jump
		jbe    _01f7fb_jump
		cmp    $0x000088,%al
		jb     _01f797_jump
		cmp    $0x00008a,%al
		jbe    _01f7fb_jump
		cmp    $0x000093,%al
		jb     _01f78a_jump
		jbe    _01f807_jump
		cmp    $0x000096,%al
		jb     _01f80d_jump
		cmp    $0x000097,%al
		jbe    _01f80b_jump
		jmp    _01f80d_jump

	_01f78a_jump:
		cmp    $0x00008c,%al
		je     _01f803_jump
		jmp    _01f80d_jump

	_01f797_jump:
		cmp    $0x000085,%al
		jb     _01f7ae_jump
		jbe    _01f7ff_jump
		cmp    $0x000087,%al
		je     _01f7f7_jump
		jmp    _01f80d_jump

	_01f7ae_jump:
		cmp    $0x000083,%al
		je     _01f7ff_jump
		jmp    _01f80d_jump

	_01f7bb_jump:
		cmp    $0x000027,%al
		jb     _01f7d3_jump
		jbe    _01f7f3_jump
		cmp    $0x00003a,%al
		jb     _01f7cd_jump
		jbe    _01f7ef_jump
		cmp    $0x00003f,%al
		je     _01f7e3_jump
		jmp    _01f80d_jump

	_01f7cd_jump:
		cmp    $0x00002e,%al
		je     _01f7eb_jump
		jmp    _01f80d_jump

	_01f7d3_jump:
		cmp    $0x000021,%al
		jb     _01f80d_jump
		jbe    _01f7e7_jump
		cmp    $0x000025,%al
		jne    _01f80d_jump
		mov    $0x00002a,%ah
		mov    $0x000001,%bl
		jmp    _01f80d_jump

	_01f7e3_jump:
		mov    $0x000001,%ah
		jmp    _01f80d_jump

	_01f7e7_jump:
		mov    $0x000002,%ah
		jmp    _01f80d_jump

	_01f7eb_jump:
		mov    $0x000003,%ah
		jmp    _01f80d_jump

	_01f7ef_jump:
		mov    $0x000028,%ah
		jmp    _01f80d_jump

	_01f7f3_jump:
		mov    $0x000029,%ah
		jmp    _01f80d_jump

	_01f7f7_jump:
		mov    $0x000006,%ah
		jmp    _01f80d_jump

	_01f7fb_jump:
		mov    $0x000008,%ah
		jmp    _01f80d_jump

	_01f7ff_jump:
		mov    $0x000004,%ah
		jmp    _01f80d_jump

	_01f803_jump:
		mov    $0x00000c,%ah
		jmp    _01f80d_jump

	_01f807_jump:
		mov    $0x000012,%ah
		jmp    _01f80d_jump

	_01f80b_jump:
		mov    $0x000018,%ah

	_01f80d_jump:
		cmp    $0x000001,%dh
		jne    _01f81d_jump
		test   %ah,%ah
		je     _01f81d_jump
		test   %bl,%bl
		jne    _01f81d_jump
		add    $0x00002a,%ah

	_01f81d_jump:
		mov    %ah,%al
		pop    %ebx
		ret    



_01f824_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    0x000018(%esp),%bh
		mov    %edx,%esi
		xor    %ecx,%ecx
		jmp    _01f8b8_jump

	_01f840_jump:
		cmp    $0x00002f,%ah
		je     _01f8c8_jump
		cmp    $0x000020,%ah
		jne    _01f853_jump
		add    (%esp),%ecx
		jmp    _01f8b8_jump

	_01f853_jump:
		xor    %eax,%eax
		mov    (%edx),%al
		mov    %bh,%bl
		call   _01f328_func
		test   %al,%al
		je     _01f88d_jump
		cmp    $0x000002,%bh
		jne    _01f86b_jump
		mov    $0x000001,%bl
		jmp    _01f872_jump

	_01f86b_jump:
		cmp    $0x000001,%bh
		jne    _01f872_jump
		xor    %bh,%bl

	_01f872_jump:
		xor    %edx,%edx
		movswl %si,%eax
		mov    %bl,%dl
		mov    (%eax,%ebp,1),%al
		and    $0x0000ff,%eax
		call   _085b84_func
		and    $0x0000ff,%eax
		jmp    _01f898_jump

	_01f88d_jump:
		xor    %eax,%eax
		mov    %bh,%al
		movzbl (%edx),%edi
		mov    %eax,%edx
		mov    %edi,%eax

	_01f898_jump:
		call   _01f4b0_func
		mov    %al,%dl
		test   %dl,%dl
		je     _01f8b8_jump
		xor    %eax,%eax
		and    $0x0000ff,%edx
		mov    %bl,%al
		call   _01f430_func
		sub    0x000004(%esp),%eax
		add    %eax,%ecx

	_01f8b8_jump:
		inc    %esi
		movswl %si,%edx
		add    %ebp,%edx
		mov    (%edx),%ah
		test   %ah,%ah
		jne    _01f840_jump

	_01f8c8_jump:
		mov    %ecx,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01f8d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000f8,%esp
		mov    %eax,%ebp
		lea    0x0000d8(%esp),%ecx
		lea    0x0000d4(%esp),%ebx
		mov    %esp,%edi
		xor    %edx,%edx
		mov    0x0000d4(%eax),%al
		mov    %dx,0x0000cc(%esp)
		mov    %edx,0x0000ec(%esp)
		mov    %edx,0x0000dc(%esp)
		mov    %edx,0x0000e4(%esp)
		mov    %edx,0x0000c8(%esp)
		mov    %edx,0x0000f0(%esp)
		mov    %al,0x0000f4(%esp)
		mov    %edx,0x0000e0(%esp)
		xor    %eax,%eax
		lea    0x0000d0(%esp),%edx
		mov    0x0000f4(%esp),%al
		mov    %ebp,%esi
		call   _01f3b8_func
		mov    0x0000d0(%esp),%eax
		mov    $0x0000c8,%ecx
		mov    %eax,0x0000e8(%esp)
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01fbfc_jump
		mov    $0x000002,%bh
		xor    %ecx,%ecx
		jmp    _01fb00_jump

	_01f980_jump:
		mov    (%esp,%edx,1),%al
		mov    0x0000f4(%esp),%bl
		cmp    $0x00002f,%al
		jne    _01f9f8_jump
		mov    $0x000001,%edx
		mov    0x0000ec(%esp),%esi
		mov    0x0000dc(%esp),%eax
		mov    0x0000cc(%esp),%edi
		add    %edx,%esi
		mov    %edx,0x0000f0(%esp)
		mov    %esi,0x0000ec(%esp)
		cmp    %di,%ax
		jle    _01f9c5_jump
		mov    %ax,0x0000cc(%esp)

	_01f9c5_jump:
		xor    %eax,%eax
		mov    0x0000e4(%esp),%edx
		mov    %eax,0x0000dc(%esp)
		mov    0x0000c8(%esp),%eax
		cmp    %dx,%ax
		jle    _01f9e8_jump
		mov    %eax,0x0000e4(%esp)

	_01f9e8_jump:
		xor    %esi,%esi
		xor    %dl,%dl
		mov    %esi,0x0000c8(%esp)
		jmp    _01fac4_jump

	_01f9f8_jump:
		cmp    $0x000020,%al
		jne    _01fa29_jump
		mov    0x0000d8(%esp),%eax
		mov    0x0000dc(%esp),%edi
		add    %eax,%edi
		mov    0x0000c8(%esp),%eax
		xor    %dl,%dl
		inc    %eax
		mov    %edi,0x0000dc(%esp)
		mov    %eax,0x0000c8(%esp)
		jmp    _01fac4_jump

	_01fa29_jump:
		xor    %eax,%eax
		mov    (%esp,%edx,1),%al
		call   _01f328_func
		test   %al,%al
		je     _01fab3_jump
		cmp    %bl,%bh
		jne    _01fa43_jump
		mov    $0x000001,%bl
		jmp    _01fa4a_jump

	_01fa43_jump:
		cmp    $0x000001,%bl
		jne    _01fa4a_jump
		xor    %bl,%bl

	_01fa4a_jump:
		cmpw   $0x000000,0x0000e0(%esp)
		jne    _01fa73_jump
		movswl %cx,%eax
		mov    (%esp,%eax,1),%al
		and    $0x0000ff,%eax
		call   _01f328_func
		cmp    $0x000002,%al
		sete   %al
		xor    %ah,%ah
		mov    %eax,0x0000e0(%esp)

	_01fa73_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %edx,%eax
		mov    0x0000e8(%esp),%esi
		call   _01f384_func
		cmp    %si,%ax
		jle    _01fa98_jump
		mov    %edx,%eax
		call   _01f384_func
		mov    %eax,0x0000e8(%esp)

	_01fa98_jump:
		xor    %edx,%edx
		movswl %cx,%eax
		mov    %bl,%dl
		mov    (%esp,%eax,1),%al
		and    $0x0000ff,%eax
		call   _085b84_func
		and    $0x0000ff,%eax
		jmp    _01fabd_jump

	_01fab3_jump:
		xor    %eax,%eax
		movzbl %bl,%esi
		mov    (%esp,%edx,1),%al
		mov    %esi,%edx

	_01fabd_jump:
		call   _01f4b0_func
		mov    %al,%dl

	_01fac4_jump:
		test   %dl,%dl
		je     _01faff_jump
		xor    %eax,%eax
		and    $0x0000ff,%edx
		mov    %bl,%al
		mov    0x0000c8(%esp),%edi
		call   _01f430_func
		mov    0x0000d4(%esp),%edx
		mov    0x0000dc(%esp),%esi
		sub    %edx,%eax
		inc    %edi
		add    %eax,%esi
		mov    %edi,0x0000c8(%esp)
		mov    %esi,0x0000dc(%esp)

	_01faff_jump:
		inc    %ecx

	_01fb00_jump:
		movswl %cx,%edx
		cmpb   $0x000000,(%esp,%edx,1)
		jne    _01f980_jump
		imul   $0x000007,0x0000e0(%esp),%eax
		mov    0x0000e8(%esp),%ecx
		add    %eax,%ecx
		mov    0x0000ec(%esp),%esi
		mov    %ecx,0x0000e8(%esp)
		test   %si,%si
		jne    _01fb4e_jump
		mov    0x0000dc(%esp),%eax
		mov    %ax,0x0000cc(%esp)
		mov    $0x000001,%eax
		mov    %eax,0x0000ec(%esp)
		jmp    _01fb58_jump

	_01fb4e_jump:
		mov    %esi,%edi
		dec    %edi
		mov    %edi,0x0000ec(%esp)

	_01fb58_jump:
		cmpw   $0x000000,0x0000f0(%esp)
		je     _01fb83_jump
		mov    0x0000ca(%esp),%eax
		mov    0x0000ce(%ebp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,0x0000c8(%ebp)
		jmp    _01fb91_jump

	_01fb83_jump:
		mov    0x0000d0(%ebp),%ax
		mov    %ax,0x0000c8(%ebp)

	_01fb91_jump:
		mov    0x0000cc(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x0000cc(%ebp)
		mov    0x0000e8(%esp),%ebx
		mov    0x0000d2(%ebp),%ax
		sub    %ebx,%eax
		add    $0x000002,%eax
		mov    %ax,0x0000ca(%ebp)
		mov    0x0000ec(%esp),%eax
		imul   %ebx,%eax
		sub    $0x000003,%eax
		mov    %ax,0x0000ce(%ebp)
		cmp    0x0000d0(%esp),%bx
		je     _01fbfc_jump
		mov    0x0000ca(%ebp),%di
		mov    0x0000ce(%ebp),%ax
		dec    %edi
		inc    %eax
		mov    %di,0x0000ca(%ebp)
		mov    %ax,0x0000ce(%ebp)

	_01fbfc_jump:
		add    $0x0000f8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01fc0c_switch:
		.long   _01fc5e_case
		.long   _01fc68_case
		.long   _01fc72_case
		.long   _01fc7c_case


	_01fc5e_case:
		movswl %bx,%edx
		movb   $0x000061,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01fc68_case:
		movswl %bx,%edx
		movb   $0x000062,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01fc72_case:
		movswl %bx,%edx
		movb   $0x000063,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01fc7c_case:
		movswl %bx,%edx
		movb   $0x000064,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    



_01fc88_func:
		push   %ebx
		push   %ecx
		mov    (%eax),%bx
		mov    (%edx),%cx
		mov    %bx,(%edx)
		mov    %cx,(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_01fc9c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,0x000008(%esp)
		mov    %dx,0x000014(%esp)
		mov    %bx,0x000024(%esp)
		mov    %cx,0x00001c(%esp)
		mov    0x000040(%esp),%eax
		mov    0x000012(%esp),%ecx
		mov    %eax,0x000018(%esp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		mov    0x000022(%esp),%edi
		mov    %eax,%ecx
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sub    %edi,%eax
		xor    %esi,%esi
		mov    %eax,%edi
		test   %ecx,%ecx
		je     _01fd00_jump
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %eax,%eax
		jge    _01fcf4_jump
		neg    %eax

	_01fcf4_jump:
		cmp    $0x000001,%eax
		jge    _01fd00_jump
		mov    $0x000001,%ebx
		jmp    _01fd02_jump

	_01fd00_jump:
		xor    %ebx,%ebx

	_01fd02_jump:
		cmp    $0x000001,%bx
		jne    _01fe7e_jump
		test   %ecx,%ecx
		jge    _01fd32_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    %ebx,%esi
		call   _01fc88_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		neg    %edi
		call   _01fc88_func
		jmp    _01fd49_jump

	_01fd32_jump:
		jne    _01fd49_jump
		test   %edi,%edi
		jge    _01fd49_jump
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		mov    %ebx,%esi
		call   _01fc88_func
		neg    %edi

	_01fd49_jump:
		test   %edi,%edi
		jle    _01fd57_jump
		movl   $0x000001,0x000004(%esp)
		jmp    _01fd69_jump

	_01fd57_jump:
		jge    _01fd63_jump
		movl   $0xffffffff,0x000004(%esp)
		jmp    _01fd69_jump

	_01fd63_jump:
		xor    %ebp,%ebp
		mov    %ebp,0x000004(%esp)

	_01fd69_jump:
		mov    %edi,%eax
		test   %eax,%eax
		jge    _01fd71_jump
		neg    %eax

	_01fd71_jump:
		mov    %eax,%edi
		lea    (%eax,%eax,1),%ebp
		add    %edi,%edi
		sub    %ecx,%eax
		mov    %di,0x00000c(%esp)
		add    %eax,%eax
		sub    %ecx,%ebp
		mov    %ax,0x000010(%esp)
		test   %si,%si
		je     _01fe0c_jump
		mov    0x00001a(%esp),%esi
		mov    0x000012(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %esi,%eax
		imul   %edx,%eax
		negl   0x000004(%esp)
		mov    $0x000007,%cl
		mov    0x00003a(%esp),%edi
		test   %eax,%eax
		js     _01fdbd_jump
		sar    %cl,%eax
		jmp    _01fdc3_jump

	_01fdbd_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01fdc3_jump:
		mov    0x00001a(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi

	_01fdd1_jump:
		cmp    %ecx,%esi
		jl     _01fff3_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01fded_jump
		mov    0x00000e(%esp),%eax
		mov    0x000004(%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%edi
		jmp    _01fdf4_jump

	_01fded_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax

	_01fdf4_jump:
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01fe09_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01fe09_jump:
		dec    %esi
		jmp    _01fdd1_jump

	_01fe0c_jump:
		mov    0x000012(%esp),%esi
		mov    0x00001a(%esp),%edx
		mov    0x000042(%esp),%eax
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %esi,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x000022(%esp),%edi
		test   %eax,%eax
		js     _01fe34_jump
		sar    %cl,%eax
		jmp    _01fe3a_jump

	_01fe34_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01fe3a_jump:
		mov    0x000012(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi

	_01fe48_jump:
		cmp    %ecx,%esi
		jg     _01fff3_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01fe5f_jump
		add    0x000004(%esp),%edi
		mov    0x00000e(%esp),%eax
		jmp    _01fe63_jump

	_01fe5f_jump:
		mov    0x00000a(%esp),%eax

	_01fe63_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01fe7b_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01fe7b_jump:
		inc    %esi
		jmp    _01fe48_jump

	_01fe7e_jump:
		test   %edi,%edi
		jge    _01fea7_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    $0x000001,%esi
		call   _01fc88_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		neg    %edi
		call   _01fc88_func
		jmp    _01fec1_jump

	_01fea7_jump:
		jne    _01fec1_jump
		test   %ecx,%ecx
		jge    _01fec1_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    $0x000001,%esi
		call   _01fc88_func
		neg    %ecx

	_01fec1_jump:
		test   %ecx,%ecx
		jle    _01fece_jump
		movl   $0x000001,(%esp)
		jmp    _01fede_jump

	_01fece_jump:
		jge    _01fed9_jump
		movl   $0xffffffff,(%esp)
		jmp    _01fede_jump

	_01fed9_jump:
		xor    %edx,%edx
		mov    %edx,(%esp)

	_01fede_jump:
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _01fee6_jump
		neg    %eax

	_01fee6_jump:
		mov    %eax,%ecx
		lea    (%eax,%eax,1),%ebp
		add    %ecx,%ecx
		sub    %edi,%eax
		mov    %cx,0x000020(%esp)
		add    %eax,%eax
		sub    %edi,%ebp
		mov    %ax,0x000028(%esp)
		test   %si,%si
		je     _01ff84_jump
		mov    0x00003a(%esp),%edi
		mov    (%esp),%edx
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edi
		neg    %edx
		sar    $0x000010,%eax
		mov    %edx,(%esp)
		mov    0x000042(%esp),%edx
		sub    %edi,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x00001a(%esp),%esi
		test   %eax,%eax
		js     _01ff36_jump
		sar    %cl,%eax
		jmp    _01ff3c_jump

	_01ff36_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01ff3c_jump:
		mov    0x00003a(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi

	_01ff4a_jump:
		cmp    %ecx,%edi
		jl     _01fff3_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01ff65_jump
		mov    0x000026(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%esi
		jmp    _01ff6c_jump

	_01ff65_jump:
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax

	_01ff6c_jump:
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01ff81_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01ff81_jump:
		dec    %edi
		jmp    _01ff4a_jump

	_01ff84_jump:
		mov    0x000022(%esp),%edi
		mov    0x00003a(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edi,%eax
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x000012(%esp),%esi
		test   %eax,%eax
		js     _01ffac_jump
		sar    %cl,%eax
		jmp    _01ffb2_jump

	_01ffac_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01ffb2_jump:
		mov    0x000022(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi
		cmp    %ecx,%edi
		jg     _01fff3_jump

	_01ffc4_jump:
		inc    %ebx
		test   %ebp,%ebp
		jle    _01ffd2_jump
		add    (%esp),%esi
		mov    0x000026(%esp),%eax
		jmp    _01ffd6_jump

	_01ffd2_jump:
		mov    0x00001e(%esp),%eax

	_01ffd6_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01ffee_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01ffee_jump:
		inc    %edi
		cmp    %ecx,%edi
		jle    _01ffc4_jump

	_01fff3_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01fffc_func:
		push   %edx
		mov    _0c30da_data,%ah
		mov    _0c30db_data,%dl
		and    $0x000000,%ah
		and    $0x0000f8,%dl
		mov    %ah,_0c30da_data
		mov    %dl,_0c30db_data
		pop    %edx
		ret    



_020020_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0b9304_data,%eax
		mov    (%eax),%edx
		mov    0x00000c(%eax),%ebx
		mov    0x000002(%edx),%cl
		mov    0x0001c2(%edx),%dl
		mov    %dl,0x0000a2(%ebx)
		mov    (%eax),%edx
		mov    0x0001c2(%edx),%bl
		mov    %bl,0x000002(%edx)
		mov    (%eax),%eax
		mov    %cl,0x0001c2(%eax)
		mov    $0x000001,%al
		mov    _0c33c3_data,%ah
		sub    %ah,%al
		mov    %al,_0c33c3_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020064_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0b941c_data,%dx
		xor    %esi,%esi
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0200a2_jump

	_02007b_jump:
		mov    _0b9418_data,%ebx
		movswl %ax,%edx
		mov    0x000034(%ecx),%di
		cmp    (%ebx,%edx,2),%di
		jne    _020095_jump
		mov    $0x000001,%esi
		jmp    _0200a2_jump

	_020095_jump:
		mov    _0b941c_data,%bx
		inc    %eax
		cmp    %bx,%ax
		jl     _02007b_jump

	_0200a2_jump:
		test   %si,%si
		jne    _0200da_jump
		mov    _0b941c_data,%ax
		movswl %ax,%edx
		inc    %eax
		mov    _0b9418_data,%ebx
		mov    %ax,_0b941c_data
		mov    0x000034(%ecx),%ax
		mov    %ax,(%ebx,%edx,2)
		cmpw   $0x0002bc,_0b941c_data
		jl     _0200da_jump
		mov    $_0a04f0_data,%eax
		call   _020150_func

	_0200da_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0200e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    _0b941c_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020117_jump

	_0200f4_jump:
		movswl %ax,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    _0b9418_data,%edx
		cmp    (%edx,%ebx,1),%cx
		je     _020117_jump
		mov    _0b941c_data,%bx
		inc    %eax
		cmp    %bx,%ax
		jl     _0200f4_jump

	_020117_jump:
		mov    _0b941c_data,%di
		cmp    %di,%ax
		jge    _02014b_jump
		mov    %edi,%edx
		dec    %edx
		mov    %dx,_0b941c_data
		mov    _0b941a_data,%ebx
		sar    $0x000010,%ebx
		mov    _0b9418_data,%edx
		add    %ebx,%ebx
		lea    (%edx,%ebx,1),%ecx
		movswl %ax,%ebx
		mov    (%ecx),%ax
		mov    %ax,(%edx,%ebx,2)

	_02014b_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020150_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _03fa5c_func
		push   %edx
		mov    _0bf2f4_data,%edx
		mov    0x0002d0(%edx),%ebx
		push   %ebx
		push   $_0a051c_data
		call   _085441_func
		add    $0x00000c,%esp
		mov    $0xffffffff,%eax
		call   _085464_func
		pop    %edx
		pop    %ebx
		ret    



_020184_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %dl,(%esp)
		xor    %eax,%eax
		jmp    _0201a1_jump

	_020192_jump:
		imul   $0x00000c,%edx,%ecx
		mov    (%ebx),%edx
		mov    0x000004(%ecx,%edx,1),%dl
		cmp    (%esp),%dl
		je     _0201b0_jump
		inc    %eax

	_0201a1_jump:
		xor    %ecx,%ecx
		movswl %ax,%edx
		mov    0x000044(%ebx),%cx
		cmp    %ecx,%edx
		jl     _020192_jump
		xor    %al,%al

	_0201b0_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_0201c0_func:
		push   %edx
		mov    $_0c2178_data,%edx
		call   _03fcac_func
		pop    %edx
		ret    



_0201d0_func:
		call   _04dc2c_func
		mov    $0x000001,%eax
		ret    



_0201dc_func:
		push   %ebx
		push   %edx
		mov    $0x0000c8,%ah
		mov    $0x0000f0,%dl
		mov    $0xffffffb8,%ebx
		mov    %ah,_0b948c_data
		mov    %dl,_0b948d_data
		mov    %bx,_0b9458_data
		mov    $0x000078,%edx
		mov    $0x000001,%bl
		mov    %dx,_0b9456_data
		mov    %bl,_0b9491_data
		mov    _0b94a5_data,%dh
		xor    %bh,%bh
		and    $0x0000f7,%dh
		mov    %bh,_0b9490_data
		mov    %bh,_0b9494_data
		mov    %dh,_0b94a5_data
		pop    %edx
		pop    %ebx
		ret    

_020230_switch:
		.long   _02031d_case
		.long   _020380_case
		.long   _0203f3_case
		.long   _020422_case
		.long   _020488_case
		.long   _0204f5_case




_020248_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0b9491_data,%dl
		mov    _0b942c_data,%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0b9490_data,%dl
		mov    0x000005(%ebx,%edx,8),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %dx,_0b9460_data
		test   %al,%al
		je     _020292_jump
		xor    %edx,%edx
		mov    %al,%dl
		cmpb   $0x000000,_0c334a_data(%edx)
		jne    _020292_jump
		mov    $_0b9420_data,%eax
		call   _05a530_func

	_020292_jump:
		mov    _0b9460_data,%ax
		mov    _0b9456_data,%bx
		add    %eax,%ebx
		mov    _0c338e_data,%dl
		mov    %bx,_0b9456_data
		cmp    $0x000001,%dl
		jne    _020304_jump
		mov    $0x000005,%dh
		mov    $0x000002,%ebx
		mov    $_0b9420_data,%eax
		mov    %dh,_0b9494_data
		xor    %edx,%edx
		xor    %cl,%cl
		call   _01dea8_func
		mov    $0x000002,%bl
		mov    $0x0000a0,%edx
		xor    %eax,%eax
		mov    %cl,_0c338e_data
		mov    _0b948c_data,%al
		mov    %bl,_0b94a3_data
		sub    %eax,%edx
		mov    _0b94a5_data,%bh
		mov    %edx,%eax
		and    $0x0000f7,%bh
		sub    $0x000010,%eax
		mov    %bh,_0b94a5_data
		mov    %ax,_0b9456_data

	_020304_jump:
		mov    _0b9494_data,%al
		cmp    $0x000005,%al
		ja     _020530_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_020230_switch(,%edx,4)

	_02031d_case:
		xor    %ebx,%ebx
		mov    _0b9454_data,%edx
		mov    _0b948c_data,%bl
		sar    $0x000010,%edx
		add    %ebx,%edx
		cmp    $0xffffff9c,%edx
		jge    _020530_jump
		inc    %al
		mov    $0x000001,%ebx
		mov    %al,_0b9494_data
		mov    %ebx,%edx
		mov    $_0b9420_data,%eax
		call   _01dea8_func
		xor    %eax,%eax
		mov    _0b948c_data,%al
		mov    _0b94a5_data,%bl
		neg    %eax
		or     $0x000008,%bl
		sub    $0x00003c,%eax
		mov    %bl,_0b94a5_data
		mov    %ax,_0b9456_data
		mov    $_0b9420_data,%eax
		call   _05b0d8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020380_case:
		xor    %edx,%edx
		mov    _0b9454_data,%ebx
		mov    _0b948c_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _020530_jump
		mov    $0x000002,%ebx
		inc    %al
		mov    $0x000001,%edx
		mov    %al,_0b9494_data
		mov    $_0b9420_data,%eax
		call   _01dea8_func
		xor    %eax,%eax
		xor    %dl,%dl
		mov    _0b948c_data,%al
		mov    %dl,_0b948f_data
		neg    %eax
		mov    _0b94a5_data,%dh
		add    $0x00015e,%eax
		and    $0x0000f7,%dh
		mov    %ax,_0b9456_data
		mov    %dh,_0b94a5_data
		mov    $_0b9420_data,%eax
		call   _05b0d8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0203f3_case:
		cmpb   $0x000000,_0b9491_data
		jne    _020530_jump
		cmpb   $0x000000,_0b9490_data
		jne    _020530_jump
		inc    %al
		mov    %al,_0b9494_data
		mov    $_0b9420_data,%eax
		call   _05b0d8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020422_case:
		mov    $_0b9420_data,%eax
		call   _01d740_func
		test   %al,%al
		je     _020530_jump
		mov    _0b9494_data,%bh
		mov    $0x000001,%edx
		inc    %bh
		mov    $_0b9420_data,%eax
		mov    %bh,_0b9494_data
		mov    $0x000003,%ebx
		call   _01dea8_func
		mov    $0xffffffc4,%edx
		xor    %eax,%eax
		mov    _0b94a5_data,%cl
		mov    _0b948c_data,%al
		or     $0x000008,%cl
		sub    %eax,%edx
		mov    %cl,_0b94a5_data
		mov    %dx,_0b9456_data
		mov    $_0b9420_data,%eax
		call   _05b0d8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020488_case:
		xor    %edx,%edx
		mov    _0b9454_data,%ebx
		mov    _0b948c_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _020530_jump
		mov    $0x000001,%ebx
		inc    %al
		xor    %edx,%edx
		mov    %al,_0b9494_data
		mov    $_0b9420_data,%eax
		call   _01dea8_func
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0b948c_data,%al
		sub    %eax,%edx
		mov    _0b94a5_data,%bl
		mov    %edx,%eax
		and    $0x0000f7,%bl
		sub    $0x000010,%eax
		mov    %bl,_0b94a5_data
		mov    %ax,_0b9456_data
		mov    $_0b9420_data,%eax
		call   _05b0d8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0204f5_case:
		cmpb   $0x000000,_0b9491_data
		jne    _020530_jump
		cmpb   $0x000002,_0b9490_data
		jne    _020530_jump
		mov    _0b94a3_data,%ah
		test   %ah,%ah
		jne    _020526_jump
		movb   $0x000001,_0c338e_data
		mov    $_0b9420_data,%eax
		call   _05b0d8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020526_jump:
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0b94a3_data

	_020530_jump:
		mov    $_0b9420_data,%eax
		call   _05b0d8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020540_func:
		call   _042170_func
		call   _0426b0_func
		test   %al,%al
		jne    _020557_jump
		call   _0426f8_func
		test   %al,%al
		je     _02055e_jump

	_020557_jump:
		movb   $0x000001,_0c338e_data

	_02055e_jump:
		mov    $0x000001,%eax
		call   _05a0ec_func
		call   _03ede8_jump
		mov    $_0b9420_data,%eax
		call   _019070_func
		call   _020248_func
		cmpb   $0x000000,_0c338e_data
		je     _020595_jump
		cmpw   $0x000000,_0c317e_data
		jne    _020595_jump
		mov    $0x000001,%eax
		ret    

	_020595_jump:
		xor    %eax,%eax
		ret    



_020598_func:
		push   %ebx
		push   %edx
		mov    $_0c1068_data,%eax
		call   _0201d0_func
		mov    $_0c1068_data,%eax
		mov    $_018787_jump,%edx
		call   _0201c0_func
		mov    $_0b4028_data,%eax
		mov    $_018851_jump,%ebx
		call   _03ece4_func
		call   _03ea80_func
		call   _0201dc_func
		mov    $_020540_func,%eax
		mov    %edx,_0c0f4c_data
		mov    %ebx,_0c0f20_data
		call   _03eb48_func
		call   _03fae8_func
		pop    %edx
		pop    %ebx
		ret    



_0205ec_func:
		call   _03ead0_func
		jmp    _03ed58_func



_0205f8_func:
		push   %edx
		mov    $0x041a00,%edx
		mov    $_0c1068_data,%eax
		call   _084e40_func
		call   _020598_func
		mov    $_0c1068_data,%eax
		call   _085140_func
		xor    %ah,%ah
		mov    %ah,_0c338e_data
		call   _04d7b0_func
		mov    $_0c1044_data,%eax
		mov    _0c0fec_data,%edx
		call   _084e40_func
		mov    $_0c1054_data,%eax
		mov    _0c0fe0_data,%edx
		call   _084e40_func
		mov    $0x100000,%edx
		mov    $_0c1004_data,%eax
		call   _084e40_func
		call   _0205ec_func
		pop    %edx
		ret    



_020660_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0a9eb2_data,%bl
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0c33f0_data,%eax
		mov    _0b9320_data,%dx
		mov    %dx,(%eax)
		mov    _0b9324_data,%dx
		mov    %dx,0x000002(%eax)
		mov    _0b9369_data,%dl
		mov    %dl,0x000008(%eax)
		mov    _0b9368_data,%dl
		mov    %dl,0x000009(%eax)
		mov    _0b9366_data,%dl
		mov    %dl,0x00000a(%eax)
		mov    _0b9367_data,%dl
		mov    %dl,0x00000b(%eax)
		mov    _0b937d_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000c(%eax)
		mov    _0b9356_data,%dl
		mov    %dl,0x000011(%eax)
		mov    _0c1156_data,%dl
		mov    %dl,0x000010(%eax)
		test   %dl,%dl
		je     _02070c_jump
		mov    _0c1144_data,%edx
		mov    0x000028(%edx),%cx
		mov    %cx,0x000004(%eax)
		mov    0x00002c(%edx),%cx
		mov    %cx,0x000006(%eax)
		mov    0x00006e(%edx),%cl
		mov    %cl,0x00000d(%eax)
		mov    0x00006f(%edx),%cl
		mov    %cl,0x00000e(%eax)
		mov    0x000085(%edx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000f(%eax)

	_02070c_jump:
		mov    _0a9eb1_data,%ah
		inc    %bl
		cmp    %ah,%bl
		jbe    _020722_jump
		mov    $0x000001,%dl
		xor    %bl,%bl
		mov    %dl,_0a9eb4_data

	_020722_jump:
		mov    _0c317e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _020751_jump
		mov    %eax,%edx
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		cmpb   $0x000000,0x00007a(%eax)
		je     _020751_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _020751_jump
		movb   $0x000000,0x00007a(%eax)

	_020751_jump:
		mov    %bl,_0a9eb2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02075c_func:
		push   %edx
		cmpb   $0x000001,_0a9eb4_data
		jne    _020780_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0a9eb1_data,%al
		mov    _0a9eb3_data,%dl
		sar    $0x000003,%eax
		cmp    %eax,%edx
		jl     _020780_jump
		mov    $0x000001,%al
		pop    %edx
		ret    

	_020780_jump:
		xor    %al,%al
		pop    %edx
		ret    



_020784_func:
		call   _0302c0_func
		and    $0x0000ff,%eax
		mov    _0a9eac_data(%eax),%al
		cmp    $0x000096,%al
		ja     _02079f_jump
		and    $0x0000ff,%eax
		jmp    _0207a4_jump

	_02079f_jump:
		mov    $0x000096,%eax

	_0207a4_jump:
		mov    %al,_0a9eb1_data
		xor    %ah,%ah
		mov    %ah,_0a9eb4_data
		mov    %ah,_0a9eb3_data
		mov    %ah,_0a9eb2_data
		ret    



_0207c0_func:
		push   %edx
		movw   $0x000000,0x000040(%eax)
		movw   $0x000000,0x000042(%eax)
		movl   $0x000000,0x000024(%eax)
		mov    0x000085(%eax),%dl
		movb   $0x000000,0x00007a(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000085(%eax)
		mov    0x000032(%eax),%eax
		sar    $0x000010,%eax
		call   _0200e0_func
		call   _020784_func
		pop    %edx
		ret    



_0207fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		call   _018e40_func
		cwtl   
		sub    %edx,%eax
		sub    0x00002c(%ecx),%eax
		cmp    $0x000020,%eax
		jg     _020840_jump
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x00006d(%ecx),%dl
		call   _018e40_func
		cwtl   
		mov    $0x000036,%ebx
		sub    %edx,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01dea8_func
		movb   $0x00006b,0x00006e(%ecx)
		movb   $0x000000,0x00006f(%ecx)
		jmp    _020847_jump

	_020840_jump:
		mov    %ecx,%eax
		call   _0207c0_func

	_020847_jump:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _07d3c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02089c_func:
		push   %edx
		mov    _0c317e_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _0208f0_jump
		mov    %edx,%eax
		shl    $0x000004,%edx
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		cmpl   $0x000000,0x000024(%edx)
		je     _0208ec_jump
		testb  $0x000004,0x000085(%edx)
		je     _0208ec_jump
		cmpb   $0x000000,0x000071(%edx)
		jne    _0208d8_jump
		cmpb   $0x000036,0x000070(%edx)
		je     _0208df_jump

	_0208d8_jump:
		mov    $0x000001,%eax
		jmp    _0208e1_jump

	_0208df_jump:
		xor    %eax,%eax

	_0208e1_jump:
		test   %eax,%eax
		je     _0208ec_jump
		mov    %edx,%eax
		call   _0207fc_func

	_0208ec_jump:
		movb   $0x000000,0x00007a(%edx)

	_0208f0_jump:
		pop    %edx
		ret    



_0208f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x000071(%eax)
		jne    _020931_jump
		cmpb   $0x000036,0x000070(%edx)
		jne    _020931_jump
		mov    %edx,%eax
		call   _01d740_func
		test   %al,%al
		je     _020919_jump
		mov    %edx,%eax
		call   _0207c0_func
		jmp    _020926_jump

	_020919_jump:
		cmpb   $0x000000,0x00006f(%edx)
		jne    _020926_jump
		mov    %edx,%eax
		call   _07d3c4_func

	_020926_jump:
		mov    %edx,%eax
		call   _05b0d8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020931_jump:
		cmpb   $0x000003,_0b9369_data
		jne    _020943_jump
		cmpb   $0x000017,_0b9368_data
		je     _02096c_jump

	_020943_jump:
		cmpw   $0x000003,_0c3130_data
		jne    _020977_jump
		cmpb   $0x000002,_0b9369_data
		jne    _02095f_jump
		cmpb   $0x00001f,_0b9368_data
		je     _020966_jump

	_02095f_jump:
		mov    $0x000001,%eax
		jmp    _020968_jump

	_020966_jump:
		xor    %eax,%eax

	_020968_jump:
		test   %eax,%eax
		je     _020977_jump

	_02096c_jump:
		mov    %edx,%eax
		call   _0207fc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020977_jump:
		mov    _0a9eb4_data,%ah
		test   %ah,%ah
		je     _020b1d_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    _0a9eb2_data,%bl
		mov    _0a9eb3_data,%al
		dec    %ebx
		cmp    %ebx,%eax
		jne    _0209ed_jump
		mov    _0c3180_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000004,%ebx
		mov    0x000085(%edx),%cl
		add    %ebx,%eax
		mov    _0b9410_data,%ebx
		shl    $0x000003,%eax
		and    $0x0000fb,%cl
		add    %eax,%ebx
		mov    %cl,0x000085(%edx)
		mov    0x000085(%ebx),%ch
		and    $0x0000fb,%ch
		mov    %edx,%eax
		mov    %ch,0x000085(%ebx)
		call   _07d3c4_func
		cmpl   $0x000000,0x000024(%ebx)
		je     _020b3f_jump
		mov    %ebx,%eax
		call   _07d3c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0209ed_jump:
		lea    0x000000(,%eax,8),%ebx
		add    %eax,%ebx
		add    %ebx,%ebx
		add    $_0c33f0_data,%ebx
		movswl (%ebx),%eax
		mov    %eax,0x000028(%edx)
		mov    (%ebx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000008(%ebx),%al
		mov    %al,0x000071(%edx)
		mov    0x000009(%ebx),%al
		mov    %al,0x000070(%edx)
		mov    0x00000a(%ebx),%al
		mov    %al,0x00006e(%edx)
		mov    0x00000b(%ebx),%al
		mov    %al,0x00006f(%edx)
		mov    0x000085(%edx),%cl
		mov    0x00000c(%ebx),%al
		and    $0x0000f7,%cl
		and    $0x000001,%al
		mov    %cl,0x000085(%edx)
		shl    $0x000003,%al
		mov    %cl,%ch
		or     %al,%ch
		xor    %eax,%eax
		mov    %ch,0x000085(%edx)
		mov    0x000011(%ebx),%al
		movw   $0x000000,0x000040(%edx)
		mov    %ax,0x00005e(%edx)
		mov    0x000082(%edx),%al
		movw   $0x000000,0x000042(%edx)
		test   %al,%al
		jne    _020a6b_jump
		mov    %edx,%eax
		call   _07d3c4_func

	_020a6b_jump:
		mov    _0c3180_data,%eax
		sar    $0x000010,%eax
		movb   $0x000004,0x000082(%edx)
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		add    %eax,%edx
		cmpb   $0x000000,0x000010(%ebx)
		je     _020af4_jump
		mov    0x000085(%edx),%cl
		movb   $0x000004,0x000082(%edx)
		or     $0x000004,%cl
		mov    %cl,0x000085(%edx)
		mov    0x000002(%ebx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%edx)
		mov    0x000004(%ebx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x00000d(%ebx),%al
		mov    %al,0x00006e(%edx)
		mov    0x00000e(%ebx),%al
		mov    %al,0x00006f(%edx)
		mov    0x000085(%edx),%ch
		mov    0x00000f(%ebx),%al
		and    $0x0000f7,%ch
		and    $0x000001,%al
		movw   $0x000000,0x000040(%edx)
		shl    $0x000003,%al
		movw   $0x000000,0x000042(%edx)
		mov    %ch,%ah
		mov    %ch,0x000085(%edx)
		or     %al,%ah
		mov    %ah,0x000085(%edx)
		jmp    _020afb_jump

	_020af4_jump:
		andb   $0x0000fb,0x000085(%edx)

	_020afb_jump:
		mov    _0a9eb3_data,%dl
		inc    %dl
		mov    %dl,_0a9eb3_data
		cmp    _0a9eb1_data,%dl
		jbe    _020b3f_jump
		xor    %bl,%bl
		mov    %bl,_0a9eb3_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020b1d_jump:
		mov    %ah,0x000082(%edx)
		mov    _0c3180_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %eax,%edx
		mov    _0b9410_data,%eax
		andb   $0x0000fb,0x000085(%eax,%edx,8)

	_020b3f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020b44_func:
		push   %edx
		cmpb   $0x000001,_0a9eb4_data
		jne    _020b5b_jump
		xor    %dh,%dh
		mov    %dh,_0b9372_data
		call   _02089c_func

	_020b5b_jump:
		pop    %edx
		ret    



_020b60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    _0b9408_data,%ecx
		movswl (%ecx),%ecx
		mov    %ecx,%edx
		shl    $0x000004,%edx
		add    %ecx,%edx
		mov    _0b9410_data,%ecx
		shl    $0x000003,%edx
		add    %edx,%ecx
		mov    _0b940c_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020c46_jump
		mov    _0b940c_data,%si

	_020b9a_jump:
		cmpw   $0x000082,0x000064(%ecx)
		jne    _020c1a_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _020c1a_jump
		movb   $0x000000,0x00006f(%ecx)
		mov    0x000028(%ebx),%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%ebx),%edx
		movw   $0x000000,0x000042(%ecx)
		mov    %edx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    0x000042(%ecx),%ax
		xor    %edx,%edx
		mov    0x000072(%ecx),%bl
		mov    0x000073(%ecx),%dl
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01dea8_func
		mov    %ecx,%eax
		call   _01e53c_func
		mov    %ecx,%eax
		call   _01e4c4_func
		movw   $0x00ffff,0x000046(%ecx)
		mov    0x000085(%ecx),%ah
		movw   $0x000000,0x000048(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000085(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _020064_func
		andb   $0x0000bf,0x000085(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020c1a_jump:
		inc    %eax
		movswl %ax,%ecx
		lea    0x000000(,%ecx,2),%edx
		mov    _0b9408_data,%ecx
		movswl (%ecx,%edx,1),%ecx
		imul   $0x000088,%ecx,%ecx
		mov    _0b9410_data,%edx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _020b9a_jump

	_020c46_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020c4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		testb  $0x000004,0x000081(%eax)
		je     _020cd2_jump
		mov    %ecx,%eax
		call   _01deb4_func
		mov    %eax,%esi
		mov    %ecx,%eax
		call   _01df9c_func
		movswl %si,%esi
		movswl %ax,%edi
		mov    %esi,%edx
		mov    %edi,%ebx
		mov    %ecx,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _020ca7_jump
		mov    %edi,%ebx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _02bb40_func
		test   %ax,%ax
		je     _020ca7_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _065368_func

	_020ca7_jump:
		mov    0x00005c(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    0x000040(%ecx),%dx
		mov    %ax,0x000042(%ecx)
		test   %dx,%dx
		jle    _020cc9_jump
		orb    $0x000008,0x000085(%ecx)
		jmp    _020cd2_jump

	_020cc9_jump:
		jge    _020cd2_jump
		andb   $0x0000f7,0x000085(%ecx)

	_020cd2_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _020ceb_jump
		mov    0x00005c(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_020ceb_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020cf4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x0000ff,%dl
		mov    0x000074(%eax),%dh
		test   %dh,%dh
		jne    _020d13_jump
		mov    0x000085(%eax),%cl
		or     $0x000008,%cl
		mov    $0x000003,%dl
		mov    %cl,0x000085(%eax)
		jmp    _020d29_jump

	_020d13_jump:
		cmp    $0x000001,%dh
		jne    _020d29_jump
		mov    0x000085(%eax),%bh
		and    $0x0000f7,%bh
		mov    $0x000002,%dl
		mov    %bh,0x000085(%eax)

	_020d29_jump:
		cmp    $0x0000ff,%dl
		je     _020d3e_jump
		mov    $0x000001,%ebx
		and    $0x0000ff,%edx
		call   _065368_func

	_020d3e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020d44_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		cmpb   $0x000000,0x000071(%eax)
		jne    _020d67_jump
		cmpb   $0x000004,0x000070(%esi)
		jne    _020d67_jump
		mov    %esi,%eax
		call   _05a530_func
		negw   0x000040(%esi)
		jmp    _020e8b_jump

	_020d67_jump:
		cmpb   $0x000000,0x000074(%esi)
		jne    _020d76_jump
		andb   $0x0000f7,0x000085(%esi)
		jmp    _020d7d_jump

	_020d76_jump:
		orb    $0x000008,0x000085(%esi)

	_020d7d_jump:
		testb  $0x000002,0x000081(%esi)
		je     _020dcd_jump
		mov    %esi,%eax
		call   _05a530_func
		xor    %edx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _02346c_func
		mov    %al,%cl
		testb  $0x000001,_0a525d_data(%ecx)
		je     _020dc6_jump
		cmpb   $0x000000,0x000074(%esi)
		jne    _020db5_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _020dbf_jump

	_020db5_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_020dbf_jump:
		mov    %esi,%eax
		call   _065368_func

	_020dc6_jump:
		mov    %esi,%eax
		call   _023aac_func

	_020dcd_jump:
		testb  $0x000001,0x000081(%esi)
		je     _020e75_jump
		mov    $0x000028,%ebx
		lea    0x00004a(%esi),%ecx
		mov    $0x000030,%edx
		mov    %esi,%eax
		call   _01dbe8_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01deb4_func
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _01df9c_func
		movswl %cx,%ecx
		movswl %ax,%edi
		mov    %ecx,%edx
		mov    %edi,%ebx
		mov    %esi,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _020e6e_jump
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _02bb40_func
		test   %ax,%ax
		je     _020e6e_jump
		mov    0x00003e(%esi),%ecx
		mov    0x000028(%esi),%edx
		sar    $0x000010,%ecx
		sub    %ecx,%edx
		mov    %edx,0x000028(%esi)
		cmpb   $0x000000,0x000074(%esi)
		jne    _020e56_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _065368_func
		orb    $0x000008,0x000085(%esi)
		jmp    _020e6e_jump

	_020e56_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _065368_func
		andb   $0x0000f7,0x000085(%esi)

	_020e6e_jump:
		mov    %esi,%eax
		call   _05a530_func

	_020e75_jump:
		testb  $0x000010,0x000081(%esi)
		je     _020e8b_jump
		mov    %esi,%eax
		call   _05a530_func
		movw   $0x000000,0x000042(%esi)

	_020e8b_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020e94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		testb  $0x000010,0x000081(%eax)
		je     _020f58_jump
		cmpb   $0x000000,0x000071(%esi)
		jne    _020eb3_jump
		cmpb   $0x000002,0x000070(%esi)
		je     _020ec7_jump

	_020eb3_jump:
		cmpb   $0x000002,0x000071(%esi)
		jne    _020f58_jump
		cmpb   $0x000003,0x000070(%esi)
		jne    _020f58_jump

	_020ec7_jump:
		mov    0x000083(%esi),%cl
		cmp    $0x0000ff,%cl
		jne    _020f08_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _020ef2_jump
		cmp    %ecx,%eax
		jg     _020ef2_jump
		mov    $0x000001,%eax
		jmp    _020ef4_jump

	_020ef2_jump:
		xor    %eax,%eax

	_020ef4_jump:
		test   %eax,%eax
		jne    _020eff_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _020f58_jump

	_020eff_jump:
		movb   $0x00003c,0x000083(%esi)
		jmp    _020f58_jump

	_020f08_jump:
		test   %cl,%cl
		jne    _020f48_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		testb  $0x000008,0x000085(%esi)
		je     _020f2f_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _020f39_jump

	_020f2f_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_020f39_jump:
		mov    %esi,%eax
		call   _065368_func
		movw   $0x000000,0x000042(%esi)
		jmp    _020f58_jump

	_020f48_jump:
		mov    %cl,%al
		movw   $0x000000,0x000042(%esi)
		dec    %al
		mov    %al,0x000083(%esi)

	_020f58_jump:
		cmpb   $0x000004,0x000079(%esi)
		jne    _020fcd_jump
		cmpb   $0x000000,0x000071(%esi)
		jne    _020f6e_jump
		cmpb   $0x000002,0x000070(%esi)
		je     _020f7a_jump

	_020f6e_jump:
		cmpb   $0x000002,0x000071(%esi)
		jne    _020fcd_jump
		cmpb   $0x000003,0x000070(%esi)
		jne    _020fcd_jump

	_020f7a_jump:
		cmpb   $0x000000,0x00007f(%esi)
		je     _020fbc_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _020fa0_jump
		cmp    %ecx,%eax
		jg     _020fa0_jump
		mov    $0x000001,%eax
		jmp    _020fa2_jump

	_020fa0_jump:
		xor    %eax,%eax

	_020fa2_jump:
		test   %eax,%eax
		je     _020fcd_jump
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		movw   $0x000000,0x000042(%esi)
		jmp    _020fcd_jump

	_020fbc_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01dea8_func

	_020fcd_jump:
		testb  $0x000002,0x000081(%esi)
		je     _021017_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _021017_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _02346c_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _021017_jump
		cmpb   $0x000000,0x000074(%esi)
		jne    _021006_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _021010_jump

	_021006_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_021010_jump:
		mov    %esi,%eax
		call   _065368_func

	_021017_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02101c_func:
		push   %edx
		cmpb   $0x000001,0x00007b(%eax)
		jbe    _021027_jump
		movb   $0x000001,0x00007a(%eax)

	_021027_jump:
		mov    0x000074(%eax),%dl
		cmp    $0x000002,%dl
		jb     _021046_jump
		jbe    _021052_jump
		cmp    $0x000014,%dl
		jb     _021052_jump
		jbe    _02103f_jump
		cmp    $0x00001e,%dl
		je     _02104d_jump
		pop    %edx
		ret    

	_02103f_jump:
		call   _020c4c_func
		pop    %edx
		ret    

	_021046_jump:
		call   _020d44_func
		pop    %edx
		ret    

	_02104d_jump:
		call   _020e94_func

	_021052_jump:
		pop    %edx
		ret    



_021054_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000001,0x00007b(%eax)
		ja     _0210e6_jump
		mov    %ecx,%eax
		call   _01f090_func
		cmpb   $0x000000,0x00007a(%ecx)
		jne    _0210e6_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    _0c1144_data,%eax
		movw   $0x000000,0x000042(%ecx)
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jl     _0210b2_jump
		jle    _0210a0_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _0210b9_jump

	_0210a0_jump:
		testb  $0x000008,0x000085(%eax)
		je     _0210b2_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _0210b9_jump

	_0210b2_jump:
		orb    $0x000008,0x000085(%ecx)

	_0210b9_jump:
		mov    %ecx,%eax
		call   _020b60_func
		testb  $0x000008,0x000085(%ecx)
		je     _0210d5_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _0210df_jump

	_0210d5_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx

	_0210df_jump:
		mov    %ecx,%eax
		call   _065368_func

	_0210e6_jump:
		pop    %ecx
		pop    %ebx
		ret    

_0210ec_switch:
		.long   _02131c_case
		.long   _02128d_case
		.long   _02116c_case
		.long   _021360_case
		.long   _021360_case
		.long   _021128_case




_021104_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000079(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _021360_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0210ec_switch(,%eax,4)

	_021128_case:
		mov    0x000071(%esi),%ah
		cmp    $0x000001,%ah
		jne    _021360_case
		cmp    0x000070(%esi),%ah
		jne    _021360_case
		cmpb   $0x000002,_0b9369_data
		setne  %al
		and    $0x0000ff,%eax
		je     _021360_case
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _065368_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02116c_case:
		cmpb   $0x000002,_0b9369_data
		je     _021360_case
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007e(%esi),%al
		mov    0x000004(%esp),%ebx
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		mov    %eax,%ecx
		add    %eax,%ecx
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x00007e(%esi),%al
		add    %eax,%edi
		mov    %di,(%esp)
		cmpb   $0x000001,0x000071(%esi)
		jne    _021360_case
		cmpb   $0x000000,0x000070(%esi)
		jne    _021360_case
		mov    _0c313c_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c312a_data,%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    _0c3128_data,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    _0c3126_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _027cc0_func
		test   %ax,%ax
		je     _021360_case
		xor    %edx,%edx
		mov    _0c312a_data,%ax
		mov    0x000078(%esi),%dl
		sub    %edx,%eax
		mov    %ax,0x000050(%esi)
		mov    0x00002c(%esi),%edx
		mov    0x00004e(%esi),%eax
		sub    $0x000010,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _021360_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01e4c4_func
		mov    %esi,%eax
		call   _065368_func
		movb   $0x000000,0x000075(%esi)
		mov    0x00002c(%esi),%edx
		movb   $0x000006,0x000076(%esi)
		dec    %edx
		mov    %edx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02128d_case:
		mov    0x000071(%esi),%ch
		test   %ch,%ch
		jne    _021360_case
		cmpb   $0x000000,0x000070(%esi)
		jne    _021360_case
		cmpb   $0x000002,_0b9369_data
		setne  %al
		and    $0x0000ff,%eax
		je     _021360_case
		mov    %esi,%eax
		call   _01e4c4_func
		xor    %eax,%eax
		mov    _0b9324_data,%dx
		mov    _0b9370_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000078(%esi),%al
		sub    %eax,%edx
		mov    %dx,0x000050(%esi)
		mov    0x00002c(%esi),%eax
		mov    0x00004e(%esi),%edx
		sub    $0x000010,%eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jge    _021360_case
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _065368_func
		movb   $0x000006,0x000076(%esi)
		movb   $0x0000ff,0x000083(%esi)
		mov    0x00002c(%esi),%ebx
		mov    %ch,0x000075(%esi)
		dec    %ebx
		mov    %ebx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02131c_case:
		cmpb   $0x000000,0x000071(%esi)
		jne    _021360_case
		cmpb   $0x000000,0x000070(%esi)
		jne    _021360_case
		cmpb   $0x000002,_0b9369_data
		setne  %al
		and    $0x0000ff,%eax
		je     _021360_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01e4c4_func
		mov    %esi,%eax
		call   _065368_func
		movb   $0x000000,0x000075(%esi)
		mov    0x00002c(%esi),%ecx
		movb   $0x000006,0x000076(%esi)
		dec    %ecx
		mov    %ecx,0x00002c(%esi)

	_021360_case:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02136c_func:
		push   %edx
		cmpb   $0x000001,0x00007b(%eax)
		jbe    _02137b_jump
		xor    %dh,%dh
		mov    %dh,_0b9372_data

	_02137b_jump:
		call   _02b6a0_func
		pop    %edx
		ret    



_021390_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    $0x000001,%eax
		call   _06a9d8_func
		xor    %ebp,%ebp
		xor    %eax,%eax

	_0213a7_jump:
		add    $0x000004,%eax
		xor    %edx,%edx
		mov    %edx,_0c3edc_data(%eax)
		cmp    $0x000500,%eax
		jne    _0213a7_jump
		xor    %ebx,%ebx
		mov    $0x00009f,%esi
		mov    $0x000001,%ecx

	_0213c5_jump:
		mov    %esi,%eax
		call   _06a9a0_func
		cwtl   
		mov    %eax,_0c3eb8_data(%ebx)
		mov    %ecx,%eax
		call   _06a9a0_func
		cwtl   
		add    $0x000002,%eax
		imul   $0x000140,%eax,%eax
		add    $0x000004,%ebx
		mov    %eax,_0c3e8c_data(%ebx)
		cmp    $0x000028,%ebx
		jne    _0213c5_jump

	_0213f2_jump:
		test   %ebp,%ebp
		jne    _021580_jump
		mov    $0x000001,%ebp
		xor    %edi,%edi

	_021401_jump:
		mov    _0c3eb8_data(%edi),%eax
		mov    _0c3e90_data(%edi),%ebx
		mov    _0c3ee0_data(,%eax,4),%ecx
		add    %ebx,%ecx
		mov    %ecx,_0c3ee0_data(,%eax,4)
		cmp    $0x00fa00,%ecx
		jge    _021427_jump
		xor    %ebp,%ebp

	_021427_jump:
		mov    _0c3eb8_data(%edi),%esi
		dec    %esi
		test   %esi,%esi
		jge    _021482_jump
		jmp    _021499_jump

	_021434_jump:
		mov    $0x000140,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ecx
		mov    _0c3ee4_data(%ebx),%eax
		mov    %eax,%edx
		movl   $0x000140,(%esp)
		sar    $0x00001f,%edx
		idivl  (%esp)
		sub    %ecx,%eax
		cwtl   
		call   _06a9a0_func
		cwtl   
		add    %eax,%ecx
		imul   $0x000140,%ecx,%ecx
		mov    %ecx,_0c3ee0_data(%ebx)
		cmp    $0x00fa00,%ecx
		jge    _021478_jump
		xor    %ebp,%ebp

	_021478_jump:
		sub    $0x000004,%ebx
		dec    %esi
		test   %ebx,%ebx
		jge    _021489_jump
		jmp    _021499_jump

	_021482_jump:
		lea    0x000000(,%esi,4),%ebx

	_021489_jump:
		mov    _0c3ee4_data(%ebx),%eax
		mov    _0c3ee0_data(%ebx),%edx
		cmp    %edx,%eax
		jge    _021434_jump

	_021499_jump:
		mov    _0c3eb8_data(%edi),%esi
		inc    %esi
		cmp    $0x0000a0,%esi
		jl     _0214fb_jump
		jmp    _021512_jump

	_0214aa_jump:
		mov    $0x000140,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ecx
		mov    _0c3edc_data(%ebx),%eax
		mov    %eax,%edx
		movl   $0x000140,(%esp)
		sar    $0x00001f,%edx
		idivl  (%esp)
		sub    %ecx,%eax
		cwtl   
		call   _06a9a0_func
		cwtl   
		add    %ecx,%eax
		imul   $0x000140,%eax,%eax
		mov    %eax,_0c3ee0_data(%ebx)
		cmp    $0x00fa00,%eax
		jge    _0214ed_jump
		xor    %ebp,%ebp

	_0214ed_jump:
		add    $0x000004,%ebx
		inc    %esi
		cmp    $0x000280,%ebx
		jl     _021502_jump
		jmp    _021512_jump

	_0214fb_jump:
		lea    0x000000(,%esi,4),%ebx

	_021502_jump:
		mov    _0c3edc_data(%ebx),%eax
		mov    _0c3ee0_data(%ebx),%edx
		cmp    %edx,%eax
		jge    _0214aa_jump

	_021512_jump:
		add    $0x000004,%edi
		cmp    $0x000028,%edi
		jne    _021401_jump
		test   %ebp,%ebp
		jne    _0213f2_jump
		call   _018aff_func
		mov    $_0c3ee0_data,%ebx
		mov    _0c0f9c_data,%edi
		mov    _0c0f50_data,%esi
		mov    %edi,%edx
		mov    $0x0000c8,%ecx

	_021543_jump:
		push   %ecx
		mov    $0x000140,%ecx

	_021549_jump:
		mov    (%ebx),%eax
		add    %edx,%eax
		cmp    %edi,%eax
		jge    _02155e_jump
		mov    (%ebx),%eax
		neg    %eax
		mov    (%esi,%eax,1),%ax
		mov    %ax,(%edi)
		jmp    _021563_jump

	_02155e_jump:
		movw   $0x000000,(%edi)

	_021563_jump:
		add    $0x000004,%ebx
		add    $0x000002,%edi
		add    $0x000002,%esi
		sub    $0x000002,%ecx
		jne    _021549_jump
		pop    %ecx
		sub    $0x000280,%ebx
		dec    %ecx
		jne    _021543_jump
		jmp    _0213f2_jump

	_021580_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021590_func:
		push   %edx
		mov    $_0c21b7_data,%edx
		call   _03fcac_func
		pop    %edx
		ret    



_0215a0_func:
		push   %edx
		mov    $_0c21ae_data,%edx
		call   _03fcac_func
		pop    %edx
		ret    



_0215b0_func:
		mov    _0c31ac_data,%ax
		ret    



_0215b8_func:
		push   %ecx
		push   %edx
		cmpb   $0x000001,_0c33aa_data
		jne    _0215d7_jump
		mov    $0xffffffff,%ecx
		mov    %ecx,_0c107c_data
		mov    %ecx,_0c1080_data
		pop    %edx
		pop    %ecx
		ret    

	_0215d7_jump:
		mov    _0c1084_data,%edx
		cmp    $0x000078,%edx
		jle    _0215fa_jump
		cmpl   $0xfffffffe,_0c1080_data
		jl     _0215fa_jump
		mov    _0c107c_data,%eax
		sub    $0x000078,%edx
		add    %edx,%eax
		mov    %eax,_0c1080_data

	_0215fa_jump:
		pop    %edx
		pop    %ecx
		ret    



_021600_func:
		push   %ecx
		mov    %eax,%ecx
		mov    %dl,0x000007(%eax)
		mov    %dl,0x00000d(%eax)
		sar    $0x000008,%edx
		mov    %dl,0x000004(%eax)
		mov    %dl,0x000009(%eax)
		sar    $0x000008,%edx
		mov    %dl,0x000010(%eax)
		mov    %dl,0x000003(%eax)
		sar    $0x000008,%edx
		mov    %dl,0x000001(%eax)
		mov    %dl,0x000005(%eax)
		mov    _0c2f40_data,%dl
		add    $0x00000b,%dl
		mov    %dl,0x00000f(%eax)
		mov    _0c2f40_data,%dl
		add    %dl,%dl
		mov    %dl,0x00000a(%eax)
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0a9ed1_data(%edx),%al
		xor    %al,0x000007(%ecx)
		mov    0x000004(%ecx),%bl
		mov    _0a9eb8_data(%edx),%al
		xor    %al,%bl
		mov    %bl,0x000004(%ecx)
		mov    _0a9eb8_data(%edx),%al
		xor    %al,0x000010(%ecx)
		mov    _0a9ed1_data(%edx),%al
		mov    0x000001(%ecx),%ah
		xor    %al,%ah
		mov    0x00000d(%ecx),%bl
		mov    %ah,0x000001(%ecx)
		xor    $0x00001a,%bl
		mov    _0a9ed1_data(%edx),%al
		mov    0x00000f(%ecx),%dl
		mov    %bl,0x00000d(%ecx)
		xor    %al,%dl
		mov    0x000003(%ecx),%al
		mov    %dl,0x00000f(%ecx)
		xor    $0x000063,%al
		mov    0x000009(%ecx),%bh
		mov    %al,0x000003(%ecx)
		xor    $0x00007c,%bh
		mov    0x00000a(%ecx),%dh
		mov    0x000005(%ecx),%ah
		mov    %bh,0x000009(%ecx)
		xor    $0x00006f,%ah
		xor    $0x00004f,%dh
		mov    %ah,0x000005(%ecx)
		mov    $0x0000fe,%eax
		mov    %dh,0x00000a(%ecx)
		call   _06a9a0_func
		inc    %al
		mov    %al,(%ecx)
		mov    $0x0000fe,%eax
		call   _06a9a0_func
		inc    %al
		mov    %al,0x000002(%ecx)
		mov    $0x0000fe,%eax
		call   _06a9a0_func
		inc    %al
		mov    %al,0x000006(%ecx)
		mov    $0x0000fe,%eax
		call   _06a9a0_func
		inc    %al
		mov    %al,0x000008(%ecx)
		mov    $0x0000fe,%eax
		call   _06a9a0_func
		inc    %al
		mov    %al,0x00000b(%ecx)
		mov    $0x0000fe,%eax
		call   _06a9a0_func
		inc    %al
		mov    %al,0x00000c(%ecx)
		mov    $0x0000fe,%eax
		call   _06a9a0_func
		inc    %al
		mov    %al,0x00000e(%ecx)
		pop    %ecx
		ret    



_021714_func:
		push   %ecx
		mov    %edx,%ecx
		mov    %bl,%dl
		movl   $0xffffffff,(%ecx)
		xor    %bl,%bl
		and    $0x0000ff,%edx
		mov    _0a9ed1_data(%edx),%bh
		xor    %bh,0x000007(%eax)
		mov    _0a9eb8_data(%edx),%bh
		xor    %bh,0x000004(%eax)
		mov    _0a9eb8_data(%edx),%bh
		xor    %bh,0x000010(%eax)
		mov    _0a9ed1_data(%edx),%bh
		xor    %bh,0x000001(%eax)
		mov    _0a9ed1_data(%edx),%dl
		mov    0x00000f(%eax),%dh
		mov    0x00000a(%eax),%bh
		xor    %dl,%dh
		xor    $0x00004f,%bh
		mov    %dh,0x00000f(%eax)
		mov    %bh,%dl
		mov    %bh,0x00000a(%eax)
		shr    %dl
		mov    %dl,0x00000a(%eax)
		subb   $0x00000b,0x00000f(%eax)
		mov    0x000009(%eax),%dl
		xor    $0x00007c,%dl
		mov    0x00000d(%eax),%bh
		mov    %dl,0x000009(%eax)
		xor    $0x00001a,%bh
		mov    0x000003(%eax),%dh
		mov    %bh,0x00000d(%eax)
		xor    $0x000063,%dh
		mov    %dh,0x000003(%eax)
		mov    0x000005(%eax),%bh
		mov    0x00000f(%eax),%dl
		xor    $0x00006f,%bh
		mov    0x00000a(%eax),%dh
		mov    %bh,0x000005(%eax)
		cmp    %dh,%dl
		jne    _0217ec_jump
		mov    0x000007(%eax),%dl
		cmp    0x00000d(%eax),%dl
		jne    _0217ec_jump
		mov    0x000004(%eax),%dl
		cmp    0x000009(%eax),%dl
		jne    _0217ec_jump
		mov    0x000010(%eax),%dl
		cmp    0x000003(%eax),%dl
		jne    _0217ec_jump
		mov    0x000001(%eax),%dl
		cmp    0x000005(%eax),%dl
		jne    _0217ec_jump
		xor    %edx,%edx
		mov    0x000009(%eax),%dl
		mov    %edx,%ebx
		xor    %edx,%edx
		shl    $0x000008,%ebx
		mov    0x00000d(%eax),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000003(%eax),%dl
		shl    $0x000010,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000005(%eax),%dl
		shl    $0x000018,%edx
		add    %edx,%ebx
		mov    %ebx,(%ecx)
		mov    0x00000f(%eax),%al
		mov    $0x000001,%bl
		mov    %al,_0c43e0_data

	_0217ec_jump:
		mov    %bl,%al
		pop    %ecx
		ret    



_0217f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000094,%esp
		mov    _0c30f8_data,%al
		dec    %al
		mov    $0x000006,%ah
		mul    %ah
		mov    _0c3104_data,%ah
		dec    %ah
		xor    %ebx,%ebx
		add    %ah,%al
		mov    _0c1074_data,%edx
		mov    %al,%bl
		lea    0x000080(%esp),%eax
		call   _021600_func
		mov    $_0a0524_data,%eax
		mov    $_0a0528_data,%ebx
		call   _065510_func
		mov    _0c30f6_data,%esi
		mov    $_0c2da3_data,%edx
		sar    $0x000010,%esi
		mov    %eax,%ecx
		mov    %esi,%eax
		mov    %esp,%edi
		call   _0655dc_func
		mov    %eax,%esi
		mov    $_0a052c_data,%edx
		push   %edi

	_021856_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _02186e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _021856_jump

	_02186e_jump:
		pop    %edi
		mov    %esp,%eax
		call   _085d60_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _0218a4_jump
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _085e56_func
		mov    %esi,%ecx
		mov    $0x000001,%ebx
		mov    $0x000011,%edx
		lea    0x000080(%esp),%eax
		call   _085f52_func
		mov    %esi,%eax
		call   _086112_func

	_0218a4_jump:
		movl   $0xffffffff,_0c1074_data
		add    $0x000094,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0218bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000098,%esp
		mov    %ax,0x000094(%esp)
		mov    $0xffffffff,%edx
		mov    0x000092(%esp),%esi
		xor    %ah,%ah
		mov    $_0a0528_data,%ebx
		mov    %ah,_0c43e0_data
		mov    %edx,_0c1074_data
		sar    $0x000010,%esi
		mov    $_0a0524_data,%eax
		mov    $_0c2da3_data,%edx
		call   _065510_func
		mov    %eax,%ecx
		mov    %esi,%eax
		mov    %esp,%edi
		call   _0655dc_func
		mov    %eax,%esi
		mov    $_0a0530_data,%edx
		push   %edi

	_021913_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _02192b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _021913_jump

	_02192b_jump:
		pop    %edi
		mov    %esp,%eax
		call   _085d60_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _021992_jump
		mov    $0x000011,%ebx
		mov    $0x000001,%edx
		mov    %eax,%ecx
		lea    0x000080(%esp),%eax
		call   _086255_func
		cmp    $0x000011,%eax
		jne    _02198b_jump
		mov    0x000094(%esp),%al
		dec    %al
		mov    $0x000006,%ah
		mul    %ah
		mov    _0c3104_data,%ah
		dec    %ah
		xor    %ebx,%ebx
		add    %ah,%al
		mov    $_0c1074_data,%edx
		mov    %al,%bl
		lea    0x000080(%esp),%eax
		call   _021714_func
		test   %al,%al
		jne    _02198b_jump
		mov    %al,_0c43e0_data

	_02198b_jump:
		mov    %esi,%eax
		call   _086112_func

	_021992_jump:
		mov    _0c43e0_data,%al
		add    $0x000098,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0219a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000084,%esp
		mov    _0c1074_data,%edx
		mov    _0c1074_data,%al
		sar    $0x000008,%edx
		mov    %al,0x000080(%esp)
		mov    %edx,_0c1074_data
		mov    %edx,%ebx
		mov    _0c1074_data,%al
		sar    $0x000008,%ebx
		xor    %edx,%edx
		mov    %al,0x000081(%esp)
		mov    %ebx,%ecx
		mov    %ebx,_0c1074_data
		sar    $0x000008,%ecx
		mov    _0c1074_data,%al
		mov    %ecx,_0c1074_data
		mov    %al,0x000082(%esp)
		mov    _0c1074_data,%al
		mov    _0c30f8_data,%dl
		mov    %al,0x000083(%esp)
		mov    $_0a0534_data,%eax
		mov    %esp,%edi
		call   _065ee0_func
		mov    %eax,%esi
		mov    $_0a052c_data,%edx
		push   %edi

	_021a20_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _021a38_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _021a20_jump

	_021a38_jump:
		pop    %edi
		mov    %esp,%eax
		call   _085d60_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _021a6e_jump
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _085e56_func
		mov    %esi,%ecx
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000080(%esp),%eax
		call   _085f52_func
		mov    %esi,%eax
		call   _086112_func

	_021a6e_jump:
		movl   $0xffffffff,_0c1074_data
		add    $0x000084,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021a84_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000084,%esp
		movl   $0xffffffff,_0c1074_data
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_0a0534_data,%eax
		mov    %esp,%edi
		call   _065ee0_func
		mov    %eax,%esi
		mov    $_0a0530_data,%edx
		push   %edi

	_021ab1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _021ac9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _021ab1_jump

	_021ac9_jump:
		pop    %edi
		mov    %esp,%eax
		call   _085d60_func
		mov    %eax,%edi
		test   %eax,%eax
		je     _021b34_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    %eax,%ecx
		lea    0x000080(%esp),%eax
		call   _086255_func
		cmp    $0x000004,%eax
		jne    _021b2d_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000081(%esp),%al
		mov    0x000080(%esp),%dl
		shl    $0x000008,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000082(%esp),%al
		shl    $0x000010,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000083(%esp),%al
		shl    $0x000018,%eax
		add    %eax,%edx
		mov    %edx,_0c1074_data

	_021b2d_jump:
		mov    %edi,%eax
		call   _086112_func

	_021b34_jump:
		add    $0x000084,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021b40_func:
		cmpb   $0x000001,_0c33cb_data
		jne    _021b55_jump
		movl   $0xffffffff,_0c107c_data
		jmp    _021b5f_jump

	_021b55_jump:
		mov    _0c1080_data,%eax
		mov    %eax,_0c107c_data

	_021b5f_jump:
		movl   $0xfffffffd,_0c1080_data
		ret    



_021c7c_func:
		cmpw   $0x000000,_0c30d6_data
		jne    _021c9c_jump
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0b7fd0_data,%eax
		jmp    _0626a8_jump

	_021c9c_jump:
		xor    %al,%al

	_021c9e_jump:
		ret    



_021ca0_func:
		cmpw   $0x000000,_0c30d6_data
		jne    _021c9e_jump
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0b7fd0_data,%eax
		jmp    _062668_jump



_021cc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c33ac_data,%ah
		test   %ah,%ah
		jbe    _021d1e_jump
		cmpw   $0x000000,_0c30d4_data
		jne    _021d1e_jump
		cmpb   $0x000000,_0c334e_data
		jne    _021d1e_jump
		mov    %ah,%dh
		mov    _0c2f46_data,%bl
		dec    %dh
		inc    %bl
		mov    %dh,_0c33ac_data
		mov    %bl,_0c2f46_data
		cmp    $0x000064,%bl
		jbe    _021d1e_jump
		mov    %bl,%cl
		sub    $0x000065,%cl
		mov    %cl,_0c2f46_data
		call   _07d5f4_func
		mov    %ax,_0c30f6_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _021d1e_jump
		call   _05cd2c_func

	_021d1e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021d24_func:
		push   %edx
		xor    %eax,%eax

	_021d27_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0b7fcf_data(%eax)
		cmp    $0x000018,%eax
		jl     _021d27_jump
		pop    %edx
		ret    



_021d38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _05a0ec_func
		call   _042170_func
		cmpw   $0x000000,_0c30d8_data
		jne    _021da0_jump
		call   _03ea80_func
		mov    _0c1084_data,%edx
		sub    $0x000078,%edx
		mov    $0x00003c,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0c1088_data,%eax
		push   %edx
		mov    %eax,%edx
		mov    $0x00003c,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    _0c31aa_data,%ebx
		sar    $0x000010,%ebx
		dec    %ebx
		sub    %eax,%ebx
		push   %ebx
		push   $_0a053c_data
		push   $_0c43e1_data
		call   _0852d9_func
		add    $0x000010,%esp

	_021da0_jump:
		mov    _0c3140_data,%edx
		mov    _0c3150_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _021c7c_func
		test   %al,%al
		je     _021e24_jump
		cmpw   $0x000000,_0c317e_data
		jne    _021dde_jump
		cmpb   $0x000000,_0c334e_data
		jne    _021dde_jump
		mov    $0x0000bf,%ebx
		mov    $0x000080,%edx
		xor    %eax,%eax
		call   _03e930_func

	_021dde_jump:
		cmpw   $0x000000,_0c317e_data
		jne    _021e02_jump
		cmpb   $0x000000,_0c3350_data
		jne    _021e02_jump
		mov    $0x0000ef,%ebx
		mov    $0x0000c0,%edx
		xor    %eax,%eax
		call   _03e930_func

	_021e02_jump:
		call   _03ede8_jump
		push   $0x000005
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c43e1_data,%eax
		xor    %ecx,%ecx
		call   _01b0f8_func
		jmp    _021ed0_jump

	_021e24_jump:
		cmpw   $0x000000,_0c317e_data
		jne    _021e48_jump
		cmpb   $0x000000,_0c334e_data
		jne    _021e48_jump
		mov    $0x0000bf,%ebx
		mov    $0x000080,%edx
		xor    %eax,%eax
		call   _03e930_func

	_021e48_jump:
		cmpw   $0x000000,_0c317e_data
		jne    _021e6c_jump
		cmpb   $0x000000,_0c3350_data
		jne    _021e6c_jump
		mov    $0x0000ef,%ebx
		mov    $0x0000c0,%edx
		xor    %eax,%eax
		call   _03e930_func

	_021e6c_jump:
		call   _03ede8_jump
		cmpw   $0x00000f,_0c30d8_data
		jne    _021ea2_jump
		call   _07d308_func
		movw   $0x00004b,0x000036(%eax)
		movw   $0x000032,0x000038(%eax)
		mov    %eax,_0c43f8_data
		movl   $0x000001,0x000024(%eax)
		call   _05b0d8_func
		call   _05cd2c_func

	_021ea2_jump:
		cmpw   $0x000014,_0c30d8_data
		jle    _021ed0_jump
		mov    _0c43f8_data,%eax
		call   _05b0d8_func
		mov    _0c43f8_data,%eax
		call   _01f028_func
		mov    _0c43f8_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _021ed0_jump
		call   _019070_func

	_021ed0_jump:
		mov    _0c30d8_data,%bx
		xor    %edx,%edx
		cmp    $0x0001f4,%bx
		je     _021f12_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _021f08_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _021f08_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _021f08_jump
		call   _042060_func
		test   %ax,%ax
		je     _021f1c_jump

	_021f08_jump:
		cmpw   $0x000032,_0c30d8_data
		jle    _021f1c_jump

	_021f12_jump:
		call   _07ca74_func
		mov    $0x000001,%edx

	_021f1c_jump:
		mov    _0c30d8_data,%si
		inc    %esi
		mov    %edx,%eax
		mov    %si,_0c30d8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021f34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c30d8_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jge    _02205f_jump
		mov    %edx,%ecx
		inc    %ecx
		mov    %cx,_0c30d8_data
		mov    _0c30d6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02205f_jump
		mov    %ecx,%esi
		inc    %esi
		mov    _0a7c9c_data,%ah
		mov    %si,_0c30d8_data
		cmp    $0x000001,%ah
		jne    _021f8b_jump
		xor    %eax,%eax
		mov    _0c33a0_data,%al
		mov    $0x000001,%ebx
		call   _03fa6c_func

	_021f8b_jump:
		mov    $0x00fa00,%edx
		mov    $_0c1068_data,%eax
		call   _084e40_func
		mov    _0c3140_data,%edx
		mov    _0c3150_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _021c7c_func
		test   %al,%al
		je     _021fc0_jump
		mov    $_0c1068_data,%eax
		call   _021590_func
		jmp    _021fca_jump

	_021fc0_jump:
		mov    $_0c1068_data,%eax
		call   _0215a0_func

	_021fca_jump:
		mov    $_0b4028_data,%eax
		call   _03ece4_func
		call   _03eaf8_func
		call   _01d724_func
		cmpb   $0x000000,_0c3372_data
		je     _021ff6_jump
		call   _070a20_func
		mov    $_0c31d9_data,%eax
		call   _071f50_func

	_021ff6_jump:
		mov    $_021d38_func,%eax
		call   _03eb48_func
		cmpb   $0x000000,_0c3372_data
		je     _02200e_jump
		call   _071f70_func

	_02200e_jump:
		call   _03ead0_func
		mov    _0c1078_data,%al
		xor    %edx,%edx
		mov    %al,_0c2f46_data
		mov    %edx,_0c1078_data
		mov    _0c3140_data,%edx
		mov    _0c3150_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _021ca0_func
		test   %ebx,%ebx
		je     _02204b_jump
		xor    %eax,%eax
		mov    _0c33a0_data,%al
		call   _03f9fc_func

	_02204b_jump:
		call   _03eaf8_func
		call   _03ed58_func
		mov    $_0c1068_data,%eax
		call   _085140_func

	_02205f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022070_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    %dx,(%esp)

	_02207f_jump:
		xor    %esi,%esi

	_022081_jump:
		mov    $0x000040,%eax
		movswl %si,%edi
		sub    %edi,%eax
		imul   %eax,%eax
		mov    -0x000002(%esp),%ebp
		mov    $0x000040,%edx
		sar    $0x000010,%ebp
		sub    %ebp,%edx
		imul   %edx,%edx
		add    %edx,%eax
		call   _085498_func
		call   _086442_func
		call   _0864a8_func
		mov    $0xbca1af28,%ebx
		mov    $0x3fbaf286,%ecx
		and    $0x0000ff,%eax
		shl    $0x000007,%ebp
		call   _0854a5_func
		call   _085695_func
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		call   _086762_func
		call   _0854de_func
		mov    $0x40440000,%ecx
		xor    %ebx,%ebx
		inc    %esi
		call   _085695_func
		call   _0864a8_func
		mov    %al,_0cff7c_data(%edi,%ebp,1)
		cmp    $0x000080,%si
		jl     _022081_jump
		mov    (%esp),%ebx
		inc    %ebx
		mov    %bx,(%esp)
		cmp    $0x000080,%bx
		jl     _02207f_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02211c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %al,%ch
		cmpb   $0x000000,_0c3387_data
		jne    _022135_jump
		movb   $0x00004a,_0d427c_data
		jmp    _02213c_jump

	_022135_jump:
		movb   $0x000070,_0d427c_data

	_02213c_jump:
		movzbl _0d427c_data,%edi
		xor    %eax,%eax

	_022145_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%edx
		add    %edi,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    _0a9eee_data(%edx),%cl
		mov    %cl,_0b4328_data(%ebx)
		mov    _0a9eed_data(%edx),%cl
		mov    _0a9eec_data(%edx),%dl
		mov    %cl,_0b4329_data(%ebx)
		inc    %eax
		mov    %dl,_0b432a_data(%ebx)
		cmp    $0x000010,%ax
		jl     _022145_jump
		test   %ch,%ch
		je     _0221a1_jump
		lea    0x00000f(%edi),%ecx
		mov    $_0b4328_data,%esi
		mov    %edi,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_0221a1_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0221a8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %ebx,%edi
		mov    %cx,0x00000c(%esp)
		mov    %esp,%ebp
		mov    _0c0f78_data,%ebx
		movswl %dx,%edx
		movswl %ax,%ecx
		lea    0x000000(,%edx,4),%eax
		add    %ebx,%ecx
		add    %edx,%eax
		mov    0x000030(%esp),%bl
		shl    $0x000006,%eax
		mov    %bl,(%esp)
		mov    0x000038(%esp),%bl
		lea    (%ecx,%eax,1),%edx
		mov    $0x000140,%eax
		mov    %bl,0x000001(%esp)
		mov    0x000040(%esp),%bl
		sub    %edi,%eax
		mov    %bl,0x000002(%esp)
		mov    0x000048(%esp),%bl
		mov    %eax,0x000014(%esp)
		mov    %bl,0x000003(%esp)
		xor    %ebx,%ebx
		lea    0x000004(%esp),%eax
		mov    %ebx,0x000010(%esp)
		jmp    _02231c_jump

	_02220d_jump:
		mov    0x000000(%ebp),%esi
		add    $0x1010101,%esi
		mov    %esi,%ebx
		mov    %esi,0x000000(%ebp)
		and    $0x7f7f7f7f,%ebx
		mov    %ebx,0x000000(%ebp)
		mov    0x00002c(%esp),%bl
		mov    %bl,0x000004(%esp)
		mov    0x000034(%esp),%bl
		mov    %bl,0x000005(%esp)
		mov    0x00003c(%esp),%bl
		mov    %bl,0x000006(%esp)
		mov    0x000044(%esp),%bl
		mov    %bl,0x000007(%esp)
		xor    %ebx,%ebx
		jmp    _0222fa_jump

	_02224b_jump:
		mov    (%eax),%ecx
		add    $0x1010101,%ecx
		mov    %ecx,%esi
		mov    %ecx,(%eax)
		and    $0x7f7f7f7f,%esi
		xor    %ecx,%ecx
		mov    %esi,(%eax)
		mov    (%esp),%cl
		movzbl 0x000004(%esp),%esi
		shl    $0x000007,%ecx
		mov    _0cff7c_data(%ecx,%esi,1),%cl
		mov    0x00004c(%esp),%ch
		add    %ch,%cl
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		mov    0x000001(%esp),%cl
		movzbl 0x000005(%esp),%esi
		shl    $0x000007,%ecx
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		mov    _0cff7c_data(%esi),%ch
		add    %ch,%cl
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		mov    0x000002(%esp),%cl
		mov    %ecx,%esi
		xor    %ecx,%ecx
		shl    $0x000007,%esi
		mov    0x000006(%esp),%cl
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		add    _0cff7c_data(%esi),%cl
		movzbl 0x000003(%esp),%esi
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		shl    $0x000007,%esi
		mov    0x000007(%esp),%cl
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		add    _0cff7c_data(%esi),%cl
		mov    %ecx,%esi
		xor    %ecx,%ecx
		and    $0x0000ff,%esi
		mov    _0d427c_data,%cl
		sar    $0x000004,%esi
		add    %ecx,%esi
		mov    %esi,0x000008(%esp)
		inc    %edx
		mov    0x000008(%esp),%cl
		inc    %ebx
		mov    %cl,-0x000001(%edx)

	_0222fa_jump:
		xor    %esi,%esi
		movswl %di,%ecx
		mov    %bx,%si
		cmp    %ecx,%esi
		jl     _02224b_jump
		mov    0x000010(%esp),%esi
		xor    %ecx,%ecx
		inc    %esi
		mov    0x000014(%esp),%cx
		mov    %esi,0x000010(%esp)
		add    %ecx,%edx

	_02231c_jump:
		xor    %ecx,%ecx
		mov    0x00000a(%esp),%esi
		mov    0x000010(%esp),%cx
		sar    $0x000010,%esi
		cmp    %esi,%ecx
		jl     _02220d_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000024



_02233c_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		cmpb   $0x000000,0x00000c(%esp)
		je     _022469_jump
		incw   _0a9f1c_data
		subw   $0x000002,_0a9f1e_data
		incw   _0a9f20_data
		subw   $0x000002,_0a9f22_data
		addw   $0x000003,_0a9f24_data
		subw   $0x000002,_0a9f26_data
		incw   _0a9f28_data
		subw   $0x000003,_0a9f2a_data
		mov    _0a9f2c_data,%di
		mov    _0a9f1a_data,%eax
		add    $0x000005,%edi
		sar    $0x000010,%eax
		mov    %di,_0a9f2c_data
		call   _062710_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0d4288_data
		mov    _0a9f1c_data,%eax
		sar    $0x000010,%eax
		call   _0626d0_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0d4286_data
		mov    _0a9f1e_data,%eax
		sar    $0x000010,%eax
		call   _0626d0_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0d428c_data
		mov    _0a9f20_data,%eax
		sar    $0x000010,%eax
		call   _062710_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0d428a_data
		mov    _0a9f22_data,%eax
		sar    $0x000010,%eax
		call   _0626d0_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0d4284_data
		mov    _0a9f24_data,%eax
		sar    $0x000010,%eax
		call   _062710_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0d4282_data
		mov    _0a9f26_data,%eax
		sar    $0x000010,%eax
		call   _0626d0_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0d4280_data
		mov    _0a9f28_data,%eax
		sar    $0x000010,%eax
		call   _062710_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0d427e_data

	_022469_jump:
		sub    $0x000003,%esi
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		test   %si,%si
		jge    _022480_jump
		add    %esi,%ebx
		xor    %esi,%esi
		jmp    _022496_jump

	_022480_jump:
		movswl %si,%eax
		movswl %bx,%edi
		add    %edi,%eax
		cmp    $0x000140,%eax
		jle    _022496_jump
		mov    $0x000140,%ebx
		sub    %esi,%ebx

	_022496_jump:
		test   %dx,%dx
		jge    _0224a1_jump
		xor    %edx,%edx
		add    %esi,%ecx
		jmp    _0224b7_jump

	_0224a1_jump:
		movswl %dx,%edi
		movswl %cx,%eax
		add    %edi,%eax
		cmp    $0x000140,%eax
		jle    _0224b7_jump
		mov    $0x0000c8,%ecx
		sub    %edx,%ecx

	_0224b7_jump:
		mov    _0a9f2a_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0d427c_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0d427e_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0d4280_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0d4282_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0d4284_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0d4286_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0d4288_data,%eax
		sar    $0x000010,%eax
		movswl %cx,%ecx
		push   %eax
		mov    _0d428a_data,%eax
		movswl %bx,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		push   %eax
		movswl %si,%eax
		call   _0221a8_func
		pop    %edi
		pop    %esi
		ret    $0x000004



_022520_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    $0x000001,%eax
		call   _06a9d8_func
		cmpb   $0x000000,_0c3387_data
		jne    _022544_jump
		movb   $0x00004a,_0d427c_data
		jmp    _02254b_jump

	_022544_jump:
		movb   $0x000070,_0d427c_data

	_02254b_jump:
		xor    %eax,%eax

	_02254d_jump:
		movswl %ax,%edx
		lea    (%edx,%edx,2),%ebx
		movzbl _0a9f2e_data(%ebx),%edi
		sar    $0x000002,%edi
		mov    %edi,(%esp)
		movzbl _0d427c_data,%edi
		add    %edi,%edx
		lea    (%edx,%edx,2),%edx
		mov    (%esp),%cl
		mov    %cl,_0b4328_data(%edx)
		xor    %ecx,%ecx
		mov    _0a9f30_data(%ebx),%cl
		sar    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%cl
		mov    _0a9f2f_data(%ebx),%bl
		mov    %cl,_0b4329_data(%edx)
		and    $0x0000ff,%ebx
		sar    $0x000002,%ebx
		inc    %eax
		mov    %bl,_0b432a_data(%edx)
		cmp    $0x000010,%ax
		jl     _02254d_jump
		lea    0x00000f(%edi),%ecx
		mov    $_0b4328_data,%esi
		mov    %edi,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		xor    %esi,%esi

	_0225cc_jump:
		xor    %eax,%eax

	_0225ce_jump:
		movswl %si,%edx
		imul   $0x0001e0,%edx,%ebx
		xor    %ecx,%ecx
		mov    _0d427c_data,%cl
		movswl %ax,%edx
		inc    %eax
		mov    %cx,_0c43fc_data(%ebx,%edx,2)
		cmp    $0x0000f0,%ax
		jl     _0225ce_jump
		inc    %esi
		cmp    $0x000064,%si
		jl     _0225cc_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022604_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %cx,0x00000c(%esp)
		mov    _0c0f78_data,%esi
		cwtl   
		movswl %dx,%ecx
		add    %eax,%esi
		lea    0x000000(,%ecx,4),%eax
		xor    %edi,%edi
		add    %ecx,%eax
		xor    %edx,%edx
		shl    $0x000006,%eax
		mov    _0d427c_data,%dl
		add    %eax,%esi
		xor    %eax,%eax
		mov    %esi,0x000008(%esp)
		call   _06a9d8_func
		test   %bx,%bx
		jle    _022697_jump

	_022643_jump:
		mov    $0x00000a,%eax
		call   _06a9a0_func
		cmp    $0x000005,%ax
		jge    _02266a_jump
		mov    $0x000001,%eax
		call   _06a9a0_func
		imul   $0x00000f,%eax,%eax
		xor    %edx,%edx
		mov    _0d427c_data,%dl
		add    %eax,%edx

	_02266a_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0001e0,%eax,%esi
		inc    %eax
		imul   $0x0001e0,%eax,%eax
		movswl %di,%ecx
		mov    %dx,_0c43fc_data(%esi,%ecx,2)
		inc    %edi
		mov    %dx,_0c43fc_data(%eax,%ecx,2)
		cmp    %bx,%di
		jl     _022643_jump

	_022697_jump:
		mov    $0x000001,%edi
		jmp    _022804_jump

	_0226a1_jump:
		xor    %edx,%edx
		test   %bx,%bx
		jle    _022803_jump

	_0226ac_jump:
		test   %dx,%dx
		jne    _022722_jump
		movswl %di,%eax
		lea    -0x000001(%eax),%ecx
		imul   $0x0001e0,%ecx,%ecx
		mov    %ecx,0x000004(%esp)
		movswl %bx,%ecx
		mov    0x000004(%esp),%esi
		add    %ecx,%ecx
		add    %esi,%ecx
		imul   $0x0001e0,%eax,%esi
		inc    %eax
		imul   $0x0001e0,%eax,%eax
		mov    _0c43f8_data(%ecx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,(%esp)
		movswl %dx,%ecx
		add    %ecx,%ecx
		mov    _0c43fa_data(%ecx,%esi,1),%ebp
		sar    $0x000010,%ebp
		mov    _0c43fc_data(%ecx,%esi,1),%esi
		sar    $0x000010,%esi
		add    (%esp),%ebp
		mov    _0c43fa_data(%ecx,%eax,1),%eax
		add    %ebp,%esi
		sar    $0x000010,%eax
		add    %esi,%eax
		add    0x000004(%esp),%ecx
		sar    $0x000002,%eax
		mov    %ax,_0c43fc_data(%ecx)
		jmp    _0227f9_jump

	_022722_jump:
		movswl %bx,%eax
		movswl %dx,%ecx
		lea    -0x000001(%eax),%esi
		lea    0x000000(,%ecx,2),%eax
		cmp    %esi,%ecx
		jne    _02279d_jump
		movswl %di,%ecx
		imul   $0x0001e0,%ecx,%esi
		mov    _0c43f8_data(%esi,%eax,1),%ebp
		mov    _0c43fa_data(%esi,%eax,1),%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		lea    0x000001(%ecx),%esi
		imul   $0x0001e0,%esi,%esi
		dec    %ecx
		imul   $0x0001e0,%ecx,%ecx
		mov    %ebp,(%esp)
		mov    _0c43fa_data(%esi),%ebp
		sar    $0x000010,%ebp
		mov    _0c43fa_data(%esi,%eax,1),%esi
		mov    %ebp,0x000004(%esp)
		mov    (%esp),%ebp
		sar    $0x000010,%esi
		add    0x000004(%esp),%ebp
		add    %ebp,%esi
		sar    $0x000002,%esi
		mov    %esi,0x000004(%esp)
		mov    0x000004(%esp),%esi
		mov    %si,_0c43fc_data(%ecx,%eax,1)
		jmp    _0227f9_jump

	_02279d_jump:
		movswl %di,%esi
		imul   $0x0001e0,%esi,%ecx
		mov    _0c43f8_data(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,(%esp)
		mov    _0c43fa_data(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    _0c43fc_data(%ecx,%eax,1),%ecx
		add    (%esp),%ebp
		sar    $0x000010,%ecx
		add    %ecx,%ebp
		lea    0x000001(%esi),%ecx
		imul   $0x0001e0,%ecx,%ecx
		dec    %esi
		imul   $0x0001e0,%esi,%esi
		mov    _0c43fa_data(%ecx,%eax,1),%ecx
		sar    $0x000010,%ecx
		add    %ebp,%ecx
		sar    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%ecx
		mov    %cx,_0c43fc_data(%esi,%eax,1)

	_0227f9_jump:
		inc    %edx
		cmp    %bx,%dx
		jl     _0226ac_jump

	_022803_jump:
		inc    %edi

	_022804_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		movswl %di,%ecx
		add    $0x000002,%eax
		cmp    %eax,%ecx
		jl     _0226a1_jump
		mov    0x00000c(%esp),%edx
		xor    %edi,%edi
		test   %dx,%dx
		jle    _02286f_jump

	_022824_jump:
		xor    %eax,%eax
		test   %bx,%bx
		jle    _022851_jump

	_02282b_jump:
		movswl %di,%ecx
		imul   $0x0001e0,%ecx,%ecx
		movswl %ax,%esi
		mov    _0c43fc_data(%ecx,%esi,2),%dl
		mov    0x000008(%esp),%ecx
		mov    %dl,(%ecx)
		lea    0x000001(%ecx),%edx
		inc    %eax
		mov    %edx,0x000008(%esp)
		cmp    %bx,%ax
		jl     _02282b_jump

	_022851_jump:
		mov    $0x000140,%ecx
		movswl %bx,%eax
		mov    0x000008(%esp),%ebp
		sub    %eax,%ecx
		inc    %edi
		add    %ecx,%ebp
		mov    0x00000c(%esp),%ecx
		mov    %ebp,0x000008(%esp)
		cmp    %cx,%di
		jl     _022824_jump

	_02286f_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_022878_func:
		push   %esi
		push   %edi
		sub    $0x000003,%eax
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		test   %ax,%ax
		jge    _022891_jump
		add    %eax,%ebx
		xor    %eax,%eax
		jmp    _0228a8_jump

	_022891_jump:
		movswl %ax,%edi
		movswl %bx,%esi
		add    %edi,%esi
		cmp    $0x000140,%esi
		jle    _0228a8_jump
		mov    $0x000140,%ebx
		sub    %eax,%ebx

	_0228a8_jump:
		test   %dx,%dx
		jge    _0228b3_jump
		xor    %edx,%edx
		add    %eax,%ecx
		jmp    _0228ca_jump

	_0228b3_jump:
		movswl %dx,%edi
		movswl %cx,%esi
		add    %edi,%esi
		cmp    $0x000140,%esi
		jle    _0228ca_jump
		mov    $0x0000c8,%ecx
		sub    %edx,%ecx

	_0228ca_jump:
		movswl %cx,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		cwtl   
		call   _022604_func
		pop    %edi
		pop    %esi
		ret    



_0228dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c33d3_data,%ch
		xor    %eax,%eax

	_0228e7_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		imul   $0x000300,%edx,%ebx
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		mov    _0b4328_data(%edx,%ebx,1),%cl
		mov    %cl,_0d3f7c_data(%edx)
		mov    _0b4329_data(%edx,%ebx,1),%cl
		mov    _0b432a_data(%edx,%ebx,1),%bl
		mov    %cl,_0d3f7d_data(%edx)
		inc    %eax
		mov    %bl,_0d3f7e_data(%edx)
		cmp    $0x000050,%ax
		jl     _0228e7_jump
		mov    $0x000046,%eax
		mov    %al,%dl
		add    %al,%dl
		mov    %dl,%bl
		sub    $0x00008c,%bl
		mov    %dl,%bh
		neg    %bh
		add    $0x00000a,%bh

	_02293a_jump:
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		xor    %cl,%cl
		mov    %bh,_0d3f7c_data(%edx)
		inc    %eax
		mov    %bl,_0d3f7d_data(%edx)
		add    $0x000002,%bl
		mov    %cl,_0d3f7e_data(%edx)
		sub    $0x000002,%bh
		cmp    $0x000066,%ax
		jl     _02293a_jump
		mov    $0x000066,%eax

	_022966_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		imul   $0x000300,%edx,%ebx
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		mov    _0b4328_data(%edx,%ebx,1),%cl
		mov    %cl,_0d3f7c_data(%edx)
		mov    _0b4329_data(%edx,%ebx,1),%cl
		mov    _0b432a_data(%edx,%ebx,1),%bl
		mov    %cl,_0d3f7d_data(%edx)
		inc    %eax
		mov    %bl,_0d3f7e_data(%edx)
		cmp    $0x000070,%ax
		jl     _022966_jump
		mov    $0x000070,%eax

	_0229a9_jump:
		movswl %ax,%ebx
		lea    -0x000070(%ebx),%edx
		lea    (%edx,%edx,2),%edx
		lea    (%ebx,%ebx,2),%ebx
		mov    _0a9eee_data(%edx),%cl
		mov    %cl,_0d3f7c_data(%ebx)
		mov    _0a9eed_data(%edx),%cl
		mov    _0a9eec_data(%edx),%dl
		mov    %cl,_0d3f7d_data(%ebx)
		inc    %eax
		mov    %dl,_0d3f7e_data(%ebx)
		cmp    $0x000080,%ax
		jl     _0229a9_jump
		mov    $0x000080,%eax
		mov    %al,%dl
		sub    $0x000080,%dl

	_0229ea_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    %dl,_0d3f7c_data(%ebx)
		mov    %dl,_0d3f7d_data(%ebx)
		inc    %eax
		mov    %dl,_0d3f7e_data(%ebx)
		inc    %dl
		cmp    $0x0000c0,%ax
		jl     _0229ea_jump
		mov    $0x0000c0,%eax
		xor    %cl,%cl

	_022a12_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%edx
		mov    %cl,_0d3f7c_data(%edx)
		mov    %cl,_0d3f7d_data(%edx)
		lea    -0x0000c0(%ebx),%edx
		cmp    $0x000003,%edx
		jg     _022a34_jump
		mov    $0x000003,%edx

	_022a34_jump:
		mov    %dl,%bl
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		inc    %eax
		mov    %bl,_0d3f7e_data(%edx)
		cmp    $0x000100,%ax
		jl     _022a12_jump
		cmpb   $0x000000,_0c33a9_data
		je     _022a82_jump
		mov    $0x000010,%ah
		mov    $0x00000e,%dl
		mov    $0x000031,%bl
		mov    $0x00002d,%cl
		mov    %ah,_0d3fdc_data
		mov    %dl,_0d3fdd_data
		mov    %bl,_0d3fee_data
		mov    %cl,_0d3ff0_data
		mov    $0x00000d,%dh
		mov    $0x00002f,%bh
		mov    %dh,_0d3fde_data
		mov    %bh,_0d3fef_data

	_022a82_jump:
		mov    %ch,_0c33d3_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022a8c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    %dl,0x000008(%esp)
		cmpb   $0x000001,_0a7c9c_data
		jne    _022b47_jump
		xor    %ebx,%ebx
		mov    %bx,0x000004(%esp)
		mov    $0x000003,%ebp

	_022ab4_jump:
		mov    (%esp),%esi
		mov    0x000004(%esp),%ah
		xor    %ebx,%ebx
		mov    _0c0f44_data,%edx
		mov    0x000004(%esp),%bx
		xor    %ecx,%ecx
		add    %edx,%ebx
		mov    $0x0003ce,%edx
		mov    $0x000004,%al
		out    %ax,(%dx)

	_022ad5_jump:
		mov    0x000008(%esp),%dh
		mov    (%esi),%al
		test   %dh,%dh
		je     _022b20_jump
		movzbl _0c33d3_data,%edi
		imul   $0x000300,%edi,%edi
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		add    %edi,%edx
		xor    %eax,%eax
		mov    _0b4329_data(%edx),%al
		movzbl _0b4328_data(%edx),%edi
		mov    _0b432a_data(%edx),%dl
		add    %edi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		add    $0x000080,%eax

	_022b20_jump:
		mov    %al,(%ebx)
		inc    %ecx
		add    $0x000004,%ebx
		inc    %esi
		cmp    $0x003e80,%cx
		jb     _022ad5_jump
		mov    0x000004(%esp),%edx
		inc    %edx
		mov    %dx,0x000004(%esp)
		cmp    $0x000004,%dx
		jae    _022bcf_jump
		jmp    _022ab4_jump

	_022b47_jump:
		mov    (%esp),%esi
		mov    _0c0f44_data,%edi
		test   %dl,%dl
		je     _022bba_jump
		xor    %edx,%edx
		mov    %dx,0x000004(%esp)

	_022b5b_jump:
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		imul   $0x000300,%edx,%edx
		mov    (%esi),%al
		and    $0x0000ff,%eax
		lea    (%eax,%eax,2),%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0b4328_data(%eax),%bl
		mov    _0b4329_data(%eax),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0b432a_data(%eax),%dl
		add    %ebx,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000004(%esp),%ecx
		inc    %edi
		inc    %esi
		inc    %ecx
		add    $0x000080,%eax
		mov    %cx,0x000004(%esp)
		mov    %al,-0x000001(%edi)
		cmp    $0x00fa00,%cx
		jae    _022bcf_jump
		jmp    _022b5b_jump

	_022bba_jump:
		mov    $0x00fa00,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_022bcf_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_022bd8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x000008(%esp)
		mov    %dx,0x000004(%esp)
		mov    %ecx,%esi
		xor    %ah,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000008(%esp),%edx
		add    %eax,%edx
		mov    %ebx,%eax
		mov    %dx,0x000008(%esp)
		xor    %bh,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		add    %edx,%ebx
		mov    $0x000140,%edx
		movswl %bx,%eax
		mov    0x000006(%esp),%ecx
		sub    %eax,%edx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		add    _0c0f78_data,%ecx
		mov    0x000002(%esp),%edx
		sar    $0x000002,%eax
		sar    $0x000010,%edx
		mov    %ax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %bx,(%esp)
		shl    $0x000006,%eax
		sar    $0x000002,%bx
		add    %ecx,%eax
		xor    %ecx,%ecx
		test   %si,%si
		jle    _022c8e_jump

	_022c56_jump:
		xor    %edx,%edx
		test   %bx,%bx
		jle    _022c7c_jump

	_022c5d_jump:
		mov    (%eax),%edi
		test   %edi,%edi
		je     _022c6d_jump
		lea    0x40404040(%edi),%ebp
		mov    %ebp,(%eax)
		jmp    _022c73_jump

	_022c6d_jump:
		movl   $0xc8c8c8c8,(%eax)

	_022c73_jump:
		inc    %edx
		add    $0x000004,%eax
		cmp    %bx,%dx
		jl     _022c5d_jump

	_022c7c_jump:
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000002,%edx
		inc    %ecx
		add    %edx,%eax
		cmp    %si,%cx
		jl     _022c56_jump

	_022c8e_jump:
		mov    -0x000002(%esp),%edx
		mov    0x000002(%esp),%ebx
		mov    $0x002026,%eax
		mov    _0c0f78_data,%edi
		movswl %si,%ecx
		mov    0x000006(%esp),%esi
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _01689c_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_022cc0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%esi
		cmpb   $0x000000,0x00001c(%esp)
		je     _022cd8_jump
		movw   $0x002026,0x000008(%esp)
		jmp    _022cdf_jump

	_022cd8_jump:
		movw   $0x002620,0x000008(%esp)

	_022cdf_jump:
		movswl %bx,%edi
		movswl %si,%esi
		movswl %ax,%ebp
		mov    %edi,(%esp)
		mov    %esi,%ebx
		movswl %cx,%edi
		mov    %ebp,%eax
		mov    %edi,0x000004(%esp)
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    _0c0f78_data,%edi
		call   _0167d0_func
		mov    0x000006(%esp),%eax
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    _0c0f78_data,%edi
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    %ebp,%esi
		call   _01689c_func
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_022d30_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c33d3_data,%bh
		cmpb   $0x000000,_0c3387_data
		je     _022d87_jump
		cmpb   $0x000000,_0a7cd3_data
		jne    _022d87_jump
		xor    %al,%al
		mov    $0x00003f,%ah

	_022d4f_jump:
		mov    %al,%bl
		xor    %edx,%edx
		add    %al,%bl
		mov    %bh,%dl
		imul   $0x000300,%edx,%ecx
		xor    %edx,%edx
		mov    %al,%dl
		add    $0x000046,%edx
		lea    (%edx,%edx,2),%edx
		mov    %ah,_0b4328_data(%ecx,%edx,1)
		mov    %bl,_0b4329_data(%ecx,%edx,1)
		sub    $0x000002,%ah
		xor    %bl,%bl
		inc    %al
		mov    %bl,_0b432a_data(%ecx,%edx,1)
		cmp    $0x000020,%al
		jb     _022d4f_jump

	_022d87_jump:
		mov    %bh,_0c33d3_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022d94_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    0x000030(%esp),%edi
		mov    %eax,%esi
		mov    %dx,0x00000c(%esp)
		mov    %bx,0x000010(%esp)
		mov    %cx,0x000018(%esp)
		mov    0x00002c(%esp),%ecx
		mov    0x000034(%esp),%edx
		mov    _0c0f78_data,%ebp
		cwtl   
		add    %eax,%ebp
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		inc    %eax
		lea    0x000000(,%eax,4),%ebx
		add    %eax,%ebx
		inc    %ebp
		shl    $0x000006,%ebx
		add    %ebx,%ebp
		cmp    %di,%dx
		jle    _022de0_jump
		mov    %edi,%edx
		jmp    _022de9_jump

	_022de0_jump:
		cmp    %cx,%dx
		jge    _022de9_jump
		xor    %edx,%edx
		jmp    _022deb_jump

	_022de9_jump:
		sub    %ecx,%edx

	_022deb_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000008,%ebx
		sar    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _022e00_jump
		mov    %ebx,%eax

	_022e00_jump:
		mov    0x000010(%esp),%ebx
		sub    %eax,%ebx
		mov    %ax,0x000008(%esp)
		mov    %ebx,%eax
		sub    $0x000003,%eax
		movswl %dx,%edx
		cwtl   
		imul   %eax,%edx
		movswl %di,%ebx
		movswl %cx,%eax
		sub    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000016(%esp),%ecx
		mov    _0c0f78_data,%edi
		sar    $0x000010,%ecx
		movswl %si,%edx
		mov    0x00000a(%esp),%ebx
		inc    %edx
		sar    $0x000010,%ebx
		movswl %si,%esi
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		mov    %ax,0x000014(%esp)
		mov    $0x002026,%eax
		sar    $0x000010,%edx
		call   _01689c_func
		xor    %dh,%dh
		xor    %ah,%ah
		jmp    _022ea2_jump

	_022e5f_jump:
		xor    %dl,%dl
		xor    %al,%al
		jmp    _022e81_jump

	_022e65_jump:
		mov    %ah,%cl
		add    $0x000046,%cl
		mov    %cl,0x000000(%ebp)
		xor    %ecx,%ecx
		sar    $0x000005,%ebx
		mov    %al,%cl
		cmp    %ebx,%ecx
		jle    _022e7c_jump
		xor    %al,%al
		inc    %ah

	_022e7c_jump:
		inc    %dl
		inc    %ebp
		inc    %al

	_022e81_jump:
		mov    0x00000e(%esp),%ecx
		sar    $0x000010,%ecx
		movzbl %dl,%esi
		lea    -0x000002(%ecx),%ebx
		cmp    %ebx,%esi
		jl     _022e65_jump
		mov    $0x000140,%ebx
		sub    %ecx,%ebx
		inc    %dh
		add    $0x000002,%ebx
		xor    %ah,%ah
		add    %ebx,%ebp

	_022ea2_jump:
		mov    0x000016(%esp),%esi
		xor    %ebx,%ebx
		sar    $0x000010,%esi
		mov    %dh,%bl
		lea    -0x000002(%esi),%ecx
		cmp    %ecx,%ebx
		jl     _022e5f_jump
		mov    0x000006(%esp),%eax
		mov    _0c0f78_data,%edi
		lea    -0x000003(%esi),%ebp
		sar    $0x000010,%eax
		mov    0x000012(%esp),%esi
		mov    %eax,0x000004(%esp)
		mov    0x00000a(%esp),%eax
		mov    %ebp,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		inc    %eax
		mov    0x000004(%esp),%edx
		mov    %eax,(%esp)
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _0167d0_func
		mov    $0x000308,%eax
		mov    0x000004(%esp),%edx
		mov    (%esp),%ebx
		mov    _0c0f78_data,%edi
		mov    %ebp,%ecx
		call   _01689c_func
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_022f0c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %ax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		mov    _0c0f78_data,%ecx
		add    %ebx,%eax
		mov    _0c0f78_data,%ebp
		shl    $0x000006,%eax
		xor    %edx,%edx
		mov    %eax,%ebx
		add    %eax,%ecx
		mov    %ebp,%eax
		call   _085360_func
		mov    -0x000002(%esp),%ebx
		mov    $0x0000c8,%ebp
		sar    $0x000010,%ebx
		sub    %ebx,%ebp
		lea    0x000000(,%ebp,4),%eax
		add    %eax,%ebp
		lea    0x000000(,%ebx,4),%eax
		mov    _0c0f78_data,%edx
		add    %ebx,%eax
		shl    $0x000006,%ebp
		shl    $0x000006,%eax
		mov    %ebp,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _085360_func
		mov    0x000004(%esp),%edx
		cmp    (%esp),%dx
		jge    _022fc4_jump
		movswl %si,%ebx

	_022f8f_jump:
		xor    %eax,%eax
		test   %si,%si
		jle    _022fa0_jump

	_022f96_jump:
		inc    %eax
		movb   $0x000000,(%ecx)
		inc    %ecx
		cmp    %si,%ax
		jl     _022f96_jump

	_022fa0_jump:
		movswl %di,%eax
		sub    %ebx,%eax
		add    %eax,%ecx
		mov    %edi,%eax
		cmp    $0x000140,%di
		jge    _022fbb_jump

	_022fb0_jump:
		inc    %eax
		movb   $0x000000,(%ecx)
		inc    %ecx
		cmp    $0x000140,%ax
		jl     _022fb0_jump

	_022fbb_jump:
		mov    (%esp),%eax
		inc    %edx
		cmp    %ax,%dx
		jl     _022f8f_jump

	_022fc4_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_022fd0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		cmpw   $0x000000,_0c30ce_data
		je     _023009_jump
		movswl %si,%eax
		sar    $0x000004,%eax
		push   $0x000010
		shl    $0x000004,%eax
		push   $0x000010
		cwtl   
		push   %eax
		movswl %di,%eax
		sar    $0x000004,%eax
		shl    $0x000004,%eax
		xor    %ecx,%ecx
		cwtl   
		xor    %ebx,%ebx
		push   %eax
		xor    %edx,%edx
		xor    %eax,%eax
		call   _027cc0_func

	_023009_jump:
		movswl %si,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		cmp    $0x00000f,%al
		sete   %al
		xor    %ah,%ah
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02302c_func:
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		movswl %ax,%esi
		movswl %bx,%edx
		movswl %cx,%eax
		call   *_0aeef8_data(,%esi,4)
		sub    %ebx,%eax
		pop    %esi
		pop    %ecx
		ret    



_023048_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		cwtl   
		call   _02302c_func
		test   %ax,%ax
		jg     _023060_jump
		mov    %ecx,%eax
		pop    %ecx
		ret    

	_023060_jump:
		xor    %eax,%eax
		pop    %ecx
		ret    

_023064_switch:
		.long   _0231b1_case
		.long   _0231b1_case
		.long   _0231c1_case
		.long   _0231d4_case
		.long   _0231e7_case
		.long   _0231e7_case
		.long   _0231fe_case
		.long   _0231fe_case
		.long   _0231b1_case
		.long   _02320d_case
		.long   _0231b1_case
		.long   _0231b1_case
		.long   _0232e7_case
		.long   _0231b1_case
		.long   _02320d_case
		.long   _02320d_case
		.long   _0231b1_case
		.long   _0232e7_case
		.long   _0231c1_case
		.long   _0231d4_case
		.long   _0231e7_case
		.long   _0231e7_case
		.long   _0231fe_case
		.long   _0231fe_case
		.long   _0231b1_case
		.long   _0231b1_case
		.long   _0232e7_case
		.long   _0232e7_case
		.long   _0232e7_case
		.long   _0232e7_case
		.long   _02320d_case




_0230e0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%ebx
		mov    %dl,0x000018(%esp)
		xor    %edx,%edx
		mov    %edx,(%esp)
		mov    0x000064(%eax),%dx
		xor    %edi,%edi
		cmp    $0x000017,%dx
		jne    _02315f_jump
		testb  $0x000002,_0c3348_data
		je     _02315f_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    0x000018(%esp),%al
		xor    %edx,%edx
		test   %ax,%ax
		js     _02311c_jump
		sar    %cl,%ax
		jmp    _023125_jump

	_02311c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_023125_jump:
		mov    _0b9369_data,%dl
		mov    _0b9304_data,%esi
		shl    $0x000002,%edx
		add    %esi,%edx
		movzbl _0b9368_data,%esi
		mov    (%edx),%edx
		mov    0x000007(%edx,%esi,8),%cl
		mov    %al,0x000018(%esp)
		test   $0x000040,%cl
		jne    _02315f_jump
		test   %al,%al
		je     _023156_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    _02315b_jump

	_023156_jump:
		mov    $0x000001,%edx

	_02315b_jump:
		mov    %dl,0x000018(%esp)

	_02315f_jump:
		xor    %eax,%eax
		mov    0x000028(%ebx),%dx
		mov    0x00006c(%ebx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000014(%esp)
		mov    0x00006d(%ebx),%al
		mov    0x00002c(%ebx),%dx
		add    %eax,%edx
		mov    %dx,0x000010(%esp)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		cmp    $0x00001e,%al
		ja     _0232e7_case
		and    $0x0000ff,%eax
		jmp    *%cs:_023064_switch(,%eax,4)

	_0231b1_case:
		mov    $0x000008,%eax
		sub    0x000042(%ebx),%ax
		add    %eax,%edi
		jmp    _0232e7_case

	_0231c1_case:
		cmpw   $0x000000,0x000040(%ebx)
		jl     _0232e7_case
		add    $0x000011,%edi
		jmp    _0232e7_case

	_0231d4_case:
		cmpw   $0x000000,0x000040(%ebx)
		jg     _0232e7_case
		add    $0x000011,%edi
		jmp    _0232e7_case

	_0231e7_case:
		cmpw   $0x000000,0x000040(%ebx)
		jl     _0231f6_jump
		add    $0x000011,%edi
		jmp    _0232e7_case

	_0231f6_jump:
		add    $0x000002,%edi
		jmp    _0232e7_case

	_0231fe_case:
		cmpw   $0x000000,0x000040(%ebx)
		jg     _0231f6_jump
		add    $0x000011,%edi
		jmp    _0232e7_case

	_02320d_case:
		mov    0x000066(%ebx),%al
		cmp    $0x000002,%al
		jb     _023223_jump
		cmp    $0x000003,%al
		jbe    _023220_jump
		cmp    $0x000012,%al
		jb     _023223_jump
		cmp    $0x000013,%al
		ja     _023223_jump

	_023220_jump:
		add    $0x000008,%edi

	_023223_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		cmp    $0x00000c,%al
		jb     _023288_jump
		jbe    _0232e1_jump
		cmp    $0x000013,%al
		jb     _023270_jump
		jbe    _0232b5_jump
		cmp    $0x000016,%al
		jb     _0232c1_jump
		cmp    $0x000017,%al
		jbe    _0232d1_jump
		cmp    $0x000019,%al
		jbe    _0232a4_jump
		jmp    _0232e4_jump

	_023270_jump:
		cmp    $0x000010,%al
		jb     _02327f_jump
		jbe    _0232a4_jump
		cmp    $0x000012,%al
		je     _0232a9_jump
		jmp    _0232e4_jump

	_02327f_jump:
		cmp    $0x00000d,%al
		je     _0232a4_jump
		jmp    _0232e4_jump

	_023288_jump:
		cmp    $0x000004,%al
		jb     _02329c_jump
		cmp    $0x000005,%al
		jbe    _0232c1_jump
		cmp    $0x000008,%al
		jb     _0232d1_jump
		jbe    _0232a4_jump
		cmp    $0x00000a,%al
		jb     _0232e4_jump
		jmp    _0232a4_jump

	_02329c_jump:
		cmp    $0x000002,%al
		jb     _0232a4_jump
		jbe    _0232a9_jump
		jmp    _0232b5_jump

	_0232a4_jump:
		add    $0x000009,%edi
		jmp    _0232e7_case

	_0232a9_jump:
		cmpw   $0x000000,0x000040(%ebx)
		jl     _0232e7_case
		add    $0x000019,%edi
		jmp    _0232e7_case

	_0232b5_jump:
		cmpw   $0x000000,0x000040(%ebx)
		jg     _0232e7_case
		add    $0x000019,%edi
		jmp    _0232e7_case

	_0232c1_jump:
		cmpw   $0x000000,0x000040(%ebx)
		jl     _0231f6_jump
		add    $0x000011,%edi
		jmp    _0232e7_case

	_0232d1_jump:
		cmpw   $0x000000,0x000040(%ebx)
		jg     _0231f6_jump
		add    $0x000011,%edi
		jmp    _0232e7_case

	_0232e1_jump:
		inc    %edi
		jmp    _0232e7_case

	_0232e4_jump:
		add    $0x000008,%edi

	_0232e7_case:
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %ax,%ax
		js     _0232f5_jump
		sar    %cl,%ax
		jmp    _0232fe_jump

	_0232f5_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0232fe_jump:
		mov    0x000018(%esp),%ch
		sub    %al,%ch
		mov    %ch,0x000018(%esp)
		cmp    $0x000080,%ch
		jbe    _023313_jump
		xor    %ah,%ah
		mov    %ah,0x000018(%esp)

	_023313_jump:
		mov    $0x000004,%cl
		mov    0x000014(%esp),%eax
		mov    0x000010(%esp),%edx
		test   %ax,%ax
		js     _023327_jump
		sar    %cl,%ax
		jmp    _023330_jump

	_023327_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_023330_jump:
		xor    %esi,%esi
		xor    %bl,%bl
		sub    %edi,%edx
		mov    $0x000004,%cl
		mov    %edx,%eax
		mov    %bl,0x00001c(%esp)
		test   %ax,%ax
		js     _023348_jump
		sar    %cl,%ax
		jmp    _023351_jump

	_023348_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_023351_jump:
		mov    0x000014(%esp),%eax
		mov    %edx,0x000008(%esp)
		sub    $0x000005,%eax
		mov    %edx,0x000004(%esp)
		mov    %eax,0x00000c(%esp)
		mov    $0x00000a,%ebp
		jmp    _023444_jump

	_02336e_jump:
		cmpw   $0x000000,_0c30ce_data
		je     _02341a_jump
		mov    0x00000e(%esp),%ebx
		movswl %di,%edx
		sar    $0x000010,%ebx
		sub    %esi,%eax
		sub    %edx,%ebx
		shl    $0x000004,%eax
		mov    %ebx,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x000004,%eax
		push   $0x000010
		shl    $0x000004,%eax
		push   $0x000010
		cwtl   
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000004,%eax
		shl    $0x000004,%eax
		xor    %ecx,%ecx
		cwtl   
		xor    %ebx,%ebx
		push   %eax
		xor    %edx,%edx
		xor    %eax,%eax
		call   _027cc0_func
		mov    0x000004(%esp),%eax
		sub    _0c3166_data,%ax
		mov    _0c3162_data,%cx
		movswl %ax,%edx
		mov    0x00000c(%esp),%eax
		sub    %ecx,%eax
		mov    %ebp,%ebx
		add    $0x000008,%eax
		mov    $0x000014,%ecx
		cwtl   
		call   _03e160_func
		mov    0x000010(%esp),%eax
		sub    _0c3166_data,%ax
		sub    %edi,%eax
		sub    $0x000005,%eax
		mov    _0c3162_data,%bx
		movswl %ax,%edx
		mov    0x000014(%esp),%eax
		sub    %ebx,%eax
		mov    $0x000014,%ecx
		add    $0x000008,%eax
		mov    %ebp,%ebx
		cwtl   
		call   _03e1b8_func

	_02341a_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		sub    %esi,%eax
		mov    0x000008(%esp),%edx
		shl    $0x000004,%eax
		sub    %eax,%edx
		mov    0x000012(%esp),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		call   _022fd0_func
		test   %ax,%ax
		je     _023443_jump
		incb   0x00001c(%esp)

	_023443_jump:
		inc    %esi

	_023444_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmp    %eax,%esi
		jle    _02336e_jump
		cmpb   $0x000000,0x00001c(%esp)
		je     _023460_jump
		movl   $0x00000f,(%esp)

	_023460_jump:
		mov    (%esp),%al
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02346c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _023489_jump
		mov    $0x000001,%eax
		jg     _023489_jump
		neg    %eax

	_023489_jump:
		mov    %eax,%ecx
		test   %ax,%ax
		je     _023603_jump
		cmpw   $0x000017,0x000064(%esi)
		jne    _0234cc_jump
		mov    _0c3348_data,%ah
		mov    $0x000004,%dh
		test   $0x000002,%ah
		je     _0234b1_jump
		mov    $0x000008,%eax
		mov    $0x000002,%dh
		jmp    _0234b6_jump

	_0234b1_jump:
		mov    $0x00000e,%eax

	_0234b6_jump:
		mov    _0b9346_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _0234d1_jump
		xor    %ebx,%ebx
		mov    %dh,%bl
		sub    %ebx,%eax
		jmp    _0234d1_jump

	_0234cc_jump:
		mov    $0x00000e,%eax

	_0234d1_jump:
		test   %cx,%cx
		jge    _0234d8_jump
		neg    %eax

	_0234d8_jump:
		test   %dl,%dl
		je     _0234de_jump
		neg    %eax

	_0234de_jump:
		cwtl   
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    0x000028(%esi),%di
		mov    %ebx,0x000028(%esi)
		test   %dl,%dl
		jne    _02351e_jump
		xor    %edx,%edx
		mov    0x000064(%esi),%dx
		mov    _0a529e_data(,%edx,4),%bl
		mov    0x000040(%esi),%ax
		test   $0x000010,%bl
		je     _02351a_jump
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _023511_jump
		sar    %cl,%ax
		jmp    _02351a_jump

	_023511_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02351a_jump:
		cwtl   
		sub    %eax,0x000028(%esi)

	_02351e_jump:
		testb  $0x000020,0x000085(%esi)
		je     _023547_jump
		lea    0x000010(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		jmp    _02354d_jump

	_023547_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x000008(%esp)

	_02354d_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000078(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		sub    %eax,%edx
		mov    $0x000004,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _02356d_jump
		sar    %cl,%ax
		jmp    _023576_jump

	_02356d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_023576_jump:
		mov    0x000064(%esi),%bx
		mov    %eax,%edx
		cmp    $0x000017,%bx
		jne    _0235ce_jump
		xor    %ebx,%ebx
		mov    _0b9369_data,%bl
		mov    _0b9304_data,%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    _0b9368_data,%bl
		mov    %ecx,(%esp)
		lea    0x000000(,%ebx,8),%ecx
		mov    (%esp),%ebx
		mov    (%ebx),%ebx
		testb  $0x000040,0x000007(%ecx,%ebx,1)
		je     _0235ce_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    %dl,%al
		test   %ax,%ax
		js     _0235c3_jump
		sar    %cl,%ax
		jmp    _0235cc_jump

	_0235c3_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0235cc_jump:
		jmp    _0235e0_jump

	_0235ce_jump:
		mov    0x000064(%esi),%cx
		cmp    $0x00003c,%cx
		je     _0235de_jump
		cmp    $0x00003d,%cx
		jne    _0235e0_jump

	_0235de_jump:
		dec    %al

	_0235e0_jump:
		test   %al,%al
		je     _0235e6_jump
		dec    %al

	_0235e6_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _0230e0_func
		mov    %al,%dl
		movswl %di,%eax
		mov    %eax,0x000028(%esi)
		mov    %dl,%al
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_023603_jump:
		xor    %dl,%dl
		mov    %dl,%al
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_023610_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000066(%ecx),%al
		testb  $0x000002,_0a525d_data(%eax)
		jne    _023958_jump
		mov    0x000064(%ecx),%ax
		cmp    $0x000028,%ax
		jb     _023682_jump
		jbe    _0238bf_jump
		cmp    $0x00007a,%ax
		jb     _023663_jump
		jbe    _0238bf_jump
		cmp    $0x0000a5,%ax
		jb     _02393a_jump
		jbe    _0238ac_jump
		cmp    $0x0000ac,%ax
		je     _02391b_jump
		jmp    _02393a_jump

	_023663_jump:
		cmp    $0x000041,%ax
		jb     _02393a_jump
		jbe    _0238e7_jump
		cmp    $0x000064,%ax
		je     _0238dc_jump
		jmp    _02393a_jump

	_023682_jump:
		cmp    $0x000003,%ax
		jb     _0236a9_jump
		jbe    _023859_jump
		cmp    $0x000009,%ax
		jb     _02393a_jump
		jbe    _0238ac_jump
		cmp    $0x000017,%ax
		je     _0236b7_jump
		jmp    _02393a_jump

	_0236a9_jump:
		test   %ax,%ax
		je     _023878_jump
		jmp    _02393a_jump

	_0236b7_jump:
		call   _06abfc_func
		cmpb   $0x00000c,_0c33cd_data
		je     _02393a_jump
		cmpb   $0x00000c,_0c33d1_data
		je     _02393a_jump
		cmpb   $0x00000c,_0c33d0_data
		je     _02393a_jump
		cmpb   $0x000005,_0b9369_data
		je     _02393a_jump
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0b9368_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _02373b_jump
		xor    %edx,%edx
		mov    _0b9330_data,%bx
		mov    %dx,_0b933a_data
		mov    _0b9324_data,%edx
		add    $0x000010,%ebx
		add    $0x000010,%edx
		mov    %bx,_0b9330_data
		mov    %edx,_0b9324_data

	_02373b_jump:
		cmpb   $0x000000,_0c33ab_data
		je     _023774_jump
		cmpb   $0x000000,_0b9369_data
		jne    _023765_jump
		cmpb   $0x000028,_0b9368_data
		jne    _023765_jump
		mov    $0x00001a,%ebx
		mov    $0x000002,%edx
		jmp    _02381b_jump

	_023765_jump:
		mov    $0x00001c,%ebx
		mov    $0x000002,%edx
		jmp    _02381b_jump

	_023774_jump:
		cmpb   $0x000001,_0b9369_data
		jne    _0237b3_jump
		mov    _0b9368_data,%ah
		cmp    $0x000009,%ah
		je     _02378d_jump
		cmp    $0x00000b,%ah
		jne    _0237b3_jump

	_02378d_jump:
		mov    _0b937d_data,%dh
		test   $0x000008,%dh
		sete   %al
		mov    %dh,%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,_0b937d_data
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,_0b937d_data

	_0237b3_jump:
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0237c1_jump
		neg    %eax

	_0237c1_jump:
		cmp    $0x000002,%eax
		jg     _023807_jump
		xor    %eax,%eax
		call   _06b680_func
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0b9368_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _0237fb_jump
		mov    $0x000018,%ebx
		mov    $0x000002,%edx
		jmp    _02381b_jump

	_0237fb_jump:
		mov    $0x000021,%ebx
		mov    $0x000002,%edx
		jmp    _02381b_jump

	_023807_jump:
		mov    $0x000001,%eax
		mov    $0x000020,%ebx
		mov    $0x000002,%edx
		call   _06b680_func

	_02381b_jump:
		mov    %ecx,%eax
		call   _01dea8_func
		xor    %esi,%esi
		mov    _0c33c4_data,%ah
		mov    %si,_0c3140_data
		test   %ah,%ah
		je     _02383f_jump
		cmpw   $0x000000,_0c3138_data
		je     _02384d_jump

	_02383f_jump:
		movw   $0x000001,_0b9340_data
		jmp    _02393a_jump

	_02384d_jump:
		mov    %si,_0b9340_data
		jmp    _02393a_jump

	_023859_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		jmp    _023935_jump

	_023878_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01dea0_func
		cmpb   $0x000002,0x000070(%ecx)
		je     _02389b_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01de98_func
		jmp    _02393a_jump

	_02389b_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01de98_func
		jmp    _02393a_jump

	_0238ac_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01dea8_func
		jmp    _02393a_jump

	_0238bf_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _065368_func
		movb   $0x000007,0x000076(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _02393a_jump

	_0238dc_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		jmp    _023935_jump

	_0238e7_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movb   $0x0000ff,0x000080(%ecx)
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _065368_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _02393a_jump

	_02391b_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01dea8_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx

	_023935_jump:
		call   _065368_func

	_02393a_jump:
		movw   $0x000000,0x000052(%ecx)
		mov    0x000064(%ecx),%bx
		movb   $0x000000,0x000075(%ecx)
		cmp    $0x000028,%bx
		je     _023958_jump
		cmp    $0x00007a,%bx
		je     _023958_jump
		movb   $0x000000,0x000076(%ecx)

	_023958_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023960_func:
		push   %ecx
		push   %edx
		xor    %dl,%dl
		cmpb   $0x000009,0x000066(%eax)
		jne    _02398e_jump
		cmpw   $0x000000,0x000042(%eax)
		jl     _02398e_jump
		mov    0x000064(%eax),%cx
		cmp    $0x000017,%cx
		je     _02398c_jump
		mov    %ecx,%eax
		and    $0x00ffff,%eax
		testb  $0x000008,_0a529f_data(,%eax,4)
		je     _02398e_jump

	_02398c_jump:
		mov    $0x000001,%dl

	_02398e_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ecx
		ret    



_023994_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    0x000066(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000009,%dl
		jne    _023a25_jump
		cmpw   $0x000000,0x000042(%eax)
		jl     _023a25_jump
		mov    0x000064(%eax),%bx
		cmp    $0x000017,%bx
		jne    _023a0f_jump
		mov    $0x000001,%cl
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %cl,_0c33ce_data
		call   _01dea8_func
		call   _06b944_func
		mov    $0xffffffff,%edx
		mov    $0x0000f9,%eax
		mov    $0x00000c,%esi
		call   _071068_func
		mov    _0b933a_data,%di
		mov    $_0b92f8_data,%eax
		sub    $0x000003,%edi
		mov    %si,_0c3140_data
		mov    %di,_0b933a_data
		call   _07e020_func
		jmp    _023a25_jump

	_023a0f_jump:
		xor    %edx,%edx
		mov    %bx,%dx
		testb  $0x000008,_0a529f_data(,%edx,4)
		je     _023a25_jump
		call   _02bb88_func
		mov    $0x000001,%cl

	_023a25_jump:
		mov    %cl,%al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_023a30_switch:
		.long   _023c6c_case
		.long   _023c6c_case
		.long   _023c22_case
		.long   _023c2e_case
		.long   _023c35_case
		.long   _023c46_case
		.long   _023c57_case
		.long   _023c60_case
		.long   _023c6c_case
		.long   _023bd2_case
		.long   _023c6c_case
		.long   _023c6c_case
		.long   _023cc4_case
		.long   _023c6c_case
		.long   _023bd2_case
		.long   _023bd2_case
		.long   _023c6c_case
		.long   _023c6c_case
		.long   _023c22_case
		.long   _023c2e_case
		.long   _023c35_case
		.long   _023c46_case
		.long   _023c57_case
		.long   _023c60_case
		.long   _023c6c_case
		.long   _023c6c_case
		.long   _023c6c_case
		.long   _023c6c_case
		.long   _023c6c_case
		.long   _023c6c_case
		.long   _023bd2_case




_023aac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000064(%ecx),%ax
		testb  $0x000001,_0a529f_data(,%eax,4)
		jne    _023ad1_jump
		cmp    $0x000017,%ax
		jne    _023daf_jump

	_023ad1_jump:
		xor    %eax,%eax
		mov    0x000064(%ecx),%ax
		testb  $0x000010,_0a529e_data(,%eax,4)
		je     _023af6_jump
		cmp    $0x000017,%ax
		je     _023af6_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _05a4ac_func
		mov    %eax,%edi
		jmp    _023afa_jump

	_023af6_jump:
		mov    0x000040(%ecx),%di

	_023afa_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x00006c(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000008(%esp)
		mov    0x00006d(%ecx),%al
		mov    0x00002c(%ecx),%dx
		mov    0x000064(%ecx),%si
		add    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    %dx,0x000010(%esp)
		mov    %edx,%ebx
		xor    %ah,%ah
		xor    %dh,%bh
		and    $0x00000f,%al
		and    $0x00000f,%bl
		add    %edi,%eax
		cmp    $0x000017,%si
		jne    _023b6d_jump
		mov    _0b9346_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _023b6d_jump
		test   %di,%di
		jle    _023b4f_jump
		mov    $0x00000f,%eax
		jmp    _023b53_jump

	_023b4f_jump:
		jge    _023b53_jump
		xor    %eax,%eax

	_023b53_jump:
		xor    %edx,%edx
		mov    0x000066(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0aecf8_data(%esi)
		mov    %eax,%ebx
		jmp    _023b83_jump

	_023b6d_jump:
		xor    %edx,%edx
		mov    0x000066(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0aecf8_data(%esi)

	_023b83_jump:
		sub    %ebx,%eax
		mov    0x000010(%esp),%ebx
		add    %eax,%ebx
		mov    %ax,0x00000c(%esp)
		movswl %bx,%eax
		mov    0x000008(%esp),%esi
		sar    $0x000004,%eax
		add    %edi,%esi
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		mov    %eax,(%esp)
		xor    %bh,%bh
		mov    (%esp),%eax
		and    $0x00000f,%bl
		cwtl   
		and    $0x00000f,%esi
		call   _01ea94_func
		mov    %al,0x000014(%esp)
		cmp    $0x00001e,%al
		ja     _023c6c_case
		and    $0x0000ff,%eax
		jmp    *%cs:_023a30_switch(,%eax,4)

	_023bd2_case:
		mov    0x00000e(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sub    $0x000010,%eax
		mov    0x000006(%esp),%ebp
		sar    $0x000004,%eax
		sar    $0x000010,%ebp
		movswl %ax,%edx
		movswl %di,%eax
		add    %ebp,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%edi
		movswl %bx,%edx
		movswl %si,%eax
		call   *_0aedf8_data(%edi)
		mov    %ebx,%edx
		sub    $0x000010,%edx
		jmp    _023cca_jump

	_023c22_case:
		mov    $0x00000f,%edx
		sub    %esi,%edx
		jmp    _023ccc_jump

	_023c2e_case:
		mov    %esi,%edx
		jmp    _023ccc_jump

	_023c35_case:
		movswl %si,%eax
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _023ccc_jump

	_023c46_case:
		movswl %si,%eax
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _023ccc_jump

	_023c57_case:
		movswl %si,%eax
		sar    %eax
		mov    %eax,%edx
		jmp    _023ccc_jump

	_023c60_case:
		movswl %si,%eax
		sar    %eax
		add    $0x000008,%eax
		mov    %eax,%edx
		jmp    _023ccc_jump

	_023c6c_case:
		mov    0x000010(%esp),%eax
		mov    0x00000c(%esp),%esi
		mov    0x000008(%esp),%edx
		add    %esi,%eax
		add    %edx,%edi
		add    $0x000010,%eax
		mov    %edi,%edx
		mov    %eax,%esi
		xor    %dh,%dh
		cwtl   
		and    $0x00000f,%dl
		sar    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		movswl %ax,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%esi
		cwtl   
		sub    $0x000010,%esi
		call   _01ea94_func
		movzbl %al,%edi
		mov    0x000002(%esp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   *_0aeef8_data(,%edi,4)
		sub    %esi,%eax
		cmp    $0x000002,%ax
		jle    _023cc8_jump

	_023cc4_case:
		mov    %ebx,%edx
		jmp    _023ccc_jump

	_023cc8_jump:
		mov    %ebx,%edx

	_023cca_jump:
		add    %eax,%edx

	_023ccc_jump:
		mov    %ecx,%eax
		call   _023994_func
		test   %al,%al
		jne    _023daf_jump
		mov    0x000064(%ecx),%di
		cmp    $0x000017,%di
		jne    _023d9c_jump
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _023d5c_jump
		cmpb   $0x000002,_0b9369_data
		setne  %al
		and    $0x0000ff,%eax
		je     _023d5c_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _023d13_jump
		neg    %eax

	_023d13_jump:
		cmp    $0x000002,%eax
		jle    _023d5c_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _023d24_jump
		neg    %eax

	_023d24_jump:
		cmp    $0x000010,%eax
		jge    _023d5c_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		testb  $0x000002,_0a525d_data(%eax)
		jne    _023d5c_jump
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000042(%ecx),%si
		call   _01dea8_func
		movb   $0x000001,_0c33ce_data
		call   _06b944_func
		mov    %si,0x000042(%ecx)
		jmp    _023daf_jump

	_023d5c_jump:
		cmpb   $0x000003,_0b9369_data
		jne    _023d6e_jump
		cmpb   $0x000020,_0b9368_data
		je     _023d75_jump

	_023d6e_jump:
		mov    $0x000001,%eax
		jmp    _023d77_jump

	_023d75_jump:
		xor    %eax,%eax

	_023d77_jump:
		test   %eax,%eax
		je     _023daf_jump
		cmpb   $0x000003,_0b9369_data
		jne    _023d8d_jump
		cmpb   $0x000016,_0b9368_data
		je     _023d94_jump

	_023d8d_jump:
		mov    $0x000001,%eax
		jmp    _023d96_jump

	_023d94_jump:
		xor    %eax,%eax

	_023d96_jump:
		test   %eax,%eax
		je     _023daf_jump
		jmp    _023d9e_jump

	_023d9c_jump:
		je     _023daf_jump

	_023d9e_jump:
		add    0x00000c(%esp),%edx
		sub    %ebx,%edx
		mov    %ecx,%eax
		mov    %dx,0x000042(%ecx)
		call   _023610_func

	_023daf_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023dbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		mov    0x000028(%ebx),%dx
		mov    0x00002c(%ebx),%si
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%cl
		mov    0x00006c(%ebx),%al
		add    %esi,%ecx
		add    %edx,%eax
		mov    %ecx,%esi
		mov    %eax,%edi
		movswl %cx,%edx
		and    $0x00fff0,%esi
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		and    $0x00000f,%edi
		call   _01ea94_func
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%ebp
		xor    %edx,%edx
		movswl %di,%eax
		call   *_0aebf8_data(%ebp)
		cmpw   $0x000017,0x000064(%ebx)
		je     _023e2a_jump
		movswl %si,%edx
		cwtl   
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%ebx)
		jmp    _023e32_jump

	_023e2a_jump:
		add    %esi,%eax
		sub    %ecx,%eax
		mov    %ax,0x000042(%ebx)

	_023e32_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023e3c_func:
		mov    %edx,%eax
		inc    %eax
		ret    



_023e40_func:
		mov    $0x00000f,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		lea    0x000000(%eax),%eax

	_023e4c_jump:
		ret    



_023e50_func:
		cwtl   
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_023e60_func:
		cwtl   
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_023e70_func:
		cwtl   
		sar    %eax
		ret    



_023e74_func:
		cwtl   
		sar    %eax
		add    $0x000008,%eax
		ret    

	_023e7c_jump:
		mov    %edx,%eax
		ret    

	_023e80_jump:
		xor    %eax,%eax
		ret    



_023e84_func:
		mov    $0x000010,%eax
		ret    

_023e8c_switch:
		.long   _0240a7_case
		.long   _0240a7_case
		.long   _023f38_case
		.long   _023f65_case
		.long   _023f92_case
		.long   _023fc3_case
		.long   _023ff9_case
		.long   _02402f_case
		.long   _0240a7_case
		.long   _024071_case
		.long   _0240a7_case
		.long   _0240a7_case
		.long   _024060_case
		.long   _0240a7_case
		.long   _024071_case
		.long   _024071_case
		.long   _0240a7_case
		.long   _0240a7_case
		.long   _023f38_case
		.long   _023f65_case
		.long   _023f92_case
		.long   _023fc3_case
		.long   _023ff9_case
		.long   _02402f_case
		.long   _0240a7_case
		.long   _0240a7_case
		.long   _0240a7_case
		.long   _0240a7_case
		.long   _0240a7_case
		.long   _0240a7_case
		.long   _024071_case




_023f08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_023e40_func,%esi
		mov    $_023e4c_jump,%edi
		mov    $_023e50_func,%ecx
		xor    %al,%al
		mov    $_023e74_func,%ebx

	_023f24_jump:
		cmp    $0x00001e,%al
		ja     _0240a7_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_023e8c_switch(,%edx,4)

	_023f38_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,_0aecf8_data(,%edx,4)
		mov    %esi,_0aedf8_data(,%edx,4)
		mov    %esi,_0aeef8_data(,%edx,4)
		mov    %esi,_0aebf8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _023f24_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023f65_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edi,_0aecf8_data(,%edx,4)
		mov    %edi,_0aedf8_data(,%edx,4)
		mov    %edi,_0aeef8_data(,%edx,4)
		mov    %edi,_0aebf8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _023f24_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023f92_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ecx,_0aecf8_data(,%edx,4)
		mov    %ecx,_0aedf8_data(,%edx,4)
		mov    %ecx,_0aeef8_data(,%edx,4)
		mov    %ecx,_0aebf8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _023f24_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023fc3_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_023e60_func,%ebp
		mov    %ebp,_0aecf8_data(,%edx,4)
		mov    %ebp,_0aedf8_data(,%edx,4)
		mov    %ebp,_0aeef8_data(,%edx,4)
		mov    %ebp,_0aebf8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _023f24_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023ff9_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_023e70_func,%ebp
		mov    %ebp,_0aecf8_data(,%edx,4)
		mov    %ebp,_0aedf8_data(,%edx,4)
		mov    %ebp,_0aeef8_data(,%edx,4)
		mov    %ebp,_0aebf8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _023f24_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02402f_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,_0aecf8_data(,%edx,4)
		mov    %ebx,_0aedf8_data(,%edx,4)
		mov    %ebx,_0aeef8_data(,%edx,4)
		mov    %ebx,_0aebf8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _023f24_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_024060_case:
		xor    %edx,%edx
		mov    %al,%dl
		movl   $_023e7c_jump,_0aecf8_data(,%edx,4)
		jmp    _0240b6_jump

	_024071_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_023e80_jump,%ebp
		mov    %ebp,_0aecf8_data(,%edx,4)
		mov    %ebp,_0aedf8_data(,%edx,4)
		mov    %ebp,_0aeef8_data(,%edx,4)
		mov    %ebp,_0aebf8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _023f24_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0240a7_case:
		xor    %edx,%edx
		mov    %al,%dl
		movl   $_023e3c_func,_0aecf8_data(,%edx,4)

	_0240b6_jump:
		movl   $_023e84_func,_0aedf8_data(,%edx,4)
		movl   $_023e7c_jump,_0aeef8_data(,%edx,4)
		movl   $_023e80_jump,_0aebf8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _023f24_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0240f0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		mov    %eax,%ecx
		mov    _0d4290_data,%eax
		mov    %eax,0x000010(%esp)
		call   _011c5b_func
		mov    0x000010(%esp),%eax
		movw   $0x000000,0x000006(%eax)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _024122_jump
		mov    %ebx,%eax

	_024122_jump:
		mov    0x000010(%esp),%ebx
		mov    %ax,0x000008(%ebx)
		test   %dx,%dx
		jl     _02413f_jump
		mov    $0x000001,%eax
		movswl %dx,%ebx
		cmp    %ebx,%eax
		jge    _02413d_jump
		mov    %ebx,%eax

	_02413d_jump:
		jmp    _024151_jump

	_02413f_jump:
		movswl %dx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _02414f_jump
		mov    %ebx,%eax

	_02414f_jump:
		neg    %eax

	_024151_jump:
		mov    0x000010(%esp),%edx
		mov    %ax,0x00000a(%edx)
		xor    %eax,%eax
		mov    $0x000046,%ebx
		mov    %cx,%ax
		cmp    %ebx,%eax
		jle    _024169_jump
		mov    %ebx,%eax

	_024169_jump:
		mov    %eax,%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jge    _024176_jump
		mov    %ebx,%eax

	_024176_jump:
		mov    %al,0x00000c(%edx)
		xor    %eax,%eax
		mov    0x000001(%edx),%al
		call   _0854a5_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x400921fb,%edx
		call   _0867d0_func
		mov    %edx,0x000014(%esp)
		mov    0x000010(%esp),%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%edx),%al
		call   _0854a5_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x401921fb,%edx
		call   _0867d0_func
		mov    $0xbff921fb,%ebx
		mov    %eax,0x000020(%esp)
		mov    0x000010(%esp),%eax
		mov    %edx,0x000008(%esp)
		mov    $0x54524550,%edx
		mov    0x000020(%eax),%eax
		mov    %ebx,0x00001c(%esp)
		mov    %eax,0x000018(%esp)
		xor    %ah,%ah
		mov    %edx,0x000004(%esp)
		mov    %ah,0x000034(%esp)

	_0241e8_jump:
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    0x00000c(%edx),%al
		call   _0854a5_func
		mov    %eax,%edi
		mov    %edx,%esi
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		call   _086762_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _085695_func
		mov    %eax,0x000024(%esp)
		mov    %edx,0x00002c(%esp)
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		call   _086789_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _085695_func
		mov    %eax,0x000028(%esp)
		mov    %edx,0x000030(%esp)
		xor    %edi,%edi
		xor    %bh,%bh
		xor    %esi,%esi
		mov    %bh,0x000040(%esp)

	_024248_jump:
		mov    0x000028(%esp),%eax
		mov    0x000030(%esp),%edx
		call   _0869d6_func
		mov    %eax,0x00000c(%esp)
		mov    %edx,%ebp
		mov    %edi,%eax
		mov    %esi,%edx
		call   _086762_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		call   _085695_func
		call   _0864a4_func
		mov    0x000018(%esp),%edx
		mov    %ax,(%edx)
		mov    0x000024(%esp),%eax
		mov    0x00002c(%esp),%edx
		call   _0864a4_func
		mov    0x000018(%esp),%edx
		mov    %ax,0x000002(%edx)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _086789_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		call   _085695_func
		call   _0864a4_func
		mov    0x000018(%esp),%edx
		mov    0x000020(%esp),%ebx
		lea    0x00000a(%edx),%ecx
		mov    %ax,0x000004(%edx)
		mov    %ecx,0x000018(%esp)
		mov    %edi,%eax
		mov    %esi,%edx
		mov    0x000008(%esp),%ecx
		call   _0854de_func
		mov    %eax,%edi
		mov    0x000040(%esp),%al
		mov    %edx,%esi
		inc    %al
		mov    0x000010(%esp),%edx
		mov    %al,0x000040(%esp)
		cmp    (%edx),%al
		jbe    _024248_jump
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    (%esp),%ebx
		mov    0x000014(%esp),%ecx
		call   _0854de_func
		mov    %edx,0x00001c(%esp)
		mov    0x000034(%esp),%dl
		inc    %dl
		mov    %eax,0x000004(%esp)
		mov    %dl,0x000034(%esp)
		mov    %dl,%al
		mov    0x000010(%esp),%edx
		cmp    0x000001(%edx),%al
		jbe    _0241e8_jump
		mov    0x000010(%esp),%eax
		mov    0x000010(%esp),%ebx
		xor    %ecx,%ecx
		mov    0x000002(%eax),%dx
		mov    0x000024(%ebx),%ebx
		test   %dx,%dx
		jbe    _024380_jump

	_024336_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%esi
		mov    %cx,%dx
		movzbl (%esi),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ecx,%edx
		add    %eax,%edx
		mov    %edx,%eax
		mov    %dx,(%ebx)
		inc    %edx
		mov    0x000010(%esp),%esi
		mov    %dx,0x000002(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %eax,%edx
		add    $0x000002,%edx
		mov    %dx,0x000004(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %edx,%eax
		inc    %eax
		mov    %ax,0x000006(%ebx)
		inc    %ecx
		mov    0x000002(%esi),%si
		add    $0x000034,%ebx
		cmp    %si,%cx
		jb     _024336_jump

	_024380_jump:
		mov    0x000010(%esp),%eax
		mov    _0d4292_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0d4294_data,%edx
		mov    %al,0x00003c(%esp)
		xor    %ebx,%ebx
		mov    0x000010(%esp),%eax
		sar    $0x000010,%edx
		mov    0x000001(%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %cl,%cl
		mov    0x000010(%esp),%edx
		mov    %al,%bh
		mov    0x000010(%esp),%eax
		mov    %cl,0x000038(%esp)
		mov    0x000001(%edx),%ch
		mov    0x000024(%eax),%eax
		test   %ch,%ch
		jbe    _02447f_jump

	_0243d3_jump:
		mov    0x000010(%esp),%edx
		mov    (%edx),%cl
		xor    %bl,%bl
		test   %cl,%cl
		jbe    _024468_jump

	_0243e3_jump:
		xor    %dh,%dh
		xor    %ch,%ch
		mov    0x00003c(%esp),%dl
		mov    %bl,%cl
		imul   %ecx,%edx
		movzbw 0x000038(%esp),%si
		mov    %bh,%cl
		imul   %esi,%ecx
		cmpw   $0x000100,_0d4294_data
		jg     _02440f_jump
		mov    0x000010(%esp),%esi
		mov    0x000018(%esi),%esi
		jmp    _02442c_jump

	_02440f_jump:
		cmp    $0x0000a0,%dx
		jae    _02441f_jump
		mov    0x000010(%esp),%esi
		mov    0x000018(%esi),%esi
		jmp    _02442c_jump

	_02441f_jump:
		mov    0x000010(%esp),%esi
		mov    0x00001c(%esi),%esi
		sub    $0x0000a0,%edx

	_02442c_jump:
		mov    %esi,0x000008(%eax)
		mov    %dl,0x00002e(%eax)
		mov    %dl,0x00002c(%eax)
		mov    %cl,%dh
		mov    %cl,0x000033(%eax)
		add    %bh,%dh
		mov    %cl,0x00002d(%eax)
		dec    %dh
		mov    %dh,0x000031(%eax)
		mov    0x00003c(%esp),%ch
		mov    %dh,0x00002f(%eax)
		add    %ch,%dl
		dec    %dl
		mov    %dl,0x000032(%eax)
		mov    %dl,0x000030(%eax)
		mov    0x000010(%esp),%edx
		inc    %bl
		mov    (%edx),%cl
		add    $0x000034,%eax
		cmp    %cl,%bl
		jb     _0243e3_jump

	_024468_jump:
		mov    0x000038(%esp),%dl
		inc    %dl
		mov    0x000010(%esp),%ecx
		mov    %dl,0x000038(%esp)
		cmp    0x000001(%ecx),%dl
		jb     _0243d3_jump

	_02447f_jump:
		mov    0x000010(%esp),%eax
		movb   $0x000001,0x00000d(%eax)
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_024490_case:
		push   %edx
		mov    _0d4290_data,%edx
		test   %edx,%edx
		je     _0244ca_jump
		cmpl   $0x000000,0x000020(%edx)
		je     _0244a9_jump
		lea    0x000020(%edx),%eax
		call   _0852ac_func

	_0244a9_jump:
		cmpl   $0x000000,0x000024(%edx)
		je     _0244b7_jump
		lea    0x000024(%edx),%eax
		call   _0852ac_func

	_0244b7_jump:
		cmpl   $0x000000,_0d4290_data
		je     _0244ca_jump
		mov    $_0d4290_data,%eax
		call   _0852ac_func

	_0244ca_jump:
		pop    %edx
		ret    



_0244cc_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    %edx,%edi
		mov    %ebx,0x000008(%esp)
		mov    %cx,0x000004(%esp)
		mov    $0x000100,%edx
		mov    $0x0000c8,%ebx
		mov    $0x000020,%eax
		xor    %cl,%cl
		mov    %dx,_0d4294_data
		xor    %edx,%edx
		mov    %bx,_0d4296_data
		mov    %dx,_0d429a_data
		mov    0x00001c(%esp),%edx
		mov    %ax,_0d4298_data
		test   %edx,%edx
		je     _0245f2_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _0245f2_jump
		mov    $0x00003c,%eax
		call   _085294_func
		mov    %eax,%edx
		mov    %eax,_0d4290_data
		test   %eax,%eax
		je     _0245f2_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    (%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _024550_jump
		mov    %ebx,%eax

	_024550_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _024562_jump
		mov    %ebx,%eax

	_024562_jump:
		mov    %al,0x000001(%edx)
		mov    (%esp),%eax
		imul   %edi,%eax
		mov    %ax,0x000002(%edx)
		mov    (%esp),%eax
		inc    %edi
		inc    %eax
		imul   %edi,%eax
		mov    %ax,0x000004(%edx)
		mov    0x00001c(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx)
		mov    0x000020(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000014(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		call   _085294_func
		mov    %eax,0x000024(%edx)
		test   %eax,%eax
		je     _0245f2_jump
		xor    %ebx,%ebx
		mov    0x000004(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		call   _085294_func
		mov    %eax,0x000020(%edx)
		test   %eax,%eax
		je     _0245f2_jump
		mov    _0c0f44_data,%eax
		mov    _0d4294_data,%bx
		mov    %eax,0x000018(%edx)
		cmp    $0x000100,%bx
		jg     _0245e8_jump
		movl   $0x000000,0x00001c(%edx)
		jmp    _0245f0_jump

	_0245e8_jump:
		add    $0x00c800,%eax
		mov    %eax,0x00001c(%edx)

	_0245f0_jump:
		mov    $0x000001,%cl

	_0245f2_jump:
		test   %cl,%cl
		je     _024683_jump
		cmpw   $0x000100,_0d4294_data
		jg     _02463a_jump
		mov    _0d4298_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		shl    $0x000006,%eax
		mov    0x000010(%esi),%ebx
		mov    _0d4292_data,%edi
		add    %ebx,%eax
		mov    _0d4296_data,%ebx
		mov    0x000018(%esi),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edi
		add    %ebx,%eax
		mov    %edi,%ebx
		jmp    _02465a_jump

	_02463a_jump:
		mov    $0x0000a0,%ebx
		mov    0x000018(%esi),%edx
		mov    0x000010(%esi),%eax
		call   _080240_func
		mov    $0x0000a0,%ebx
		mov    0x000010(%esi),%eax
		mov    0x00001c(%esi),%edx
		add    $0x0000a0,%eax

	_02465a_jump:
		call   _080240_func
		mov    0x000002(%esp),%edx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000018(%esp),%bx
		mov    0x000008(%esp),%ax
		sar    $0x000010,%edx
		call   _0240f0_func
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_024683_jump:
		call   _024490_case
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_024694_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    _0d4290_data,%esi
		mov    0x00000d(%esi),%ah
		mov    0x000020(%esi),%ecx
		cmp    $0x000001,%ah
		jne    _024836_jump
		cmpw   $0x000000,0x00000a(%esi)
		jl     _0246c5_jump
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		mov    %eax,0x00000c(%esp)
		jmp    _0246d7_jump

	_0246c5_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%dx
		mov    0x000006(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x00000c(%esp)

	_0246d7_jump:
		mov    _0d4292_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0d4294_data,%edx
		mov    %al,0x000038(%esp)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000001(%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %al,0x000024(%esp)
		mov    _0d4298_data,%eax
		sar    $0x000010,%eax
		xor    %bl,%bl
		sub    $0x000064,%eax
		mov    %bl,0x000034(%esp)
		mov    %eax,0x000010(%esp)

	_02471d_jump:
		mov    _0d4296_data,%ebp
		xor    %dl,%dl
		sar    $0x000010,%ebp
		mov    %dl,0x000030(%esp)
		sub    $0x0000a0,%ebp

	_024732_jump:
		mov    0x000002(%ecx),%edi
		movswl (%ecx),%edx
		sar    $0x000010,%edi
		shl    $0x000009,%edx
		add    $0x000200,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    (%ecx),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%edi
		mov    %ebp,%edx
		mov    0x00000c(%esp),%eax
		sub    %ebx,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%ax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		add    $0x0000a0,%ebx
		mov    0x000010(%esp),%edx
		add    %ebx,%eax
		mov    0x00000c(%esp),%ebx
		sub    %edi,%edx
		imul   %ebx,%edx
		mov    %ax,0x000006(%ecx)
		mov    %edx,%eax
		xor    %ebx,%ebx
		sar    $0x00001f,%edx
		mov    0x000008(%esi),%bx
		idiv   %ebx
		add    $0x00000a,%ecx
		add    $0x000064,%edi
		mov    0x000030(%esp),%dh
		add    %edi,%eax
		inc    %dh
		mov    %ax,-0x000002(%ecx)
		xor    %eax,%eax
		mov    %dh,0x000030(%esp)
		mov    0x000038(%esp),%al
		mov    (%esi),%bl
		add    %eax,%ebp
		cmp    %bl,%dh
		jbe    _024732_jump
		mov    0x000010(%esp),%edx
		mov    0x000034(%esp),%bh
		xor    %eax,%eax
		inc    %bh
		mov    0x000024(%esp),%al
		mov    %bh,0x000034(%esp)
		add    %eax,%edx
		mov    0x000001(%esi),%ah
		mov    %edx,0x000010(%esp)
		cmp    %ah,%bh
		jbe    _02471d_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0247f9_jump
		neg    %eax

	_0247f9_jump:
		mov    0x000006(%esi),%di
		add    %eax,%edi
		mov    0x000008(%esi),%dx
		mov    %di,0x000006(%esi)
		cmp    %dx,%di
		jbe    _024b46_jump
		cmpw   $0x000000,0x00000a(%esi)
		jge    _024820_jump
		movb   $0x000002,0x00000d(%esi)
		jmp    _024b46_jump

	_024820_jump:
		movw   $0x000000,0x000006(%esi)
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_024836_jump:
		cmp    $0x000002,%ah
		jne    _024883_jump
		movw   $0x0000a0,0x000028(%esi)
		movw   $0x000064,0x00002a(%esi)
		movw   $0x000008,0x00002c(%esi)
		movw   $0x00000a,0x00002e(%esi)
		movb   $0x000000,0x000034(%esi)
		movb   $0x000000,0x000035(%esi)
		movb   $0x000000,0x000036(%esi)
		movw   $0x000000,0x000030(%esi)
		movw   $0x000000,0x000032(%esi)
		movb   $0x000000,0x00000d(%esi)
		movw   $0x000000,0x000006(%esi)
		movw   $0x0003e8,0x000008(%esi)
		movb   $0x000000,0x000037(%esi)
		movb   $0x000000,0x000038(%esi)

	_024883_jump:
		cmpb   $0x000000,0x000036(%esi)
		je     _02489c_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _024895_jump
		neg    %eax

	_024895_jump:
		shl    $0x000002,%eax
		add    %ax,0x000032(%esi)

	_02489c_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x000140,%edx
		add    $0x000004,%eax
		sub    %eax,%edx
		mov    0x00002e(%esi),%bx
		mov    %edx,%eax
		xor    %edx,%edx
		inc    %ebx
		mov    0x000028(%esi),%dx
		mov    %bx,0x00002e(%esi)
		cmp    %eax,%edx
		jle    _0248e6_jump
		cmpb   $0x000000,0x000035(%esi)
		jne    _0248e6_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		inc    %eax
		mov    %ax,0x00002c(%esi)
		mov    0x000038(%esi),%al
		movb   $0x000001,0x000035(%esi)
		test   %al,%al
		je     _0248e0_jump
		movb   $0x000001,0x000037(%esi)

	_0248e0_jump:
		movb   $0x000001,0x000038(%esi)
		jmp    _024930_jump

	_0248e6_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00000c(%esi),%al
		mov    0x000028(%esi),%dx
		add    $0x000004,%eax
		cmp    %eax,%edx
		jge    _02490f_jump
		cmpb   $0x000000,0x000035(%esi)
		jne    _02490f_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		movb   $0x000001,0x000035(%esi)
		dec    %eax
		mov    %ax,0x00002c(%esi)
		jmp    _024930_jump

	_02490f_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00000c(%esi),%dl
		mov    0x000028(%esi),%ax
		add    $0x000004,%edx
		cmp    %edx,%eax
		jg     _02492c_jump
		mov    $0x000140,%ebx
		sub    %edx,%ebx
		cmp    %ebx,%eax
		jge    _024930_jump

	_02492c_jump:
		movb   $0x000000,0x000035(%esi)

	_024930_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x0000c8,%edx
		add    $0x000003,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		xor    %edx,%edx
		mov    0x00002a(%esi),%dx
		cmp    %eax,%edx
		jle    _024970_jump
		cmpb   $0x000000,0x000034(%esi)
		jne    _024970_jump
		cmpb   $0x000000,0x000037(%esi)
		jne    _024970_jump
		mov    0x00002e(%esi),%ax
		movb   $0x000001,0x000034(%esi)
		neg    %eax
		movb   $0x000001,0x000036(%esi)
		add    $0x000002,%eax
		mov    %ax,0x00002e(%esi)
		jmp    _0249a3_jump

	_024970_jump:
		xor    %edx,%edx
		mov    0x00000c(%esi),%dl
		mov    $0x0000c8,%eax
		lea    0x000003(%edx),%ebx
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		cmp    %ebx,%eax
		jg     _024991_jump
		movb   $0x000000,0x000034(%esi)
		jmp    _0249a3_jump

	_024991_jump:
		add    $0x0000cb,%edx
		cmp    %edx,%eax
		jl     _0249a3_jump
		mov    0x000008(%esi),%ax
		mov    %ax,0x000006(%esi)

	_0249a3_jump:
		mov    0x00002a(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0249c4_jump
		neg    %eax

	_0249c4_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ax
		add    %edx,%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%edx
		mov    %ax,0x000028(%esi)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0249f4_jump
		neg    %eax

	_0249f4_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		add    %edx,%eax
		mov    %ax,0x00002a(%esi)
		lea    0x000020(%esp),%ebx
		mov    0x00002e(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _06274c_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000008(%esp)
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000020(%esp),%ebx
		mov    %eax,0x000018(%esp)
		mov    0x000030(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _06274c_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000014(%esp)
		mov    0x00001e(%esp),%eax
		xor    %dh,%dh
		sar    $0x000010,%eax
		mov    %dh,0x00002c(%esp)
		mov    %eax,0x000004(%esp)

	_024a5b_jump:
		xor    %dl,%dl
		mov    %dl,0x000028(%esp)

	_024a61_jump:
		mov    0x000014(%esp),%ebx
		movswl (%ecx),%eax
		imul   %eax,%ebx
		mov    (%ecx),%edx
		mov    0x000004(%esp),%ebp
		sar    $0x000010,%edx
		imul   %edx,%ebp
		add    %ebp,%ebx
		imul   0x000004(%esp),%eax
		imul   0x000014(%esp),%edx
		mov    0x000002(%ecx),%edi
		sar    $0x000010,%edi
		neg    %edi
		sub    %edx,%eax
		mov    0x000008(%esp),%edx
		imul   %edi,%edx
		sar    $0x000009,%eax
		mov    %edx,(%esp)
		mov    0x000018(%esp),%edx
		imul   %eax,%edx
		add    (%esp),%edx
		imul   0x000018(%esp),%edi
		imul   0x000008(%esp),%eax
		sub    %eax,%edi
		sar    $0x000009,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		movzwl 0x000028(%esi),%ebp
		mov    %ebx,%edx
		add    %ebp,%eax
		sar    $0x00001f,%edx
		mov    %ax,0x000006(%ecx)
		mov    %ebx,%eax
		idiv   %edi
		movzwl 0x00002a(%esi),%ebp
		add    $0x00000a,%ecx
		add    %ebp,%eax
		mov    0x000028(%esp),%dh
		mov    %ax,-0x000002(%ecx)
		inc    %dh
		mov    (%esi),%bl
		mov    %dh,0x000028(%esp)
		cmp    %bl,%dh
		jbe    _024a61_jump
		mov    0x00002c(%esp),%bh
		inc    %bh
		mov    0x000001(%esi),%ah
		mov    %bh,0x00002c(%esp)
		cmp    %ah,%bh
		jbe    _024a5b_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _024b15_jump
		neg    %eax

	_024b15_jump:
		mov    0x000030(%esi),%dx
		add    %eax,%eax
		add    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		mov    %dx,0x000030(%esi)
		test   %eax,%eax
		jge    _024b2d_jump
		neg    %eax

	_024b2d_jump:
		mov    0x000006(%esi),%bx
		add    %eax,%ebx
		mov    0x000008(%esi),%cx
		mov    %bx,0x000006(%esi)
		cmp    %cx,%bx
		jbe    _024b46_jump
		movw   $0x000000,0x000006(%esi)

	_024b46_jump:
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_024b58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    _0d4290_data,%eax
		xor    %edi,%edi
		mov    %eax,0x00000c(%esp)
		mov    0x000020(%eax),%ecx
		mov    0x000002(%eax),%bx
		mov    0x000024(%eax),%edx
		test   %bx,%bx
		jbe    _024c9a_jump
		lea    0x000008(%edx),%ebx

	_024b82_jump:
		xor    %eax,%eax
		mov    (%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%esi
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%esi
		mov    %esi,0x000014(%esp)
		lea    (%ecx,%eax,1),%esi
		mov    0x000004(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000004(%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%ebp
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x000002(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%ebp
		dec    %ebp
		mov    %ebp,0x000018(%esp)
		mov    0x000004(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    0x000006(%esi),%esi
		dec    %ebp
		sar    $0x000010,%esi
		mov    %ebp,0x000010(%esp)
		mov    0x000014(%esp),%ebp
		mov    0x000006(%ecx,%eax,1),%eax
		sub    0x000018(%esp),%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000004(%esp)
		mov    %esi,%ebp
		sub    %eax,%ebp
		mov    %ebp,(%esp)
		mov    0x000004(%esp),%ebp
		imul   (%esp),%ebp
		mov    %ebp,0x000004(%esp)
		mov    0x000020(%esp),%ebp
		sub    0x00001c(%esp),%ebp
		mov    %ebp,(%esp)
		mov    0x000024(%esp),%ebp
		sub    0x000010(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    (%esp),%ebp
		imul   0x000008(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000004(%esp),%ebp
		cmp    0x000008(%esp),%ebp
		jge    _024c82_jump
		mov    %esi,0x000018(%edx)
		mov    0x000014(%esp),%ebp
		mov    %eax,0x000028(%edx)
		mov    0x000018(%esp),%esi
		mov    %ebp,0x00000c(%edx)
		mov    0x000020(%esp),%ebp
		mov    %esi,0x00001c(%edx)
		mov    0x00001c(%esp),%esi
		mov    %ebp,0x000010(%edx)
		mov    0x000024(%esp),%ebp
		mov    %esi,0x000020(%edx)
		mov    0x000010(%esp),%esi
		mov    %ebp,0x000014(%edx)
		mov    0x00000c(%esp),%eax
		mov    %esi,0x000024(%edx)
		mov    %ebx,%esi
		mov    0x000014(%eax),%eax
		call   _011c90_func

	_024c82_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%ebx
		inc    %edi
		mov    0x000002(%eax),%si
		add    $0x000034,%edx
		cmp    %si,%di
		jb     _024b82_jump

	_024c9a_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_024cb0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ebp
		mov    %dl,0x000018(%esp)
		mov    $0x000003,%eax
		call   _01db84_func
		xor    %edi,%edi
		mov    %eax,%esi
		add    $0x000770,%eax
		mov    0x000064(%ebp),%dx
		mov    %eax,(%esp)
		cmp    $0x000017,%dx
		jne    _024d00_jump
		xor    %eax,%eax
		mov    _0b9366_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0b92fc_data,%eax
		mov    0x000008(%eax,%edx,4),%al
		mov    %al,0x000014(%esp)
		jmp    _024eb3_jump

	_024d00_jump:
		movb   $0x000001,0x000014(%esp)
		cmp    (%esp),%esi
		jb     _024d13_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_024d13_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _024ead_jump
		cmpw   $0x000003,0x000064(%esi)
		jne    _024ead_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		movw   $0x000014,0x00005c(%esi)
		movl   $0x000001,0x000024(%esi)
		mov    0x000085(%esi),%dl
		movb   $0x000000,0x000075(%esi)
		or     $0x000004,%dl
		mov    %dl,0x000085(%esi)
		movswl %di,%edx
		movb   $0x000005,0x000076(%esi)
		mov    _0a9f6e_data(,%edx,2),%bx
		mov    %bx,0x000042(%esi)
		mov    _0a9f60_data(,%edx,2),%dx
		mov    %esi,%eax
		mov    %dx,0x000040(%esi)
		call   _020064_func
		cmpw   $0x000000,0x000040(%esi)
		jle    _024db8_jump
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,(%ebx)
		mov    %dl,%bl
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		neg    %bl
		mov    %bl,0x000001(%edx)
		mov    0x000085(%esi),%bl
		mov    %esi,%eax
		or     $0x000008,%bl
		mov    $0x000002,%edx
		mov    %bl,0x000085(%esi)
		mov    $0x000001,%ebx
		jmp    _024dec_jump

	_024db8_jump:
		mov    0x00000c(%esi),%edx
		mov    0x000040(%esi),%bl
		mov    0x000008(%edx),%edx
		neg    %bl
		mov    %bl,(%edx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,0x000001(%ebx)
		mov    0x000085(%esi),%dh
		mov    %esi,%eax
		and    $0x0000f7,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000085(%esi)
		mov    $0x000002,%edx

	_024dec_jump:
		call   _065368_func
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    (%edx),%al
		mov    %al,0x000008(%edx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    0x000001(%edx),%al
		mov    %al,0x000009(%edx)
		lea    0x00000c(%esp),%edx
		push   %edx
		lea    0x00000c(%esp),%edx
		xor    %ebx,%ebx
		push   %edx
		movswl %di,%edx
		mov    0x00001c(%esp),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000018(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		movswl %dx,%edx
		mov    %ebp,%eax
		call   _01e1b8_func
		mov    0x000006(%esp),%edx
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x00000a(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    %esi,%eax
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x00002c(%esi)
		call   _01e53c_func
		mov    0x000071(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movb   $0x000000,0x00006f(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x000070(%esi),%dl
		inc    %edi
		mov    0x000002(%ebx,%edx,8),%al
		mov    0x000085(%esi),%bh
		xor    %edx,%edx
		mov    %al,0x00006e(%esi)
		and    $0x0000bf,%bh
		mov    0x000018(%esp),%dl
		mov    %bh,0x000085(%esi)
		cmp    %dx,%di
		je     _024ebc_jump

	_024ead_jump:
		add    $0x000088,%esi

	_024eb3_jump:
		cmp    (%esp),%esi
		jb     _024d13_jump

	_024ebc_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024ec8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x00005c(%eax),%dx
		test   %dx,%dx
		je     _024edd_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x00005c(%eax)

	_024edd_jump:
		cmpb   $0x000000,_0c33c2_data
		je     _024f01_jump
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x000070(%ecx),%bl
		testb  $0x000002,0x000007(%eax,%ebx,8)
		jne    _024f14_jump

	_024f01_jump:
		cmpb   $0x000002,0x000071(%ecx)
		jne    _024f2e_jump
		cmpb   $0x000001,0x000070(%ecx)
		jne    _024f2e_jump
		cmpw   $0x000002,0x000042(%ecx)
		jle    _024f2e_jump

	_024f14_jump:
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)

	_024f2e_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000071(%ecx),%al
		mov    0x000070(%ecx),%bl
		shl    $0x000008,%eax
		add    %ebx,%eax
		lea    0x000085(%ecx),%ebx
		cmp    $0x000003,%eax
		jb     _024f7d_jump
		cmp    $0x000005,%eax
		jbe    _02508c_jump
		cmp    $0x000200,%eax
		jb     _024f72_jump
		cmp    $0x000201,%eax
		jbe    _02500a_jump
		cmp    $0x000202,%eax
		je     _025004_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_024f72_jump:
		cmp    $0x000100,%eax
		je     _024fba_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_024f7d_jump:
		cmp    $0x000001,%eax
		jbe    _02508c_jump
		mov    %ecx,%eax
		call   _01d740_func
		test   %al,%al
		je     _02508c_jump
		mov    0x000085(%ecx),%dh
		mov    %ebx,%eax
		test   $0x000008,%dh
		sete   %bl
		and    $0x000001,%bl
		mov    (%eax),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%eax)
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_024fba_jump:
		mov    %ecx,%eax
		call   _05a530_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _02346c_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _024ff9_jump
		mov    0x000085(%ecx),%dh
		mov    %ebx,%eax
		test   $0x000008,%dh
		sete   %bl
		and    $0x000001,%bl
		mov    (%eax),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%eax)
		shl    $0x000003,%bl
		mov    %bh,%dl
		or     %bl,%dl
		mov    %dl,(%eax)

	_024ff9_jump:
		mov    %ecx,%eax
		call   _023aac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025004_jump:
		movw   $0x000000,0x000040(%ecx)

	_02500a_jump:
		cmpb   $0x00000a,0x000066(%ecx)
		jne    _02502c_jump
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)
		jmp    _025068_jump

	_02502c_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _025068_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _0230e0_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		je     _025068_jump
		cmpb   $0x000000,_0c33c2_data
		jne    _025062_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01de98_func

	_025062_jump:
		movw   $0x000000,0x000042(%ecx)

	_025068_jump:
		cmpw   $0x000000,0x000040(%ecx)
		je     _02508c_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02346c_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _02508c_jump
		movw   $0x000000,0x000040(%ecx)

	_02508c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025090_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x000071(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x000070(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _0250b9_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _065368_func

	_0250b9_jump:
		pop    %edx
		pop    %ebx
		ret    



_0250e4_func:
		mov    _0d496f_data,%al
		ret    



_0267d0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _026835_jump
		mov    %ecx,%eax
		call   _01f090_func
		cmpb   $0x000000,0x00007a(%ecx)
		je     _026813_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _02681c_jump

	_026813_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_02681c_jump:
		call   _01dea8_func
		testb  $0x000008,0x000085(%ecx)
		jne    _026831_jump
		movb   $0x000000,0x000074(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_026831_jump:
		movb   $0x000001,0x000074(%ecx)

	_026835_jump:
		pop    %ecx
		pop    %ebx
		ret    



_026838_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _026894_jump
		mov    0x000070(%ecx),%dl
		test   %dl,%dl
		je     _02684f_jump
		cmp    $0x000002,%dl
		jne    _026894_jump

	_02684f_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01dea8_func
		mov    0x000085(%ecx),%bl
		and    $0x0000ef,%bl
		mov    %ecx,%eax
		mov    %bl,0x000085(%ecx)
		call   _01e4c4_func
		testb  $0x000008,0x000085(%ecx)
		je     _026890_jump
		movb   $0x000001,0x000074(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026890_jump:
		movb   $0x000000,0x000074(%ecx)

	_026894_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026898_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02bfdc_func
		cmpb   $0x000000,0x00007f(%ecx)
		jne    _0268e4_jump
		cmpb   $0x000000,0x000071(%ecx)
		jne    _0268e4_jump
		cmpb   $0x000015,0x000070(%ecx)
		jne    _0268e4_jump
		xor    %edx,%edx
		mov    0x00006e(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006f(%ecx),%dl
		cmp    %eax,%edx
		jl     _0268e4_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01dea8_func

	_0268e4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0268e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0x000071(%eax),%ah
		test   %ah,%ah
		jne    _026ab7_jump
		cmpb   $0x00000b,0x000070(%esi)
		jne    _026ab7_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _026ac9_jump
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jle    _026aaa_jump

	_026928_jump:
		mov    0x000064(%ecx),%bx
		cmp    $0x00000d,%bx
		je     _02693c_jump
		cmp    $0x00000f,%bx
		jne    _026a9a_jump

	_02693c_jump:
		cmpl   $0x000000,0x000024(%ecx)
		jne    _026a9a_jump
		mov    0x000085(%esi),%al
		mov    0x000085(%ecx),%bh
		and    $0x000008,%al
		and    $0x0000f7,%bh
		movl   $0x000001,0x000024(%ecx)
		mov    %bh,%ah
		mov    %bh,0x000085(%ecx)
		or     %al,%ah
		mov    $0x000002,%ebx
		mov    %ah,%dl
		mov    %ah,0x000085(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000085(%ecx)
		call   _020064_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01dea8_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006f(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000012(%eax),%al
		mov    %al,0x00006e(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x00006c(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		mov    0x000085(%ecx),%bl
		sub    %eax,%edx
		test   $0x000008,%bl
		je     _0269c1_jump
		mov    $0x000040,%eax
		jmp    _0269c6_jump

	_0269c1_jump:
		mov    $0xffffffc0,%eax

	_0269c6_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		call   _01e53c_func
		mov    0x000032(%ecx),%edx
		mov    $0x000018,%eax
		sar    $0x000010,%edx
		call   _071068_func
		testb  $0x000008,0x000085(%ecx)
		je     _026a0f_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		jmp    _026a18_jump

	_026a0f_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_026a18_jump:
		call   _065368_func
		cmpw   $0x00000e,0x000064(%esi)
		jne    _026a7a_jump
		mov    _0b9320_data,%edi
		mov    0x000028(%esi),%eax
		sub    %edi,%eax
		test   %eax,%eax
		jge    _026a35_jump
		neg    %eax

	_026a35_jump:
		sar    $0x000005,%eax
		movw   $0x00000f,0x000064(%ecx)
		mov    %eax,%edi
		mov    0x00002c(%esi),%ebp
		mov    _0b9324_data,%eax
		sub    %ebp,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0b9320_data,%ebx
		mov    0x000028(%esi),%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jge    _026a62_jump
		neg    %eax

	_026a62_jump:
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %di,%edx
		movb   $0x00000a,0x000076(%ecx)
		sub    %edx,%eax
		mov    %ax,0x000042(%ecx)
		jmp    _026a86_jump

	_026a7a_jump:
		movw   $0x00000d,0x000064(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_026a86_jump:
		mov    %ecx,%eax
		call   _01e53c_func
		movw   $0x000001,0x000052(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026a9a_jump:
		inc    %eax
		add    $0x000088,%ecx
		cmp    %dx,%ax
		jl     _026928_jump

	_026aaa_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026ab7_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _026ac9_jump
		cmpb   $0x000002,0x000070(%esi)
		jne    _026ac9_jump
		movw   $0x000000,0x000052(%esi)

	_026ac9_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026ad0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x000071(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000070(%ebx),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		mov    0x000064(%ebx),%cx
		add    %eax,%edx
		cmp    $0x00000f,%cx
		jne    _026b14_jump
		mov    0x000005(%edx),%ah
		movb   $0x000001,(%edx)
		and    $0x00000f,%ah
		movb   $0x0000ff,0x000001(%edx)
		mov    %ah,%bl
		mov    %ah,0x000005(%edx)
		or     $0x0000a0,%bl
		mov    %bl,0x000005(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026b14_jump:
		cmp    $0x00000d,%cx
		jne    _026b40_jump
		call   _0302c0_func
		and    $0x0000ff,%eax
		mov    _0a9fbc_data(%eax),%al
		mov    %al,(%edx)
		mov    %al,0x000001(%edx)
		mov    %al,%ch
		mov    0x000005(%edx),%al
		neg    %ch
		and    $0x00000f,%al
		mov    %ch,0x000001(%edx)
		mov    %al,0x000005(%edx)
		jmp    _026b6c_jump

	_026b40_jump:
		cmp    $0x000097,%cx
		jne    _026b72_jump
		call   _0302c0_func
		and    $0x0000ff,%eax
		mov    _0a9fbc_data(%eax),%al
		mov    0x000005(%edx),%cl
		mov    %al,(%edx)
		and    $0x00000f,%cl
		mov    %al,0x000001(%edx)
		mov    %al,%ah
		mov    %cl,0x000005(%edx)
		neg    %ah
		mov    %ah,0x000001(%edx)

	_026b6c_jump:
		movw   $0x000000,0x000042(%ebx)

	_026b72_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026b80_func:
		push   %ebx
		push   %edx
		mov    $0x00000a,%ebx
		mov    $_0a7d29_data,%eax
		xor    %edx,%edx
		call   _085360_func
		pop    %edx
		pop    %ebx
		ret    



_026b98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000001,_0bf2ce_data
		jne    _026c3f_jump
		mov    $_0a9fda_data,%eax
		mov    $_0aa006_data,%edx
		mov    $_0aa018_data,%ebx
		mov    $_0aa02a_data,%ecx
		mov    $_0aa03c_data,%esi
		mov    $_0aa04a_data,%edi
		mov    $_0a9fea_data,%ebp
		mov    %eax,_0d49a0_data
		mov    %edx,_0d498c_data
		mov    %ebx,_0d499c_data
		mov    %ecx,_0d4994_data
		mov    %esi,_0d4988_data
		mov    %edi,_0d4978_data
		mov    %ebp,_0d49a8_data
		mov    $_0aa05a_data,%eax
		mov    $_0aa080_data,%edx
		mov    $_0a9ffc_data,%ebx
		mov    $_0a9fce_data,%ecx
		mov    $_0a9fc4_data,%esi
		mov    $_0aa06e_data,%edi
		mov    %eax,_0d497c_data
		mov    %edx,_0d4984_data
		mov    %ebx,_0d4998_data
		mov    %ecx,_0d49a4_data
		mov    %esi,_0d4990_data
		mov    %edi,_0d4980_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026c3f_jump:
		mov    $_0a9fe2_data,%edx
		mov    $_0aa00f_data,%ebx
		mov    $_0aa021_data,%ecx
		mov    $_0aa033_data,%esi
		mov    $_0aa043_data,%edi
		mov    $_0aa052_data,%ebp
		mov    $_0a9ff3_data,%eax
		mov    %edx,_0d49a0_data
		mov    %ebx,_0d498c_data
		mov    %ecx,_0d499c_data
		mov    %esi,_0d4994_data
		mov    %edi,_0d4988_data
		mov    %ebp,_0d4978_data
		mov    %eax,_0d49a8_data
		mov    $_0aa064_data,%edx
		mov    $_0aa085_data,%ebx
		mov    $_0aa001_data,%ecx
		mov    $_0a9fd4_data,%esi
		mov    $_0a9fc9_data,%edi
		mov    $_0aa077_data,%ebp
		mov    %edx,_0d497c_data
		mov    %ebx,_0d4984_data
		mov    %ecx,_0d4998_data
		mov    %esi,_0d49a4_data
		mov    %edi,_0d4990_data
		mov    %ebp,_0d4980_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026cd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0c3366_data
		je     _026d37_jump
		mov    _0bf2fd_data,%dl
		test   %dl,%dl
		jne    _026d37_jump
		mov    _0c33a9_data,%bl
		mov    %dl,_0c3366_data
		test   %bl,%bl
		je     _026d37_jump
		mov    $0x000008,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d49a0_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _026d17_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_026d17_jump:
		mov    $0x000005,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d4984_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _026d32_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_026d32_jump:
		test   %eax,%eax
		jne    _026d37_jump
		int3   

	_026d37_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026d40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0c3366_data
		je     _0270be_jump
		mov    _0bf2fd_data,%dl
		test   %dl,%dl
		jne    _0270be_jump
		mov    _0c33e1_data,%bl
		mov    %dl,_0c3366_data
		test   %bl,%bl
		je     _0270be_jump
		mov    $0x000009,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d498c_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _026d8f_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_026d8f_jump:
		test   %eax,%eax
		jne    _026dac_jump
		mov    $0x000001,%dh
		mov    $0x000032,%ecx
		mov    %dh,_0c33aa_data
		mov    %cx,_0c2f40_data
		jmp    _0270be_jump

	_026dac_jump:
		mov    $0x000009,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d499c_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _026dc7_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_026dc7_jump:
		test   %eax,%eax
		jne    _026de5_jump
		mov    $0x000001,%dl
		mov    $0x000014,%ebx
		mov    %dl,_0c33aa_data
		mov    %bx,_0c2f40_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026de5_jump:
		mov    $0x000009,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d4994_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _026e00_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_026e00_jump:
		test   %eax,%eax
		jne    _026e1e_jump
		mov    $0x000001,%ah
		mov    $0x000005,%edx
		mov    %ah,_0c33aa_data
		mov    %dx,_0c2f40_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026e1e_jump:
		mov    $0x000006,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d49a4_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _026e39_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_026e39_jump:
		test   %eax,%eax
		jne    _026e5f_jump
		cmpb   $0x000000,_0c337f_data
		je     _026e52_jump
		mov    %dl,_0c3363_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026e52_jump:
		xorb   $0x000001,_0c3363_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026e5f_jump:
		mov    $0x000005,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d4998_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _026e7a_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_026e7a_jump:
		test   %eax,%eax
		jne    _026e9b_jump
		movb   $0x000001,_0c33aa_data
		mov    _0a7c8e_data,%bh
		test   %bh,%bh
		sete   %al
		mov    %al,_0a7c8e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026e9b_jump:
		mov    $0x000007,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d4988_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _026eb6_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_026eb6_jump:
		test   %eax,%eax
		jne    _026ed6_jump
		mov    $0x000001,%ah
		mov    $0x000004,%dl
		mov    %ah,_0c33aa_data
		mov    %dl,_0b9372_data
		mov    %dl,_0c2f49_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026ed6_jump:
		mov    $0x000008,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d4978_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _026ef1_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_026ef1_jump:
		test   %eax,%eax
		jne    _026f36_jump
		mov    $0x000001,%cl
		mov    %cl,_0c33aa_data
		testb  $0x000080,_0c3348_data
		jne    _0270be_jump
		test   %cl,_0c3347_data
		je     _0270be_jump
		mov    _0c1144_data,%edx
		movb   $0x00000c,0x000072(%edx)
		mov    0x000072(%edx),%al
		mov    %al,_0c1154_data
		mov    %al,_0c175f_data
		mov    %al,0x000070(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026f36_jump:
		mov    $0x00000a,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d497c_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _026f51_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_026f51_jump:
		test   %eax,%eax
		jne    _026fa4_jump
		mov    $0x000001,%dh
		mov    _0b9369_data,%bl
		mov    %dh,_0c33aa_data
		test   %bl,%bl
		jne    _0270be_jump
		cmpw   $0x000000,_0b9338_data
		jne    _0270be_jump
		cmpw   $0x000000,_0b933a_data
		jne    _0270be_jump
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0270be_jump
		mov    %dh,_0c33c7_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026fa4_jump:
		mov    $0x000009,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d4980_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _026fbf_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_026fbf_jump:
		test   %eax,%eax
		jne    _02700a_jump
		cmpb   $0x000000,_0b9369_data
		jne    _0270be_jump
		cmpw   $0x000000,_0b9338_data
		jne    _0270be_jump
		cmpw   $0x000000,_0b933a_data
		jne    _0270be_jump
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0270be_jump
		movb   $0x000001,_0c33c7_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02700a_jump:
		mov    $0x000009,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d49a8_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _027025_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_027025_jump:
		test   %eax,%eax
		jne    _02706b_jump
		mov    $0x000001,%ch
		mov    $0xffffffff,%ebx
		mov    _0c3130_data,%dx
		mov    $0x000040,%al
		neg    %edx
		mov    %bx,_0b9342_data
		mov    %al,_0c33cf_data
		mov    $0x000002,%ebx
		mov    $_0b92f8_data,%eax
		mov    %dx,_0c3130_data
		mov    %ebx,%edx
		mov    %ch,_0c33aa_data
		call   _01dea8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02706b_jump:
		mov    $0x000005,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d4990_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _027086_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_027086_jump:
		test   %eax,%eax
		jne    _02709e_jump
		mov    $0x000001,%bh
		mov    %bh,_0c33aa_data
		mov    %bh,_0c33a8_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02709e_jump:
		mov    $0x000005,%ecx
		mov    $_0a7d29_data,%esi
		mov    _0d4984_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _0270b9_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_0270b9_jump:
		test   %eax,%eax
		jne    _0270be_jump
		int3   

	_0270be_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0270d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _027100_jump
		cmpb   $0x000002,0x000070(%ecx)
		jne    _027100_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000085(%ecx),%dh
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000085(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027100_jump:
		mov    0x000074(%ecx),%al
		cmp    $0x000002,%al
		jb     _02711f_jump
		jbe    _027133_jump
		cmp    $0x000014,%al
		jne    _027133_jump
		mov    0x00005c(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _027133_jump

	_02711f_jump:
		test   %al,%al
		jne    _02712c_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _027133_jump

	_02712c_jump:
		orb    $0x000008,0x000085(%ecx)

	_027133_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x00006c(%ecx),%al
		mov    _0b9320_data,%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    _0b9364_data,%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0b9338_data,%ax
		add    %eax,%eax
		sub    %eax,%edx
		movswl %dx,%ebx
		mov    %edx,%eax
		cmp    $0xfffffff6,%ebx
		jge    _0271a9_jump
		mov    0x000085(%ecx),%dh
		test   $0x000008,%dh
		jne    _027198_jump
		cmpb   $0x000006,0x000070(%ecx)
		je     _027198_jump
		mov    %dh,%al
		mov    $0x000001,%ebx
		or     $0x000008,%al
		mov    $0x000004,%edx
		mov    %al,0x000085(%ecx)
		mov    %ecx,%eax
		call   _065368_func
		jmp    _0271fc_jump

	_027198_jump:
		testb  $0x000008,0x000085(%ecx)
		je     _0271fc_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _0271fc_jump

	_0271a9_jump:
		cmp    $0x00000a,%dx
		jle    _0271ef_jump
		mov    0x000085(%ecx),%bh
		test   $0x000008,%bh
		je     _0271de_jump
		cmpb   $0x000006,0x000070(%ecx)
		je     _0271de_jump
		mov    %bh,%dl
		mov    %ecx,%eax
		and    $0x0000f7,%dl
		mov    $0x000001,%ebx
		mov    %dl,0x000085(%ecx)
		mov    $0x000003,%edx
		call   _065368_func
		jmp    _0271fc_jump

	_0271de_jump:
		testb  $0x000008,0x000085(%ecx)
		jne    _0271fc_jump
		movw   $0x00fffd,0x000040(%ecx)
		jmp    _0271fc_jump

	_0271ef_jump:
		jg     _0271fc_jump
		cmp    $0xfffffff6,%ebx
		jl     _0271fc_jump
		movw   $0x000000,0x000040(%ecx)

	_0271fc_jump:
		testb  $0x000008,0x000085(%ecx)
		je     _02720c_jump
		mov    $0x000010,%ebx
		jmp    _027211_jump

	_02720c_jump:
		mov    $0xfffffff0,%ebx

	_027211_jump:
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		mov    %ecx,%eax
		add    %ebx,%edx
		xor    %ebx,%ebx
		movswl %dx,%edx
		mov    0x00006d(%ecx),%bl
		call   _01e0cc_func
		test   %ax,%ax
		je     _027232_jump
		movw   $0x000000,0x000040(%ecx)

	_027232_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _027273_jump
		cmpb   $0x000003,0x000070(%ecx)
		jne    _027273_jump
		mov    0x00003c(%ecx),%edx
		mov    0x00002c(%ecx),%ebx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jl     _027299_jump
		mov    $0x000001,%ebx
		mov    0x00003c(%ecx),%edx
		movw   $0x000000,0x000042(%ecx)
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000002,%edx
		movw   $0x000000,0x000052(%ecx)
		call   _065368_func
		jmp    _027299_jump

	_027273_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _027299_jump
		cmpb   $0x000006,0x000070(%ecx)
		jne    _027299_jump
		cmpb   $0x00000f,0x00006f(%ecx)
		jbe    _027299_jump
		cmpw   $0x000001,0x000052(%ecx)
		jne    _027299_jump
		mov    %ecx,%eax
		call   _0276d4_func
		movw   $0x000002,0x000052(%ecx)

	_027299_jump:
		cmpw   $0x000000,0x000052(%ecx)
		je     _0272c0_jump
		mov    0x000083(%ecx),%ah
		inc    %ah
		mov    %ah,0x000083(%ecx)
		cmp    $0x000050,%ah
		jbe    _0272c0_jump
		movb   $0x000000,0x000083(%ecx)
		movw   $0x000000,0x000052(%ecx)

	_0272c0_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0272c4_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x000071(%eax)
		jne    _0272f2_jump
		cmpb   $0x000002,0x000070(%edx)
		jne    _0272f2_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000085(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%bh
		mov    %bh,0x000085(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_0272f2_jump:
		mov    0x000074(%edx),%al
		cmp    $0x000002,%al
		jb     _027311_jump
		jbe    _027325_jump
		cmp    $0x000014,%al
		jne    _027325_jump
		mov    0x00005c(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _027325_jump

	_027311_jump:
		test   %al,%al
		jne    _02731e_jump
		andb   $0x0000f7,0x000085(%edx)
		jmp    _027325_jump

	_02731e_jump:
		orb    $0x000008,0x000085(%edx)

	_027325_jump:
		cmpb   $0x000000,0x000071(%edx)
		jne    _02735a_jump
		cmpb   $0x000008,0x000070(%edx)
		jne    _02735a_jump
		cmpw   $0x000000,0x000052(%edx)
		jne    _02734e_jump
		cmpb   $0x000006,0x00006f(%edx)
		jb     _02734e_jump
		mov    %edx,%eax
		call   _0276d4_func
		movw   $0x000001,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02734e_jump:
		cmpb   $0x000001,0x00006f(%edx)
		jne    _02735a_jump
		movw   $0x000000,0x000052(%edx)

	_02735a_jump:
		pop    %edx
		pop    %ebx
		ret    



_027360_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpb   $0x000000,0x000071(%eax)
		jne    _027393_jump
		cmpb   $0x000002,0x000070(%edx)
		jne    _027393_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000085(%edx),%ah
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%ah
		mov    %ah,0x000085(%edx)
		jmp    _0274ab_jump

	_027393_jump:
		mov    0x000074(%edx),%al
		cmp    $0x000002,%al
		jb     _0273b2_jump
		jbe    _0273cd_jump
		cmp    $0x000014,%al
		jne    _0273cd_jump
		mov    0x00005c(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _0273cd_jump

	_0273b2_jump:
		test   %al,%al
		jne    _0273bf_jump
		andb   $0x0000f7,0x000085(%edx)
		jmp    _0273c6_jump

	_0273bf_jump:
		orb    $0x000008,0x000085(%edx)

	_0273c6_jump:
		mov    %edx,%eax
		call   _05a530_func

	_0273cd_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x00006c(%edx),%al
		mov    _0b9320_data,%cx
		add    %ebx,%eax
		xor    %ebx,%ebx
		sub    %ecx,%eax
		mov    _0b9364_data,%bl
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0b9324_data,%si
		mov    _0b9365_data,%al
		mov    0x00002c(%edx),%di
		mov    %eax,%ecx
		xor    %eax,%eax
		add    %esi,%ecx
		mov    0x00006d(%edx),%al
		sub    %edi,%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    0x000052(%edx),%cx
		test   %cx,%cx
		jne    _027493_jump
		cmp    $0x000012,%ax
		jl     _027463_jump
		cmp    $0x000028,%ax
		jge    _02742f_jump
		movw   $0x000001,0x000042(%edx)
		jmp    _027467_jump

	_02742f_jump:
		cmp    $0x000041,%ax
		jge    _02743d_jump
		movw   $0x000002,0x000042(%edx)
		jmp    _027467_jump

	_02743d_jump:
		cmp    $0x000064,%ax
		jge    _02744b_jump
		movw   $0x000003,0x000042(%edx)
		jmp    _027467_jump

	_02744b_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _027454_jump
		neg    %eax

	_027454_jump:
		cmp    $0x0000a5,%eax
		jge    _027463_jump
		movw   $0x000004,0x000042(%edx)
		jmp    _027467_jump

	_027463_jump:
		mov    %cx,0x000042(%edx)

	_027467_jump:
		testb  $0x000008,0x000085(%edx)
		je     _027476_jump
		cmp    $0x00005a,%bx
		jg     _027487_jump

	_027476_jump:
		testb  $0x000008,0x000085(%edx)
		jne    _0274ab_jump
		movswl %bx,%eax
		cmp    $0xffffffa6,%eax
		jge    _0274ab_jump

	_027487_jump:
		movw   $0x000001,0x000052(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027493_jump:
		cmp    $0x000078,%ax
		jle    _0274a5_jump
		movw   $0x00fffe,0x000042(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0274a5_jump:
		movw   $0x00ffff,0x000042(%edx)

	_0274ab_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0274b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x000071(%eax)
		jne    _027519_jump
		cmpb   $0x000002,0x000070(%eax)
		jne    _027519_jump
		cmpw   $0x000000,0x000052(%eax)
		jne    _027519_jump
		cmpb   $0x000010,0x00006f(%eax)
		jb     _027519_jump
		mov    $0x000001,%ebx
		mov    _0b9369_data,%dh
		movw   $0x000001,0x000052(%eax)
		mov    %bx,_0c30fa_data
		test   %dh,%dh
		je     _0274f1_jump
		cmp    $0x000001,%dh
		jne    _0274fc_jump

	_0274f1_jump:
		movb   $0x000001,_0b9379_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0274fc_jump:
		cmp    $0x000004,%dh
		je     _027506_jump
		cmp    $0x000005,%dh
		jne    _02754a_jump

	_027506_jump:
		mov    $0x000002,%ch
		mov    $0x000001,%al
		mov    %ch,_0b9369_data
		mov    %al,_0b9368_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027519_jump:
		cmpb   $0x000000,0x000071(%eax)
		jne    _02752f_jump
		cmpb   $0x00000b,0x000070(%eax)
		jne    _02752f_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02752f_jump:
		cmpb   $0x000000,0x000071(%eax)
		jne    _02754a_jump
		cmpb   $0x000016,0x000070(%eax)
		jne    _02754a_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _065368_func

	_02754a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027550_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _027674_jump

	_02756e_jump:
		cmpw   $0x00003e,0x000064(%ecx)
		jne    _027664_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _027664_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01dea8_func
		mov    0x000085(%esi),%al
		and    $0x000008,%al
		mov    0x000085(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000085(%ecx)
		or     %al,%dl
		xor    %eax,%eax
		mov    %dl,0x000085(%ecx)
		mov    0x000071(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		movw   $0x00fffe,0x000042(%ecx)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x000070(%ecx),%dl
		movsbw (%eax,%edx,8),%ax
		testb  $0x000008,0x000085(%ecx)
		je     _0275dc_jump
		cwtl   
		jmp    _0275df_jump

	_0275dc_jump:
		cwtl   
		neg    %eax

	_0275df_jump:
		mov    %ax,0x000040(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x00006c(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%esi
		mov    0x000028(%ecx),%ax
		sub    $0x000019,%esi
		mov    %ax,0x00003c(%ecx)
		mov    %esi,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000085(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %ecx,%eax
		movb   $0x00000c,0x000076(%ecx)
		call   _065368_func
		mov    %ecx,%eax
		call   _01e53c_func
		mov    0x000085(%ecx),%bl
		and    $0x0000bb,%bl
		mov    %bl,0x000085(%ecx)
		mov    %bl,%bh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bh
		mov    %ecx,%eax
		mov    %bh,0x000085(%ecx)
		call   _020064_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027664_jump:
		inc    %eax
		add    $0x000088,%ecx
		cmp    %dx,%ax
		jl     _02756e_jump

	_027674_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02767c_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x000071(%eax)
		jne    _027693_jump
		cmpb   $0x000002,0x000070(%eax)
		jne    _027693_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_027693_jump:
		cmpb   $0x000000,0x000071(%eax)
		jne    _0276b4_jump
		cmpb   $0x00000b,0x000070(%eax)
		jne    _0276b4_jump
		cmpw   $0x000000,0x000052(%eax)
		jne    _0276b4_jump
		movw   $0x000001,0x000052(%eax)
		call   _027550_func
		pop    %edx
		pop    %ebx
		ret    

	_0276b4_jump:
		cmpb   $0x000000,0x000071(%eax)
		jne    _0276cf_jump
		cmpb   $0x000016,0x000070(%eax)
		jne    _0276cf_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _065368_func

	_0276cf_jump:
		pop    %edx
		pop    %ebx
		ret    



_0276d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0b9410_data,%esi
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _027899_jump

	_0276f6_jump:
		cmpw   $0x000077,0x000064(%esi)
		jne    _027889_jump
		mov    0x000024(%esi),%ebx
		test   %ebx,%ebx
		jne    _027889_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01dea8_func
		mov    0x000085(%edi),%al
		and    $0x000008,%al
		mov    0x000085(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000085(%esi)
		or     %al,%dl
		mov    %dl,0x000085(%esi)
		cmpw   $0x000074,0x000064(%edi)
		jne    _027773_jump
		mov    _0b9338_data,%ax
		movw   $0x000001,0x000042(%esi)
		cmp    $0x000002,%ax
		jge    _02775a_jump
		movw   $0x000000,0x000040(%esi)
		jmp    _0277a7_jump

	_02775a_jump:
		testb  $0x000008,0x000085(%esi)
		jne    _02776b_jump
		movw   $0x00ffff,0x000040(%esi)
		jmp    _0277a7_jump

	_02776b_jump:
		movw   $0x000001,0x000040(%esi)
		jmp    _0277a7_jump

	_027773_jump:
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		movw   $0x000000,0x000042(%esi)
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x000070(%esi),%al
		mov    0x000085(%esi),%dh
		movsbw (%ebx,%eax,8),%ax
		test   $0x000008,%dh
		je     _0277a0_jump
		cwtl   
		jmp    _0277a3_jump

	_0277a0_jump:
		cwtl   
		neg    %eax

	_0277a3_jump:
		mov    %ax,0x000040(%esi)

	_0277a7_jump:
		cmpw   $0x000074,0x000064(%edi)
		jne    _0277ce_jump
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %edi,%eax
		call   _01e1b8_func
		jmp    _02780c_jump

	_0277ce_jump:
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000009,%edx
		mov    %edi,%eax
		call   _01e1b8_func
		mov    $0x000010,%ebx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%eax
		mov    %bx,(%esp)
		add    $0x000020,%ecx
		add    %ebx,%eax
		mov    %cx,0x000008(%esp)
		mov    %ax,0x000004(%esp)

	_02780c_jump:
		mov    0x000002(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00006c(%esi),%al
		sub    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000078(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000085(%esi),%bh
		mov    0x000028(%esi),%ax
		or     $0x000004,%bh
		mov    %ax,0x00003c(%esi)
		mov    %bh,0x000085(%esi)
		mov    0x000085(%esi),%cl
		mov    0x00002c(%esi),%ax
		and    $0x0000bf,%cl
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		mov    %cl,0x000085(%esi)
		call   _020064_func
		mov    %edi,%eax
		movb   $0x000000,0x00006f(%esi)
		call   _01e53c_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027889_jump:
		inc    %eax
		add    $0x000088,%esi
		cmp    %dx,%ax
		jl     _0276f6_jump

	_027899_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0278a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x00007a(%eax),%al
		cmp    0x00007b(%ecx),%al
		je     _0278e2_jump
		cmpb   $0x000002,0x000071(%ecx)
		jne    _0278fe_jump
		cmpb   $0x000001,0x000070(%ecx)
		jne    _0278fe_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    0x000085(%ecx),%bh
		movw   $0x000000,0x000040(%ecx)
		or     $0x000010,%bh
		mov    %bh,0x000085(%ecx)
		jmp    _0278fe_jump

	_0278e2_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01dea0_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01de98_func
		orb    $0x000010,0x000085(%ecx)

	_0278fe_jump:
		mov    0x000085(%ecx),%al
		movw   $0x000000,0x000042(%ecx)
		test   $0x000008,%al
		jne    _02791a_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _027928_jump

	_02791a_jump:
		test   $0x000008,%al
		je     _02792f_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx

	_027928_jump:
		mov    %ecx,%eax
		call   _065368_func

	_02792f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027934_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01f090_func
		mov    _0c1144_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _027954_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _02795d_jump

	_027954_jump:
		jge    _02795d_jump
		orb    $0x000008,0x000085(%ecx)

	_02795d_jump:
		cmpb   $0x000000,0x00007a(%ecx)
		je     _027980_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _065368_func
		pop    %ecx
		pop    %ebx
		ret    

	_027980_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    0x000085(%ecx),%bl
		movb   $0x000000,0x000074(%ecx)
		and    $0x0000ef,%bl
		mov    %bl,0x000085(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_0279a4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01f090_func
		mov    _0c1144_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _0279c4_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _0279cd_jump

	_0279c4_jump:
		jge    _0279cd_jump
		orb    $0x000008,0x000085(%ecx)

	_0279cd_jump:
		cmpb   $0x000000,0x00007a(%ecx)
		je     _027a04_jump
		testb  $0x000008,0x000085(%ecx)
		je     _0279f0_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _065368_func
		pop    %ecx
		pop    %ebx
		ret    

	_0279f0_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _065368_func
		pop    %ecx
		pop    %ebx
		ret    

	_027a04_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		andb   $0x0000ef,0x000085(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_027a1c_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x000071(%eax)
		jne    _027a2a_jump
		cmpb   $0x000000,0x000070(%eax)
		je     _027a36_jump

	_027a2a_jump:
		cmpb   $0x000001,0x000071(%eax)
		jne    _027a45_jump
		cmpb   $0x000000,0x000070(%eax)
		jne    _027a45_jump

	_027a36_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _065368_func

	_027a45_jump:
		pop    %edx
		pop    %ebx
		ret    



_027a48_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000052(%eax)
		jne    _027a70_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		call   _065368_func
		movb   $0x000000,0x000083(%ecx)
		movw   $0x000001,0x000052(%ecx)

	_027a70_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027a74_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x000071(%eax),%dl
		mov    0x000074(%eax),%al
		cmp    $0x000002,%al
		jb     _027aa4_jump
		jbe    _027a99_jump
		cmp    $0x000014,%al
		jb     _027b4e_jump
		jbe    _027b3e_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027a99_jump:
		mov    %ecx,%eax
		call   _02bdd0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027aa4_jump:
		test   %al,%al
		jne    _027ab1_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _027ab8_jump

	_027ab1_jump:
		orb    $0x000008,0x000085(%ecx)

	_027ab8_jump:
		cmp    $0x000001,%dx
		jne    _027b0d_jump
		mov    %ecx,%eax
		call   _05a530_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _02346c_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _027afb_jump
		cmpb   $0x000000,0x000074(%ecx)
		jne    _027aed_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _027af6_jump

	_027aed_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_027af6_jump:
		call   _065368_func

	_027afb_jump:
		mov    %ecx,%eax
		call   _023aac_func
		mov    0x000040(%ecx),%dx
		test   %dx,%dx
		jne    _027b4e_jump
		jmp    _027b4a_jump

	_027b0d_jump:
		cmp    $0x000002,%dx
		jne    _027b2e_jump
		cmpb   $0x000001,0x000070(%ecx)
		jne    _027b23_jump
		movw   $0x000000,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027b23_jump:
		mov    %ecx,%eax
		call   _05a530_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027b2e_jump:
		test   %dx,%dx
		jne    _027b4e_jump
		mov    %ecx,%eax
		call   _02be0c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027b3e_jump:
		mov    0x00005c(%ecx),%dx
		mov    %dx,0x000040(%ecx)
		mov    0x00004a(%ecx),%dx

	_027b4a_jump:
		mov    %dx,0x000042(%ecx)

	_027b4e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027b60_func:
		mov    0x000060(%eax),%ax
		and    $0x00ffff,%eax
		sar    $0x00000b,%eax
		ret    



_027b70_func:
		mov    0x000060(%eax),%ax
		and    $0x000007,%ah
		ret    



_027b78_func:
		push   %ebx
		call   _027b70_func
		movswl %ax,%ebx
		movswl %dx,%eax
		add    %ebx,%eax
		shl    $0x000003,%eax
		add    $_0a5b5e_data,%eax
		pop    %ebx
		ret    



_027b98_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %edx,%esi
		mov    0x000064(%eax),%dx
		cmp    $0x000064,%dx
		jb     _027bb6_jump
		jbe    _027bd5_jump
		cmp    $0x0000d9,%dx
		je     _027bd5_jump
		jmp    _027c0c_jump

	_027bb6_jump:
		cmp    $0x000014,%dx
		jne    _027c0c_jump
		mov    $0x000001,%cl
		xor    %bh,%bh
		mov    $0x0000ff,%al
		mov    %bh,(%esp)
		mov    %cl,0x000001(%esp)
		mov    $0x000002,%ch
		mov    %al,0x000003(%esp)
		mov    %ch,0x000002(%esp)
		jmp    _027c17_jump

	_027bd5_jump:
		movb   $0x000001,(%esp)
		cmpb   $0x00000b,0x000070(%eax)
		jne    _027c05_jump
		cmpb   $0x000002,0x000071(%eax)
		jne    _027bec_jump
		movb   $0x000003,0x000001(%esp)
		jmp    _027bfe_jump

	_027bec_jump:
		cmpb   $0x00000f,0x00006f(%eax)
		jbe    _027bf9_jump
		movb   $0x000002,0x000001(%esp)
		jmp    _027bfe_jump

	_027bf9_jump:
		movb   $0x0000ff,0x000001(%esp)

	_027bfe_jump:
		movb   $0x0000ff,0x000002(%esp)
		jmp    _027c17_jump

	_027c05_jump:
		movb   $0x0000ff,0x000001(%esp)
		jmp    _027c17_jump

	_027c0c_jump:
		xor    %dh,%dh
		mov    $0x0000ff,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000001(%esp)

	_027c17_jump:
		xor    %eax,%eax

	_027c19_jump:
		movswl %ax,%edx
		mov    (%esp,%edx,1),%dl
		inc    %eax
		xor    %dh,%dh
		movswl %ax,%ebx
		cmp    %dx,%si
		sete   %dl
		mov    (%esp,%ebx,1),%cl
		mov    %edx,%edi
		cmp    $0x0000ff,%cl
		je     _027c3b_jump
		cmp    $0x000001,%dx
		jne    _027c19_jump

	_027c3b_jump:
		mov    %edi,%eax
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_027cc0_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000008(%esp)
		cmpw   $0x000000,_0c30ce_data
		je     _027d53_jump
		mov    _0c3166_data,%dx
		mov    %edi,%eax
		sub    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		sub    _0c3162_data,%ax
		mov    0x000006(%esp),%ecx
		add    $0x000008,%eax
		mov    0x000002(%esp),%ebx
		mov    %ax,(%esp)
		sar    $0x000010,%ecx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _03e2d0_func
		mov    0x00001c(%esp),%eax
		sub    _0c3166_data,%ax
		movswl %ax,%edx
		mov    0x000018(%esp),%eax
		sub    _0c3162_data,%ax
		mov    0x000022(%esp),%ecx
		add    $0x000008,%eax
		mov    0x00001e(%esp),%ebx
		mov    %ax,(%esp)
		sar    $0x000010,%ecx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _03e2d0_func

	_027d53_jump:
		mov    0x000020(%esp),%ebx
		mov    0x000024(%esp),%ecx
		mov    0x000004(%esp),%edx
		sub    %ebx,%esi
		sub    %ecx,%edi
		add    %ebx,%edx
		mov    0x000008(%esp),%ebx
		mov    %dx,0x000004(%esp)
		add    %ecx,%ebx
		mov    0x000018(%esp),%ecx
		mov    %bx,0x000008(%esp)
		cmp    %cx,%si
		jg     _027dba_jump
		cmp    0x00001c(%esp),%di
		jg     _027dba_jump
		mov    0x000002(%esp),%edx
		movswl %si,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x000016(%esp),%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _027dba_jump
		mov    0x000006(%esp),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _027dba_jump
		mov    $0x000001,%eax
		jmp    _027dbc_jump

	_027dba_jump:
		xor    %eax,%eax

	_027dbc_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000010



_027dc4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %ecx,(%esp)
		mov    0x000064(%eax),%ax
		cmp    $0x000069,%ax
		jb     _027f2c_jump
		cmp    $0x00006a,%ax
		jbe    _028224_jump
		cmp    $0x0000a7,%ax
		jb     _027ec0_jump
		jbe    _0280e4_jump
		cmp    $0x000107,%ax
		jb     _027e41_jump
		jbe    _0288b6_jump
		cmp    $0x000113,%ax
		jb     _027e32_jump
		jbe    _0287fe_jump
		cmp    $0x000115,%ax
		jb     _027e66_jump
		jbe    _028829_jump
		cmp    $0x000117,%ax
		jbe    _028727_jump
		jmp    _027e66_jump

	_027e32_jump:
		cmp    $0x00010b,%ax
		je     _028869_jump
		jmp    _027e66_jump

	_027e41_jump:
		cmp    $0x0000c3,%ax
		jb     _027e5c_jump
		jbe    _0285cc_jump
		cmp    $0x0000cc,%ax
		je     _02808c_jump
		jmp    _027e66_jump

	_027e5c_jump:
		cmp    $0x0000ac,%ax
		je     _0282b8_jump

	_027e66_jump:
		mov    0x000024(%esp),%edx
		mov    (%esp),%ecx
		mov    %edi,%ebx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx

	_027e74_jump:
		call   _01ddf8_func

	_027e79_jump:
		cmpw   $0x000000,_0c30ce_data
		je     _027eb7_jump
		mov    _0c3166_data,%si
		mov    (%edi),%ax
		mov    0x000024(%esp),%ecx
		sub    %esi,%eax
		mov    _0c3162_data,%di
		movswl %ax,%edx
		mov    0x000000(%ebp),%ax
		mov    (%esp),%ebx
		sub    %edi,%eax
		movswl (%ecx),%ecx
		add    $0x000008,%eax
		movswl (%ebx),%ebx
		cwtl   
		call   _03e2d0_func

	_027eb7_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_027ec0_jump:
		cmp    $0x000081,%ax
		jb     _027f02_jump
		jbe    _028661_jump
		cmp    $0x000086,%ax
		jb     _027ef3_jump
		jbe    _0280e4_jump
		cmp    $0x000092,%ax
		jb     _027e66_jump
		jbe    _028135_jump
		cmp    $0x0000a4,%ax
		je     _028727_jump
		jmp    _027e66_jump

	_027ef3_jump:
		cmp    $0x000084,%ax
		je     _0285df_jump
		jmp    _027e66_jump

	_027f02_jump:
		cmp    $0x000079,%ax
		jb     _027f1d_jump
		jbe    _028182_jump
		cmp    $0x00007a,%ax
		je     _028267_jump
		jmp    _027e66_jump

	_027f1d_jump:
		cmp    $0x000077,%ax
		je     _02854e_jump
		jmp    _027e66_jump

	_027f2c_jump:
		cmp    $0x000039,%ax
		jb     _027fac_jump
		jbe    _02800c_jump
		cmp    $0x000046,%ax
		jb     _027f82_jump
		jbe    _0284fd_jump
		cmp    $0x00004c,%ax
		jb     _027f73_jump
		jbe    _028727_jump
		cmp    $0x00004f,%ax
		jb     _027e66_jump
		jbe    _02809d_jump
		cmp    $0x000053,%ax
		je     _028579_jump
		jmp    _027e66_jump

	_027f73_jump:
		cmp    $0x000047,%ax
		je     _0281d3_jump
		jmp    _027e66_jump

	_027f82_jump:
		cmp    $0x00003e,%ax
		jb     _027f9d_jump
		jbe    _028428_jump
		cmp    $0x000042,%ax
		je     _02841c_jump
		jmp    _027e66_jump

	_027f9d_jump:
		cmp    $0x00003c,%ax
		je     _028377_jump
		jmp    _027e66_jump

	_027fac_jump:
		cmp    $0x000028,%ax
		jb     _027fe2_jump
		jbe    _028267_jump
		cmp    $0x00002c,%ax
		jb     _027fd3_jump
		jbe    _0281d3_jump
		cmp    $0x000038,%ax
		je     _0282b8_jump
		jmp    _027e66_jump

	_027fd3_jump:
		cmp    $0x00002b,%ax
		je     _0282b8_jump
		jmp    _027e66_jump

	_027fe2_jump:
		cmp    $0x000008,%ax
		jb     _027ffd_jump
		jbe    _0280e4_jump
		cmp    $0x000023,%ax
		je     _0282b8_jump
		jmp    _027e66_jump

	_027ffd_jump:
		cmp    $0x000002,%ax
		je     _0280e4_jump
		jmp    _027e66_jump

	_02800c_jump:
		mov    0x000024(%esp),%ecx
		push   %ecx
		mov    0x000004(%esp),%eax
		push   %eax
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %esi,%eax
		mov    $0x000001,%edx
		call   _01e1b8_func
		mov    (%esp),%eax
		mov    0x000024(%esp),%edx
		mov    (%eax),%ax
		cmp    (%edx),%ax
		jle    _02805b_jump
		mov    0x000000(%ebp),%bx
		add    $0x000004,%ebx
		mov    (%esp),%eax
		mov    %bx,0x000000(%ebp)
		subw   $0x000008,(%eax)
		addw   $0x000008,(%edi)
		mov    %edx,%eax
		mov    (%edx),%dx
		sub    $0x00000c,%edx
		mov    %dx,(%eax)
		jmp    _027e79_jump

	_02805b_jump:
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000003,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,0x000000(%ebp)
		movw   $0x000006,(%eax)
		addw   $0x000010,(%edi)
		mov    %edx,%eax
		mov    (%edx),%dx
		sub    $0x000020,%edx
		mov    %dx,(%eax)
		jmp    _027e79_jump

	_02808c_jump:
		mov    0x000024(%esp),%eax
		push   %eax
		mov    %esi,%eax
		call   _01e300_func
		jmp    _027e79_jump

	_02809d_jump:
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		mov    0x000010(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000c(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000004,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000004,(%eax)
		jmp    _027e79_jump

	_0280e4_jump:
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		mov    0x000010(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000c(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,(%edi)
		mov    0x000008(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		mov    0x000004(%esp),%eax
		mov    0x000024(%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		jmp    _027e79_jump

	_028135_jump:
		mov    0x000024(%esp),%ebx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01ddf8_func
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    0x000024(%esp),%eax
		mov    %si,0x000000(%ebp)
		movswl (%eax),%eax
		sar    %eax
		movswl (%edi),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,(%edi)
		movw   $0x000004,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000004,(%eax)
		jmp    _027e79_jump

	_028182_jump:
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		mov    0x000010(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000c(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x000008(%esp),%eax
		mov    (%esp),%edx
		sub    $0x00001e,%eax
		mov    %ax,(%edx)
		mov    0x000004(%esp),%eax
		mov    0x000024(%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		jmp    _027e79_jump

	_0281d3_jump:
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		mov    0x000010(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000c(%esp),%eax
		sub    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x000008(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000004,%eax
		mov    %ax,(%edx)
		mov    0x000004(%esp),%eax
		mov    0x000024(%esp),%edx
		add    $0x000003,%eax
		mov    %ax,(%edx)
		jmp    _027e79_jump

	_028224_jump:
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000014(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01e1b8_func
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000020,(%eax)
		jmp    _027e79_jump

	_028267_jump:
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		mov    0x000010(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000c(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,(%edi)
		mov    0x000008(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		mov    0x000004(%esp),%eax
		mov    0x000024(%esp),%edx
		sub    $0x000006,%eax
		mov    %ax,(%edx)
		jmp    _027e79_jump

	_0282b8_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x00006c(%esi),%al
		add    %ebx,%eax
		sub    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x00006d(%esi),%al
		add    %ecx,%eax
		sub    $0x00003c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000032,(%eax)
		cmpb   $0x000000,0x000071(%esi)
		jne    _027e79_jump
		mov    0x000070(%esi),%ch
		cmp    $0x000005,%ch
		jne    _028325_jump
		xor    %eax,%eax
		mov    0x00006f(%esi),%al
		mov    (%edi),%dx
		add    %eax,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,(%edi)
		mov    0x000024(%esp),%edx
		mov    0x00006f(%esi),%al
		mov    (%edx),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edx)
		jmp    _027e79_jump

	_028325_jump:
		cmp    $0x000006,%ch
		jne    _027e79_jump
		mov    (%eax),%dx
		sar    %dx
		mov    %dx,(%eax)
		add    %dx,(%edi)
		xor    %ebx,%ebx
		mov    $0x00000f,%eax
		mov    0x00006f(%esi),%bl
		cmp    %ebx,%eax
		jle    _02834a_jump
		mov    %ebx,%eax

	_02834a_jump:
		mov    (%edi),%cx
		add    %eax,%eax
		sub    %eax,%ecx
		xor    %ebx,%ebx
		mov    %cx,(%edi)
		mov    $0x00000f,%eax
		mov    0x00006f(%esi),%bl
		mov    0x000024(%esp),%edx
		cmp    %ebx,%eax
		jle    _028368_jump
		mov    %ebx,%eax

	_028368_jump:
		mov    (%edx),%si
		add    %eax,%eax
		add    %eax,%esi
		mov    %si,(%edx)
		jmp    _027e79_jump

	_028377_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _0283c7_jump
		cmpb   $0x000002,0x000070(%esi)
		jne    _0283c7_jump
		cmpb   $0x000010,0x00006f(%esi)
		jb     _0283c7_jump
		testb  $0x000008,0x000085(%esi)
		je     _028399_jump
		mov    $0x000050,%eax
		jmp    _02839e_jump

	_028399_jump:
		mov    $0x000010,%eax

	_02839e_jump:
		add    0x000028(%esi),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000044,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000030,(%eax)
		jmp    _027e79_jump

	_0283c7_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _0283ed_jump
		cmpb   $0x000002,0x000070(%esi)
		jne    _0283ed_jump
		testb  $0x000008,0x000085(%esi)
		je     _0283e3_jump
		mov    $0x000050,%eax
		jmp    _0283e8_jump

	_0283e3_jump:
		mov    $0x000030,%eax

	_0283e8_jump:
		add    0x000028(%esi),%eax
		jmp    _0283f6_jump

	_0283ed_jump:
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax

	_0283f6_jump:
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000026,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000020,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000030,(%eax)
		jmp    _027e79_jump

	_02841c_jump:
		mov    0x000024(%esp),%eax
		push   %eax
		mov    %esi,%eax
		jmp    _027e74_jump

	_028428_jump:
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000014(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01e1b8_func
		mov    0x000071(%esi),%ah
		cmp    $0x000002,%ah
		jne    _02847f_jump
		cmp    0x000070(%esi),%ah
		jne    _02847f_jump
		mov    0x000010(%esp),%eax
		add    $0x000005,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000c(%esp),%eax
		add    $0x00001c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000006,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000016,(%eax)
		jmp    _027e79_jump

	_02847f_jump:
		cmpb   $0x000002,0x000071(%esi)
		jne    _0284ba_jump
		cmpb   $0x000001,0x000070(%esi)
		jne    _0284ba_jump
		mov    0x000010(%esp),%eax
		add    $0x000006,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000c(%esp),%eax
		add    $0x000012,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000d,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00000b,(%eax)
		jmp    _027e79_jump

	_0284ba_jump:
		cmpb   $0x000002,0x000071(%esi)
		jne    _027e79_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _027e79_jump
		mov    0x000010(%esp),%eax
		add    $0x000007,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000c(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000013,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00000b,(%eax)
		jmp    _027e79_jump

	_0284fd_jump:
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		mov    0x000010(%esp),%eax
		add    $0x000018,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000c(%esp),%eax
		add    $0x00000e,%eax
		mov    %ax,(%edi)
		mov    0x000008(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000030,%eax
		mov    %ax,(%edx)
		mov    0x000004(%esp),%eax
		mov    0x000024(%esp),%edx
		sub    $0x00001b,%eax
		mov    %ax,(%edx)
		jmp    _027e79_jump

	_02854e_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004c,%eax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		add    $0x000055,%eax
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		movw   $0x000008,(%ecx)
		movw   $0x000008,(%eax)
		jmp    _027e79_jump

	_028579_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		cmpb   $0x000000,0x000070(%esi)
		jne    _0285b6_jump
		mov    (%esp),%eax
		movw   $0x000016,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000016,(%eax)
		mov    (%edx),%dx
		add    $0x000044,%edx
		mov    %dx,0x000000(%ebp)
		mov    (%ebx),%bx
		add    $0x000041,%ebx
		mov    %bx,(%edi)
		jmp    _027e79_jump

	_0285b6_jump:
		mov    (%esp),%eax
		movw   $0x000000,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000000,(%eax)
		jmp    _027e79_jump

	_0285cc_jump:
		mov    0x000024(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01c8e0_func
		jmp    _027e79_jump

	_0285df_jump:
		cmpb   $0x000002,0x000071(%esi)
		jne    _0285eb_jump
		cmpb   $0x00000f,0x000070(%esi)
		je     _028603_jump

	_0285eb_jump:
		cmpb   $0x000002,0x000071(%esi)
		jne    _0285f7_jump
		cmpb   $0x00000c,0x000070(%esi)
		je     _028603_jump

	_0285f7_jump:
		cmpb   $0x000002,0x000071(%esi)
		jne    _028632_jump
		cmpb   $0x00000d,0x000070(%esi)
		jne    _028632_jump

	_028603_jump:
		mov    0x000028(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000037,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000015,(%eax)
		jmp    _027e79_jump

	_028632_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00002d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000015,(%eax)
		jmp    _027e79_jump

	_028661_jump:
		cmpb   $0x000001,0x00007a(%esi)
		jne    _02868e_jump
		mov    0x000028(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		movw   $0x00002b,(%ecx)
		movw   $0x00000f,(%eax)

	_02868e_jump:
		cmpb   $0x000002,0x00007a(%esi)
		jne    _0286be_jump
		mov    0x000028(%esi),%ax
		add    $0x000083,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000058,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000031,(%eax)

	_0286be_jump:
		cmpb   $0x000003,0x00007a(%esi)
		jne    _0286ee_jump
		mov    0x000028(%esi),%ax
		add    $0x00003e,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00002b,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000010,(%eax)

	_0286ee_jump:
		cmpb   $0x000004,0x00007a(%esi)
		jne    _027e79_jump
		mov    0x000028(%esi),%ax
		add    $0x000060,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000057,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000030,(%eax)
		jmp    _027e79_jump

	_028727_jump:
		mov    0x000024(%esp),%ecx
		mov    %edi,%ebx
		mov    %ebp,%edx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _01ddf8_func
		cmpb   $0x000004,0x000072(%esi)
		je     _0287b0_jump
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000007(%eax),%dl
		add    %dl,%dl
		shr    $0x000007,%dl
		mov    0x000007(%eax),%al
		and    $0x0000ff,%edx
		shr    $0x000007,%al
		add    %edx,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    $0x000018,%eax
		shl    $0x000002,%esi
		mov    0x000000(%ebp),%cx
		sub    %esi,%eax
		add    %eax,%ecx
		mov    %cx,0x000000(%ebp)
		mov    (%edi),%si
		add    %eax,%esi
		mov    (%esp),%edx
		mov    %si,(%edi)
		add    %eax,%eax
		sub    %ax,(%edx)
		mov    0x000024(%esp),%edx
		sub    %ax,(%edx)
		jmp    _027e79_jump

	_0287b0_jump:
		cmpb   $0x000000,0x000078(%esi)
		jne    _0287bd_jump
		mov    $0x000013,%eax
		jmp    _0287c2_jump

	_0287bd_jump:
		mov    $0x000041,%eax

	_0287c2_jump:
		mov    (%esp),%ebx
		movswl %ax,%edx
		movswl (%ebx),%ebx
		sub    %edx,%ebx
		movswl 0x000000(%ebp),%esi
		sar    %ebx
		add    %ebx,%esi
		mov    0x000024(%esp),%ebx
		mov    %si,0x000000(%ebp)
		movswl (%ebx),%ebx
		sub    %edx,%ebx
		movswl (%edi),%esi
		sar    %ebx
		add    %ebx,%esi
		mov    (%esp),%edx
		mov    %si,(%edi)
		mov    %ax,(%edx)
		mov    0x000024(%esp),%edx
		mov    %ax,(%edx)
		jmp    _027e79_jump

	_0287fe_jump:
		mov    0x000028(%esi),%ax
		add    $0x000030,%eax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		add    $0x00001e,%eax
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		movw   $0x000010,(%ecx)
		movw   $0x000010,(%eax)
		jmp    _027e79_jump

	_028829_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _027e66_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _027e66_jump
		mov    0x000028(%esi),%ax
		add    $0x000035,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00002b,%eax
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		movw   $0x000010,(%ecx)
		movw   $0x000010,(%eax)
		jmp    _027e79_jump

	_028869_jump:
		mov    0x000024(%esp),%ebx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01ddf8_func
		mov    (%esp),%eax
		movswl (%eax),%eax
		sub    $0x000013,%eax
		movswl 0x000000(%ebp),%esi
		sar    %eax
		add    %eax,%esi
		mov    0x000024(%esp),%eax
		mov    %si,0x000000(%ebp)
		movswl (%eax),%eax
		sub    $0x000013,%eax
		movswl (%edi),%esi
		sar    %eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,(%edi)
		movw   $0x000013,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000013,(%eax)
		jmp    _027e79_jump

	_0288b6_jump:
		mov    0x000024(%esp),%ecx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _01ddf8_func
		cmpb   $0x000001,0x000078(%esi)
		jne    _027e79_jump
		mov    (%esp),%eax
		movswl (%eax),%eax
		sub    $0x000013,%eax
		movswl 0x000000(%ebp),%esi
		sar    %eax
		add    %eax,%esi
		mov    0x000024(%esp),%eax
		mov    %si,0x000000(%ebp)
		movswl (%eax),%eax
		sub    $0x000013,%eax
		movswl (%edi),%esi
		sar    %eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,(%edi)
		movw   $0x000013,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x000013,(%eax)
		jmp    _027e79_jump



_028910_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		lea    0x000020(%esp),%ecx
		lea    0x000004(%esp),%ebx
		xor    %edx,%edx
		mov    0x000064(%eax),%ax
		mov    %edx,0x00000c(%esp)
		mov    %edx,0x000010(%esp)
		mov    %edx,0x00001c(%esp)
		mov    %edx,0x000024(%esp)
		lea    0x000018(%esp),%edx
		mov    %eax,0x000014(%esp)
		push   %edx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		push   %edx
		movswl %di,%edx
		call   _01e1b8_func
		mov    %eax,%edx
		test   %ax,%ax
		je     _028c17_jump
		mov    0x000014(%esp),%ebx
		cmp    $0x000051,%bx
		jb     _02898c_jump
		jbe    _02899b_jump
		cmp    $0x000064,%bx
		jb     _028bd9_jump
		jbe    _028b11_jump
		cmp    $0x0000d9,%bx
		je     _028b11_jump
		jmp    _028bd9_jump

	_02898c_jump:
		cmp    $0x000014,%bx
		je     _028a28_jump
		jmp    _028bd9_jump

	_02899b_jump:
		cmp    $0x000004,%di
		jb     _0289ae_jump
		jbe    _0289e1_jump
		cmp    $0x000005,%di
		je     _028a02_jump
		jmp    _028bd9_jump

	_0289ae_jump:
		cmp    $0x000003,%di
		jne    _028bd9_jump
		mov    $0x000004,%ecx
		mov    $0x000002,%esi
		mov    $0xfffffffc,%edi
		mov    $0xfffffff6,%eax
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x000010(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _028bd9_jump

	_0289e1_jump:
		mov    $0x000002,%edi
		xor    %esi,%esi
		mov    $0xfffffff6,%ebx
		mov    %esi,0x000024(%esp)
		mov    %edi,0x00001c(%esp)
		mov    %esi,0x000010(%esp)
		mov    %ebx,0x00000c(%esp)
		jmp    _028bd9_jump

	_028a02_jump:
		mov    $0x000002,%eax
		mov    $0xfffffffc,%ebx
		xor    %edi,%edi
		mov    $0xfffffff6,%ecx
		mov    %edi,0x000024(%esp)
		mov    %eax,0x00001c(%esp)
		mov    %ebx,0x000010(%esp)
		mov    %ecx,0x00000c(%esp)
		jmp    _028bd9_jump

	_028a28_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _028a34_jump
		cmpb   $0x000000,0x000070(%esi)
		je     _028a48_jump

	_028a34_jump:
		cmpb   $0x000001,0x000071(%esi)
		jne    _028ac3_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _028ac3_jump

	_028a48_jump:
		cmp    $0x000001,%di
		jb     _028a5b_jump
		jbe    _028a80_jump
		cmp    $0x000002,%di
		je     _028a9d_jump
		jmp    _028bd9_jump

	_028a5b_jump:
		test   %di,%di
		jne    _028bd9_jump
		mov    $0x00000a,%esi
		mov    $0x000022,%eax
		mov    $0x000020,%ebx
		mov    %edi,0x00001c(%esp)
		mov    %esi,0x000024(%esp)
		jmp    _028bd1_jump

	_028a80_jump:
		mov    $0x000004,%eax
		mov    $0x00001a,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000024(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x000008(%esp)
		jmp    _028bd9_jump

	_028a9d_jump:
		mov    $0x000004,%ebx
		mov    $0x000030,%esi
		mov    $0x000018,%edi
		xor    %ecx,%ecx
		mov    %ebx,0x000024(%esp)
		mov    %ecx,0x00001c(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _028bd9_jump

	_028ac3_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _028b00_jump
		cmpb   $0x000001,0x000070(%esi)
		jne    _028b00_jump
		mov    0x000028(%esi),%ax
		add    $0x000070,%eax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%esi),%ax
		add    $0x0000b8,%eax
		mov    $0x000020,%edi
		mov    %eax,0x000020(%esp)
		mov    $0x000010,%eax
		mov    %edi,0x000008(%esp)
		mov    %eax,0x000018(%esp)
		jmp    _028bd9_jump

	_028b00_jump:
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000008(%esp)
		mov    %ecx,0x000018(%esp)
		jmp    _028bd9_jump

	_028b11_jump:
		cmp    $0x000002,%di
		jb     _028b2c_jump
		jbe    _028b9a_jump
		cmp    $0x000003,%di
		je     _028bb8_jump
		jmp    _028bd9_jump

	_028b2c_jump:
		cmp    $0x000001,%di
		jne    _028bd9_jump
		cmpb   $0x000000,0x000071(%esi)
		jne    _028b74_jump
		mov    0x000070(%esi),%bl
		cmp    $0x000009,%bl
		je     _028b4e_jump
		cmp    $0x00000a,%bl
		je     _028b4e_jump
		cmp    $0x00000b,%bl
		jne    _028b74_jump

	_028b4e_jump:
		mov    $0xfffffff8,%eax
		mov    $0x000005,%ebx
		mov    $0x00001a,%ecx
		mov    $0x000008,%esi
		mov    %eax,0x000024(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %esi,0x000018(%esp)
		jmp    _028bd9_jump

	_028b74_jump:
		mov    $0x000001,%ebx
		mov    $0xfffffffb,%ecx
		mov    $0x000010,%esi
		mov    $0x00001e,%edi
		mov    %ebx,0x000024(%esp)
		mov    %ecx,0x00001c(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _028bd9_jump

	_028b9a_jump:
		mov    $0x000007,%esi
		xor    %ecx,%ecx
		mov    $0x000010,%edi
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _028bd9_jump

	_028bb8_jump:
		mov    $0x000002,%edi
		mov    $0x00000d,%eax
		xor    %esi,%esi
		mov    $0x000009,%ebx
		mov    %esi,0x000024(%esp)
		mov    %edi,0x00001c(%esp)

	_028bd1_jump:
		mov    %eax,0x000008(%esp)
		mov    %ebx,0x000018(%esp)

	_028bd9_jump:
		mov    0x000004(%esp),%eax
		mov    0x000024(%esp),%ecx
		add    %ecx,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00001c(%esp),%esi
		mov    0x000020(%esp),%eax
		mov    (%esp),%ebx
		add    %esi,%eax
		mov    %ax,(%ebx)
		mov    0x000010(%esp),%edi
		mov    0x000008(%esp),%eax
		mov    0x000038(%esp),%ebx
		add    %edi,%eax
		mov    %ax,(%ebx)
		mov    0x000018(%esp),%eax
		add    0x00000c(%esp),%eax
		mov    0x00003c(%esp),%ebx
		mov    %ax,(%ebx)

	_028c17_jump:
		mov    %edx,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_028c24_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %dx,0x000004(%esp)
		mov    %bx,(%esp)
		mov    0x000024(%esp),%eax
		mov    0x000064(%eax),%dx
		mov    $0xffffffff,%esi
		cmp    $0x000071,%dx
		jne    _028ce7_jump
		xor    %edx,%edx
		mov    0x00006f(%eax),%dl
		mov    %dx,0x000008(%esp)
		xor    %edx,%edx
		mov    0x00006f(%eax),%dl
		mov    _0a7ad0_data(,%edx,2),%dx
		mov    %dx,0x000010(%esp)
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _028ce7_jump
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		mov    _0a7b1e_data(,%edx,2),%ebx
		sar    $0x000010,%ebx
		push   %ebx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		mov    %ebx,0x000010(%esp)
		mov    0x00002c(%eax),%bx
		add    0x000010(%esp),%ebx
		mov    _0a7af6_data(,%edx,2),%ebp
		add    0x000014(%esp),%ebx
		sar    $0x000010,%ebp
		sub    _0a7b20_data(,%edx,2),%bx
		push   %ebp
		movswl %bx,%edx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%eax),%ebx
		mov    0x00006c(%eax),%dl
		sar    %ebp
		add    %ebx,%edx
		movswl %cx,%ecx
		sub    %ebp,%edx
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%esp),%edx
		push   %eax
		sar    $0x000010,%edx
		movswl %di,%eax
		call   _027cc0_func
		test   %ax,%ax
		je     _028ce7_jump
		mov    $0x000001,%esi

	_028ce7_jump:
		mov    %esi,%eax
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_028cf4_func:
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000044(%esp),%esi
		mov    %eax,0x000010(%esp)
		mov    %dx,0x00001c(%esp)
		mov    %bx,0x000020(%esp)
		mov    %cx,0x000004(%esp)
		xor    %edx,%edx
		mov    %dx,(%esp)
		mov    %dx,0x000024(%esp)
		mov    %dx,0x000028(%esp)
		mov    %dx,0x000008(%esp)
		mov    $0xffffffff,%eax
		mov    0x000060(%esi),%dx
		mov    %eax,0x00000c(%esp)
		test   %dx,%dx
		je     _028f5c_jump
		mov    %esi,%eax
		call   _027b60_func
		mov    0x000064(%esi),%di
		mov    %eax,0x000018(%esp)
		cmp    $0x000032,%di
		je     _028d57_jump
		cmp    $0x0000e3,%di
		jne    _028d76_jump

	_028d57_jump:
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x000070(%esi),%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _028d99_jump

	_028d76_jump:
		cmpw   $0x0000a5,0x000064(%esi)
		jne    _028d9d_jump
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%esi),%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _028d9d_jump

	_028d99_jump:
		decl   0x000018(%esp)

	_028d9d_jump:
		xor    %ecx,%ecx
		mov    0x000018(%esp),%edi
		mov    %cx,0x00002c(%esp)
		test   %di,%di
		jle    _0290e8_jump

	_028db1_jump:
		mov    0x00002a(%esp),%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		call   _027b78_func
		mov    0x000006(%eax),%cl
		mov    %eax,%edi
		test   $0x000004,%cl
		je     _028dd5_jump
		cmpw   $0x00005e,0x000010(%esp)
		jne    _028f39_jump

	_028dd5_jump:
		testb  $0x000002,0x000006(%edi)
		je     _028e89_jump
		xor    %eax,%eax
		mov    0x00006e(%esi),%al
		imul   $0x00000c,%eax,%edx
		mov    0x000004(%esi),%eax
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		and    $0x00003f,%dh
		xor    %ebx,%ebx
		and    $0x00ffff,%edx
		mov    0x00006f(%esi),%bl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000007(%edi),%dl
		cmpb   $0x000000,0x000003(%eax,%edx,4)
		je     _028ee5_jump
		mov    %esp,%eax
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00002c(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    %esi,%eax
		call   _01e1b8_func
		testb  $0x000008,0x000085(%esi)
		je     _028e57_jump
		xor    %eax,%eax
		mov    0x000024(%esp),%edx
		mov    0x000004(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    (%edi),%dx
		mov    0x000008(%esp),%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _028e65_jump

	_028e57_jump:
		mov    0x000008(%esp),%ecx
		mov    (%edi),%ax
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)

	_028e65_jump:
		mov    0x000028(%esp),%ecx
		mov    0x000002(%edi),%ax
		add    %eax,%ecx
		mov    %cx,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,(%esp)
		jmp    _028ee5_jump

	_028e89_jump:
		mov    0x000028(%esi),%ax
		mov    (%edi),%dx
		add    %edx,%eax
		mov    %ax,0x000008(%esp)
		mov    0x00002c(%esi),%ax
		mov    0x000002(%edi),%bx
		add    %ebx,%eax
		mov    %ax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,(%esp)
		testb  $0x000008,0x000085(%esi)
		je     _028ee5_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x00006c(%esi),%al
		mov    0x000022(%esp),%edx
		add    %ebx,%eax
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000008(%esp)

	_028ee5_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _027cc0_func
		test   %ax,%ax
		je     _028f39_jump
		xor    %eax,%eax
		mov    0x000007(%edi),%al
		mov    %eax,0x00000c(%esp)
		jmp    _0290e8_jump

	_028f39_jump:
		mov    0x00002c(%esp),%ebx
		inc    %ebx
		mov    0x000018(%esp),%ecx
		mov    %bx,0x00002c(%esp)
		cmp    %cx,%bx
		jl     _028db1_jump
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_028f5c_jump:
		mov    0x00007d(%esi),%ah
		cmp    $0x0000fe,%ah
		jne    _02900a_jump
		mov    %esp,%eax
		lea    0x000024(%esp),%ecx
		lea    0x000028(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _027dc4_func
		testb  $0x000008,0x000085(%esi)
		je     _028faa_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x00006c(%esi),%al
		mov    0x000022(%esp),%ebx
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000008(%esp)

	_028faa_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _027cc0_func
		test   %ax,%ax
		je     _028ff5_jump
		movswl %ax,%edx
		jmp    _028ffa_jump

	_028ff5_jump:
		mov    $0xffffffff,%edx

	_028ffa_jump:
		mov    %edx,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02900a_jump:
		cmp    $0x0000ff,%ah
		jne    _0290e8_jump
		xor    %edx,%edx
		mov    0x00006e(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x000008(%edx,%eax,4),%ax
		xor    %ebx,%ebx
		and    $0x00003f,%ah
		mov    %bx,0x000030(%esp)
		mov    %eax,0x000014(%esp)
		test   %ax,%ax
		jle    _0290e8_jump

	_029040_jump:
		mov    0x00002e(%esp),%edi
		sar    $0x000010,%edi
		mov    %esi,%eax
		mov    %edi,%edx
		call   _027b98_func
		test   %ax,%ax
		je     _0290d1_jump
		mov    %esp,%eax
		lea    0x000028(%esp),%ecx
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    %edi,%edx
		mov    %esi,%eax
		call   _028910_func
		test   %ax,%ax
		je     _0290d1_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _027cc0_func
		test   %ax,%ax
		je     _0290d1_jump
		mov    0x000030(%esp),%eax
		mov    %eax,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_0290d1_jump:
		mov    0x000030(%esp),%eax
		inc    %eax
		mov    0x000014(%esp),%edx
		mov    %ax,0x000030(%esp)
		cmp    %dx,%ax
		jl     _029040_jump

	_0290e8_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_0290f4_func:
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    0x000028(%esp),%esi
		mov    %ax,0x000014(%esp)
		mov    %edx,%edi
		mov    %bx,0x000018(%esp)
		mov    %cx,0x000010(%esp)
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x00007d(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		mov    %eax,%edx
		test   %ax,%ax
		je     _029172_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%ebx
		push   %eax
		mov    0x00000e(%esp),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000022(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _027cc0_func
		mov    %eax,%edx

	_029172_jump:
		test   %dx,%dx
		je     _02917e_jump
		xor    %eax,%eax
		mov    0x00007d(%esi),%al
		jmp    _029183_jump

	_02917e_jump:
		mov    $0xffffffff,%eax

	_029183_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02918c_func:
		push   %esi
		push   %edi
		mov    0x000010(%esp),%edi
		mov    %eax,%esi
		mov    %edx,%eax
		xor    %edx,%edx
		mov    0x00007d(%edi),%dl
		cmp    $0x0000fd,%dx
		jb     _0291ed_jump
		jbe    _0291ad_jump
		cmp    $0x0000ff,%dx
		jbe    _0291cc_jump
		jmp    _0291ed_jump

	_0291ad_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _028c24_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_0291cc_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		sar    $0x000010,%edx
		movswl %cx,%ecx
		push   %edx
		movswl %ax,%edx
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    %si,%ax
		call   _028cf4_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_0291ed_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _0290f4_func
		pop    %edi
		pop    %esi
		ret    $0x000008



_02920c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    0x000064(%eax),%ax
		cmp    $0x00009a,%ax
		jb     _029263_jump
		jbe    _029386_jump
		cmp    $0x0000a0,%ax
		jb     _02924a_jump
		jbe    _0294bc_jump
		cmp    $0x0000a9,%ax
		jb     _0294e8_jump
		jbe    _029313_jump
		cmp    $0x000102,%ax
		je     _0292ad_jump
		jmp    _0294e8_jump

	_02924a_jump:
		cmp    $0x00009b,%ax
		jbe    _0293c6_jump
		cmp    $0x00009f,%ax
		je     _029425_jump
		jmp    _0294e8_jump

	_029263_jump:
		cmp    $0x000051,%ax
		jb     _02928a_jump
		jbe    _029313_jump
		cmp    $0x00007d,%ax
		jb     _0294e8_jump
		jbe    _0292cc_jump
		cmp    $0x00008a,%ax
		je     _029346_jump
		jmp    _0294e8_jump

	_02928a_jump:
		cmp    $0x000010,%ax
		jb     _0294e8_jump
		cmp    $0x000011,%ax
		jbe    _0293fc_jump
		cmp    $0x000018,%ax
		je     _0293fc_jump
		jmp    _0294e8_jump

	_0292ad_jump:
		mov    $0x000001,%ecx
		xor    %ebx,%ebx
		mov    $0x0000ff,%esi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		jmp    _0294ee_jump

	_0292cc_jump:
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		mov    $0x000003,%ecx
		xor    %edi,%edi
		mov    $0x000004,%esi
		mov    %di,(%esp)
		mov    %ax,0x000002(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000006(%esp)
		mov    $0x0000ff,%edi
		mov    %si,0x000008(%esp)
		mov    %di,0x00000a(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_029313_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		xor    %eax,%eax
		mov    $0x0000ff,%esi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_029346_jump:
		mov    $0x000005,%edi
		mov    $0x000006,%eax
		mov    $0x000007,%ebx
		mov    $0x000008,%ecx
		mov    $0x0000ff,%esi
		mov    %di,(%esp)
		mov    %ax,0x000002(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000006(%esp)
		mov    %si,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_029386_jump:
		mov    $0x000001,%edi
		mov    $0x000002,%eax
		mov    $0x000003,%ebx
		mov    $0x000004,%ecx
		mov    $0x0000ff,%esi
		mov    %di,(%esp)
		mov    %ax,0x000002(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000006(%esp)
		mov    %si,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0293c6_jump:
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		mov    $0x000003,%ecx
		mov    $0x0000ff,%esi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0293fc_jump:
		mov    $0x000001,%eax
		xor    %edi,%edi
		mov    $0x0000ff,%ebx
		mov    %di,(%esp)
		mov    %ax,0x000002(%esp)
		mov    %bx,0x000004(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_029425_jump:
		testb  $0x000008,_0b937d_data
		je     _02946b_jump
		mov    $0x000004,%esi
		mov    $0x000005,%edi
		mov    $0x000006,%eax
		mov    $0x000007,%ebx
		mov    $0x000008,%ecx
		mov    %si,(%esp)
		mov    %di,0x000002(%esp)
		mov    %ax,0x000004(%esp)
		mov    %bx,0x000006(%esp)
		mov    $0x000009,%esi
		mov    %cx,0x000008(%esp)
		mov    %si,0x00000a(%esp)
		jmp    _0294a6_jump

	_02946b_jump:
		mov    $0x000009,%ecx
		mov    $0x000008,%esi
		mov    $0x000007,%edi
		mov    $0x000006,%eax
		mov    $0x000005,%ebx
		mov    %cx,(%esp)
		mov    %si,0x000002(%esp)
		mov    %di,0x000004(%esp)
		mov    %ax,0x000006(%esp)
		mov    $0x000004,%ecx
		mov    %bx,0x000008(%esp)
		mov    %cx,0x00000a(%esp)

	_0294a6_jump:
		movw   $0x0000ff,0x00000c(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0294bc_jump:
		mov    $0x000004,%edi
		mov    $0x000005,%eax
		mov    $0x0000ff,%ebx
		mov    %di,(%esp)
		mov    %ax,0x000002(%esp)
		mov    %bx,0x000004(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0294e8_jump:
		movw   $0x0000ff,(%esp)

	_0294ee_jump:
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_029500_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %bx,0x000008(%esp)
		xor    %ebx,%ebx
		mov    _0b9320_data,%cx
		mov    _0b9364_data,%bl
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    %cx,0x000004(%esp)
		mov    _0b9365_data,%bl
		mov    _0b9324_data,%cx
		add    %ebx,%ecx
		mov    %cx,(%esp)
		mov    %edx,%ebx
		mov    $0x000008,%edx
		add    %eax,%ebx
		mov    _0c3348_data,%cl
		dec    %ebx
		test   $0x000002,%cl
		je     _029550_jump
		mov    $0x000004,%edx

	_029550_jump:
		movswl %bx,%edi
		movswl %ax,%esi
		movswl %dx,%edx
		mov    %esi,%ebx
		lea    (%edi,%edx,1),%ecx
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _029578_jump
		cmp    %ecx,%eax
		jg     _029578_jump
		mov    $0x000001,%eax
		jmp    _02957a_jump

	_029578_jump:
		xor    %eax,%eax

	_02957a_jump:
		test   %eax,%eax
		jne    _029585_jump
		mov    $0x002710,%eax
		jmp    _0295d6_jump

	_029585_jump:
		mov    %edi,%ecx
		mov    %esi,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02959a_jump
		cmp    %ecx,%eax
		jg     _02959a_jump
		mov    $0x000001,%eax
		jmp    _02959c_jump

	_02959a_jump:
		xor    %eax,%eax

	_02959c_jump:
		test   %eax,%eax
		je     _0295bd_jump
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _0295b6_jump
		neg    %eax

	_0295b6_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0295bd_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _0295d3_jump
		neg    %eax

	_0295d3_jump:
		neg    %eax
		dec    %eax

	_0295d6_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0295e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    _0c3348_data,%ah
		mov    $0x000008,%edi
		test   $0x000002,%ah
		je     _029600_jump
		mov    $0x000004,%edi

	_029600_jump:
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000014(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		mov    0x000077(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _02962a_jump
		neg    %eax

	_02962a_jump:
		mov    _0a79ae_data(,%eax,2),%eax
		sar    $0x000010,%eax
		call   _0626d0_func
		movswl %ax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000009,%edx
		movswl %dx,%ebx
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000012(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		mov    0x00000c(%esp),%ecx
		add    %ebx,%eax
		mov    %dx,0x000008(%esp)
		mov    %ax,0x000014(%esp)
		mov    %eax,%ebx
		xor    %eax,%eax
		add    %edx,%ebx
		mov    0x000078(%esi),%al
		mov    _0b9320_data,%dx
		add    %eax,%ecx
		xor    %eax,%eax
		dec    %ebx
		mov    _0b9364_data,%al
		mov    %ecx,0x00000c(%esp)
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0b9324_data,%cx
		mov    _0b9365_data,%al
		movswl %dx,%edx
		add    %eax,%ecx
		movswl %bx,%eax
		mov    %ecx,0x000010(%esp)
		mov    %eax,(%esp)
		mov    0x000012(%esp),%ebx
		mov    (%esp),%ecx
		movswl %di,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _0296c8_jump
		cmp    %ecx,%eax
		jg     _0296c8_jump
		mov    $0x000001,%eax
		jmp    _0296ca_jump

	_0296c8_jump:
		xor    %eax,%eax

	_0296ca_jump:
		test   %eax,%eax
		je     _029852_jump
		mov    0x00000c(%esp),%eax
		sub    0x000010(%esp),%eax
		movswl %ax,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _0296e5_jump
		neg    %eax

	_0296e5_jump:
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _029852_jump
		mov    0x000012(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000004(%esp)
		movsbw 0x00007a(%esi),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _02971c_jump
		sar    %cl,%ax
		jmp    _029725_jump

	_02971c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_029725_jump:
		mov    0x000012(%esp),%ebx
		mov    (%esp),%ecx
		mov    %ax,0x000004(%esp)
		sar    $0x000010,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _029745_jump
		cmp    %ecx,%eax
		jg     _029745_jump
		mov    $0x000001,%eax
		jmp    _029747_jump

	_029745_jump:
		xor    %eax,%eax

	_029747_jump:
		test   %eax,%eax
		je     _029761_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _02975c_jump
		neg    %eax

	_02975c_jump:
		mov    %eax,0x000054(%esi)
		jmp    _02977c_jump

	_029761_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _029772_jump
		neg    %eax

	_029772_jump:
		mov    %eax,%edx
		mov    %eax,0x000054(%esi)
		neg    %edx
		mov    %edx,0x000054(%esi)

	_02977c_jump:
		cmpw   $0x000000,_0c30ce_data
		je     _029859_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		movswl %di,%ebx
		sar    %eax
		lea    (%eax,%ebx,1),%edx
		mov    0x000077(%esi),%eax
		sar    $0x000018,%eax
		imul   %edx,%eax
		push   $0x000040
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _0297b0_jump
		sar    %cl,%ax
		jmp    _0297b9_jump

	_0297b0_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0297b9_jump:
		mov    0x000010(%esp),%edx
		sub    %eax,%edx
		mov    %edx,%eax
		sub    _0c3166_data,%ax
		cwtl   
		mov    0x00000c(%esp),%ecx
		push   %eax
		mov    0x00001c(%esp),%eax
		add    %ecx,%eax
		mov    _0c3162_data,%dx
		add    %edi,%eax
		sub    %edx,%eax
		add    $0x000008,%eax
		movswl %ax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%ebx
		mov    0x000077(%esi),%eax
		sar    $0x000018,%eax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _029807_jump
		sar    %cl,%ax
		jmp    _029810_jump

	_029807_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_029810_jump:
		mov    0x000014(%esp),%ebx
		mov    _0c3166_data,%cx
		add    %ebx,%eax
		sub    %ecx,%eax
		movswl %ax,%ebx
		mov    0x00001c(%esp),%eax
		mov    _0c3162_data,%si
		sub    %edi,%eax
		sub    %esi,%eax
		add    $0x000008,%eax
		mov    %edx,%ecx
		cwtl   
		mov    _0c0f9c_data,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _03e0bc_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_029852_jump:
		movl   $0x002710,0x000054(%esi)

	_029859_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029864_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0c3348_data,%ah
		mov    %dx,0x00001c(%esp)
		test   $0x000002,%ah
		je     _02988a_jump
		movw   $0x000004,0x00001c(%esp)

	_02988a_jump:
		mov    $0x002710,%ebx
		xor    %eax,%eax
		mov    _0b9320_data,%dx
		mov    _0b9364_data,%al
		mov    0x000034(%esi),%cx
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000018(%esp)
		mov    _0b9365_data,%al
		mov    _0b9324_data,%dx
		xor    %edi,%edi
		add    %eax,%edx
		mov    _0b9342_data,%ax
		mov    %edx,0x000014(%esp)
		cmp    %cx,%ax
		jne    _0299b3_jump
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000078(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		mov    0x000064(%esi),%bx
		cmp    $0x00008a,%bx
		je     _029912_jump
		cmp    $0x00009a,%bx
		je     _029912_jump
		cmp    $0x00009b,%bx
		jne    _02992a_jump

	_029912_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		sub    $0x00000a,%edx
		add    $0x000005,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)

	_02992a_jump:
		cmpw   $0x00009f,0x000064(%esi)
		jne    _029997_jump
		cmpb   $0x000000,_0b9369_data
		jne    _029997_jump
		mov    0x00006f(%esi),%dh
		cmp    $0x000009,%dh
		jbe    _029997_jump
		cmp    $0x000028,%dh
		jae    _029997_jump
		xor    %eax,%eax
		mov    _0b9320_data,%ebx
		mov    _0b9364_data,%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %bx,%bx
		jle    _02997a_jump
		decl   _0b9320_data
		jmp    _029982_jump

	_02997a_jump:
		jge    _029982_jump
		incl   _0b9320_data

	_029982_jump:
		xor    %eax,%eax
		mov    _0b9320_data,%dx
		mov    _0b9364_data,%al
		add    %eax,%edx
		mov    %dx,0x000018(%esp)

	_029997_jump:
		mov    0x000006(%esp),%ebx
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _029500_func
		mov    %eax,%ebx

	_0299b3_jump:
		cmp    $0x002710,%bx
		jne    _029ab6_jump

	_0299be_jump:
		movswl %di,%edx
		mov    %esi,%eax
		call   _02920c_func
		inc    %edi
		mov    %ax,0x000010(%esp)
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0299d7_jump
		neg    %eax

	_0299d7_jump:
		cmp    $0x000007,%eax
		jle    _029ab6_jump
		cmpw   $0x0000ff,0x000010(%esp)
		je     _029ab6_jump
		mov    %esp,%eax
		mov    0x00000e(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    %esi,%eax
		call   _01e1b8_func
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000078(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		mov    0x000064(%esi),%bx
		cmp    $0x00008a,%bx
		je     _029a34_jump
		cmp    $0x00009a,%bx
		je     _029a34_jump
		cmp    $0x00009b,%bx
		jne    _029a4c_jump

	_029a34_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		sub    $0x00000a,%edx
		add    $0x000005,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)

	_029a4c_jump:
		mov    0x00000a(%esp),%ecx
		mov    0x000002(%esp),%ebx
		mov    0x00001a(%esp),%eax
		mov    0x000016(%esp),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		sar    $0x000010,%edx
		add    %eax,%ebx
		cmp    %ebx,%edx
		jg     _029a9a_jump
		sub    %eax,%ecx
		cmp    %ecx,%edx
		jl     _029a9a_jump
		mov    0x000014(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    0x000064(%esi),%ax
		sub    %ecx,%ebx
		cmp    $0x00009f,%ax
		jne    _029a9f_jump
		cmp    $0x000008,%bx
		jl     _029a9f_jump
		cmp    $0x00000b,%bx
		jge    _029a9f_jump
		xor    %ebx,%ebx
		jmp    _029a9f_jump

	_029a9a_jump:
		mov    $0x002710,%ebx

	_029a9f_jump:
		cmp    $0x002710,%bx
		je     _0299be_jump
		mov    0x000010(%esp),%al
		mov    %al,0x000079(%esi)
		jmp    _0299be_jump

	_029ab6_jump:
		movswl %bx,%eax
		mov    %eax,0x000054(%esi)
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029ac8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000085(%eax),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000008(%esp)
		andb   $0x0000f7,0x000085(%esi)
		mov    %esp,%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01e1b8_func
		mov    0x000008(%esp),%al
		mov    0x000085(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000085(%esi)
		mov    %dl,%dh
		or     %al,%dh
		mov    $0x000037,%ebx
		mov    %dh,0x000085(%esi)
		xor    %eax,%eax
		mov    0x000010(%esp),%edx
		mov    0x00000c(%esp),%ecx
		mov    0x000078(%esi),%al
		mov    %ebx,0x000004(%esp)
		add    %eax,%edx
		add    $0x000004,%ecx
		mov    %dx,0x000010(%esp)
		mov    %cx,0x00000c(%esp)
		mov    0x00000e(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    $0x000037,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _029500_func
		mov    %eax,%edx
		cmp    $0x002710,%ax
		je     _029b72_jump
		movb   $0x000002,0x000079(%esi)

	_029b72_jump:
		movswl %dx,%eax
		mov    %eax,0x000054(%esi)
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029b80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		cmpb   $0x000003,0x000070(%eax)
		je     _029b96_jump
		cmpb   $0x000006,0x000070(%esi)
		jne    _029c03_jump

	_029b96_jump:
		cmpb   $0x00000c,0x00006f(%esi)
		jae    _029c03_jump
		lea    0x000004(%esp),%eax
		mov    %esp,%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000078(%esi),%al
		add    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    $0x00002d,%ebx
		sub    $0x00002d,%eax
		mov    %dx,(%esp)
		movswl %ax,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    %ebx,0x000008(%esp)
		add    %edx,%eax
		mov    -0x000002(%esp),%ebx
		mov    %ax,0x00000c(%esp)
		sar    $0x000010,%ebx
		mov    0x00000a(%esp),%eax
		mov    $0x00002d,%edx
		sar    $0x000010,%eax
		call   _029500_func
		jmp    _029c08_jump

	_029c03_jump:
		mov    $0x002710,%eax

	_029c08_jump:
		mov    _0b9342_data,%dx
		cmp    0x000034(%esi),%dx
		jne    _029c54_jump
		cmpb   $0x000006,0x000070(%esi)
		jne    _029c54_jump
		cmpb   $0x00000b,0x00006f(%esi)
		jne    _029c54_jump
		mov    $0xffffffff,%edi
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		mov    %di,_0b9342_data
		call   _01dea8_func
		mov    _0b933a_data,%dx
		sub    $0x00000a,%edx
		mov    $0x002710,%eax
		mov    %dx,_0b933a_data

	_029c54_jump:
		cwtl   
		mov    %eax,0x000054(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029c64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		testb  $0x000008,_0a529e_data(,%eax,4)
		je     _029c8a_jump
		mov    %esi,%eax
		call   _029864_func
		jmp    _029d4e_jump

	_029c8a_jump:
		cmp    $0x00006d,%ax
		jne    _029ca0_jump
		mov    %esi,%eax
		call   _029ac8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_029ca0_jump:
		cmp    $0x000083,%ax
		jne    _029cb6_jump
		mov    %esi,%eax
		call   _029b80_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_029cb6_jump:
		cmp    $0x0000fe,%ax
		jne    _029ccc_jump
		mov    %esi,%eax
		call   _0295e0_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_029ccc_jump:
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x000078(%esi),%al
		add    %eax,%edi
		mov    %di,(%esp)
		mov    0x000064(%esi),%ax
		cmp    $0x000008,%ax
		je     _029d18_jump
		cmp    $0x000086,%ax
		je     _029d18_jump
		cmp    $0x0000a7,%ax
		je     _029d18_jump
		cmp    $0x0000b1,%ax
		je     _029d18_jump
		cmp    $0x000006,%ax
		jne    _029d30_jump

	_029d18_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%edx
		sub    $0x000002,%eax
		add    $0x000004,%edx
		mov    %ax,0x000008(%esp)
		mov    %dx,0x000004(%esp)

	_029d30_jump:
		mov    -0x000002(%esp),%ebx
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _029500_func
		cwtl   
		mov    %eax,0x000054(%esi)

	_029d4e_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029d58_func:
		push   %edx
		call   _06a0a8_func
		mov    $0x000001,%ah
		mov    _0c1155_data,%dl
		mov    %ah,_0c1159_data
		test   %dl,%dl
		jne    _029d84_jump
		xor    %dh,%dh
		mov    _0c1144_data,%eax
		mov    %dx,_0c1150_data
		movw   $0x000000,0x000040(%eax)

	_029d84_jump:
		pop    %edx
		ret    



_029d88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		xor    %ah,%ah
		mov    %ah,0x000010(%esp)
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    _0c1144_data,%eax
		call   _01e1b8_func
		mov    _0c1144_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jl     _029dec_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x00006d(%edx),%bl
		mov    0x000078(%edx),%al
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		sar    %eax
		add    %esi,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000028(%edx),%edi
		mov    0x00006c(%edx),%al
		add    %edi,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		jmp    _029e17_jump

	_029dec_jump:
		jge    _029e20_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x00006d(%edx),%bl
		mov    0x000078(%edx),%al
		add    %ebx,%eax
		sar    %eax
		add    0x00002c(%edx),%eax
		xor    %ebx,%ebx
		mov    0x000028(%edx),%ecx
		mov    0x00006c(%edx),%bl
		add    %ecx,%ebx
		sar    $0x000004,%eax
		sar    $0x000004,%ebx
		cwtl   
		movswl %bx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax

	_029e17_jump:
		call   _01ea94_func
		mov    %al,0x000010(%esp)

	_029e20_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		testb  $0x000002,_0a525d_data(%eax)
		je     _029e43_jump
		call   _029d58_func
		mov    $0x000001,%eax
		call   _069ca4_func
		jmp    _029fdc_jump

	_029e43_jump:
		mov    _0c2f48_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000004,%edx
		mov    _0b9410_data,%esi
		add    %ebx,%edx
		mov    _0c3012_data,%ax
		shl    $0x000003,%edx
		xor    %edi,%edi
		add    %edx,%esi
		test   %ax,%ax
		jle    _029fdc_jump

	_029e6f_jump:
		cmpw   $0x000000,_0c3156_data
		jne    _029fdc_jump
		cmpw   $0x000000,_0c3146_data
		jne    _029fdc_jump
		cmpb   $0x000000,_0c33c7_data
		jne    _029fdc_jump
		cmpb   $0x000000,_0c33c9_data
		jne    _029fdc_jump
		cmpb   $0x000000,0x000082(%esi)
		je     _029fb3_jump
		cmpb   $0x000000,0x00007a(%esi)
		je     _029fb3_jump
		xor    %ebx,%ebx
		mov    0x000071(%esi),%bl
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000070(%esi),%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		testb  $0x000008,0x000007(%ecx,%edx,1)
		je     _029fb3_jump
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    $0x00005e,%eax
		push   %esi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		push   %edx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _02918c_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _029fb3_jump
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		movswl %dx,%edx
		lea    0x000000(,%eax,4),%ebx
		xor    %ecx,%ecx
		add    %eax,%ebx
		mov    %esi,%eax
		mov    0x00007a(%esi),%cl
		call   *_0a63d4_data(,%ebx,4)
		xor    %edx,%edx
		call   _029d58_func
		mov    0x000071(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		movb   $0x000000,0x000075(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x000070(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00000b,%edx
		je     _029f6c_jump
		cmp    $0x00000a,%edx
		je     _029f6c_jump
		movb   $0x000000,0x000076(%esi)

	_029f6c_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		cmp    %cx,%ax
		jne    _029fdc_jump
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		shl    $0x000002,%eax
		testb  $0x000001,_0a52a0_data(%eax)
		je     _029fdc_jump
		testb  $0x000080,_0a529d_data(%eax)
		je     _029f99_jump
		mov    _0c3150_data,%ax
		jmp    _029f9d_jump

	_029f99_jump:
		mov    0x000034(%esi),%ax

	_029f9d_jump:
		movswl %ax,%edx
		mov    $0x0000d6,%eax
		call   _071068_func
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_029fb3_jump:
		inc    %edi
		movswl %di,%edx
		mov    _0c2f48_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000088,%edx,%edx
		mov    _0b9410_data,%esi
		add    %edx,%esi
		cmp    _0c3012_data,%di
		jl     _029e6f_jump

	_029fdc_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_029fe4_jump:
		ret    



_02a0a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    _0b9324_data,%edx
		mov    _0b9365_data,%bl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0c1126_data,%dx
		shl    $0x000004,%edx
		xor    %eax,%eax
		cmp    %edx,%ebx
		jge    _02a21a_jump
		mov    _0b9340_data,%ebx
		sar    $0x000010,%ebx
		mov    _0b934c_data,%edx
		cmp    $0xffffffff,%ebx
		jne    _02a0f6_jump
		lea    0x000000(,%edx,4),%eax
		mov    _0c112c_data,%ebx
		sub    %edx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		sete   %al
		xor    %ah,%ah

	_02a0f6_jump:
		test   %ax,%ax
		jne    _02a21a_jump
		xor    %eax,%eax
		mov    _0c1124_data,%ax
		sub    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ebx
		mov    _0c112c_data,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,1)
		sete   %bl
		xor    %bh,%bh
		mov    %ebx,%eax
		test   %bx,%bx
		jne    _02a21a_jump
		lea    0x000001(%edx),%ecx
		lea    -0x000001(%edx),%ebx
		cmpb   $0x000002,_0b9369_data
		jne    _02a148_jump
		cmpw   $0x000000,_0b9338_data
		je     _02a177_jump

	_02a148_jump:
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c112c_data,%ebx
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		je     _02a16e_jump
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		jne    _02a175_jump

	_02a16e_jump:
		mov    $0x000001,%eax
		jmp    _02a177_jump

	_02a175_jump:
		xor    %eax,%eax

	_02a177_jump:
		test   %ax,%ax
		jne    _02a21a_jump
		testb  $0x000002,_0c3348_data
		jne    _02a1b4_jump
		xor    %ecx,%ecx
		mov    _0b9369_data,%cl
		mov    _0b9304_data,%ebx
		shl    $0x000002,%ecx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    _0b9368_data,%bl
		testb  $0x000040,0x000007(%ecx,%ebx,8)
		jne    _02a1b4_jump
		mov    $0x000001,%ebx
		jmp    _02a1b6_jump

	_02a1b4_jump:
		xor    %ebx,%ebx

	_02a1b6_jump:
		test   %ebx,%ebx
		je     _02a21a_jump
		xor    %ebx,%ebx
		mov    _0c1124_data,%bx
		sub    %ebx,%edx
		mov    %edx,%eax
		sub    %ebx,%edx
		test   %edx,%edx
		jge    _02a1dc_jump

	_02a1cd_jump:
		xor    %ebx,%ebx
		mov    _0c1124_data,%bx
		add    %ebx,%edx
		test   %edx,%edx
		jl     _02a1cd_jump

	_02a1dc_jump:
		test   %eax,%eax
		jge    _02a1ed_jump
		xor    %ebx,%ebx
		mov    _0c1124_data,%bx
		add    %ebx,%eax
		jmp    _02a1dc_jump

	_02a1ed_jump:
		mov    %edx,%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		mov    _0c112c_data,%ebx
		cmpb   $0x000008,0x000002(%ebx,%edx,2)
		je     _02a20f_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		jne    _02a218_jump

	_02a20f_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a218_jump:
		xor    %eax,%eax

	_02a21a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a220_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0b9324_data,%edx
		mov    _0b9365_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1126_data,%ax
		shl    $0x000004,%eax
		cmp    %eax,%edx
		jge    _02a32d_jump
		mov    _0b934c_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c112c_data,%eax
		add    %edx,%eax
		mov    0x000002(%eax),%dl
		cmp    $0x000018,%dl
		jne    _02a2b7_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		cmpb   $0x000001,_0c33cf_data
		je     _02a294_jump
		movb   $0x000001,_0c33cf_data
		call   _070a20_func
		call   _01d728_func

	_02a294_jump:
		xor    %ecx,%ecx
		mov    _0b9324_data,%edx
		mov    %cx,_0b933a_data
		add    $0x000005,%edx
		mov    %cx,_0b9338_data
		mov    %edx,_0b9324_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a2b7_jump:
		cmpb   $0x000018,_0b9361_data
		jne    _02a302_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		cmpb   $0x000001,_0c33cf_data
		je     _02a2ee_jump
		movb   $0x000001,_0c33cf_data
		call   _070a20_func
		call   _01d728_func

	_02a2ee_jump:
		xor    %edx,%edx
		mov    %dx,_0b933a_data
		mov    %dx,_0b9338_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a302_jump:
		cmp    $0x000019,%dl
		jne    _02a32d_jump
		mov    $0x00001f,%ebx
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		mov    _0c3166_data,%ax
		mov    %ax,_0c3122_data
		mov    %ax,_0c3118_data

	_02a32d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a334_func:
		push   %ebx
		push   %edx
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0b933a_data
		mov    %dx,_0b9338_data
		mov    %ah,_0b9379_data
		pop    %edx
		pop    %ebx
		ret    



_02a364_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		test   %al,%al
		je     _02a3b9_jump
		call   _06efbc_func
		xor    %ebx,%ebx
		mov    _0b9320_data,%dx
		mov    _0b9364_data,%bl
		add    %edx,%ebx

	_02a384_jump:
		xor    %eax,%eax
		mov    _0b9324_data,%edx
		mov    _0b9365_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		cmp    $0x00000a,%al
		jne    _02a3b1_jump
		decl   _0b9324_data
		jmp    _02a384_jump

	_02a3b1_jump:
		xor    %ah,%ah
		mov    %ah,_0b935e_data

	_02a3b9_jump:
		mov    _0b9369_data,%dl
		cmp    $0x000006,%dl
		jne    _02a3f5_jump
		mov    $0x000008,%ebx
		mov    $0x000006,%edx
		mov    $_0b92f8_data,%eax
		xor    %ecx,%ecx
		call   _01dea8_func
		mov    %cx,_0b933a_data
		xor    %bh,%bh
		mov    %cx,_0b9338_data
		mov    %bh,_0c1158_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02a3f5_jump:
		testb  $0x000004,_0b937d_data
		je     _02a626_jump
		cmp    $0x000003,%dl
		jne    _02a417_jump
		mov    _0b9368_data,%bh
		cmp    $0x000016,%bh
		je     _02a41e_jump
		cmp    $0x000020,%bh
		je     _02a41e_jump

	_02a417_jump:
		mov    $0x000001,%eax
		jmp    _02a420_jump

	_02a41e_jump:
		xor    %eax,%eax

	_02a420_jump:
		test   %eax,%eax
		je     _02a626_jump
		cmpb   $0x000002,_0b9369_data
		jne    _02a43a_jump
		cmpb   $0x00001f,_0b9368_data
		je     _02a441_jump

	_02a43a_jump:
		mov    $0x000001,%eax
		jmp    _02a443_jump

	_02a441_jump:
		xor    %eax,%eax

	_02a443_jump:
		test   %eax,%eax
		je     _02a626_jump
		xor    %edx,%edx
		mov    _0b9369_data,%dl
		mov    _0b9304_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0b9368_data,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000040,0x000007(%ebx,%eax,1)
		je     _02a49f_jump
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _0230e0_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		je     _02a49f_jump
		mov    $0x00003d,%ebx
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		jmp    _02a4ae_jump

	_02a49f_jump:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax

	_02a4ae_jump:
		call   _01dea8_func
		xor    %ebx,%ebx
		mov    %bx,_0c3106_data
		test   %ecx,%ecx
		jne    _02a50a_jump
		cmpb   $0x000000,_0b9369_data
		jne    _02a4d2_jump
		cmpb   $0x00003d,_0b9368_data
		je     _02a4d9_jump

	_02a4d2_jump:
		mov    $0x000001,%eax
		jmp    _02a4db_jump

	_02a4d9_jump:
		xor    %eax,%eax

	_02a4db_jump:
		test   %eax,%eax
		je     _02a50a_jump
		testb  $0x000008,_0b937d_data
		je     _02a4f3_jump
		movw   $0x00fffe,_0b9338_data
		jmp    _02a4fc_jump

	_02a4f3_jump:
		movw   $0x000002,_0b9338_data

	_02a4fc_jump:
		movw   $0x00fffd,_0b933a_data
		jmp    _02a5c5_jump

	_02a50a_jump:
		cmpb   $0x000000,_0b9369_data
		jne    _02a520_jump
		cmpb   $0x00003d,_0b9368_data
		je     _02a5c5_jump

	_02a520_jump:
		cmpw   $0x000064,0x000064(%ecx)
		jne    _02a537_jump
		testb  $0x000008,0x000085(%ecx)
		jne    _02a56e_jump
		mov    $0xffffffff,%edx
		jmp    _02a573_jump

	_02a537_jump:
		mov    0x00003e(%ecx),%edx
		mov    _0b9336_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02a557_jump
		mov    $0x000001,%eax
		jg     _02a557_jump
		neg    %eax

	_02a557_jump:
		mov    %eax,%edx
		test   %ax,%ax
		jne    _02a573_jump
		testb  $0x000008,_0b937d_data
		je     _02a56e_jump
		mov    $0xffffffff,%edx
		jmp    _02a573_jump

	_02a56e_jump:
		mov    $0x000001,%edx

	_02a573_jump:
		xor    %eax,%eax
		mov    0x000064(%ecx),%ax
		testb  $0x000004,_0a529e_data(,%eax,4)
		je     _02a58a_jump
		mov    $0x000005,%eax
		jmp    _02a58f_jump

	_02a58a_jump:
		mov    $0x000002,%eax

	_02a58f_jump:
		cmp    $0x000001,%dx
		jne    _02a59d_jump
		mov    %ax,_0b9338_data
		jmp    _02a5b6_jump

	_02a59d_jump:
		movswl %dx,%edx
		cmp    $0xffffffff,%edx
		jne    _02a5b6_jump
		mov    %eax,%edi
		mov    %ax,_0b9338_data
		neg    %edi
		mov    %di,_0b9338_data

	_02a5b6_jump:
		inc    %eax
		mov    %ax,_0b933a_data
		neg    %eax
		mov    %ax,_0b933a_data

	_02a5c5_jump:
		mov    $0x000001,%ch
		mov    $0xffffffff,%edi
		xor    %esi,%esi
		xor    %al,%al
		xor    %dl,%dl
		xor    %ebx,%ebx
		mov    %ch,_0c33da_data
		mov    %si,_0c3140_data
		mov    %di,_0c315c_data
		mov    %al,_0b936d_data
		mov    %al,_0b936e_data
		mov    %di,_0b9342_data
		xor    %dh,%dh
		mov    %al,_0c1158_data
		mov    %dx,_0c3112_data
		mov    _0c3347_data,%dh
		mov    %bx,_0b9340_data
		test   $0x000008,%dh
		je     _02a61f_jump
		mov    %ch,_0c33ce_data

	_02a61f_jump:
		xor    %eax,%eax
		call   _06b680_func

	_02a626_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02a62c_func:
		push   %ecx
		push   %esi
		testb  $0x000008,0x000085(%eax)
		jne    _02a646_jump
		xor    %ecx,%ecx
		mov    (%edx),%si
		mov    0x00007e(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		jmp    _02a653_jump

	_02a646_jump:
		movswl (%ebx),%esi
		movswl (%edx),%ecx
		sar    %esi
		add    %esi,%ecx
		mov    %cx,(%edx)

	_02a653_jump:
		movswl (%ebx),%edx
		mov    0x00007e(%eax),%al
		sar    %edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    %ax,(%ebx)
		pop    %esi
		pop    %ecx
		ret    

_02a668_switch:
		.long   _02a9e6_case
		.long   _02a8c5_case
		.long   _02a99b_case
		.long   _02a766_case
		.long   _02a766_case
		.long   _02a923_case




_02a680_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		mov    0x000064(%esi),%ax
		cmp    $0x00007b,%ax
		jb     _02a7d5_jump
		jbe    _02a8ab_jump
		cmp    $0x0000b8,%ax
		jb     _02a70e_jump
		jbe    _02ac5b_jump
		cmp    $0x0000e1,%ax
		jb     _02a6ef_jump
		jbe    _02ac40_jump
		cmp    $0x0000e2,%ax
		jbe    _02ac5b_jump
		cmp    $0x00010d,%ax
		jb     _02a757_jump
		cmp    $0x00010e,%ax
		jbe    _02a865_jump
		jmp    _02a757_jump

	_02a6ef_jump:
		cmp    $0x0000c3,%ax
		jb     _02a757_jump
		jbe    _02ac91_jump
		cmp    $0x0000d4,%ax
		je     _02ad09_jump
		jmp    _02a757_jump

	_02a70e_jump:
		cmp    $0x0000a8,%ax
		jb     _02a73d_jump
		cmp    $0x0000a9,%ax
		jbe    _02aa2f_jump
		cmp    $0x0000ac,%ax
		jb     _02a757_jump
		jbe    _02abae_jump
		cmp    $0x0000ae,%ax
		je     _02ac40_jump
		jmp    _02a757_jump

	_02a73d_jump:
		cmp    $0x000084,%ax
		jb     _02a757_jump
		jbe    _02aa56_jump
		cmp    $0x000093,%ax
		je     _02aa9a_jump

	_02a757_jump:
		lea    0x00000c(%esp),%ebx
		lea    0x000008(%esp),%edx

	_02a75f_jump:
		mov    %esi,%eax
		call   _02a62c_func

	_02a766_case:
		mov    _0c313c_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c312a_data,%eax
		sar    $0x000010,%eax
		mov    0x000006(%esp),%ecx
		push   %eax
		mov    _0c3128_data,%eax
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000006(%esp),%edx
		push   %eax
		mov    _0c3126_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _027cc0_func
		test   %ax,%ax
		je     _02ad4f_jump
		mov    0x00007f(%esi),%ah
		cmp    $0x000002,%ah
		jae    _02ad36_jump
		test   %ah,%ah
		jne    _02ad24_jump
		movb   $0x000001,0x00007f(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a7d5_jump:
		cmp    $0x000035,%ax
		jb     _02a82b_jump
		jbe    _02a88c_jump
		cmp    $0x000051,%ax
		jb     _02a80c_jump
		jbe    _02aa2f_jump
		cmp    $0x000064,%ax
		jb     _02a757_jump
		jbe    _02abcd_jump
		cmp    $0x000074,%ax
		je     _02ab3c_jump
		jmp    _02a757_jump

	_02a80c_jump:
		cmp    $0x000038,%ax
		jb     _02a757_jump
		jbe    _02abae_jump
		cmp    $0x00003d,%ax
		je     _02aabd_jump
		jmp    _02a757_jump

	_02a82b_jump:
		cmp    $0x00000e,%ax
		jb     _02a856_jump
		jbe    _02aaf5_jump
		cmp    $0x000014,%ax
		jb     _02a757_jump
		jbe    _02aa2f_jump
		cmp    $0x000015,%ax
		je     _02a766_case
		jmp    _02a757_jump

	_02a856_jump:
		cmp    $0x00000c,%ax
		je     _02ab15_jump
		jmp    _02a757_jump

	_02a865_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x00006c(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		sar    %eax
		sub    %eax,%edx
		mov    %dx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		mov    %ax,0x00000c(%esp)
		jmp    _02a766_case

	_02a88c_jump:
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		mov    %eax,%ebx
		add    %eax,%edx
		add    $0x0000c8,%ebx
		mov    %dx,(%esp)
		mov    %bx,0x000004(%esp)
		jmp    _02a766_case

	_02a8ab_jump:
		mov    0x000079(%esi),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _02a766_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02a668_switch(,%eax,4)

	_02a8c5_case:
		cmpb   $0x000000,0x000071(%esi)
		jne    _02a766_case
		cmpb   $0x000000,0x000070(%esi)
		jne    _02a766_case
		xor    %eax,%eax
		mov    0x000004(%esp),%ecx
		mov    0x00007e(%esi),%al
		add    %eax,%ecx
		mov    %cx,0x000004(%esp)
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x00007e(%esi),%al
		sub    %eax,%edi
		mov    %di,(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%edx
		mov    0x00007e(%esi),%al
		add    %eax,%edx
		mov    %dx,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		mov    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)
		jmp    _02a766_case

	_02a923_case:
		mov    0x000071(%esi),%ah
		cmp    $0x000001,%ah
		jne    _02a766_case
		cmp    0x000070(%esi),%ah
		jne    _02a766_case
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000006(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		dec    %edx
		add    %edx,%eax
		mov    0x000002(%esp),%edx
		mov    %ax,0x000008(%esp)
		mov    $0x000014,%eax
		sar    $0x000010,%edx
		mov    %ax,0x00000c(%esp)
		mov    -0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x00007e(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		testb  $0x000008,0x000085(%esi)
		jne    _02a766_case
		mov    0x00000c(%esp),%eax
		sub    %ax,0x000008(%esp)
		jmp    _02a766_case

	_02a99b_case:
		mov    0x000004(%esp),%ecx
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x00007e(%esi),%al
		mov    0x00000a(%esp),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		sub    %eax,%edi
		mov    0x000006(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)
		mov    0x00000c(%esp),%eax
		mov    %eax,%edx
		add    %eax,%edx
		mov    %di,(%esp)
		mov    %dx,0x00000c(%esp)
		xor    %eax,%eax
		mov    %ecx,%ebx
		mov    0x00007e(%esi),%al
		add    %eax,%ebx
		mov    %bx,0x000004(%esp)
		jmp    _02a766_case

	_02a9e6_case:
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    0x00007e(%esi),%al
		mov    (%esp),%ecx
		add    %ebx,%eax
		sub    %eax,%ecx
		mov    %cx,(%esp)
		xor    %eax,%eax
		mov    %ebx,%edi
		mov    0x00007e(%esi),%al
		add    %eax,%edi
		mov    %di,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		mov    0x00000c(%esp),%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    %dx,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x000008(%esp),%ebx
		mov    0x00007e(%esi),%al
		sub    %eax,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _02a766_case

	_02aa2f_jump:
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		mov    0x00000c(%esp),%ecx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x000008(%esp),%edi
		mov    0x00007e(%esi),%al
		sub    %eax,%edi
		mov    %di,0x000008(%esp)
		jmp    _02a766_case

	_02aa56_jump:
		testb  $0x000008,0x000085(%esi)
		je     _02aa68_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		jmp    _02aa71_jump

	_02aa68_jump:
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		neg    %edx

	_02aa71_jump:
		mov    0x000006(%esp),%eax
		mov    (%esp),%ecx
		mov    0x000004(%esp),%edi
		sar    $0x000010,%eax
		sub    $0x000032,%ecx
		add    $0x000032,%edi
		mov    %cx,(%esp)
		add    %edx,%eax
		mov    %di,0x000004(%esp)
		mov    %ax,0x000008(%esp)
		jmp    _02a766_case

	_02aa9a_jump:
		cmpb   $0x000000,0x00007a(%esi)
		je     _02a766_case
		mov    _0c1126_data,%ax
		xor    %ebx,%ebx
		shl    $0x000004,%eax
		mov    %bx,(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _02a766_case

	_02aabd_jump:
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %edx,%edx
		mov    0x00007e(%esi),%dl
		mov    -0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		lea    0x00000c(%esp),%ebx
		sub    %edx,%eax
		lea    0x000008(%esp),%edx
		mov    %ax,(%esp)
		jmp    _02a75f_jump

	_02aaf5_jump:
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,(%esp)

	_02ab15_jump:
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		mov    0x00000c(%esp),%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    %dx,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x000008(%esp),%ebx
		mov    0x00007e(%esi),%al
		sub    %eax,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _02a766_case

	_02ab3c_jump:
		testb  $0x000008,0x000085(%esi)
		jne    _02ab64_jump
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sar    %edx
		sar    %eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		jmp    _02ab74_jump

	_02ab64_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx

	_02ab74_jump:
		add    %edx,%eax
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		mov    0x000002(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		mov    %ax,0x00000c(%esp)
		mov    -0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		jmp    _02a766_case

	_02abae_jump:
		lea    0x00000c(%esp),%ebx
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _02a62c_func
		mov    0x000004(%esp),%edi
		add    %edi,%edi
		mov    %di,0x000004(%esp)
		jmp    _02a766_case

	_02abcd_jump:
		testb  $0x000008,0x000085(%esi)
		jne    _02abe8_jump
		xor    %eax,%eax
		mov    0x000008(%esp),%ecx
		mov    0x00007e(%esi),%al
		sub    %eax,%ecx
		mov    %cx,0x000008(%esp)
		jmp    _02ac05_jump

	_02abe8_jump:
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000006(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    $0x000096,%edx
		add    %edx,%eax
		mov    %ax,0x000008(%esp)

	_02ac05_jump:
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		add    $0x000096,%eax
		xor    %edx,%edx
		mov    %ax,0x00000c(%esp)
		mov    0x000002(%esp),%eax
		mov    0x00007e(%esi),%dl
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		mov    %ax,0x000004(%esp)
		jmp    _02a766_case

	_02ac40_jump:
		lea    0x00000c(%esp),%ebx
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _02a62c_func
		movw   $0x000096,0x000004(%esp)
		jmp    _02a766_case

	_02ac5b_jump:
		lea    0x00000c(%esp),%ebx
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02a62c_func
		mov    0x000008(%esp),%edi
		mov    (%esp),%eax
		mov    %cx,0x000004(%esp)
		add    $0x000046,%edi
		add    $0x000032,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,(%esp)
		jmp    _02a766_case

	_02ac91_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _02aca9_jump
		mov    0x000070(%esi),%dl
		cmp    $0x000018,%dl
		je     _02acb5_jump
		cmp    $0x00001e,%dl
		je     _02acb5_jump
		cmp    $0x00000b,%dl
		je     _02acb5_jump

	_02aca9_jump:
		cmpb   $0x000001,0x000071(%esi)
		jne    _02acdc_jump
		cmpb   $0x000002,0x000070(%esi)
		jne    _02acdc_jump

	_02acb5_jump:
		mov    $0x00000a,%eax
		mov    0x000008(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    %ax,0x000004(%esp)
		sub    $0x000028,%edx
		add    $0x000050,%ebx
		mov    %dx,0x000008(%esp)
		mov    %bx,0x00000c(%esp)
		jmp    _02a766_case

	_02acdc_jump:
		mov    $0x0000c8,%ebx
		mov    0x000008(%esp),%ecx
		mov    0x00000c(%esp),%edi
		mov    %bx,0x000004(%esp)
		sub    $0x000082,%ecx
		add    $0x000104,%edi
		mov    %cx,0x000008(%esp)
		mov    %di,0x00000c(%esp)
		jmp    _02a766_case

	_02ad09_jump:
		lea    0x00000c(%esp),%ebx
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _02a62c_func
		movw   $0x000032,0x000004(%esp)
		jmp    _02a766_case

	_02ad24_jump:
		cmp    $0x000001,%ah
		jne    _02ad64_jump
		movb   $0x000002,0x00007f(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ad36_jump:
		mov    %ah,%dl
		inc    %dl
		mov    %dl,0x00007f(%esi)
		cmp    $0x000014,%dl
		jne    _02ad64_jump
		movb   $0x000002,0x00007f(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ad4f_jump:
		mov    0x000064(%esi),%cx
		movb   $0x000000,0x00007f(%esi)
		cmp    $0x000015,%cx
		jne    _02ad64_jump
		andb   $0x0000fe,0x000085(%esi)

	_02ad64_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ad70_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x000064(%eax),%ax
		mov    %edx,_0a7d34_data
		cmp    $0x00006b,%ax
		jb     _02aeb5_jump
		jbe    _02afdc_jump
		cmp    $0x0000bc,%ax
		jb     _02ae2d_jump
		jbe    _02b096_jump
		cmp    $0x0000fa,%ax
		jb     _02ade7_jump
		jbe    _02b096_jump
		cmp    $0x000107,%ax
		jb     _02add8_jump
		jbe    _02affa_jump
		cmp    $0x00010b,%ax
		jb     _02b154_jump
		jbe    _02b096_jump
		cmp    $0x000115,%ax
		je     _02b096_jump
		jmp    _02b154_jump

	_02add8_jump:
		cmp    $0x000102,%ax
		je     _02b096_jump
		jmp    _02b154_jump

	_02ade7_jump:
		cmp    $0x0000e6,%ax
		jb     _02ae18_jump
		jbe    _02b0a1_jump
		cmp    $0x0000eb,%ax
		jb     _02b154_jump
		jbe    _02b096_jump
		cmp    $0x0000f3,%ax
		je     _02b096_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ae18_jump:
		cmp    $0x0000e5,%ax
		je     _02b096_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ae2d_jump:
		cmp    $0x00008e,%ax
		jb     _02ae7f_jump
		jbe    _02b096_jump
		cmp    $0x0000a1,%ax
		jb     _02ae6a_jump
		jbe    _02b096_jump
		cmp    $0x0000a5,%ax
		jb     _02b154_jump
		jbe    _02b0c6_jump
		cmp    $0x0000af,%ax
		je     _02b096_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ae6a_jump:
		cmp    $0x000091,%ax
		je     _02b096_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ae7f_jump:
		cmp    $0x00007b,%ax
		jb     _02aea0_jump
		jbe    _02b100_jump
		cmp    $0x00007d,%ax
		je     _02b096_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02aea0_jump:
		cmp    $0x00006d,%ax
		je     _02b096_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02aeb5_jump:
		cmp    $0x00002d,%ax
		jb     _02af51_jump
		jbe    _02b096_jump
		cmp    $0x00003f,%ax
		jb     _02af1b_jump
		jbe    _02b096_jump
		cmp    $0x000052,%ax
		jb     _02aefc_jump
		jbe    _02b096_jump
		cmp    $0x000065,%ax
		jb     _02b154_jump
		jbe    _02b096_jump
		cmp    $0x000069,%ax
		jb     _02b154_jump
		jmp    _02b096_jump

	_02aefc_jump:
		cmp    $0x000044,%ax
		jb     _02b154_jump
		cmp    $0x000045,%ax
		jbe    _02b096_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02af1b_jump:
		cmp    $0x000039,%ax
		jb     _02af3c_jump
		jbe    _02b065_jump
		cmp    $0x00003c,%ax
		je     _02b138_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02af3c_jump:
		cmp    $0x00002f,%ax
		je     _02b096_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02af51_jump:
		cmp    $0x000010,%ax
		jb     _02afa7_jump
		cmp    $0x000011,%ax
		jbe    _02b096_jump
		cmp    $0x000019,%ax
		jb     _02af92_jump
		cmp    $0x00001d,%ax
		jbe    _02b096_jump
		cmp    $0x000029,%ax
		jb     _02b154_jump
		jbe    _02afdc_jump
		cmp    $0x00002a,%ax
		je     _02b096_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02af92_jump:
		cmp    $0x000016,%ax
		je     _02b096_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02afa7_jump:
		cmp    $0x000001,%ax
		jb     _02afc8_jump
		jbe    _02b096_jump
		cmp    $0x000009,%ax
		je     _02b0c6_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02afc8_jump:
		test   %ax,%ax
		je     _02b0c6_jump
		mov    %ecx,%eax
		call   _01e4c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02afdc_jump:
		mov    0x000085(%ecx),%dh
		mov    $0x000002,%ebx
		and    $0x0000f7,%dh
		mov    %ebx,_0a7d34_data
		mov    %dh,0x000085(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02affa_jump:
		mov    %ecx,%eax
		call   _073334_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $_0a0670_data,%eax
		call   _072ffc_func
		cmp    %ax,%dx
		je     _02b036_jump
		mov    $_0a0678_data,%eax
		call   _072ffc_func
		cmp    %ax,%dx
		je     _02b036_jump
		mov    $_0a0680_data,%eax
		call   _072ffc_func
		cmp    %ax,%dx
		jne    _02b15b_jump

	_02b036_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		call   _07382c_func
		test   %eax,%eax
		je     _02b04b_jump
		mov    %edx,%eax
		call   _0733d4_func

	_02b04b_jump:
		mov    0x000085(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000085(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b065_jump:
		mov    0x000078(%ecx),%bh
		test   %bh,%bh
		je     _02b15b_jump
		mov    %bh,%al
		and    $0x000001,%al
		and    $0x000001,%al
		mov    0x000085(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000085(%ecx)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000085(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b096_jump:
		andb   $0x0000f7,0x000085(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b0a1_jump:
		mov    0x00007b(%ecx),%al
		mov    0x000085(%ecx),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000085(%ecx)
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,0x000085(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b0c6_jump:
		mov    %ecx,%eax
		call   _01e4c4_func
		testb  $0x000008,0x000085(%ecx)
		je     _02b0eb_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _065368_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b0eb_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _065368_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b100_jump:
		mov    0x000079(%ecx),%al
		cmp    $0x000002,%al
		jb     _02b113_jump
		cmp    $0x000003,%al
		jbe    _02b15b_jump
		cmp    $0x000006,%al
		jb     _02b113_jump
		cmp    $0x000007,%al
		jbe    _02b15b_jump

	_02b113_jump:
		mov    %ecx,%eax
		call   _01e4c4_func
		testb  $0x000008,0x000085(%ecx)
		je     _02b0eb_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _065368_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b138_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    $0x000007,%edx
		call   _01e4c4_func
		mov    %ecx,%eax
		call   _065368_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b154_jump:
		mov    %ecx,%eax
		call   _01e4c4_func

	_02b15b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b160_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000052(%eax),%dx
		mov    0x000034(%eax),%bx
		mov    %edx,%ecx
		cmp    %bx,%dx
		je     _02b1ee_jump

	_02b177_jump:
		movswl %cx,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000064(%ebx),%ax
		testb  $0x000002,_0a529e_data(,%eax,4)
		je     _02b1a7_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _0754d4_func
		test   %al,%al
		jne    _02b1d0_jump

	_02b1a7_jump:
		mov    %ebx,%eax
		call   _062e90_func
		mov    0x000085(%ebx),%dh
		or     $0x000004,%dh
		mov    %ebx,%eax
		mov    %dh,0x000085(%ebx)
		mov    $0x000001,%edx
		call   _05a608_func
		mov    %ebx,%eax
		call   _02ad70_func

	_02b1d0_jump:
		mov    0x000032(%ebx),%eax
		mov    _0c1d74_data,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		mov    (%edx,%eax,2),%cx
		mov    %ebx,%eax
		call   _05e0c8_func
		cmp    %cx,%si
		jne    _02b177_jump

	_02b1ee_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b1f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		xor    %dl,%dl
		mov    %dl,(%esp)
		mov    0x000052(%eax),%dx
		mov    0x000034(%eax),%cx
		mov    %edx,%ebx
		cmp    %cx,%dx
		je     _02b267_jump

	_02b20e_jump:
		movswl %bx,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		add    %eax,%edx
		cmpw   $0x000114,0x000064(%edx)
		jne    _02b233_jump
		mov    %edx,%eax
		mov    $0x000001,%cl
		call   _0736a0_func
		mov    %cl,(%esp)

	_02b233_jump:
		mov    0x000085(%edx),%ch
		and    $0x0000fb,%ch
		mov    %edx,%eax
		mov    %ch,0x000085(%edx)
		call   _07d3c4_func
		mov    %ebx,%ecx
		mov    0x000032(%edx),%eax
		mov    _0c1d74_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%bx
		mov    %edx,%eax
		call   _05e0c8_func
		cmp    %bx,%cx
		jne    _02b20e_jump

	_02b267_jump:
		mov    (%esp),%al
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b274_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000052(%eax),%dx
		mov    0x000034(%eax),%bx
		mov    %edx,%ecx
		cmp    %bx,%dx
		je     _02b2e1_jump

	_02b287_jump:
		movswl %cx,%ebx
		imul   $0x000088,%ebx,%ebx
		mov    _0b9410_data,%eax
		add    %eax,%ebx
		mov    %ebx,%eax
		call   _062e90_func
		orb    $0x000004,0x000085(%ebx)
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		mov    $0x000001,%edx
		call   _075568_func
		mov    %ebx,%eax
		call   _05a608_func
		mov    %ebx,%eax
		call   _02ad70_func
		mov    0x000032(%ebx),%eax
		mov    _0c1d74_data,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		mov    (%edx,%eax,2),%cx
		mov    %ebx,%eax
		call   _05e0c8_func
		cmp    %cx,%si
		jne    _02b287_jump

	_02b2e1_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b2e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		xor    %dl,%dl
		mov    %dl,(%esp)
		mov    0x000052(%eax),%dx
		mov    0x000034(%eax),%cx
		mov    %edx,%ebx
		cmp    %cx,%dx
		je     _02b366_jump

	_02b302_jump:
		movswl %bx,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		add    %eax,%edx
		cmpw   $0x000114,0x000064(%edx)
		jne    _02b327_jump
		mov    %edx,%eax
		mov    $0x000001,%cl
		call   _0736a0_func
		mov    %cl,(%esp)

	_02b327_jump:
		mov    0x000085(%edx),%ch
		mov    0x000032(%edx),%eax
		and    $0x0000fb,%ch
		sar    $0x000010,%eax
		mov    %ch,0x000085(%edx)
		call   _075530_func
		mov    %edx,%eax
		call   _07d3c4_func
		mov    %ebx,%ecx
		mov    0x000032(%edx),%eax
		mov    _0c1d74_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%bx
		mov    %edx,%eax
		call   _05e0c8_func
		cmp    %bx,%cx
		jne    _02b302_jump

	_02b366_jump:
		mov    (%esp),%al
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b370_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c2f48_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		mov    _0c3012_data,%dx
		xor    %esi,%esi
		test   %dx,%dx
		jle    _02b426_jump

	_02b3a0_jump:
		xor    %edx,%edx
		mov    0x000064(%eax),%dx
		testb  $0x000004,_0a529d_data(,%edx,4)
		jne    _02b3fa_jump
		xor    %edx,%edx
		mov    0x000071(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x000070(%eax),%dl
		testb  $0x000020,0x000007(%ebx,%edx,8)
		je     _02b3fa_jump
		mov    _0c312a_data,%ecx
		mov    _0c3128_data,%ebx
		mov    _0c3126_data,%edx
		push   %eax
		mov    _0c313c_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02918c_func

	_02b3fa_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0c2f48_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		mov    _0c3012_data,%bx
		add    %edx,%eax
		cmp    %bx,%si
		jl     _02b3a0_jump

	_02b426_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b42c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c2f48_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		mov    _0b9410_data,%esi
		add    %edx,%eax
		xor    %edi,%edi
		shl    $0x000003,%eax
		mov    _0c3012_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jle    _02b675_jump

	_02b45e_jump:
		cmpw   $0x000000,_0c3156_data
		jne    _02b675_jump
		cmpw   $0x000000,_0c3146_data
		jne    _02b675_jump
		cmpb   $0x000000,_0c33c7_data
		jne    _02b675_jump
		cmpb   $0x000000,_0c33c9_data
		jne    _02b675_jump
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x000070(%esi),%dl
		testb  $0x000020,0x000007(%eax,%edx,8)
		je     _02b649_jump
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		shl    $0x000002,%eax
		testb  $0x000010,_0a529f_data(%eax)
		jne    _02b5dc_jump
		cmpb   $0x000000,_0b9379_data
		jne    _02b649_jump
		mov    _0b9352_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _02b649_jump
		xor    %edx,%edx
		mov    _0b9369_data,%dl
		mov    _0b9304_data,%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0b9368_data,%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		testb  $0x000008,0x000007(%ecx,%edx,1)
		je     _02b649_jump
		testb  $0x000004,_0a529d_data(%eax)
		jne    _02b649_jump
		cmpw   $0x000093,0x000064(%esi)
		jne    _02b539_jump
		cmpb   $0x000000,0x00007a(%esi)
		je     _02b539_jump
		mov    $0xffffffff,%eax
		jmp    _02b568_jump

	_02b539_jump:
		mov    _0c313c_data,%eax
		mov    _0c312a_data,%ecx
		mov    _0c3128_data,%ebx
		mov    _0c3126_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02918c_func

	_02b568_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02b649_jump
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		imul   $0x000014,%eax,%edx
		mov    %esi,%eax
		call   *_0a63d8_data(%edx)
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		testb  $0x000008,_0a529d_data(,%eax,4)
		je     _02b649_jump
		mov    _0b9352_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02b649_jump
		cmpb   $0x000003,_0b9369_data
		jne    _02b5ba_jump
		cmpb   $0x000020,_0b9368_data
		je     _02b5c1_jump

	_02b5ba_jump:
		mov    $0x000001,%eax
		jmp    _02b5c3_jump

	_02b5c1_jump:
		xor    %eax,%eax

	_02b5c3_jump:
		test   %eax,%eax
		je     _02b649_jump
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02a364_func
		jmp    _02b675_jump

	_02b5dc_jump:
		cmpb   $0x000003,_0b9369_data
		jne    _02b5ee_jump
		cmpb   $0x000020,_0b9368_data
		je     _02b649_jump

	_02b5ee_jump:
		mov    0x000064(%esi),%dx
		cmp    $0x000051,%dx
		je     _02b5ff_jump
		cmp    $0x0000a9,%dx
		jne    _02b603_jump

	_02b5ff_jump:
		xor    %eax,%eax
		jmp    _02b632_jump

	_02b603_jump:
		mov    _0c313c_data,%eax
		mov    _0c312a_data,%ecx
		mov    _0c3128_data,%ebx
		mov    _0c3126_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02918c_func

	_02b632_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02b649_jump
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		imul   $0x000014,%eax,%edx
		mov    %esi,%eax
		call   *_0a63d8_data(%edx)

	_02b649_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0c2f48_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%esi
		mov    _0c3012_data,%bx
		add    %eax,%esi
		cmp    %bx,%di
		jl     _02b45e_jump

	_02b675_jump:
		cmpb   $0x000000,_0b9379_data
		je     _02b683_jump
		call   _02a334_func

	_02b683_jump:
		mov    _0b9352_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _02b697_jump
		decw   _0b9354_data

	_02b697_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b6a0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000064(%edx),%ax
		testb  $0x000010,_0a529f_data(,%eax,4)
		je     _02b746_jump
		xor    %eax,%eax
		mov    0x000071(%edx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%edx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x000070(%edx),%al
		testb  $0x000020,0x000007(%ebx,%eax,8)
		je     _02b746_jump
		cmpb   $0x000003,_0b9369_data
		jne    _02b6ed_jump
		cmpb   $0x000020,_0b9368_data
		je     _02b6f4_jump

	_02b6ed_jump:
		mov    $0x000001,%eax
		jmp    _02b6f6_jump

	_02b6f4_jump:
		xor    %eax,%eax

	_02b6f6_jump:
		test   %eax,%eax
		je     _02b746_jump
		mov    _0b9354_data,%bx
		cmp    $0x00003c,%bx
		jge    _02b738_jump
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		jne    _02b738_jump
		mov    $0x000001,%eax
		call   _02a364_func
		mov    _0c3130_data,%dx
		cmp    $0x000003,%dx
		je     _02b746_jump
		cmp    $0x000004,%dx
		je     _02b746_jump
		movw   $0x00003c,_0b9354_data
		pop    %edx
		pop    %ebx
		ret    

	_02b738_jump:
		xor    %eax,%eax
		call   _02a364_func
		mov    %bx,_0b9354_data

	_02b746_jump:
		pop    %edx
		pop    %ebx
		ret    



_02b74c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		xor    %ah,%ah
		lea    0x000010(%esp),%ecx
		mov    %ah,0x000024(%esp)
		lea    0x000020(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %edi,%eax
		call   _01ddf8_func
		mov    0x000064(%edi),%dx
		cmp    $0x000008,%dx
		je     _02b78e_jump
		cmp    $0x000086,%dx
		je     _02b78e_jump
		cmp    $0x0000a7,%dx
		jne    _02b7c2_jump

	_02b78e_jump:
		mov    0x000014(%esp),%esi
		mov    0x000004(%esp),%eax
		mov    0x000010(%esp),%edx
		mov    0x000020(%esp),%ebx
		add    $0x00000a,%esi
		add    $0x000014,%eax
		sub    $0x000014,%edx
		sub    $0x000019,%ebx
		mov    %si,0x000014(%esp)
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000010(%esp)
		mov    %bx,0x000020(%esp)
		jmp    _02b7f0_jump

	_02b7c2_jump:
		mov    0x000014(%esp),%eax
		mov    0x000004(%esp),%edx
		mov    0x000010(%esp),%ebx
		mov    0x000020(%esp),%ecx
		add    %esi,%eax
		add    %esi,%edx
		mov    %ax,0x000014(%esp)
		add    %esi,%esi
		mov    %dx,0x000004(%esp)
		sub    %esi,%ebx
		sub    %esi,%ecx
		mov    %bx,0x000010(%esp)
		mov    %cx,0x000020(%esp)

	_02b7f0_jump:
		mov    _0c2f48_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%esi
		shl    $0x000003,%eax
		xor    %ecx,%ecx
		add    %eax,%esi
		mov    _0c3012_data,%ax
		mov    %cx,0x00001c(%esp)
		test   %ax,%ax
		jle    _02bb00_jump

	_02b821_jump:
		cmp    %esi,%edi
		je     _02bac7_jump
		mov    0x000064(%esi),%ax
		test   %ax,%ax
		jbe    _02b841_jump
		cmp    $0x0000d6,%ax
		je     _02b988_jump
		jmp    _02bac0_jump

	_02b841_jump:
		mov    0x000071(%esi),%cl
		cmp    $0x000002,%cl
		je     _02bac0_jump
		test   %cl,%cl
		jne    _02b857_jump
		cmpb   $0x000003,0x000070(%esi)
		je     _02b85e_jump

	_02b857_jump:
		mov    $0x000001,%ebx
		jmp    _02b860_jump

	_02b85e_jump:
		xor    %ebx,%ebx

	_02b860_jump:
		test   %ebx,%ebx
		je     _02bac0_jump
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%esi),%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _02bac0_jump
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		test   %ax,%ax
		je     _02bac0_jump
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    0x00001e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _027cc0_func
		test   %ax,%ax
		je     _02bac0_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		movb   $0x000004,0x000079(%esi)
		movw   $0x000000,0x00004c(%esi)
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000085(%esi),%bh
		movb   $0x00000b,0x000078(%esi)
		or     $0x000020,%bh
		mov    %bh,0x000085(%esi)
		mov    _0b9342_data,%ax
		cmp    0x000034(%edi),%ax
		jne    _02b93e_jump
		call   _06caa4_func

	_02b93e_jump:
		cmpb   $0x000002,0x000074(%esi)
		jne    _02b96a_jump
		testb  $0x000008,0x000085(%esi)
		je     _02b959_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _02b963_jump

	_02b959_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02b963_jump:
		mov    %esi,%eax
		call   _065368_func

	_02b96a_jump:
		mov    $0x000009,%edx
		mov    %edi,%eax
		call   _01de98_func
		mov    $0x000001,%al
		movl   $0x000000,0x000024(%edi)
		mov    %al,0x000024(%esp)
		jmp    _02bac0_jump

	_02b988_jump:
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		test   %ax,%ax
		je     _02bac0_jump
		cmpw   $0x000068,0x000064(%edi)
		jne    _02bac0_jump
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    0x00001e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _027cc0_func
		test   %ax,%ax
		je     _02bac0_jump
		cmpb   $0x000002,0x000071(%esi)
		jne    _02ba0e_jump
		cmpb   $0x000006,0x000070(%esi)
		je     _02ba15_jump

	_02ba0e_jump:
		mov    $0x000001,%eax
		jmp    _02ba17_jump

	_02ba15_jump:
		xor    %eax,%eax

	_02ba17_jump:
		test   %eax,%eax
		je     _02bac0_jump
		testb  $0x000008,0x000085(%edi)
		je     _02ba6e_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x00006c(%esi),%al
		mov    0x000028(%edi),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x00006c(%edi),%dl
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _02ba4c_jump
		mov    $0x000001,%eax
		jg     _02ba4c_jump
		neg    %eax

	_02ba4c_jump:
		test   %eax,%eax
		jl     _02ba6e_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %edi,%eax
		movb   $0x000001,0x000081(%esi)
		call   _065368_func
		movw   $0x000008,0x000040(%esi)

	_02ba6e_jump:
		testb  $0x000008,0x000085(%edi)
		jne    _02bac0_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x00006c(%esi),%al
		lea    (%eax,%ecx,1),%edx
		mov    0x000028(%edi),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x00006c(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02ba9e_jump
		mov    $0x000001,%eax
		jg     _02ba9e_jump
		neg    %eax

	_02ba9e_jump:
		test   %eax,%eax
		jge    _02bac0_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %edi,%eax
		movb   $0x000001,0x000081(%esi)
		call   _065368_func
		movw   $0x00fff8,0x000040(%esi)

	_02bac0_jump:
		cmpb   $0x000000,0x000024(%esp)
		jne    _02bb00_jump

	_02bac7_jump:
		mov    0x00001c(%esp),%edx
		inc    %edx
		mov    %dx,0x00001c(%esp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    _0c2f48_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%esi
		mov    _0c3012_data,%bx
		add    %eax,%esi
		cmp    %bx,%dx
		jl     _02b821_jump

	_02bb00_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02bb0c_func:
		push   %edx
		cmpb   $0x000001,0x00007b(%eax)
		jne    _02bb1b_jump
		xor    %dh,%dh
		mov    %dh,_0b9372_data

	_02bb1b_jump:
		call   _02b6a0_func
		pop    %edx
		ret    



_02bb24_func:
		push   %edx
		cmpb   $0x000001,0x00007b(%eax)
		jne    _02bb33_jump
		xor    %dh,%dh
		mov    %dh,_0b9372_data

	_02bb33_jump:
		call   _02b6a0_func
		pop    %edx
		ret    



_02bb40_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ecx
		movswl %bx,%ebx
		mov    0x00002c(%eax),%esi
		add    %ebx,%esi
		xor    %ebx,%ebx
		sar    $0x000004,%esi
		mov    _0c1124_data,%bx
		imul   %ebx,%esi
		mov    0x000028(%eax),%edi
		movswl %cx,%ebx
		add    %edi,%ebx
		sar    $0x000004,%ebx
		add    %esi,%ebx
		mov    0x000058(%eax),%ebp
		movswl %bx,%ebx
		xor    %edx,%edx
		cmp    %ebp,%ebx
		je     _02bb7e_jump
		mov    $0x000001,%edx
		mov    %ebx,0x000058(%eax)

	_02bb7e_jump:
		mov    %edx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02bb88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    0x000040(%eax),%di
		mov    $0x0000ff,%ah
		xor    %edx,%edx
		mov    %ah,0x000004(%esp)
		mov    0x000064(%ecx),%ax
		mov    %dx,(%esp)
		cmp    $0x00007b,%ax
		jb     _02bc1f_jump
		jbe    _02bbfa_jump
		cmp    $0x0000ac,%ax
		jne    _02bc1f_jump
		xor    %edx,%edx
		mov    0x000071(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _02bc1f_jump
		mov    $0x00000f,%bh
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    %bh,0x000004(%esp)
		mov    $0x000003,%ebx
		call   _01dea8_func
		mov    $0x000005,%ebx
		mov    $0xfffffffd,%esi
		mov    %bx,(%esp)
		jmp    _02bc1f_jump

	_02bbfa_jump:
		testb  $0x000002,0x000081(%ecx)
		je     _02bc1f_jump
		mov    $0x000001,%ah
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		mov    %ah,0x000004(%esp)
		mov    %ecx,%eax
		mov    $0xfffffffd,%esi
		call   _01dea8_func

	_02bc1f_jump:
		cmpb   $0x0000ff,0x000004(%esp)
		je     _02bc5a_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000004(%esp),%dl
		call   _065368_func
		movb   $0x000000,0x000075(%ecx)
		mov    %di,0x000040(%ecx)
		mov    (%esp),%al
		mov    0x00002c(%ecx),%edx
		mov    %si,0x000042(%ecx)
		sub    $0x00000c,%edx
		mov    %al,0x000076(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01ec9c_func

	_02bc5a_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02bc64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		call   _01deb4_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _01df9c_func
		movswl %di,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _02bcb0_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02bb40_func
		test   %ax,%ax
		je     _02bcb0_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _065368_func

	_02bcb0_jump:
		mov    0x000085(%ecx),%ah
		and    $0x0000f7,%ah
		mov    0x000074(%ecx),%dl
		mov    %ah,0x000085(%ecx)
		cmp    $0x000014,%dl
		jne    _02bcd7_jump
		mov    0x00005c(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_02bcd7_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02bce0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		testb  $0x000080,_0c3347_data
		je     _02bdcb_jump
		cmpw   $0x000003,_0c3130_data
		je     _02bdcb_jump
		xor    %eax,%eax
		mov    _0b9324_data,%edx
		mov    _0b9365_data,%al
		mov    0x00002c(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x00006d(%ecx),%dl
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02bd20_jump
		neg    %eax

	_02bd20_jump:
		cmp    $0x0000fa,%eax
		jge    _02bdcb_jump
		call   _06de30_func
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c310a_data
		mov    %ecx,%eax
		call   _07d20c_func
		cwtl   
		mov    %ax,0x00004e(%ecx)
		cmp    $0x000100,%eax
		jg     _02bd58_jump
		jne    _02bd60_jump
		testb  $0x000008,_0b937d_data
		jne    _02bd60_jump

	_02bd58_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _02bd66_jump

	_02bd60_jump:
		movw   $0x000001,0x000052(%ecx)

	_02bd66_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _02bd80_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _02bd80_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _065368_func

	_02bd80_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _02bd9a_jump
		cmpb   $0x000002,0x000070(%ecx)
		jne    _02bd9a_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _065368_func

	_02bd9a_jump:
		xor    %ah,%ah
		mov    _0c1144_data,%ecx
		mov    %ah,_0c1156_data
		mov    %ah,_0c1155_data
		mov    0x000085(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		xor    %eax,%eax
		mov    %dh,0x000085(%ecx)
		call   _069ca4_func

	_02bdcb_jump:
		pop    %ecx
		pop    %ebx
		ret    



_02bdd0_func:
		push   %ebx
		push   %edx
		cmpb   $0x000001,0x000071(%eax)
		jne    _02bdf0_jump
		movw   $0x000000,0x000042(%eax)
		xor    %ebx,%ebx
		xor    %edx,%edx
		movw   $0x000000,0x000040(%eax)
		call   _01dea8_func
		pop    %edx
		pop    %ebx
		ret    

	_02bdf0_jump:
		cmpw   $0x00000a,0x000064(%eax)
		jne    _02be09_jump
		cmpb   $0x000000,0x000071(%eax)
		jne    _02be09_jump
		cmpb   $0x000000,0x000070(%eax)
		jne    _02be09_jump
		movw   $0x000000,0x000042(%eax)

	_02be09_jump:
		pop    %edx
		pop    %ebx
		ret    



_02be0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		mov    0x000064(%ecx),%dx
		cmp    $0x000001,%ax
		je     _02be9e_jump
		cmp    $0x000002,%ax
		je     _02be9e_jump
		cmp    $0x00000b,%ax
		je     _02be9e_jump
		cmp    $0x000016,%ax
		je     _02be9e_jump
		cmp    $0x000003,%ax
		je     _02be9e_jump
		cmp    $0x000009,%ax
		je     _02be9e_jump
		cmp    $0x000004,%ax
		je     _02be9e_jump
		cmp    $0x000005,%ax
		je     _02be9e_jump
		cmp    $0x000006,%ax
		je     _02be9e_jump
		cmp    $0x00000f,%ax
		je     _02be9e_jump
		cmp    $0x000010,%ax
		je     _02be9e_jump
		cmp    $0x000011,%ax
		je     _02be9e_jump
		cmp    $0x00000c,%dx
		je     _02be8c_jump
		cmp    $0x00000e,%dx
		je     _02be8c_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01dea8_func

	_02be8c_jump:
		mov    %ecx,%eax
		call   _05a530_func
		mov    %ecx,%eax
		call   _023aac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02be9e_jump:
		cmp    $0x000003,%ax
		je     _02beaa_jump
		cmp    $0x000006,%ax
		jne    _02bec3_jump

	_02beaa_jump:
		mov    0x000085(%ecx),%ah
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%ah
		mov    %ah,0x000085(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02bec3_jump:
		cmp    $0x00000b,%ax
		je     _02bed5_jump
		cmp    $0x000002,%ax
		je     _02bed5_jump
		cmp    $0x000016,%ax
		jne    _02bf12_jump

	_02bed5_jump:
		cmp    $0x00000e,%dx
		jb     _02beef_jump
		jbe    _02bef5_jump
		cmp    $0x00003c,%dx
		jb     _02bf12_jump
		jbe    _02bf00_jump
		cmp    $0x00003d,%dx
		je     _02bf0b_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02beef_jump:
		cmp    $0x00000c,%dx
		jne    _02bf12_jump

	_02bef5_jump:
		mov    %ecx,%eax
		call   _0268e8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02bf00_jump:
		mov    %ecx,%eax
		call   _0274b4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02bf0b_jump:
		mov    %ecx,%eax
		call   _02767c_func

	_02bf12_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02bf18_func:
		push   %edx
		mov    0x000064(%eax),%dx
		cmp    $0x00000a,%dx
		jb     _02bf2d_jump
		jbe    _02bf35_jump
		cmp    $0x000018,%dx
		je     _02bf74_jump
		pop    %edx
		ret    

	_02bf2d_jump:
		cmp    $0x000001,%dx
		je     _02bf57_jump
		pop    %edx
		ret    

	_02bf35_jump:
		cmpb   $0x000000,0x000071(%eax)
		jne    _02bfbd_jump
		cmpb   $0x000000,0x000070(%eax)
		jne    _02bfbd_jump
		cmpb   $0x000003,0x000074(%eax)
		jne    _02bf6c_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02bf57_jump:
		mov    0x000074(%eax),%dl
		cmp    $0x000003,%dl
		jne    _02bf67_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02bf67_jump:
		cmp    $0x000004,%dl
		jne    _02bfbd_jump

	_02bf6c_jump:
		movw   $0x000002,0x000042(%eax)
		pop    %edx
		ret    

	_02bf74_jump:
		cmpb   $0x000002,0x000074(%eax)
		je     _02bfbd_jump
		mov    0x000048(%eax),%dx
		dec    %edx
		mov    %dx,0x000048(%eax)
		test   %dx,%dx
		jle    _02bfa5_jump
		mov    0x000074(%eax),%dh
		cmp    $0x000003,%dh
		jne    _02bf98_jump
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_02bf98_jump:
		cmp    $0x000004,%dh
		jne    _02bfbd_jump
		movw   $0x000001,0x000042(%eax)
		pop    %edx
		ret    

	_02bfa5_jump:
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000048(%eax)
		mov    0x00002c(%eax),%dx
		movb   $0x000002,0x000074(%eax)
		mov    %dx,0x00003e(%eax)

	_02bfbd_jump:
		pop    %edx
		ret    



_02bfc0_func:
		cmpw   $0x000000,0x000064(%eax)
		jne    _02bfda_jump
		cmpb   $0x000001,0x000071(%eax)
		jne    _02bfda_jump
		cmpb   $0x00000b,0x000070(%eax)
		jne    _02bfda_jump
		andb   $0x0000ef,0x000085(%eax)

	_02bfda_jump:
		ret    



_02bfdc_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000071(%eax),%bl
		call   _02bfc0_func
		mov    0x000074(%edx),%al
		cmp    $0x000003,%al
		jb     _02c00a_jump
		cmp    $0x000004,%al
		jbe    _02c062_jump
		cmp    $0x000014,%al
		jb     _02c07c_jump
		jbe    _02c06c_jump
		pop    %edx
		pop    %ebx
		ret    

	_02c00a_jump:
		cmp    $0x000001,%al
		jbe    _02c018_jump
		mov    %edx,%eax
		call   _02bdd0_func
		pop    %edx
		pop    %ebx
		ret    

	_02c018_jump:
		test   %al,%al
		jne    _02c025_jump
		andb   $0x0000f7,0x000085(%edx)
		jmp    _02c02c_jump

	_02c025_jump:
		orb    $0x000008,0x000085(%edx)

	_02c02c_jump:
		cmp    $0x000001,%bx
		jne    _02c043_jump
		mov    %edx,%eax
		call   _05a530_func
		mov    %edx,%eax
		call   _023aac_func
		pop    %edx
		pop    %ebx
		ret    

	_02c043_jump:
		cmp    $0x000002,%bx
		jne    _02c053_jump
		mov    %edx,%eax
		call   _05a530_func
		pop    %edx
		pop    %ebx
		ret    

	_02c053_jump:
		test   %bx,%bx
		jne    _02c07c_jump
		mov    %edx,%eax
		call   _02be0c_func
		pop    %edx
		pop    %ebx
		ret    

	_02c062_jump:
		mov    %edx,%eax
		call   _02bf18_func
		pop    %edx
		pop    %ebx
		ret    

	_02c06c_jump:
		mov    0x00005c(%edx),%bx
		mov    %bx,0x000040(%edx)
		mov    0x00004a(%edx),%bx
		mov    %bx,0x000042(%edx)

	_02c07c_jump:
		pop    %edx
		pop    %ebx
		ret    

_02c080_switch:
		.long   _02c0c6_case
		.long   _02c0ec_case
		.long   _02c0de_case
		.long   _02c122_case
		.long   _02c122_case
		.long   _02c104_case




_02c098_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		cmpw   $0x000091,0x000064(%eax)
		jne    _02c126_jump
		mov    0x000070(%eax),%al
		cmp    $0x000005,%al
		ja     _02c122_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02c080_switch(,%eax,4)

	_02c0c6_case:
		mov    0x00005c(%esi),%cx
		dec    %cx
		mov    %cx,0x00005c(%esi)
		jne    _02c122_case
		movb   $0x000003,0x000070(%esi)
		movw   $0x00001e,0x00005c(%esi)
		jmp    _02c122_case

	_02c0de_case:
		mov    0x00005c(%esi),%di
		dec    %di
		mov    %di,0x00005c(%esi)
		jne    _02c122_case
		jmp    _02c110_jump

	_02c0ec_case:
		mov    0x00005c(%esi),%dx
		dec    %dx
		mov    %dx,0x00005c(%esi)
		jne    _02c122_case
		movb   $0x000002,0x000070(%esi)
		movw   $0x000005,0x00005c(%esi)
		jmp    _02c122_case

	_02c104_case:
		mov    0x00005c(%esi),%bx
		dec    %bx
		mov    %bx,0x00005c(%esi)
		jne    _02c122_case

	_02c110_jump:
		movb   $0x000000,0x000070(%esi)
		mov    0x000050(%esi),%ax
		movw   $0x000064,0x000050(%esi)
		mov    %ax,0x00005c(%esi)

	_02c122_case:
		movb   $0x000000,0x000077(%esi)

	_02c126_jump:
		mov    _0b9320_data,%ax
		sub    0x000028(%esi),%ax
		mov    0x00002c(%esi),%bx
		mov    %eax,%edx
		mov    _0b9324_data,%ax
		sub    %ebx,%eax
		mov    0x000064(%esi),%cx
		mov    %eax,%ebx
		add    $0x000020,%edx
		add    $0x000019,%ebx
		cmp    $0x000091,%cx
		jne    _02c157_jump
		add    $0x000014,%edx
		add    $0x00000a,%ebx

	_02c157_jump:
		test   %dx,%dx
		setg   %al
		mov    %al,(%esp)
		test   %bx,%bx
		setg   %al
		mov    %al,0x000004(%esp)
		cmpb   $0x000000,(%esp)
		jne    _02c172_jump
		neg    %edx

	_02c172_jump:
		cmpb   $0x000000,0x000004(%esp)
		jne    _02c17b_jump
		neg    %ebx

	_02c17b_jump:
		cmp    $0x0000c8,%dx
		jle    _02c1b4_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _02c190_jump
		sar    %cl,%ax
		jmp    _02c199_jump

	_02c190_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02c199_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _02c1a9_jump
		sar    %cl,%ax
		jmp    _02c1b2_jump

	_02c1a9_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02c1b2_jump:
		mov    %eax,%ebx

	_02c1b4_jump:
		test   %bx,%bx
		jne    _02c1e2_jump
		cmpb   $0x000000,(%esp)
		je     _02c1c9_jump
		mov    $0x00001b,%ecx
		jmp    _02c288_jump

	_02c1c9_jump:
		test   %dx,%dx
		je     _02c1d8_jump
		mov    $0x000009,%ecx
		jmp    _02c288_jump

	_02c1d8_jump:
		mov    $0xffffffff,%ecx
		jmp    _02c288_jump

	_02c1e2_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		cmpb   $0x000000,(%esp)
		je     _02c247_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _02c22f_jump
		cmp    $0x0000ff,%cx
		jle    _02c21f_jump
		mov    $0x00001b,%ecx
		jmp    _02c288_jump

	_02c21f_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _0a79d0_data(%eax),%cl
		add    $0x00001b,%ecx
		jmp    _02c288_jump

	_02c22f_jump:
		cmp    $0x0000ff,%cx
		jle    _02c23a_jump
		xor    %ecx,%ecx
		jmp    _02c288_jump

	_02c23a_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _0a79d0_data(%eax),%cl
		jmp    _02c288_jump

	_02c247_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _02c26c_jump
		cmp    $0x0000ff,%cx
		jle    _02c25c_jump
		mov    $0x000012,%ecx
		jmp    _02c288_jump

	_02c25c_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _0a79d0_data(%eax),%cl
		add    $0x000012,%ecx
		jmp    _02c288_jump

	_02c26c_jump:
		cmp    $0x0000ff,%cx
		jle    _02c27a_jump
		mov    $0x000009,%ecx
		jmp    _02c288_jump

	_02c27a_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _0a79d0_data(%eax),%cl
		add    $0x000009,%ecx

	_02c288_jump:
		cmpb   $0x000003,0x000070(%esi)
		jne    _02c2e5_jump
		mov    0x00005c(%esi),%di
		dec    %di
		mov    %di,0x00005c(%esi)
		jne    _02c2e5_jump
		movb   $0x000001,0x000070(%esi)
		mov    0x000036(%esi),%ax
		movw   $0x00003c,0x00005c(%esi)
		movswl %ax,%ebx
		mov    0x000038(%esi),%dx
		cmp    $0xffffffcc,%ebx
		jle    _02c2df_jump
		movswl %dx,%ebx
		cmp    $0xffffffdc,%ebx
		jle    _02c2df_jump
		cmp    $0x000131,%ax
		jge    _02c2df_jump
		cmp    $0x0000c3,%dx
		jge    _02c2df_jump
		movswl %cx,%ebx
		mov    0x00002a(%esi),%edx
		mov    0x000026(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _07d6e0_func
		jmp    _02c2e5_jump

	_02c2df_jump:
		movw   $0x000028,0x000050(%esi)

	_02c2e5_jump:
		movswl %cx,%eax
		cmp    $0xffffffff,%eax
		je     _02c2f2_jump
		dec    %cl
		mov    %cl,0x00006f(%esi)

	_02c2f2_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02c2fc_func:
		push   %ebx
		mov    %eax,%ebx
		mov    0x00007a(%eax),%ah
		dec    %ah
		mov    %ah,0x00007a(%ebx)
		je     _02c31d_jump
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01de98_func
		movw   $0x000032,0x00005c(%ebx)
		pop    %ebx
		ret    

	_02c31d_jump:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01de98_func
		pop    %ebx
		ret    

_02c32c_switch:
		.long   _02c4b2_case
		.long   _02c50e_case
		.long   _02c35f_case
		.long   _02c406_case


	_02c35f_case:
		mov    0x000028(%eax),%ebp
		xor    %ecx,%ecx
		mov    0x00002c(%eax),%edi
		mov    0x00006c(%eax),%cl
		xor    %eax,%eax
		sar    $0x000004,%edi
		mov    _0c1124_data,%ax
		imul   %edi,%eax
		add    %ebp,%ecx
		sub    $0x000008,%ecx
		sar    $0x000004,%ecx
		lea    (%ecx,%eax,1),%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0c112c_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $0x0000ff,%ecx
		testb  $0x000001,_0a525d_data(%ecx)
		je     _02c3aa_jump
		mov    $0x000001,%esi

	_02c3aa_jump:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%eax
		mov    0x00006c(%ebx),%cl
		lea    (%ecx,%eax,1),%edi
		mov    0x00002c(%ebx),%ebx
		xor    %ecx,%ecx
		sar    $0x000004,%ebx
		mov    _0c1124_data,%cx
		imul   %ecx,%ebx
		add    $0x000007,%edi
		sar    $0x000004,%edi
		lea    (%edi,%ebx,1),%ecx
		lea    0x000000(,%ecx,4),%ebx
		sub    %ecx,%ebx
		mov    _0c112c_data,%ecx
		mov    0x000002(%ecx,%ebx,2),%bl
		and    $0x0000ff,%ebx
		testb  $0x000001,_0a525d_data(%ebx)
		je     _02c56a_jump
		mov    $0x000001,%esi
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c406_case:
		xor    %ecx,%ecx
		mov    0x000028(%eax),%edx
		mov    0x00006c(%eax),%cl
		lea    (%ecx,%edx,1),%edi
		mov    0x00002c(%eax),%ecx
		xor    %eax,%eax
		add    $0x00009a,%ecx
		mov    _0c1124_data,%ax
		sar    $0x000004,%ecx
		imul   %eax,%ecx
		sub    $0x000008,%edi
		sar    $0x000004,%edi
		add    %ecx,%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0c112c_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $0x0000ff,%ecx
		testb  $0x000001,_0a525d_data(%ecx)
		je     _02c457_jump
		mov    $0x000001,%esi

	_02c457_jump:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%edi
		mov    0x00006c(%ebx),%cl
		mov    0x00002c(%ebx),%ebx
		add    %ecx,%edi
		xor    %ecx,%ecx
		sar    $0x000004,%ebx
		mov    _0c1124_data,%cx
		imul   %ecx,%ebx
		add    $0x000007,%edi
		sar    $0x000004,%edi
		lea    (%edi,%ebx,1),%ecx
		lea    0x000000(,%ecx,4),%ebx
		sub    %ecx,%ebx
		mov    _0c112c_data,%ecx
		mov    0x000002(%ecx,%ebx,2),%bl
		and    $0x0000ff,%ebx
		testb  $0x000001,_0a525d_data(%ebx)
		je     _02c56a_jump
		mov    $0x000001,%esi
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c4b2_case:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x00006c(%ebx),%cl
		add    %ebp,%ecx
		sub    $0x000010,%ecx
		sar    $0x000004,%ecx
		mov    $0x000006,%edx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp

	_02c4cf_jump:
		movswl %dx,%ecx
		add    0x00002c(%ebx),%ecx
		xor    %edi,%edi
		sar    $0x000004,%ecx
		mov    _0c1124_data,%di
		imul   %edi,%ecx
		add    %ebp,%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0c112c_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_0a525d_data(%edi)
		je     _02c502_jump
		mov    $0x000001,%esi

	_02c502_jump:
		inc    %eax
		add    $0x000010,%edx
		cmp    $0x00000a,%ax
		jge    _02c56a_jump
		jmp    _02c4cf_jump

	_02c50e_case:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%edi
		mov    0x00006c(%ebx),%cl
		add    %edi,%ecx
		add    $0x000010,%ecx
		sar    $0x000004,%ecx
		mov    $0x000006,%edx
		mov    %ecx,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%ebp

	_02c52d_jump:
		movswl %dx,%ecx
		add    0x00002c(%ebx),%ecx
		xor    %edi,%edi
		sar    $0x000004,%ecx
		mov    _0c1124_data,%di
		imul   %edi,%ecx
		add    %ebp,%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0c112c_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_0a525d_data(%edi)
		je     _02c560_jump
		mov    $0x000001,%esi

	_02c560_jump:
		inc    %eax
		add    $0x000010,%edx
		cmp    $0x00000a,%ax
		jl     _02c52d_jump

	_02c56a_jump:
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02c578_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _02bfdc_func
		cmpb   $0x000004,0x000070(%edx)
		jne    _02c5e5_jump
		cmpb   $0x00000e,0x00006f(%edx)
		jne    _02c5e5_jump
		xor    %eax,%eax
		mov    0x000071(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x000070(%edx),%al
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0c334a_data(%eax)
		jne    _02c5e5_jump
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff60,%eax
		jle    _02c5e5_jump
		cmpw   $0x0000fa,0x000036(%edx)
		jge    _02c5e5_jump
		cmpw   $0x000064,0x000038(%edx)
		jge    _02c5e5_jump
		mov    0x00002c(%edx),%ebx
		add    $0x000056,%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _05a3c0_func
		subl   $0x000056,0x00002c(%edx)

	_02c5e5_jump:
		pop    %edx
		pop    %ebx
		ret    



_02c5e8_func:
		push   %edx
		testb  $0x000080,_0c3348_data
		jne    _02c620_jump
		mov    _0c3176_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02c620_jump
		mov    _0c3178_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02c620_jump
		mov    _0b9369_data,%dl
		test   %dl,%dl
		je     _02c61b_jump
		cmp    $0x000001,%dl
		jne    _02c620_jump

	_02c61b_jump:
		call   _05fce4_func

	_02c620_jump:
		pop    %edx
		ret    

_02c624_switch:
		.long   _02c7d1_case
		.long   _02c898_case
		.long   _02c66c_case
		.long   _02c71b_case




_02c634_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		xor    %ecx,%ecx
		mov    0x000028(%eax),%si
		mov    0x00006c(%eax),%cl
		xor    %ebx,%ebx
		mov    %ecx,%edi
		mov    0x00002c(%eax),%cx
		add    %esi,%edi
		movzbw 0x000078(%eax),%si
		sub    $0x000019,%edi
		add    %ecx,%esi
		cmp    $0x000003,%dx
		ja     _02c958_jump
		xor    %eax,%eax
		mov    %dx,%ax
		jmp    *%cs:_02c624_switch(,%eax,4)

	_02c66c_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _02c958_jump
		xor    %eax,%eax
		sar    $0x000004,%ecx
		mov    _0c1124_data,%ax
		imul   %eax,%ecx
		movswl %di,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c112c_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_0a525d_data(%edx)
		je     _02c6c3_jump
		mov    $0x000001,%ebx

	_02c6c3_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c112c_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_0a525d_data(%edx)
		je     _02c6eb_jump
		mov    $0x000001,%ebx

	_02c6eb_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c112c_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0a525d_data(%eax)
		je     _02c958_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c71b_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _02c958_jump
		xor    %eax,%eax
		add    $0x000030,%ecx
		mov    _0c1124_data,%ax
		sar    $0x000004,%ecx
		mov    %eax,%edx
		imul   %ecx,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c112c_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0a525d_data(%eax)
		je     _02c776_jump
		mov    $0x000001,%ebx

	_02c776_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0c112c_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0a525d_data(%eax)
		je     _02c79f_jump
		mov    $0x000001,%ebx

	_02c79f_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c112c_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0a525d_data(%eax)
		je     _02c958_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c7d1_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _02c958_jump
		movswl %si,%eax
		xor    %edx,%edx
		add    %edi,%eax
		mov    _0c1124_data,%dx
		sar    $0x000004,%eax
		imul   %eax,%edx
		sar    $0x000004,%ecx
		add    %ecx,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c112c_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0a525d_data(%eax)
		je     _02c82b_jump
		mov    $0x000001,%ebx

	_02c82b_jump:
		xor    %eax,%eax
		mov    _0c1124_data,%ax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c112c_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0a525d_data(%eax)
		je     _02c85b_jump
		mov    $0x000001,%ebx

	_02c85b_jump:
		xor    %eax,%eax
		mov    _0c1124_data,%ax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c112c_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0a525d_data(%eax)
		je     _02c958_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c898_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _02c958_jump
		movswl %si,%eax
		xor    %edx,%edx
		add    %edi,%eax
		mov    _0c1124_data,%dx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		add    $0x000003,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c112c_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_0a525d_data(%edx)
		je     _02c8f5_jump
		mov    $0x000001,%ebx

	_02c8f5_jump:
		xor    %edx,%edx
		mov    _0c1124_data,%dx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c112c_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_0a525d_data(%edx)
		je     _02c927_jump
		mov    $0x000001,%ebx

	_02c927_jump:
		xor    %edx,%edx
		mov    _0c1124_data,%dx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c112c_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0a525d_data(%eax)
		je     _02c958_jump
		mov    $0x000001,%ebx

	_02c958_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02c960_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _02cb1f_jump
		cmpb   $0x00000c,0x000070(%ecx)
		jne    _02cb1f_jump
		mov    %ecx,%eax
		call   _01deb4_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _01df9c_func
		movswl %dx,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _02c9c2_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02bb40_func
		test   %ax,%ax
		je     _02c9c2_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _065368_func

	_02c9c2_jump:
		mov    0x000085(%ecx),%dh
		and    $0x0000f7,%dh
		mov    0x000074(%ecx),%bl
		mov    %dh,0x000085(%ecx)
		cmp    $0x000014,%bl
		jne    _02c9e1_jump
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_02c9e1_jump:
		mov    _0b9342_data,%dx
		mov    0x000034(%ecx),%bx
		xor    %eax,%eax
		cmp    %bx,%dx
		jne    _02ca5e_jump
		xor    %ebx,%edx
		mov    0x000028(%ecx),%si
		mov    0x00006c(%ecx),%dl
		add    %edx,%esi
		xor    %edx,%edx
		mov    _0b9320_data,%di
		mov    _0b9364_data,%dl
		add    %edi,%edx
		sub    %esi,%edx
		test   %dx,%dx
		jle    _02ca3b_jump
		cmp    $0x00000a,%dx
		jle    _02ca25_jump
		mov    $0x000001,%eax

	_02ca25_jump:
		cmp    $0x00000f,%dx
		jle    _02ca2c_jump
		inc    %eax

	_02ca2c_jump:
		cmp    $0x000012,%dx
		jle    _02ca33_jump
		inc    %eax

	_02ca33_jump:
		cmp    $0x00002a,%dx
		jle    _02ca5e_jump
		jmp    _02ca5c_jump

	_02ca3b_jump:
		neg    %edx
		cmp    $0x00000a,%dx
		jle    _02ca48_jump
		mov    $0xffffffff,%eax

	_02ca48_jump:
		cmp    $0x00000f,%dx
		jle    _02ca4f_jump
		dec    %eax

	_02ca4f_jump:
		cmp    $0x000012,%dx
		jle    _02ca56_jump
		dec    %eax

	_02ca56_jump:
		cmp    $0x000029,%dx
		jle    _02ca5e_jump

	_02ca5c_jump:
		xor    %eax,%eax

	_02ca5e_jump:
		mov    %ax,0x000040(%ecx)
		cmpw   $0x000000,0x000042(%ecx)
		jge    _02caed_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _02c634_func
		test   %ax,%ax
		je     _02cae9_jump
		mov    0x000050(%ecx),%dx
		movw   $0x000000,0x000042(%ecx)
		inc    %edx
		mov    %dx,0x000050(%ecx)
		cmp    $0x0000f0,%dx
		jle    _02caed_jump
		mov    0x00002c(%ecx),%edx
		sub    $0x000050,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _07d038_func
		mov    0x000032(%ecx),%edx
		mov    $0x000073,%eax
		sar    $0x000010,%edx
		call   _071068_func
		mov    0x00003a(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00003c(%ecx),%edx
		mov    $0x000004,%ebx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		call   _01dea8_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _07d3c4_func
		jmp    _02caed_jump

	_02cae9_jump:
		mov    %ax,0x000050(%ecx)

	_02caed_jump:
		mov    0x000040(%ecx),%si
		test   %si,%si
		jle    _02cb09_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _02c634_func
		test   %ax,%ax
		je     _02cb1f_jump
		jmp    _02cb19_jump

	_02cb09_jump:
		jge    _02cb1f_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02c634_func
		test   %ax,%ax
		je     _02cb1f_jump

	_02cb19_jump:
		movw   $0x000000,0x000040(%ecx)

	_02cb1f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cb28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    0x00005c(%eax),%ax
		add    %ax,0x00003c(%edx)

	_02cb37_jump:
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02cb43_jump
		neg    %eax

	_02cb43_jump:
		cmp    $0x000080,%eax
		jl     _02cb7f_jump
		cmpw   $0x000000,0x00005c(%edx)
		jle    _02cb68_jump
		mov    0x000028(%edx),%ecx
		mov    0x00003c(%edx),%ax
		inc    %ecx
		sub    $0x000080,%eax
		mov    %ecx,0x000028(%edx)
		mov    %ax,0x00003c(%edx)
		jmp    _02cb37_jump

	_02cb68_jump:
		mov    0x000028(%edx),%ebx
		mov    0x00003c(%edx),%di
		dec    %ebx
		add    $0x000080,%edi
		mov    %ebx,0x000028(%edx)
		mov    %di,0x00003c(%edx)
		jmp    _02cb37_jump

	_02cb7f_jump:
		mov    0x00004a(%edx),%ax
		add    %ax,0x00003e(%edx)

	_02cb87_jump:
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02cb93_jump
		neg    %eax

	_02cb93_jump:
		cmp    $0x000080,%eax
		jl     _02cbcf_jump
		cmpw   $0x000000,0x00004a(%edx)
		jle    _02cbb8_jump
		mov    0x00002c(%edx),%edi
		mov    0x00003e(%edx),%si
		inc    %edi
		sub    $0x000080,%esi
		mov    %edi,0x00002c(%edx)
		mov    %si,0x00003e(%edx)
		jmp    _02cb87_jump

	_02cbb8_jump:
		mov    0x00002c(%edx),%esi
		mov    0x00003e(%edx),%cx
		dec    %esi
		add    $0x000080,%ecx
		mov    %esi,0x00002c(%edx)
		mov    %cx,0x00003e(%edx)
		jmp    _02cb87_jump

	_02cbcf_jump:
		mov    %edx,%eax
		call   _01e53c_func
		mov    0x00007a(%edx),%al
		dec    %al
		mov    %al,0x00006f(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cbe4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    0x000074(%eax),%al
		cmp    $0x000001,%al
		jbe    _02cbf8_jump
		cmp    $0x000002,%al
		jne    _02cc1a_jump
		jmp    _02cc0c_jump

	_02cbf8_jump:
		test   %al,%al
		jne    _02cc05_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _02cc0c_jump

	_02cc05_jump:
		orb    $0x000008,0x000085(%ecx)

	_02cc0c_jump:
		mov    %ecx,%eax
		call   _05a530_func
		mov    %ecx,%eax
		call   _023aac_func

	_02cc1a_jump:
		cmpw   $0x000000,0x000040(%ecx)
		je     _02cc96_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		sub    $0x000008,%eax
		xor    %edx,%edx
		movswl %ax,%esi
		mov    0x00006c(%ecx),%dl
		mov    %esi,%ebx
		mov    %ecx,%eax
		movzbw 0x00006c(%ecx),%di
		call   _02bb40_func
		test   %ax,%ax
		je     _02cc96_jump
		movswl %di,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _02cc96_jump
		mov    0x000085(%ecx),%dh
		test   $0x000008,%dh
		jne    _02cc7d_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000002,%edx
		mov    %bh,0x000085(%ecx)
		mov    $0x000001,%ebx
		jmp    _02cc91_jump

	_02cc7d_jump:
		mov    %dh,%bl
		and    $0x0000f7,%bl
		mov    %bl,0x000085(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_02cc91_jump:
		call   _065368_func

	_02cc96_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ce14_func:
		ret    



_02ce18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    _0c1d74_data,%ebx
		mov    0x000032(%eax),%edx
		movzbl 0x000071(%eax),%ebp
		sar    $0x000010,%edx
		shl    $0x000002,%ebp
		mov    (%ebx,%edx,2),%dx
		mov    0x00000c(%eax),%ebx
		add    %ebx,%ebp
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x000070(%eax),%bl
		movzbl 0x000002(%ebp,%ebx,8),%ebp
		lea    0x000000(,%ebp,4),%ebx
		sub    %ebp,%ebx
		mov    0x000004(%eax),%ebp
		mov    0x00000a(%ebp,%ebx,4),%bl
		mov    %bl,0x000008(%esp)
		mov    0x000034(%eax),%bx
		xor    %edi,%edi
		cmp    %bx,%dx
		je     _02cf2c_jump
		mov    %edi,0x000004(%esp)
		xor    %esi,%esi

	_02ce75_jump:
		movswl %dx,%ebp
		imul   $0x000088,%ebp,%edx
		mov    0x000004(%esp),%eax
		mov    _0b9410_data,%ebx
		add    $0x000020,%eax
		add    %edx,%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000085(%ebx),%ah
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000085(%ebx)
		mov    0x00006f(%ecx),%dl
		mov    %edx,(%esp)
		inc    %edi
		mov    (%esp),%eax
		movswl %di,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %dl,0x00006f(%ebx)
		xor    %edx,%edx
		mov    0x00007a(%ecx),%dl
		mov    0x000004(%esp),%eax
		sub    $0x000002,%edx
		imul   %edx,%eax
		mov    0x00003c(%ecx),%dx
		add    %eax,%edx
		mov    %dx,0x00003c(%ebx)
		mov    0x00003e(%ecx),%dx
		mov    %dx,0x00003e(%ebx)
		add    $0x000100,%esi
		mov    0x000050(%ecx),%dx
		sub    %esi,%edx
		mov    %dx,0x000050(%ebx)
		mov    0x00003a(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ebx)
		mov    0x00003c(%ebx),%edx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ebx)
		call   _01e53c_func
		mov    _0c1d74_data,%ebx
		mov    (%ebx,%ebp,2),%dx
		cmp    0x000034(%ecx),%dx
		jne    _02ce75_jump

	_02cf2c_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cf38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x000064(%eax),%dx
		cmp    $0x0000b2,%dx
		je     _02cf50_jump
		cmp    $0x0000f1,%dx
		jne    _02cf8f_jump

	_02cf50_jump:
		cmpw   $0x000000,0x000052(%esi)
		jne    _02cf8f_jump
		xor    %ecx,%ecx
		mov    0x00006e(%esi),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    0x000004(%esi),%ecx
		mov    0x00000a(%ecx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _06a9a0_func
		mov    %al,0x00006f(%esi)
		mov    %esi,%eax
		movw   $0x001000,0x000050(%esi)
		call   _02ce18_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02cf8f_jump:
		mov    $0x000028,%ebx
		lea    0x000050(%esi),%ecx
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01dbe8_func
		movw   $0x000000,0x000040(%esi)
		mov    %ax,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cfb4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000085(%eax),%ah
		or     $0x000008,%ah
		mov    _0c33ab_data,%dl
		mov    %ah,0x000085(%esi)
		cmp    $0x000001,%dl
		jne    _02d1c5_jump
		mov    %ah,%bl
		and    $0x0000df,%bl
		mov    %bl,0x000085(%esi)
		cmpw   $0x000000,_0b9338_data
		jle    _02cffa_jump
		testb  $0x000008,_0b937d_data
		jne    _02d011_jump

	_02cffa_jump:
		cmpw   $0x000000,_0b9338_data
		jge    _02d071_jump
		testb  $0x000008,_0b937d_data
		jne    _02d071_jump

	_02d011_jump:
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02d01f_jump
		neg    %eax

	_02d01f_jump:
		cmp    $0x000002,%eax
		jge    _02d03c_jump
		cmpw   $0x000000,_0b9338_data
		jle    _02d035_jump
		mov    $0x000002,%eax
		jmp    _02d06d_jump

	_02d035_jump:
		mov    $0xfffffffe,%eax
		jmp    _02d06d_jump

	_02d03c_jump:
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02d04a_jump
		neg    %eax

	_02d04a_jump:
		cmp    $0x000007,%eax
		jl     _02d067_jump
		cmpw   $0x000000,_0b9338_data
		jle    _02d060_jump
		mov    $0x000007,%eax
		jmp    _02d06d_jump

	_02d060_jump:
		mov    $0xfffffff9,%eax
		jmp    _02d06d_jump

	_02d067_jump:
		mov    _0b9338_data,%ax

	_02d06d_jump:
		mov    %ax,0x000050(%esi)

	_02d071_jump:
		mov    0x00005c(%esi),%dx
		test   %dx,%dx
		jne    _02d0f2_jump
		mov    _0b9338_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02d08c_jump
		neg    %eax

	_02d08c_jump:
		test   %eax,%eax
		jg     _02d0a5_jump
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02d09e_jump
		neg    %eax

	_02d09e_jump:
		cmp    $0x000002,%eax
		jle    _02d0ea_jump
		jmp    _02d0e6_jump

	_02d0a5_jump:
		mov    _0b933a_data,%cx
		test   %cx,%cx
		jle    _02d0cb_jump
		mov    _0b9338_data,%bx
		test   %bx,%bx
		jle    _02d0c3_jump
		movb   $0x000000,0x00006f(%esi)
		jmp    _02d0ea_jump

	_02d0c3_jump:
		jge    _02d0e6_jump
		movb   $0x000002,0x00006f(%esi)
		jmp    _02d0ea_jump

	_02d0cb_jump:
		jge    _02d0ea_jump
		mov    _0b9338_data,%ax
		test   %ax,%ax
		jle    _02d0de_jump
		movb   $0x000002,0x00006f(%esi)
		jmp    _02d0ea_jump

	_02d0de_jump:
		jge    _02d0e6_jump
		movb   $0x000000,0x00006f(%esi)
		jmp    _02d0ea_jump

	_02d0e6_jump:
		movb   $0x000001,0x00006f(%esi)

	_02d0ea_jump:
		movw   $0x000008,0x00005c(%esi)
		jmp    _02d0f9_jump

	_02d0f2_jump:
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x00005c(%esi)

	_02d0f9_jump:
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01e1b8_func
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x00006d(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x000078(%esi),%al
		add    %edi,%eax
		sub    %ebx,%eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    _0b9320_data,%ebx
		mov    _0b9364_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    _0b9324_data,%edx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,0x000028(%esi)
		xor    %ebx,%ebx
		mov    _0b9365_data,%al
		mov    0x00006d(%esi),%bl
		add    %edx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    _0b9369_data,%ch
		mov    %ebx,0x00002c(%esi)
		cmp    $0x000003,%ch
		jne    _02d17e_jump
		cmpb   $0x000017,_0b9368_data
		je     _02d1a7_jump

	_02d17e_jump:
		cmpb   $0x000003,_0b9369_data
		jne    _02d190_jump
		cmpb   $0x000016,_0b9368_data
		je     _02d1a7_jump

	_02d190_jump:
		call   _06ed10_func
		test   %al,%al
		je     _02d1a7_jump
		cmpw   $0x000001,_0c309e_data
		jne    _02d24c_jump

	_02d1a7_jump:
		mov    $_0c3347_data,%edi
		xor    %dh,%dh
		mov    $_0c3344_data,%esi
		mov    %dh,_0c33ab_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d1c5_jump:
		movw   $0x000000,0x00005c(%esi)
		mov    %ah,%dh
		movb   $0x000001,0x00006f(%esi)
		or     $0x000020,%dh
		mov    _0b9369_data,%bl
		mov    %dh,0x000085(%esi)
		cmp    $0x000003,%bl
		jne    _02d1ff_jump
		cmpb   $0x000016,_0b9368_data
		jne    _02d1ff_jump
		mov    0x000050(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d1ff_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _02d211_jump
		cmpb   $0x000001,_0b9368_data
		je     _02d234_jump

	_02d211_jump:
		mov    _0b9369_data,%al
		cmp    $0x000002,%al
		jne    _02d222_jump
		cmp    _0b9368_data,%al
		je     _02d234_jump

	_02d222_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _02d246_jump
		cmpb   $0x000006,_0b9368_data
		jne    _02d246_jump

	_02d234_jump:
		xor    %edx,%edx
		mov    %dx,_0b9338_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d246_jump:
		movw   $0x000000,0x000050(%esi)

	_02d24c_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_02d258_switch:
		.long   _02d30d_case
		.long   _02d313_case
		.long   _02d319_case
		.long   _02d319_case
		.long   _02d31f_case




_02d26c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0c3152_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _02d418_jump
		cmpb   $0x000000,0x000071(%eax)
		jne    _02d2b9_jump
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9410_data,%ebx
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000028(%esi),%ebx
		cmp    0x000028(%eax),%ebx
		jge    _02d2b0_jump
		mov    0x00002c(%eax),%eax
		add    $0x000070,%eax
		jmp    _02d2b6_jump

	_02d2b0_jump:
		mov    0x00002c(%eax),%eax
		add    $0x000078,%eax

	_02d2b6_jump:
		mov    %eax,0x00002c(%esi)

	_02d2b9_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _02d3fd_jump
		cmpb   $0x00000f,_0b9368_data
		jne    _02d3fd_jump
		mov    _0b9324_data,%di
		mov    0x000028(%esi),%ax
		mov    0x00002c(%esi),%cx
		mov    0x000070(%esi),%bl
		mov    %eax,0x000004(%esp)
		mov    _0b9320_data,%ax
		sub    $0x000010,%bl
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		cmp    $0x000004,%bl
		ja     _02d325_jump
		and    $0x0000ff,%ebx
		jmp    *%cs:_02d258_switch(,%ebx,4)

	_02d30d_case:
		mov    $0x000030,%dl
		mov    $0x000018,%dh
		jmp    _02d327_jump

	_02d313_case:
		mov    $0x000030,%dl
		mov    $0x000020,%dh
		jmp    _02d327_jump

	_02d319_case:
		mov    $0x000038,%dl
		mov    $0x000028,%dh
		jmp    _02d327_jump

	_02d31f_case:
		mov    $0x000038,%dl
		mov    $0x000040,%dh
		jmp    _02d327_jump

	_02d325_jump:
		xor    %eax,%eax

	_02d327_jump:
		test   %ax,%ax
		je     _02d369_jump
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		xor    %eax,%eax
		mov    %dl,%al
		add    %ecx,%eax
		push   $0x000004
		cwtl   
		push   %eax
		mov    0x000010(%esp),%eax
		add    $0x00007e,%eax
		cwtl   
		push   %eax
		mov    %edi,%eax
		add    $0x00001a,%eax
		movswl %ax,%edx
		mov    0x000010(%esp),%eax
		mov    $0x00002e,%ebx
		add    $0x000039,%eax
		mov    $0x000004,%ecx
		cwtl   
		call   _027cc0_func

	_02d369_jump:
		test   %ax,%ax
		je     _02d3fd_jump
		mov    0x00007a(%esi),%cl
		dec    %cl
		mov    %cl,0x00007a(%esi)
		cmp    $0x000001,%cl
		jae    _02d3a2_jump
		mov    0x00007b(%esi),%al
		mov    %al,0x00007a(%esi)
		mov    0x000070(%esi),%al
		cmp    $0x000013,%al
		jae    _02d39b_jump
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _01de98_func
		jmp    _02d3a2_jump

	_02d39b_jump:
		mov    %esi,%eax
		call   _07dda0_func

	_02d3a2_jump:
		mov    _0c3152_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		cmpw   $0x000000,0x00005c(%edx,%eax,1)
		jne    _02d3d7_jump
		mov    0x000004(%esp),%eax
		add    $0x00001e,%edi
		add    $0x000080,%eax
		movswl %di,%edx
		cwtl   
		call   _07de50_func

	_02d3d7_jump:
		mov    _0c3152_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		movw   $0x000000,0x000050(%edx,%eax,8)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d3fd_jump:
		mov    _0c3152_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		incw   0x000050(%edx,%eax,8)

	_02d418_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d424_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00007a(%eax)
		jne    _02d463_jump
		mov    _0b9320_data,%eax
		mov    0x000028(%ecx),%edx
		add    $0x00002f,%eax
		cmp    %edx,%eax
		jle    _02d463_jump
		mov    _0b9320_data,%ebx
		lea    0x0000ba(%edx),%eax
		cmp    %ebx,%eax
		jle    _02d463_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movb   $0x00000a,0x00007a(%ecx)
		call   _01dea8_func

	_02d463_jump:
		cmpb   $0x000001,0x00007a(%ecx)
		jbe    _02d49c_jump
		mov    0x000042(%ecx),%dx
		cmp    $0x000010,%dx
		jge    _02d485_jump
		cmpb   $0x000000,_0c3352_data
		jne    _02d4a2_jump
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _02d4a2_jump

	_02d485_jump:
		cmpb   $0x000000,_0c3352_data
		jne    _02d4a2_jump
		cmpb   $0x000000,_0c334d_data
		jne    _02d4a2_jump
		incl   0x00002c(%ecx)
		jmp    _02d4a2_jump

	_02d49c_jump:
		movw   $0x000000,0x000042(%ecx)

	_02d4a2_jump:
		cmpw   $0x000001,0x000050(%ecx)
		setle  %al
		movw   $0x000000,0x000050(%ecx)
		xor    %ah,%ah
		mov    %ax,0x00005c(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d4bc_func:
		push   %ebx
		push   %edx
		mov    _0b9324_data,%edx
		xor    %ebx,%ebx
		sub    $0x000062,%edx
		mov    0x00006e(%eax),%bl
		mov    %edx,0x00002c(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		xor    %ebx,%ebx
		dec    %edx
		mov    0x00006f(%eax),%bl
		cmp    %edx,%ebx
		jne    _02d54e_jump
		xor    %edx,%edx
		mov    0x000071(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x000070(%eax),%dl
		mov    0x000005(%ebx,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		cmpb   $0x000000,_0c334a_data(%edx)
		jne    _02d54e_jump
		mov    _0c3152_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000004,%edx
		add    %ebx,%edx
		mov    _0b9410_data,%ebx
		cmpw   $0x000000,0x00005c(%ebx,%edx,8)
		jne    _02d54e_jump
		mov    0x000085(%eax),%bh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bh
		mov    %bh,0x000085(%eax)

	_02d54e_jump:
		pop    %edx
		pop    %ebx
		ret    



_02d554_func:
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		cmpw   $0x0000ff,0x000050(%eax)
		je     _02d5b6_jump
		mov    0x00004e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02d591_jump
		mov    %edx,%eax
		call   _01d740_func
		test   %al,%al
		je     _02d5b6_jump
		mov    0x000085(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000085(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_02d591_jump:
		mov    0x000050(%edx),%cx
		test   %cx,%cx
		jne    _02d5af_jump
		movb   $0x000000,0x00006f(%edx)
		movw   $0x00ffff,0x000050(%edx)
		movb   $0x000002,0x000082(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_02d5af_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x000050(%edx)

	_02d5b6_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_02d5bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000042(%eax),%dx
		cmp    $0x000002,%dx
		jle    _02d5d4_jump
		mov    $0x000002,%ebx
		mov    %ebx,%edx
		jmp    _02d5e4_jump

	_02d5d4_jump:
		cmp    $0x000001,%dx
		jle    _02d5e9_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02d5e4_jump:
		call   _01dea8_func

	_02d5e9_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02d5f5_jump
		neg    %eax

	_02d5f5_jump:
		cmp    $0x000001,%eax
		jle    _02d62d_jump
		cmpb   $0x000002,0x000071(%ecx)
		jne    _02d606_jump
		cmpb   $0x000000,0x000070(%ecx)
		je     _02d60d_jump

	_02d606_jump:
		mov    $0x000001,%eax
		jmp    _02d60f_jump

	_02d60d_jump:
		xor    %eax,%eax

	_02d60f_jump:
		test   %eax,%eax
		je     _02d62d_jump
		mov    0x000085(%ecx),%dh
		test   $0x000008,%dh
		je     _02d624_jump
		decw   0x000040(%ecx)
		jmp    _02d62d_jump

	_02d624_jump:
		test   $0x000008,%dh
		jne    _02d62d_jump
		incw   0x000040(%ecx)

	_02d62d_jump:
		cmpb   $0x000002,0x000071(%ecx)
		jne    _02d65a_jump
		cmpb   $0x000003,0x000070(%ecx)
		jne    _02d65a_jump
		mov    %ecx,%eax
		call   _01d740_func
		test   %al,%al
		je     _02d65a_jump
		mov    0x000085(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000085(%ecx)

	_02d65a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d660_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000085(%eax),%cl
		shl    $0x000004,%cl
		mov    0x000071(%eax),%ah
		shr    $0x000007,%cl
		test   %ah,%ah
		jne    _02d69c_jump
		cmpb   $0x00000d,0x000070(%esi)
		jne    _02d69c_jump
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _02d69c_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func

	_02d69c_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _02d7a1_jump
		cmpb   $0x00000f,0x000070(%esi)
		jne    _02d7a1_jump
		cmpw   $0x000086,0x000064(%esi)
		jne    _02d6d9_jump
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02d6d9_jump
		mov    $0x00000d,%edx
		mov    %esi,%eax
		call   _01de98_func
		movw   $0x000000,0x000040(%esi)
		jmp    _02d72c_jump

	_02d6d9_jump:
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _02d72c_jump
		mov    0x000085(%esi),%bh
		mov    _0b937d_data,%al
		and    $0x0000f7,%bh
		and    $0x000008,%al
		mov    %bh,%ch
		mov    %bh,0x000085(%esi)
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,0x000085(%esi)
		call   _05a530_func
		mov    %cl,%al
		and    $0x000001,%al
		mov    0x000085(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000085(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000085(%esi)

	_02d72c_jump:
		cmpw   $0x000000,0x000040(%esi)
		je     _02d7a1_jump
		mov    %esp,%eax
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		mov    0x000040(%esi),%bx
		movswl %ax,%edx
		test   %bx,%bx
		jge    _02d766_jump
		xor    %ebx,%ebx
		jmp    _02d76d_jump

	_02d766_jump:
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx

	_02d76d_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		and    $0x0000ff,%eax
		testb  $0x000002,_0a525d_data(%eax)
		je     _02d7a1_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		movw   $0x000000,0x000040(%esi)

	_02d7a1_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d7ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x000071(%eax)
		jne    _02d7e3_jump
		cmpb   $0x00000a,0x000066(%ecx)
		jne    _02d7e3_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x00006d(%ecx),%al
		add    %eax,%edx
		and    $0x00fff0,%edx
		sub    %eax,%edx
		lea    0x000007(%edx),%eax
		mov    %eax,0x00002c(%ecx)

	_02d7e3_jump:
		mov    %ecx,%eax
		mov    $0x00000a,%edx
		call   _02d660_func
		mov    %ecx,%eax
		call   _02b74c_func
		cmpb   $0x000009,0x000070(%ecx)
		jne    _02d803_jump
		mov    %ecx,%eax
		call   _063f90_func

	_02d803_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_02d808_switch:
		.long   _02d898_case
		.long   _02d8ad_case
		.long   _02d898_case
		.long   _02d8ad_case
		.long   _02d898_case
		.long   _02d8ad_case
		.long   _02d8ad_case
		.long   _02d8a2_case
		.long   _02d8ad_case
		.long   _02d8a2_case
		.long   _02d8ad_case
		.long   _02d8a2_case




_02d838_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    0x000064(%eax),%ax
		cmp    $0x000086,%ax
		jb     _02d859_jump
		jbe    _02d867_jump
		cmp    $0x0000a7,%ax
		jb     _02d881_jump
		jbe    _02d867_jump
		cmp    $0x0000b1,%ax
		je     _02d871_jump
		jmp    _02d881_jump

	_02d859_jump:
		cmp    $0x000006,%ax
		jb     _02d881_jump
		jbe    _02d871_jump
		cmp    $0x000008,%ax
		jne    _02d881_jump

	_02d867_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x00002c,%eax
		jmp    _02d879_jump

	_02d871_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x00008b,%eax

	_02d879_jump:
		sar    $0x000010,%edx
		call   _071068_func

	_02d881_jump:
		mov    _0c1154_data,%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _02d8ad_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_02d808_switch(,%edx,4)

	_02d898_case:
		xor    %ebx,%ebx
		mov    _0c1157_data,%bl
		jmp    _02d8ad_case

	_02d8a2_case:
		xor    %ebx,%ebx
		mov    _0c1157_data,%bl
		sub    $0x000002,%ebx

	_02d8ad_case:
		mov    %ebx,%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0c1144_data,%edx
		mov    0x000040(%edx),%si
		add    $0x00000a,%ebx
		test   %si,%si
		jge    _02d8c8_jump
		neg    %ebx

	_02d8c8_jump:
		movswl %bx,%edx
		mov    %ecx,%eax
		call   _01efc4_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02d8d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000040(%eax),%bx
		call   _05a530_func
		mov    0x00003e(%edx),%eax
		movswl %bx,%ecx
		sar    $0x000010,%eax
		imul   %ecx,%eax
		test   %eax,%eax
		jge    _02d91d_jump
		mov    0x000085(%edx),%ch
		lea    0x000085(%edx),%eax
		test   $0x000008,%ch
		sete   %cl
		and    $0x000001,%cl
		mov    (%eax),%ch
		and    $0x0000f7,%ch
		mov    %ch,(%eax)
		shl    $0x000003,%cl
		or     %cl,%ch
		mov    %ch,(%eax)
		mov    %bx,0x000040(%edx)

	_02d91d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d924_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x0000ff,0x000083(%eax)
		je     _02d9fe_jump
		cmpb   $0x000000,0x000083(%ecx)
		jne    _02d9f8_jump
		mov    0x000071(%ecx),%al
		mov    _0b937d_data,%ah
		and    $0x0000fb,%ah
		or     $0x000004,%ah
		test   %al,%al
		jbe    _02d95d_jump
		cmp    $0x000005,%al
		je     _02d97f_jump
		jmp    _02d9a4_jump

	_02d95d_jump:
		mov    $0x000001,%ebx
		mov    0x000085(%ecx),%dh
		mov    %ah,_0b937d_data
		and    $0x0000fb,%dh
		mov    %ebx,_0b931c_data
		mov    %dh,0x000085(%ecx)
		jmp    _02d9a4_jump

	_02d97f_jump:
		mov    $0x000001,%edx
		mov    $0x000028,%ebx
		mov    %ah,_0b937d_data
		mov    $_0b92f8_data,%eax
		mov    %edx,_0b931c_data
		mov    $0x000003,%edx
		call   _01dea8_func

	_02d9a4_jump:
		mov    0x000085(%ecx),%bl
		mov    0x000032(%ecx),%eax
		and    $0x0000fb,%bl
		sar    $0x000010,%eax
		mov    %bl,0x000085(%ecx)
		call   _0200e0_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x00006c(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0b9364_data,%al
		sub    %eax,%edx
		mov    0x00002c(%ecx),%esi
		mov    %edx,_0b9320_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00006d(%ecx),%al
		mov    _0b9365_data,%dl
		add    %esi,%eax
		mov    $0x000040,%bh
		sub    %edx,%eax
		mov    %bh,_0c33cf_data
		mov    %eax,_0b9324_data

	_02d9f8_jump:
		decb   0x000083(%ecx)

	_02d9fe_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02da10_func:
		mov    _0aa08c_data,%al
		ret    



_02da18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %al,%ah
		xor    %dl,%dl
		xor    %al,%al

	_02da22_jump:
		xor    %ebx,%ebx
		mov    %al,%cl
		mov    %ah,%bl
		sar    %cl,%ebx
		xor    %ecx,%ecx
		mov    $0x000007,%esi
		mov    %al,%cl
		sub    %ecx,%esi
		and    $0x000001,%ebx
		mov    %esi,%ecx
		shl    %cl,%ebx
		and    $0x0000ff,%edx
		inc    %al
		or     %ebx,%edx
		cmp    $0x000008,%al
		jb     _02da22_jump
		mov    %dl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02da54_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    $0x000001,%ebx
		mov    %eax,%ecx
		mov    %esp,%eax
		mov    %ebx,%edx
		call   _086255_func
		mov    (%esp),%ah
		xor    $0x000053,%ah
		mov    %ah,(%esp)
		mov    %ah,%al
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02da7c_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%ecx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _085e56_func
		mov    (%esp),%ah
		mov    $0x000001,%ebx
		xor    $0x000053,%ah
		mov    %ebx,%edx
		mov    %ah,(%esp)
		mov    %esp,%eax
		call   _085f52_func
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_02dab0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %eax,%ecx
		mov    %esp,%eax
		call   _086255_func
		mov    (%esp),%edx
		xor    $0x54555657,%edx
		mov    %edx,(%esp)
		mov    %edx,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02dae0_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x000004,%edx
		xor    $0x54555657,%ebx
		mov    %esp,%eax
		mov    %ebx,(%esp)
		mov    $0x000001,%ebx
		call   _085f52_func
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_02db0c_func:
		push   %ebx
		push   %edx
		cmpl   $0x000000,0x000004(%eax)
		jle    _02db28_jump
		testb  $0x000004,0x00000c(%eax)
		jne    _02db28_jump
		mov    (%eax),%edx
		mov    (%edx),%bl
		cmp    $0x00000d,%bl
		je     _02db28_jump
		cmp    $0x00001a,%bl
		jne    _02db2f_jump

	_02db28_jump:
		call   _0869e5_func
		jmp    _02db41_jump

	_02db2f_jump:
		mov    0x000004(%eax),%ebx
		dec    %ebx
		mov    (%eax),%edx
		mov    %ebx,0x000004(%eax)
		lea    0x000001(%edx),%ebx
		mov    %ebx,(%eax)
		xor    %eax,%eax
		mov    (%edx),%al

	_02db41_jump:
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _02db4e_jump
		incl   _0aa09c_data

	_02db4e_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_02db54_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		mov    _0aa095_data,%al
		xor    %ecx,%ecx
		mov    %al,%cl
		inc    %al
		mov    %al,_0aa095_data
		mov    %ecx,%eax
		call   _02da18_func
		xor    $0x0000b9,%al
		and    $0x0000ff,%eax
		xor    %ebx,%eax
		add    %bl,_0d51b4_data
		mov    _0aa098_data,%ebx
		inc    %ebx
		mov    0x00000d(%edx),%cl
		mov    %ebx,_0aa098_data
		test   $0x000004,%cl
		jne    _02db9f_jump
		mov    0x000014(%edx),%ebx
		sub    0x000004(%edx),%ebx
		cmp    $0x000001,%ebx
		ja     _02dba8_jump

	_02db9f_jump:
		call   _086b49_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02dba8_jump:
		mov    (%edx),%ebx
		mov    %al,(%ebx)
		cmp    $0x00000a,%al
		jne    _02dbbe_jump
		mov    $0x00000a,%eax
		call   _086b49_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02dbbe_jump:
		mov    0x00000d(%edx),%ch
		mov    0x000004(%edx),%esi
		mov    (%edx),%eax
		or     $0x000010,%ch
		inc    %esi
		mov    %ch,0x00000d(%edx)
		lea    0x000001(%eax),%ebx
		mov    %esi,0x000004(%edx)
		mov    %ebx,(%edx)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02dbe0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpl   $0x000000,0x000004(%eax)
		jle    _02dbfd_jump
		testb  $0x000004,0x00000c(%eax)
		jne    _02dbfd_jump
		mov    (%eax),%edx
		mov    (%edx),%bl
		cmp    $0x00000d,%bl
		je     _02dbfd_jump
		cmp    $0x00001a,%bl
		jne    _02dc06_jump

	_02dbfd_jump:
		call   _0869e5_func
		mov    %eax,%edx
		jmp    _02dc1c_jump

	_02dc06_jump:
		mov    0x000004(%eax),%ebx
		dec    %ebx
		mov    (%eax),%edx
		mov    %ebx,0x000004(%eax)
		lea    0x000001(%edx),%ebx
		mov    %ebx,(%eax)
		mov    (%edx),%dl
		and    $0x0000ff,%edx

	_02dc1c_jump:
		mov    %edx,%ebx
		cmp    $0xffffffff,%edx
		je     _02dc56_jump
		mov    _0aa095_data,%al
		xor    %edx,%ebx
		mov    %al,%bl
		inc    %al
		mov    %al,_0aa095_data
		mov    %ebx,%eax
		call   _02da18_func
		xor    $0x0000b9,%al
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    _0d51b4_data,%cl
		xor    %edx,%ebx
		sub    %bl,%cl
		mov    %cl,_0d51b4_data
		incl   _0aa098_data

	_02dc56_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02dc5c_func:
		push   %ebx
		push   %ecx
		push   %edi
		mov    _0aa09c_data,%ebx
		dec    %ebx
		mov    %ebx,_0aa09c_data
		test   %ebx,%ebx
		jge    _02dc77_jump
		movb   $0x000001,_0aa094_data

	_02dc77_jump:
		testb  $0x000004,0x00000d(%edx)
		jne    _02dc88_jump
		mov    0x000014(%edx),%ebx
		sub    0x000004(%edx),%ebx
		cmp    $0x000001,%ebx
		ja     _02dc91_jump

	_02dc88_jump:
		call   _086b49_func
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    

	_02dc91_jump:
		mov    (%edx),%ebx
		mov    %al,(%ebx)
		cmp    $0x00000a,%al
		jne    _02dca7_jump
		mov    $0x00000a,%eax
		call   _086b49_func
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    

	_02dca7_jump:
		mov    0x00000d(%edx),%cl
		mov    0x000004(%edx),%edi
		mov    (%edx),%eax
		or     $0x000010,%cl
		inc    %edi
		mov    %cl,0x00000d(%edx)
		lea    0x000001(%eax),%ebx
		mov    %edi,0x000004(%edx)
		mov    %ebx,(%edx)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    



_02dccc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000008,%ecx
		xor    %edx,%edx

	_02dcd6_jump:
		lea    0x000000(,%edx,8),%eax
		mov    %ecx,%ebx

	_02dcdf_jump:
		inc    %eax
		mov    %dl,_0d49ab_data(%eax)
		cmp    %ebx,%eax
		jne    _02dcdf_jump
		inc    %edx
		add    $0x000008,%ecx
		cmp    $0x000100,%edx
		jl     _02dcd6_jump
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,_0aa09c_data
		mov    %edx,_0aa098_data
		mov    $0x000057,%dl
		mov    %ah,_0aa094_data
		mov    %dl,_0aa095_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02dd18_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%ebp
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,_0aa08c_data
		call   _02dccc_func
		mov    %dl,_0d51b4_data
		xor    %eax,%eax
		mov    %ebp,%edx
		call   _02da7c_func
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %edx,_0aa09c_data
		mov    %ebp,%edx
		call   _02dae0_func
		cmpb   $0x000000,_0aa094_data
		jne    _02ded5_jump

	_02dd62_jump:
		mov    $0x000008,%esi
		xor    %edx,%edx

	_02dd69_jump:
		mov    0x000004(%esp),%eax
		call   _02db0c_func
		mov    %eax,0x000014(%esp)
		cmp    $0xffffffff,%eax
		jne    _02dd7f_jump
		mov    %edx,%esi
		jmp    _02dd8f_jump

	_02dd7f_jump:
		inc    %edx
		mov    0x000014(%esp),%al
		mov    %al,_0d51ab_data(%edx)
		cmp    $0x000008,%edx
		jl     _02dd69_jump

	_02dd8f_jump:
		test   %esi,%esi
		jne    _02dd9f_jump
		movb   $0x000001,_0aa094_data
		jmp    _02dec8_jump

	_02dd9f_jump:
		mov    $0xffffffff,%ebx
		xor    %ecx,%ecx
		xor    %edi,%edi
		mov    %ebx,0x000010(%esp)
		mov    %ecx,0x000014(%esp)

	_02ddb0_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		test   %esi,%esi
		jle    _02ddcf_jump
		mov    %edi,%edx

	_02ddba_jump:
		mov    _0d49ac_data(%edx),%cl
		cmp    _0d51ac_data(%eax),%cl
		jne    _02ddc9_jump
		inc    %ebx

	_02ddc9_jump:
		inc    %eax
		inc    %edx
		cmp    %esi,%eax
		jl     _02ddba_jump

	_02ddcf_jump:
		cmp    0x000010(%esp),%ebx
		jle    _02dde5_jump
		mov    0x000014(%esp),%eax
		mov    %ebx,0x000010(%esp)
		mov    %eax,0x00000c(%esp)
		cmp    %esi,%ebx
		je     _02ddf9_jump

	_02dde5_jump:
		mov    0x000014(%esp),%edx
		inc    %edx
		add    $0x000008,%edi
		mov    %edx,0x000014(%esp)
		cmp    $0x000100,%edx
		jl     _02ddb0_jump

	_02ddf9_jump:
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		mov    $0x000001,%edi
		call   _02db54_func
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x00000c(%esp),%eax
		mov    $0x000008,%edx
		shl    $0x000003,%eax
		mov    %ecx,0x000014(%esp)
		mov    %eax,(%esp)
		mov    %edx,0x000008(%esp)
		mov    (%esp),%edx
		xor    %eax,%eax

	_02de29_jump:
		cmp    %esi,%eax
		jge    _02de49_jump
		mov    _0d49ac_data(%edx),%cl
		cmp    _0d51ac_data(%eax),%cl
		je     _02de3d_jump
		add    %edi,%ebx

	_02de3d_jump:
		mov    0x000008(%esp),%ecx
		inc    %edx
		inc    %eax
		add    %edi,%edi
		cmp    %ecx,%eax
		jl     _02de29_jump

	_02de49_jump:
		mov    0x000014(%esp),%ecx
		mov    %ebp,%edx
		shl    $0x000003,%ecx
		mov    %ebx,%eax
		lea    0x000008(%ecx),%edi
		call   _02db54_func
		cmp    %edi,%ecx
		jge    _02de99_jump

	_02de60_jump:
		movl   $0x000002,0x000018(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		cmp    $0x000001,%edx
		jne    _02de87_jump
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    _0d51ac_data(%ecx),%al
		call   _02db54_func

	_02de87_jump:
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		inc    %ecx
		mov    %eax,%ebx
		cmp    %edi,%ecx
		jl     _02de60_jump

	_02de99_jump:
		cmp    $0x000008,%esi
		jge    _02deb0_jump
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _02db54_func
		movb   $0x000001,_0aa094_data
		jmp    _02dec8_jump

	_02deb0_jump:
		mov    (%esp),%edx
		xor    %eax,%eax

	_02deb5_jump:
		inc    %edx
		mov    _0d51ac_data(%eax),%bl
		inc    %eax
		mov    %bl,_0d49ab_data(%edx)
		cmp    $0x000008,%eax
		jl     _02deb5_jump

	_02dec8_jump:
		cmpb   $0x000000,_0aa094_data
		je     _02dd62_jump

	_02ded5_jump:
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    _0d51b4_data,%al
		call   _02da7c_func
		mov    _0aa09c_data,%eax
		mov    %ebp,%edx
		call   _02dae0_func
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02def8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		xor    %ah,%ah
		mov    %ah,_0aa08c_data
		call   _02dccc_func
		mov    %ebp,%eax
		mov    $0xffffffff,%edx
		call   _02da54_func
		mov    %al,_0d51b4_data
		mov    %ebp,%eax
		mov    %edx,0x000004(%esp)
		call   _02dab0_func
		mov    _0aa094_data,%dl
		mov    %eax,_0aa09c_data
		test   %dl,%dl
		jne    _02e05e_jump

	_02df40_jump:
		mov    0x000004(%esp),%esi
		cmp    $0xffffffff,%esi
		jne    _02df72_jump
		mov    %ebp,%eax
		call   _02dbe0_func
		mov    %eax,0x000004(%esp)
		cmp    %esi,%eax
		jne    _02df64_jump
		movb   $0x000001,_0aa094_data
		jmp    _02dff0_jump

	_02df64_jump:
		mov    %ebp,%eax
		call   _02dbe0_func
		mov    %eax,%ebx
		jmp    _02dff0_jump

	_02df72_jump:
		mov    %ebp,%eax
		call   _02dbe0_func
		mov    %eax,%edx
		mov    %eax,0x000004(%esp)
		cmp    $0xffffffff,%eax
		jne    _02dfa4_jump
		xor    %esi,%esi

	_02df86_jump:
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    _0d51ac_data(%esi),%al
		inc    %esi
		call   _02dc5c_func
		cmp    $0x000008,%esi
		jl     _02df86_jump
		movb   $0x000001,_0aa094_data
		jmp    _02dff0_jump

	_02dfa4_jump:
		mov    %ebp,%eax
		call   _02dbe0_func
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		jne    _02dfd9_jump
		xor    %esi,%esi
		test   %edx,%edx
		jle    _02dfd0_jump
		mov    0x000004(%esp),%edi

	_02dfbc_jump:
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    _0d51ac_data(%esi),%al
		inc    %esi
		call   _02dc5c_func
		cmp    %edi,%esi
		jl     _02dfbc_jump

	_02dfd0_jump:
		movb   $0x000001,_0aa094_data
		jmp    _02dff0_jump

	_02dfd9_jump:
		xor    %esi,%esi

	_02dfdb_jump:
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    _0d51ac_data(%esi),%al
		inc    %esi
		call   _02dc5c_func
		cmp    $0x000008,%esi
		jl     _02dfdb_jump

	_02dff0_jump:
		cmpb   $0x000000,_0aa094_data
		jne    _02e051_jump
		mov    0x000004(%esp),%edi
		mov    $0x000008,%eax
		xor    %esi,%esi
		shl    $0x000003,%edi
		mov    %eax,(%esp)

	_02e00a_jump:
		movl   $0x000002,0x000008(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  0x000008(%esp)
		cmp    $0x000001,%edx
		jne    _02e02f_jump
		mov    %ebp,%eax
		call   _02dbe0_func
		mov    %al,_0d49ac_data(%edi)

	_02e02f_jump:
		mov    %ebx,%edx
		mov    _0d49ac_data(%edi),%al
		sar    $0x00001f,%edx
		mov    %al,_0d51ac_data(%esi)
		mov    %ebx,%eax
		sub    %edx,%eax
		sar    %eax
		inc    %edi
		inc    %esi
		mov    (%esp),%edx
		mov    %eax,%ebx
		cmp    %edx,%esi
		jl     _02e00a_jump

	_02e051_jump:
		cmpb   $0x000000,_0aa094_data
		je     _02df40_jump

	_02e05e_jump:
		cmpl   $0x000000,_0aa09c_data
		jne    _02e077_jump
		cmpb   $0x000000,_0d51b4_data
		je     _02e084_jump
		push   $_0a069c_data
		jmp    _02e07c_jump

	_02e077_jump:
		push   $_0a06b8_data

	_02e07c_jump:
		call   _02e090_func
		add    $0x000004,%esp

	_02e084_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02e090_func:
		push   %edx
		sub    $0x000004,%esp
		lea    0x000010(%esp),%edx
		push   $_0a06d0_data
		mov    %edx,0x000004(%esp)
		call   _085441_func
		add    $0x000004,%esp
		mov    %esp,%edx
		mov    0x00000c(%esp),%eax
		call   _086bed_func
		xor    %edx,%edx
		mov    $0x000001,%ah
		mov    %edx,(%esp)
		mov    %ah,_0aa08c_data
		add    $0x000004,%esp
		pop    %edx
		ret    



_02e0d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000040(%eax),%cx
		xor    %eax,%eax
		mov    _0b9320_data,%bx
		mov    _0b9364_data,%al
		mov    0x000028(%esi),%di
		add    %ebx,%eax
		sub    %edi,%eax
		movzbw 0x00006c(%esi),%di
		sub    %edi,%eax
		mov    0x000034(%esi),%bx
		mov    %eax,%edi
		cmp    _0b9342_data,%bx
		jne    _02e222_jump
		movb   $0x000005,0x000076(%esi)
		mov    _0b9324_data,%eax
		add    $0x000008,%eax
		test   %di,%di
		jle    _02e1a9_jump
		cmp    $0x000062,%di
		jle    _02e131_jump
		mov    %eax,_0b9324_data
		jmp    _02e167_jump

	_02e131_jump:
		cmp    $0x000046,%di
		jle    _02e13e_jump
		mov    $0x000004,%edx
		jmp    _02e167_jump

	_02e13e_jump:
		cmp    $0x00003c,%di
		jle    _02e14b_jump
		mov    $0x000003,%edx
		jmp    _02e167_jump

	_02e14b_jump:
		cmp    $0x000028,%di
		jle    _02e158_jump
		mov    $0x000002,%edx
		jmp    _02e167_jump

	_02e158_jump:
		cmp    $0x000014,%di
		jle    _02e165_jump
		mov    $0x000001,%edx
		jmp    _02e167_jump

	_02e165_jump:
		xor    %edx,%edx

	_02e167_jump:
		cmp    %dx,%cx
		jge    _02e184_jump
		mov    0x000075(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000075(%esi)
		test   %al,%al
		ja     _02e184_jump
		inc    %ecx
		movb   $0x000005,0x000075(%esi)
		jmp    _02e23f_jump

	_02e184_jump:
		cmp    %dx,%cx
		jle    _02e23f_jump
		mov    0x000075(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000075(%esi)
		test   %al,%al
		ja     _02e23f_jump
		dec    %ecx
		movb   $0x000005,0x000075(%esi)
		jmp    _02e23f_jump

	_02e1a9_jump:
		neg    %edi
		cmp    $0x000069,%di
		jle    _02e1b8_jump
		mov    %eax,_0b9324_data
		jmp    _02e1ee_jump

	_02e1b8_jump:
		cmp    $0x000046,%di
		jle    _02e1c5_jump
		mov    $0xfffffffc,%edx
		jmp    _02e1ee_jump

	_02e1c5_jump:
		cmp    $0x00003c,%di
		jle    _02e1d2_jump
		mov    $0xfffffffd,%edx
		jmp    _02e1ee_jump

	_02e1d2_jump:
		cmp    $0x000028,%di
		jle    _02e1df_jump
		mov    $0xfffffffe,%edx
		jmp    _02e1ee_jump

	_02e1df_jump:
		cmp    $0x000014,%di
		jle    _02e1ec_jump
		mov    $0xffffffff,%edx
		jmp    _02e1ee_jump

	_02e1ec_jump:
		xor    %edx,%edx

	_02e1ee_jump:
		cmp    %dx,%cx
		jle    _02e208_jump
		mov    0x000075(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000075(%esi)
		test   %al,%al
		ja     _02e208_jump
		dec    %ecx
		movb   $0x000005,0x000075(%esi)
		jmp    _02e23f_jump

	_02e208_jump:
		cmp    %dx,%cx
		jle    _02e23f_jump
		mov    0x000075(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000075(%esi)
		test   %al,%al
		ja     _02e23f_jump
		dec    %ecx
		movb   $0x000005,0x000075(%esi)
		jmp    _02e23f_jump

	_02e222_jump:
		mov    0x000076(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000076(%esi)
		test   %al,%al
		jne    _02e23f_jump
		movb   $0x000005,0x000076(%esi)
		test   %cx,%cx
		je     _02e23f_jump
		jle    _02e23e_jump
		dec    %ecx
		jmp    _02e23f_jump

	_02e23e_jump:
		inc    %ecx

	_02e23f_jump:
		mov    %ecx,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x00006c(%esi),%al
		add    %ecx,%edx
		mov    0x00006d(%esi),%bl
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _02e260_jump
		xor    %ecx,%ecx

	_02e260_jump:
		mov    0x000071(%esi),%ah
		mov    %cx,0x000040(%esi)
		test   %ah,%ah
		jne    _02e2c9_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _02e2c9_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _02e44d_jump
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _02e44d_jump
		mov    0x000083(%esi),%bh
		cmp    $0x000064,%bh
		jbe    _02e2ba_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x000083(%esi)
		call   _065368_func
		jmp    _02e44d_jump

	_02e2ba_jump:
		mov    %bh,%cl
		inc    %cl
		mov    %cl,0x000083(%esi)
		jmp    _02e44d_jump

	_02e2c9_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _02e3a4_jump
		cmpb   $0x000001,0x000070(%esi)
		jne    _02e3a4_jump
		movw   $0x000000,0x000052(%esi)
		cmpb   $0x000002,_0b9369_data
		jne    _02e44d_jump
		mov    _0b9352_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02e44d_jump
		mov    0x00006f(%esi),%ah
		cmp    $0x000014,%ah
		jb     _02e44d_jump
		cmp    $0x000016,%ah
		ja     _02e44d_jump
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01e1b8_func
		movswl %di,%eax
		test   %eax,%eax
		jge    _02e33d_jump
		neg    %eax

	_02e33d_jump:
		cmp    $0x000064,%eax
		jge    _02e44d_jump
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		mov    _0b9324_data,%ebp
		mov    _0b9365_data,%al
		sar    $0x000010,%edx
		add    %ebp,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000078(%esi),%al
		sub    %eax,%edx
		lea    -0x00001c(%edx),%eax
		test   %eax,%eax
		jge    _02e370_jump
		neg    %eax

	_02e370_jump:
		cmp    $0x000014,%eax
		jge    _02e44d_jump
		test   %di,%di
		jge    _02e387_jump
		orb    $0x000008,_0b937d_data
		jmp    _02e38e_jump

	_02e387_jump:
		andb   $0x0000f7,_0b937d_data

	_02e38e_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02a364_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e3a4_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _02e44d_jump
		cmpb   $0x000003,0x000070(%esi)
		jne    _02e44d_jump
		cmpl   $0x000000,_0b931c_data
		jne    _02e44d_jump
		cmpb   $0x000000,0x00006f(%esi)
		jne    _02e44d_jump
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _02e44d_jump
		mov    $0x000001,%ebx
		mov    $0xffffffff,%ecx
		lea    0x000008(%esp),%eax
		mov    $0x000001,%edx
		mov    %ebx,_0b931c_data
		mov    %cx,_0b9354_data
		push   %eax
		lea    0x000004(%esp),%eax
		mov    _0b9320_data,%ecx
		lea    0x000008(%esp),%ebx
		sub    $0x000004,%ecx
		push   %eax
		mov    %ecx,_0b9320_data
		mov    %esi,%eax
		lea    0x000014(%esp),%ecx
		call   _01e1b8_func
		mov    0x00000a(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000078(%esi),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0b9365_data,%dl
		sub    %edx,%eax
		mov    $0x000008,%ebx
		mov    %eax,_0b9324_data
		xor    %edx,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func

	_02e44d_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e458_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    %ax,0x000018(%esp)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    _0c30ce_data,%dx
		mov    %ax,0x00001c(%esp)
		test   %dx,%dx
		je     _02e4bf_jump
		mov    0x00001a(%esp),%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sar    $0x000004,%eax
		push   $0x000000
		shl    $0x000004,%eax
		mov    0x000028(%esi),%ebx
		movswl %ax,%edx
		mov    0x00001a(%esp),%eax
		push   $0x000000
		sar    $0x000010,%eax
		mov    $0x000010,%ecx
		add    %ebx,%eax
		push   $0x000000
		sar    $0x000004,%eax
		push   $0x000000
		shl    $0x000004,%eax
		mov    %ecx,%ebx
		cwtl   
		call   _027cc0_func

	_02e4bf_jump:
		mov    0x000052(%esi),%bx
		test   %bx,%bx
		jne    _02e4d5_jump
		mov    %bx,0x000040(%esi)
		mov    %bx,0x000042(%esi)
		jmp    _02e58e_jump

	_02e4d5_jump:
		cmp    $0x000001,%bx
		jne    _02e58e_jump
		mov    _0b9342_data,%ax
		mov    0x000034(%esi),%di
		cmp    %di,%ax
		jne    _02e528_jump
		xor    %edi,%eax
		mov    _0b9320_data,%dx
		mov    _0b9364_data,%al
		mov    0x000028(%esi),%bx
		add    %edx,%eax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x00006c(%esi),%bl
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    _0b9324_data,%eax
		add    $0x000008,%eax
		cmp    $0x000060,%bx
		jg     _02e523_jump
		movswl %bx,%edx
		cmp    $0xffffff95,%edx
		jge    _02e528_jump

	_02e523_jump:
		mov    %eax,_0b9324_data

	_02e528_jump:
		mov    0x00001a(%esp),%edi
		mov    0x000016(%esp),%ecx
		mov    %esi,%eax
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		mov    %edi,%ebx
		mov    %ecx,%edx
		call   _01e0cc_func
		test   %ax,%ax
		je     _02e567_jump
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _02bb40_func
		test   %ax,%ax
		je     _02e567_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _065368_func

	_02e567_jump:
		mov    0x000085(%esi),%ah
		and    $0x0000f7,%ah
		mov    0x000074(%esi),%dl
		mov    %ah,0x000085(%esi)
		cmp    $0x000014,%dl
		jne    _02e58e_jump
		mov    0x00005c(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)

	_02e58e_jump:
		cmpw   $0x000001,0x000052(%esi)
		jl     _02e94a_jump
		mov    0x000032(%esi),%eax
		mov    _0c1d74_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cwtl   
		mov    %eax,%ecx
		shl    $0x000004,%ecx
		add    %ecx,%eax
		mov    _0b9410_data,%ecx
		shl    $0x000003,%eax
		add    %eax,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		jne    _02e5c9_jump
		movl   $0x000001,0x000024(%ecx)

	_02e5c9_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _02e94a_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _02e94a_jump
		cmpw   $0x000001,0x000052(%esi)
		jne    _02e5fd_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		movw   $0x000002,0x000052(%esi)
		call   _065368_func

	_02e5fd_jump:
		mov    0x000052(%esi),%bx
		cmp    $0x000002,%bx
		jne    _02e724_jump
		movw   $0x000003,0x000052(%ecx)
		mov    0x000028(%ecx),%di
		mov    0x000028(%esi),%ax
		mov    0x00002c(%esi),%dx
		sub    %eax,%edi
		mov    0x00002c(%ecx),%ax
		sub    %edx,%eax
		cmp    $0x000006,%di
		jle    _02e636_jump
		movw   $0x00fffc,0x000040(%ecx)
		jmp    _02e94a_jump

	_02e636_jump:
		movswl %di,%edx
		cmp    $0xfffffffa,%edx
		jge    _02e64e_jump
		movw   $0x000004,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e64e_jump:
		test   %di,%di
		jle    _02e663_jump
		movw   $0x00ffff,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e663_jump:
		jge    _02e675_jump
		movw   $0x000001,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e675_jump:
		movswl %ax,%edx
		movw   $0x000000,0x000040(%ecx)
		cmp    $0xfffffff8,%edx
		jge    _02e693_jump
		movw   $0x000004,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e693_jump:
		cmp    $0x000008,%ax
		jle    _02e6a9_jump
		movw   $0x00fffc,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e6a9_jump:
		test   %ax,%ax
		jle    _02e6be_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e6be_jump:
		jl     _02e944_jump
		movw   $0x000000,0x000042(%ecx)
		movw   $0x000004,0x000052(%esi)
		mov    0x000064(%ecx),%bx
		movw   $0x000004,0x000052(%ecx)
		cmp    $0x0000a8,%bx
		jne    _02e6ef_jump
		movw   $0x000009,0x000020(%esp)
		mov    $0x000005,%eax
		jmp    _02e6fe_jump

	_02e6ef_jump:
		mov    $0x000005,%edi
		mov    $0x000009,%eax
		mov    %di,0x000020(%esp)

	_02e6fe_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01dea8_func
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000020(%esp),%bl
		call   _01dea8_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e724_jump:
		cmp    $0x000004,%bx
		jne    _02e81b_jump
		cmpw   $0x0000a8,0x000064(%esi)
		jne    _02e73f_jump
		movw   $0x000007,0x000020(%esp)
		jmp    _02e746_jump

	_02e73f_jump:
		movw   $0x00000b,0x000020(%esp)

	_02e746_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _02e94a_jump
		xor    %eax,%eax
		mov    0x000020(%esp),%edx
		mov    0x000070(%esi),%al
		cmp    %dx,%ax
		jne    _02e94a_jump
		cmpb   $0x000000,0x00006f(%esi)
		jne    _02e94a_jump
		movw   $0x000005,0x000052(%esi)
		cmpl   $0x000000,_0b931c_data
		jne    _02e94a_jump
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _02e94a_jump
		mov    _0b9352_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02e94a_jump
		cmpw   $0x0000a9,0x000064(%esi)
		jne    _02e94a_jump
		mov    $0x000001,%eax
		lea    0x000014(%esp),%ecx
		lea    0x000008(%esp),%ebx
		mov    _0b9320_data,%edx
		mov    %eax,_0b931c_data
		lea    0x000028(%esp),%eax
		sub    $0x000004,%edx
		push   %eax
		lea    0x000028(%esp),%eax
		mov    %edx,_0b9320_data
		push   %eax
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01e1b8_func
		mov    0x000012(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000078(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0b9365_data,%al
		mov    $0x000008,%ebx
		sub    %eax,%edx
		mov    $_0b92f8_data,%eax
		mov    %edx,_0b9324_data
		xor    %edx,%edx
		call   _01dea8_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e81b_jump:
		cmp    $0x000005,%bx
		jne    _02e94a_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    %ax,0x00000c(%esp)
		mov    0x00001a(%esp),%eax
		mov    0x00000e(%esp),%ebp
		sar    $0x000010,%eax
		sar    $0x000010,%ebp
		mov    %eax,0x000004(%esp)
		mov    0x000016(%esp),%eax
		mov    0x00000a(%esp),%edi
		sar    $0x000010,%eax
		mov    0x000004(%esp),%ebx
		mov    %eax,(%esp)
		mov    %eax,%edx
		mov    %esi,%eax
		sar    $0x000010,%edi
		call   _01e0cc_func
		mov    %eax,0x000008(%esp)
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _01e0cc_func
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		mov    %ax,0x000014(%esp)
		mov    %esi,%eax
		call   _02bb40_func
		mov    %eax,0x000024(%esp)
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _02bb40_func
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		mov    %eax,0x000028(%esp)
		mov    %esi,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _02e912_jump
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _02e912_jump
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movw   $0x000001,0x000052(%ecx)
		call   _02bb40_func
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _02bb40_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _065368_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _065368_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e912_jump:
		mov    0x00000a(%esp),%ebx
		mov    0x00000e(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01e0cc_func
		test   %ax,%ax
		jne    _02e94a_jump
		cmpw   $0x0000a8,0x000064(%ecx)
		jne    _02e944_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e944_jump:
		movw   $0x000001,0x000042(%ecx)

	_02e94a_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e954_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    0x000064(%eax),%dx
		xor    %ebx,%ebx
		cmp    $0x0000a9,%dx
		jne    _02ea29_jump
		movl   $0x00000a,(%esp)
		mov    0x000032(%esi),%eax
		mov    _0c1d74_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%esi),%ax
		je     _02ea67_jump
		cwtl   
		mov    %eax,%edi
		shl    $0x000004,%edi
		add    %eax,%edi
		mov    _0b9410_data,%eax
		shl    $0x000003,%edi
		add    %eax,%edi
		cmpw   $0x0000a8,0x000064(%edi)
		jne    _02ea67_jump
		cmpw   $0x000080,0x000042(%edi)
		jle    _02e9bf_jump
		movw   $0x000001,0x000042(%edi)
		jmp    _02e9d0_jump

	_02e9bf_jump:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff80,%eax
		jge    _02e9d0_jump
		movw   $0x00ffff,0x000042(%edi)

	_02e9d0_jump:
		mov    _0c312a_data,%ecx
		mov    _0c3128_data,%ebx
		push   %edi
		mov    0x000040(%edi),%eax
		mov    0x00002c(%edi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%eax
		sar    $0x000010,%ebx
		add    %eax,%edx
		mov    _0c313c_data,%eax
		mov    %edx,0x00002c(%edi)
		sar    $0x000010,%eax
		mov    _0c3126_data,%edx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _028cf4_func
		mov    %eax,%ebx
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edi),%ecx
		add    %eax,%eax
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		mov    0x000042(%edi),%cx
		add    %ecx,%ecx
		jmp    _02ea67_jump

	_02ea29_jump:
		mov    $0x000001,%edi
		mov    _0c312a_data,%ecx
		mov    _0c3128_data,%ebx
		mov    _0c3126_data,%edx
		push   %eax
		mov    _0c313c_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		push   %eax
		mov    $0x000017,%eax
		mov    %edi,0x000008(%esp)
		call   _028cf4_func
		mov    %eax,%ebx
		mov    0x000042(%esi),%cx

	_02ea67_jump:
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		je     _02ec79_jump
		mov    _0b9369_data,%ah
		dec    %ebx
		cmp    $0x000002,%ah
		jne    _02eaf3_jump
		mov    _0b9368_data,%dl
		cmp    %ah,%dl
		je     _02ea99_jump
		cmp    $0x000001,%dl
		je     _02ea99_jump
		mov    $0x000001,%eax
		jmp    _02ea9b_jump

	_02ea99_jump:
		xor    %eax,%eax

	_02ea9b_jump:
		test   %eax,%eax
		je     _02eaf3_jump
		cmpb   $0x000008,_0b9368_data
		je     _02eab7_jump
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func

	_02eab7_jump:
		cmp    $0x000080,%cx
		jle    _02eac5_jump
		mov    $0x000001,%ecx
		jmp    _02ead2_jump

	_02eac5_jump:
		movswl %cx,%eax
		cmp    $0xffffff80,%eax
		jge    _02ead2_jump
		mov    $0xffffffff,%ecx

	_02ead2_jump:
		mov    _0b9324_data,%edi
		movswl %cx,%eax
		add    %eax,%edi
		xor    %ecx,%ecx
		mov    %edi,_0b9324_data
		mov    %cx,_0b934a_data
		mov    %cx,_0b933a_data

	_02eaf3_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _02eb05_jump
		cmpb   $0x000008,_0b9368_data
		je     _02eb0c_jump

	_02eb05_jump:
		mov    $0x000001,%eax
		jmp    _02eb0e_jump

	_02eb0c_jump:
		xor    %eax,%eax

	_02eb0e_jump:
		test   %eax,%eax
		je     _02ec79_jump
		cmpb   $0x000000,_0b9369_data
		jne    _02eb28_jump
		cmpb   $0x00003d,_0b9368_data
		je     _02eb2f_jump

	_02eb28_jump:
		mov    $0x000001,%eax
		jmp    _02eb31_jump

	_02eb2f_jump:
		xor    %eax,%eax

	_02eb31_jump:
		test   %eax,%eax
		je     _02ec79_jump
		mov    0x00006f(%esi),%ch
		cmp    $0x000014,%ch
		jb     _02ec79_jump
		cmp    $0x000016,%ch
		ja     _02ec79_jump
		mov    0x000071(%esi),%ah
		test   %ah,%ah
		jne    _02ec79_jump
		mov    (%esp),%edx
		mov    0x000070(%esi),%al
		cmp    %dx,%ax
		jne    _02ec79_jump
		cmpb   $0x000001,0x000079(%esi)
		je     _02eb78_jump
		cmp    $0x000001,%bx
		jne    _02ec52_jump

	_02eb78_jump:
		testb  $0x000004,_0b937d_data
		je     _02ec52_jump
		cmpb   $0x000002,_0b9369_data
		jne    _02eb97_jump
		cmpb   $0x000008,_0b9368_data
		je     _02eb9e_jump

	_02eb97_jump:
		mov    $0x000001,%eax
		jmp    _02eba0_jump

	_02eb9e_jump:
		xor    %eax,%eax

	_02eba0_jump:
		test   %eax,%eax
		je     _02ec52_jump
		cmpb   $0x000000,_0b9369_data
		jne    _02ebba_jump
		cmpb   $0x00003d,_0b9368_data
		je     _02ebc1_jump

	_02ebba_jump:
		mov    $0x000001,%eax
		jmp    _02ebc3_jump

	_02ebc1_jump:
		xor    %eax,%eax

	_02ebc3_jump:
		test   %eax,%eax
		je     _02ec52_jump
		mov    _0b9320_data,%bx
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    _0b9364_data,%al
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x00006c(%esi),%dl
		sub    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		cwtl   
		test   %eax,%eax
		jge    _02ebf1_jump
		neg    %eax

	_02ebf1_jump:
		cmp    $0x000019,%eax
		jge    _02ec3b_jump
		mov    $0xffffffff,%ebx
		mov    $_0b92f8_data,%eax
		xor    %edi,%edi
		xor    %ebp,%ebp
		xor    %edx,%edx
		mov    %di,_0b9338_data
		mov    %di,_0b933a_data
		mov    %di,_0c3112_data
		mov    %bx,_0b9354_data
		xor    %ebx,%ebx
		mov    %ebp,_0b931c_data
		call   _01dea8_func
		mov    0x000034(%esi),%ax
		mov    %ax,_0b9342_data
		jmp    _02ec79_jump

	_02ec3b_jump:
		test   %dx,%dx
		jge    _02ec49_jump
		orb    $0x000008,_0b937d_data
		jmp    _02ec6d_jump

	_02ec49_jump:
		andb   $0x0000f7,_0b937d_data
		jmp    _02ec6d_jump

	_02ec52_jump:
		cmpb   $0x000000,0x000079(%esi)
		je     _02ec5d_jump
		test   %bx,%bx
		jne    _02ec66_jump

	_02ec5d_jump:
		orb    $0x000008,_0b937d_data
		jmp    _02ec6d_jump

	_02ec66_jump:
		andb   $0x0000f7,_0b937d_data

	_02ec6d_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02a364_func

	_02ec79_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ec90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0c2f40_data
		jne    _02ed0f_jump
		cmpb   $0x000001,_0c33cb_data
		jne    _02ed0f_jump
		cmpb   $0x000000,_0c3389_data
		jne    _02ed0f_jump
		mov    _0c3348_data,%dh
		test   $0x000002,%dh
		je     _02ecd8_jump
		mov    $0x000022,%ecx
		mov    $_0b92f8_data,%edi
		mov    %dh,%bl
		mov    $_0b95b8_data,%esi
		and    $0x0000fd,%bl
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bl,_0c3348_data

	_02ecd8_jump:
		mov    $_0c0ff8_data,%eax
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		call   _085244_func
		mov    %bx,_0c3156_data
		xor    %eax,%eax
		mov    %cx,_0a525a_data
		mov    _0bf3a5_data,%al
		xor    %bh,%bh
		mov    %ax,_0c3102_data
		mov    %bh,_0c33cb_data

	_02ed0f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ed18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%ebx
		mov    _0c3130_data,%si
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0c30e2_data
		mov    %bx,_0c30e8_data
		mov    %dx,_0c3066_data
		mov    %ah,_0a56fd_data
		mov    %ah,_0c338b_data
		cmp    $0x000004,%si
		je     _02ed5d_jump
		testb  $0x000002,_0c3348_data
		je     _02ed91_jump

	_02ed5d_jump:
		mov    $0x000001,%bl
		mov    $0x000022,%ecx
		mov    $_0b92f8_data,%edi
		mov    $_0b95b8_data,%esi
		mov    %bl,_0c33d9_data
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0c3348_data,%bh
		mov    $0x000001,%edi
		and    $0x0000fd,%bh
		mov    %di,_0c3130_data
		mov    %bh,_0c3348_data

	_02ed91_jump:
		mov    $0x000087,%edx
		mov    $0x000018,%ebx
		xor    %eax,%eax
		xor    %cl,%cl
		mov    _0b9365_data,%al
		xor    %esi,%esi
		sub    %eax,%edx
		mov    $_0b92f8_data,%eax
		mov    %edx,_0b9324_data
		mov    $0x000003,%edx
		mov    %cl,_0b9367_data
		call   _01dea8_func
		mov    $0x0000e1,%edx
		mov    $0x000082,%ebx
		mov    _0b937d_data,%ch
		xor    %eax,%eax
		and    $0x0000f7,%ch
		mov    _0b9364_data,%al
		mov    %ch,_0b937d_data
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,_0b9320_data
		mov    %ax,_0b9338_data
		mov    %ax,_0b933a_data
		xor    %eax,%eax
		mov    $0x000050,%edx
		call   _01dd10_func
		mov    $_0b9530_data,%eax
		mov    %edx,_0b9558_data
		mov    %ebx,_0b955c_data
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    $0x00006e,%ecx
		call   _01dea8_func
		mov    $0x000078,%ebx
		mov    $0x000050,%al
		mov    _0b6ecd_data,%dl
		mov    %bx,_0b6e7e_data
		mov    %al,_0b6eb4_data
		and    $0x0000fb,%dl
		mov    $0x000040,%ah
		mov    $0x000014,%ebx
		mov    %dl,_0b6ecd_data
		mov    %ah,_0b6eb5_data
		xor    %dh,%dh
		mov    $_0b6e48_data,%eax
		mov    %dh,_0b6ecb_data
		mov    $0x000005,%edx
		mov    %cx,_0b6e80_data
		call   _01dea8_func
		mov    _0c3162_data,%ax
		xor    %bl,%bl
		mov    %ax,_0c30e6_data
		mov    %si,_0c3162_data
		mov    _0c3166_data,%ax
		mov    %bl,_0c338e_data
		mov    %ax,_0c30e4_data
		mov    %si,_0c3166_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02eeb0_func:
		push   %ebx
		push   %edx
		mov    $0x000005,%ebx
		xor    %edx,%edx
		mov    _0c3396_data,%ah
		mov    %dx,_0c30e2_data
		mov    %bx,_0c30e8_data
		test   %ah,%ah
		je     _02eed6_jump
		call   _02f30c_func

	_02eed6_jump:
		pop    %edx
		pop    %ebx
		ret    



_02ef4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		movzbl _0c3386_data,%esi
		mov    %esi,%edi
		shl    $0x000004,%edi
		jmp    _02ef8c_jump

	_02ef5f_jump:
		mov    _0bf2f8_data,%eax
		add    $0x000010,%edi
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    -0x000004(%edi,%eax,1),%dl
		mov    -0x000006(%edi,%eax,1),%cl
		mov    -0x00000c(%edi,%eax,1),%ebx
		push   %edx
		mov    -0x00000e(%edi,%eax,1),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		mov    -0x000010(%edi,%eax,1),%eax
		inc    %esi
		call   _01b0f8_func

	_02ef8c_jump:
		xor    %eax,%eax
		mov    _0c3388_data,%al
		cmp    %eax,%esi
		jbe    _02ef5f_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02efa0_func:
		push   %ecx
		push   %edx
		push   %esi
		call   _042170_func
		call   _03ede8_jump
		mov    _0c30e2_data,%dx
		inc    %edx
		mov    %dx,_0c30e2_data
		cmp    $0x00003c,%dx
		jne    _02efda_jump
		mov    _0c30e8_data,%si
		xor    %ecx,%ecx
		dec    %esi
		mov    %cx,_0c30e2_data
		mov    %si,_0c30e8_data

	_02efda_jump:
		call   _0426b0_func
		test   %al,%al
		jne    _02efec_jump
		call   _0426f8_func
		test   %al,%al
		je     _02eff6_jump

	_02efec_jump:
		cmpw   $0x000003,_0c30e8_data
		jle    _02f000_jump

	_02eff6_jump:
		cmpw   $0x000000,_0c30e8_data
		jg     _02f009_jump

	_02f000_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_02f009_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_02f010_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		call   _071f04_func
		mov    $0x000001,%edx
		lea    0x000004(%esp),%ecx
		xor    %ebx,%ebx
		mov    %dx,_0c3016_data
		mov    %bx,_0c3014_data
		call   _03ead0_func
		mov    %esp,%edx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _017e8d_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _017eca_func
		xor    %ah,%ah
		mov    %ah,_0c3399_data
		mov    $_0b0848_data,%eax
		call   _03ece4_func
		call   _03ed88_func
		mov    _0a7c9c_data,%dl
		xor    %esi,%esi
		cmp    $0x000001,%dl
		jne    _02f091_jump
		xor    %eax,%eax
		mov    _0c33a0_data,%al
		mov    $0x000001,%esi
		call   _03fa6c_func

	_02f091_jump:
		call   _03ea80_func
		call   _02eeb0_func
		mov    $_02efa0_func,%eax
		call   _03eb48_func
		call   _03ead0_func
		xor    %dh,%dh
		call   _03eaf8_func
		mov    %dh,_0c3394_data
		mov    %dh,_0c338e_data
		test   %esi,%esi
		je     _02f0cd_jump
		xor    %eax,%eax
		mov    _0c33a0_data,%al
		call   _03f9fc_func

	_02f0cd_jump:
		call   _03ed58_func
		call   _03edc8_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _017eca_func
		call   _03ea80_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f0f8_func:
		push   %ebx
		push   %edx
		call   _042170_func
		call   _02f3a8_func
		call   _03ede8_jump
		call   _02ef4c_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0c338e_data,%dl
		mov    %ah,_0c338e_data
		call   _0426b0_func
		test   %al,%al
		jne    _02f130_jump
		call   _0427d4_func
		test   %al,%al
		je     _02f144_jump

	_02f130_jump:
		mov    $0x000001,%bl
		mov    _0c21d2_data,%al
		sub    %bl,%al
		mov    %bl,_0c338e_data
		mov    %al,_0c3399_data

	_02f144_jump:
		cmpb   $0x000000,_0c338e_data
		jne    _02f152_jump
		test   %dx,%dx
		je     _02f15a_jump

	_02f152_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ebx
		ret    

	_02f15a_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_02f224_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0b4028_data,%eax
		mov    $0x000001,%bl
		call   _03ece4_func
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    %bl,_0c3368_data
		xor    %bh,%bh
		call   _02f30c_func
		mov    %bh,_0c3368_data

	_02f24b_jump:
		xor    %eax,%eax
		mov    _0c21d2_data,%esi
		mov    _0c3399_data,%al
		cmp    %esi,%eax
		jge    _02f2b5_jump

	_02f25c_jump:
		call   _018bed_func
		call   _018b0f_func
		call   _018aff_func
		cmp    _0c339f_data,%cl
		je     _02f27a_jump
		call   _018b72_func
		mov    %eax,%edx

	_02f27a_jump:
		test   %bl,%bl
		je     _02f28e_jump
		call   _03ea58_func
		cmp    _0c317e_data,%cx
		jne    _02f28e_jump
		mov    %cl,%bl

	_02f28e_jump:
		call   _03ba10_func
		mov    %edx,%eax
		call   _02f0f8_func
		test   %ax,%ax
		je     _02f25c_jump
		mov    _0c3399_data,%ah
		inc    %ah
		mov    %cl,_0c338e_data
		mov    %ah,_0c3399_data
		jmp    _02f24b_jump

	_02f2b5_jump:
		call   _03ead0_func
		call   _03ed58_func
		call   _03ea80_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f2cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0bf2f8_data,%esi
		xor    %edx,%edx
		jmp    _02f2f5_jump

	_02f2da_jump:
		cmpw   $0x000000,0x000008(%eax)
		je     _02f2f2_jump
		xor    %ebx,%ebx
		mov    _0bf2f4_data,%ecx
		mov    0x000008(%eax),%bx
		mov    (%ecx,%ebx,4),%ebx
		mov    %ebx,(%eax)

	_02f2f2_jump:
		add    $0x000010,%edx

	_02f2f5_jump:
		lea    (%esi,%edx,1),%eax
		cmpb   $0x0000ff,0x00000b(%eax)
		jne    _02f2da_jump
		mov    %esi,_0bf2f8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f30c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%edx
		mov    $0x000300,%ecx
		mov    $_0af048_data,%esi
		xor    %ah,%ah
		mov    $_0b0848_data,%edi
		mov    %ah,_0c33a9_data
		mov    %ah,_0c3386_data
		mov    %ah,_0c3388_data
		mov    %ah,_0c338e_data
		mov    %ah,_0c3399_data
		mov    %ah,_0c3387_data
		mov    _0b3408_data,%eax
		xor    %bl,%bl
		mov    %eax,_0c0f90_data
		mov    _0b33e8_data,%eax
		xor    %bh,%bh
		mov    %eax,_0c0f8c_data
		mov    _0b33c8_data,%eax
		mov    %bx,_0c3038_data
		mov    %eax,_0c0f94_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_02f384_jump:
		inc    %edx
		movswl %dx,%ebx
		mov    _0bf2f8_data,%eax
		shl    $0x000004,%ebx
		mov    0x00000b(%ebx,%eax,1),%cl
		movw   $0x0000dc,0x000006(%ebx,%eax,1)
		cmp    $0x0000ff,%cl
		jne    _02f384_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f3a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    _0bf2f8_data,%esi
		cmpb   $0x000000,_0c3396_data
		je     _02f52f_jump
		mov    $0x000001,%eax
		call   _05a0ec_func
		cmpb   $0x000000,_0c334c_data
		jne    _02f52f_jump
		xor    %eax,%eax
		mov    _0c3386_data,%al
		mov    %eax,%edx
		mov    _0bf2f8_data,%esi
		shl    $0x000004,%edx
		jmp    _02f3ff_jump

	_02f3ee_jump:
		mov    %esi,%ebx
		mov    0x000006(%edx,%ebx,1),%cx
		add    $0x000010,%edx
		dec    %ecx
		inc    %eax
		mov    %cx,-0x00000a(%edx,%ebx,1)

	_02f3ff_jump:
		xor    %ebx,%ebx
		mov    _0c3388_data,%bl
		cmp    %ebx,%eax
		jle    _02f3ee_jump
		mov    %ebx,%eax
		shl    $0x000004,%eax
		mov    _0c3038_data,%bx
		add    %esi,%eax
		mov    %esi,_0bf2f8_data
		inc    %ebx
		movzbw 0x00000b(%eax),%di
		mov    %bx,_0c3038_data
		test   %di,%di
		jne    _02f44f_jump
		mov    0x00000a(%eax),%al
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		lea    0x000008(%esp),%edx
		and    $0x0000ff,%eax
		call   _01f3b8_func
		addl   $0x000002,0x000008(%esp)
		jmp    _02f4b1_jump

	_02f44f_jump:
		cmp    $0x0000ff,%di
		jne    _02f460_jump
		movl   $0x0000a0,0x000008(%esp)
		jmp    _02f4b1_jump

	_02f460_jump:
		cmp    $0x000064,%di
		jle    _02f492_jump
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		lea    0x000008(%esp),%edx
		mov    $0x000002,%eax
		call   _01f3b8_func
		mov    %edi,%eax
		mov    0x000008(%esp),%ecx
		sub    $0x000064,%eax
		add    %eax,%ecx
		mov    %ecx,%eax
		mov    %ecx,0x000008(%esp)
		add    $0x000002,%eax
		jmp    _02f4ad_jump

	_02f492_jump:
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		lea    0x000008(%esp),%edx
		mov    $0x000002,%eax
		call   _01f3b8_func
		mov    0x000008(%esp),%eax
		imul   %edi,%eax

	_02f4ad_jump:
		mov    %eax,0x000008(%esp)

	_02f4b1_jump:
		mov    0x000008(%esp),%ecx
		mov    _0c3038_data,%ax
		mov    _0bf2f8_data,%esi
		cmp    %cx,%ax
		jl     _02f509_jump
		xor    %eax,%eax
		mov    %ax,_0c3038_data
		cmp    $0x0000ff,%di
		je     _02f502_jump
		mov    $0x000090,%eax
		mov    %eax,%edx
		mov    _0c21d2_data,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		incb   _0c3388_data
		xor    %edx,%edx
		mov    _0c3388_data,%dl
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _02f509_jump

	_02f502_jump:
		movb   $0x000001,_0c338e_data

	_02f509_jump:
		xor    %eax,%eax
		mov    _0c3386_data,%al
		mov    %eax,%edx
		shl    $0x000004,%edx
		mov    %esi,%eax
		mov    0x000004(%edx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %esi,_0bf2f8_data
		cmp    $0xfffffffc,%eax
		jge    _02f52f_jump
		incb   _0c3386_data

	_02f52f_jump:
		mov    _0bf2f8_data,%esi
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f5b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0b9330_data,%dx
		mov    _0b9370_data,%bl
		mov    $0x000002,%ecx
		add    %edx,%ebx
		mov    $_0a06e0_data,%eax
		sub    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		movswl %bx,%ebx
		call   _01b0f8_func
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0b9330_data,%cx
		mov    _0b9370_data,%bl
		mov    $0x0000a0,%edx
		add    %ecx,%ebx
		mov    $_0a06f8_data,%eax
		sub    $0x00001e,%ebx
		mov    $0x000002,%ecx
		movswl %bx,%ebx
		call   _01b0f8_func
		cmpb   $0x000080,_0b9367_data
		jbe    _02f625_jump
		movb   $0x000001,_0c338e_data

	_02f625_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f654_func:
		xor    %ah,%ah
		mov    %ah,_0c338e_data
		ret    



_02f660_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000071(%eax)
		jne    _02f6b1_jump
		cmpb   $0x000006,0x000070(%esi)
		jne    _02f6b1_jump
		cmpb   $0x000004,0x00006f(%esi)
		jne    _02f687_jump
		movw   $0x00fffb,0x000042(%esi)
		jmp    _02f9e4_jump

	_02f687_jump:
		mov    %esi,%eax
		call   _01d740_func
		test   %al,%al
		je     _02f9e4_jump
		mov    0x000085(%esi),%ch
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000085(%esi)
		jmp    _02f9e4_jump

	_02f6b1_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _02f8b1_jump
		mov    0x000070(%esi),%bl
		cmp    $0x000008,%bl
		je     _02f6e5_jump
		cmp    $0x00000a,%bl
		je     _02f6e5_jump
		cmp    $0x00000c,%bl
		je     _02f6e5_jump
		cmp    $0x00000e,%bl
		je     _02f6e5_jump
		cmp    $0x000016,%bl
		je     _02f6e5_jump
		cmp    $0x000017,%bl
		je     _02f6e5_jump
		cmp    $0x000018,%bl
		jne    _02f8b1_jump

	_02f6e5_jump:
		cmpb   $0x000016,0x00006f(%esi)
		jne    _02f8b1_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01e1b8_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		sub    $0x000060,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		xor    %edi,%edi
		add    %ebx,%eax
		mov    $0xfffffffb,%ecx
		sub    $0x000080,%eax
		mov    %di,_0d51b8_data
		mov    %eax,%ebx
		mov    0x000070(%esi),%al
		mov    %cx,_0d51ba_data
		cmp    $0x00000e,%al
		jb     _02f78b_jump
		jbe    _02f7f0_jump
		cmp    $0x000017,%al
		jb     _02f77a_jump
		jbe    _02f847_jump
		cmp    $0x000018,%al
		je     _02f87c_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f77a_jump:
		cmp    $0x000016,%al
		je     _02f812_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f78b_jump:
		cmp    $0x00000a,%al
		jb     _02f79e_jump
		jbe    _02f7ba_jump
		cmp    $0x00000c,%al
		je     _02f7ce_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f79e_jump:
		cmp    $0x000008,%al
		jne    _02f9e4_jump
		mov    $0x000001,%ecx
		movswl %bx,%esi
		movswl %dx,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		jmp    _02f9df_jump

	_02f7ba_jump:
		mov    $0x000001,%ecx
		movswl %bx,%esi
		movswl %dx,%eax
		mov    %ecx,%ebx
		mov    %esi,%edx
		jmp    _02f9df_jump

	_02f7ce_jump:
		mov    $0x000001,%ecx
		movswl %bx,%eax
		movswl %dx,%esi
		mov    $0x000002,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _02fe20_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f7f0_jump:
		mov    $0x000001,%ecx
		movswl %bx,%eax
		movswl %dx,%esi
		mov    $0x000003,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _02fe20_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f812_jump:
		mov    $0x000003,%ecx
		movswl %bx,%edi
		movswl %dx,%esi
		mov    $0x000012,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _02fe20_func
		mov    $0x000005,%ecx
		mov    $0x000012,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _02fe20_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f847_jump:
		mov    $0x000001,%ecx
		movswl %bx,%esi
		movswl %dx,%edi
		mov    $0x000013,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _02fe20_func
		mov    $0x000004,%ecx
		mov    $0x000013,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _02fe20_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f87c_jump:
		mov    $0x000001,%ecx
		movswl %bx,%esi
		movswl %dx,%edi
		mov    $0x000014,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _02fe20_func
		mov    $0x000002,%ecx
		mov    $0x000014,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _02fe20_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f8b1_jump:
		mov    0x000071(%esi),%bl
		test   %bl,%bl
		jne    _02f9e4_jump
		mov    0x000070(%esi),%bh
		cmp    $0x00000f,%bh
		jne    _02f9e4_jump
		mov    0x00006f(%esi),%cl
		test   %cl,%cl
		jne    _02f969_jump
		xor    %eax,%eax
		mov    %bl,%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    %bh,%dl
		mov    0x000005(%eax,%edx,8),%al
		and    %bh,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0c334a_data(%eax)
		jne    _02f9e4_jump
		mov    %esi,%eax
		xor    %dh,%dh
		call   _07d4b4_func
		mov    _0b9364_data,%dl
		mov    _0b9320_data,%bx
		xor    %eax,%eax
		mov    0x000028(%esi),%di
		mov    0x00006c(%esi),%al
		add    %ebx,%edx
		add    %edi,%eax
		sub    %ax,%dx
		mov    %edx,%eax
		je     _02f94a_jump
		lea    0x000085(%esi),%edi
		test   %dx,%dx
		setg   %al
		and    $0x0000ff,%eax
		mov    (%edi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,(%edi)
		or     %al,%bl
		mov    %bl,(%edi)

	_02f94a_jump:
		mov    0x000085(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %bh,0x000085(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f969_jump:
		cmp    $0x000016,%cl
		jne    _02f9e4_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01e1b8_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		xor    %ecx,%ecx
		sub    $0x000060,%eax
		mov    %cx,_0d51b8_data
		mov    %eax,%ebx
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    $0xfffffffe,%edx
		sub    $0x000080,%eax
		mov    %dx,_0d51ba_data
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x000004,%ebx

	_02f9df_jump:
		call   _02fe20_func

	_02f9e4_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f9f0_func:
		push   %ebx
		push   %ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _02fa2e_jump
		mov    0x000070(%eax),%dh
		cmp    $0x000010,%dh
		je     _02fa05_jump
		cmp    $0x000011,%dh
		jne    _02fa2e_jump

	_02fa05_jump:
		cmpb   $0x000000,0x000082(%eax)
		je     _02fa2e_jump
		mov    0x00007a(%eax),%cl
		test   %cl,%cl
		je     _02fa1c_jump
		mov    %cl,%ch
		dec    %ch
		mov    %ch,0x00007a(%eax)

	_02fa1c_jump:
		cmpb   $0x000000,0x00007a(%eax)
		jne    _02fa2e_jump
		mov    $0x000006,%ebx
		xor    %edx,%edx
		call   _01dea8_func

	_02fa2e_jump:
		pop    %ecx
		pop    %ebx
		ret    



_02fa34_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		cmpb   $0x000000,0x000071(%eax)
		jne    _02fa86_jump
		cmpb   $0x000007,0x000070(%ebx)
		jne    _02fa50_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01de98_func

	_02fa50_jump:
		cmpb   $0x000009,0x000070(%ebx)
		jne    _02fa62_jump
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01de98_func

	_02fa62_jump:
		cmpb   $0x00000b,0x000070(%ebx)
		jne    _02fa74_jump
		mov    $0x00000c,%edx
		mov    %ebx,%eax
		call   _01de98_func

	_02fa74_jump:
		cmpb   $0x00000d,0x000070(%ebx)
		jne    _02fa86_jump
		mov    $0x00000e,%edx
		mov    %ebx,%eax
		call   _01de98_func

	_02fa86_jump:
		pop    %edx
		pop    %ebx
		ret    



_02fa8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x00007a(%eax)
		je     _02fd45_jump
		mov    0x000070(%esi),%dl
		cmp    $0x000005,%dl
		jne    _02fabf_jump
		cmpb   $0x000001,_0c33c7_data
		jne    _02fc63_jump
		movb   $0x000000,0x00007a(%esi)
		jmp    _02fc63_jump

	_02fabf_jump:
		cmp    $0x000004,%dl
		jne    _02fbd1_jump
		mov    _0c317e_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _02fbc4_jump
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		add    %ebx,%ecx
		mov    _0b9410_data,%eax
		shl    $0x000003,%ecx
		mov    0x00005c(%esi),%di
		add    %eax,%ecx
		cmp    $0x000001,%di
		jne    _02fb7e_jump
		movw   $0x000000,0x00005c(%esi)
		mov    0x000085(%ecx),%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		xor    %edx,%edx
		mov    %bh,0x000085(%ecx)
		xor    %ebx,%ebx
		call   _01dea8_func
		cmpb   $0x000000,0x00007a(%ecx)
		jne    _02fb3a_jump
		movb   $0x0000fe,0x00007a(%ecx)
		movl   $0x000000,0x000028(%ecx)
		mov    %ecx,%eax
		movl   $0x000000,0x00002c(%ecx)
		call   _020064_func
		jmp    _02fb41_jump

	_02fb3a_jump:
		mov    %ecx,%eax
		call   _07d3c4_func

	_02fb41_jump:
		mov    _0b9320_data,%ax
		mov    %ax,0x00003c(%ecx)
		mov    _0b9324_data,%ax
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		call   _07d3c4_func
		movl   $0x000001,0x000024(%ecx)
		mov    0x000085(%ecx),%ah
		movb   $0x000000,0x000082(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000085(%ecx)
		call   _020784_func

	_02fb7e_jump:
		movzbw 0x00006c(%ecx),%di
		add    0x00003c(%ecx),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x00006c(%esi),%al
		add    %edx,%eax
		mov    0x00003e(%ecx),%bx
		sub    %eax,%edi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006d(%esi),%dl
		mov    0x00006d(%ecx),%al
		mov    0x00002c(%esi),%cx
		add    %eax,%ebx
		mov    %esi,%eax
		add    %ecx,%edx
		call   _02075c_func
		sub    %edx,%ebx
		test   %al,%al
		je     _02fc63_jump
		movb   $0x000000,0x00007a(%esi)
		jmp    _02fc63_jump

	_02fbc4_jump:
		movb   $0x000000,0x00007a(%esi)
		xor    %edi,%edi
		xor    %ebx,%ebx
		jmp    _02fc63_jump

	_02fbd1_jump:
		movzbw _0b9364_data,%di
		mov    _0b9320_data,%bx
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x00006c(%esi),%al
		add    %ebx,%edi
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movw   $0x000000,0x00005c(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0b9368_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _02fc38_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x00006d(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0b9324_data,%cx
		mov    _0b9365_data,%al
		add    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		jmp    _02fc63_jump

	_02fc38_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0b9365_data,%dl
		mov    _0b9370_data,%al
		sub    %eax,%edx
		mov    _0b9324_data,%ebx
		sar    %edx
		add    %ebx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x00006d(%esi),%al
		add    %ecx,%eax
		sub    %eax,%edx
		mov    %edx,%ebx

	_02fc63_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _02fc6c_jump
		neg    %eax

	_02fc6c_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _02fc77_jump
		neg    %eax

	_02fc77_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		test   %dx,%dx
		jle    _02fca9_jump
		mov    $0x000004,%cl
		mov    %edi,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_02fca9_jump:
		cmpb   $0x000000,_0c334c_data
		jne    _02fd50_jump
		mov    _0d51b8_data,%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02fcd3_jump
		mov    $0x000001,%eax
		jg     _02fcd3_jump
		neg    %eax

	_02fcd3_jump:
		add    %ax,_0d51ba_data
		mov    _0d51b6_data,%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _02fcf6_jump
		mov    $0x000001,%eax
		jg     _02fcf6_jump
		neg    %eax

	_02fcf6_jump:
		mov    _0d51b8_data,%bx
		add    %eax,%ebx
		mov    0x00005a(%esi),%ecx
		mov    %bx,_0d51b8_data
		mov    0x00002c(%esi),%dx
		mov    _0d51b8_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0d51ba_data,%ax
		movswl %dx,%ebp
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %eax,%edx
		mov    0x000070(%esi),%bl
		movswl %dx,%eax
		mov    %ebp,%edx
		call   _02fe20_func
		movb   $0x000000,0x00007a(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02fd45_jump:
		mov    0x000032(%esi),%eax
		sar    $0x000010,%eax
		call   _0200e0_func

	_02fd50_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_02fd5c_switch:
		.long   _02fdaf_case
		.long   _02fdd9_case
		.long   _02fdf4_case
		.long   _02fe08_case




_02fd6c_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,0x00007a(%eax)
		je     _02fe19_jump
		cmpb   $0x000000,0x000071(%eax)
		jne    _02fd86_jump
		cmpb   $0x000004,0x000070(%eax)
		je     _02fd8d_jump

	_02fd86_jump:
		mov    $0x000001,%edx
		jmp    _02fd8f_jump

	_02fd8d_jump:
		xor    %edx,%edx

	_02fd8f_jump:
		test   %edx,%edx
		je     _02fe19_jump
		movb   $0x000000,0x00007a(%eax)
		mov    0x000070(%eax),%al
		cmp    $0x000003,%al
		ja     _02fe19_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_02fd5c_switch(,%eax,4)

	_02fdaf_case:
		mov    $_0c3344_data,%edi
		mov    _0c3348_data,%ch
		mov    $_0c3347_data,%esi
		and    $0x0000e7,%ch
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %ch,%al
		mov    %ch,_0c3348_data
		or     $0x000008,%al
		mov    %al,_0c3348_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_02fdd9_case:
		mov    $_0b92f8_data,%eax
		call   _07d3c4_func
		andb   $0x00009f,_0c3348_data
		call   _05fa04_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_02fdf4_case:
		mov    $_0b92f8_data,%eax
		call   _07d3c4_func
		call   _05fac0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_02fe08_case:
		mov    $_0b92f8_data,%eax
		call   _07d3c4_func
		andb   $0x0000fe,_0c3347_data

	_02fe19_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_02fe20_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %ax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%si
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %edx,%edx

	_02fe4a_jump:
		cmpw   $0x0000d7,0x000064(%ecx)
		jne    _02fe5c_jump
		cmp    0x000024(%ecx),%edx
		jne    _02fe5c_jump
		mov    $0x000001,%ebx

	_02fe5c_jump:
		add    $0x000088,%ecx
		inc    %eax
		test   %bx,%bx
		jne    _02fe6d_jump
		cmp    %si,%ax
		jl     _02fe4a_jump

	_02fe6d_jump:
		sub    $0x000088,%ecx
		test   %bx,%bx
		je     _02feb6_jump
		orb    $0x000004,0x000085(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _020064_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		movb   $0x000001,0x00007a(%ecx)
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%bl
		jmp    _02ff3e_jump

	_02feb6_jump:
		mov    $0xffffffff,%edi
		mov    _0b9410_data,%eax
		xor    %edx,%edx

	_02fec2_jump:
		cmpw   $0x0000d7,0x000064(%eax)
		jne    _02fed8_jump
		xor    %ecx,%ecx
		mov    0x00006f(%eax),%cl
		cmp    %dx,%cx
		jle    _02fed8_jump
		mov    %ebx,%edi
		mov    %ecx,%edx

	_02fed8_jump:
		inc    %ebx
		add    $0x000088,%eax
		cmp    %si,%bx
		jl     _02fec2_jump
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _02ff53_jump
		mov    %eax,%ebx
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9410_data,%ecx
		shl    $0x000003,%eax
		add    %eax,%ecx
		mov    0x000085(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000085(%ecx)
		call   _020064_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		movb   $0x000001,0x00007a(%ecx)
		sar    $0x000010,%eax
		mov    0x00000c(%esp),%bl
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		xor    %edx,%edx

	_02ff3e_jump:
		mov    %ax,0x00005c(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01dea8_func
		movb   $0x000000,0x00006f(%ecx)

	_02ff53_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    



_02ff5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    _0c3348_data,%ah
		test   $0x000018,%ah
		jne    _02ff78_jump
		test   $0x000060,%ah
		jne    _02ff78_jump
		test   $0x000002,%ah
		je     _02ffd7_jump

	_02ff78_jump:
		mov    $_0b92f8_data,%eax
		call   _07d3c4_func
		mov    _0c3348_data,%cl
		test   $0x000018,%cl
		je     _02ffa5_jump
		mov    %cl,%ch
		mov    $_0c3347_data,%edi
		or     $0x000018,%ch
		mov    $_0c3344_data,%esi
		mov    %ch,_0c3348_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

	_02ffa5_jump:
		testb  $0x000060,_0c3348_data
		je     _02ffb3_jump
		call   _05fa04_func

	_02ffb3_jump:
		testb  $0x000002,_0c3348_data
		je     _02ffc1_jump
		call   _05fac0_func

	_02ffc1_jump:
		mov    0x000085(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    %bl,0x000085(%edx)

	_02ffd7_jump:
		mov    %edx,%eax
		call   _02089c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030050_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _070a20_func
		call   _03ead0_func
		mov    $0x000001,%ah
		mov    $_0bf310_data,%edi
		mov    $_0c3347_data,%esi
		xor    %edx,%edx
		mov    %ah,_0bf2fd_data
		mov    %edx,_0bf30c_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movzbl _0bf2fe_data,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		mov    _0bf314_data,%esi
		shl    $0x000003,%eax
		mov    $_0c3347_data,%edi
		add    %eax,%esi
		mov    _0c31b4_data,%dl
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		test   $0x000002,%dl
		je     _0300b3_jump
		orb    $0x000004,_0c3348_data
		jmp    _0300ba_jump

	_0300b3_jump:
		andb   $0x0000fb,_0c3348_data

	_0300ba_jump:
		mov    $0x000008,%ecx
		mov    $_0af008_data,%edi
		mov    $_0af028_data,%esi
		mov    $0x000001,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %ebx,%ebx
		mov    $0x000002,%ecx
		mov    %dx,_0af038_data
		mov    %bx,_0af03a_data
		mov    %cx,_0af03e_data
		mov    %cx,_0af03c_data
		call   _041b20_func
		movzbl _0bf2fe_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    _0c30db_data,%bh
		sub    %esi,%eax
		mov    _0bf314_data,%esi
		shl    $0x000003,%eax
		mov    %dx,_0c3156_data
		add    %esi,%eax
		mov    %dx,_0c3146_data
		or     $0x000005,%bh
		movzbw 0x00000c(%eax),%si
		mov    %bh,_0c30db_data
		mov    %si,_0c3104_data
		mov    0x00000d(%eax),%al
		mov    $0x000002,%cl
		mov    $0x000005,%edx
		mov    $_0d51bc_data,%edi
		mov    $_0c2f40_data,%esi
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ax,_0c30f8_data
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    _0b9372_data,%al
		mov    %cl,_0c2f49_data
		mov    %al,_0d51c6_data
		mov    %ah,_0c2f46_data
		mov    $0x000001,%ah
		mov    %dx,_0c2f40_data
		mov    %ah,_0c1154_data
		mov    _0c3104_data,%ax
		mov    $0x00003c,%dl
		mov    %ax,_0c3152_data
		mov    _0c30f8_data,%ax
		mov    %cl,_0b9372_data
		mov    %ax,_0c3142_data
		call   _075478_func
		mov    _0c33a0_data,%al
		mov    %bx,_0c3142_data
		mov    %bx,_0c3152_data
		mov    %al,_0d51c7_data
		mov    %dl,_0c33a0_data
		mov    $0x00003c,%eax
		xor    %ebx,%ebx
		call   _03e364_func
		call   _060c8c_func
		call   _05a0d4_func
		mov    %ebx,_0c1084_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0301e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _070a20_func
		call   _03ead0_func
		mov    $0x000001,%eax
		mov    $0x000008,%ecx
		mov    $_0af028_data,%edi
		mov    $_0af008_data,%esi
		call   _05e224_func
		xor    %edx,%edx
		mov    _0c30db_data,%ah
		mov    %dx,_0c3156_data
		mov    %dx,_0c3146_data
		mov    %dx,_0c3152_data
		mov    %dx,_0c3142_data
		mov    %dx,_0c3104_data
		mov    %dx,_0c30f8_data
		and    $0x0000fa,%ah
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ah,_0c30db_data
		call   _041b20_func
		mov    _0bf2fe_data,%dl
		inc    %dl
		mov    %dl,_0bf2fe_data
		cmp    _0bf2fc_data,%dl
		jb     _030270_jump
		xor    %bl,%bl
		mov    %bl,_0bf2fe_data

	_030270_jump:
		mov    _0d51c6_data,%al
		mov    $_0c2f40_data,%edi
		mov    %al,_0b9372_data
		xor    %eax,%eax
		mov    $_0d51bc_data,%esi
		mov    _0d51c7_data,%al
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   _03e364_func
		call   _060c8c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		mov    %eax,%eax



_0302a0_func:
		ret    



_0302b0_func:
		mov    %al,_0a7c94_data
		ret    



_0302b8_func:
		mov    _0a7c94_data,%al
		ret    



_0302c0_func:
		xor    %al,%al
		ret    



_030300_func:
		push   %ebx
		push   %ecx
		sub    $0x000034,%esp
		mov    %eax,%ecx
		mov    _0c3140_data,%eax
		sar    $0x000010,%eax
		push   %eax
		push   $_0a0718_data
		lea    0x000008(%esp),%eax
		push   %eax
		movswl %dx,%ebx
		call   _0852d9_func
		add    $0x00000c,%esp
		movswl %cx,%edx
		push   $0x000001
		lea    0x000004(%esp),%eax
		mov    $0x000002,%ecx
		call   _086bfe_func
		call   _01b0f8_func
		add    $0x000034,%esp
		pop    %ecx
		pop    %ebx
		ret    

_030350_switch:
		.long   _0a0724_case
		.long   _0a0734_case
		.long   _0a0744_case

_03035c_switch:
		.long   _0a0754_case
		.long   _0a0764_case

_030364_switch:
		.long   _0a0774_case
		.long   _0a0780_case




_030370_func:
		push   %ebx
		push   %edx
		sub    $0x00001c,%esp
		mov    %esp,%ebx
		xor    %edx,%edx
		mov    $0x000033,%eax
		mov    %dx,(%esp)
		mov    %esp,%edx
		call   _086c23_func
		mov    (%esp),%al
		add    $0x00001c,%esp
		pop    %edx
		pop    %ebx
		ret    



_030394_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00001c,%esp
		mov    _0d5555_data,%cl
		mov    $0x000003,%edx
		mov    %esp,%ebx
		mov    $0x000033,%eax
		mov    %dx,(%esp)
		mov    %esp,%edx
		call   _086c23_func
		testb  $0x000001,0x000004(%esp)
		je     _0303cc_jump
		mov    _0d5555_data,%cl
		inc    %cl
		jne    _0303ce_jump
		inc    %cl
		jmp    _0303ce_jump

	_0303cc_jump:
		xor    %cl,%cl

	_0303ce_jump:
		testb  $0x000002,0x000004(%esp)
		je     _0303f1_jump
		mov    _0d5556_data,%bl
		inc    %bl
		mov    %bl,_0d5556_data
		jne    _0303f9_jump
		mov    %bl,%ch
		inc    %ch
		mov    %ch,_0d5556_data
		jmp    _0303f9_jump

	_0303f1_jump:
		xor    %dh,%dh
		mov    %dh,_0d5556_data

	_0303f9_jump:
		mov    %cl,_0d5555_data
		add    $0x00001c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030408_func:
		push   %ebx
		push   %edx
		sub    $0x00001c,%esp
		mov    $0x00000b,%edx
		mov    %esp,%ebx
		mov    $0x000033,%eax
		mov    %dx,(%esp)
		mov    %esp,%edx
		call   _086c23_func
		mov    0x000008(%esp),%edx
		mov    %dx,_0d5544_data
		mov    0x00000c(%esp),%edx
		mov    %dx,_0d5530_data
		add    $0x00001c,%esp
		pop    %edx
		pop    %ebx
		ret    



_030440_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edx
		mov    _0d5540_data,%si
		mov    _0d5542_data,%di
		mov    0x000004(%eax),%eax
		mov    (%edx),%cx
		xor    %ebx,%ebx
		add    $0x000004,%esi
		add    $0x000004,%edi
		movswl %cx,%ecx
		mov    0x000002(%edx),%dx
		mov    (%eax),%bl
		mov    %dx,(%esp)
		add    %ecx,%ebx
		movswl %si,%ecx
		mov    $0x000001,%dl
		cmp    %ebx,%ecx
		jl     _0304ab_jump
		movzbl 0x000002(%eax),%esi
		add    %esi,%ebx
		cmp    %ebx,%ecx
		jg     _0304ab_jump
		mov    -0x000002(%esp),%ebx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x000001(%eax),%cl
		add    %ebx,%ecx
		movswl %di,%ebx
		cmp    %ecx,%ebx
		jl     _0304ab_jump
		mov    0x000003(%eax),%al
		and    $0x0000ff,%eax
		add    %eax,%ecx
		cmp    %ecx,%ebx
		jle    _0304ad_jump

	_0304ab_jump:
		xor    %dl,%dl

	_0304ad_jump:
		mov    %dl,%al
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0304b8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    0x000004(%eax),%esi
		mov    (%eax),%bx
		mov    0x000002(%eax),%ax
		movzbl %dl,%edi
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000001(%esi),%al
		add    %edx,%eax
		mov    %ebx,0x000004(%esp)
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000004(%esp),%ecx
		mov    (%esi),%al
		xor    %ebx,%ebx
		add    %ecx,%eax
		mov    0x000002(%esi),%bl
		cwtl   
		mov    %edi,%ecx
		call   _03e20c_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000001(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000004(%esp),%ecx
		mov    (%esi),%al
		xor    %ebx,%ebx
		add    %ecx,%eax
		mov    0x000002(%esi),%bl
		cwtl   
		mov    %edi,%ecx
		call   _03e20c_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000001(%esi),%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000004(%esp),%ecx
		mov    (%esi),%al
		xor    %ebx,%ebx
		add    %ecx,%eax
		mov    0x000003(%esi),%bl
		cwtl   
		mov    %edi,%ecx
		call   _03e270_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000001(%esi),%al
		mov    0x000004(%esp),%ecx
		add    %edx,%eax
		xor    %ebx,%ebx
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000003(%esi),%bl
		mov    (%esi),%al
		movzbw 0x000002(%esi),%si
		add    %ecx,%eax
		add    %esi,%eax
		mov    %edi,%ecx
		cwtl   
		call   _03e270_func
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03057c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $_0ae1e0_data,%ebx
		xor    %edx,%edx
		call   _04b8e4_func
		mov    $_0ae1d0_data,%ebx
		mov    _0c3102_data,%edx
		mov    %ecx,%eax
		sar    $0x000010,%edx
		call   _04b8e4_func
		mov    $_0ae1d0_data,%edx
		mov    $0x000001,%al
		mov    %edx,_0d54dc_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0305b4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    _0ae1e0_data,%edx
		xor    %ebx,%ebx
		test   %edx,%edx
		jle    _0305ec_jump
		xor    %ecx,%ecx

	_0305cb_jump:
		mov    _0ae1e4_data,%eax
		mov    (%ecx,%eax,1),%edx
		mov    %esi,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _0305ec_jump
		mov    _0ae1e0_data,%ebp
		inc    %ebx
		add    $0x000004,%ecx
		cmp    %ebp,%ebx
		jl     _0305cb_jump

	_0305ec_jump:
		mov    _0ae1e0_data,%eax
		cmp    %eax,%ebx
		jne    _030669_jump
		xor    %eax,%ebx
		xor    %ecx,%ecx
		jmp    _030614_jump

	_0305ff_jump:
		mov    0x000004(%eax),%eax
		mov    (%ecx,%eax,1),%edx
		mov    %esi,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _03061d_jump
		add    $0x000004,%ecx
		inc    %ebx

	_030614_jump:
		mov    _0d54dc_data,%eax
		cmp    (%eax),%ebx
		jl     _0305ff_jump

	_03061d_jump:
		mov    _0d54dc_data,%eax
		cmp    (%eax),%ebx
		jne    _03063c_jump
		push   %esi
		push   $_0a0790_data
		push   %edi
		call   _0852d9_func
		mov    $0xffffffff,%eax
		add    $0x00000c,%esp
		jmp    _03068d_jump

	_03063c_jump:
		mov    0x000008(%eax),%eax
		mov    (%eax,%ebx,4),%esi
		push   %edi

	_030643_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03065b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _030643_jump

	_03065b_jump:
		pop    %edi
		mov    _0ae1e0_data,%eax
		add    %ebx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_030669_jump:
		mov    _0ae1e8_data,%eax
		mov    (%eax,%ebx,4),%esi
		push   %edi

	_030672_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03068a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _030672_jump

	_03068a_jump:
		pop    %edi
		mov    %ebx,%eax

	_03068d_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_030694_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%edi
		cmp    $0xffffffff,%eax
		jne    _0306b4_jump
		mov    $0x00000e,%ecx
		mov    $_0a07a8_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0306b4_jump:
		mov    _0ae1e0_data,%edx
		cmp    %edx,%eax
		jb     _030749_jump
		sub    %edx,%esi
		mov    _0d54dc_data,%eax
		lea    0x000000(,%esi,4),%edx
		mov    0x00000c(%eax),%ebx
		cmpl   $0x000000,(%edx,%ebx,1)
		je     _0307c6_jump
		mov    0x000004(%eax),%eax
		mov    $0x000003,%ebx
		mov    (%edx,%eax,1),%eax
		mov    $_0a07e4_data,%edx
		call   _08532e_func
		test   %eax,%eax
		je     _03071f_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		push   %esi
		push   $_0a07e8_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_03071f_jump:
		mov    _0d54dc_data,%eax
		mov    0x00000c(%eax),%eax
		mov    (%eax,%esi,4),%esi
		push   %edi

	_03072b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _030743_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03072b_jump

	_030743_jump:
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_030749_jump:
		lea    0x000000(,%eax,4),%edx
		mov    _0ae1ec_data,%eax
		cmpl   $0x000000,(%edx,%eax,1)
		je     _0307c6_jump
		mov    _0ae1e4_data,%eax
		mov    $0x000003,%ebx
		mov    (%edx,%eax,1),%eax
		mov    $_0a07e4_data,%edx
		call   _08532e_func
		test   %eax,%eax
		je     _03079f_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		push   %esi
		push   $_0a0818_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_03079f_jump:
		mov    _0ae1ec_data,%eax
		mov    (%eax,%esi,4),%esi
		push   %edi

	_0307a8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0307c0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0307a8_jump

	_0307c0_jump:
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0307c6_jump:
		movb   $0x000000,(%edi)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0307d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    _0b9414_data,%dx
		xor    %esi,%esi
		test   %dx,%dx
		jle    _0308ef_jump

	_0307ec_jump:
		movswl %si,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ecx
		add    %ecx,%eax
		cmpl   $0x000000,0x000004(%eax)
		je     _0308de_jump
		xor    %edx,%edx
		mov    0x00006e(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000004(%eax),%ecx
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x00006f(%eax),%cl
		lea    0x000000(,%ecx,4),%edi
		mov    0x000004(%edx),%ecx
		add    %edi,%ecx
		xor    %edx,%edx
		mov    0x000002(%ecx),%dl
		mov    %dx,0x00000c(%esp)
		xor    %edx,%edx
		mov    0x000003(%ecx),%dl
		mov    %dx,(%esp)
		testb  $0x000008,0x000085(%eax)
		jne    _030847_jump
		xor    %edx,%edx
		mov    (%ecx),%dl
		jmp    _030862_jump

	_030847_jump:
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		add    %edx,%edx
		mov    %edx,0x000008(%esp)
		xor    %edx,%edx
		mov    0x000008(%esp),%edi
		mov    (%ecx),%dl
		sub    %edx,%edi
		mov    %edi,%edx
		sub    0x00000c(%esp),%edx

	_030862_jump:
		mov    0x000001(%ecx),%cl
		xor    %ch,%ch
		mov    %cx,0x000004(%esp)
		test   %dx,%dx
		jle    _030879_jump
		mov    %dl,_0d54f8_data
		jmp    _03087f_jump

	_030879_jump:
		mov    %ch,_0d54f8_data

	_03087f_jump:
		mov    0x000004(%esp),%cl
		mov    %cl,_0d54f9_data
		mov    0x00000c(%esp),%cl
		mov    %cl,_0d54fa_data
		mov    (%esp),%cl
		mov    %cl,_0d54fb_data
		movl   $_0d54f8_data,0x000004(%ebx)
		mov    0x000036(%eax),%cx
		mov    %cx,(%ebx)
		mov    0x000038(%eax),%ax
		mov    %ax,0x000002(%ebx)
		jge    _0308b7_jump
		add    %dx,(%ebx)

	_0308b7_jump:
		movswl %si,%eax
		imul   $0x00002a,%eax,%eax
		mov    _0c1050_data,%ecx
		mov    $_0a0848_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _0308de_jump
		mov    %ebx,%eax
		call   _030440_func
		test   %al,%al
		jne    _0308ef_jump

	_0308de_jump:
		mov    _0b9414_data,%cx
		inc    %esi
		cmp    %cx,%si
		jl     _0307ec_jump

	_0308ef_jump:
		mov    %si,0x000008(%ebx)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0308fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    $0x0007d0,%eax
		mov    %dx,_0d54f6_data
		mov    %dx,_0d54f4_data
		call   _084f3c_func
		mov    %eax,%edx
		mov    %eax,%edi
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%ebx
		test   %edx,%edx
		je     _030b98_jump
		test   %eax,%eax
		je     _030b98_jump
		xor    %eax,%eax

	_030943_jump:
		movswl %ax,%edx
		inc    %eax
		movw   $0x000000,(%edi,%edx,2)
		cmp    $0x0003e8,%ax
		jl     _030943_jump

	_030953_jump:
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%ecx
		mov    %eax,%esi
		test   %eax,%eax
		je     _030a6f_jump
		mov    $_0a0850_data,%edx
		mov    %ebx,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _030953_jump
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _0470cc_func
		mov    $_0a0848_data,%edx
		mov    %eax,%ecx
		mov    %eax,%esi
		mov    %ebx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _030953_jump
		mov    _0d54f4_data,%si
		mov    %ebx,%edx
		inc    %esi
		mov    %ecx,%eax
		mov    %si,_0d54f4_data
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %eax,%esi

	_0309bd_jump:
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    $_0a0858_data,%edx
		mov    %eax,%ecx
		mov    %eax,%esi
		mov    %ebx,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _0309bd_jump
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %ebx,%edx
		call   _0470cc_func
		mov    %eax,%ecx
		mov    %ebx,%edx
		mov    %eax,%esi
		call   _0470cc_func
		mov    $_0a0850_data,%edx
		mov    %ebx,%eax
		call   _086c40_func
		test   %eax,%eax
		jne    _030a67_jump
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ebx,%eax
		call   _086cfe_func
		cwtl   
		incw   (%edi,%eax,2)
		jmp    _030953_jump

	_030a67_jump:
		incw   (%edi)
		jmp    _030953_jump

	_030a6f_jump:
		mov    _0d54f2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %eax,%edx
		mov    $_0c1044_data,%eax
		shl    $0x000003,%edx
		call   _084bac_func
		mov    _0d54f2_data,%edx
		mov    %eax,_0d54ec_data
		sar    $0x000010,%edx
		mov    $_0c1044_data,%eax
		shl    $0x000002,%edx
		call   _084bac_func
		mov    _0d54ec_data,%edx
		mov    %eax,_0d54f0_data
		test   %edx,%edx
		jne    _030acd_jump
		push   $_0a085c_data
		call   _085441_func
		add    $0x000004,%esp
		call   _086d6b_func
		jmp    _030b98_jump

	_030acd_jump:
		xor    %ecx,%ecx
		xor    %eax,%eax

	_030ad1_jump:
		movswl %ax,%edx
		cmpw   $0x000000,(%edi,%edx,2)
		je     _030adc_jump
		inc    %ecx

	_030adc_jump:
		inc    %eax
		cmp    $0x0003e8,%ax
		jl     _030ad1_jump
		movswl %cx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    $_0c1044_data,%eax
		call   _084bac_func
		mov    %eax,_0d51d4_data
		xor    %edx,%edx
		mov    %cx,_0d51d2_data
		mov    %dx,_0d51d0_data
		test   %eax,%eax
		jne    _030b35_jump
		push   $_0a08a4_data
		call   _085441_func
		add    $0x000004,%esp
		call   _086d6b_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030b35_jump:
		mov    $_0c1044_data,%ebp
		mov    %dx,(%esp)
		xor    %ecx,%ecx

	_030b40_jump:
		movswl %cx,%eax
		add    %eax,%eax
		add    %edi,%eax
		cmpw   $0x000000,(%eax)
		je     _030b82_jump
		mov    -0x000002(%esp),%esi
		sar    $0x000010,%esi
		imul   $0x00000c,%esi,%esi
		mov    _0d51d4_data,%edx
		add    %edx,%esi
		mov    %cx,0x000002(%esi)
		mov    (%eax),%dx
		movw   $0x000000,(%esi)
		mov    %dx,0x000004(%esi)
		movswl (%eax),%edx
		mov    %ebp,%eax
		add    %edx,%edx
		incw   (%esp)
		call   _084bac_func
		mov    %eax,0x000008(%esi)

	_030b82_jump:
		inc    %ecx
		cmp    $0x0003e8,%cx
		jl     _030b40_jump
		mov    %ebx,%eax
		call   _0850d4_func
		mov    %edi,%eax
		call   _0850d4_func

	_030b98_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030ba4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0d51d2_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _030bd7_jump

	_030bb7_jump:
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0d51d4_data,%ebx
		cmp    0x000002(%edx,%ebx,1),%cx
		je     _030bdc_jump
		mov    _0d51d2_data,%bx
		inc    %eax
		cmp    %bx,%ax
		jl     _030bb7_jump

	_030bd7_jump:
		mov    $0xffffffff,%eax

	_030bdc_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030be0_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		cwtl   
		call   _030ba4_func
		movswl %ax,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0d51d4_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    (%ebx),%cx
		mov    %ecx,%eax
		inc    %eax
		mov    0x000004(%ebx),%di
		mov    %ax,(%ebx)
		cwtd   
		idiv   %di
		mov    %dx,(%ebx)
		movswl %cx,%eax
		mov    0x000008(%ebx),%ebx
		mov    %si,(%ebx,%eax,2)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_030c28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    _0d51d2_data,%bx
		mov    %dx,(%esp)
		test   %bx,%bx
		jle    _030c96_jump

	_030c44_jump:
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		imul   $0x00000c,%ebx,%ebx
		mov    _0d51d4_data,%edx
		add    %edx,%ebx
		mov    0x000004(%ebx),%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _030c82_jump
		mov    0x000008(%ebx),%ecx

	_030c64_jump:
		movswl %ax,%edx
		cmp    (%ecx,%edx,2),%si
		jne    _030c7b_jump
		mov    %ax,(%ebx)
		mov    (%esp),%eax
		mov    %ax,_0d51d0_data
		jmp    _030c96_jump

	_030c7b_jump:
		inc    %eax
		cmp    0x000004(%ebx),%ax
		jl     _030c64_jump

	_030c82_jump:
		mov    (%esp),%ecx
		inc    %ecx
		mov    _0d51d2_data,%di
		mov    %cx,(%esp)
		cmp    %di,%cx
		jl     _030c44_jump

	_030c96_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030ca0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    _0d51d2_data,%bx
		mov    %dx,(%esp)
		test   %bx,%bx
		jle    _030d06_jump

	_030cbc_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0d51d4_data,%ebx
		add    %edx,%ebx
		mov    0x000004(%ebx),%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _030cf2_jump
		mov    0x000008(%ebx),%ecx

	_030cdc_jump:
		movswl %ax,%edx
		cmp    (%ecx,%edx,2),%si
		jne    _030ceb_jump
		mov    0x000002(%ebx),%ax
		jmp    _030d0b_jump

	_030ceb_jump:
		inc    %eax
		cmp    0x000004(%ebx),%ax
		jl     _030cdc_jump

	_030cf2_jump:
		mov    (%esp),%ecx
		inc    %ecx
		mov    _0d51d2_data,%di
		mov    %cx,(%esp)
		cmp    %di,%cx
		jl     _030cbc_jump

	_030d06_jump:
		mov    $0xffffffff,%eax

	_030d0b_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030d14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		push   $0x000180
		push   $0x000200
		mov    $_0a08f0_data,%eax
		call   _066004_func
		push   %eax
		call   _086d88_func
		add    $0x00000c,%esp
		movswl %ax,%ecx
		mov    %eax,%esi
		cmp    $0xffffffff,%ecx
		jne    _030d5d_jump
		mov    $_0a08f0_data,%eax
		call   _066004_func
		call   _086ffa_func
		call   _086d6b_func
		jmp    _0312a8_jump

	_030d5d_jump:
		mov    %ecx,%eax
		call   _087044_func
		mov    %eax,%ebx
		call   _084f3c_func
		mov    %eax,%edi
		test   %eax,%eax
		je     _030d7a_jump
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _087081_func

	_030d7a_jump:
		movswl %si,%eax
		call   _08717c_func
		mov    %edi,%eax
		call   _0308fc_func
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    %eax,%ebp
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%ecx
		mov    %eax,0x000004(%esp)
		mov    $0x000190,%eax
		call   _084f3c_func
		mov    %eax,%ebx
		mov    %eax,(%esp)
		mov    $0x000064,%eax
		mov    %edi,0x000008(%esp)
		call   _084f3c_func
		mov    %eax,0x000018(%esp)
		test   %edi,%edi
		je     _03127e_jump
		test   %edx,%edx
		je     _03127e_jump
		test   %ecx,%ecx
		je     _03127e_jump
		test   %ebx,%ebx
		je     _03127e_jump
		test   %eax,%eax
		je     _03127e_jump
		xor    %edx,%edx
		mov    %dx,0x00001c(%esp)

	_030df7_jump:
		mov    %ebp,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%ebx
		mov    %eax,%edi
		test   %eax,%eax
		je     _03127e_jump
		mov    $_0a0850_data,%edx
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _030df7_jump
		mov    %ebp,%edx
		mov    %ebx,%eax
		call   _0470cc_func
		mov    $_0a0848_data,%edx
		mov    %eax,%ebx
		mov    %eax,%edi
		mov    %ebp,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _030df7_jump
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $_0c1044_data,%eax
		lea    0x000001(%ecx),%edx
		call   _084bac_func
		mov    0x00001a(%esp),%edx
		mov    _0d54f0_data,%edi
		sar    $0x000010,%edx
		mov    %ebp,%esi
		mov    %eax,(%edi,%edx,4)
		mov    %eax,%edi
		push   %edi

	_030e67_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _030e7f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _030e67_jump

	_030e7f_jump:
		pop    %edi
		mov    %ebp,%edx
		mov    %ebx,%eax
		mov    0x000018(%esp),%edi
		call   _0470cc_func
		mov    %ebp,%esi
		mov    %eax,0x000014(%esp)
		push   %edi

	_030e94_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _030eac_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _030e94_jump

	_030eac_jump:
		pop    %edi
		mov    $_0a08f8_data,%esi
		xor    %ebx,%ebx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_030ebd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _030ed5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _030ebd_jump

	_030ed5_jump:
		pop    %edi
		xor    %cl,%cl
		xor    %edi,%edi
		jmp    _030ef7_jump

	_030edc_jump:
		mov    0x000018(%esp),%edx
		mov    _0bf130_data(%edi),%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _030ef3_jump
		mov    $0x000001,%cl
		jmp    _030f03_jump

	_030ef3_jump:
		add    $0x000004,%edi
		inc    %ebx

	_030ef7_jump:
		mov    _0a5250_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%ebx
		jb     _030edc_jump

	_030f03_jump:
		test   %cl,%cl
		jne    _030f3d_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    _0c3150_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00001c(%esp),%ecx
		push   %ecx
		push   $_0a0900_data
		push   %edx
		call   _0852d9_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_030f3d_jump:
		imul   $0x000088,%ebx,%ebx
		mov    0x00001a(%esp),%esi
		sar    $0x000010,%esi
		imul   $0x000088,%esi,%esi
		mov    _0d54ec_data,%eax
		mov    _0d7a54_data(%ebx),%edx
		mov    %edx,0x000008(%esi,%eax,1)
		mov    _0d7a50_data(%ebx),%edx
		mov    %edx,0x000004(%esi,%eax,1)
		mov    _0d7a4c_data(%ebx),%edx
		mov    %edx,(%esi,%eax,1)
		mov    _0d7a90_data(%ebx),%dx
		mov    %dx,0x000044(%esi,%eax,1)
		mov    0x000014(%esp),%eax
		mov    %ebp,%edx
		call   _0470cc_func
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   _086cfe_func
		mov    _0d54ec_data,%edx
		mov    %al,0x00007c(%edx,%esi,1)
		mov    %ebp,%edx
		mov    %ebx,%eax
		call   _0470cc_func
		mov    $0x000001,%ebx
		mov    %eax,0x000014(%esp)
		mov    %ebp,%edx
		mov    $_0c1044_data,%eax
		call   _04602c_func
		mov    _0d54ec_data,%edx
		xor    %ecx,%ecx
		mov    %eax,0x00000c(%edx,%esi,1)
		mov    (%esp),%esi

	_030fc9_jump:
		mov    0x000014(%esp),%eax
		mov    %ebp,%edx
		call   _0470cc_func
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %eax,0x000014(%esp)
		mov    %cx,%dx
		mov    %ebp,%eax
		add    %esi,%edx
		call   _086cfe_func
		mov    %al,(%edx)
		mov    %ebp,%eax
		inc    %ecx
		call   _086cfe_func
		cmp    $0x0000ff,%eax
		jne    _030fc9_jump
		mov    %ebx,%eax
		mov    0x00001a(%esp),%ebx
		sar    $0x000010,%ebx
		imul   $0x000088,%ebx,%ebx
		mov    %ebp,%edx
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ebp,%eax
		call   _086cfe_func
		movswl %ax,%edx
		mov    _0d54ec_data,%eax
		mov    %edx,0x000028(%ebx,%eax,1)
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ebp,%eax
		call   _086cfe_func
		movswl %ax,%edx
		mov    _0d54ec_data,%eax
		mov    %edx,0x00002c(%ebx,%eax,1)
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ebp,%eax
		call   _086cfe_func
		mov    _0d54ec_data,%edx
		mov    %al,0x000071(%edx,%ebx,1)
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ebp,%eax
		call   _086cfe_func
		mov    _0d54ec_data,%edx
		mov    %al,0x000070(%edx,%ebx,1)
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ebp,%eax
		call   _086cfe_func
		mov    _0d54ec_data,%edx
		mov    %al,0x00006c(%edx,%ebx,1)
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ebp,%eax
		call   _086cfe_func
		mov    _0d54ec_data,%edx
		mov    %al,0x00006d(%edx,%ebx,1)
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ebp,%eax
		call   _086cfe_func
		mov    _0d54ec_data,%edx
		mov    %al,0x000078(%edx,%ebx,1)
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ebp,%eax
		mov    _0d54ec_data,%edx
		call   _086cfe_func
		mov    %eax,0x000010(%esp)
		mov    0x000010(%esp),%al
		and    $0x000001,%al
		mov    0x000085(%edx,%ebx,1),%ah
		and    $0x0000df,%ah
		mov    %ah,0x000085(%edx,%ebx,1)
		shl    $0x000005,%al
		or     %al,%ah
		mov    %ah,0x000085(%edx,%ebx,1)
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ebp,%eax
		call   _086cfe_func
		mov    _0d54ec_data,%edx
		mov    %al,0x000079(%edx,%ebx,1)
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ebp,%eax
		call   _086cfe_func
		mov    _0d54ec_data,%edx
		mov    %al,0x00007a(%edx,%ebx,1)
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ebp,%eax
		call   _086cfe_func
		mov    _0d54ec_data,%edx
		mov    %ax,0x000064(%edx,%ebx,1)
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %eax,%edi
		mov    %ebp,%eax
		call   _086cfe_func
		mov    _0d54ec_data,%edx
		add    %edx,%ebx
		mov    %ebp,%edx
		mov    %al,0x00007d(%ebx)
		mov    %esi,%eax
		call   _0470cc_func
		test   %eax,%eax
		jne    _031192_jump
		xor    %eax,%eax
		jmp    _0311ae_jump

	_031192_jump:
		cmpb   $0x00009c,0x000000(%ebp)
		jne    _03119c_jump
		xor    %eax,%eax
		jmp    _0311ae_jump

	_03119c_jump:
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ebp,%eax
		call   _086cfe_func

	_0311ae_jump:
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00000c(%esp)
		imul   $0x000088,%edx,%esi
		mov    _0d54ec_data,%edx
		mov    0x000062(%edx,%esi,1),%edx
		sar    $0x000010,%edx
		cwtl   
		mov    %edx,%ebx
		mov    0x00000c(%esp),%edx
		call   _030be0_func
		mov    _0d54ec_data,%eax
		add    %esi,%eax
		movb   $0x000000,0x00006f(%eax)
		movw   $0x000000,0x000050(%eax)
		cmp    $0x000002,%cx
		jbe    _031243_jump
		xor    %edx,%edx
		mov    $_0c1044_data,%eax
		mov    %cx,%dx
		call   _084bac_func
		mov    _0d54ec_data,%edx
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx,%esi,1)
		mov    (%esp),%eax
		jmp    _031238_jump

	_03120f_jump:
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000088,%edx,%edx
		mov    _0d54ec_data,%esi
		add    %esi,%edx
		mov    0x000010(%edx),%edx
		add    %ebx,%edx
		inc    %eax
		mov    %edx,0x000010(%esp)
		mov    0x000010(%esp),%esi
		mov    -0x000001(%eax),%dl
		inc    %ebx
		mov    %dl,(%esi)

	_031238_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		cmp    %edx,%ebx
		jae    _03124a_jump
		jmp    _03120f_jump

	_031243_jump:
		movl   $0x000000,0x000010(%eax)

	_03124a_jump:
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000088,%edx,%edx
		mov    _0d54ec_data,%eax
		add    %edx,%eax
		mov    0x00001c(%esp),%ebx
		call   _062bcc_func
		mov    _0d54ec_data,%eax
		inc    %ebx
		add    %edx,%eax
		mov    %bx,0x00001c(%esp)
		call   _062e90_func
		jmp    _030df7_jump

	_03127e_jump:
		mov    0x000008(%esp),%eax
		call   _0850d4_func
		mov    %ebp,%eax
		call   _0850d4_func
		mov    0x000004(%esp),%eax
		call   _0850d4_func
		mov    (%esp),%eax
		call   _0850d4_func
		mov    0x000018(%esp),%eax
		call   _0850d4_func

	_0312a8_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0312b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0d5526_data,%ax
		mov    %ax,_0c3162_data
		mov    _0d5534_data,%ax
		mov    %ax,_0c3166_data
		cmpb   $0x000000,_0a7c9d_data
		je     _0312ee_jump
		mov    _0c3164_data,%edx
		mov    _0c3160_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03d754_func

	_0312ee_jump:
		mov    _0d5536_data,%eax
		sar    $0x000010,%eax
		mov    %eax,_0b9320_data
		mov    _0d5522_data,%eax
		sar    $0x000010,%eax
		mov    %eax,_0b9324_data
		mov    _0d5538_data,%ax
		mov    %ax,_0b9334_data
		mov    _0d5524_data,%ax
		mov    %ax,_0b9336_data
		mov    _0d554a_data,%al
		mov    %al,_0b9369_data
		mov    $_0b92f8_data,%eax
		call   _01e53c_func
		mov    _0d5522_data,%ax
		mov    $0xffffffff,%edx
		mov    %ax,_0c3116_data
		mov    _0d5520_data,%ax
		mov    %edx,%ebx
		mov    %ax,_0c3118_data
		mov    _0d551c_data,%ax
		mov    %dx,_0c30a6_data
		mov    %ax,_0c3124_data
		mov    _0d551e_data,%ax
		mov    %dx,_0c30a4_data
		mov    %ax,_0c3122_data
		call   _075478_func
		call   _07550c_func
		xor    %eax,%eax
		xor    %edx,%ebx
		call   _063620_func
		mov    _0b9414_data,%cx
		mov    _0b9410_data,%edx
		test   %cx,%cx
		jle    _0313ca_jump

	_03139e_jump:
		cmpw   $0x000063,0x000064(%edx)
		jne    _0313be_jump
		andb   $0x0000fb,0x000085(%edx)
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%edx)
		call   _0200e0_func

	_0313be_jump:
		inc    %ebx
		add    $0x000088,%edx
		cmp    %cx,%bx
		jl     _03139e_jump

	_0313ca_jump:
		mov    $_0c115c_data,%edx
		xor    %eax,%eax
		call   _074e8c_func
		xor    %eax,%eax
		call   _05de04_func
		xor    %eax,%eax
		call   _05df64_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0313e8_func:
		push   %edx
		mov    $_0c1044_data,%eax
		call   _085254_func
		xor    %edx,%edx
		call   _030d14_func
		mov    %dx,_0c30a0_data
		pop    %edx
		ret    



_031404_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0c1d74_data,%ebp
		call   _030370_func
		test   %al,%al
		je     _031423_jump
		movb   $0x000001,0x000004(%esp)
		jmp    _03143c_jump

	_031423_jump:
		mov    %al,0x000004(%esp)
		mov    _0bf2f4_data,%eax
		mov    0x0002d4(%eax),%eax
		call   _040b7c_func
		call   _040d70_func

	_03143c_jump:
		mov    _0b9369_data,%al
		mov    $0x000002,%edx
		mov    %al,_0d554a_data
		mov    $_0b92f8_data,%eax
		call   _01dea0_func
		mov    _0b932e_data,%ax
		mov    %ax,_0d5540_data
		mov    _0b9330_data,%ax
		mov    %ax,_0d5542_data
		mov    _0c3162_data,%ax
		mov    %ax,_0d5526_data
		mov    _0c3166_data,%ax
		mov    $0x000001,%ecx
		mov    %ax,_0d5534_data
		mov    _0b9320_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0d5538_data
		mov    _0b9324_data,%ax
		mov    %cx,_0d552e_data
		mov    %ax,_0d5524_data
		mov    _0c3116_data,%ax
		xor    %edx,%edx
		mov    %ax,_0d5522_data
		mov    _0c3118_data,%ax
		mov    %dx,_0c3116_data
		mov    %ax,_0d5520_data
		mov    %dx,_0c3118_data
		mov    _0c3124_data,%ax
		xor    %dh,%dh
		mov    %ax,_0d551c_data
		mov    %dh,_0c2f46_data
		mov    %dh,_0d554f_data
		mov    %dh,_0d5552_data
		mov    %dh,_0d5551_data
		mov    %dh,_0d5547_data
		mov    %dh,_0d554d_data
		mov    %dh,_0d554e_data
		mov    _0c3122_data,%ax
		xor    %dl,%bl
		mov    %ax,_0d551e_data
		mov    _0c313c_data,%ax
		mov    $_0c115c_data,%edx
		mov    %ax,_0c3124_data
		mov    _0c314a_data,%ax
		mov    %bl,_0d5553_data
		mov    %ax,_0c3122_data
		call   _05f014_func
		call   _05f12c_func
		xor    %eax,%eax
		call   _074e8c_func
		cmpw   $0x000000,_0c30a0_data
		je     _031561_jump
		mov    $0x000001,%eax
		call   _0313e8_func

	_031561_jump:
		xor    %eax,%eax
		call   _063620_func
		xor    %eax,%eax
		mov    _0c1124_data,%ax
		shl    $0x000004,%eax
		add    $0x00003f,%eax
		sar    $0x000006,%eax
		mov    %ax,_0d5532_data
		xor    %eax,%eax
		mov    _0c1126_data,%ax
		xor    %dh,%dh
		shl    $0x000004,%eax
		xor    %ecx,%ecx
		add    $0x00003f,%eax
		mov    _0b9414_data,%di
		sar    $0x000006,%eax
		mov    %dh,_0d5554_data
		mov    %ax,_0d5528_data
		test   %di,%di
		jle    _0316d1_jump

	_0315b0_jump:
		movswl %cx,%eax
		imul   $0x000088,%eax,%ebx
		imul   $0x00002a,%eax,%eax
		mov    _0b9410_data,%edx
		add    %ebx,%edx
		mov    %edx,(%esp)
		mov    (%esp),%ebx
		xor    %edx,%edx
		mov    0x00006e(%ebx),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000004(%ebx),%ebx
		mov    (%esp),%esi
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x00006f(%esi),%bl
		mov    0x000004(%edx),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0c1050_data,%edx
		add    %edx,%eax
		mov    $_0a0848_data,%edx
		movb   $0x000000,0x000028(%eax)
		call   _0853a0_func
		test   %eax,%eax
		je     _0316c1_jump
		mov    0x00003a(%esi),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    (%ebx),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000002(%ebx),%dl
		sar    %edx
		add    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%esi
		mov    (%esp),%eax
		xor    %edx,%edx
		mov    0x00003c(%eax),%eax
		mov    0x000001(%ebx),%dl
		sar    $0x000010,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000003(%ebx),%al
		sar    %eax
		add    %edx,%eax
		mov    _0c1d74_data,%ebp
		sar    $0x000006,%eax
		mov    _0d5532_data,%dx
		mov    %eax,%edi
		cmp    %dx,%si
		jl     _031652_jump
		mov    %edx,%esi
		dec    %esi

	_031652_jump:
		mov    _0d5528_data,%bx
		cmp    %bx,%di
		jl     _031661_jump
		mov    %ebx,%edi
		dec    %edi

	_031661_jump:
		test   %si,%si
		jge    _031668_jump
		xor    %esi,%esi

	_031668_jump:
		test   %di,%di
		jge    _03166f_jump
		xor    %edi,%edi

	_03166f_jump:
		mov    %ecx,%eax

	_031671_jump:
		cwtl   
		imul   $0x00002a,%eax,%ebx
		mov    _0c1050_data,%edx
		mov    %si,0x000020(%edx,%ebx,1)
		mov    %di,0x000022(%edx,%ebx,1)
		mov    %ebp,%edx
		mov    (%edx,%eax,2),%ax
		cmp    %cx,%ax
		jne    _031671_jump
		mov    (%esp),%eax
		cmpw   $0x000040,0x000064(%eax)
		jne    _0316a1_jump
		orb    $0x000004,0x000085(%eax)

	_0316a1_jump:
		mov    (%esp),%eax
		mov    0x000064(%eax),%di
		mov    %ebp,_0c1d74_data
		cmp    $0x000063,%di
		jne    _0316c1_jump
		orb    $0x000004,0x000085(%eax)
		incb   _0d5554_data

	_0316c1_jump:
		mov    _0b9414_data,%ax
		inc    %ecx
		cmp    %ax,%cx
		jl     _0315b0_jump

	_0316d1_jump:
		mov    0x000004(%esp),%al
		mov    _0c1d74_data,%ebp
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0316e8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %dl,0x00000c(%esp)
		mov    $0x00001e,%eax
		call   _084f3c_func
		mov    %eax,%edi
		mov    %eax,%ebp
		push   %edi

	_031705_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03171d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _031705_jump

	_03171d_jump:
		pop    %edi
		mov    _0c1128_data,%eax
		shl    $0x000002,%eax
		add    $0x000004,%eax
		mov    %eax,(%esp)
		call   _084f3c_func
		mov    _0c1124_data,%dl
		mov    %dl,(%eax)
		mov    _0c1124_data,%dx
		mov    %eax,0x000008(%esp)
		xor    %dl,%dl
		and    $0x00ffff,%edx
		inc    %eax
		sar    $0x000008,%edx
		mov    %dl,(%eax)
		mov    _0c1126_data,%dl
		mov    %dl,0x000001(%eax)
		mov    _0c1126_data,%dx
		inc    %eax
		xor    %dl,%dl
		and    $0x00ffff,%edx
		inc    %eax
		sar    $0x000008,%edx
		xor    %esi,%esi
		mov    %dl,(%eax)
		mov    _0c1128_data,%edx
		inc    %eax
		test   %edx,%edx
		jbe    _0317bf_jump
		xor    %ecx,%ecx

	_031780_jump:
		mov    _0c112c_data,%ebx
		mov    (%ecx,%ebx,1),%dl
		mov    %dl,(%eax)
		movswl (%ecx,%ebx,1),%edx
		and    $0x00ff00,%edx
		sar    $0x000008,%edx
		inc    %eax
		mov    %edx,0x000004(%esp)
		inc    %eax
		mov    0x000004(%esp),%dl
		add    $0x000006,%ecx
		mov    %dl,-0x000001(%eax)
		inc    %eax
		mov    -0x000004(%ecx,%ebx,1),%dl
		inc    %esi
		mov    %dl,-0x000001(%eax)
		mov    _0c1128_data,%ebx
		movb   $0x000000,(%eax)
		inc    %eax
		cmp    %ebx,%esi
		jb     _031780_jump

	_0317bf_jump:
		push   $0x000180
		xor    %ebx,%ebx
		push   $0x000262
		mov    0x000014(%esp),%bl
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _065d0c_func
		push   %eax
		call   _086d88_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		jne    _0317fe_jump
		mov    %ebx,%edx
		mov    %ebp,%eax
		call   _065d0c_func
		call   _086ffa_func
		call   _086d6b_func
		jmp    _031813_jump

	_0317fe_jump:
		mov    (%esp),%ebx
		mov    0x000008(%esp),%edx
		mov    %ecx,%eax
		call   _08719c_func
		mov    %ecx,%eax
		call   _08717c_func

	_031813_jump:
		push   $0x000100
		xor    %ebx,%ebx
		mov    %ebp,%eax
		mov    0x000010(%esp),%bl
		push   $0x000200
		mov    %ebx,%edx
		movb   $0x000065,0x000000(%ebp)
		call   _065c90_func
		push   %eax
		mov    0x000014(%esp),%esi
		call   _086d88_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		jne    _03185d_jump
		mov    %ebx,%edx
		mov    %ebp,%eax
		call   _065c90_func
		call   _086ffa_func
		call   _086d6b_func
		jmp    _0318f8_jump

	_03185d_jump:
		mov    (%esp),%ebx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _087081_func
		mov    %ecx,%eax
		call   _08717c_func
		xor    %ebx,%ebx
		mov    _0c1128_data,%ecx
		lea    0x000004(%esi),%eax
		test   %ecx,%ecx
		jbe    _0318a2_jump
		xor    %edx,%edx

	_031881_jump:
		mov    _0c112c_data,%ecx
		add    $0x000002,%eax
		add    $0x000006,%edx
		mov    _0c1128_data,%esi
		add    $0x000002,%eax
		mov    -0x000004(%ecx,%edx,1),%cl
		inc    %ebx
		mov    %cl,-0x000002(%eax)
		cmp    %esi,%ebx
		jb     _031881_jump

	_0318a2_jump:
		push   $0x000180
		xor    %ebx,%ebx
		push   $0x000262
		mov    0x000014(%esp),%bl
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _065c90_func
		push   %eax
		mov    0x000014(%esp),%esi
		call   _086d88_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		jne    _0318e5_jump
		mov    %ebx,%edx
		mov    %ebp,%eax
		call   _065c90_func
		call   _086ffa_func
		call   _086d6b_func
		jmp    _0318f8_jump

	_0318e5_jump:
		mov    (%esp),%ebx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _08719c_func
		mov    %ecx,%eax
		call   _08717c_func

	_0318f8_jump:
		mov    %ebp,%eax
		call   _0850d4_func
		mov    %esi,%eax
		call   _0850d4_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_031910_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000080,%esp
		mov    %eax,0x000038(%esp)
		mov    %dl,0x000070(%esp)
		mov    %bl,0x00007c(%esp)
		mov    $_0c1054_data,%eax
		mov    $0x000032,%edx
		call   _085254_func
		mov    $_0c1054_data,%eax
		call   _084bac_func
		mov    $0x000032,%edx
		mov    %eax,%ecx
		mov    %eax,(%esp)
		mov    $_0c1054_data,%eax
		mov    0x000038(%esp),%esi
		call   _084bac_func
		mov    $0x0001f4,%edx
		mov    %eax,%ebx
		mov    %eax,0x000028(%esp)
		mov    $_0c1054_data,%eax
		mov    %ecx,%edi
		call   _084bac_func
		mov    %eax,%ebp
		push   %edi

	_031970_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _031988_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _031970_jump

	_031988_jump:
		pop    %edi
		mov    0x000038(%esp),%esi
		mov    %ebx,%edi
		push   %edi

	_031990_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0319a8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _031990_jump

	_0319a8_jump:
		pop    %edi
		mov    $_0a0924_data,%esi
		mov    %ecx,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0319b9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0319d1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0319b9_jump

	_0319d1_jump:
		pop    %edi
		mov    $_0a092c_data,%esi
		mov    %ebx,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0319e2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0319fa_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0319e2_jump

	_0319fa_jump:
		pop    %edi
		mov    _0d5530_data,%eax
		mov    _0d5526_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		mov    $0x00c350,%edx
		mov    %eax,0x000034(%esp)
		mov    $_0c1054_data,%eax
		mov    0x000034(%esp),%ecx
		call   _084bac_func
		mov    %eax,0x000010(%esp)
		add    %ecx,%ecx
		mov    $_0c1054_data,%eax
		lea    0x000008(%ecx),%edx
		call   _084bac_func
		mov    %eax,%ebx
		mov    %eax,0x000018(%esp)
		mov    %eax,0x00000c(%esp)
		xor    %edx,%edx
		mov    $_0c1054_data,%eax
		mov    %edx,0x000014(%esp)
		mov    $0x006d60,%edx
		call   _084bac_func
		movw   $0x000000,(%ebx)
		mov    %eax,_0d54d8_data
		movw   $0x000000,0x000002(%ebx)
		mov    _0d5532_data,%ax
		mov    %ax,0x000004(%ebx)
		mov    _0d5528_data,%ax
		mov    %ax,0x000006(%ebx)
		lea    0x000008(%ebx),%eax
		xor    %edx,%edx
		mov    %ecx,%ebx
		call   _085360_func
		xor    %eax,%eax
		xor    %bl,%bl

	_031a8c_jump:
		mov    _0d54d8_data,%edx
		add    $0x00001c,%eax
		movl   $0xffffffff,-0x000018(%edx,%eax,1)
		mov    %bl,-0x000008(%edx,%eax,1)
		mov    %bl,-0x000007(%edx,%eax,1)
		cmp    $0x006d60,%eax
		jne    _031a8c_jump
		mov    $0x0003e8,%ebx
		xor    %ecx,%ecx
		mov    %ebx,0x000058(%esp)
		mov    %ecx,0x00003c(%esp)
		mov    %ecx,0x000030(%esp)
		mov    %ecx,0x000024(%esp)
		mov    %ecx,0x00004c(%esp)
		mov    %ecx,0x000058(%esp)
		jmp    _031d0f_jump

	_031ad0_jump:
		mov    0x000030(%esp),%edi
		mov    _0c1050_data,%eax
		mov    $_0a0848_data,%edx
		add    %edi,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _031ced_jump
		mov    0x000024(%esp),%eax
		mov    _0b9410_data,%ebx
		add    %eax,%ebx
		mov    0x000030(%esp),%edx
		mov    0x00003c(%ebx),%ax
		mov    _0c1050_data,%edi
		mov    %ax,0x000060(%esp)
		mov    0x00003e(%ebx),%ax
		add    %edx,%edi
		mov    %ax,0x000068(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $_0c1054_data,%eax
		lea    0x000001(%ecx),%edx
		call   _084bac_func
		mov    0x00004c(%esp),%ecx
		mov    _0d54d8_data,%edi
		add    %ecx,%edi
		mov    _0c1050_data,%esi
		mov    %eax,(%edi)
		mov    0x000030(%esp),%eax
		mov    (%edi),%edi
		add    %eax,%esi
		push   %edi

	_031b4b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _031b63_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _031b4b_jump

	_031b63_jump:
		pop    %edi
		mov    _0d54d8_data,%eax
		add    %ecx,%eax
		mov    0x00007c(%ebx),%dl
		movb   $0x000001,0x000014(%eax)
		movw   $0x000000,0x000018(%eax)
		movb   $0x000000,0x000017(%eax)
		mov    %dl,0x00000a(%eax)
		mov    0x000064(%ebx),%dx
		cmp    $0x000110,%dx
		je     _031b98_jump
		cmp    $0x00010b,%dx
		je     _031b98_jump
		cmp    $0x00010a,%dx
		jne    _031ba9_jump

	_031b98_jump:
		mov    0x00004c(%esp),%edx
		mov    _0d54d8_data,%eax
		add    %eax,%edx
		mov    0x00007b(%ebx),%al
		mov    %al,0x000017(%edx)

	_031ba9_jump:
		mov    0x000058(%esp),%ebx
		mov    %ebx,%eax
		mov    %ebx,%edi

	_031bb1_jump:
		cmp    %ax,%di
		jge    _031bb8_jump
		mov    %edi,%eax

	_031bb8_jump:
		movswl %di,%edx
		mov    _0c1d74_data,%edi
		mov    (%edi,%edx,2),%di
		cmp    %bx,%di
		jne    _031bb1_jump
		mov    0x00004c(%esp),%ebx
		mov    _0d54d8_data,%edx
		add    %ebx,%edx
		mov    %ax,0x000008(%edx)
		mov    0x000060(%esp),%eax
		mov    0x000060(%esp),%ebx
		and    $0x0000c0,%al
		sub    %eax,%ebx
		mov    0x000068(%esp),%eax
		mov    %bx,0x00000c(%edx)
		mov    0x000068(%esp),%ebx
		and    $0x0000c0,%al
		mov    $0x000006,%cl
		sub    %eax,%ebx
		mov    0x000060(%esp),%eax
		mov    %bx,0x00000e(%edx)
		test   %ax,%ax
		js     _031c0a_jump
		sar    %cl,%ax
		jmp    _031c13_jump

	_031c0a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_031c13_jump:
		mov    %ax,0x000060(%esp)
		test   %ax,%ax
		jge    _031c24_jump
		xor    %edi,%edi
		mov    %di,0x000060(%esp)

	_031c24_jump:
		mov    $0x000006,%cl
		mov    0x000068(%esp),%eax
		test   %ax,%ax
		js     _031c34_jump
		sar    %cl,%ax
		jmp    _031c3d_jump

	_031c34_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_031c3d_jump:
		mov    %ax,0x000068(%esp)
		test   %ax,%ax
		jge    _031c4e_jump
		xor    %eax,%eax
		mov    %ax,0x000068(%esp)

	_031c4e_jump:
		mov    0x000066(%esp),%edx
		mov    _0d5530_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		mov    0x00005e(%esp),%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x000018(%esp),%ecx
		add    %eax,%eax
		add    %ecx,%eax
		cmpw   $0x000000,0x000008(%eax)
		je     _031c95_jump
		mov    0x000006(%eax),%eax
		mov    0x00004c(%esp),%ebx
		sar    $0x000010,%eax
		mov    _0d54d8_data,%edx
		dec    %eax
		mov    %eax,0x000004(%edx,%ebx,1)
		imul   $0x00001c,%eax,%eax
		movb   $0x000001,0x000015(%edx,%eax,1)

	_031c95_jump:
		mov    0x000066(%esp),%eax
		mov    _0d5530_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		mov    0x00005e(%esp),%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x000018(%esp),%esi
		add    %eax,%eax
		mov    0x00003c(%esp),%ebx
		add    %esi,%eax
		inc    %ebx
		mov    0x00004c(%esp),%edi
		mov    %bx,0x000008(%eax)
		mov    _0d54d8_data,%eax
		add    %edi,%eax
		mov    0x000060(%esp),%edx
		mov    %dx,0x000010(%eax)
		mov    0x000068(%esp),%edx
		mov    %dx,0x000012(%eax)
		mov    0x00003c(%esp),%edx
		lea    0x00001c(%edi),%eax
		inc    %edx
		mov    %eax,0x00004c(%esp)
		mov    %edx,0x00003c(%esp)

	_031ced_jump:
		mov    0x000030(%esp),%ebx
		mov    0x000024(%esp),%ecx
		mov    0x000058(%esp),%esi
		add    $0x00002a,%ebx
		add    $0x000088,%ecx
		inc    %esi
		mov    %ebx,0x000030(%esp)
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x000058(%esp)

	_031d0f_jump:
		mov    _0b9412_data,%eax
		mov    0x000058(%esp),%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jg     _031ad0_jump
		mov    0x00003c(%esp),%eax
		xor    %ecx,%ecx
		mov    %ax,0x000064(%esp)
		mov    %ecx,0x000058(%esp)
		mov    %ecx,0x00002c(%esp)
		jmp    _031dc0_jump

	_031d3b_jump:
		mov    0x00002c(%esp),%ecx
		mov    _0d54d8_data,%eax
		add    %ecx,%eax
		mov    $_0a0934_data,%edx
		mov    (%eax),%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _031dac_jump
		test   %edi,%edi
		jle    _031dac_jump
		mov    0x000058(%esp),%eax
		mov    %ecx,%ebx
		xor    %edi,%edi
		imul   $0x00001c,%eax,%esi

	_031d65_jump:
		mov    _0d54d8_data,%eax
		add    %edi,%eax
		cmpb   $0x000001,0x000014(%eax)
		jne    _031da5_jump
		mov    $_0a0934_data,%edx
		mov    (%eax),%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _031da5_jump
		mov    _0d54d8_data,%ecx
		lea    (%ecx,%edi,1),%eax
		add    %ebx,%ecx
		mov    0x00000c(%eax),%dx
		cmp    0x00000c(%ecx),%dx
		jne    _031da5_jump
		mov    0x000010(%eax),%dx
		cmp    0x000010(%ecx),%dx
		jne    _031da5_jump
		movb   $0x000000,0x000014(%eax)

	_031da5_jump:
		add    $0x00001c,%edi
		cmp    %esi,%edi
		jl     _031d65_jump

	_031dac_jump:
		mov    0x00002c(%esp),%edx
		mov    0x000058(%esp),%ebx
		add    $0x00001c,%edx
		inc    %ebx
		mov    %edx,0x00002c(%esp)
		mov    %ebx,0x000058(%esp)

	_031dc0_jump:
		mov    0x000062(%esp),%eax
		mov    0x000058(%esp),%edi
		sar    $0x000010,%eax
		cmp    %edi,%eax
		jg     _031d3b_jump
		mov    0x000034(%esp),%ebx
		mov    0x000018(%esp),%eax
		mov    0x000038(%esp),%esi
		xor    %edx,%edx
		add    $0x000008,%eax
		add    %ebx,%ebx
		mov    0x000010(%esp),%edi
		call   _085360_func
		push   %edi

	_031df0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _031e08_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _031df0_jump

	_031e08_jump:
		pop    %edi
		mov    $_0a093c_data,%esi
		mov    $0x000001,%ebx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_031e1c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _031e34_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _031e1c_jump

	_031e34_jump:
		pop    %edi
		mov    0x000038(%esp),%edi
		xor    %edx,%edx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ebx,0x00005c(%esp)
		mov    0x000014(%esp),%eax
		add    $0x000008,%ecx
		mov    %edx,0x000058(%esp)
		add    %ecx,%eax
		mov    %edx,0x000048(%esp)
		mov    %eax,0x000014(%esp)
		jmp    _032326_jump

	_031e63_jump:
		mov    0x000048(%esp),%edi
		mov    _0d54d8_data,%eax
		add    %edi,%eax
		mov    0x000014(%eax),%bl
		cmp    $0x000001,%bl
		jne    _032312_jump
		mov    %bl,0x000074(%esp)
		mov    %bl,0x00006c(%esp)
		xor    %ch,%ch
		mov    %edi,0x000020(%esp)
		mov    %ch,0x000078(%esp)

	_031e8c_jump:
		cmpb   $0x000000,0x000074(%esp)
		je     _031ebd_jump
		mov    0x000058(%esp),%eax
		mov    %eax,0x00003c(%esp)
		xor    %ah,%ah
		mov    0x000020(%esp),%ebx
		mov    %ah,0x000074(%esp)
		mov    _0d54d8_data,%eax
		add    %ebx,%eax
		cmpb   $0x000000,0x000015(%eax)
		je     _031ed0_jump
		xor    %bh,%bh
		mov    %bh,0x00006c(%esp)
		jmp    _03228c_jump

	_031ebd_jump:
		imul   $0x00001c,0x00003c(%esp),%eax
		mov    _0d54d8_data,%edx
		mov    0x000004(%edx,%eax,1),%eax
		mov    %eax,0x00003c(%esp)

	_031ed0_jump:
		imul   $0x00001c,0x00003c(%esp),%eax
		mov    _0d54d8_data,%edi
		add    %eax,%edi
		mov    0x000014(%edi),%dh
		mov    %eax,0x000050(%esp)
		cmp    $0x000001,%dh
		jne    _03228c_jump
		mov    $_0a0948_data,%esi
		mov    $0x00000a,%ebx
		mov    %dh,0x000078(%esp)
		mov    0x000010(%edi),%ax
		mov    0x000050(%esp),%edx
		mov    %ax,0x000060(%esp)
		mov    0x000012(%edi),%ax
		mov    0x000010(%esp),%edi
		mov    %ax,0x000068(%esp)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_031f1e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _031f36_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _031f1e_jump

	_031f36_jump:
		pop    %edi
		mov    0x000014(%esp),%edi
		mov    _0d54d8_data,%eax
		add    $0x000009,%edi
		add    %edx,%eax
		mov    %ebp,%esi
		mov    %edi,0x000014(%esp)
		mov    0x00000a(%eax),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%edi
		call   _0873e0_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_031f65_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _031f7d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _031f65_jump

	_031f7d_jump:
		pop    %edi
		mov    $_0a0954_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_031f8c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _031fa4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _031f8c_jump

	_031fa4_jump:
		pop    %edi
		mov    %ebp,%edi
		mov    0x000014(%esp),%ebx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    _0d54d8_data,%eax
		add    %ecx,%ebx
		mov    0x000050(%esp),%ecx
		mov    %ebp,%edx
		add    %ecx,%eax
		mov    %ebp,%esi
		mov    %ebx,0x000014(%esp)
		mov    0x00000c(%eax),%eax
		mov    $0x00000a,%ebx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%edi
		call   _0873e0_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_031fe8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032000_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _031fe8_jump

	_032000_jump:
		pop    %edi
		mov    $_0a0954_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03200f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032027_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03200f_jump

	_032027_jump:
		pop    %edi
		mov    %ebp,%edi
		mov    0x000014(%esp),%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000050(%esp),%edi
		inc    %ecx
		mov    _0d54d8_data,%eax
		add    %ecx,%esi
		add    %edi,%eax
		mov    0x000010(%esp),%edi
		mov    %esi,0x000014(%esp)
		mov    (%eax),%esi
		mov    0x000050(%esp),%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03205d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032075_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03205d_jump

	_032075_jump:
		pop    %edi
		mov    _0d54d8_data,%eax
		add    %edx,%eax
		mov    (%eax),%edi
		mov    0x000014(%esp),%ebx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0d54d8_data,%eax
		add    %ecx,%ebx
		add    %edx,%eax
		mov    %ebx,0x000014(%esp)
		mov    $0x000009,%ebx
		mov    (%eax),%edx
		mov    $_0a0958_data,%eax
		call   _0873fb_func
		test   %eax,%eax
		jne    _0320c9_jump
		mov    0x000050(%esp),%edi
		mov    _0d54d8_data,%eax
		add    %edi,%eax
		mov    $0x00000a,%ebx
		mov    0x000016(%eax),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		jmp    _0320e3_jump

	_0320c9_jump:
		mov    0x000050(%esp),%esi
		mov    _0d54d8_data,%eax
		add    %esi,%eax
		mov    0x000017(%eax),%al
		mov    $0x00000a,%ebx
		and    $0x0000ff,%eax
		mov    %ebp,%edx

	_0320e3_jump:
		call   _0873e0_func
		mov    $_0a0954_data,%esi
		mov    0x000010(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0320fa_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032112_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0320fa_jump

	_032112_jump:
		pop    %edi
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03211e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032136_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03211e_jump

	_032136_jump:
		pop    %edi
		mov    $_0a0954_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_032145_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03215d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _032145_jump

	_03215d_jump:
		pop    %edi
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000014(%esp),%eax
		add    $0x000002,%ecx
		add    %ecx,%eax
		mov    0x00003c(%esp),%edx
		mov    %eax,0x000014(%esp)
		imul   $0x00001c,%edx,%eax
		mov    %eax,0x000008(%esp)
		mov    0x000008(%esp),%ebx
		mov    _0d54d8_data,%eax
		add    %ebx,%eax
		mov    0x00000a(%eax),%al
		mov    $0x00000a,%ebx
		mov    0x000010(%esp),%edi
		and    $0x0000ff,%eax
		mov    %ebp,%edx
		mov    %ebp,%esi
		call   _0873e0_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0321b0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0321c8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0321b0_jump

	_0321c8_jump:
		pop    %edi
		mov    $_0a0954_data,%esi
		mov    $0x00000a,%ebx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0321dc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0321f4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0321dc_jump

	_0321f4_jump:
		pop    %edi
		mov    %ebp,%edx
		mov    %ebp,%edi
		mov    0x000014(%esp),%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000008(%esp),%edi
		mov    _0d54d8_data,%eax
		inc    %ecx
		add    %edi,%eax
		add    %ecx,%esi
		mov    0x000010(%esp),%edi
		mov    0x000006(%eax),%eax
		mov    %esi,0x000014(%esp)
		sar    $0x000010,%eax
		mov    %ebp,%esi
		call   _0873e0_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_032233_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03224b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _032233_jump

	_03224b_jump:
		pop    %edi
		mov    $_0a0964_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03225a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032272_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03225a_jump

	_032272_jump:
		pop    %edi
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000014(%esp),%eax
		add    $0x000002,%ecx
		add    %ecx,%eax
		mov    %eax,0x000014(%esp)

	_03228c_jump:
		imul   $0x00001c,0x00003c(%esp),%eax
		mov    _0d54d8_data,%edx
		cmpl   $0xffffffff,0x000004(%edx,%eax,1)
		je     _0322a9_jump
		cmpb   $0x000000,0x00006c(%esp)
		jne    _031e8c_jump

	_0322a9_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _032312_jump
		mov    0x000066(%esp),%edx
		mov    _0d5530_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		mov    0x00005e(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000018(%esp),%ecx
		add    %edx,%eax
		mov    $_0a0968_data,%esi
		add    %eax,%eax
		mov    0x00005c(%esp),%edx
		add    %ecx,%eax
		mov    %edx,%ecx
		mov    0x000010(%esp),%edi
		inc    %ecx
		mov    %dx,0x000008(%eax)
		mov    %ecx,0x00005c(%esp)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0322f4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03230c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0322f4_jump

	_03230c_jump:
		pop    %edi
		addl   $0x000008,0x000014(%esp)

	_032312_jump:
		mov    0x000048(%esp),%edi
		mov    0x000058(%esp),%eax
		add    $0x00001c,%edi
		inc    %eax
		mov    %edi,0x000048(%esp)
		mov    %eax,0x000058(%esp)

	_032326_jump:
		mov    0x000062(%esp),%eax
		mov    0x000058(%esp),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jg     _031e63_jump
		cmpb   $0x000000,0x00007c(%esp)
		je     _032376_jump
		mov    0x000034(%esp),%ebx
		mov    0x00000c(%esp),%eax
		xor    %esi,%esi
		add    $0x000004,%ebx
		mov    %esi,0x000058(%esp)
		test   %ebx,%ebx
		jle    _03236f_jump

	_032355_jump:
		mov    (%eax),%dl
		mov    0x000001(%eax),%dh
		mov    %dh,(%eax)
		mov    %dl,0x000001(%eax)
		mov    0x000058(%esp),%edx
		inc    %edx
		add    $0x000002,%eax
		mov    %edx,0x000058(%esp)
		cmp    %edx,%ebx
		jg     _032355_jump

	_03236f_jump:
		mov    0x00000c(%esp),%eax
		movb   $0x000001,(%eax)

	_032376_jump:
		mov    $0x00c350,%edx
		mov    $_0c1054_data,%eax
		mov    0x000038(%esp),%esi
		call   _084bac_func
		mov    %eax,%edi
		mov    %eax,0x000040(%esp)
		push   %edi

	_032390_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0323a8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _032390_jump

	_0323a8_jump:
		pop    %edi
		mov    $_0a0974_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0323b7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0323cf_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0323b7_jump

	_0323cf_jump:
		pop    %edi
		mov    0x000038(%esp),%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0323dd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0323f5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0323dd_jump

	_0323f5_jump:
		pop    %edi
		mov    $_0a098c_data,%esi
		mov    $0x00000a,%ebx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_032409_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032421_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _032409_jump

	_032421_jump:
		pop    %edi
		mov    $0x000900,%eax
		mov    0x000034(%esp),%esi
		mov    %ebp,%edx
		sub    %esi,%eax
		call   _0873e0_func
		mov    %eax,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03243f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032457_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03243f_jump

	_032457_jump:
		pop    %edi
		mov    $_0a099c_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_032466_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03247e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _032466_jump

	_03247e_jump:
		pop    %edi
		mov    0x000038(%esp),%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03248c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0324a4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03248c_jump

	_0324a4_jump:
		pop    %edi
		mov    $_0a09a0_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0324b3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0324cb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0324b3_jump

	_0324cb_jump:
		pop    %edi
		mov    0x000038(%esp),%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		lea    0x000000(,%ecx,4),%edx
		mov    %ebp,%edi
		sub    %ecx,%edx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000010(%esp),%eax
		add    %edx,%ecx
		xor    %edi,%edi
		add    $0x000033,%ecx
		mov    %eax,0x000054(%esp)
		mov    %eax,0x000044(%esp)
		mov    %edi,0x000004(%esp)
		mov    $0x000001,%eax
		mov    %ecx,0x00001c(%esp)
		mov    %eax,0x00003c(%esp)

	_032513_jump:
		mov    $_0a09b0_data,%edx
		mov    0x000044(%esp),%eax
		mov    $0x00000a,%ebx
		call   _086c40_func
		mov    %eax,0x000044(%esp)
		mov    %ebp,%edx
		mov    0x000004(%esp),%eax
		mov    0x000040(%esp),%edi
		call   _0873e0_func
		mov    %eax,%esi
		mov    0x00001c(%esp),%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_032548_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032560_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _032548_jump

	_032560_jump:
		pop    %edi
		mov    %ebp,%edi
		mov    0x000044(%esp),%ebx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		add    %ecx,%edx
		mov    $_0a09b8_data,%esi
		mov    %edx,0x00001c(%esp)

	_03257c_jump:
		mov    0x000054(%esp),%eax
		mov    %esi,%edx
		call   _086c40_func
		mov    %eax,%edi
		mov    %eax,0x000054(%esp)
		test   %eax,%eax
		je     _0325a5_jump
		cmp    %ebx,%eax
		jae    _0325a5_jump
		addl   $0x00000e,0x000004(%esp)
		test   %edi,%edi
		je     _03257c_jump
		inc    %edi
		mov    %edi,0x000054(%esp)
		jmp    _03257c_jump

	_0325a5_jump:
		mov    0x000004(%esp),%ecx
		add    $0x000002,%ecx
		mov    0x000054(%esp),%esi
		mov    %ecx,0x000004(%esp)
		test   %esi,%esi
		je     _03260b_jump
		mov    $_0a0954_data,%esi
		mov    0x000040(%esp),%edi
		mov    0x000044(%esp),%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0325ce_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0325e6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0325ce_jump

	_0325e6_jump:
		pop    %edi
		mov    0x000044(%esp),%eax
		mov    0x00003c(%esp),%edi
		inc    %edx
		mov    %eax,0x000054(%esp)
		inc    %edi
		mov    0x00001c(%esp),%eax
		mov    %edx,0x000044(%esp)
		inc    %eax
		mov    %edi,0x00003c(%esp)
		mov    %eax,0x00001c(%esp)
		jmp    _032513_jump

	_03260b_jump:
		mov    $_0a09c0_data,%esi
		mov    0x000040(%esp),%edi
		mov    0x00003c(%esp),%ebx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_032621_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032639_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _032621_jump

	_032639_jump:
		pop    %edi
		mov    $0x000200,%eax
		mov    %ebp,%edx
		sub    %ebx,%eax
		mov    $0x00000a,%ebx
		call   _0873e0_func
		mov    %eax,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_032658_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032670_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _032658_jump

	_032670_jump:
		pop    %edi
		mov    $_0a099c_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03267f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032697_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03267f_jump

	_032697_jump:
		pop    %edi
		mov    %ebp,%edi
		mov    0x00001c(%esp),%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000014(%esp),%ebp
		add    $0x00000a,%ecx
		xor    %edi,%edi
		add    %ecx,%esi
		mov    %edi,0x000058(%esp)
		mov    %esi,0x00001c(%esp)
		test   %ebp,%ebp
		jle    _0326e0_jump
		mov    0x000040(%esp),%eax
		mov    0x000010(%esp),%edx
		mov    0x000014(%esp),%ecx
		add    %esi,%eax

	_0326cd_jump:
		mov    (%edx),%bl
		mov    %bl,(%eax)
		mov    0x000058(%esp),%ebx
		inc    %eax
		inc    %ebx
		inc    %edx
		mov    %ebx,0x000058(%esp)
		cmp    %ecx,%ebx
		jl     _0326cd_jump

	_0326e0_jump:
		mov    0x00001c(%esp),%eax
		mov    0x000014(%esp),%esi
		push   $0x000180
		xor    %ebx,%ebx
		add    %eax,%esi
		mov    0x000044(%esp),%eax
		push   $0x000262
		add    %esi,%eax
		mov    0x000078(%esp),%bl
		mov    %esi,0x00001c(%esp)
		movb   $0x00000d,(%eax)
		mov    %ebx,%edx
		movb   $0x00000a,0x000001(%eax)
		mov    0x000008(%esp),%eax
		lea    0x000002(%esi),%ebp
		call   _065c14_func
		push   %eax
		mov    %ebp,0x000020(%esp)
		call   _086d88_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		jne    _032744_jump
		mov    (%esp),%eax
		mov    %ebx,%edx
		call   _065c14_func
		call   _086ffa_func
		call   _086d6b_func
		jmp    _032758_jump

	_032744_jump:
		mov    0x000040(%esp),%edx
		mov    %ebp,%ebx
		mov    %ecx,%eax
		call   _08719c_func
		mov    %ecx,%eax
		call   _08717c_func

	_032758_jump:
		push   $0x000180
		xor    %ebx,%ebx
		push   $0x000262
		mov    0x000078(%esp),%bl
		mov    0x000030(%esp),%eax
		mov    %ebx,%edx
		call   _065b98_func
		push   %eax
		call   _086d88_func
		mov    %eax,%ecx
		cwtl   
		add    $0x00000c,%esp
		cmp    $0xffffffff,%eax
		jne    _03279b_jump
		mov    0x000028(%esp),%eax
		mov    %ebx,%edx
		call   _065b98_func
		call   _086ffa_func
		call   _086d6b_func
		jmp    _0327c3_jump

	_03279b_jump:
		mov    0x000034(%esp),%ebx
		add    %ebx,%ebx
		mov    0x00007c(%esp),%dl
		add    $0x000008,%ebx
		test   %dl,%dl
		je     _0327b2_jump
		mov    0x00000c(%esp),%edx
		jmp    _0327b6_jump

	_0327b2_jump:
		mov    0x000018(%esp),%edx

	_0327b6_jump:
		call   _08719c_func
		movswl %cx,%eax
		call   _08717c_func

	_0327c3_jump:
		add    $0x000080,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0327d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000064,%esp
		cmpb   $0x000000,_0c33dc_data
		je     _03284c_jump
		cmpb   $0x000001,_0d5554_data
		jne    _032837_jump
		mov    _0bf2f4_data,%eax
		mov    0x0002e0(%eax),%eax
		call   _040b7c_func
		call   _040d70_func
		test   %al,%al
		je     _03284c_jump
		mov    %esp,%edi
		mov    $0x000001,%ecx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $_0a09c8_data,%esi
		mov    _0c3142_data,%dl
		mov    %ecx,%ebx
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   _031910_func
		xor    %edx,%edx
		mov    $_0c2e8c_data,%eax
		mov    _0c3142_data,%dl
		call   _039d80_func
		jmp    _03284c_jump

	_032837_jump:
		mov    _0bf2f4_data,%eax
		mov    0x0002ec(%eax),%eax
		call   _040b7c_func
		call   _040d70_func

	_03284c_jump:
		add    $0x000064,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032858_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000068,%esp
		mov    $0x000001,%ah
		mov    _0c33dc_data,%dl
		mov    %ah,0x000064(%esp)
		test   %dl,%dl
		je     _0328e1_jump
		mov    _0bf2f4_data,%eax
		mov    0x0002f0(%eax),%eax
		call   _040b7c_func
		call   _040d70_func
		test   %al,%al
		je     _0328e1_jump
		cmpb   $0x000001,_0d5554_data
		jne    _0328c6_jump
		mov    %esp,%edi
		mov    $0x000001,%ecx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $_0a09c8_data,%esi
		mov    _0c3142_data,%dl
		mov    %ecx,%ebx
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   _031910_func
		xor    %edx,%edx
		mov    $_0c2e8c_data,%eax
		mov    _0c3142_data,%dl
		call   _039d80_func
		jmp    _0328e1_jump

	_0328c6_jump:
		mov    _0bf2f4_data,%eax
		mov    0x0002ec(%eax),%eax
		xor    %bl,%bl
		call   _040b7c_func
		call   _040d70_func
		mov    %bl,0x000064(%esp)

	_0328e1_jump:
		mov    0x000064(%esp),%al
		add    $0x000068,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0328f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0d54f4_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jle    _03293a_jump

	_032904_jump:
		movswl %si,%eax
		imul   $0x00002a,%eax,%eax
		mov    _0c1050_data,%edx
		add    %eax,%edx
		movswl %bx,%eax
		lea    0x000000(,%eax,4),%ecx
		mov    _0d54f0_data,%eax
		mov    (%ecx,%eax,1),%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _03293a_jump
		mov    _0d54f4_data,%cx
		inc    %ebx
		cmp    %cx,%bx
		jl     _032904_jump

	_03293a_jump:
		mov    _0d54f4_data,%si
		cmp    %si,%bx
		jne    _032948_jump
		xor    %esi,%ebx

	_032948_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032950_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000064(%eax),%dx
		cmp    $0x000110,%dx
		je     _03296e_jump
		cmp    $0x00010b,%dx
		je     _03296e_jump
		cmp    $0x00010a,%dx
		jne    _03298e_jump

	_03296e_jump:
		xor    %edx,%edx
		mov    _0aa0a1_data,%dl
		mov    $0x000006,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,0x00007a(%ebx)
		mov    %dl,_0aa0a1_data
		mov    %dl,0x00007b(%ebx)

	_03298e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032994_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    _0d51d0_data,%dx
		movswl %dx,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    _0d51d4_data,%eax
		add    %ebx,%eax
		movswl (%eax),%ebx
		mov    0x000008(%eax),%eax
		movswl (%eax,%ebx,2),%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0d54ec_data,%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x00006e(%ebx),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebx),%ecx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006f(%ebx),%al
		mov    0x000004(%ecx),%ebx
		mov    0x000002(%ebx,%eax,4),%al
		mov    _0d553a_data,%bx
		xor    %ah,%ah
		mov    _0d553e_data,%si
		add    %eax,%ebx
		mov    _0d553a_data,%ax
		mov    %esi,%edi
		mov    %ax,0x000010(%esp)
		mov    _0d552c_data,%ax
		add    $0x000078,%ebx
		mov    %ax,_0d553e_data
		cmp    $0x000140,%bx
		jge    _032ad8_jump

	_032a35_jump:
		mov    %edx,%eax
		inc    %eax
		mov    _0d51d2_data,%cx
		cwtd   
		idiv   %cx
		movswl %dx,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0d51d4_data,%ecx
		add    %ecx,%eax
		movswl (%eax),%ecx
		mov    0x000008(%eax),%eax
		movswl (%eax,%ecx,2),%eax
		imul   $0x000088,%eax,%eax
		mov    _0d54ec_data,%ecx
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    0x00006e(%eax),%cl
		imul   $0x00000c,%ecx,%ecx
		mov    0x000004(%eax),%ebp
		add    %ecx,%ebp
		xor    %ecx,%ecx
		mov    %ebp,(%esp)
		mov    0x00006f(%eax),%cl
		mov    0x000004(%ebp),%ebp
		shl    $0x000002,%ecx
		add    %ecx,%ebp
		xor    %ecx,%ecx
		mov    0x000000(%ebp),%cl
		mov    %ecx,0x000014(%esp)
		mov    %ebx,%ecx
		sub    0x000014(%esp),%ecx
		mov    %cx,0x000036(%eax)
		xor    %ecx,%ecx
		mov    0x000001(%ebp),%cl
		mov    %ecx,0x000014(%esp)
		mov    _0d553e_data,%cx
		mov    %ecx,0x000018(%esp)
		mov    0x000014(%esp),%ecx
		sub    %ecx,0x000018(%esp)
		mov    0x000018(%esp),%ecx
		mov    %cx,0x000038(%eax)
		xor    %ecx,%ecx
		mov    0x000002(%ebp),%cl
		add    $0x000078,%ecx
		call   _019070_func
		add    %ecx,%ebx
		cmp    $0x000140,%bx
		jl     _032a35_jump

	_032ad8_jump:
		mov    _0d51d0_data,%dx

	_032adf_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff01,%eax
		jle    _032b8a_jump
		mov    _0d51d2_data,%ax
		dec    %eax
		add    %edx,%eax
		mov    _0d51d2_data,%bx
		cwtd   
		idiv   %bx
		movswl %dx,%eax
		imul   $0x00000c,%eax,%ebx
		mov    _0d51d4_data,%eax
		add    %ebx,%eax
		movswl (%eax),%ebx
		mov    0x000008(%eax),%eax
		movswl (%eax,%ebx,2),%eax
		imul   $0x000088,%eax,%eax
		mov    _0d54ec_data,%ebx
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x00006e(%eax),%bl
		imul   $0x00000c,%ebx,%ebx
		mov    0x000004(%eax),%ecx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x00006f(%eax),%bl
		mov    0x000004(%ecx),%ecx
		shl    $0x000002,%ebx
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x000002(%ebx),%cl
		add    $0x000078,%ecx
		sub    %cx,0x000010(%esp)
		xor    %ecx,%ecx
		mov    (%ebx),%cl
		mov    %ecx,0x000014(%esp)
		mov    0x000010(%esp),%ecx
		sub    0x000014(%esp),%ecx
		mov    %cx,0x000036(%eax)
		mov    0x000001(%ebx),%bl
		xor    %bh,%bh
		mov    %ebx,0x000014(%esp)
		mov    0x000014(%esp),%ecx
		mov    _0d553e_data,%bx
		sub    %ecx,%ebx
		mov    %bx,0x000038(%eax)
		call   _019070_func
		jmp    _032adf_jump

	_032b8a_jump:
		mov    _0d51ce_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0d51d4_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    %si,_0d553e_data
		mov    (%ecx),%bx
		cmp    $0x0000c8,%si
		jge    _032c8a_jump

	_032bbc_jump:
		movswl %bx,%eax
		add    %eax,%eax
		mov    %eax,0x000008(%esp)
		mov    0x000008(%esp),%ebp
		mov    0x000008(%ecx),%eax
		add    %ebp,%eax
		movswl (%eax),%eax
		imul   $0x000088,%eax,%eax
		mov    _0d54ec_data,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006e(%edx),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%edx),%ebp
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x00006f(%edx),%al
		shl    $0x000002,%eax
		mov    %ebp,(%esp)
		mov    %eax,0x000004(%esp)
		mov    0x000004(%ebp),%eax
		mov    0x000004(%esp),%ebp
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x000000(%ebp),%al
		mov    %eax,0x000018(%esp)
		mov    _0d553a_data,%ax
		mov    %eax,0x000014(%esp)
		mov    0x000018(%esp),%eax
		sub    %eax,0x000014(%esp)
		mov    0x000014(%esp),%eax
		mov    %ax,0x000036(%edx)
		xor    %eax,%eax
		mov    0x000001(%ebp),%al
		mov    %eax,0x000014(%esp)
		mov    %esi,%eax
		sub    0x000014(%esp),%eax
		mov    %ebp,0x00000c(%esp)
		mov    %ax,0x000038(%edx)
		mov    0x000008(%esp),%ebp
		mov    0x000008(%ecx),%eax
		add    %eax,%ebp
		mov    _0d54f6_data,%ax
		cmp    0x000000(%ebp),%ax
		jne    _032c5a_jump
		mov    %edx,%eax
		call   _032950_func

	_032c5a_jump:
		mov    %edx,%eax
		mov    0x00000c(%esp),%edx
		call   _019070_func
		xor    %eax,%eax
		mov    0x000003(%edx),%al
		add    $0x000078,%eax
		add    %eax,%esi
		mov    %ebx,%eax
		inc    %eax
		mov    0x000004(%ecx),%bx
		cwtd   
		idiv   %bx
		mov    %edx,%ebx
		cmp    $0x0000c8,%si
		jl     _032bbc_jump

	_032c8a_jump:
		mov    (%ecx),%dx

	_032c8d_jump:
		movswl %di,%eax
		cmp    $0xffffff01,%eax
		jle    _032d28_jump
		mov    0x000004(%ecx),%ax
		dec    %eax
		add    %edx,%eax
		mov    0x000004(%ecx),%si
		cwtd   
		idiv   %si
		mov    0x000008(%ecx),%ebx
		movswl %dx,%eax
		movswl (%ebx,%eax,2),%eax
		imul   $0x000088,%eax,%ebx
		mov    _0d54ec_data,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x00006e(%eax),%bl
		imul   $0x00000c,%ebx,%ebx
		mov    0x000004(%eax),%ebp
		add    %ebx,%ebp
		xor    %ebx,%ebx
		mov    0x00006f(%eax),%bl
		shl    $0x000002,%ebx
		mov    %ebx,0x000004(%esp)
		mov    0x000004(%esp),%esi
		mov    0x000004(%ebp),%ebx
		add    %esi,%ebx
		movzbw 0x000003(%ebx),%si
		add    $0x000078,%esi
		sub    %esi,%edi
		movzbw (%ebx),%si
		mov    %esi,0x000014(%esp)
		mov    _0d553a_data,%si
		mov    %esi,0x000018(%esp)
		mov    0x000014(%esp),%esi
		sub    %esi,0x000018(%esp)
		mov    0x000018(%esp),%esi
		mov    %si,0x000036(%eax)
		mov    0x000001(%ebx),%bl
		mov    %edi,%esi
		xor    %bh,%bh
		sub    %ebx,%esi
		mov    %si,0x000038(%eax)
		call   _019070_func
		jmp    _032c8d_jump

	_032d28_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_032d34_switch:
		.long   _032e5e_case
		.long   _032f09_case
		.long   _032f60_case
		.long   _032e94_case
		.long   _032e0a_case




_032d48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		cmpw   $0x000000,_0d5536_data
		je     _0330fa_jump
		mov    _0d54f4_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000004,%ebx
		add    %eax,%ebx
		mov    _0d54ec_data,%edx
		shl    $0x000003,%ebx
		add    %ebx,%edx
		xor    %eax,%eax
		mov    0x00006e(%edx),%al
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		shl    $0x000002,%ebx
		mov    0x000004(%edx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006f(%edx),%al
		mov    0x000004(%ebx),%esi
		shl    $0x000002,%eax
		mov    _0aa0aa_data,%edx
		add    %eax,%esi
		mov    _0aa0ac_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		jne    _03303c_jump
		mov    _0d552a_data,%ax
		mov    %ax,_0d553a_data
		mov    _0d552c_data,%ax
		mov    %ax,_0d553e_data
		mov    _0d51ce_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    _0d51d4_data,%ecx
		sub    %eax,%ebx
		mov    _0d5536_data,%ax
		shl    $0x000002,%ebx
		add    $0x000002,%eax
		add    %ecx,%ebx
		cmp    $0x000004,%ax
		ja     _032f60_case
		and    $0x00ffff,%eax
		jmp    *%cs:_032d34_switch(,%eax,4)

	_032e0a_case:
		incw   (%ebx)
		mov    (%ebx),%ax
		mov    0x000004(%ebx),%cx
		cwtd   
		idiv   %cx
		mov    %dx,(%ebx)
		xor    %edx,%edx
		mov    0x000003(%esi),%dl
		add    $0x000078,%edx
		mov    $0x00001e,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,_0aa0ae_data
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		mov    _0d553e_data,%dx
		add    $0x000078,%eax
		xor    %edi,%edi
		add    %eax,%edx
		mov    %di,_0aa0ac_data
		mov    %dx,_0d553e_data
		jmp    _032f60_case

	_032e5e_case:
		mov    0x000004(%ebx),%ax
		mov    (%ebx),%cx
		dec    %eax
		add    %eax,%ecx
		mov    %cx,(%ebx)
		mov    (%ebx),%ax
		mov    0x000004(%ebx),%cx
		cwtd   
		idiv   %cx
		xor    %esi,%esi
		mov    $0xffffffff,%edi
		mov    %si,_0aa0ac_data
		mov    %di,_0aa0ae_data
		mov    %dx,(%ebx)
		jmp    _032f60_case

	_032e94_case:
		incw   _0d51d0_data
		mov    _0d51d0_data,%ax
		mov    _0d51d2_data,%bx
		cwtd   
		idiv   %bx
		mov    %dx,_0d51d0_data
		mov    _0d51ce_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		lea    0x000000(,%eax,4),%ebx
		mov    0x000002(%esi),%dl
		sub    %eax,%ebx
		add    $0x000078,%edx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		add    %ecx,%ebx
		mov    $0x00001e,%ecx
		idiv   %ecx
		mov    %ax,_0aa0ac_data
		xor    %eax,%eax
		mov    0x000002(%esi),%al
		mov    _0d553a_data,%si
		add    $0x000078,%eax
		xor    %ecx,%ecx
		add    %eax,%esi
		mov    %cx,_0aa0ae_data
		mov    %si,_0d553a_data
		jmp    _032f60_case

	_032f09_case:
		mov    _0d51d2_data,%ax
		mov    _0d51d0_data,%di
		dec    %eax
		add    %eax,%edi
		mov    %edi,%eax
		mov    _0d51d2_data,%bx
		cwtd   
		idiv   %bx
		mov    %di,_0d51d0_data
		mov    %dx,_0d51d0_data
		mov    _0d51ce_data,%edx
		sar    $0x000010,%edx
		xor    %eax,%eax
		lea    0x000000(,%edx,4),%ebx
		mov    %ax,_0aa0ae_data
		sub    %edx,%ebx
		mov    $0xffffffff,%edx
		shl    $0x000002,%ebx
		mov    %dx,_0aa0ac_data
		add    %ecx,%ebx

	_032f60_case:
		movswl (%ebx),%edx
		mov    0x000008(%ebx),%eax
		mov    (%eax,%edx,2),%ax
		mov    %ax,_0d54f6_data
		mov    _0d54f4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%ebx
		shl    $0x000004,%ebx
		add    %edx,%ebx
		mov    _0d54ec_data,%edx
		shl    $0x000003,%ebx
		add    %ebx,%edx
		xor    %eax,%eax
		mov    0x00006e(%edx),%al
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		shl    $0x000002,%ebx
		mov    0x000004(%edx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006f(%edx),%al
		mov    0x000004(%ebx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		cmpw   $0x000000,_0aa0ae_data
		jge    _032ff3_jump
		xor    %edx,%edx
		mov    0x000003(%ebx),%dl
		add    $0x000078,%edx
		mov    $0x00001e,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		neg    %eax
		mov    %ax,_0aa0ae_data
		xor    %eax,%eax
		mov    0x000003(%ebx),%al
		mov    _0d553e_data,%cx
		add    $0x000078,%eax
		sub    %eax,%ecx
		mov    %cx,_0d553e_data
		jmp    _0330fa_jump

	_032ff3_jump:
		cmpw   $0x000000,_0aa0ac_data
		jge    _0330fa_jump
		xor    %edx,%edx
		mov    0x000002(%ebx),%dl
		add    $0x000078,%edx
		mov    $0x00001e,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		neg    %eax
		mov    %ax,_0aa0ac_data
		xor    %eax,%eax
		mov    0x000002(%ebx),%al
		mov    _0d553a_data,%bx
		add    $0x000078,%eax
		sub    %eax,%ebx
		mov    %bx,_0d553a_data
		jmp    _0330fa_jump

	_03303c_jump:
		mov    _0aa0ac_data,%bx
		test   %bx,%bx
		jle    _033063_jump
		mov    _0d553a_data,%ax
		mov    %ebx,%edx
		sub    $0x00001e,%eax
		dec    %edx
		mov    %ax,_0d553a_data
		mov    %dx,_0aa0ac_data
		jmp    _033080_jump

	_033063_jump:
		jge    _033080_jump
		mov    _0d553a_data,%si
		mov    %ebx,%edi
		add    $0x00001e,%esi
		inc    %edi
		mov    %si,_0d553a_data
		mov    %di,_0aa0ac_data

	_033080_jump:
		mov    _0aa0ae_data,%bx
		test   %bx,%bx
		jle    _0330a7_jump
		mov    _0d553e_data,%ax
		mov    %ebx,%edx
		sub    $0x00001e,%eax
		dec    %edx
		mov    %ax,_0d553e_data
		mov    %dx,_0aa0ae_data
		jmp    _0330c4_jump

	_0330a7_jump:
		jge    _0330c4_jump
		mov    _0d553e_data,%si
		mov    %ebx,%edi
		add    $0x00001e,%esi
		inc    %edi
		mov    %si,_0d553e_data
		mov    %di,_0aa0ae_data

	_0330c4_jump:
		mov    _0aa0aa_data,%eax
		mov    _0aa0ac_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		jne    _0330fa_jump
		mov    _0d552a_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0d553a_data
		mov    _0d552c_data,%ax
		mov    %bx,_0d5536_data
		mov    %ax,_0d553e_data

	_0330fa_jump:
		call   _032994_func
		mov    _0d54f4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0d54ec_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		xor    %ebx,%ebx
		mov    0x00006e(%edx),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x00006f(%edx),%al
		mov    0x000004(%esi),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %ecx,%ecx
		mov    _0d552a_data,%ax
		mov    (%esi),%cl
		sub    %ecx,%eax
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    _0d552c_data,%di
		mov    0x000001(%esi),%al
		sub    %eax,%edi
		add    %edi,%eax
		xor    %ebx,%ebx
		movswl %ax,%edx
		mov    (%esp),%eax
		mov    0x000002(%esi),%bl
		add    %ecx,%eax
		mov    $0x000014,%ecx
		cwtl   
		call   _03e20c_func
		xor    %eax,%eax
		mov    %edi,%edx
		mov    0x000001(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		add    %edx,%eax
		mov    (%esp),%ecx
		movswl %ax,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    (%esi),%al
		mov    0x000002(%esi),%bl
		add    %ecx,%eax
		mov    $0x000014,%ecx
		cwtl   
		call   _03e20c_func
		xor    %eax,%eax
		mov    0x000001(%esi),%al
		add    %edi,%eax
		mov    (%esp),%ecx
		movswl %ax,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    (%esi),%al
		mov    0x000003(%esi),%bl
		add    %ecx,%eax
		mov    $0x000014,%ecx
		cwtl   
		call   _03e270_func
		xor    %eax,%eax
		mov    0x000001(%esi),%al
		xor    %ebx,%ebx
		add    %edi,%eax
		xor    %ecx,%ecx
		movswl %ax,%edx
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    (%esi),%al
		mov    0x000002(%esi),%cl
		add    %edi,%eax
		mov    0x000003(%esi),%bl
		add    %ecx,%eax
		mov    $0x000014,%ecx
		cwtl   
		call   _03e270_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0331f8_func:
		push   %edx
		mov    _0d554d_data,%dl
		inc    %dl
		cmp    $0x00000a,%dl
		jne    _033208_jump
		xor    %dl,%dl

	_033208_jump:
		mov    %dl,_0d554d_data
		pop    %edx
		ret    



_033210_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    %edx,%edi
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _03325f_jump

	_033226_jump:
		movswl %ax,%ecx
		mov    _0c1d74_data,%edx
		add    %ecx,%ecx
		add    %edx,%ecx
		cmp    (%ecx),%di
		jne    _033252_jump
		movswl %bx,%esi
		add    %esi,%esi
		add    %esi,%edx
		mov    (%edx),%si
		cmp    %si,%bx
		jne    _033252_jump
		mov    %di,(%edx)
		mov    %si,(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_033252_jump:
		mov    _0b9414_data,%cx
		inc    %eax
		cmp    %cx,%ax
		jl     _033226_jump

	_03325f_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_033264_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1d74_data,%esi
		mov    %eax,%edx
		mov    _0b9414_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _0332b5_jump

	_03327f_jump:
		cmp    %dx,%ax
		je     _0332a8_jump
		movswl %ax,%ebx
		add    %ebx,%ebx
		add    %esi,%ebx
		mov    (%ebx),%di
		mov    %esi,%ecx
		cmp    %di,%dx
		jne    _0332a8_jump
		movswl %di,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%ecx
		mov    (%ecx),%ax
		mov    %ax,(%ebx)
		mov    %di,(%ecx)
		jmp    _0332b5_jump

	_0332a8_jump:
		mov    _0b9414_data,%cx
		inc    %eax
		cmp    %cx,%ax
		jl     _03327f_jump

	_0332b5_jump:
		mov    %esi,_0c1d74_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0332c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %ax,(%esp)
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0c1050_data,%eax
		add    %edx,%edx
		add    %edx,%eax
		mov    $_0a0848_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		je     _033377_jump
		mov    _0b9414_data,%dx
		xor    %esi,%esi
		test   %dx,%dx
		jle    _033377_jump

	_03330e_jump:
		cmp    (%esp),%si
		je     _03336a_jump
		movswl %si,%ecx
		imul   $0x00002a,%ecx,%ebx
		mov    _0c1050_data,%eax
		mov    $_0a0848_data,%edx
		add    %ebx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _03336a_jump
		mov    _0c1050_data,%edx
		lea    (%edx,%ebx,1),%eax
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		imul   $0x00002a,%ebx,%edi
		add    %edi,%edx
		mov    0x000020(%eax),%di
		cmp    0x000020(%edx),%di
		jne    _03336a_jump
		mov    0x000022(%eax),%ax
		cmp    0x000022(%edx),%ax
		jne    _03336a_jump
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   _033210_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _033210_func

	_03336a_jump:
		mov    _0b9414_data,%bx
		inc    %esi
		cmp    %bx,%si
		jl     _03330e_jump

	_033377_jump:
		call   _05e154_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033388_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ax,(%esp)
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%ebx
		add    %edx,%ebx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0c1050_data,%eax
		add    %ebx,%ebx
		mov    $_0a0848_data,%edx
		add    %ebx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _03346e_jump
		mov    _0c1050_data,%eax
		mov    $_0a0934_data,%edx
		add    %ebx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _03346e_jump
		mov    _0b9414_data,%dx
		xor    %esi,%esi
		test   %dx,%dx
		jle    _03346e_jump

	_0333f0_jump:
		cmp    (%esp),%si
		je     _033461_jump
		movswl %si,%ecx
		imul   $0x00002a,%ecx,%ebp
		mov    _0c1050_data,%eax
		mov    $_0a0848_data,%edx
		add    %ebp,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _033461_jump
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		imul   $0x00002a,%ebx,%edi
		mov    _0c1050_data,%eax
		mov    $_0a0934_data,%edx
		add    %edi,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _033461_jump
		mov    _0c1050_data,%edx
		lea    (%edx,%ebp,1),%eax
		add    %edx,%edi
		mov    0x000020(%eax),%dx
		cmp    0x000020(%edi),%dx
		jne    _033461_jump
		mov    0x000022(%eax),%ax
		cmp    0x000022(%edi),%ax
		jne    _033461_jump
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   _033210_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _033210_func

	_033461_jump:
		mov    _0b9414_data,%bx
		inc    %esi
		cmp    %bx,%si
		jl     _0333f0_jump

	_03346e_jump:
		call   _05e154_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033480_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %ax,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _033264_func
		mov    _0b9414_data,%dx
		dec    %edx
		mov    0x000004(%esp),%ebx
		mov    %dx,_0b9414_data
		cmp    %dx,%bx
		jge    _033542_jump

	_0334b6_jump:
		movswl %bx,%eax
		lea    0x000001(%eax),%ebp
		imul   $0x000088,%ebp,%esi
		imul   $0x000088,%eax,%edx
		imul   $0x00002a,%eax,%eax
		mov    _0b9410_data,%ecx
		add    %ecx,%esi
		add    %edx,%ecx
		mov    %ecx,(%esp)
		mov    $0x000022,%ecx
		mov    (%esp),%edi
		rep movsl %ds:(%esi),%es:(%edi)
		imul   $0x00002a,%ebp,%ecx
		mov    _0c1050_data,%edi
		lea    (%edi,%ecx,1),%esi
		add    %eax,%edi
		mov    %eax,%ebp
		push   %edi

	_0334f3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03350b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0334f3_jump

	_03350b_jump:
		pop    %edi
		mov    _0c1050_data,%eax
		mov    %ebp,%esi
		add    %eax,%ecx
		add    %esi,%eax
		mov    0x000020(%ecx),%si
		mov    %si,0x000020(%eax)
		mov    0x000022(%ecx),%cx
		mov    %cx,0x000022(%eax)
		mov    _0b9410_data,%eax
		mov    _0b9414_data,%si
		mov    %bx,0x000034(%edx,%eax,1)
		inc    %ebx
		cmp    %si,%bx
		jl     _0334b6_jump

	_033542_jump:
		mov    _0b9414_data,%di
		xor    %ebx,%ebx
		test   %di,%di
		jle    _033599_jump
		mov    0x000004(%esp),%esi

	_033554_jump:
		cmp    0x000004(%esp),%bx
		jl     _033573_jump
		movswl %bx,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0c1d74_data,%eax
		add    %edx,%eax
		mov    0x000002(%eax),%dx
		mov    %dx,(%eax)

	_033573_jump:
		movswl %bx,%ecx
		mov    _0c1d74_data,%eax
		add    %ecx,%ecx
		add    %eax,%ecx
		mov    (%ecx),%ax
		cmp    %si,%ax
		jl     _03358d_jump
		mov    %eax,%edi
		dec    %edi
		mov    %di,(%ecx)

	_03358d_jump:
		mov    _0b9414_data,%ax
		inc    %ebx
		cmp    %ax,%bx
		jl     _033554_jump

	_033599_jump:
		mov    _0b9412_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0c1d74_data,%eax
		movw   $0x00ffff,(%edx,%eax,1)
		mov    0x000004(%esp),%edx
		mov    _0c3182_data,%ax
		cmp    %dx,%ax
		jle    _0335cc_jump
		mov    %eax,%ebx
		dec    %ebx
		mov    %bx,_0c3182_data

	_0335cc_jump:
		mov    0x000004(%esp),%ecx
		mov    _0c3150_data,%ax
		cmp    %cx,%ax
		jle    _033606_jump
		mov    %eax,%esi
		dec    %esi
		mov    %si,_0c3150_data
		mov    _0c314e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    %edx,_0c1144_data

	_033606_jump:
		mov    0x000004(%esp),%edi
		mov    _0c3144_data,%ax
		cmp    %di,%ax
		jle    _03361c_jump
		dec    %eax
		mov    %ax,_0c3144_data

	_03361c_jump:
		mov    0x000004(%esp),%edx
		mov    _0c314c_data,%ax
		cmp    %dx,%ax
		jle    _033635_jump
		mov    %eax,%ebx
		dec    %ebx
		mov    %bx,_0c314c_data

	_033635_jump:
		mov    $0xffffffff,%esi
		xor    %ah,%ah
		xor    %ecx,%ecx
		xor    %dh,%dh
		xor    %ebx,%ebx
		mov    %ah,_0c33d2_data
		mov    %ah,_0d5554_data
		mov    %cx,_0c312e_data
		mov    %dh,_0aa0a0_data
		mov    %si,_0c3158_data
		mov    %si,_0c3126_data
		mov    _0b9414_data,%dx
		mov    %si,_0c3154_data
		test   %dx,%dx
		jle    _033890_jump

	_033680_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%ecx
		mov    _0c1050_data,%eax
		mov    $_0a09d0_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _033704_jump
		mov    _0c1050_data,%eax
		mov    $_0a09e0_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _033704_jump
		mov    _0c1050_data,%eax
		mov    $_0a09f0_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _033704_jump
		mov    _0c1050_data,%eax
		mov    $_0a09fc_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _033704_jump
		mov    _0c1050_data,%eax
		mov    $_0a0a0c_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _033704_jump
		mov    _0c1050_data,%eax
		mov    $_0a0a1c_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _033736_jump

	_033704_jump:
		movswl %bx,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		add    %eax,%edx
		mov    _0c312c_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%ecx
		mov    0x000034(%edx),%ax
		mov    %ax,_0c10ac_data(%ecx)
		incw   _0c312e_data

	_033736_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%eax
		mov    _0c1050_data,%edx
		add    %edx,%eax
		mov    $_0a0a2c_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033768_jump
		imul   $0x000088,%ecx,%ecx
		mov    _0b9410_data,%eax
		mov    0x000034(%ecx,%eax,1),%ax
		mov    %ax,_0c3154_data

	_033768_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%edx
		mov    _0c1050_data,%eax
		add    %edx,%eax
		mov    $_0a0a3c_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033799_jump
		imul   $0x000088,%ecx,%ecx
		mov    _0b9410_data,%eax
		mov    0x000034(%ecx,%eax,1),%ax
		mov    %ax,_0c3126_data

	_033799_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%eax
		mov    _0c1050_data,%edx
		add    %edx,%eax
		mov    $_0a0a50_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _0337cb_jump
		imul   $0x000088,%ecx,%ecx
		mov    _0b9410_data,%eax
		mov    0x000034(%ecx,%eax,1),%ax
		mov    %ax,_0c3158_data

	_0337cb_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%eax
		mov    _0c1050_data,%edx
		add    %edx,%eax
		mov    $_0a0a60_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033813_jump
		imul   $0x000088,%ecx,%edx
		mov    _0b9410_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c33d2_data,%al
		lea    0x000000(,%eax,2),%ecx
		mov    0x000034(%edx),%ax
		mov    %ax,_0c1110_data(%ecx)
		incb   _0c33d2_data

	_033813_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%ecx
		mov    _0c1050_data,%eax
		mov    $_0a0a68_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _033843_jump
		mov    _0c1050_data,%eax
		mov    $_0a0a78_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _033849_jump

	_033843_jump:
		incb   _0d5554_data

	_033849_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%ecx
		mov    _0c1050_data,%eax
		mov    $_0a0a88_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _033879_jump
		mov    _0c1050_data,%eax
		mov    $_0a0a94_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _033880_jump

	_033879_jump:
		movb   $0x000001,_0aa0a0_data

	_033880_jump:
		mov    _0b9414_data,%ax
		inc    %ebx
		cmp    %ax,%bx
		jl     _033680_jump

	_033890_jump:
		mov    _0c2f48_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		shl    $0x000004,%edx
		mov    _0c3012_data,%bx
		add    %ecx,%edx
		mov    _0b9410_data,%ecx
		shl    $0x000003,%edx
		xor    %eax,%eax
		add    %ecx,%edx
		test   %bx,%bx
		jle    _0338eb_jump
		mov    0x000004(%esp),%edi
		mov    _0b9410_data,%ecx
		mov    _0c3012_data,%si

	_0338ca_jump:
		cmp    0x000034(%edx),%di
		je     _0338eb_jump
		inc    %eax
		movswl %ax,%edx
		mov    _0c2f48_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000088,%edx,%edx
		add    %ecx,%edx
		cmp    %si,%ax
		jl     _0338ca_jump

	_0338eb_jump:
		mov    _0c3012_data,%dx
		cmp    %dx,%ax
		jge    _03392d_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,_0c3012_data
		mov    _0c3010_data,%edx
		sar    $0x000010,%edx
		cwtl   
		mov    _0c2f4a_data(,%edx,2),%dx
		mov    %dx,_0c2f4a_data(,%eax,2)
		mov    _0c3010_data,%eax
		sar    $0x000010,%eax
		movw   $0x00ffff,_0c2f4a_data(,%eax,2)

	_03392d_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033938_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0c1050_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    $_0a0934_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _0339cb_jump
		mov    _0b9414_data,%bx
		dec    %ebx
		test   %bx,%bx
		jl     _0339cb_jump

	_033975_jump:
		movswl %bx,%esi
		imul   $0x00002a,%esi,%eax
		mov    _0c1050_data,%edx
		add    %edx,%eax
		mov    $_0a0934_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _0339c5_jump
		imul   $0x000088,%esi,%edx
		movswl %cx,%edi
		imul   $0x000088,%edi,%edi
		mov    _0b9410_data,%eax
		mov    0x00003c(%edx,%eax,1),%dx
		cmp    0x00003c(%edi,%eax,1),%dx
		jne    _0339c5_jump
		cmp    %cx,%bx
		je     _0339c5_jump
		mov    %esi,%eax
		call   _033480_func
		cmp    %bx,%cx
		jle    _0339c3_jump
		dec    %ecx

	_0339c3_jump:
		xor    %ebx,%ebx

	_0339c5_jump:
		dec    %ebx
		test   %bx,%bx
		jge    _033975_jump

	_0339cb_jump:
		movswl %cx,%eax
		call   _033480_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0339dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000104,%esp
		mov    _0bf2f4_data,%eax
		mov    0x0002d8(%eax),%eax
		call   _040b7c_func
		call   _040d70_func
		test   %al,%al
		je     _033a8f_jump
		mov    $_0a0848_data,%ebp
		mov    $_0a0a50_data,%edi

	_033a0f_jump:
		mov    _0b9414_data,%bx
		xor    %ah,%ah
		dec    %ebx
		mov    %ah,0x000100(%esp)
		test   %bx,%bx
		jl     _033a85_jump

	_033a25_jump:
		movswl %bx,%eax
		imul   $0x00002a,%eax,%eax
		mov    _0c1050_data,%ecx
		mov    %edi,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _033a47_jump
		movw   $0x00ffff,_0c3158_data

	_033a47_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%esi
		mov    _0c1050_data,%eax
		mov    %ebp,%edx
		add    %esi,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _033a7f_jump
		mov    _0c1050_data,%eax
		mov    %esp,%edx
		add    %esi,%eax
		call   _0305b4_func
		mov    %ecx,%eax
		mov    $0x000001,%dl
		call   _033938_func
		mov    %dl,0x000100(%esp)
		jmp    _033a85_jump

	_033a7f_jump:
		dec    %ebx
		test   %bx,%bx
		jge    _033a25_jump

	_033a85_jump:
		cmpb   $0x000000,0x000100(%esp)
		jne    _033a0f_jump

	_033a8f_jump:
		xor    %bl,%bl
		mov    %bl,_0d5552_data
		movb   $0x000003,_0d554e_data
		add    $0x000104,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033aac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0b9414_data,%dx
		inc    %edx
		mov    %dx,_0b9414_data
		cmp    $0x0002bc,%dx
		jge    _033d06_jump
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    $_0a0a60_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033afa_jump
		cmpb   $0x000002,_0c33d2_data
		je     _033d06_jump

	_033afa_jump:
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    $_0a0934_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033b28_jump
		cmpw   $0x0002b9,_0b9414_data
		jge    _033d06_jump

	_033b28_jump:
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    $_0a0a68_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		je     _033b66_jump
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    $_0a0a78_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033b73_jump

	_033b66_jump:
		cmpb   $0x000001,_0d5554_data
		je     _033d06_jump

	_033b73_jump:
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    $_0a09e0_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033ba0_jump
		cmpw   $0x000032,_0c312e_data
		je     _033d06_jump

	_033ba0_jump:
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    $_0a09d0_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033bcd_jump
		cmpw   $0x000032,_0c312e_data
		je     _033d06_jump

	_033bcd_jump:
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    $_0a0a0c_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033bfa_jump
		cmpw   $0x000032,_0c312e_data
		je     _033d06_jump

	_033bfa_jump:
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    $_0a0a1c_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033c27_jump
		cmpw   $0x000032,_0c312e_data
		je     _033d06_jump

	_033c27_jump:
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    $_0a09f0_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033c54_jump
		cmpw   $0x000032,_0c312e_data
		je     _033d06_jump

	_033c54_jump:
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    $_0a09fc_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033c81_jump
		cmpw   $0x000032,_0c312e_data
		je     _033d06_jump

	_033c81_jump:
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    $_0a0a50_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033cad_jump
		mov    _0c3156_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _033d06_jump

	_033cad_jump:
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    $_0a0a3c_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _033cd9_jump
		mov    _0c3124_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _033d06_jump

	_033cd9_jump:
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    $0x000006,%ebx
		mov    (%edx,%eax,4),%eax
		mov    $_0a0aa8_data,%edx
		call   _08532e_func
		test   %eax,%eax
		jne    _033d29_jump
		cmpb   $0x000064,_0c33ad_data
		jb     _033d29_jump

	_033d06_jump:
		mov    $0x000010,%al
		mov    _0b9414_data,%dx
		mov    %al,_0d5547_data
		dec    %edx
		mov    $0x000016,%ah
		mov    %dx,_0b9414_data
		mov    %ah,_0d5557_data
		jmp    _034116_jump

	_033d29_jump:
		mov    _0d54f4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0d54ec_data,%esi
		shl    $0x000003,%eax
		add    %eax,%esi
		xor    %edx,%edx
		mov    0x00006e(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%esi),%eax
		mov    _0d553a_data,%bx
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0c3162_data,%di
		mov    0x00006f(%esi),%dl
		mov    0x000004(%eax),%eax
		shl    $0x000002,%edx
		add    %edi,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    $0x000008,%ebx
		mov    (%eax),%dl
		sub    %edx,%ebx
		mov    _0c3166_data,%dx
		mov    %bx,0x00003c(%esi)
		mov    _0d553e_data,%bx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000001(%eax),%dl
		sub    %edx,%ebx
		mov    _0c3160_data,%edx
		mov    %bx,0x00003e(%esi)
		mov    _0d5538_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		sub    $0x000008,%ebx
		mov    (%eax),%dl
		sub    %edx,%ebx
		mov    _0c3164_data,%edx
		mov    %ebx,0x000028(%esi)
		mov    _0d553c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    0x000001(%eax),%al
		add    %ebx,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    _0b9412_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x00002c(%esi)
		lea    -0x000001(%eax),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    $0x000022,%ecx
		mov    %edx,%edi
		xor    %ebx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    0x00006e(%edx),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    0x000004(%edx),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x00006f(%edx),%bl
		lea    0x000000(,%ebx,4),%ecx
		mov    0x000004(%eax),%ebx
		mov    %edx,%eax
		call   _062e90_func
		mov    _0b9414_data,%ax
		mov    _0d54f4_data,%esi
		dec    %eax
		sar    $0x000010,%esi
		mov    %ax,0x000034(%edx)
		mov    %esi,%eax
		add    %ecx,%ebx
		shl    $0x000004,%eax
		mov    _0d54ec_data,%ecx
		add    %esi,%eax
		movb   $0x000003,0x000082(%edx)
		mov    0x00007c(%ecx,%eax,8),%al
		mov    %al,0x00007c(%edx)
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		mov    _0c1d74_data,%ecx
		add    %eax,%eax
		add    %eax,%ecx
		mov    0x000034(%edx),%ax
		mov    %ax,(%ecx)
		movb   $0x000003,_0d554e_data
		mov    _0b9412_data,%ecx
		lea    0x000000(,%esi,4),%eax
		sar    $0x000010,%ecx
		mov    _0d54f0_data,%esi
		dec    %ecx
		mov    (%esi,%eax,1),%esi
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		shl    $0x000002,%eax
		add    %ecx,%eax
		mov    _0c1050_data,%edi
		add    %eax,%eax
		add    %eax,%edi
		push   %edi

	_033ebc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _033ed4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _033ebc_jump

	_033ed4_jump:
		pop    %edi
		mov    _0b9412_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%ecx
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		shl    $0x000002,%eax
		add    %ecx,%eax
		mov    _0c1050_data,%ecx
		add    %eax,%eax
		add    %ecx,%eax
		movb   $0x000000,0x000028(%eax)
		mov    0x00003a(%edx),%ecx
		movzbl (%ebx),%esi
		sar    $0x000010,%ecx
		add    %esi,%ecx
		movzbl 0x000002(%ebx),%esi
		sar    %esi
		add    %esi,%ecx
		sar    $0x000006,%ecx
		mov    %cx,0x000020(%eax)
		mov    0x00003c(%edx),%ecx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		mov    0x000001(%ebx),%dl
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x000003(%ebx),%dl
		sar    %edx
		add    %ecx,%edx
		sar    $0x000006,%edx
		mov    %dx,0x000022(%eax)
		mov    _0d5532_data,%bx
		cmp    0x000020(%eax),%bx
		jg     _033f47_jump
		mov    %ebx,%edx
		dec    %edx
		mov    %dx,0x000020(%eax)

	_033f47_jump:
		mov    _0b9412_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0c1050_data,%eax
		add    %edx,%edx
		add    %edx,%eax
		mov    _0d5528_data,%cx
		cmp    0x000022(%eax),%cx
		jg     _033f7d_jump
		mov    %ecx,%edx
		dec    %edx
		mov    %dx,0x000022(%eax)

	_033f7d_jump:
		mov    _0b9412_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0c1050_data,%eax
		add    %edx,%edx
		add    %edx,%eax
		cmpw   $0x000000,0x000020(%eax)
		jge    _033fab_jump
		movw   $0x000000,0x000020(%eax)

	_033fab_jump:
		mov    _0b9412_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0c1050_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		cmpw   $0x000000,0x000022(%eax)
		jge    _033fdb_jump
		movw   $0x000000,0x000022(%eax)

	_033fdb_jump:
		mov    _0b9412_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0c1050_data,%eax
		add    %edx,%edx
		xor    %ch,%ch
		add    %edx,%eax
		mov    $_0a0934_data,%edx
		mov    %ch,_0d5552_data
		call   _0853a0_func
		test   %eax,%eax
		jne    _034116_jump
		mov    _0b9414_data,%al
		dec    %al
		mov    %al,0x000004(%esp)
		xor    %eax,%eax
		mov    %eax,(%esp)

	_034027_jump:
		xor    %edx,%edx
		mov    0x000004(%esp),%dl
		imul   $0x000088,%edx,%esi
		incw   _0b9414_data
		mov    _0b9412_data,%ebx
		sar    $0x000010,%ebx
		dec    %ebx
		imul   $0x000088,%ebx,%edi
		imul   $0x00002a,%ebx,%ebx
		mov    _0b9410_data,%eax
		mov    $0x000022,%ecx
		add    %eax,%esi
		add    %eax,%edi
		mov    _0d54f4_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ecx
		mov    _0d54f0_data,%eax
		mov    _0c1050_data,%edi
		mov    (%ecx,%eax,1),%esi
		add    %ebx,%edi
		push   %edi

	_03407d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034095_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03407d_jump

	_034095_jump:
		pop    %edi
		mov    _0b9412_data,%eax
		sar    $0x000010,%eax
		dec    %eax
		imul   $0x000088,%eax,%ebx
		imul   $0x00002a,%eax,%eax
		mov    _0b9410_data,%ecx
		add    %ebx,%ecx
		imul   $0x00002a,%edx,%ebx
		mov    _0c1050_data,%esi
		add    %esi,%eax
		add    %ebx,%esi
		movb   $0x000000,0x000028(%eax)
		mov    0x000020(%esi),%bx
		mov    %bx,0x000020(%eax)
		mov    0x000022(%esi),%bx
		mov    %bx,0x000022(%eax)
		mov    _0b9414_data,%ax
		dec    %eax
		mov    %ax,0x000034(%ecx)
		mov    %ecx,%eax
		movb   $0x000004,0x00007c(%ecx)
		call   _062e90_func
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		mov    _0c1d74_data,%ebx
		add    %eax,%eax
		add    %eax,%ebx
		mov    0x000034(%ecx),%ax
		mov    (%esp),%ecx
		inc    %ecx
		mov    %ax,(%ebx)
		mov    %ecx,(%esp)
		cmp    $0x000003,%cx
		jl     _034027_jump
		mov    %edx,%eax
		call   _0332c4_func

	_034116_jump:
		mov    $0xffffffff,%eax
		xor    %dl,%dl
		xor    %bl,%bl
		xor    %edi,%edi
		mov    %dl,_0d5554_data
		mov    %dl,_0c33d2_data
		mov    %dl,_0aa0a0_data
		mov    %di,_0c312e_data
		mov    %ax,_0c3126_data
		mov    _0b9414_data,%dx
		xor    %bh,%bh
		test   %dx,%dx
		jle    _034300_jump

	_034152_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%ecx
		mov    _0c1050_data,%eax
		mov    $_0a09d0_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _0341d6_jump
		mov    _0c1050_data,%eax
		mov    $_0a09e0_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _0341d6_jump
		mov    _0c1050_data,%eax
		mov    $_0a09f0_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _0341d6_jump
		mov    _0c1050_data,%eax
		mov    $_0a09fc_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _0341d6_jump
		mov    _0c1050_data,%eax
		mov    $_0a0a0c_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _0341d6_jump
		mov    _0c1050_data,%eax
		mov    $_0a0a1c_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _03420a_jump

	_0341d6_jump:
		movswl %bx,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		mov    _0c312e_data,%si
		add    %eax,%edx
		inc    %esi
		mov    _0c312c_data,%eax
		mov    0x000034(%edx),%dx
		sar    $0x000010,%eax
		mov    %si,_0c312e_data
		mov    %dx,_0c10ac_data(,%eax,2)

	_03420a_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%eax
		mov    _0c1050_data,%edx
		add    %edx,%eax
		mov    $_0a0ab0_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _03423c_jump
		imul   $0x000088,%ecx,%ecx
		mov    _0b9410_data,%eax
		mov    0x000034(%ecx,%eax,1),%ax
		mov    %ax,_0c3126_data

	_03423c_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%eax
		mov    _0c1050_data,%edx
		add    %edx,%eax
		mov    $_0a0a60_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _034282_jump
		imul   $0x000088,%ecx,%edx
		mov    _0b9410_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c33d2_data,%al
		mov    %al,%cl
		mov    0x000034(%edx),%dx
		inc    %cl
		mov    %dx,_0c1110_data(,%eax,2)
		mov    %cl,_0c33d2_data

	_034282_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%ecx
		mov    _0c1050_data,%eax
		mov    $_0a0a68_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _0342b2_jump
		mov    _0c1050_data,%eax
		mov    $_0a0a78_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _0342b8_jump

	_0342b2_jump:
		incb   _0d5554_data

	_0342b8_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%ecx
		mov    _0c1050_data,%eax
		mov    $_0a0a88_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _0342e8_jump
		mov    _0c1050_data,%eax
		mov    $_0a0a94_data,%edx
		add    %ecx,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _0342ef_jump

	_0342e8_jump:
		movb   $0x000001,_0aa0a0_data

	_0342ef_jump:
		mov    _0b9414_data,%cx
		inc    %ebx
		cmp    %cx,%bx
		jl     _034152_jump

	_034300_jump:
		xor    %eax,%eax
		call   _063620_func
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034310_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0d5544_data,%ax
		mov    _0d5540_data,%dx
		mov    _0d5542_data,%bx
		add    %eax,%edx
		add    _0d5530_data,%bx
		mov    %dx,_0d5540_data
		mov    %bx,_0d5542_data
		cmp    $0x000130,%dx
		jl     _034370_jump
		mov    $0x000130,%esi
		mov    $0x000008,%edi
		mov    _0c3162_data,%ax
		mov    %si,_0d5540_data
		add    %edi,%eax
		mov    %di,_0d5544_data
		mov    %ax,_0c3162_data

	_034370_jump:
		cmpw   $0x0000c0,_0d5542_data
		jl     _0343a3_jump
		mov    $0x0000c0,%ebx
		mov    $0x000004,%ecx
		mov    _0c3166_data,%si
		mov    %bx,_0d5542_data
		add    %ecx,%esi
		mov    %cx,_0d5530_data
		mov    %si,_0c3166_data

	_0343a3_jump:
		cmpw   $0x000000,_0d5540_data
		jg     _0343d2_jump
		mov    $0xfffffff8,%edx
		xor    %eax,%eax
		mov    _0c3162_data,%bx
		mov    %ax,_0d5540_data
		sub    $0x000008,%ebx
		mov    %dx,_0d5544_data
		mov    %bx,_0c3162_data

	_0343d2_jump:
		cmpw   $0x000000,_0d5542_data
		jg     _034400_jump
		mov    $0xfffffffc,%edi
		xor    %esi,%esi
		mov    _0c3166_data,%ax
		mov    %si,_0d5542_data
		sub    $0x000004,%eax
		mov    %di,_0d5530_data
		mov    %ax,_0c3166_data

	_034400_jump:
		cmpw   $0x000000,_0c3162_data
		jge    _03441a_jump
		xor    %ebx,%ebx
		mov    %bx,_0c3162_data
		mov    %bx,_0d5544_data

	_03441a_jump:
		cmpw   $0x000000,_0c3166_data
		jge    _034434_jump
		xor    %edi,%edi
		mov    %di,_0c3166_data
		mov    %di,_0d5530_data

	_034434_jump:
		mov    _0c3162_data,%ax
		mov    _0c313c_data,%dx
		cmp    %dx,%ax
		jle    _034456_jump
		xor    %ebx,%ebx
		mov    %dx,_0c3162_data
		mov    %bx,_0d5544_data

	_034456_jump:
		mov    _0c3166_data,%ax
		mov    _0c314a_data,%cx
		cmp    %cx,%ax
		jle    _034478_jump
		xor    %esi,%esi
		mov    %cx,_0c3166_data
		mov    %si,_0d5530_data

	_034478_jump:
		mov    _0c30a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _034499_jump
		mov    _0c30a2_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _034499_jump
		push   $0x000001
		jmp    _034561_jump

	_034499_jump:
		mov    _0c30a2_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _03455f_jump
		mov    _0d5540_data,%si
		mov    _0c3162_data,%di
		add    %edi,%esi
		and    $0x00fff0,%esi
		mov    _0c3166_data,%bx
		mov    %esi,%eax
		mov    _0d5542_data,%si
		add    %ebx,%esi
		mov    $0x000014,%ecx
		and    $0x00fff0,%esi
		sub    %edi,%eax
		sub    %ebx,%esi
		add    $0x000007,%eax
		dec    %esi
		mov    %ax,0x000004(%esp)
		mov    %si,(%esp)
		mov    $0x000010,%ebx
		mov    -0x000002(%esp),%edi
		mov    0x000002(%esp),%esi
		sar    $0x000010,%edi
		sar    $0x000010,%esi
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03e20c_func
		mov    (%esp),%eax
		mov    $0x000014,%ecx
		add    $0x000010,%eax
		mov    $0x000010,%ebx
		movswl %ax,%edx
		mov    %esi,%eax
		call   _03e20c_func
		mov    $0x000014,%ecx
		mov    $0x000010,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03e270_func
		mov    0x000004(%esp),%eax
		mov    $0x000014,%ecx
		mov    $0x000010,%ebx
		add    $0x000010,%eax
		mov    %edi,%edx
		cwtl   
		call   _03e270_func
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03455f_jump:
		push   $0x000000

	_034561_jump:
		mov    $_0b92f8_data,%eax
		mov    _0d5540_data,%ecx
		xor    %edx,%edx
		mov    _0d553e_data,%ebx
		mov    _0d5557_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		call   _019d20_func
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034590_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		movswl %ax,%ebp
		mov    %ebp,%eax
		shl    $0x000004,%eax
		lea    (%eax,%ebp,1),%esi
		mov    _0b9410_data,%eax
		shl    $0x000003,%esi
		add    %esi,%eax
		movzbl 0x00006e(%eax),%esi
		mov    %esi,0x000004(%esp)
		mov    0x000004(%esp),%edi
		shl    $0x000002,%esi
		sub    %edi,%esi
		shl    $0x000002,%esi
		mov    0x000004(%eax),%edi
		add    %esi,%edi
		movzbl 0x00006f(%eax),%esi
		shl    $0x000002,%esi
		mov    %esi,(%esp)
		mov    0x000004(%edi),%esi
		add    (%esp),%esi
		mov    _0c3160_data,%edi
		sar    $0x000010,%edi
		mov    %edi,(%esp)
		mov    0x000028(%eax),%edi
		sub    (%esp),%edi
		mov    %edi,0x000004(%esp)
		movzbl (%esi),%edi
		mov    %edi,(%esp)
		mov    0x000004(%esp),%edi
		add    $0x000008,%edi
		add    (%esp),%edi
		mov    %edi,(%esp)
		movzbl 0x000002(%esi),%edi
		sar    %edi
		mov    %edi,0x000004(%esp)
		mov    (%esp),%edi
		add    0x000004(%esp),%edi
		mov    %edi,0x000004(%esp)
		mov    0x000004(%esp),%edi
		mov    %di,(%edx)
		mov    _0c3164_data,%edi
		mov    0x00002c(%eax),%eax
		sar    $0x000010,%edi
		sub    %edi,%eax
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x000001(%esi),%al
		movzbl 0x000003(%esi),%esi
		add    %edi,%eax
		sar    %esi
		add    %esi,%eax
		mov    %ax,(%ebx)
		lea    0x000000(,%ebp,4),%eax
		add    %ebp,%eax
		shl    $0x000002,%eax
		add    %ebp,%eax
		mov    _0c1050_data,%esi
		add    %eax,%eax
		add    %esi,%eax
		mov    0x000020(%eax),%si
		shl    $0x000006,%esi
		mov    _0c3162_data,%di
		add    $0x000020,%esi
		sub    %edi,%esi
		add    $0x000008,%esi
		mov    %si,(%ecx)
		mov    _0c3166_data,%si
		mov    0x000022(%eax),%ax
		mov    %esi,0x000008(%esp)
		shl    $0x000006,%eax
		mov    0x000008(%esp),%edi
		add    $0x000020,%eax
		mov    0x00001c(%esp),%esi
		sub    %edi,%eax
		mov    %ax,(%esi)
		mov    (%edx),%si
		xor    %al,%al
		cmp    $0x000194,%si
		jge    _0346be_jump
		mov    (%ebx),%di
		cmp    $0x000124,%di
		jge    _0346be_jump
		movswl %si,%edx
		cmp    $0xffffff9c,%edx
		jle    _0346be_jump
		movswl %di,%edx
		cmp    $0xffffff9c,%edx
		jle    _0346be_jump
		mov    $0x000001,%al

	_0346be_jump:
		cmpw   $0x000194,(%ecx)
		jge    _0346e6_jump
		mov    0x00001c(%esp),%edx
		cmpw   $0x000124,(%edx)
		jge    _0346e6_jump
		movswl (%ecx),%edx
		cmp    $0xffffff9c,%edx
		jle    _0346e6_jump
		mov    0x00001c(%esp),%edx
		movswl (%edx),%edx
		cmp    $0xffffff9c,%edx
		jle    _0346e6_jump
		mov    $0x000001,%al

	_0346e6_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_0346f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _0b9414_data,%dx
		xor    %edi,%edi
		test   %dx,%dx
		jle    _0348ae_jump

	_03470a_jump:
		movswl %di,%esi
		imul   $0x00002a,%esi,%eax
		mov    _0c1050_data,%edx
		add    %edx,%eax
		mov    $_0a0848_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		je     _03489d_jump
		mov    %esp,%eax
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _034590_func
		test   %al,%al
		je     _03489d_jump
		imul   $0x000088,%esi,%esi
		mov    _0b9410_data,%eax
		mov    0x000064(%esi,%eax,1),%ax
		and    $0x00ffff,%eax
		shl    $0x000002,%eax
		mov    _0a52a0_data(%eax),%dl
		test   $0x000040,%dl
		je     _034774_jump
		test   $0x000020,%dl
		je     _03489d_jump

	_034774_jump:
		mov    _0c1d74_data,%edx
		movswl %di,%ebx
		cmp    (%edx,%ebx,2),%di
		jne    _0347ab_jump
		imul   $0x000088,%ebx,%eax
		mov    _0b9410_data,%edx
		mov    0x000064(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		testb  $0x000020,_0a52a0_data(,%eax,4)
		je     _0347a7_jump
		mov    $0x000032,%bl
		jmp    _0347ad_jump

	_0347a7_jump:
		mov    $0x00000a,%bl
		jmp    _0347ad_jump

	_0347ab_jump:
		mov    $0x00001e,%bl

	_0347ad_jump:
		cmpb   $0x000001,_0d5551_data
		jne    _0347da_jump
		cmp    _0d54e8_data,%di
		jne    _0347da_jump
		xor    %edx,%edx
		mov    _0d554d_data,%dl
		mov    $0x000005,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %eax,%eax
		jne    _0347da_jump
		add    $0x00000a,%bl

	_0347da_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000002(%esp),%ecx
		mov    0x00000a(%esp),%edx
		movzbl %bl,%esi
		mov    0x000006(%esp),%ebx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		push   %eax
		sar    $0x000010,%ebx
		mov    _0c0f78_data,%eax
		call   _03e0bc_func
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		sub    $0x000004,%ebx
		sub    $0x000004,%eax
		sub    $0x000020,%edx
		sub    $0x000020,%ecx
		mov    %dx,(%esp)
		mov    %cx,0x000004(%esp)
		movswl %ax,%edx
		mov    %esi,%ecx
		movswl %bx,%eax
		mov    $0x000008,%ebx
		call   _03e20c_func
		mov    (%esp),%eax
		add    $0x000024,%eax
		movswl %ax,%edx
		mov    0x000004(%esp),%eax
		mov    $0x000008,%ebx
		add    $0x00001c,%eax
		mov    %esi,%ecx
		cwtl   
		call   _03e20c_func
		mov    (%esp),%eax
		add    $0x00001c,%eax
		movswl %ax,%edx
		mov    0x000004(%esp),%eax
		mov    $0x000008,%ebx
		add    $0x00001c,%eax
		mov    %esi,%ecx
		cwtl   
		call   _03e270_func
		mov    (%esp),%eax
		add    $0x00001c,%eax
		movswl %ax,%edx
		mov    0x000004(%esp),%eax
		mov    $0x000008,%ebx
		add    $0x000024,%eax
		mov    %esi,%ecx
		cwtl   
		call   _03e270_func

	_03489d_jump:
		mov    _0b9414_data,%bx
		inc    %edi
		cmp    %bx,%di
		jl     _03470a_jump

	_0348ae_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035e40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0b9414_data,%dx
		xor    %edi,%edi
		test   %dx,%dx
		jle    _035ea7_jump

	_035e53_jump:
		movswl %di,%ebx
		imul   $0x00002a,%ebx,%eax
		mov    _0c1050_data,%edx
		add    %edx,%eax
		mov    $_0a0cd0_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _035e9a_jump
		imul   $0x000088,%ebx,%ebx
		mov    _0b9410_data,%edx
		add    %ebx,%edx
		mov    0x000085(%edx),%bl
		and    $0x0000fb,%bl
		mov    %edx,%eax
		mov    %bl,0x000085(%edx)
		call   _01e53c_func
		mov    %edx,%eax
		call   _019070_func

	_035e9a_jump:
		mov    _0b9414_data,%bx
		inc    %edi
		cmp    %bx,%di
		jl     _035e53_jump

	_035ea7_jump:
		cmpb   $0x000000,_0d554e_data
		je     _035f76_jump
		mov    _0b9414_data,%cx
		xor    %edi,%edi
		test   %cx,%cx
		jle    _035f51_jump

	_035ec6_jump:
		movswl %di,%ecx
		imul   $0x00002a,%ecx,%ebx
		mov    _0c1050_data,%eax
		mov    $_0a0848_data,%edx
		add    %ebx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _035f40_jump
		mov    _0c1050_data,%eax
		mov    $_0a0cd0_data,%edx
		add    %ebx,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _035f40_jump
		imul   $0x000088,%ecx,%edx
		mov    _0b9410_data,%eax
		add    %eax,%edx
		cmpb   $0x000003,_0d554e_data
		jne    _035f2b_jump
		movl   $0x000001,0x000024(%edx)
		mov    0x000085(%edx),%bl
		movl   $0x000001,0x000030(%edx)
		or     $0x000004,%bl
		mov    %bl,0x000085(%edx)
		jmp    _035f32_jump

	_035f2b_jump:
		andb   $0x0000fb,0x000085(%edx)

	_035f32_jump:
		mov    %edx,%eax
		call   _01e53c_func
		mov    %edx,%eax
		call   _019070_func

	_035f40_jump:
		mov    _0b9414_data,%si
		inc    %edi
		cmp    %si,%di
		jl     _035ec6_jump

	_035f51_jump:
		cmpb   $0x000003,_0d554e_data
		jne    _035f62_jump
		xor    %cl,%cl
		mov    %cl,_0d554e_data

	_035f62_jump:
		cmpb   $0x000001,_0a7c9c_data
		jne    _035f76_jump
		mov    _0c0f78_data,%edi
		call   _0161e0_func

	_035f76_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035f7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000100,%esp
		xor    %ah,%ah
		mov    _0d5552_data,%dh
		mov    %ah,_0aa0b0_data
		mov    %ah,_0aa114_data
		test   %dh,%dh
		je     _036076_jump
		mov    _0d5502_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		mov    _0b9410_data,%ebx
		add    %edx,%eax
		mov    _0d51ce_data,%edx
		shl    $0x000003,%eax
		sar    $0x000010,%edx
		add    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0d51d4_data,%edx
		mov    0x000002(%edx,%eax,4),%ax
		cwtl   
		lea    0x000000(,%eax,4),%edx
		mov    _0bf2f4_data,%eax
		mov    0x000228(%edx,%eax,1),%ecx
		push   %ecx
		push   $_0a0cd8_data
		push   $_0aa114_data
		call   _0852d9_func
		mov    _0d5502_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0c1050_data,%edx
		add    %eax,%eax
		add    $0x00000c,%esp
		add    %edx,%eax
		mov    %esp,%edx
		call   _0305b4_func
		mov    0x000064(%ebx),%dx
		cmp    $0x000110,%dx
		je     _036042_jump
		cmp    $0x00010b,%dx
		je     _036042_jump
		cmp    $0x00010a,%dx
		jne    _036061_jump

	_036042_jump:
		xor    %eax,%eax
		mov    0x00007b(%ebx),%al
		push   %eax
		lea    0x000004(%esp),%eax
		push   %eax
		push   $_0a0ce0_data
		push   $_0aa0b0_data
		call   _0852d9_func
		add    $0x000010,%esp
		jmp    _036076_jump

	_036061_jump:
		mov    %esp,%eax
		push   %eax
		push   $_0a0cec_data
		push   $_0aa0b0_data
		call   _0852d9_func
		add    $0x00000c,%esp

	_036076_jump:
		cmpb   $0x000000,_0d554f_data
		je     _0360f6_jump
		mov    _0d54f4_data,%eax
		mov    _0d54f0_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%eax
		mov    %esp,%edx
		call   _0305b4_func
		mov    %esp,%eax
		push   %eax
		push   $_0a0cec_data
		push   $_0aa0b0_data
		call   _0852d9_func
		mov    _0d51ce_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0d51d4_data,%eax
		mov    0x000002(%edx,%eax,1),%ax
		cwtl   
		lea    0x000000(,%eax,4),%edx
		mov    _0bf2f4_data,%eax
		add    $0x00000c,%esp
		mov    0x000228(%edx,%eax,1),%esi
		push   %esi
		push   $_0a0cd8_data
		push   $_0aa114_data
		call   _0852d9_func
		add    $0x00000c,%esp

	_0360f6_jump:
		add    $0x000100,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0361a8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    %ah,(%esp)
		mov    %ah,_0aa0b0_data
		mov    %ah,_0aa114_data
		call   _030408_func
		call   _030394_func
		cmpb   $0x000000,_0d5555_data
		je     _0361dc_jump
		movb   $0x000011,_0d5557_data
		jmp    _0361e3_jump

	_0361dc_jump:
		movb   $0x00003a,_0d5557_data

	_0361e3_jump:
		call   _034310_func
		mov    _0d5551_data,%ch
		test   %ch,%ch
		jne    _036326_jump
		mov    $_0d54e0_data,%eax
		call   _0307d0_func
		mov    _0d54e8_data,%ax
		cmp    _0b9414_data,%ax
		jge    _03630e_jump
		mov    $0x000014,%edx
		mov    $_0d54e0_data,%eax
		call   _0304b8_func
		mov    _0d54e6_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000004,%eax
		add    %ecx,%eax
		mov    _0b9410_data,%esi
		shl    $0x000003,%eax
		add    %eax,%esi
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		shl    $0x000002,%eax
		lea    (%ecx,%eax,1),%edx
		mov    _0c1050_data,%eax
		add    %edx,%edx
		mov    $0x000001,%bh
		add    %edx,%eax
		mov    $_0a0934_data,%edx
		mov    %bh,(%esp)
		call   _0853a0_func
		test   %eax,%eax
		jne    _0362de_jump
		mov    _0b9414_data,%di
		xor    %ah,%ah
		mov    %bh,_0d5549_data
		mov    %ah,_0d5548_data
		xor    %ebx,%ebx
		test   %di,%di
		jle    _0362ec_jump

	_036288_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%edx
		mov    _0c1050_data,%eax
		add    %edx,%eax
		mov    $_0a0934_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _0362d0_jump
		imul   $0x000088,%ecx,%ecx
		mov    _0b9410_data,%eax
		mov    0x00003c(%esi),%dx
		cmp    0x00003c(%ecx,%eax,1),%dx
		jne    _0362d0_jump
		xor    %eax,%eax
		mov    _0d5548_data,%al
		mov    %al,%dl
		inc    %dl
		mov    %bl,_0d5512_data(%eax)
		mov    %dl,_0d5548_data

	_0362d0_jump:
		mov    _0b9414_data,%ax
		inc    %ebx
		cmp    %ax,%bx
		jge    _0362ec_jump
		jmp    _036288_jump

	_0362de_jump:
		xor    %cl,%cl
		mov    %cl,_0d5549_data
		mov    %cl,_0d5548_data

	_0362ec_jump:
		cmpb   $0x000000,_0d5555_data
		jne    _036302_jump
		cmpb   $0x000000,_0d5556_data
		je     _036446_jump

	_036302_jump:
		movb   $0x000001,_0d5551_data
		jmp    _036446_jump

	_03630e_jump:
		cmpb   $0x000000,_0d5551_data
		je     _036446_jump
		mov    %ch,_0d5551_data
		jmp    _036446_jump

	_036326_jump:
		mov    _0d54e6_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%ecx
		shl    $0x000003,%eax
		add    %eax,%ecx
		mov    _0c3162_data,%bx
		mov    0x000028(%ecx),%ax
		sub    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,_0d54e0_data
		mov    0x00002c(%ecx),%ax
		mov    _0c3166_data,%cx
		sub    %ecx,%eax
		mov    %ax,_0d54e2_data
		mov    _0d5555_data,%al
		test   %al,%al
		je     _03642f_jump
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0c1050_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    $_0a0934_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		je     _036446_jump
		mov    $0x000014,%edx
		mov    $_0d54e0_data,%eax
		call   _0304b8_func
		mov    _0c3160_data,%eax
		mov    _0d553e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    _0d54e6_data,%edx
		sar    $0x000006,%eax
		sar    $0x000010,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0c1050_data,%ecx
		add    %edx,%eax
		mov    _0d5540_data,%edx
		mov    %bx,0x000020(%ecx,%eax,2)
		mov    _0c3164_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    _0d54e6_data,%edx
		sar    $0x000006,%eax
		sar    $0x000010,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    %bx,0x000022(%ecx,%eax,2)
		mov    _0d54e6_data,%eax
		sar    $0x000010,%eax
		call   _033264_func
		jmp    _036446_jump

	_03642f_jump:
		cmpb   $0x000000,_0d5556_data
		je     _036441_jump
		mov    %edx,%eax
		call   _033388_func
		jmp    _036446_jump

	_036441_jump:
		mov    %al,_0d5551_data

	_036446_jump:
		cmpb   $0x000000,(%esp)
		jne    _036455_jump
		cmpb   $0x000000,_0d5551_data
		je     _0364a2_jump

	_036455_jump:
		mov    _0d54e6_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0c1050_data,%ecx
		add    %eax,%eax
		add    %ecx,%eax
		mov    0x000020(%eax),%ecx
		sar    $0x000010,%ecx
		mov    0x00001e(%eax),%eax
		push   %ecx
		sar    $0x000010,%eax
		mov    _0c1d74_data,%ecx
		push   %eax
		movswl (%ecx,%edx,2),%eax
		push   %eax
		push   %edx
		push   $_0a0cf0_data
		push   $_0aa0b0_data
		call   _0852d9_func
		add    $0x000018,%esp

	_0364a2_jump:
		call   _0346f0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0364b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		shl    $0x000002,%eax
		mov    _0ae6d8_data,%ebx
		sub    %edx,%eax
		mov    $_0ae6d8_data,%edi
		mov    (%ebx,%eax,2),%ax
		and    $0x00ffff,%eax
		mov    _0ae6dc_data,%esi
		lea    0x000000(,%edx,4),%ebx
		mov    _0b1e08_data(,%eax,4),%ecx
		mov    _0ae6e4_data,%eax
		add    %esi,%ebx
		add    %ecx,%eax
		mov    _0c0e68_data,%esi
		mov    %eax,(%ebx)
		lea    0x000000(,%esi,8),%eax
		add    %esi,%eax
		shl    $0x000005,%eax
		cmp    %eax,%ecx
		ja     _03650f_jump
		mov    (%ebx),%eax
		mov    0x000100(%eax),%eax
		jmp    _036517_jump

	_03650f_jump:
		mov    (%ebx),%eax
		mov    0x000200(%eax),%eax

	_036517_jump:
		cmp    $0xaaaaaaaa,%eax
		jne    _036522_jump
		mov    $0x000001,%bl
		jmp    _03652f_jump

	_036522_jump:
		cmp    $0x55555555,%eax
		jne    _03652d_jump
		xor    %bl,%bl
		jmp    _03652f_jump

	_03652d_jump:
		mov    $0x000002,%bl

	_03652f_jump:
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%edi),%edx
		mov    %bl,0x000004(%edx,%eax,2)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036544_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    %al,%cl
		call   _030408_func
		call   _030394_func
		call   _034310_func
		mov    _0c3160_data,%edx
		mov    _0d553e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sar    $0x000004,%eax
		mov    _0c3164_data,%edx
		mov    %eax,%esi
		mov    _0d5540_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		sar    $0x000004,%eax
		mov    _0c1124_data,%bx
		movswl %ax,%edx
		imul   %edx,%ebx
		movswl %si,%edi
		add    %edi,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		lea    (%eax,%eax,1),%esi
		mov    _0c112c_data,%eax
		movzbl 0x000002(%esi,%eax,1),%ebp
		push   %ebp
		mov    (%esi,%eax,1),%ax
		and    $0x00ffff,%eax
		push   %eax
		push   %edx
		push   %edi
		push   %ebx
		push   $_0a0d10_data
		push   $_0aa0b0_data
		call   _0852d9_func
		mov    _0a7c90_data,%dx
		xor    %ah,%ah
		add    $0x00001c,%esp
		mov    %ah,_0aa114_data
		cmp    $0x000001,%dx
		jne    _0367c6_jump
		cmpb   $0x000000,_0d5556_data
		je     _036715_jump
		xor    %al,%al
		test   %cl,%cl
		jne    _036637_jump
		cmpb   $0x00004d,_0c339e_data
		jne    _036637_jump
		mov    _0c112c_data,%eax
		add    %eax,%esi
		incb   0x000002(%esi)
		xor    %eax,%eax
		mov    0x000002(%esi),%al
		mov    %eax,%edx
		mov    $0x000020,%edi
		sar    $0x00001f,%edx
		mov    %eax,0x000064(%esp)
		idiv   %edi
		mov    %edx,0x000064(%esp)
		mov    0x000064(%esp),%al
		mov    %al,0x000002(%esi)
		mov    $0x000001,%al

	_036637_jump:
		test   %cl,%cl
		jne    _036679_jump
		cmpb   $0x00004b,_0c339e_data
		jne    _036679_jump
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c112c_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		cmpb   $0x000000,0x000002(%eax)
		jne    _036661_jump
		movb   $0x000020,0x000002(%eax)

	_036661_jump:
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c112c_data,%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    $0x000001,%al
		sub    %al,0x000002(%edx)

	_036679_jump:
		test   %cl,%cl
		jne    _0366b3_jump
		cmpb   $0x000050,_0c339e_data
		jne    _0366b3_jump
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c112c_data,%esi
		add    %eax,%eax
		add    %eax,%esi
		addb   $0x000010,0x000002(%esi)
		xor    %edx,%edx
		mov    0x000002(%esi),%dl
		mov    $0x000020,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    $0x000001,%al
		mov    %dl,0x000002(%esi)

	_0366b3_jump:
		test   %cl,%cl
		jne    _036701_jump
		cmpb   $0x000048,_0c339e_data
		jne    _036701_jump
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c112c_data,%eax
		add    %edx,%eax
		mov    0x000002(%eax),%ch
		cmp    $0x000010,%ch
		jae    _0366e3_jump
		mov    %ch,%dl
		add    $0x000020,%dl
		mov    %dl,0x000002(%eax)

	_0366e3_jump:
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c112c_data,%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    0x000002(%edx),%ch
		sub    $0x000010,%ch
		mov    $0x000001,%al
		mov    %ch,0x000002(%edx)

	_036701_jump:
		test   %al,%al
		je     _036715_jump
		cmpb   $0x000000,_0a7c9d_data
		jne    _036715_jump
		mov    %ebx,%eax
		call   _0364b0_func

	_036715_jump:
		cmp    $0x000063,%cl
		je     _036728_jump
		cmp    $0x000078,%cl
		je     _036728_jump
		cmpb   $0x000000,_0d5556_data
		je     _03674c_jump

	_036728_jump:
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c112c_data,%eax
		add    %edx,%eax
		mov    0x000002(%eax),%dl
		test   %dl,%dl
		je     _03674c_jump
		mov    %dl,%al
		xor    %ah,%ah
		mov    %ax,_0aa17a_data

	_03674c_jump:
		cmp    $0x000076,%cl
		je     _03675a_jump
		cmpb   $0x000000,_0d5556_data
		je     _036790_jump

	_03675a_jump:
		cmpw   $0x000020,_0aa17a_data
		je     _036790_jump
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c112c_data,%eax
		add    %eax,%edx
		mov    _0aa17a_data,%al
		mov    _0a7c9d_data,%ch
		mov    %al,0x000002(%edx)
		test   %ch,%ch
		jne    _036790_jump
		mov    %ebx,%eax
		call   _0364b0_func

	_036790_jump:
		cmp    $0x00006b,%cl
		je     _03679e_jump
		cmp    $0x000078,%cl
		jne    _036993_jump

	_03679e_jump:
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c112c_data,%eax
		movb   $0x000000,0x000002(%edx,%eax,1)
		cmpb   $0x000000,_0a7c9d_data
		jne    _036993_jump
		jmp    _03698c_jump

	_0367c6_jump:
		cmpb   $0x000000,_0d5556_data
		je     _0368ec_jump
		xor    %al,%al
		test   %cl,%cl
		jne    _036802_jump
		cmpb   $0x00004d,_0c339e_data
		jne    _036802_jump
		mov    _0c112c_data,%eax
		add    %eax,%esi
		mov    (%esi),%di
		inc    %edi
		xor    %edx,%edx
		mov    %di,(%esi)
		mov    $0x0004b0,%edi
		mov    (%esi),%ax
		div    %di
		mov    $0x000001,%al
		mov    %dx,(%esi)

	_036802_jump:
		test   %cl,%cl
		jne    _036849_jump
		cmpb   $0x00004b,_0c339e_data
		jne    _036849_jump
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c112c_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		cmpw   $0x000000,(%eax)
		jne    _03682d_jump
		movw   $0x0004b0,(%eax)

	_03682d_jump:
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c112c_data,%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    (%edx),%si
		dec    %esi
		mov    $0x000001,%al
		mov    %si,(%edx)

	_036849_jump:
		test   %cl,%cl
		jne    _036886_jump
		cmpb   $0x000050,_0c339e_data
		jne    _036886_jump
		mov    %ebx,%edx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c112c_data,%esi
		add    %eax,%eax
		add    %eax,%esi
		mov    (%esi),%di
		add    $0x000028,%edi
		xor    %ebx,%edx
		mov    %di,(%esi)
		mov    $0x0004b0,%edi
		mov    (%esi),%ax
		div    %di
		mov    $0x000001,%al
		mov    %dx,(%esi)

	_036886_jump:
		test   %cl,%cl
		jne    _0368d8_jump
		cmpb   $0x000048,_0c339e_data
		jne    _0368d8_jump
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c112c_data,%eax
		add    %edx,%eax
		mov    (%eax),%dx
		cmp    $0x000028,%dx
		jae    _0368ba_jump
		mov    %edx,%esi
		add    $0x0004b0,%esi
		mov    %si,(%eax)

	_0368ba_jump:
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c112c_data,%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    (%edx),%di
		sub    $0x000028,%edi
		mov    $0x000001,%al
		mov    %di,(%edx)

	_0368d8_jump:
		test   %al,%al
		je     _0368ec_jump
		cmpb   $0x000000,_0a7c9d_data
		jne    _0368ec_jump
		mov    %ebx,%eax
		call   _0364b0_func

	_0368ec_jump:
		cmp    $0x000063,%cl
		je     _0368ff_jump
		cmp    $0x000078,%cl
		je     _0368ff_jump
		cmpb   $0x000000,_0d5556_data
		je     _036921_jump

	_0368ff_jump:
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c112c_data,%eax
		add    %edx,%eax
		mov    (%eax),%dx
		test   %dx,%dx
		je     _036921_jump
		mov    %dx,_0aa178_data

	_036921_jump:
		cmp    $0x000076,%cl
		je     _03692f_jump
		cmpb   $0x000000,_0d5556_data
		je     _036964_jump

	_03692f_jump:
		mov    _0aa178_data,%si
		cmp    $0x0004b0,%si
		je     _036964_jump
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c112c_data,%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    _0a7c9d_data,%ah
		mov    %si,(%edx)
		test   %ah,%ah
		jne    _036964_jump
		mov    %ebx,%eax
		call   _0364b0_func

	_036964_jump:
		cmp    $0x00006b,%cl
		je     _03696e_jump
		cmp    $0x000078,%cl
		jne    _036993_jump

	_03696e_jump:
		lea    0x000000(,%ebx,4),%eax
		mov    _0c112c_data,%edx
		sub    %ebx,%eax
		movw   $0x000000,(%edx,%eax,2)
		cmpb   $0x000000,_0a7c9d_data
		jne    _036993_jump

	_03698c_jump:
		mov    %ebx,%eax
		call   _0364b0_func

	_036993_jump:
		cmp    $0x000073,%cl
		jne    _0369ea_jump
		cmpb   $0x000000,_0c33dc_data
		je     _0369ea_jump
		mov    _0bf2f4_data,%eax
		mov    0x0002cc(%eax),%eax
		call   _040b7c_func
		call   _040d70_func
		test   %al,%al
		je     _0369ea_jump
		mov    $_0c2e8c_data,%esi
		mov    %esp,%edi
		push   %edi

	_0369c2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0369da_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0369c2_jump

	_0369da_jump:
		pop    %edi
		xor    %edx,%edx
		mov    %esp,%eax
		mov    _0c3142_data,%dl
		call   _0316e8_func

	_0369ea_jump:
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036afc_func:
		push   %ecx
		push   %edx
		mov    _0d5557_data,%dl
		mov    _0d554d_data,%ah
		test   %ah,%ah
		jne    _036b48_jump
		decb   _0d5547_data
		cmp    $0x000016,%dl
		jne    _036b25_jump
		mov    $0x000001,%cl
		mov    $0x000017,%dl
		mov    %cl,_0d554b_data
		jmp    _036b48_jump

	_036b25_jump:
		cmp    $0x000017,%dl
		jne    _036b3b_jump
		cmpb   $0x000000,_0d554b_data
		je     _036b37_jump
		mov    $0x000018,%dl
		jmp    _036b48_jump

	_036b37_jump:
		mov    $0x000016,%dl
		jmp    _036b48_jump

	_036b3b_jump:
		cmp    $0x000018,%dl
		jne    _036b48_jump
		mov    $0x000017,%dl
		mov    %ah,_0d554b_data

	_036b48_jump:
		mov    %dl,_0d5557_data
		pop    %edx
		pop    %ecx
		ret    



_036b54_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x00006e(%eax),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%edx),%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006f(%edx),%al
		mov    0x000004(%ebx),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    %eax,_0d5500_data
		mov    0x00003c(%edx),%ax
		mov    0x00003e(%edx),%bx
		test   %ax,%ax
		jge    _036b8f_jump
		xor    %eax,%eax

	_036b8f_jump:
		test   %bx,%bx
		jge    _036b96_jump
		xor    %ebx,%ebx

	_036b96_jump:
		mov    %ax,0x00003c(%edx)
		mov    %bx,0x00003e(%edx)
		cwtl   
		mov    %eax,0x000028(%edx)
		movswl %bx,%eax
		mov    %eax,0x00002c(%edx)
		pop    %edx
		pop    %ebx
		ret    



_036cfc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000420,%esp
		cmpb   $0x000000,_0d554f_data
		jne    _036d71_jump
		mov    _0d5502_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0c1050_data,%eax
		add    %edx,%edx
		lea    0x000320(%esp),%esi
		add    %edx,%eax
		lea    0x000320(%esp),%edx
		mov    %esp,%edi
		call   _0305b4_func
		mov    %eax,%ebx
		push   %edi

	_036d48_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036d60_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036d48_jump

	_036d60_jump:
		pop    %edi
		mov    _0d5502_data,%eax
		sar    $0x000010,%eax
		call   _0328f0_func
		cwtl   
		jmp    _036dbb_jump

	_036d71_jump:
		mov    _0d54f4_data,%edx
		mov    _0d54f0_data,%eax
		sar    $0x000010,%edx
		lea    0x000320(%esp),%esi
		mov    (%eax,%edx,4),%eax
		lea    0x000320(%esp),%edx
		mov    %esp,%edi
		call   _0305b4_func
		mov    %eax,%ebx
		push   %edi

	_036d9a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036db2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036d9a_jump

	_036db2_jump:
		pop    %edi
		mov    _0d54f4_data,%eax
		sar    $0x000010,%eax

	_036dbb_jump:
		call   _030ca0_func
		lea    0x000190(%esp),%edx
		mov    $_0a13b4_data,%esi
		mov    %ebx,%eax
		mov    %esp,%edi
		call   _030694_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_036dde_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036df6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036dde_jump

	_036df6_jump:
		pop    %edi
		lea    0x000190(%esp),%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_036e09_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036e21_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036e09_jump

	_036e21_jump:
		pop    %edi
		mov    %esp,%eax
		call   _040b7c_func
		add    $0x000420,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036e38_func:
		push   %edx
		mov    0x000064(%eax),%dx
		cmp    $0x000110,%dx
		je     _036e52_jump
		cmp    $0x00010b,%dx
		je     _036e52_jump
		cmp    $0x00010a,%dx
		jne    _036e5a_jump

	_036e52_jump:
		mov    0x00007a(%eax),%al
		mov    %al,_0aa0a1_data

	_036e5a_jump:
		pop    %edx
		ret    



_036e5c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %dl,%bl
		cmpb   $0x000000,_0d5552_data
		je     _036ef6_jump
		cmpb   $0x000000,_0d5553_data
		jne    _036ef6_jump
		cmpb   $0x000000,_0d554f_data
		jne    _036ef6_jump
		mov    _0d5502_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%ecx
		shl    $0x000003,%eax
		add    %eax,%ecx
		mov    0x000064(%ecx),%dx
		cmp    $0x000110,%dx
		je     _036ec3_jump
		cmp    $0x00010b,%dx
		je     _036ec3_jump
		cmp    $0x00010a,%dx
		jne    _036eef_jump

	_036ec3_jump:
		cmp    $0x000048,%bl
		jne    _036ed0_jump
		xor    %edx,%edx
		mov    0x00007a(%ecx),%dl
		inc    %edx
		jmp    _036edd_jump

	_036ed0_jump:
		cmp    $0x000050,%bl
		jne    _036eef_jump
		xor    %edx,%edx
		mov    0x00007a(%ecx),%dl
		add    $0x000005,%edx

	_036edd_jump:
		mov    $0x000006,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dl,0x00007a(%ecx)
		mov    %dl,0x00007b(%ecx)

	_036eef_jump:
		mov    %ecx,%eax
		call   _036e38_func

	_036ef6_jump:
		cmpb   $0x00002e,(%esp)
		jne    _036f13_jump
		cmpb   $0x000000,_0d5553_data
		jne    _036f13_jump
		cmpb   $0x000000,_0d554f_data
		jne    _036f13_jump
		call   _0339dc_func

	_036f13_jump:
		cmpb   $0x00006b,(%esp)
		jne    _036f57_jump
		cmpb   $0x000000,_0d5552_data
		je     _036f57_jump
		mov    _0d5553_data,%dl
		test   %dl,%dl
		jne    _036f57_jump
		cmpb   $0x000000,_0d554f_data
		jne    _036f57_jump
		mov    _0d5502_data,%eax
		sar    $0x000010,%eax
		mov    $0x000003,%cl
		call   _033938_func
		mov    %dl,_0d5552_data
		xor    %eax,%eax
		mov    %cl,_0d554e_data
		call   _063620_func

	_036f57_jump:
		cmpb   $0x000073,(%esp)
		jne    _036f62_jump
		call   _0327d0_func

	_036f62_jump:
		cmpb   $0x00006e,(%esp)
		jne    _036f96_jump
		cmpb   $0x000000,_0d5552_data
		jne    _036f8c_jump
		cmpb   $0x000000,_0d554f_data
		jne    _036f8c_jump
		mov    _0bf2f4_data,%eax
		mov    0x000250(%eax),%eax
		call   _040b7c_func
		jmp    _036f91_jump

	_036f8c_jump:
		call   _036cfc_func

	_036f91_jump:
		call   _040d70_func

	_036f96_jump:
		call   _030408_func
		call   _030394_func
		cmpb   $0x000000,_0d5547_data
		jne    _036fc4_jump
		cmpb   $0x000000,_0d5555_data
		je     _036fbb_jump
		movb   $0x000011,_0d5557_data
		jmp    _036fc9_jump

	_036fbb_jump:
		movb   $0x00003a,_0d5557_data
		jmp    _036fc9_jump

	_036fc4_jump:
		call   _036afc_func

	_036fc9_jump:
		cmpb   $0x000000,_0d554f_data
		je     _03713a_jump
		mov    _0d5556_data,%cl
		test   %cl,%cl
		je     _0370ab_jump
		movb   $0x000001,_0d554e_data
		cmpw   $0x000000,_0d5536_data
		jne    _0370a1_jump
		cmpw   $0x00001e,_0d5544_data
		jle    _03700c_jump
		movw   $0x000001,_0d5536_data

	_03700c_jump:
		mov    _0d5542_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _037022_jump
		movw   $0x00ffff,_0d5536_data

	_037022_jump:
		cmpb   $0x000000,(%esp)
		jne    _037036_jump
		cmp    $0x00004d,%bl
		jne    _037036_jump
		movw   $0x000001,_0d5536_data

	_037036_jump:
		cmpb   $0x000000,(%esp)
		jne    _03704a_jump
		cmp    $0x00004b,%bl
		jne    _03704a_jump
		movw   $0x00ffff,_0d5536_data

	_03704a_jump:
		cmpb   $0x000000,(%esp)
		jne    _03705e_jump
		cmp    $0x000048,%bl
		jne    _03705e_jump
		movw   $0x00fffe,_0d5536_data

	_03705e_jump:
		cmpb   $0x000000,(%esp)
		jne    _037072_jump
		cmp    $0x000050,%bl
		jne    _037072_jump
		movw   $0x000002,_0d5536_data

	_037072_jump:
		mov    $0x000001,%al
		xor    %edi,%edi
		mov    %al,_0d5550_data
		mov    _0d553a_data,%ax
		mov    %di,_0d5544_data
		mov    %ax,_0d552a_data
		mov    _0d553e_data,%ax
		mov    %di,_0d553c_data
		mov    %ax,_0d552c_data

	_0370a1_jump:
		call   _032d48_func
		jmp    _037247_jump

	_0370ab_jump:
		mov    $0x000003,%al
		mov    %cl,_0d554f_data
		mov    %cl,_0d5552_data
		mov    %al,_0d554e_data
		call   _033aac_func
		mov    _0aa0a8_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _03712c_jump
		mov    _0b9414_data,%ax
		dec    %eax
		cwtl   
		call   _033210_func
		mov    _0aa0a8_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0b9412_data,%edx
		mov    _0c1050_data,%esi
		sar    $0x000010,%edx
		add    %eax,%eax
		dec    %edx
		lea    (%esi,%eax,1),%ecx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    %eax,%esi
		mov    0x000020(%ecx),%ax
		mov    %ax,0x000020(%esi)
		mov    0x000022(%ecx),%ax
		mov    %ax,0x000022(%esi)

	_03712c_jump:
		movw   $0x00ffff,_0aa0aa_data
		jmp    _037247_jump

	_03713a_jump:
		cmpb   $0x000000,_0d5556_data
		je     _037242_jump
		cmpb   $0x000000,_0d5553_data
		jne    _037242_jump
		cmpb   $0x000000,_0d5552_data
		je     _037203_jump
		mov    _0d5502_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		lea    (%edx,%eax,1),%ecx
		mov    _0b9410_data,%eax
		shl    $0x000003,%ecx
		add    %ecx,%eax
		mov    _0d5500_data,%ecx
		mov    0x000036(%eax),%bx
		movzbw (%ecx),%si
		add    %esi,%ebx
		mov    %bx,_0d553a_data
		xor    %ebx,%ebx
		mov    0x000038(%eax),%ax
		mov    0x000001(%ecx),%bl
		add    %ebx,%eax
		mov    %ax,_0d553e_data
		mov    %edx,%eax
		call   _0328f0_func
		mov    %ax,_0d54f6_data
		mov    _0d5502_data,%eax
		mov    _0c1d74_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		mov    _0d5504_data,%dx
		mov    %ax,_0aa0aa_data
		cmp    %dx,%ax
		jne    _0371e0_jump
		movw   $0x00ffff,_0aa0aa_data
		jmp    _0371ec_jump

	_0371e0_jump:
		jl     _0371ec_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0aa0aa_data

	_0371ec_jump:
		mov    _0d5502_data,%eax
		sar    $0x000010,%eax
		mov    $0x000001,%bl
		call   _033938_func
		mov    %bl,_0d554e_data
		jmp    _037224_jump

	_037203_jump:
		movw   $0x00ffff,_0aa0aa_data
		mov    _0d5540_data,%ax
		mov    %ax,_0d553a_data
		mov    _0d5542_data,%ax
		mov    %ax,_0d553e_data

	_037224_jump:
		mov    _0d54f4_data,%eax
		mov    $0x000001,%bh
		sar    $0x000010,%eax
		xor    %edi,%edi
		call   _030c28_func
		mov    %di,_0d5536_data
		mov    %bh,_0d554f_data

	_037242_jump:
		call   _034310_func

	_037247_jump:
		cmpb   $0x000000,_0d5553_data
		je     _0373b3_jump
		mov    _0d5555_data,%dl
		test   %dl,%dl
		je     _0373a5_jump
		mov    $0x000001,%bh
		mov    _0d554c_data,%cl
		mov    %bh,_0d554e_data
		test   %cl,%cl
		je     _037327_jump
		xor    %ebx,%ebx
		jmp    _0372d7_jump

	_03727c_jump:
		movswl %bx,%eax
		mov    _0d5508_data(%eax),%al
		and    $0x0000ff,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		add    %eax,%edx
		mov    _0d5542_data,%eax
		mov    0x000028(%edx),%esi
		sar    $0x000010,%eax
		add    %eax,%esi
		mov    _0d552e_data,%eax
		mov    0x00002c(%edx),%edi
		sar    $0x000010,%eax
		mov    %esi,0x000028(%edx)
		add    %eax,%edi
		mov    0x000028(%edx),%ax
		mov    %edi,0x00002c(%edx)
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		call   _036b54_func
		mov    %edx,%eax
		inc    %ebx
		call   _01e53c_func

	_0372d7_jump:
		xor    %eax,%eax
		mov    _0d5546_data,%al
		cmp    %ax,%bx
		jl     _03727c_jump
		mov    _0d5502_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000036(%eax),%dx
		mov    %dx,_0d54fc_data
		mov    0x000038(%eax),%ax
		mov    $0x00000a,%edx
		mov    %ax,_0d54fe_data
		mov    $_0d54fc_data,%eax
		call   _0304b8_func
		jmp    _0373b3_jump

	_037327_jump:
		mov    _0d5502_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    _0d5542_data,%eax
		mov    0x000028(%edx),%ebx
		sar    $0x000010,%eax
		add    %eax,%ebx
		mov    _0d552e_data,%eax
		mov    0x00002c(%edx),%ecx
		sar    $0x000010,%eax
		mov    %ebx,0x000028(%edx)
		add    %eax,%ecx
		mov    0x000028(%edx),%ax
		mov    %ecx,0x00002c(%edx)
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		call   _036b54_func
		mov    %edx,%eax
		call   _01e53c_func
		mov    0x000036(%edx),%ax
		mov    %ax,_0d54fc_data
		mov    0x000038(%edx),%ax
		mov    $0x00000a,%edx
		mov    %ax,_0d54fe_data
		mov    $_0d54fc_data,%eax
		call   _0304b8_func
		jmp    _0373b3_jump

	_0373a5_jump:
		mov    $0x000003,%bl
		mov    %dl,_0d5553_data
		mov    %bl,_0d554e_data

	_0373b3_jump:
		mov    _0d5553_data,%ch
		test   %ch,%ch
		jne    _03751f_jump
		cmpb   $0x000000,_0d554f_data
		jne    _03751f_jump
		mov    $_0d54fc_data,%eax
		call   _0307d0_func
		mov    _0d5504_data,%ax
		cmp    _0b9414_data,%ax
		jge    _037508_jump
		mov    _0d5502_data,%eax
		sar    $0x000010,%eax
		mov    $0x000001,%bl
		call   _0328f0_func
		cwtl   
		mov    $0x000014,%edx
		call   _030c28_func
		mov    $_0d54fc_data,%eax
		mov    %bl,_0d5552_data
		call   _0304b8_func
		mov    _0d5502_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%esi
		shl    $0x000003,%eax
		add    %eax,%esi
		mov    %esi,%eax
		call   _036e38_func
		mov    _0d5555_data,%cl
		mov    %bl,_0d554e_data
		test   %cl,%cl
		je     _03751f_jump
		mov    _0d5502_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0c1050_data,%eax
		add    %edx,%edx
		add    %edx,%eax
		mov    $_0a0934_data,%edx
		mov    %bl,_0d5553_data
		call   _0853a0_func
		test   %eax,%eax
		jne    _0374fa_jump
		mov    _0b9414_data,%cx
		xor    %dh,%dh
		mov    %bl,_0d554c_data
		mov    %dh,_0d5546_data
		xor    %ebx,%ebx
		test   %cx,%cx
		jle    _03751f_jump

	_0374a3_jump:
		movswl %bx,%ecx
		imul   $0x00002a,%ecx,%edx
		mov    _0c1050_data,%eax
		add    %edx,%eax
		mov    $_0a0934_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _0374eb_jump
		imul   $0x000088,%ecx,%ecx
		mov    _0b9410_data,%eax
		mov    0x00003c(%esi),%dx
		cmp    0x00003c(%ecx,%eax,1),%dx
		jne    _0374eb_jump
		xor    %eax,%eax
		mov    _0d5546_data,%al
		mov    %al,%cl
		inc    %cl
		mov    %bl,_0d5508_data(%eax)
		mov    %cl,_0d5546_data

	_0374eb_jump:
		mov    _0b9414_data,%di
		inc    %ebx
		cmp    %di,%bx
		jge    _03751f_jump
		jmp    _0374a3_jump

	_0374fa_jump:
		mov    %ch,_0d554c_data
		mov    %ch,_0d5546_data
		jmp    _03751f_jump

	_037508_jump:
		cmpb   $0x000000,_0d5552_data
		je     _03751f_jump
		mov    $0x000003,%dh
		mov    %ch,_0d5552_data
		mov    %dh,_0d554e_data

	_03751f_jump:
		cmpb   $0x000062,(%esp)
		jne    _0375fe_jump
		mov    _0d552e_data,%bx
		neg    %ebx
		mov    %bx,_0d552e_data
		cmp    $0x000001,%bx
		jne    _03759e_jump
		xor    %eax,%eax
		call   _063620_func
		mov    _0b9414_data,%di
		xor    %ebx,%ebx
		test   %di,%di
		jle    _0375fe_jump

	_037558_jump:
		movswl %bx,%edx
		imul   $0x000088,%edx,%edx
		mov    _0b9410_data,%eax
		add    %eax,%edx
		mov    0x000064(%edx),%ax
		cmp    $0x000040,%ax
		je     _037578_jump
		cmp    $0x000063,%ax
		jne    _03758f_jump

	_037578_jump:
		movswl %bx,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		orb    $0x000004,0x000085(%edx,%eax,1)

	_03758f_jump:
		mov    _0b9414_data,%di
		inc    %ebx
		cmp    %di,%bx
		jge    _0375fe_jump
		jmp    _037558_jump

	_03759e_jump:
		xor    %eax,%eax
		call   _063620_func
		mov    _0b9414_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _0375f7_jump

	_0375b3_jump:
		movswl %bx,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		add    %eax,%edx
		mov    0x000064(%edx),%cx
		cmp    $0x000040,%cx
		je     _0375d4_jump
		cmp    $0x000063,%cx
		jne    _0375eb_jump

	_0375d4_jump:
		movswl %bx,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		orb    $0x000004,0x000085(%edx,%eax,1)

	_0375eb_jump:
		mov    _0b9414_data,%ax
		inc    %ebx
		cmp    %ax,%bx
		jl     _0375b3_jump

	_0375f7_jump:
		movb   $0x000003,_0d554e_data

	_0375fe_jump:
		cmpw   $0x000001,_0d552e_data
		jne    _03760f_jump
		movb   $0x000001,_0d554e_data

	_03760f_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_037618_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		sub    $0x000064,%esp
		push   $_0aa0b0_data
		push   $_0a0cd8_data
		lea    0x000008(%esp),%eax
		push   %eax
		mov    $0x00002d,%bl
		xor    %edx,%edx
		call   _0852d9_func
		add    $0x00000c,%esp
		jmp    _037646_jump

	_03763c_jump:
		cmpb   $0x00005f,(%esp,%edx,1)
		jne    _037645_jump
		mov    %bl,(%esp,%edx,1)

	_037645_jump:
		inc    %edx

	_037646_jump:
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%edx
		jb     _03763c_jump
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x0000c8,%ebx
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01b0f8_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x0000b2,%ebx
		mov    $0x0000a0,%edx
		mov    $_0aa114_data,%eax
		call   _01b0f8_func
		add    $0x000064,%esp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037694_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _017e8d_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _017eca_func
		mov    $0x000017,%edx
		mov    $0x0000a0,%eax
		call   _030300_func
		call   _037618_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _017eca_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0376f0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %al,%bl
		call   _035e40_func
		call   _0331f8_func
		cmp    $0x00006d,%bl
		jne    _037747_jump
		mov    $0x0004b0,%eax
		mov    $0x000020,%ecx
		mov    $0xffffffff,%edi
		mov    _0c30a6_data,%si
		mov    %ax,_0aa178_data
		mov    %cx,_0aa17a_data
		neg    %esi
		mov    %di,_0c30a4_data
		mov    %si,_0c30a6_data
		cmp    $0x000001,%si
		jne    _037777_jump
		movb   $0x000001,_0d554e_data
		jmp    _03777e_jump

	_037747_jump:
		cmp    $0x000069,%bl
		jne    _03777e_jump
		mov    _0c30a4_data,%cx
		mov    $0xffffffff,%esi
		neg    %ecx
		mov    %si,_0c30a6_data
		mov    %cx,_0c30a4_data
		cmp    $0x000001,%cx
		jne    _037777_jump
		movb   $0x000001,_0d554e_data
		jmp    _03777e_jump

	_037777_jump:
		movb   $0x000003,_0d554e_data

	_03777e_jump:
		cmp    $0x000074,%bl
		jne    _03778a_jump
		negw   _0a7c90_data

	_03778a_jump:
		cmpw   $0x000001,_0c30a4_data
		jne    _0377a5_jump
		xor    %eax,%eax
		and    $0x0000ff,%edx
		mov    %bl,%al
		call   _0361a8_func
		jmp    _0377d6_jump

	_0377a5_jump:
		cmpw   $0x000001,_0c30a6_data
		jne    _0377c2_jump
		xor    %eax,%eax
		mov    %bl,%al
		call   _036544_func
		call   _037694_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0377c2_jump:
		xor    %eax,%eax
		and    $0x0000ff,%edx
		mov    %bl,%al
		call   _036e5c_func
		call   _035f7c_func

	_0377d6_jump:
		call   _037694_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0377e0_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _042170_func
		mov    _0c0f50_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _03a314_func
		test   %ax,%ax
		je     _03783a_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _03783a_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _03783a_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _03783a_jump
		call   _042060_func
		test   %ax,%ax
		jne    _03783a_jump
		mov    $0x000039,%eax
		call   _041ce0_func
		test   %al,%al
		je     _037841_jump

	_03783a_jump:
		mov    $0x000001,%edx
		jmp    _037843_jump

	_037841_jump:
		xor    %edx,%edx

	_037843_jump:
		call   _03a600_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_037850_case:
		mov    $_0b4028_data,%eax
		call   _03ece4_func
		cmpb   $0x000001,_0aa17e_data
		jne    _037868_jump
		call   _03ea80_func

	_037868_jump:
		mov    $_0377e0_func,%eax
		call   _03eb48_func
		mov    _0aa17b_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03ed58_func
		call   _03ead0_func
		jmp    _03ed58_func



_037890_func:
		push   %edx
		call   _042170_func
		call   _080f0c_func
		test   %ax,%ax
		je     _0378d6_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _0378d6_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _0378d6_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _0378d6_jump
		call   _042060_func
		test   %ax,%ax
		jne    _0378d6_jump
		mov    $0x000039,%eax
		call   _041ce0_func
		test   %al,%al
		je     _0378dd_jump

	_0378d6_jump:
		mov    $0x000001,%edx
		jmp    _0378df_jump

	_0378dd_jump:
		xor    %edx,%edx

	_0378df_jump:
		call   _081090_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_0378e8_case:
		mov    $_0b4028_data,%eax
		call   _03ece4_func
		cmpb   $0x000001,_0aa17e_data
		jne    _037905_jump
		call   _03eaf8_func
		call   _03ea80_func

	_037905_jump:
		mov    $_037890_func,%eax
		call   _03eb48_func
		mov    _0aa17b_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03ed58_func
		call   _03ead0_func
		jmp    _03ed58_func



_03792c_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _042170_func
		mov    _0c0f50_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _024694_func
		test   %ax,%ax
		je     _037986_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _037986_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _037986_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _037986_jump
		call   _042060_func
		test   %ax,%ax
		jne    _037986_jump
		mov    $0x000039,%eax
		call   _041ce0_func
		test   %al,%al
		je     _03798d_jump

	_037986_jump:
		mov    $0x000001,%edx
		jmp    _03798f_jump

	_03798d_jump:
		xor    %edx,%edx

	_03798f_jump:
		call   _024b58_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_03799c_case:
		mov    $_0b4028_data,%eax
		call   _03ece4_func
		cmpb   $0x000001,_0aa17e_data
		jne    _0379b9_jump
		call   _03eaf8_func
		call   _03ea80_func

	_0379b9_jump:
		mov    $_03792c_func,%eax
		call   _03eb48_func
		mov    _0aa17b_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03ed58_func
		call   _03ead0_func
		jmp    _03ed58_func



_0379e0_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _042170_func
		mov    _0c0f50_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _045454_func
		test   %ax,%ax
		je     _037a3a_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _037a3a_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _037a3a_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _037a3a_jump
		call   _042060_func
		test   %ax,%ax
		jne    _037a3a_jump
		mov    $0x000039,%eax
		call   _041ce0_func
		test   %al,%al
		je     _037a41_jump

	_037a3a_jump:
		mov    $0x000001,%edx
		jmp    _037a43_jump

	_037a41_jump:
		xor    %edx,%edx

	_037a43_jump:
		call   _045310_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_037a50_case:
		mov    $_0b4028_data,%eax
		call   _03ece4_func
		cmpb   $0x000001,_0aa17e_data
		jne    _037a6d_jump
		call   _03eaf8_func
		call   _03ea80_func

	_037a6d_jump:
		mov    $_0379e0_func,%eax
		call   _03eb48_func
		mov    _0aa17b_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03ed58_func
		call   _03ead0_func
		jmp    _03ed58_func



_037a94_func:
		push   %edx
		call   _042170_func
		call   _0721b4_func
		test   %ax,%ax
		je     _037ada_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _037ada_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _037ada_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _037ada_jump
		call   _042060_func
		test   %ax,%ax
		jne    _037ada_jump
		mov    $0x000039,%eax
		call   _041ce0_func
		test   %al,%al
		je     _037ae1_jump

	_037ada_jump:
		mov    $0x000001,%edx
		jmp    _037ae3_jump

	_037ae1_jump:
		xor    %edx,%edx

	_037ae3_jump:
		call   _0723d8_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_037aec_case:
		mov    $_0b4028_data,%eax
		call   _03ece4_func
		cmpb   $0x000001,_0aa17e_data
		jne    _037b09_jump
		call   _03eaf8_func
		call   _03ea80_func

	_037b09_jump:
		mov    $_037a94_func,%eax
		call   _03eb48_func
		mov    _0aa17b_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03ed58_func
		call   _03ead0_func
		jmp    _03ed58_func



_037b30_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _042170_func
		mov    _0c0f50_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _064520_func
		test   %ax,%ax
		je     _037b8a_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _037b8a_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _037b8a_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _037b8a_jump
		call   _042060_func
		test   %ax,%ax
		jne    _037b8a_jump
		mov    $0x000039,%eax
		call   _041ce0_func
		test   %al,%al
		je     _037b91_jump

	_037b8a_jump:
		mov    $0x000001,%edx
		jmp    _037b93_jump

	_037b91_jump:
		xor    %edx,%edx

	_037b93_jump:
		call   _0647d8_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_037ba0_case:
		mov    $_0b4028_data,%eax
		call   _03ece4_func
		cmpb   $0x000001,_0aa17e_data
		jne    _037bbd_jump
		call   _03eaf8_func
		call   _03ea80_func

	_037bbd_jump:
		mov    $_037b30_func,%eax
		call   _03eb48_func
		mov    _0aa17b_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03ed58_func
		call   _03ead0_func
		jmp    _03ed58_func



_037be4_func:
		push   %edx
		call   _042170_func
		call   _07e684_func
		test   %ax,%ax
		je     _037c2a_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _037c2a_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _037c2a_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _037c2a_jump
		call   _042060_func
		test   %ax,%ax
		jne    _037c2a_jump
		mov    $0x000039,%eax
		call   _041ce0_func
		test   %al,%al
		je     _037c31_jump

	_037c2a_jump:
		mov    $0x000001,%edx
		jmp    _037c33_jump

	_037c31_jump:
		xor    %edx,%edx

	_037c33_jump:
		call   _07e76c_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_037c3c_case:
		mov    $_0b4028_data,%eax
		call   _03ece4_func
		cmpb   $0x000001,_0aa17e_data
		jne    _037c59_jump
		call   _03eaf8_func
		call   _03ea80_func

	_037c59_jump:
		mov    $_037be4_func,%eax
		call   _03eb48_func
		mov    _0aa17b_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03ed58_func
		call   _03ead0_func
		jmp    _03ed58_func



_037c80_func:
		cmpb   $0x000001,_0aa17e_data
		jne    _037c96_jump
		mov    $0x000006,%eax
		call   _06a9a0_func
		add    $0x000002,%al
		ret    

	_037c96_jump:
		mov    $0x000007,%eax
		call   _06a9a0_func
		inc    %al
		ret    



_037ca4_func:
		mov    $0x00000b,%eax
		call   _06a9a0_func
		inc    %al
		ret    



_037cb4_func:
		mov    $0x00000e,%eax
		call   _06a9a0_func
		inc    %al
		ret    



_037cc4_func:
		mov    $0x000006,%eax
		call   _06a9a0_func
		inc    %al
		ret    

_037cd4_switch:
		.long   _037d6a_case
		.long   _037dc2_case
		.long   _037d84_case
		.long   _037e4f_case
		.long   _037da1_case
		.long   _037dff_case
		.long   _037e2a_case
		.long   _037dec_case


	_037cf4_jump:
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    $0x000001,%edx
		cmp    $0x000009,%al
		jne    _037d2b_jump
		call   _037c80_func
		mov    %al,0x000004(%esp)
		cmp    $0x000002,%al
		je     _037d18_jump
		cmp    $0x000004,%al
		jne    _037d1f_jump

	_037d18_jump:
		call   _037ca4_func
		jmp    _037d28_jump

	_037d1f_jump:
		cmp    $0x000006,%al
		jne    _037d2b_jump
		call   _037cb4_func

	_037d28_jump:
		mov    %al,(%esp)

	_037d2b_jump:
		cmpb   $0x000004,0x000004(%esp)
		jne    _037d37_jump
		movb   $0x000002,0x000004(%esp)

	_037d37_jump:
		movsbw _0aa17e_data,%ax
		imul   %eax,%edx
		mov    (%esp),%al
		mov    %al,_0aa17c_data
		mov    0x000004(%esp),%al
		mov    %al,_0aa17d_data
		dec    %al
		cmp    $0x000007,%al
		ja     _037e4f_case
		and    $0x0000ff,%eax
		jmp    *%cs:_037cd4_switch(,%eax,4)

	_037d6a_case:
		push   %ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x000008,%edx
		mov    $0x000078,%ecx
		mov    %edx,%eax
		call   _03a20c_func
		add    $0x000008,%esp
		ret    

	_037d84_case:
		push   %ecx
		mov    $0x000014,%eax
		mov    $0x000190,%ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x00000a,%edx
		call   _080e04_func
		add    $0x000008,%esp
		ret    

	_037da1_case:
		push   %ecx
		mov    $0x000014,%eax
		add    %edx,%edx
		push   %ebx
		movswl %dx,%ecx
		push   $0x000032
		mov    $0x00003d,%ebx
		mov    $0x000008,%edx
		call   _0244cc_func
		add    $0x000008,%esp
		ret    

	_037dc2_case:
		mov    (%esp),%al
		cmp    $0x00000d,%al
		je     _037dcd_jump
		cmp    $0x000064,%al
		jne    _037dd7_jump

	_037dcd_jump:
		call   _037ca4_func
		mov    %al,_0aa17c_data

	_037dd7_jump:
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0aa17c_data,%al
		movswl %dx,%edx
		call   _045264_func
		add    $0x000008,%esp
		ret    

	_037dec_case:
		add    %edx,%edx
		mov    $0x000016,%eax
		movswl %dx,%edx
		call   _072090_func
		add    $0x000008,%esp
		ret    

	_037dff_case:
		mov    (%esp),%al
		cmp    $0x000010,%al
		je     _037e0a_jump
		cmp    $0x000064,%al
		jne    _037e14_jump

	_037e0a_jump:
		call   _037cb4_func
		mov    %al,_0aa17c_data

	_037e14_jump:
		xor    %eax,%eax
		shl    $0x000002,%edx
		mov    _0aa17c_data,%al
		movswl %dx,%edx
		call   _064468_func
		add    $0x000008,%esp
		ret    

	_037e2a_case:
		mov    $0x0000a0,%eax
		push   %ecx
		shl    $0x000002,%edx
		push   %ebx
		movswl %dx,%ecx
		push   $0x0003e8
		mov    $0x000030,%ebx
		mov    $0x000064,%edx
		call   _07e57c_func
		add    $0x000008,%esp
		ret    

	_037e4f_case:
		xor    %al,%al
		add    $0x000008,%esp

	_037e54_case:
		ret    



_037e58_func:
		movb   $0x000001,_0aa17e_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		jmp    _037cf4_jump



_037e70_func:
		movb   $0x0000ff,_0aa17e_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		jmp    _037cf4_jump

_037e88_switch:
		.long   _037850_case
		.long   _037a50_case
		.long   _0378e8_case
		.long   _037e54_case
		.long   _03799c_case
		.long   _037ba0_case
		.long   _037c3c_case
		.long   _037aec_case




_037ea8_func:
		mov    _0aa17d_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _037e54_case
		and    $0x0000ff,%eax
		jmp    *%cs:_037e88_switch(,%eax,4)

_037ec0_switch:
		.long   _03a1e0_case
		.long   _045238_case
		.long   _080dd8_case
		.long   _037e54_case
		.long   _024490_case
		.long   _06442c_case
		.long   _07e550_case
		.long   _072064_case




_037ee0_func:
		mov    _0aa17d_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _037e54_case
		and    $0x0000ff,%eax
		jmp    *%cs:_037ec0_switch(,%eax,4)



_037efc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		cmpb   $0x000001,_0a7c9d_data
		jne    _037f4d_jump
		xor    %bl,%bl

	_037f14_jump:
		movzbl %bl,%edi
		imul   $0x003e80,%edi,%edi
		mov    %bl,%ah
		mov    $0x003e80,%ecx
		mov    $0x0003ce,%edx
		mov    $0x000004,%al
		out    %ax,(%dx)
		mov    (%esp),%edx
		mov    %ebp,%esi
		add    %edx,%edi
		inc    %bl
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmp    $0x000004,%bl
		jae    _037f66_jump
		jmp    _037f14_jump

	_037f4d_jump:
		mov    $0x00fa00,%ecx
		mov    %ebp,%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_037f66_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_037f70_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %edx,%ebp
		mov    _0a7c9d_data,%ah
		cmp    $0x000001,%ah
		jne    _037fc7_jump
		mov    %ah,%bl
		mov    %ebp,%edi
		xor    %bh,%bh

	_037f8e_jump:
		movzbl %bh,%esi
		imul   $0x003e80,%esi,%esi
		mov    %bl,%ah
		mov    $0x003e80,%ecx
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    (%esp),%edx
		add    %bl,%bl
		add    %edx,%esi
		inc    %bh
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmp    $0x000004,%bh
		jae    _037fe1_jump
		jmp    _037f8e_jump

	_037fc7_jump:
		mov    $0x00fa00,%ecx
		mov    (%esp),%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_037fe1_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_037fec_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _017e8d_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _017eca_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    _0bf2f4_data,%eax
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    0x00012c(%eax),%eax
		call   _01b0f8_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _017eca_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038054_jump:
		mov    $0x000001,%eax
		ret    



_03805c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0aa180_data,%bx
		mov    _0c0f44_data,%edx
		mov    _0c0f9c_data,%eax
		call   _037efc_func
		mov    _0c0f78_data,%edx
		mov    _0c0f44_data,%eax
		call   _037f70_func
		call   _037fec_func
		mov    $_038054_jump,%eax
		call   _03eb48_func
		mov    $0x00002a,%edi
		mov    $0x000036,%esi
		xor    %ecx,%ecx

	_0380a3_jump:
		mov    $0x00000f,%ebx
		mov    %cl,%dl
		mov    %bx,_0aa180_data

	_0380b1_jump:
		cmp    $0x000007,%dl
		ja     _0380ea_jump
		call   _018b0f_func
		call   _018aff_func
		mov    %esi,%eax
		call   _041ce0_func
		test   %al,%al
		je     _0380d8_jump
		mov    %edi,%eax
		call   _041ce0_func
		test   %al,%al
		je     _0380d8_jump
		inc    %dl

	_0380d8_jump:
		mov    _0aa180_data,%bx
		dec    %bx
		mov    %bx,_0aa180_data
		jne    _0380b1_jump

	_0380ea_jump:
		mov    _0aa180_data,%bx
		cmp    $0x00000c,%dl
		jb     _0380f8_jump
		mov    %cl,%dl

	_0380f8_jump:
		mov    %bx,_0aa180_data
		test   %dl,%dl
		je     _038143_jump
		mov    _0aa182_data,%ah
		xor    $0x000001,%ah
		mov    _0a7c9d_data,%dl
		mov    %ah,_0aa182_data
		cmp    %dl,%cl
		jne    _038139_jump
		mov    _0c0f78_data,%edx
		mov    _0c0f44_data,%eax
		call   _037f70_func
		cmp    _0aa182_data,%cl
		jne    _038139_jump
		call   _037fec_func

	_038139_jump:
		mov    $_038054_jump,%eax
		call   _03eb48_func

	_038143_jump:
		call   _026d40_func
		cmp    _0c33a4_data,%cl
		jne    _0380a3_jump
		cmpb   $0x000000,_0a7c9d_data
		jne    _038177_jump
		mov    _0c0f78_data,%edx
		mov    _0c0f44_data,%eax
		call   _037f70_func
		mov    $_038054_jump,%eax
		call   _03eb48_func

	_038177_jump:
		mov    _0aa180_data,%bx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038184_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		call   _026d40_func
		mov    _0c33a0_data,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    _0aa182_data,%edx
		mov    _0aa184_data,%di
		sar    $0x000010,%edx
		inc    %edi
		cmp    %eax,%edx
		jge    _03825a_jump
		mov    $0x0000a0,%ebx
		mov    _0c0f50_data,%edx
		mov    _0c0f44_data,%eax
		mov    %di,_0aa184_data
		call   _08028c_func
		mov    $0x0000a0,%ebx
		mov    _0c0f50_data,%edx
		mov    _0c0f44_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _08028c_func
		mov    $0x000036,%eax
		call   _041ce0_func
		test   %al,%al
		je     _03823b_jump
		mov    $0x00002a,%eax
		call   _041ce0_func
		test   %al,%al
		je     _03823b_jump
		mov    _0aa188_data,%ebx
		inc    %ebx
		mov    %ebx,_0aa188_data
		cmp    $0x000005,%ebx
		jl     _038243_jump
		mov    _0aa182_data,%bl
		xor    %esi,%esi
		xor    $0x000001,%bl
		mov    %esi,_0aa188_data
		mov    %bl,_0aa182_data
		jmp    _038243_jump

	_03823b_jump:
		xor    %edx,%edx
		mov    %edx,_0aa188_data

	_038243_jump:
		cmpb   $0x000000,_0aa182_data
		jne    _0384b5_jump
		call   _037fec_func
		jmp    _0384b5_jump

	_03825a_jump:
		jne    _03827c_jump
		mov    %di,_0aa184_data
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0aa186_data
		xor    %edx,%edx
		mov    %ah,_0aa182_data
		mov    %edx,_0aa188_data

	_03827c_jump:
		cmpb   $0x000000,_0aa182_data
		jne    _03838a_jump
		cmpl   $0x000014,_0aa188_data
		jl     _0382b5_jump
		mov    $0x000036,%eax
		call   _041ce0_func
		test   %al,%al
		je     _0382b5_jump
		mov    $0x00002a,%eax
		call   _041ce0_func
		test   %al,%al
		je     _0382b5_jump
		movb   $0x000001,_0aa182_data

	_0382b5_jump:
		mov    _0aa186_data,%si
		test   %si,%si
		jne    _03837b_jump
		mov    _0c0f50_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _064520_func
		and    $0x00ffff,%eax
		mov    %eax,_0aa188_data
		call   _0647d8_func
		call   _037fec_func
		cmpl   $0x000000,_0aa188_data
		jne    _0384b5_jump
		negw   _0aa180_data
		call   _037cc4_func
		mov    _0aa17e_data,%edx
		mov    %al,_0aa17c_data
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		call   _0640bc_func
		cmpw   $0x000000,_0aa180_data
		jge    _0384b5_jump
		mov    $0x0000a0,%ebx
		mov    _0c0f50_data,%edx
		mov    _0c0f44_data,%eax
		call   _08028c_func
		mov    $0x0000a0,%ebx
		mov    _0c0f50_data,%edx
		mov    _0c0f44_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _08028c_func
		call   _037fec_func
		xor    %eax,%eax
		mov    _0c33a0_data,%al
		mov    %ax,_0aa186_data
		jmp    _0384b5_jump

	_03837b_jump:
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0aa186_data
		jmp    _0384b5_jump

	_03838a_jump:
		cmpl   $0x000000,_0aa188_data
		jne    _03839d_jump
		cmpw   $0x000000,_0aa180_data
		jl     _0383dc_jump

	_03839d_jump:
		mov    _0c0f50_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _064520_func
		and    $0x00ffff,%eax
		mov    %eax,_0aa188_data
		call   _0647d8_func
		cmpl   $0x000000,_0aa188_data
		jne    _0384b5_jump
		negw   _0aa180_data
		jmp    _038498_jump

	_0383dc_jump:
		mov    $0x0000a0,%ebx
		mov    _0c0f50_data,%edx
		mov    _0c0f44_data,%eax
		call   _08028c_func
		mov    $0x0000a0,%ebx
		mov    _0c0f50_data,%edx
		mov    _0c0f44_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _08028c_func
		call   _018b0f_func
		call   _018aff_func
		mov    _0a7c98_data,%edi
		mov    _0c0f50_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _038436_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_038436_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %dl,%dl

	_03843f_jump:
		mov    $0x000036,%eax
		call   _041ce0_func
		test   %al,%al
		je     _03845b_jump
		mov    $0x00002a,%eax
		call   _041ce0_func
		test   %al,%al
		jne    _03846a_jump

	_03845b_jump:
		cmp    _0c33a4_data,%dl
		je     _03846a_jump
		call   _026d40_func
		jmp    _03843f_jump

	_03846a_jump:
		mov    _0c33a4_data,%al
		xor    %ch,%ch
		xor    %ebx,%ebx
		mov    %ch,_0aa182_data
		mov    %bx,_0aa186_data
		test   %al,%al
		je     _0384b5_jump
		xor    %edi,%edi
		mov    $0xfffffffc,%ecx
		mov    %edi,_0aa188_data
		mov    %cx,_0aa180_data

	_038498_jump:
		call   _037cc4_func
		mov    _0aa17e_data,%edx
		mov    %al,_0aa17c_data
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		call   _0640bc_func

	_0384b5_jump:
		cmpb   $0x000000,_0c33a4_data
		jne    _03851f_jump
		mov    $0x0000a0,%ebx
		mov    _0c0f50_data,%edx
		mov    _0c0f44_data,%eax
		call   _08028c_func
		mov    $0x0000a0,%ebx
		mov    _0c0f50_data,%edx
		mov    _0c0f44_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _08028c_func
		call   _018b0f_func
		call   _018aff_func
		mov    _0a7c98_data,%edi
		mov    _0c0f50_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _038518_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_038518_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_03851f_jump:
		cmpb   $0x000000,_0c33a4_data
		sete   %al
		xor    %ah,%ah
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038534_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ah,%ah
		mov    _0c3372_data,%dl
		mov    %ah,_0aa182_data
		test   %dl,%dl
		je     _03854e_jump
		call   _071f30_func

	_03854e_jump:
		cmpb   $0x000000,_0a7c9d_data
		jne    _0385a9_jump
		call   _037cc4_func
		mov    $0xfffffffc,%edx
		mov    _0c0f50_data,%ebx
		mov    %al,_0aa17c_data
		mov    %dx,_0aa180_data
		mov    $0xfffffffc,%edx
		and    $0x0000ff,%eax
		mov    %ebx,%ecx
		call   _064468_func
		test   %al,%al
		je     _0385a9_jump
		xor    %ebx,%ebx
		mov    $_038184_func,%eax
		mov    %bx,_0aa184_data
		mov    %bx,_0aa186_data
		call   _03eb48_func
		call   _06442c_case
		jmp    _0385ae_jump

	_0385a9_jump:
		call   _03805c_func

	_0385ae_jump:
		cmpb   $0x000000,_0c3372_data
		je     _0385bc_jump
		call   _071f44_func

	_0385bc_jump:
		xor    %bh,%bh
		xor    %edx,%edx
		mov    %bh,_0c33a4_data
		mov    %edx,_0bf31c_data
		call   _072c38_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0385e0_func:
		push   %esi
		mov    %ebx,%esi
		add    %ecx,%eax
		cmpb   $0x000020,(%eax)
		jbe    _038601_jump

	_0385ea_jump:
		cmpb   $0x00002c,(%eax)
		je     _038601_jump
		cmp    %esi,%ecx
		jge    _038601_jump
		mov    (%eax),%bl
		inc    %eax
		mov    %bl,(%edx)
		inc    %edx
		mov    (%eax),%bh
		inc    %ecx
		cmp    $0x000020,%bh
		ja     _0385ea_jump

	_038601_jump:
		cmp    %esi,%ecx
		jl     _03860e_jump
		mov    $0xffffffff,%ecx
		mov    %ecx,%eax
		pop    %esi
		ret    

	_03860e_jump:
		movb   $0x000000,(%edx)

	_038611_jump:
		mov    (%eax),%bh
		cmp    $0x000020,%bh
		jbe    _03861d_jump
		cmp    $0x00002c,%bh
		jne    _038625_jump

	_03861d_jump:
		cmp    %esi,%ecx
		jge    _038625_jump
		inc    %eax
		inc    %ecx
		jmp    _038611_jump

	_038625_jump:
		cmp    %esi,%ecx
		jl     _03862b_jump
		mov    %esi,%ecx

	_03862b_jump:
		mov    %ecx,%eax
		pop    %esi
		ret    



_038630_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		xor    %ecx,%ecx
		push   $0x000180
		mov    %dl,%cl
		push   $0x000200
		mov    %ecx,%edx
		call   _065c90_func
		push   %eax
		call   _086d88_func
		movswl %ax,%esi
		add    $0x00000c,%esp
		cmp    $0xffffffff,%esi
		jne    _038675_jump
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   _065c90_func
		call   _086ffa_func
		call   _086d6b_func
		jmp    _0387ea_jump

	_038675_jump:
		mov    %esi,%eax
		call   _087044_func
		mov    %eax,%ebx
		mov    %eax,%edx
		mov    $_0c1004_data,%eax
		call   _084bac_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _0387ea_jump
		mov    %eax,%edx
		mov    %esi,%eax
		call   _087081_func
		mov    %esi,%eax
		call   _08717c_func
		xor    %eax,%eax
		mov    0x000004(%ecx),%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x000005(%ecx),%al
		add    %eax,%edx
		mov    %dx,_0d5a6c_data
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000006(%ecx),%dl
		mov    0x000007(%ecx),%al
		shl    $0x000008,%edx
		add    %eax,%edx
		mov    %dx,_0d5a6a_data
		mov    _0d5a68_data,%eax
		mov    _0d5a6a_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		mov    %eax,_0d5a44_data
		lea    (%eax,%eax,1),%edx
		mov    $_0c1004_data,%eax
		xor    %ebx,%ebx
		call   _084bac_func
		mov    _0d5a44_data,%esi
		mov    %eax,_0d5a5c_data
		xor    %edx,%edx
		test   %esi,%esi
		jle    _038743_jump
		mov    %ecx,%eax

	_03870d_jump:
		lea    0x000000(,%edx,2),%edi
		xor    %ch,%ch
		movzbw 0x000008(%eax),%si
		mov    0x000009(%eax),%cl
		shl    $0x000008,%esi
		add    %ecx,%esi
		mov    _0d5a5c_data,%ecx
		add    %edi,%ecx
		mov    %si,(%ecx)
		cmp    %si,%bx
		jae    _038735_jump
		mov    %esi,%ebx

	_038735_jump:
		mov    _0d5a44_data,%edi
		inc    %edx
		add    $0x000002,%eax
		cmp    %edi,%edx
		jl     _03870d_jump

	_038743_jump:
		xor    %eax,%eax
		mov    %bx,%ax
		shl    $0x000002,%eax
		lea    0x000004(%eax),%edx
		mov    $_0c1004_data,%eax
		call   _084bac_func
		mov    %eax,_0d5a64_data
		xor    %edx,%edx
		xor    %eax,%eax
		jmp    _038771_jump

	_038763_jump:
		mov    _0d5a64_data,%ecx
		inc    %edx
		movb   $0x000000,(%ecx,%eax,1)
		add    $0x000004,%eax

	_038771_jump:
		xor    %ecx,%ecx
		mov    %bx,%cx
		cmp    %ecx,%edx
		jle    _038763_jump
		mov    _0d5a44_data,%ebp
		xor    %edx,%edx
		test   %ebp,%ebp
		jle    _0387b0_jump
		xor    %eax,%eax

	_038788_jump:
		mov    _0d5a5c_data,%ecx
		mov    (%ecx,%eax,1),%cx
		mov    _0d5a64_data,%esi
		and    $0x00ffff,%ecx
		inc    %edx
		movb   $0x000001,(%esi,%ecx,4)
		mov    _0d5a44_data,%ecx
		add    $0x000002,%eax
		cmp    %ecx,%edx
		jl     _038788_jump

	_0387b0_jump:
		mov    $0x000001,%esi
		mov    $0x000004,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    %bx,%cx
		cmp    %ecx,%esi
		jle    _0387cb_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0387cb_jump:
		mov    _0d5a64_data,%edi
		add    %edx,%edi
		cmpb   $0x000000,(%edi)
		je     _0387dd_jump
		mov    %ax,0x000002(%edi)
		inc    %eax

	_0387dd_jump:
		add    $0x000004,%edx
		inc    %esi
		xor    %ecx,%ecx
		mov    %bx,%cx
		cmp    %ecx,%esi
		jle    _0387cb_jump

	_0387ea_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0387f0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ebx
		push   $0x000180
		movzbl %dl,%edi
		push   $0x000200
		mov    %edi,%edx
		call   _065c14_func
		push   %eax
		call   _086d88_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		jne    _038837_jump
		mov    %edi,%edx
		mov    %ebx,%eax
		call   _065c14_func
		call   _086ffa_func
		call   _086d6b_func
		jmp    _038adf_jump

	_038837_jump:
		mov    %ecx,%eax
		call   _087044_func
		mov    %eax,%ebx
		mov    %eax,0x000014(%esp)
		call   _084f3c_func
		mov    %eax,%edx
		mov    %eax,0x000008(%esp)
		mov    %eax,0x00000c(%esp)
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%ebp
		mov    %eax,(%esp)
		test   %edx,%edx
		je     _038adf_jump
		test   %eax,%eax
		je     _038adf_jump
		mov    %ecx,%eax
		call   _087081_func
		mov    %ecx,%eax
		xor    %edi,%edi
		call   _08717c_func
		xor    %ecx,%ecx

	_038884_jump:
		mov    0x000014(%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ebp,%edx
		call   _0385e0_func
		mov    %eax,%ecx
		cmp    $0xffffffff,%eax
		je     _0388ad_jump
		mov    $_0a13b8_data,%edx
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _038884_jump
		inc    %edi
		jmp    _038884_jump

	_0388ad_jump:
		movswl %di,%edx
		xor    %eax,%ecx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,8),%edx
		mov    $_0c1004_data,%eax
		mov    %di,_0d5a68_data
		call   _084bac_func
		xor    %edx,%edx
		mov    %eax,_0d5a60_data
		mov    %dx,0x000018(%esp)
		xor    %edx,%edx
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000010(%esp)

	_0388e9_jump:
		mov    0x000014(%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ebp,%edx
		call   _0385e0_func
		mov    %eax,%ecx
		cmp    $0xffffffff,%eax
		je     _038ace_jump
		mov    $_0a13b8_data,%edx
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _038946_jump
		mov    0x000018(%esp),%ebx
		inc    %ebx
		mov    0x000004(%esp),%eax
		mov    %bx,0x000018(%esp)
		movl   $0x000000,0x000014(%eax)
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000018,%eax,%eax
		mov    _0d5a60_data,%edx
		xor    %edi,%edi
		add    %eax,%edx
		mov    %edi,0x000010(%esp)
		mov    %edx,0x000004(%esp)
		jmp    _0388e9_jump

	_038946_jump:
		mov    $_0a13c0_data,%edx
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _0388e9_jump
		cmpl   $0x000000,0x000010(%esp)
		je     _038970_jump
		mov    $0x000018,%edx
		mov    $_0c1004_data,%eax
		call   _084bac_func
		mov    %eax,0x000004(%esp)

	_038970_jump:
		mov    0x000014(%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ebp,%edx
		call   _0385e0_func
		mov    0x000004(%esp),%edx
		mov    %eax,%ecx
		mov    %ebp,%eax
		mov    0x000014(%esp),%ebx
		call   _0874cf_func
		mov    %al,(%edx)
		mov    0x000008(%esp),%eax
		mov    %ebp,%edx
		call   _0385e0_func
		mov    0x000004(%esp),%edx
		mov    %eax,%ecx
		mov    %ebp,%eax
		mov    0x000014(%esp),%ebx
		call   _0874cf_func
		mov    %ax,0x000002(%edx)
		mov    0x000008(%esp),%eax
		mov    %ebp,%edx
		call   _0385e0_func
		mov    0x000004(%esp),%edx
		mov    %eax,%ecx
		mov    %ebp,%eax
		mov    0x000014(%esp),%ebx
		call   _0874cf_func
		mov    %ax,0x000004(%edx)
		mov    0x000008(%esp),%eax
		mov    %ebp,%edx
		mov    %ebp,%edi
		call   _0385e0_func
		mov    %eax,%ebx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $_0c1004_data,%eax
		lea    0x000001(%ecx),%edx
		mov    %ebp,%esi
		call   _084bac_func
		mov    0x000004(%esp),%edx
		mov    %eax,%edi
		mov    %ebx,%ecx
		mov    0x000014(%esp),%ebx
		mov    %eax,0x000008(%edx)
		push   %edi

	_038a0a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038a22_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038a0a_jump

	_038a22_jump:
		pop    %edi
		mov    0x000008(%esp),%eax
		mov    %ebp,%edx
		call   _0385e0_func
		mov    0x000004(%esp),%edx
		mov    $0x000009,%ebx
		mov    %eax,%ecx
		mov    $_0a13c8_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		jne    _038a63_jump
		mov    0x000004(%esp),%eax
		movb   $0x000000,0x00000c(%eax)
		mov    %ebp,%eax
		mov    0x000004(%esp),%edx
		call   _0874cf_func
		mov    %ax,0x000010(%edx)
		jmp    _038a77_jump

	_038a63_jump:
		mov    %ebp,%eax
		mov    0x000004(%esp),%edx
		call   _0874cf_func
		movw   $0x000000,0x000010(%edx)
		mov    %al,0x00000c(%edx)

	_038a77_jump:
		mov    0x000014(%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ebp,%edx
		call   _0385e0_func
		mov    0x000004(%esp),%edx
		mov    %eax,%ecx
		mov    %ebp,%eax
		mov    0x000014(%esp),%ebx
		call   _0874cf_func
		mov    %al,0x00000d(%edx)
		mov    0x000008(%esp),%eax
		mov    %ebp,%edx
		call   _0385e0_func
		mov    0x000004(%esp),%edx
		mov    %eax,%ecx
		mov    %ebp,%eax
		mov    0x000010(%esp),%esi
		call   _0874cf_func
		mov    %ax,0x00000e(%edx)
		test   %esi,%esi
		je     _038ac1_jump
		mov    %edx,0x000014(%esi)

	_038ac1_jump:
		mov    0x000004(%esp),%eax
		mov    %eax,0x000010(%esp)
		jmp    _0388e9_jump

	_038ace_jump:
		mov    0x00000c(%esp),%eax
		call   _0850d4_func
		mov    (%esp),%eax
		call   _0850d4_func

	_038adf_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_038bcc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000064,%esp
		mov    %dl,%cl
		xor    %edx,%edx
		mov    $_0a13e8_data,%eax
		mov    %cl,%dl
		call   _065ee0_func
		mov    $_0a13ec_data,%edx
		mov    %eax,%ebx
		mov    $_0a13f0_data,%eax
		mov    %esp,%edi
		call   _065590_func
		mov    %eax,%esi
		mov    $_0a13f4_data,%edx
		push   %edi

	_038bfe_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038c16_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038bfe_jump

	_038c16_jump:
		pop    %edi
		mov    %esp,%eax
		call   _085d60_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _038c2b_jump
		mov    %esp,%eax
		call   _020150_func

	_038c2b_jump:
		push   $_0a13f8_data
		push   %ebx
		call   _08753c_func
		add    $0x000008,%esp
		push   $_0a1428_data
		push   %ebx
		xor    %edx,%edx
		call   _08753c_func
		mov    _0d5a6e_data,%si
		add    $0x000008,%esp
		test   %si,%si
		jle    _038c87_jump

	_038c55_jump:
		movswl %dx,%eax
		imul   $0x00000c,%eax,%eax
		cmpl   $0x000008,_0d5588_data(%eax)
		jle    _038c7a_jump
		mov    _0d5580_data(%eax),%edi
		push   %edi
		push   %edi
		push   $_0a1438_data
		push   %ebx
		call   _08753c_func
		add    $0x000010,%esp

	_038c7a_jump:
		mov    _0d5a6e_data,%di
		inc    %edx
		cmp    %di,%dx
		jl     _038c55_jump

	_038c87_jump:
		push   $_0a1448_data
		push   %ebx
		call   _08753c_func
		add    $0x000008,%esp
		mov    %ebx,%eax
		call   _086112_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _038cb0_func
		add    $0x000064,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_038cb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00006c,%esp
		mov    %al,0x000068(%esp)
		xor    %edx,%edx
		mov    _0d5a6e_data,%bx
		mov    %dx,0x000064(%esp)
		test   %bx,%bx
		jle    _038d9b_jump

	_038cd3_jump:
		mov    0x000062(%esp),%ecx
		sar    $0x000010,%ecx
		imul   $0x00000c,%ecx,%ecx
		xor    %edx,%edx
		mov    $_0a13e8_data,%eax
		mov    0x000068(%esp),%dl
		call   _065e64_func
		mov    $_0a144c_data,%edx
		mov    _0d5580_data(%ecx),%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		mov    %esp,%edi
		call   _065590_func
		mov    %eax,%esi
		push   %edi

	_038d06_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038d1e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038d06_jump

	_038d1e_jump:
		pop    %edi
		push   $0x000180
		push   $0x000262
		lea    0x000008(%esp),%eax
		push   %eax
		call   _086d88_func
		mov    %eax,%esi
		cwtl   
		add    $0x00000c,%esp
		cmp    $0xffffffff,%eax
		jne    _038d4c_jump
		mov    %esp,%eax
		call   _086ffa_func
		call   _086d6b_func
		jmp    _038d81_jump

	_038d4c_jump:
		mov    _0d5588_data(%ecx),%ebx
		mov    _0d5584_data(%ecx),%edx
		call   _08719c_func
		cmpl   $0x007530,_0d5588_data(%ecx)
		jle    _038d79_jump
		mov    %esp,%eax
		push   %eax
		push   $_0a1450_data
		call   _085441_func
		add    $0x000008,%esp

	_038d79_jump:
		movswl %si,%eax
		call   _08717c_func

	_038d81_jump:
		mov    0x000064(%esp),%ecx
		inc    %ecx
		mov    _0d5a6e_data,%si
		mov    %cx,0x000064(%esp)
		cmp    %si,%cx
		jl     _038cd3_jump

	_038d9b_jump:
		add    $0x00006c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038da4_func:
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		xor    %ah,%ah
		mov    %ah,(%esp)
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%ebx

	_038dbe_jump:
		mov    %ebx,%edx
		mov    (%ecx),%eax
		call   _0470cc_func
		mov    %eax,(%ecx)
		test   %eax,%eax
		je     _038df9_jump
		mov    $_0a1488_data,%edx
		mov    %ebx,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _038dbe_jump
		mov    %ebx,%edx
		mov    (%ecx),%eax
		call   _0470cc_func
		mov    %esi,%edx
		mov    %eax,(%ecx)
		mov    %ebx,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _038dbe_jump
		movb   $0x000001,(%esp)

	_038df9_jump:
		mov    %ebx,%eax
		call   _0850d4_func
		mov    (%esp),%al
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		ret    



_038e0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		sub    $0x000038,%esp
		mov    %eax,%esi
		mov    %esp,%edx
		mov    (%eax),%eax
		call   _0470cc_func
		mov    %eax,%ebx
		xor    %ah,%ah
		mov    $_0a1490_data,%edx
		mov    %ah,0x000034(%esp)
		mov    %esp,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _038edf_jump
		mov    $_0a1494_data,%ebp
		mov    %ebx,(%esi)

	_038e42_jump:
		mov    %esp,%eax
		mov    %ebp,%edx
		call   _0853a0_func
		test   %eax,%eax
		je     _038ee4_jump
		mov    %esp,%edx
		mov    (%esi),%eax
		call   _0470cc_func
		mov    %eax,(%esi)
		cmpb   $0x00004c,(%esp)
		jne    _038e81_jump
		lea    0x000001(%esp),%eax
		call   _086cfe_func
		mov    _0c3140_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jne    _038e42_jump
		movb   $0x000001,0x000034(%esp)
		jmp    _038e42_jump

	_038e81_jump:
		cmpb   $0x000000,0x000034(%esp)
		jne    _038e42_jump
		mov    _0d5a68_data,%dx
		xor    %ecx,%ecx
		test   %dx,%dx
		jg     _038ed3_jump
		jmp    _038e42_jump

	_038e98_jump:
		movswl %cx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0d5a60_data,%ebx
		add    %eax,%ebx

	_038ea6_jump:
		mov    %esp,%eax
		mov    0x000008(%ebx),%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _038ebb_jump
		movb   $0x000001,0x000034(%esp)
		jmp    _038ec2_jump

	_038ebb_jump:
		mov    0x000014(%ebx),%ebx
		test   %ebx,%ebx
		jne    _038ea6_jump

	_038ec2_jump:
		mov    _0d5a68_data,%bx
		inc    %ecx
		cmp    %bx,%cx
		jge    _038e42_jump

	_038ed3_jump:
		cmpb   $0x000000,0x000034(%esp)
		je     _038e98_jump
		jmp    _038e42_jump

	_038edf_jump:
		movb   $0x000001,0x000034(%esp)

	_038ee4_jump:
		mov    0x000034(%esp),%al
		add    $0x000038,%esp
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038ef4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		push   $0x000180
		xor    %edx,%edx
		push   $0x000200
		mov    $_0a149c_data,%eax
		mov    %dx,_0d5a6e_data
		call   _066004_func
		push   %eax
		call   _086d88_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		jne    _038f44_jump
		mov    $_0a149c_data,%eax
		call   _066004_func
		call   _086ffa_func
		call   _086d6b_func
		jmp    _039d1e_jump

	_038f44_jump:
		mov    %ecx,%eax
		call   _087044_func
		mov    %eax,%ebx
		mov    %eax,0x00000c(%esp)
		call   _084f3c_func
		mov    %eax,0x000004(%esp)
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    0x000004(%esp),%edx
		mov    %eax,%ebp
		mov    %eax,0x000010(%esp)
		mov    %edx,(%esp)
		test   %edx,%edx
		je     _039d1e_jump
		test   %eax,%eax
		je     _039d1e_jump
		mov    %ecx,%eax
		call   _087081_func
		mov    %ecx,%eax
		call   _08717c_func
		xor    %ebx,%ebx
		mov    _0d5a44_data,%ecx
		mov    %ebx,0x00001c(%esp)
		test   %ecx,%ecx
		jle    _0398d9_jump
		mov    %ebx,0x000014(%esp)

	_038fa7_jump:
		mov    0x000014(%esp),%ecx
		mov    _0d5a5c_data,%eax
		add    %ecx,%eax
		mov    (%eax),%ax
		test   %ax,%ax
		je     _0398b7_jump
		mov    _0d5a64_data,%edx
		and    $0x00ffff,%eax
		mov    0x000002(%edx,%eax,4),%ax
		mov    _0d5a66_data,%edx
		and    $0x00ffff,%eax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jge    _0398b7_jump
		imul   $0x000018,%eax,%eax
		mov    _0d5a60_data,%edx
		add    %eax,%edx
		mov    %edx,0x000024(%esp)

	_038ff3_jump:
		mov    (%esp),%eax
		mov    0x000024(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    %eax,0x000004(%esp)
		lea    0x000004(%esp),%eax
		mov    0x000008(%edx),%edx
		call   _038da4_func
		test   %al,%al
		je     _0398a4_jump
		mov    0x000004(%esp),%eax
		mov    %ebp,%edx
		call   _0470cc_func
		xor    %bl,%bl
		xor    %esi,%esi
		mov    %eax,0x000004(%esp)
		mov    %esi,0x000030(%esp)
		jmp    _03904b_jump

	_03902f_jump:
		imul   $0x00000c,%eax,%eax
		mov    _0d5580_data(%eax),%edx
		mov    %ebp,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _039047_jump
		mov    $0x000001,%bl
		jmp    _03905f_jump

	_039047_jump:
		incl   0x000030(%esp)

	_03904b_jump:
		xor    %eax,%eax
		mov    _0d5a6c_data,%edx
		mov    0x000030(%esp),%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _03902f_jump

	_03905f_jump:
		test   %bl,%bl
		jne    _0390d1_jump
		xor    %ebx,%ebx
		mov    0x000030(%esp),%bx
		imul   $0x00000c,%ebx,%ebx
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $_0c1004_data,%eax
		lea    0x000001(%ecx),%edx
		mov    %ebp,%esi
		call   _084bac_func
		mov    $0x007530,%edx
		mov    %eax,%edi
		mov    %eax,_0d5580_data(%ebx)
		push   %edi

	_039096_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0390ae_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039096_jump

	_0390ae_jump:
		pop    %edi
		mov    $_0c1004_data,%eax
		call   _084bac_func
		mov    %eax,_0d5584_data(%ebx)
		movb   $0x000000,(%eax)
		xor    %eax,%eax
		mov    %eax,_0d5588_data(%ebx)
		incw   _0d5a6e_data

	_0390d1_jump:
		mov    $_0a14a4_data,%eax
		mov    %ebp,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _0390eb_jump
		movl   $0x000003,0x00003c(%esp)
		jmp    _0390f3_jump

	_0390eb_jump:
		movl   $0x000001,0x00003c(%esp)

	_0390f3_jump:
		mov    0x000004(%esp),%eax
		mov    0x00003c(%esp),%esi
		xor    %ecx,%ecx
		mov    %eax,0x000020(%esp)
		mov    %ecx,0x000034(%esp)
		test   %si,%si
		jle    _0398a4_jump

	_03910e_jump:
		mov    0x000020(%esp),%eax
		mov    %ebp,%edx
		mov    %eax,0x000004(%esp)
		call   _0470cc_func
		mov    %ebp,%edx
		mov    %eax,0x000004(%esp)
		call   _0470cc_func
		xor    %edx,%edx
		mov    0x000030(%esp),%dx
		imul   $0x00000c,%edx,%edx
		mov    %ebp,%edi
		mov    %eax,0x000004(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    _0d5588_data(%edx),%esi
		add    %ecx,%esi
		mov    _0d5584_data(%edx),%edi
		mov    %esi,_0d5588_data(%edx)
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039162_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03917a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039162_jump

	_03917a_jump:
		pop    %edi
		mov    $_0a14a8_data,%esi
		mov    _0d5584_data(%edx),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03918f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0391a7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03918f_jump

	_0391a7_jump:
		pop    %edi
		mov    0x000024(%esp),%edi
		mov    0x000008(%edi),%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		add    $0x000002,%ecx
		mov    _0d5588_data(%edx),%edi
		add    %ecx,%edi
		mov    0x000024(%esp),%esi
		mov    %edi,_0d5588_data(%edx)
		mov    0x000008(%esi),%esi
		mov    _0d5584_data(%edx),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0391e0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0391f8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0391e0_jump

	_0391f8_jump:
		pop    %edi
		mov    $_0a14ac_data,%esi
		mov    _0d5584_data(%edx),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03920d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039225_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03920d_jump

	_039225_jump:
		pop    %edi
		mov    $_0a14a8_data,%ebx

	_03922b_jump:
		mov    0x000004(%esp),%eax
		mov    %ebp,%edx
		call   _0470cc_func
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000030(%esp),%ax
		imul   $0x00000c,%eax,%eax
		mov    %ebp,%edi
		mov    %eax,0x000008(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000008(%esp),%eax
		inc    %ecx
		mov    _0d5588_data(%eax),%edx
		mov    %ebp,%esi
		add    %ecx,%edx
		mov    _0d5584_data(%eax),%edi
		mov    %edx,_0d5588_data(%eax)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039278_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039290_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039278_jump

	_039290_jump:
		pop    %edi
		mov    0x000008(%esp),%edi
		mov    %ebx,%esi
		mov    _0d5584_data(%edi),%edi
		mov    $_0a14b0_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0392ab_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0392c3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0392ab_jump

	_0392c3_jump:
		pop    %edi
		mov    %ebp,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _03922b_jump
		mov    0x000008(%esp),%edi
		mov    $_0a14b4_data,%esi
		mov    _0d5584_data(%edi),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0392eb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039303_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0392eb_jump

	_039303_jump:
		pop    %edi
		mov    0x00001c(%esp),%eax
		mov    _0d5a6a_data,%ebx
		mov    %eax,%edx
		sar    $0x000010,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000008(%esp),%eax
		incl   _0d5588_data(%eax)
		mov    0x000024(%esp),%eax
		mov    (%eax),%eax
		shl    $0x000006,%edx
		sar    $0x000010,%eax
		mov    $0x00000a,%ebx
		add    %edx,%eax
		mov    %ebp,%edx
		mov    %ebp,%edi
		call   _0873e0_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000008(%esp),%eax
		inc    %ecx
		mov    _0d5588_data(%eax),%esi
		add    %ecx,%esi
		mov    _0d5584_data(%eax),%edi
		mov    %esi,_0d5588_data(%eax)
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03936c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039384_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03936c_jump

	_039384_jump:
		pop    %edi
		mov    0x000008(%esp),%edi
		mov    $_0a14a8_data,%esi
		mov    _0d5584_data(%edi),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03939d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0393b5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03939d_jump

	_0393b5_jump:
		pop    %edi
		mov    0x00001c(%esp),%eax
		mov    _0d5a6a_data,%ebx
		mov    %eax,%edx
		sar    $0x000010,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000024(%esp),%edx
		mov    0x000002(%edx),%edx
		shl    $0x000006,%eax
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		add    %edx,%eax
		mov    %ebp,%edx
		mov    %ebp,%edi
		call   _0873e0_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000008(%esp),%eax
		inc    %ecx
		add    %ecx,_0d5588_data(%eax)
		mov    %ebp,%esi
		mov    _0d5584_data(%eax),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03940d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039425_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03940d_jump

	_039425_jump:
		pop    %edi
		mov    0x000008(%esp),%edi
		mov    $_0a14a8_data,%esi
		mov    _0d5584_data(%edi),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03943e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039456_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03943e_jump

	_039456_jump:
		pop    %edi
		mov    0x000004(%esp),%eax
		mov    %ebp,%edx
		call   _0470cc_func
		mov    %ebp,%edx
		mov    %eax,0x000004(%esp)
		call   _0470cc_func
		mov    0x000024(%esp),%edx
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    $0x00000a,%ebx
		mov    0x00000d(%edx),%al
		mov    %ebp,%edx
		mov    %ebp,%edi
		call   _0873e0_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000008(%esp),%eax
		inc    %ecx
		mov    _0d5588_data(%eax),%edx
		mov    %ebp,%esi
		add    %ecx,%edx
		mov    _0d5584_data(%eax),%edi
		mov    %edx,_0d5588_data(%eax)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0394b6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0394ce_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0394b6_jump

	_0394ce_jump:
		pop    %edi
		mov    0x000008(%esp),%edi
		mov    $_0a14a8_data,%esi
		mov    _0d5584_data(%edi),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0394e7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0394ff_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0394e7_jump

	_0394ff_jump:
		pop    %edi
		mov    0x000024(%esp),%eax
		mov    $0x00000a,%ebx
		mov    0x00000c(%eax),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		mov    %ebp,%edi
		call   _0873e0_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000008(%esp),%eax
		inc    %ecx
		mov    _0d5588_data(%eax),%ebx
		mov    %ebp,%esi
		add    %ecx,%ebx
		mov    _0d5584_data(%eax),%edi
		mov    %ebx,_0d5588_data(%eax)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039546_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03955e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039546_jump

	_03955e_jump:
		pop    %edi
		mov    0x000008(%esp),%edi
		mov    $_0a14a8_data,%esi
		mov    _0d5584_data(%edi),%edi
		xor    %ebx,%ebx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039579_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039591_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039579_jump

	_039591_jump:
		pop    %edi
		mov    %ebx,0x000040(%esp)

	_039596_jump:
		mov    0x000004(%esp),%eax
		mov    %ebp,%edx
		call   _0470cc_func
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		je     _03980e_jump
		mov    $_0a1488_data,%edx
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		jne    _03980e_jump
		cmpw   $0x000007,0x000040(%esp)
		jne    _03977d_jump
		mov    0x000024(%esp),%edx
		mov    $0x000008,%ebx
		mov    $_0a14b8_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		je     _03973f_jump
		mov    0x000024(%esp),%edx
		mov    $0x000008,%ebx
		mov    $_0a14c4_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		je     _03973f_jump
		mov    0x000024(%esp),%edx
		mov    $0x000008,%ebx
		mov    $_0a14d0_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		je     _03973f_jump
		mov    0x000024(%esp),%edx
		mov    $0x00000f,%ebx
		mov    $_0a14dc_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		je     _03973f_jump
		mov    0x000024(%esp),%edx
		mov    $0x00000f,%ebx
		mov    $_0a14ec_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		je     _03973f_jump
		mov    0x000024(%esp),%edx
		mov    $0x000006,%ebx
		mov    $_0a14fc_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		je     _03973f_jump
		mov    0x000024(%esp),%edx
		mov    $0x00000a,%ebx
		mov    $_0a1504_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		je     _03973f_jump
		mov    0x000024(%esp),%edx
		mov    $0x00000a,%ebx
		mov    $_0a1510_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		je     _03973f_jump
		mov    0x000024(%esp),%edx
		mov    $0x00000c,%ebx
		mov    $_0a151c_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		je     _03973f_jump
		mov    0x000024(%esp),%edx
		mov    $0x00000b,%ebx
		mov    $_0a152c_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		je     _03973f_jump
		mov    0x000024(%esp),%edx
		mov    $0x00000c,%ebx
		mov    $_0a1538_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		je     _03973f_jump
		mov    0x000024(%esp),%edx
		mov    $0x00000f,%ebx
		mov    $_0a1548_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		je     _03973f_jump
		mov    0x000024(%esp),%edx
		mov    $0x00000b,%ebx
		mov    $_0a1558_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		jne    _03974a_jump

	_03973f_jump:
		mov    0x000024(%esp),%edx
		xor    %eax,%eax
		mov    0x00000c(%edx),%al
		jmp    _03976e_jump

	_03974a_jump:
		mov    0x000024(%esp),%edx
		mov    $0x000009,%ebx
		mov    $_0a13c8_data,%eax
		mov    0x000008(%edx),%edx
		call   _0873fb_func
		test   %eax,%eax
		jne    _03977d_jump
		mov    0x000024(%esp),%eax
		mov    0x00000e(%eax),%eax
		sar    $0x000010,%eax

	_03976e_jump:
		push   %eax
		push   $_0a1564_data
		push   %ebp
		call   _0852d9_func
		add    $0x00000c,%esp

	_03977d_jump:
		cmpw   $0x00000a,0x000040(%esp)
		je     _039596_jump
		xor    %edx,%edx
		mov    0x000030(%esp),%dx
		imul   $0x00000c,%edx,%edx
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    _0d5588_data(%edx),%esi
		add    %ecx,%esi
		mov    _0d5584_data(%edx),%edi
		mov    %esi,_0d5588_data(%edx)
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0397bf_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0397d7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0397bf_jump

	_0397d7_jump:
		pop    %edi
		mov    $_0a14a8_data,%esi
		mov    _0d5584_data(%edx),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0397ec_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039804_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0397ec_jump

	_039804_jump:
		pop    %edi
		incl   0x000040(%esp)
		jmp    _039596_jump

	_03980e_jump:
		xor    %edx,%edx
		mov    0x000030(%esp),%dx
		imul   $0x00000c,%edx,%edx
		mov    $_0a1568_data,%esi
		mov    _0d5584_data(%edx),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03982c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039844_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03982c_jump

	_039844_jump:
		pop    %edi
		mov    _0d5588_data(%edx),%ebx
		mov    $_0a14b4_data,%esi
		add    $0x000002,%ebx
		mov    _0d5584_data(%edx),%edi
		mov    %ebx,_0d5588_data(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039868_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039880_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039868_jump

	_039880_jump:
		pop    %edi
		mov    _0d5588_data(%edx),%ecx
		mov    0x000034(%esp),%edi
		inc    %ecx
		inc    %edi
		mov    %ecx,_0d5588_data(%edx)
		mov    0x00003c(%esp),%edx
		mov    %edi,0x000034(%esp)
		cmp    %dx,%di
		jl     _03910e_jump

	_0398a4_jump:
		mov    0x000024(%esp),%eax
		mov    0x000014(%eax),%eax
		mov    %eax,0x000024(%esp)
		test   %eax,%eax
		jne    _038ff3_jump

	_0398b7_jump:
		mov    0x000014(%esp),%esi
		mov    0x00001c(%esp),%edi
		mov    _0d5a44_data,%edx
		add    $0x000002,%esi
		inc    %edi
		mov    %esi,0x000014(%esp)
		mov    %edi,0x00001c(%esp)
		cmp    %edx,%edi
		jl     _038fa7_jump

	_0398d9_jump:
		mov    (%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    $_0a156c_data,%edx
		mov    %eax,0x000004(%esp)
		lea    0x000004(%esp),%eax
		call   _038da4_func

	_0398f2_jump:
		lea    0x000004(%esp),%eax
		call   _038e0c_func
		test   %al,%al
		jne    _039916_jump
		mov    0x00000c(%esp),%ebx
		mov    $_0a156c_data,%edx
		lea    0x000004(%esp),%eax
		call   _038da4_func
		jmp    _039d02_jump

	_039916_jump:
		mov    0x000004(%esp),%esi
		test   %esi,%esi
		je     _039d02_jump
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		xor    %bl,%bl
		xor    %ecx,%ecx
		mov    %eax,0x000004(%esp)
		mov    %ecx,0x000028(%esp)
		jmp    _039955_jump

	_039939_jump:
		imul   $0x00000c,%eax,%eax
		mov    _0d5580_data(%eax),%edx
		mov    %ebp,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _039951_jump
		mov    $0x000001,%bl
		jmp    _039969_jump

	_039951_jump:
		incl   0x000028(%esp)

	_039955_jump:
		xor    %eax,%eax
		mov    _0d5a6c_data,%edx
		mov    0x000028(%esp),%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _039939_jump

	_039969_jump:
		test   %bl,%bl
		jne    _0399db_jump
		xor    %ebx,%ebx
		mov    0x000028(%esp),%bx
		imul   $0x00000c,%ebx,%ebx
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $_0c1004_data,%eax
		lea    0x000001(%ecx),%edx
		mov    %ebp,%esi
		call   _084bac_func
		mov    $0x007530,%edx
		mov    %eax,%edi
		mov    %eax,_0d5580_data(%ebx)
		push   %edi

	_0399a0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0399b8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0399a0_jump

	_0399b8_jump:
		pop    %edi
		mov    $_0c1004_data,%eax
		call   _084bac_func
		mov    %eax,_0d5584_data(%ebx)
		xor    %edi,%edi
		movb   $0x000000,(%eax)
		mov    %edi,_0d5588_data(%ebx)
		incw   _0d5a6e_data

	_0399db_jump:
		mov    0x000004(%esp),%eax
		mov    %ebp,%edx
		call   _0470cc_func
		mov    %eax,0x000004(%esp)
		mov    %ebp,%eax
		call   _0874cf_func
		mov    0x000004(%esp),%edx
		mov    %edx,0x000018(%esp)
		xor    %edx,%edx
		mov    %eax,0x000038(%esp)
		mov    %edx,0x00002c(%esp)
		test   %ax,%ax
		jle    _039d02_jump

	_039a0c_jump:
		mov    0x000018(%esp),%eax
		mov    %ebp,%edx
		mov    %eax,0x000004(%esp)
		call   _0470cc_func
		xor    %edx,%edx
		mov    0x000028(%esp),%dx
		imul   $0x00000c,%edx,%edx
		mov    %ebp,%edi
		mov    %eax,0x000004(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    _0d5588_data(%edx),%eax
		mov    %ebp,%esi
		add    %ecx,%eax
		mov    _0d5584_data(%edx),%edi
		mov    %eax,_0d5588_data(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039a55_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039a6d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039a55_jump

	_039a6d_jump:
		pop    %edi
		mov    $_0a14a8_data,%esi
		mov    _0d5584_data(%edx),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039a82_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039a9a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039a82_jump

	_039a9a_jump:
		pop    %edi
		mov    _0d5588_data(%edx),%ebx
		mov    $_0a1574_data,%esi
		add    $0x000008,%ebx
		mov    _0d5584_data(%edx),%edi
		mov    %ebx,_0d5588_data(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039abe_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039ad6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039abe_jump

	_039ad6_jump:
		pop    %edi

	_039ad7_jump:
		xor    %ebx,%ebx
		mov    0x000028(%esp),%bx
		imul   $0x00000c,%ebx,%ebx
		mov    0x000004(%esp),%eax
		mov    %ebp,%edx
		call   _0470cc_func
		mov    %ebp,%edi
		mov    %eax,0x000004(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    _0d5588_data(%ebx),%esi
		add    %ecx,%esi
		mov    _0d5584_data(%ebx),%edi
		mov    %esi,_0d5588_data(%ebx)
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039b1c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039b34_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039b1c_jump

	_039b34_jump:
		pop    %edi
		mov    $_0a14a8_data,%esi
		mov    _0d5584_data(%ebx),%edi
		mov    $_0a14b0_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039b4e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039b66_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039b4e_jump

	_039b66_jump:
		pop    %edi
		mov    %ebp,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _039ad7_jump
		mov    $_0a14b4_data,%esi
		mov    _0d5584_data(%ebx),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039b8a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039ba2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039b8a_jump

	_039ba2_jump:
		pop    %edi
		incl   _0d5588_data(%ebx)
		mov    $_0a1488_data,%ebx

	_039bae_jump:
		mov    0x000004(%esp),%eax
		mov    %ebp,%edx
		call   _0470cc_func
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		je     _039c57_jump
		mov    %ebx,%edx
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		jne    _039c57_jump
		xor    %edx,%edx
		mov    0x000028(%esp),%dx
		imul   $0x00000c,%edx,%edx
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    _0d5588_data(%edx),%eax
		mov    %ebp,%esi
		add    %ecx,%eax
		mov    _0d5584_data(%edx),%edi
		mov    %eax,_0d5588_data(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039c0c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039c24_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039c0c_jump

	_039c24_jump:
		pop    %edi
		mov    $_0a14a8_data,%esi
		mov    _0d5584_data(%edx),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039c39_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039c51_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039c39_jump

	_039c51_jump:
		pop    %edi
		jmp    _039bae_jump

	_039c57_jump:
		xor    %edx,%edx
		mov    0x000028(%esp),%dx
		imul   $0x00000c,%edx,%edx
		mov    $_0a1568_data,%esi
		mov    _0d5584_data(%edx),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039c75_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039c8d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039c75_jump

	_039c8d_jump:
		pop    %edi
		mov    _0d5588_data(%edx),%ebx
		mov    $_0a14b4_data,%esi
		add    $0x000002,%ebx
		mov    _0d5584_data(%edx),%edi
		mov    %ebx,_0d5588_data(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039cb1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039cc9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039cb1_jump

	_039cc9_jump:
		pop    %edi
		mov    _0d5588_data(%edx),%ecx
		inc    %ecx
		mov    0x000004(%esp),%esi
		mov    %ecx,_0d5588_data(%edx)
		test   %esi,%esi
		je     _039cec_jump
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,0x000004(%esp)

	_039cec_jump:
		mov    0x00002c(%esp),%ebx
		inc    %ebx
		mov    0x000038(%esp),%ecx
		mov    %ebx,0x00002c(%esp)
		cmp    %cx,%bx
		jl     _039a0c_jump

	_039d02_jump:
		cmpl   $0x000000,0x000004(%esp)
		jne    _0398f2_jump
		mov    (%esp),%eax
		call   _0850d4_func
		mov    0x000010(%esp),%eax
		call   _0850d4_func

	_039d1e_jump:
		mov    $_0a1580_data,%ebp
		xor    %ebx,%ebx
		jmp    _039d62_jump

	_039d27_jump:
		imul   $0x00000c,%edx,%edx
		mov    %ebp,%esi
		mov    _0d5584_data(%edx),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039d3b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039d53_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039d3b_jump

	_039d53_jump:
		pop    %edi
		mov    _0d5588_data(%edx),%eax
		inc    %eax
		inc    %ebx
		mov    %eax,_0d5588_data(%edx)

	_039d62_jump:
		xor    %edx,%edx
		mov    _0d5a6c_data,%eax
		mov    %bx,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _039d27_jump
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039d80_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00009c,%esp
		mov    %eax,%ebp
		mov    $_0c1004_data,%eax
		mov    %esp,%edi
		mov    $_0a1584_data,%esi
		call   _085254_func
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    %esp,%esi
		lea    0x000034(%esp),%edi
		push   %edi

	_039da8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039dc0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039da8_jump

	_039dc0_jump:
		pop    %edi
		mov    %esp,%esi
		lea    0x000068(%esp),%edi
		xor    %ebx,%ebx
		push   %edi

	_039dca_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039de2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039dca_jump

	_039de2_jump:
		pop    %edi
		mov    $_0a158c_data,%esi
		lea    0x000034(%esp),%edi
		mov    %dl,%bl
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039df7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039e0f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039df7_jump

	_039e0f_jump:
		pop    %edi
		mov    $_0a1594_data,%esi
		lea    0x000068(%esp),%edi
		mov    %ebx,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_039e24_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039e3c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039e24_jump

	_039e3c_jump:
		pop    %edi
		lea    0x000034(%esp),%eax
		call   _0387f0_func
		lea    0x000068(%esp),%eax
		mov    %ebx,%edx
		call   _038630_func
		call   _038ef4_func
		mov    %ebx,%edx
		mov    %ebp,%eax
		call   _038bcc_func
		add    $0x00009c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_039e70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    _0d5a70_data,%ecx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		add    %eax,%eax
		mov    0x00001c(%ecx),%ebp
		call   _085294_func
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _039f8b_jump
		mov    0x000002(%ecx),%dx
		xor    %eax,%eax
		test   %dx,%dx
		jbe    _039ec6_jump

	_039ea5_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		imul   $0x00006c,%edx,%ebx
		mov    (%esp),%edi
		add    %edx,%edx
		add    %edx,%edi
		mov    0x000034(%ebx,%ebp,1),%dx
		mov    %dx,(%edi)
		inc    %eax
		mov    0x000002(%ecx),%bx
		cmp    %bx,%ax
		jb     _039ea5_jump

	_039ec6_jump:
		xor    %edi,%edi
		mov    0x000002(%ecx),%ax
		mov    %edi,0x000008(%esp)
		test   %ax,%ax
		jbe    _039f84_jump

	_039ed9_jump:
		mov    0x000008(%esp),%eax
		mov    0x000002(%ecx),%di
		mov    $0xffff8000,%ebx
		cmp    %di,%ax
		jae    _039f0a_jump

	_039eeb_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		mov    (%esp),%edi
		add    %edx,%edx
		add    %edi,%edx
		mov    (%edx),%di
		cmp    %di,%bx
		jge    _039f03_jump
		mov    %edi,%ebx
		mov    %eax,%esi

	_039f03_jump:
		inc    %eax
		cmp    0x000002(%ecx),%ax
		jb     _039eeb_jump

	_039f0a_jump:
		mov    0x000008(%esp),%ebx
		cmp    %bx,%si
		je     _039f6e_jump
		xor    %edx,%edx
		mov    %bx,%dx
		imul   $0x00006c,%edx,%ebx
		mov    0x000068(%ebx,%ebp,1),%ax
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		mov    %si,%ax
		mov    %eax,0x000004(%esp)
		imul   $0x00006c,%eax,%eax
		mov    0x000068(%eax,%ebp,1),%di
		mov    %di,0x000068(%ebx,%ebp,1)
		mov    0x00000c(%esp),%ebx
		mov    %bx,0x000068(%eax,%ebp,1)
		lea    0x000000(,%edx,2),%eax
		add    (%esp),%eax
		mov    (%eax),%dx
		mov    %edx,0x00000c(%esp)
		mov    0x000004(%esp),%edx
		mov    (%esp),%ebx
		add    %edx,%edx
		mov    (%edx,%ebx,1),%bx
		mov    %bx,(%eax)
		add    (%esp),%edx
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edx)

	_039f6e_jump:
		mov    0x000008(%esp),%edx
		inc    %edx
		mov    0x000002(%ecx),%bx
		mov    %edx,0x000008(%esp)
		cmp    %bx,%dx
		jb     _039ed9_jump

	_039f84_jump:
		mov    %esp,%eax
		call   _0852ac_func

	_039f8b_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039f98_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0d5a70_data,%edi
		mov    %eax,%edx
		movzbl (%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x000008(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%edi),%ecx
		mov    %al,0x00000c(%esp)
		call   _011c5b_func
		movw   $0x000000,0x000004(%edi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _039ff0_jump
		mov    %ebx,%eax

	_039ff0_jump:
		mov    %ax,0x000006(%edi)
		test   %si,%si
		jl     _03a009_jump
		mov    $0x000001,%eax
		movswl %si,%ebx
		cmp    %ebx,%eax
		jge    _03a007_jump
		mov    %ebx,%eax

	_03a007_jump:
		jmp    _03a01b_jump

	_03a009_jump:
		movswl %si,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _03a019_jump
		mov    %ebx,%eax

	_03a019_jump:
		neg    %eax

	_03a01b_jump:
		mov    0x000002(%edi),%dx
		xor    %esi,%esi
		mov    %ax,0x000008(%edi)
		test   %dx,%dx
		jbe    _03a1d1_jump

	_03a02e_jump:
		xor    %ebx,%ebx
		mov    %si,%bx
		movzbl (%edi),%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   %eax,%edx
		mov    %edx,(%esp)
		mov    (%esp),%edx
		mov    %dx,0x000004(%esp)
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		mov    %edx,0x00000c(%ecx)
		add    %edx,%eax
		mov    %edx,(%ecx)
		dec    %eax
		mov    %ebx,%edx
		mov    %eax,0x000024(%ecx)
		sar    $0x00001f,%edx
		mov    %eax,0x000018(%ecx)
		mov    %ebx,%eax
		movzbl (%edi),%ebp
		idiv   %ebp
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   %eax,%edx
		xor    %ebx,%ebx
		mov    %dx,%bx
		movl   $0x000200,0x00002c(%ecx)
		add    %ebx,%eax
		mov    %ebx,0x000028(%ecx)
		dec    %eax
		mov    %eax,0x00001c(%ecx)
		mov    %eax,0x000010(%ecx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x000020(%ecx)
		mov    %eax,0x000014(%ecx)
		mov    %eax,0x000008(%ecx)
		mov    0x000004(%esp),%eax
		mov    %ebx,0x000004(%ecx)
		cmp    $0x0000a0,%ax
		jae    _03a0b8_jump
		mov    0x000014(%edi),%eax
		mov    %eax,0x00003c(%ecx)
		jmp    _03a0cd_jump

	_03a0b8_jump:
		mov    0x000004(%esp),%ebx
		mov    0x000018(%edi),%eax
		sub    $0x0000a0,%ebx
		mov    %eax,0x00003c(%ecx)
		mov    %bx,0x000004(%esp)

	_03a0cd_jump:
		mov    0x000004(%esp),%al
		mov    %al,0x000062(%ecx)
		mov    %al,0x000060(%ecx)
		add    0x000008(%esp),%al
		dec    %al
		mov    %al,0x000066(%ecx)
		mov    $0x00000a,%ebx
		mov    %al,0x000064(%ecx)
		mov    0x00000c(%esp),%al
		mov    %dl,0x000067(%ecx)
		add    %dl,%al
		mov    %dl,0x000061(%ecx)
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000065(%ecx)
		mov    %si,%dx
		mov    %al,0x000063(%ecx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000005,%edx
		jge    _03a120_jump
		call   _087563_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		jmp    _03a134_jump

	_03a120_jump:
		call   _087563_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx

	_03a134_jump:
		mov    %dx,0x000030(%ecx)
		call   _087563_func
		mov    %eax,%edx
		mov    $0x000008,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000006,%edx
		mov    %dx,0x000032(%ecx)
		call   _087563_func
		mov    %eax,%edx
		mov    $0x000005,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx
		mov    %dx,0x000034(%ecx)
		call   _087563_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x000039(%ecx)
		call   _087563_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x00003a(%ecx)
		call   _087563_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000039(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %al,0x000036(%ecx)
		mov    0x00003a(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		add    $0x000002,%edx
		mov    %dl,0x00003b(%ecx)
		mov    %al,0x000037(%ecx)
		mov    0x00003b(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %si,0x000068(%ecx)
		mov    %al,0x000038(%ecx)
		inc    %esi
		mov    0x000002(%edi),%bx
		add    $0x00006c,%ecx
		cmp    %bx,%si
		jb     _03a02e_jump

	_03a1d1_jump:
		call   _039e70_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_03a1de_jump:
		ret    

	_03a1e0_case:
		mov    _0d5a70_data,%eax
		test   %eax,%eax
		je     _03a1de_jump
		cmpl   $0x000000,0x00001c(%eax)
		je     _03a1f7_jump
		add    $0x00001c,%eax
		call   _0852ac_func

	_03a1f7_jump:
		cmpl   $0x000000,_0d5a70_data
		je     _03a1de_jump
		mov    $_0d5a70_data,%eax
		jmp    _0852ac_func



_03a20c_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%edi
		mov    %bx,0x000008(%esp)
		mov    %ecx,(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _03a2c6_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _03a2c6_jump
		mov    $0x000020,%eax
		call   _085294_func
		mov    %eax,%edx
		mov    %eax,_0d5a70_data
		test   %eax,%eax
		je     _03a2c6_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    0x000004(%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _03a261_jump
		mov    %ebx,%eax

	_03a261_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _03a273_jump
		mov    %ebx,%eax

	_03a273_jump:
		xor    %bh,%bh
		mov    %al,0x000001(%edx)
		mov    (%edx),%bl
		xor    %ah,%ah
		imul   %eax,%ebx
		mov    0x000018(%esp),%eax
		mov    %bx,0x000002(%edx)
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		call   _085294_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _03a2c6_jump
		mov    _0c0f44_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_03a2c6_jump:
		test   %cl,%cl
		je     _03a303_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _080240_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _080240_func
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    (%esp),%dx
		sar    $0x000010,%eax
		call   _039f98_func
		jmp    _03a308_jump

	_03a303_jump:
		call   _03a1e0_case

	_03a308_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_03a314_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    _0d5a70_data,%eax
		mov    %eax,0x000010(%esp)
		mov    0x00001c(%eax),%ecx
		mov    0x000006(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03a335_jump
		neg    %eax

	_03a335_jump:
		mov    %al,0x00002c(%esp)
		mov    0x000010(%esp),%eax
		xor    %edx,%edx
		mov    0x000002(%eax),%bx
		mov    %edx,0x000020(%esp)
		test   %bx,%bx
		jbe    _03a570_jump

	_03a350_jump:
		mov    (%ecx),%eax
		add    0x000018(%ecx),%eax
		sar    %eax
		mov    0x00001c(%ecx),%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000004(%ecx),%eax
		add    %ebx,%eax
		sar    %eax
		mov    0x000020(%ecx),%esi
		mov    %eax,0x00001c(%esp)
		mov    0x000008(%ecx),%eax
		xor    %bl,%bl
		add    %esi,%eax
		mov    %bl,0x000030(%esp)
		sar    %eax
		mov    %bl,0x000034(%esp)
		mov    %eax,0x000018(%esp)

	_03a381_jump:
		xor    %dl,%dl
		cmpb   $0x000000,0x00002c(%esp)
		jbe    _03a3de_jump

	_03a38a_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x00002e(%ecx),%ebx
		sar    $0x000010,%ebx
		add    %ebx,(%ecx,%eax,1)
		mov    0x000030(%ecx),%ebx
		mov    0x000004(%ecx,%eax,1),%esi
		sar    $0x000010,%ebx
		add    %ebx,%esi
		mov    0x000008(%ecx,%eax,1),%edi
		mov    %esi,0x000004(%ecx,%eax,1)
		cmp    $0x000032,%edi
		jge    _03a3bb_jump
		movw   $0x000000,0x000034(%ecx)

	_03a3bb_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000032(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    0x000008(%ecx,%eax,1),%edi
		inc    %dl
		add    %ebx,%edi
		mov    0x00002c(%esp),%bl
		mov    %edi,0x000008(%ecx,%eax,1)
		cmp    %bl,%dl
		jb     _03a38a_jump

	_03a3de_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		lea    (%eax,%ecx,1),%esi
		mov    0x000004(%esp),%edi
		mov    (%esi),%eax
		mov    0x000018(%esp),%edx
		sub    %edi,%eax
		mov    0x000004(%esi),%ebp
		mov    %eax,(%esp)
		mov    0x00001c(%esp),%eax
		lea    0x000028(%esp),%ebx
		sub    %eax,%ebp
		xor    %eax,%eax
		mov    0x000008(%esi),%esi
		mov    0x000038(%ecx),%al
		sub    %edx,%esi
		add    %eax,%eax
		lea    0x000024(%esp),%edx
		cwtl   
		call   _06274c_func
		mov    0x000026(%esp),%eax
		mov    (%esp),%edi
		sar    $0x000010,%eax
		imul   %eax,%edi
		mov    0x000022(%esp),%ebx
		mov    %ebp,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		imul   %eax,%ebp
		sub    %edx,%edi
		imul   (%esp),%ebx
		xor    %eax,%eax
		mov    0x000037(%ecx),%al
		add    %eax,%eax
		sar    $0x000009,%edi
		cwtl   
		lea    0x000024(%esp),%edx
		add    %ebx,%ebp
		lea    0x000028(%esp),%ebx
		mov    %edi,(%esp)
		call   _06274c_func
		mov    0x000022(%esp),%ebx
		mov    %esi,%edi
		sar    $0x000010,%ebx
		imul   %ebx,%edi
		mov    0x000026(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		imul   %esi,%eax
		imul   (%esp),%ebx
		add    %edx,%edi
		mov    %eax,%esi
		xor    %eax,%eax
		lea    0x000024(%esp),%edx
		mov    0x000036(%ecx),%al
		sub    %ebx,%esi
		add    %eax,%eax
		lea    0x000028(%esp),%ebx
		cwtl   
		sar    $0x000009,%esi
		call   _06274c_func
		mov    0x000022(%esp),%ebx
		mov    %esi,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%esi
		sar    $0x000009,%ebp
		imul   %ebp,%ebx
		mov    %edx,0x000008(%esp)
		mov    %ebp,%edx
		imul   %eax,%edx
		mov    0x000018(%esp),%ebp
		sub    %ebx,%esi
		mov    %edx,0x00000c(%esp)
		mov    0x000008(%esp),%edx
		sar    $0x000009,%esi
		add    0x00000c(%esp),%edx
		mov    %edi,%eax
		mov    %edx,0x000014(%esp)
		mov    %edi,%edx
		add    %ebp,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		xor    %ebx,%ebx
		mov    0x000004(%esp),%edx
		mov    0x000034(%esp),%bl
		add    %edx,%eax
		mov    %eax,0x000040(%ecx,%ebx,4)
		mov    0x000014(%esp),%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x00001c(%esp),%esi
		add    %esi,%eax
		mov    %eax,0x000044(%ecx,%ebx,4)
		mov    0x000030(%esp),%al
		inc    %al
		mov    %al,0x000030(%esp)
		mov    %bl,%ah
		add    $0x000002,%ah
		mov    %ah,0x000034(%esp)
		cmp    $0x000004,%al
		jb     _03a381_jump
		mov    0x00002c(%esp),%al
		mulb   0x000039(%ecx)
		mov    0x000036(%ecx),%dh
		mov    0x00003a(%ecx),%bl
		add    %al,%dh
		mov    0x00002c(%esp),%al
		mul    %bl
		mov    %dh,0x000036(%ecx)
		mov    0x000037(%ecx),%bh
		mov    0x00003b(%ecx),%dl
		add    %al,%bh
		mov    0x00002c(%esp),%al
		mul    %dl
		mov    0x000038(%ecx),%dh
		add    $0x00006c,%ecx
		add    %al,%dh
		mov    0x000020(%esp),%esi
		mov    %dh,-0x000034(%ecx)
		mov    0x000010(%esp),%edx
		mov    %bh,-0x000035(%ecx)
		inc    %esi
		mov    0x000002(%edx),%di
		mov    %esi,0x000020(%esp)
		cmp    %di,%si
		jb     _03a350_jump

	_03a570_jump:
		mov    0x000010(%esp),%eax
		cmpw   $0x000014,0x000004(%eax)
		jbe    _03a5c8_jump
		xor    %edx,%edx
		mov    0x000004(%eax),%dx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _03a5c8_jump
		mov    0x000010(%esp),%ebx
		mov    0x000010(%esp),%eax
		xor    %edx,%edx
		mov    0x000002(%ebx),%cx
		mov    0x00001c(%eax),%eax
		test   %cx,%cx
		jbe    _03a5c8_jump

	_03a5a7_jump:
		xor    %ebx,%ebx
		mov    0x000032(%eax),%si
		mov    0x00002c(%esp),%bl
		add    %ebx,%esi
		mov    0x000010(%esp),%ebx
		mov    %si,0x000032(%eax)
		inc    %edx
		mov    0x000002(%ebx),%di
		add    $0x00006c,%eax
		cmp    %di,%dx
		jb     _03a5a7_jump

	_03a5c8_jump:
		xor    %ah,%ah
		mov    0x000010(%esp),%edx
		mov    0x00002c(%esp),%al
		mov    0x000004(%edx),%bx
		add    %eax,%ebx
		mov    0x000006(%edx),%cx
		mov    %bx,0x000004(%edx)
		cmp    %cx,%bx
		jbe    _03a5eb_jump
		movw   $0x000000,0x000004(%edx)

	_03a5eb_jump:
		mov    0x000010(%esp),%eax
		mov    0x000004(%eax),%ax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a600_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0d5a70_data,%ecx
		mov    0x00001c(%ecx),%edi
		xor    %ebx,%ebx
		mov    %edi,%edx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _03a622_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a622_jump:
		xor    %eax,%eax
		mov    0x000068(%edx),%ax
		imul   $0x00006c,%eax,%eax
		add    %edi,%eax
		lea    0x00003c(%eax),%esi
		add    $0x00006c,%edx
		mov    0x000010(%ecx),%eax
		inc    %ebx
		call   _011c90_func
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _03a622_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a650_func:
		push   %ecx
		mov    %al,%cl
		mov    %dl,%ah
		cmpb   $0x000000,_0aa190_data
		je     _03a674_jump
		mov    $0x0003c8,%edx
		xor    %al,%al
		out    %al,(%dx)
		mov    $0x0003c9,%edx
		mov    %cl,%al
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    %bl,%al
		out    %al,(%dx)

	_03a674_jump:
		pop    %ecx
		ret    



_03a784_func:
		imul   0x000004(%eax),%ebx
		mov    (%eax),%eax
		add    %ebx,%edx
		mov    %cl,(%edx,%eax,1)
		ret    



_03a790_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %ecx,%esi
		mov    0x00000c(%esp),%ecx
		mov    %edx,%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%edi),%edi
		add    %eax,%edi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _03a7b4_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_03a7b4_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _03a7bd_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_03a7bd_jump:
		pop    %edi
		pop    %esi
		ret    $0x000004



_03a7c4_func:
		push   %edi
		mov    %eax,%edi
		mov    %edx,%eax
		mov    0x000008(%esp),%edx
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%edi),%edi
		add    %eax,%edi
		xor    %eax,%eax
		mov    %edx,%ebx
		mov    %cl,%al
		cld    
		mov    %ebx,%ecx
		and    $0x000003,%ecx
		je     _03a7eb_jump
		rep stos %al,%es:(%edi)

	_03a7eb_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _03a800_jump
		mov    %eax,%ebx
		mov    %al,%ah
		mov    %bl,%bh
		shl    $0x000010,%eax
		mov    %bx,%ax
		rep stos %eax,%es:(%edi)

	_03a800_jump:
		pop    %edi
		ret    $0x000004



_03a804_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %cx,(%esp)
		mov    %edx,%eax
		mov    0x000014(%esp),%edx
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%esi),%esi
		add    %edx,%edx
		add    %eax,%esi
		xor    %eax,%eax
		mov    %edx,%ebp
		mov    0x000001(%esp),%al
		sar    %edx
		mov    %eax,%ebx
		xor    %eax,%eax
		shl    $0x000008,%ebx
		mov    (%esp),%al
		mov    %esi,%edi
		add    %ebx,%eax
		mov    %edx,%ebx
		and    $0x000001,%ebp
		cld    
		mov    %eax,%ecx
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %ebx,%ecx
		and    $0x000001,%ecx
		je     _03a856_jump
		rep stos %ax,%es:(%edi)

	_03a856_jump:
		mov    %ebx,%ecx
		shr    %ecx
		je     _03a85e_jump
		rep stos %eax,%es:(%edi)

	_03a85e_jump:
		test   %ebp,%ebp
		je     _03a867_jump
		mov    (%esp),%al
		mov    %al,(%esi)

	_03a867_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_03a870_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		lea    (%edx,%ecx,1),%edi
		cmp    %edi,%edx
		jge    _03a8c0_jump
		lea    0x000000(,%edx,4),%eax
		lea    0x000000(,%edi,4),%ecx
		sub    %edx,%eax
		sub    %edi,%ecx

	_03a88d_jump:
		xor    %edx,%edx
		mov    (%ebx),%dl
		sar    $0x000002,%edx
		mov    %dl,_0d5a80_data(%eax)
		xor    %edx,%edx
		mov    0x000001(%ebx),%dl
		sar    $0x000002,%edx
		mov    %dl,_0d5a81_data(%eax)
		xor    %edx,%edx
		mov    0x000002(%ebx),%dl
		add    $0x000003,%eax
		sar    $0x000002,%edx
		add    $0x000003,%ebx
		mov    %dl,_0d5a7f_data(%eax)
		cmp    %ecx,%eax
		jl     _03a88d_jump

	_03a8c0_jump:
		cmp    _0aa194_data,%esi
		jge    _03a8ce_jump
		mov    %esi,_0aa194_data

	_03a8ce_jump:
		cmp    _0aa198_data,%edi
		jle    _03a8dc_jump
		mov    %edi,_0aa198_data

	_03a8dc_jump:
		pop    %edi
		pop    %esi
		ret    



_03a8e0_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		lea    (%edx,%ecx,1),%edi
		cmp    %edi,%edx
		jge    _03a921_jump
		lea    0x000000(,%edx,4),%eax
		lea    0x000000(,%edi,4),%ecx
		sub    %edx,%eax
		sub    %edi,%ecx

	_03a8fd_jump:
		mov    (%ebx),%dl
		mov    %dl,_0d5a80_data(%eax)
		mov    0x000001(%ebx),%dl
		mov    %dl,_0d5a81_data(%eax)
		add    $0x000003,%eax
		mov    0x000002(%ebx),%dl
		add    $0x000003,%ebx
		mov    %dl,_0d5a7f_data(%eax)
		cmp    %ecx,%eax
		jl     _03a8fd_jump

	_03a921_jump:
		cmp    _0aa194_data,%esi
		jge    _03a92f_jump
		mov    %esi,_0aa194_data

	_03a92f_jump:
		cmp    _0aa198_data,%edi
		jle    _03a93d_jump
		mov    %edi,_0aa198_data

	_03a93d_jump:
		pop    %edi
		pop    %esi
		ret    



_03a970_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00001c,%esp
		mov    %esp,%ebx
		xor    %ah,%ah
		mov    %esp,%edx
		mov    %ah,0x000001(%esp)
		mov    $0x00001a,%eax
		call   _086c23_func
		mov    $0x000043,%edx
		xor    %al,%al
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %ecx,%ecx
		sub    %eax,%eax
		in     (%dx),%al
		sub    %eax,%eax
		in     (%dx),%al
		mov    0x00000c(%esp),%cl
		xor    %edx,%edx
		mov    %al,%bl
		mov    0x00000d(%esp),%dl
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x000008(%esp),%al
		add    %ecx,%edx
		shl    $0x000018,%eax
		shl    $0x000008,%edx
		neg    %bl
		add    %edx,%eax
		xor    %edx,%edx
		mov    %bl,%dl
		add    %edx,%eax
		add    $0x00001c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a9d0_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		imul   (%edx),%eax
		mov    $0x0003e8,%ecx
		xor    %edx,%edx
		div    %ecx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _03a970_func
		add    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_03ac58_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    $0x000100,%ebx
		xor    %ebp,%ebp
		mov    (%eax),%si
		mov    %ebp,_0aa198_data
		mov    %ebx,_0aa194_data
		mov    %esi,0x000008(%esp)
		lea    0x000002(%eax),%esi

	_03ac82_jump:
		mov    0x000008(%esp),%edx
		dec    %edx
		mov    %edx,0x000008(%esp)
		test   %dx,%dx
		jl     _03acbb_jump
		inc    %esi
		xor    %eax,%eax
		movzbl (%esi),%edi
		mov    -0x000001(%esi),%al
		inc    %esi
		add    %eax,%ebp
		test   %edi,%edi
		jne    _03aca5_jump
		mov    $0x000100,%edi

	_03aca5_jump:
		mov    (%esp),%eax
		mov    %edi,%ecx
		mov    %esi,%ebx
		mov    %ebp,%edx
		call   *0x000004(%esp)
		lea    (%edi,%edi,2),%eax
		add    %eax,%esi
		add    %edi,%ebp
		jmp    _03ac82_jump

	_03acbb_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03acc4_func:
		push   %ecx
		mov    $_03a870_func,%ecx
		call   _03ac58_func
		pop    %ecx
		ret    



_03acd4_func:
		push   %ecx
		mov    $_03a8e0_func,%ecx
		call   _03ac58_func
		pop    %ecx
		ret    



_03ace4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %edx,%edi
		xor    %edx,%edi
		xor    %ecx,%ecx
		mov    0x00000a(%edx),%di
		mov    0x000008(%edx),%cx
		mov    %edi,0x000004(%esp)
		mov    0x00008c(%edx),%edi
		add    %ecx,%edi
		mov    0x000090(%edx),%ebp
		mov    %edi,0x000008(%esp)

	_03ad18_jump:
		mov    0x000004(%esp),%edx
		dec    %edx
		mov    %edx,0x000004(%esp)
		test   %edx,%edx
		jl     _03ad9f_jump
		mov    (%esp),%edi
		xor    %ah,%ah
		inc    %esi
		mov    %ah,0x000010(%esp)
		mov    0x00008c(%edi),%edi

	_03ad39_jump:
		mov    0x00000d(%esp),%ecx
		sar    $0x000018,%ecx
		add    %ecx,%edi
		cmp    0x000008(%esp),%edi
		jge    _03ad99_jump
		mov    (%esi),%cl
		inc    %esi
		mov    %cl,0x000010(%esp)
		test   %cl,%cl
		jl     _03ad6f_jump
		mov    0x00000d(%esp),%ecx
		mov    0x00000c(%esp),%eax
		sar    $0x000018,%ecx
		mov    %ebp,%ebx
		push   %ecx
		xor    %ecx,%ecx
		mov    %edi,%edx
		mov    (%esi),%cl
		inc    %esi
		call   _03a7c4_func
		jmp    _03ad39_jump

	_03ad6f_jump:
		mov    %cl,%dh
		neg    %dh
		mov    %dh,0x000010(%esp)
		mov    0x00000d(%esp),%ecx
		mov    0x00000c(%esp),%eax
		sar    $0x000018,%ecx
		mov    %ebp,%ebx
		push   %ecx
		mov    %edi,%edx
		mov    %esi,%ecx
		call   _03a790_func
		mov    0x00000d(%esp),%ecx
		sar    $0x000018,%ecx
		add    %ecx,%esi
		jmp    _03ad39_jump

	_03ad99_jump:
		inc    %ebp
		jmp    _03ad18_jump

	_03ad9f_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03ada8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %ebx,0x000004(%esp)
		lea    0x000004(%eax),%esi
		mov    0x00008c(%edx),%ecx
		movswl (%eax),%ebp
		add    $0x000002,%eax
		mov    %ecx,(%esp)
		mov    0x000090(%edx),%edx
		mov    (%eax),%ax
		add    %edx,%ebp
		mov    %eax,0x00000c(%esp)

	_03add4_jump:
		mov    0x00000c(%esp),%edx
		dec    %edx
		mov    %edx,0x00000c(%esp)
		test   %dx,%dx
		jl     _03ae8b_jump
		mov    (%esp),%edi
		mov    (%esi),%al
		inc    %esi
		mov    %al,0x000010(%esp)
		test   %al,%al
		jbe    _03ae85_jump

	_03adf8_jump:
		mov    0x000001(%esi),%al
		inc    %esi
		xor    %ecx,%ecx
		mov    %al,0x000014(%esp)
		mov    -0x000001(%esi),%cl
		inc    %esi
		add    %ecx,%edi
		test   %al,%al
		jge    _03ae46_jump
		mov    %al,%bh
		neg    %bh
		mov    %bh,0x000014(%esp)
		mov    0x000011(%esp),%eax
		mov    %edi,%edx
		sar    $0x000018,%eax
		mov    %ebp,%ebx
		mov    %eax,0x000008(%esp)
		mov    %eax,%ecx
		push   %eax
		xor    %eax,%ecx
		mov    0x000008(%esp),%eax
		mov    (%esi),%cl
		inc    %esi
		call   _03a7c4_func
		mov    0x000010(%esp),%cl
		mov    0x000008(%esp),%eax
		dec    %cl
		add    %eax,%edi
		mov    %cl,0x000010(%esp)
		jmp    _03ae7a_jump

	_03ae46_jump:
		mov    0x000011(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%ebx
		sar    $0x000018,%eax
		mov    %edi,%edx
		push   %eax
		mov    %eax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		call   _03a790_func
		mov    0x000008(%esp),%ebx
		mov    0x000011(%esp),%ecx
		add    %ebx,%edi
		mov    0x000010(%esp),%bl
		sar    $0x000018,%ecx
		dec    %bl
		add    %ecx,%esi
		mov    %bl,0x000010(%esp)

	_03ae7a_jump:
		cmpb   $0x000000,0x000010(%esp)
		ja     _03adf8_jump

	_03ae85_jump:
		inc    %ebp
		jmp    _03add4_jump

	_03ae8b_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03ae94_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %ebx,0x00000c(%esp)
		mov    0x00008c(%edx),%ecx
		mov    0x000090(%edx),%ebp
		mov    %ecx,0x000008(%esp)
		mov    0x000008(%edx),%dx
		and    $0x00ffff,%edx
		add    %ecx,%edx
		dec    %edx
		mov    %edx,(%esp)
		mov    (%eax),%dx
		lea    0x000002(%eax),%esi
		mov    %edx,0x000010(%esp)
		jmp    _03aed4_jump

	_03aecb_jump:
		mov    0x000012(%esp),%ecx
		sar    $0x000010,%ecx
		sub    %ecx,%ebp

	_03aed4_jump:
		mov    (%esi),%ax
		add    $0x000002,%esi
		mov    %ax,0x000014(%esp)
		test   %ax,%ax
		jge    _03af21_jump
		testb  $0x000040,0x000015(%esp)
		jne    _03aecb_jump
		mov    (%esp),%edx
		mov    0x00000c(%esp),%eax
		xor    %ecx,%ecx
		mov    %ebp,%ebx
		mov    0x000014(%esp),%cl
		call   _03a784_func
		mov    (%esi),%ax
		add    $0x000002,%esi
		mov    %ax,0x000014(%esp)
		test   %ax,%ax
		jne    _03af21_jump
		mov    0x000010(%esp),%ecx
		dec    %ecx
		inc    %ebp
		mov    %ecx,0x000010(%esp)
		test   %cx,%cx
		jmp    _03afc7_jump

	_03af21_jump:
		mov    0x000008(%esp),%eax
		mov    %eax,0x000004(%esp)

	_03af29_jump:
		xor    %ecx,%ecx
		mov    0x000004(%esp),%edi
		mov    (%esi),%cl
		add    %ecx,%edi
		mov    %edi,0x000004(%esp)
		movsbl 0x000001(%esi),%edi
		inc    %esi
		add    %edi,%edi
		inc    %esi
		test   %edi,%edi
		jl     _03af89_jump
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%eax
		push   %edi
		mov    %esi,%ecx
		mov    %ebp,%ebx
		call   _03a790_func
		mov    0x000004(%esp),%edx
		add    %edi,%esi
		add    %edi,%edx
		mov    0x000014(%esp),%edi
		mov    %edx,0x000004(%esp)
		dec    %di
		mov    %di,0x000014(%esp)
		jne    _03af29_jump
		mov    0x000010(%esp),%edx
		dec    %edx
		inc    %ebp
		mov    %edx,0x000010(%esp)
		test   %dx,%dx
		jg     _03aed4_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_03af89_jump:
		neg    %edi
		mov    %edi,%ecx
		mov    0x000004(%esp),%edx
		sar    %ecx
		mov    0x00000c(%esp),%eax
		push   %ecx
		mov    %ebp,%ebx
		mov    (%esi),%cx
		call   _03a804_func
		add    %edi,0x000004(%esp)
		mov    0x000014(%esp),%eax
		add    $0x000002,%esi
		dec    %ax
		mov    %ax,0x000014(%esp)
		jne    _03af29_jump
		mov    0x000010(%esp),%ebx
		dec    %ebx
		inc    %ebp
		mov    %ebx,0x000010(%esp)
		test   %bx,%bx

	_03afc7_jump:
		jg     _03aed4_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03afd8_func:
		push   %ecx
		push   %edi
		mov    (%ebx),%edi
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		pop    %edi
		pop    %ecx
		ret    



_03afec_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    (%ebx),%ebx
		mov    0x000094(%edx),%edi
		xor    %esi,%esi
		xor    %ecx,%ecx
		mov    0x00000a(%edx),%si
		mov    0x000008(%edx),%cx
		add    %ebx,%edi
		mov    %esi,%ebx
		mov    %ecx,%edx
		mov    %eax,%esi
		cld    
		pusha  
		mov    $0x000140,%ebp
		sub    %edx,%ebp
		mov    %edx,%eax
		and    $0x000003,%eax
		shr    $0x000002,%edx

	_03b01c_jump:
		mov    %edx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebp,%edi
		dec    %ebx
		jne    _03b01c_jump
		popa   
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_03b190_switch:
		.long   _03b201_case
		.long   _03b2c3_case
		.long   _03b2c3_case
		.long   _03b240_case
		.long   _03b2c3_case
		.long   _03b2c3_case
		.long   _03b2c3_case
		.long   _03b201_case
		.long   _03b240_case
		.long   _03b271_case
		.long   _03b2c3_case
		.long   _03b28d_case
		.long   _03b2a9_case


	_03b1dc_jump:
		mov    0x000000(%ebp),%eax
		mov    %ebp,%esi
		add    %eax,%ebp
		mov    0x000004(%esi),%ax
		sub    $0x000004,%eax
		cmp    $0x00000c,%ax
		ja     _03b2c3_case
		and    $0x00ffff,%eax
		jmp    *%cs:_03b190_switch(,%eax,4)

	_03b201_case:
		mov    $0x00003f,%ebx
		xor    %eax,%eax
		mov    %ebx,%edx
		call   _03a650_func
		mov    $0x000001,%dl
		lea    0x000006(%esi),%eax
		mov    0x000004(%esi),%bx
		mov    %dl,_0aa192_data
		cmp    $0x000004,%bx
		jne    _03b232_jump
		mov    %ecx,%ebx
		mov    %edi,%edx
		call   _03acc4_func
		jmp    _03b2c3_case

	_03b232_jump:
		mov    %ecx,%ebx
		mov    %edi,%edx
		call   _03acd4_func
		jmp    _03b2c3_case

	_03b240_case:
		mov    $0x00003f,%ebx
		xor    %edx,%edx
		mov    %ebx,%eax
		call   _03a650_func
		mov    0x000004(%esi),%dx
		lea    0x000006(%esi),%eax
		cmp    $0x000007,%dx
		jne    _03b266_jump
		mov    %ecx,%ebx
		mov    %edi,%edx
		call   _03ae94_func
		jmp    _03b2c3_case

	_03b266_jump:
		mov    %ecx,%ebx
		mov    %edi,%edx
		call   _03ada8_func
		jmp    _03b2c3_case

	_03b271_case:
		mov    $0x000015,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		call   _03a650_func
		lea    0x000006(%esi),%eax
		mov    %ecx,%ebx
		mov    %edi,%edx
		call   _03afd8_func
		jmp    _03b2c3_case

	_03b28d_case:
		mov    $0x00002a,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		call   _03a650_func
		lea    0x000006(%esi),%eax
		mov    %ecx,%ebx
		mov    %edi,%edx
		call   _03ace4_func
		jmp    _03b2c3_case

	_03b2a9_case:
		mov    $0x00003f,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		call   _03a650_func
		lea    0x000006(%esi),%eax
		mov    %ecx,%ebx
		mov    %edi,%edx
		call   _03afec_func

	_03b2c3_case:
		incl   (%esp)
		mov    0x000004(%esp),%eax
		mov    0x000004(%eax),%eax
		mov    (%esp),%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jg     _03b1dc_jump
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _03a650_func
		cmpb   $0x000000,_0aa18e_data
		je     _03b33a_jump
		cmpl   $0x000001,0x000084(%edi)
		je     _03b309_jump

	_03b2f8_jump:
		mov    0x000018(%esp),%eax
		call   _03a970_func
		cmp    _0aa1a4_data,%eax
		jbe    _03b2f8_jump

	_03b309_jump:
		call   _018b0f_func
		call   _018aff_func
		cmpb   $0x000000,_0aa18d_data
		je     _03b327_jump
		mov    0x000018(%esp),%edx
		mov    $0x00004b,%eax
		jmp    _03b330_jump

	_03b327_jump:
		mov    0x000018(%esp),%edx
		mov    $0x0000a0,%eax

	_03b330_jump:
		call   _03a9d0_func
		mov    %eax,_0aa1a4_data

	_03b33a_jump:
		cmpb   $0x000000,_0aa18e_data
		je     _03b3da_jump
		mov    $0x00003f,%edx
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   _03a650_func
		cmpb   $0x000001,_0aa192_data
		jne    _03b386_jump
		mov    $_0d5a80_data,%esi
		pusha  
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		popa   
		xor    %al,%al
		mov    %al,_0aa192_data

	_03b386_jump:
		mov    $0x00003f,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _03a650_func
		mov    _0a7c98_data,%eax
		mov    0x000094(%edi),%esi
		mov    0x000094(%edi),%ebp
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00000a(%edi),%bx
		mov    0x000008(%edi),%dx
		add    %esi,%eax
		mov    (%ecx),%esi
		mov    %eax,%edi
		add    %ebp,%esi
		cld    
		pusha  
		mov    $0x000140,%ebp
		sub    %edx,%ebp
		mov    %edx,%eax
		and    $0x000003,%eax
		shr    $0x000002,%edx

	_03b3ca_jump:
		mov    %edx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebp,%esi
		add    %ebp,%edi
		dec    %ebx
		jne    _03b3ca_jump
		popa   

	_03b3da_jump:
		cmpb   $0x000000,_0aa18d_data
		je     _03b3ec_jump
		movb   $0x000001,_0aa18e_data
		jmp    _03b3f3_jump

	_03b3ec_jump:
		xorb   $0x000001,_0aa18e_data

	_03b3f3_jump:
		mov    $0x00003f,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _03a650_func
		xor    %eax,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_03b930_func:
		cmpb   $0x000001,_0aa1b8_data
		sete   %al
		ret    



_03b93c_func:
		xor    %ah,%ah
		mov    %ah,_0aa1b8_data
		ret    



_03b948_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpw   $0x000001,_0c309e_data
		jne    _03b966_jump
		call   _062870_func
		mov    %al,0x000082(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b966_jump:
		movb   $0x000000,0x000082(%eax)
		cmpb   $0x000001,_0aa1b8_data
		jne    _03b9b7_jump
		mov    0x000050(%edx),%cx
		xor    %eax,%eax
		inc    %ecx
		mov    _0c33a0_data,%al
		mov    %cx,0x000050(%edx)
		cmp    %cx,%ax
		jne    _03b9b7_jump
		mov    0x00007a(%edx),%bl
		movw   $0x000000,0x000050(%edx)
		dec    %bl
		mov    %bl,0x00007a(%edx)
		jne    _03b9b7_jump
		mov    0x000085(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%cl
		mov    %bl,_0aa1b8_data
		mov    %cl,0x000085(%edx)

	_03b9b7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b9bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpw   $0x000001,_0c309e_data
		jne    _03b9d5_jump
		xor    %cl,%cl
		mov    %cl,_0aa1b8_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b9d5_jump:
		cmpb   $0x000000,_0aa1b8_data
		jne    _03ba08_jump
		mov    0x000085(%eax),%dh
		test   $0x000008,%dh
		jne    _03ba08_jump
		mov    %dh,%bl
		movw   $0x000000,0x000050(%eax)
		or     $0x000008,%bl
		mov    0x00007b(%eax),%dl
		mov    %bl,0x000085(%eax)
		mov    $0x000001,%bh
		mov    %dl,0x00007a(%eax)
		mov    %bh,_0aa1b8_data

	_03ba08_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ba10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000001,_0a7c9c_data
		jne    _03ba61_jump
		mov    _0c0f9c_data,%edx
		cmp    $0x0a0500,%edx
		jne    _03ba3f_jump
		mov    $0x0a6500,%esi
		mov    %edx,_0c0f78_data
		mov    %esi,_0c0f9c_data
		jmp    _03ba55_jump

	_03ba3f_jump:
		mov    $0x0a0500,%ebx
		mov    $0x0a6500,%ecx
		mov    %ebx,_0c0f9c_data
		mov    %ecx,_0c0f78_data

	_03ba55_jump:
		mov    _0c0f9c_data,%eax
		call   _0162cd_func
		jmp    _03bab8_jump

	_03ba61_jump:
		mov    _0c0f50_data,%eax
		mov    %eax,_0c0f78_data
		mov    _0a7c98_data,%eax
		mov    _0c3378_data,%dl
		mov    %eax,_0c0f9c_data
		cmp    $0x000001,%dl
		jne    _03baa7_jump
		cmpb   $0x000000,_0a7d24_data
		je     _03baa7_jump
		mov    $0x000140,%ecx
		mov    _0c0f50_data,%esi
		mov    %eax,%edi
		mov    $0x0000c8,%eax
		call   *_0c0f54_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03baa7_jump:
		mov    _0c0f9c_data,%edi
		mov    _0c0f50_data,%esi
		call   _0167a0_func

	_03bab8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03bb8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    _0c0fd4_data,%eax
		mov    _0c1128_data,%ebx
		xor    %edx,%edx
		mov    %eax,0x000004(%esp)
		mov    %edx,0x00000c(%esp)
		test   %ebx,%ebx
		jbe    _03bd08_jump
		mov    %edx,0x000008(%esp)

	_03bbb6_jump:
		mov    0x000008(%esp),%edx
		mov    _0c112c_data,%eax
		add    %edx,%eax
		xor    %esi,%esi
		mov    (%eax),%si
		mov    $0x000028,%edi
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		shl    $0x000004,%edx
		mov    %edx,0x000014(%esp)
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		shl    $0x000004,%eax
		imul   $0x000280,%eax,%ebp
		mov    $0x000001,%cl
		mov    %cl,0x000018(%esp)
		mov    0x000004(%esp),%eax
		xor    %edi,%edi
		add    $0x002800,%eax
		mov    %ebp,0x000010(%esp)
		mov    %eax,(%esp)

	_03bc05_jump:
		mov    0x000014(%esp),%esi
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		add    %edi,%esi
		mov    0x000010(%esp),%ebx
		add    %esi,%eax
		add    %edx,%esi
		add    %ebp,%eax
		add    %ebx,%esi
		xor    %ch,%ch

	_03bc20_jump:
		mov    (%eax),%bh
		mov    0x000004(%eax),%dl
		mov    0x00000c(%eax),%bl
		mov    0x000008(%eax),%dh
		test   %bh,%bh
		jne    _03bc3b_jump
		test   %dl,%dl
		jne    _03bc3b_jump
		test   %dh,%dh
		jne    _03bc3b_jump
		test   %bl,%bl
		je     _03bc3d_jump

	_03bc3b_jump:
		mov    %ch,%cl

	_03bc3d_jump:
		test   %bh,%bh
		je     _03bc4d_jump
		test   %dl,%dl
		je     _03bc4d_jump
		test   %dh,%dh
		je     _03bc4d_jump
		test   %bl,%bl
		jne    _03bc51_jump

	_03bc4d_jump:
		mov    %ch,0x000018(%esp)

	_03bc51_jump:
		add    $0x000280,%eax
		cmp    %esi,%eax
		jne    _03bc20_jump
		inc    %edi
		cmp    $0x000004,%edi
		jl     _03bc05_jump
		cmpb   $0x000000,0x000018(%esp)
		je     _03bc78_jump
		mov    0x000008(%esp),%esi
		mov    _0c112c_data,%eax
		add    %esi,%eax
		movb   $0x000000,0x000004(%eax)
		jmp    _03bc9c_jump

	_03bc78_jump:
		test   %cl,%cl
		je     _03bc8d_jump
		mov    0x000008(%esp),%ecx
		mov    _0c112c_data,%eax
		add    %ecx,%eax
		movb   $0x000001,0x000004(%eax)
		jmp    _03bc9c_jump

	_03bc8d_jump:
		mov    0x000008(%esp),%ebx
		mov    _0c112c_data,%eax
		add    %ebx,%eax
		movb   $0x000002,0x000004(%eax)

	_03bc9c_jump:
		mov    0x000008(%esp),%edi
		mov    _0c112c_data,%eax
		add    %edi,%eax
		cmpw   $0x000000,(%eax)
		jne    _03bcb7_jump
		cmpb   $0x000001,0x000004(%eax)
		je     _03bcb7_jump
		movb   $0x000001,0x000004(%eax)

	_03bcb7_jump:
		mov    0x000008(%esp),%ebp
		mov    _0c112c_data,%eax
		add    %ebp,%eax
		cmpw   $0x0004b0,(%eax)
		jb     _03bcce_jump
		movw   $0x000000,(%eax)

	_03bcce_jump:
		mov    0x000008(%esp),%ecx
		mov    0x00000c(%esp),%edi
		mov    _0c112c_data,%eax
		mov    _0d5d84_data,%edx
		add    %ecx,%eax
		xor    %esi,%esi
		mov    _0c1128_data,%ebp
		mov    (%eax),%si
		mov    0x000004(%eax),%al
		inc    %edi
		mov    %al,(%edx,%esi,1)
		lea    0x000006(%ecx),%esi
		mov    %edi,0x00000c(%esp)
		mov    %esi,0x000008(%esp)
		cmp    %ebp,%edi
		jb     _03bbb6_jump

	_03bd08_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03bd14_func:
		push   %ebx
		mov    %eax,%ebx
		movswl %dx,%edx
		sar    $0x000004,%edx
		movswl %dx,%edx
		movswl %ax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		sar    $0x000004,%ebx
		shl    $0x000003,%eax
		movswl %bx,%edx
		add    %eax,%edx
		mov    _0d5d84_data,%eax
		mov    (%edx,%eax,1),%al
		pop    %ebx
		ret    



_03bd44_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0d5d84_data,%ecx
		mov    $0x0004b0,%eax
		call   _084f3c_func
		mov    %eax,%ecx
		mov    %ecx,%edx
		xor    %eax,%eax

	_03bd5d_jump:
		movswl %ax,%ebx
		inc    %eax
		movb   $0x000001,(%edx,%ebx,1)
		cmp    $0x0004b0,%ax
		jl     _03bd5d_jump
		mov    %ecx,_0d5d84_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03bd78_func:
		mov    _0d5d84_data,%eax
		jmp    _0850d4_func

_03bd84_switch:
		.long   _03d405_case
		.long   _03c17c_case
		.long   _03c23a_case
		.long   _03c324_case
		.long   _03c43a_case
		.long   _03c509_case
		.long   _03c64c_case
		.long   _03c787_case
		.long   _03c939_case
		.long   _03ca12_case
		.long   _03cb4a_case
		.long   _03cca3_case
		.long   _03ce57_case
		.long   _03cf5b_case
		.long   _03d10d_case
		.long   _03d2d0_case




_03bdc4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000d0,%esp
		mov    %eax,%ecx
		mov    %dl,0x0000c0(%esp)
		call   _03bd44_func
		call   _03bb8c_func
		xor    %eax,%eax

	_03bde4_jump:
		add    $0x000004,%eax
		xor    %edx,%edx
		mov    %edx,_0b1e04_data(%eax)
		cmp    $0x0012c0,%eax
		jne    _03bde4_jump
		mov    _0c0fd4_data,%eax
		mov    %eax,0x000008(%esp)
		cmpb   $0x000000,0x0000c0(%esp)
		jne    _03be1a_jump
		mov    $_0c0ff8_data,%eax
		mov    %ecx,%edx
		call   _084bac_func
		mov    %eax,_0c0f84_data

	_03be1a_jump:
		mov    _0c0f84_data,%ecx
		test   %ecx,%ecx
		jne    _03be37_jump
		push   $_0a15a4_data
		push   %ecx
		call   _064030_func
		add    $0x000008,%esp
		jmp    _03d503_jump

	_03be37_jump:
		xor    %ebx,%ebx
		mov    %ebx,0x000010(%esp)
		mov    $0x000280,%esi
		mov    $0x000010,%ecx

	_03be47_jump:
		xor    %edi,%edi
		mov    %edi,0x000014(%esp)

	_03be4d_jump:
		mov    0x00000e(%esp),%edx
		mov    0x000012(%esp),%eax
		mov    0x000014(%esp),%ebp
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %ecx,%ebp
		call   _03bd14_func
		mov    %ebp,0x000014(%esp)
		cmp    %ebp,%esi
		jg     _03be4d_jump
		mov    0x000010(%esp),%edi
		add    %ecx,%edi
		mov    %edi,0x000010(%esp)
		cmp    $0x0001e0,%edi
		jl     _03be47_jump
		cmpb   $0x000000,0x0000c0(%esp)
		jne    _03be9e_jump
		mov    $0x04b000,%edx
		mov    $_0c0ff8_data,%eax
		call   _084bac_func
		mov    %eax,_0c0fa0_data

	_03be9e_jump:
		xor    %eax,%eax
		mov    %eax,0x000004(%esp)
		mov    %eax,_0c1db4_data
		mov    %eax,0x000010(%esp)
		mov    %eax,0x000020(%esp)

	_03beb1_jump:
		mov    0x000010(%esp),%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		imul   $0x000028,%eax,%eax
		xor    %edi,%edi
		mov    %eax,0x000018(%esp)
		mov    0x000020(%esp),%eax
		mov    %edi,0x000014(%esp)
		mov    %eax,0x000068(%esp)

	_03bed7_jump:
		mov    0x000004(%esp),%edx
		mov    _0c0fa0_data,%ecx
		mov    0x000014(%esp),%eax
		add    %edx,%ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		add    0x000018(%esp),%eax
		xor    %dh,%dh
		mov    0x000012(%esp),%esi
		mov    %dh,0x0000b4(%esp)
		mov    %dh,0x0000c4(%esp)
		mov    %ecx,_0b0b48_data(,%eax,4)
		mov    0x00000e(%esp),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		mov    %esi,%eax
		mov    %ecx,%edx
		call   _03bd14_func
		test   %al,%al
		jne    _03bf34_jump
		movb   $0x000001,0x0000b4(%esp)
		jmp    _03bf48_jump

	_03bf34_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _03bd14_func
		cmp    $0x000001,%al
		jne    _03bf48_jump
		mov    %al,0x0000c4(%esp)

	_03bf48_jump:
		cmpb   $0x000000,0x0000b4(%esp)
		je     _03bffe_jump
		xor    %eax,%eax
		mov    %eax,0x00000c(%esp)
		mov    0x000004(%esp),%eax
		add    $0x000040,%eax
		mov    %eax,0x00001c(%esp)
		mov    0x000014(%esp),%eax
		mov    %eax,0x00006c(%esp)

	_03bf6f_jump:
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%esi
		shl    $0x000006,%eax
		mov    0x00006c(%esp),%ebp
		add    %eax,%esi
		mov    0x000008(%esp),%eax
		mov    0x000068(%esp),%edx
		add    %ebp,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax

	_03bf90_jump:
		mov    _0c0fa0_data,%edx
		mov    (%eax),%cl
		mov    %cl,(%edx,%esi,1)
		mov    0x000004(%eax),%cl
		mov    %cl,0x000001(%edx,%esi,1)
		mov    0x000008(%eax),%cl
		mov    %cl,0x000002(%edx,%esi,1)
		add    $0x000004,%esi
		mov    0x00000c(%eax),%cl
		add    $0x000280,%eax
		mov    %cl,-0x000001(%edx,%esi,1)
		cmp    %edi,%esi
		jne    _03bf90_jump
		mov    0x00001c(%esp),%ebp
		mov    0x00006c(%esp),%eax
		mov    0x00000c(%esp),%edx
		add    $0x000040,%ebp
		inc    %eax
		inc    %edx
		mov    %ebp,0x00001c(%esp)
		mov    %eax,0x00006c(%esp)
		mov    %edx,0x00000c(%esp)
		cmp    $0x000004,%edx
		jl     _03bf6f_jump
		mov    0x000004(%esp),%esi
		mov    _0c1db4_data,%edi
		add    $0x000100,%esi
		inc    %edi
		mov    %esi,0x000004(%esp)
		mov    %edi,_0c1db4_data
		jmp    _03d4c7_jump

	_03bffe_jump:
		cmpb   $0x000000,0x0000c4(%esp)
		jne    _03d4c7_jump
		mov    0x000014(%esp),%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    0x000018(%esp),%edi
		mov    _0c0f84_data,%edx
		add    %edi,%eax
		add    %ebx,%edx
		mov    %edx,_0b1e08_data(,%eax,4)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000ba,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000050,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000000,(%edx,%eax,1)
		mov    %ebx,%edx
		xor    %ebp,%ebp
		inc    %ebx
		movb   $0x000000,(%edx,%eax,1)
		mov    %ebx,%edx
		mov    %ebp,0x00000c(%esp)
		movb   $0x000000,(%edx,%eax,1)
		mov    0x000014(%esp),%eax
		inc    %ebx
		mov    %eax,0x000064(%esp)
		jmp    _03d461_jump

	_03c06d_jump:
		test   %esi,%esi
		je     _03c09e_jump
		cmp    $0x0000ff,%edx
		ja     _03c088_jump
		mov    (%esp),%ebp
		mov    _0c0f84_data,%edx
		add    %ebp,%edx
		mov    %al,(%edx)
		jmp    _03c09e_jump

	_03c088_jump:
		mov    (%esp),%edi
		mov    _0c0f84_data,%eax
		add    %edi,%eax
		mov    0x0000bc(%esp),%dl
		mov    %dl,(%eax)
		mov    %cl,0x000001(%eax)

	_03c09e_jump:
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000080,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000fc,(%edx,%eax,1)
		mov    %ebx,%edx
		mov    0x00000c(%esp),%cl
		inc    %ebx
		mov    %cl,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x00000f,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000085,(%edx,%eax,1)
		mov    %ebx,%edx
		mov    %ebx,(%esp)
		inc    %ebx
		movb   $0x000000,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000000,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000000,(%edx,%eax,1)
		mov    %ebx,%edx
		movb   $0x000000,(%edx,%eax,1)
		mov    0x000008(%esp),%eax
		mov    0x000064(%esp),%edx
		mov    0x000068(%esp),%esi
		add    %edx,%eax
		xor    %ecx,%ecx
		add    %esi,%eax
		inc    %ebx
		mov    %eax,0x000060(%esp)

	_03c0fe_jump:
		mov    0x000060(%esp),%eax
		mov    (%eax),%al
		mov    %al,0x0000b0(%esp)
		mov    0x000060(%esp),%eax
		mov    0x000004(%eax),%al
		mov    %al,0x0000c8(%esp)
		mov    0x000060(%esp),%eax
		mov    0x000008(%eax),%al
		mov    %al,0x0000cc(%esp)
		mov    0x000060(%esp),%eax
		mov    0x00000c(%eax),%al
		mov    %al,0x0000b8(%esp)
		xor    %al,%al
		cmpb   $0x000000,0x0000b0(%esp)
		je     _03c143_jump
		mov    $0x000001,%al

	_03c143_jump:
		cmpb   $0x000000,0x0000c8(%esp)
		je     _03c14f_jump
		add    $0x000002,%al

	_03c14f_jump:
		cmpb   $0x000000,0x0000cc(%esp)
		je     _03c15b_jump
		add    $0x000004,%al

	_03c15b_jump:
		cmpb   $0x000000,0x0000b8(%esp)
		je     _03c167_jump
		add    $0x000008,%al

	_03c167_jump:
		cmp    $0x00000f,%al
		ja     _03d405_case
		and    $0x0000ff,%eax
		jmp    *%cs:_03bd84_switch(,%eax,4)

	_03c17c_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03c1b8_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000007,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c1b8_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000001,%edx
		jne    _03c1fc_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000004,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c1fc_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000002,%edx
		jne    _03d405_case
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000004,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c23a_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03c283_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000047,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000001,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c283_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000001,%edx
		jne    _03c2d4_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000001,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c2d4_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000002,%edx
		jne    _03d405_case
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000001,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c324_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03c381_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000066,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c7,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000007,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c381_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000001,%edx
		jne    _03c3e1_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000066,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c7,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000004,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c3e1_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000002,%edx
		jne    _03d405_case
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000066,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c7,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000004,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c43a_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03c478_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000047,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000002,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c478_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000001,%edx
		jne    _03c4b9_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000002,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c4b9_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000002,%edx
		jne    _03d405_case
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000002,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c509_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03c56a_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000047,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000002,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000007,(%edx,%eax,1)
		jmp    _03c5cd_jump

	_03c56a_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000001,%edx
		jne    _03c5e1_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000002,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000004,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)

	_03c5cd_jump:
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)

	_03c5e1_jump:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000002,%edx
		jne    _03d405_case
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000002,(%edx,%eax,1)
		mov    %ebx,%esi
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		mov    %dl,(%esi,%eax,1)
		mov    %ebx,%esi
		inc    %ebx
		mov    %ebx,%edx
		movb   $0x0000c6,(%esi,%eax,1)
		inc    %ebx
		movb   $0x000004,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%edx
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c64c_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03c6b5_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000066,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c7,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000047,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000001,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c6b5_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000001,%edx
		jne    _03c71c_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000066,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c7,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000001,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c71c_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000002,%edx
		jne    _03d405_case
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000066,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c7,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000001,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c787_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03c80d_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000066,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c7,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000007,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000047,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000002,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c80d_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000001,%edx
		jne    _03c8a0_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000066,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c7,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000004,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000002,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c8a0_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000002,%edx
		jne    _03d405_case
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000066,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c7,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000004,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000002,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c939_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03c97c_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000047,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000003,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c97c_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000001,%edx
		jne    _03c9c8_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000003,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03c9c8_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000002,%edx
		jne    _03d405_case
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000003,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03ca12_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03ca72_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000047,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000003,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b8(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000007,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03ca72_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000001,%edx
		jne    _03cadc_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000003,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b8(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000004,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03cadc_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000002,%edx
		jne    _03d405_case
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000003,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b8(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000004,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b0(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03cb4a_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03cbc1_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000047,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000003,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b8(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000047,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000001,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03cbc1_jump:
		cmp    $0x000001,%edx
		jne    _03cc29_jump
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000003,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b8(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000001,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03cc29_jump:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000002,%edx
		jne    _03d405_case
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000003,(%edx,%eax,1)
		mov    %ebx,%eax
		add    %edx,%eax
		mov    0x0000b8(%esp),%dl
		inc    %ebx
		mov    %dl,(%eax)
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x000001,(%edx,%eax,1)
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03cca3_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %edx,%eax
		lea    0x000001(%ebx),%edx
		mov    %edx,0x000024(%esp)
		lea    0x000002(%ebx),%edx
		mov    %edx,0x000078(%esp)
		add    %ebx,%esi
		lea    0x000004(%ebx),%edx
		mov    %edx,0x000084(%esp)
		lea    0x000005(%ebx),%edx
		mov    %edx,0x000030(%esp)
		lea    0x000006(%ebx),%edx
		mov    %edx,0x000094(%esp)
		lea    0x000007(%ebx),%edx
		lea    0x000008(%ebx),%edi
		mov    %edx,0x0000a0(%esp)
		lea    0x000009(%ebx),%edx
		test   %eax,%eax
		jne    _03cd57_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%ebp
		movb   $0x000066,(%eax,%ebp,1)
		mov    0x000024(%esp),%ebp
		movb   $0x0000c7,(%eax,%ebp,1)
		mov    0x000078(%esp),%ebp
		mov    0x0000b0(%esp),%bl
		movb   $0x000007,(%eax,%ebp,1)
		mov    %bl,(%esi,%eax,1)
		mov    0x000084(%esp),%esi
		mov    0x0000c8(%esp),%bl
		mov    %bl,(%esi,%eax,1)
		mov    0x000030(%esp),%esi
		movb   $0x0000c6,(%esi,%eax,1)
		mov    0x000094(%esp),%esi
		movb   $0x000047,(%esi,%eax,1)
		mov    0x0000a0(%esp),%esi
		mov    %edx,%ebx
		mov    0x0000b8(%esp),%dl
		movb   $0x000003,(%esi,%eax,1)
		mov    %dl,(%edi,%eax,1)
		jmp    _03d405_case

	_03cd57_jump:
		lea    0x000001(%edx),%ebp
		mov    %ebp,0x000048(%esp)
		lea    0x000002(%edx),%ebp
		mov    %ebp,0x000054(%esp)
		cmp    $0x000001,%eax
		jne    _03cddc_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%ebp
		movb   $0x000066,(%eax,%ebp,1)
		mov    0x000024(%esp),%ebp
		movb   $0x0000c7,(%eax,%ebp,1)
		mov    0x000078(%esp),%ebp
		movb   $0x000004,(%eax,%ebp,1)
		movb   $0x000017,(%esi,%eax,1)
		mov    0x000084(%esp),%esi
		mov    0x0000b0(%esp),%bl
		mov    %bl,(%esi,%eax,1)
		mov    0x000030(%esp),%esi
		mov    0x0000c8(%esp),%bl
		mov    %bl,(%esi,%eax,1)
		mov    0x000094(%esp),%esi
		movb   $0x0000c6,(%esi,%eax,1)
		mov    0x0000a0(%esp),%esi
		movb   $0x000044,(%esi,%eax,1)
		movb   $0x000017,(%edi,%eax,1)
		mov    0x000048(%esp),%edi
		movb   $0x000003,(%edx,%eax,1)
		add    %edi,%eax
		mov    0x0000b8(%esp),%dl
		mov    0x000054(%esp),%ebx
		jmp    _03d403_jump

	_03cddc_jump:
		cmp    $0x000002,%eax
		jne    _03d405_case
		mov    _0c0f84_data,%eax
		mov    %ebx,%ebp
		movb   $0x000066,(%eax,%ebp,1)
		mov    0x000024(%esp),%ebp
		movb   $0x0000c7,(%eax,%ebp,1)
		mov    0x000078(%esp),%ebp
		movb   $0x000004,(%eax,%ebp,1)
		movb   $0x000057,(%esi,%eax,1)
		mov    0x000084(%esp),%esi
		mov    0x0000b0(%esp),%bl
		mov    %bl,(%esi,%eax,1)
		mov    0x000030(%esp),%esi
		mov    0x0000c8(%esp),%bl
		mov    %bl,(%esi,%eax,1)
		mov    0x000094(%esp),%esi
		movb   $0x0000c6,(%esi,%eax,1)
		mov    0x0000a0(%esp),%esi
		movb   $0x000044,(%esi,%eax,1)
		movb   $0x000057,(%edi,%eax,1)
		mov    0x000048(%esp),%esi
		movb   $0x000003,(%edx,%eax,1)
		add    %esi,%eax
		mov    0x0000b8(%esp),%dl
		mov    0x000054(%esp),%ebx
		jmp    _03d403_jump

	_03ce57_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %edx,%eax
		lea    0x000001(%ebx),%edx
		mov    %edx,0x000070(%esp)
		lea    0x000002(%ebx),%edx
		add    %ebx,%esi
		lea    0x000004(%ebx),%edi
		mov    %esi,0x000028(%esp)
		lea    0x000005(%ebx),%esi
		lea    0x000006(%ebx),%ebp
		mov    %ebp,0x000034(%esp)
		test   %eax,%eax
		jne    _03cec4_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%ebp
		movb   $0x000066,(%eax,%ebp,1)
		mov    0x000070(%esp),%ebp
		movb   $0x0000c7,(%eax,%ebp,1)
		movb   $0x000047,(%edx,%eax,1)
		mov    0x000028(%esp),%edx
		movb   $0x000002,(%edx,%eax,1)
		mov    0x0000cc(%esp),%dl
		mov    %dl,(%edi,%eax,1)
		mov    0x0000b8(%esp),%dl
		mov    0x000034(%esp),%ebx
		mov    %dl,(%esi,%eax,1)
		jmp    _03d405_case

	_03cec4_jump:
		inc    %ebp
		mov    %ebp,0x00003c(%esp)
		cmp    $0x000001,%eax
		jne    _03cf0f_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%ebp
		movb   $0x000066,(%eax,%ebp,1)
		mov    0x000070(%esp),%ebp
		movb   $0x0000c7,(%eax,%ebp,1)
		movb   $0x000044,(%edx,%eax,1)
		mov    0x000028(%esp),%edx
		movb   $0x000017,(%edx,%eax,1)
		mov    0x0000cc(%esp),%dl
		movb   $0x000002,(%edi,%eax,1)
		mov    %dl,(%esi,%eax,1)
		add    0x000034(%esp),%eax
		mov    0x0000b8(%esp),%dl
		mov    0x00003c(%esp),%ebx
		jmp    _03d403_jump

	_03cf0f_jump:
		cmp    $0x000002,%eax
		jne    _03d405_case
		mov    _0c0f84_data,%eax
		mov    %ebx,%ebp
		movb   $0x000066,(%eax,%ebp,1)
		mov    0x000070(%esp),%ebp
		movb   $0x0000c7,(%eax,%ebp,1)
		movb   $0x000044,(%edx,%eax,1)
		mov    0x000028(%esp),%edx
		movb   $0x000057,(%edx,%eax,1)
		mov    0x0000cc(%esp),%dl
		movb   $0x000002,(%edi,%eax,1)
		mov    0x000034(%esp),%ebp
		mov    %dl,(%esi,%eax,1)
		add    %ebp,%eax
		mov    0x0000b8(%esp),%dl
		mov    0x00003c(%esp),%ebx
		jmp    _03d403_jump

	_03cf5b_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %edx,%eax
		lea    0x000001(%ebx),%edx
		lea    0x000002(%ebx),%esi
		mov    %edx,0x000074(%esp)
		lea    0x000003(%ebx),%edx
		lea    0x000004(%ebx),%edi
		mov    %edx,0x00002c(%esp)
		lea    0x000005(%ebx),%edx
		mov    %edx,0x000088(%esp)
		lea    0x000006(%ebx),%edx
		mov    %edx,0x000038(%esp)
		lea    0x000007(%ebx),%edx
		mov    %edx,0x0000a4(%esp)
		lea    0x000008(%ebx),%edx
		mov    %edx,0x0000ac(%esp)
		lea    0x000009(%ebx),%edx
		test   %eax,%eax
		jne    _03d00f_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%ebp
		movb   $0x000066,(%eax,%ebp,1)
		mov    0x000074(%esp),%ebp
		movb   $0x0000c7,(%eax,%ebp,1)
		movb   $0x000047,(%esi,%eax,1)
		mov    0x00002c(%esp),%esi
		mov    0x0000cc(%esp),%bl
		movb   $0x000002,(%esi,%eax,1)
		mov    0x000088(%esp),%esi
		mov    %bl,(%edi,%eax,1)
		mov    0x0000b8(%esp),%bl
		mov    %bl,(%esi,%eax,1)
		mov    0x000038(%esp),%esi
		movb   $0x0000c6,(%esi,%eax,1)
		mov    0x0000a4(%esp),%esi
		mov    0x0000ac(%esp),%edi
		movb   $0x000007,(%esi,%eax,1)
		add    %edi,%eax
		mov    %edx,%ebx
		mov    0x0000b0(%esp),%dl
		jmp    _03d403_jump

	_03d00f_jump:
		lea    0x000001(%edx),%ebp
		mov    %ebp,0x00004c(%esp)
		lea    0x000002(%edx),%ebp
		mov    %ebp,0x000058(%esp)
		cmp    $0x000001,%eax
		jne    _03d094_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%ebp
		movb   $0x000066,(%eax,%ebp,1)
		mov    0x000074(%esp),%ebp
		movb   $0x0000c7,(%eax,%ebp,1)
		movb   $0x000044,(%esi,%eax,1)
		mov    0x00002c(%esp),%esi
		movb   $0x000017,(%esi,%eax,1)
		mov    0x000088(%esp),%esi
		mov    0x0000cc(%esp),%bl
		movb   $0x000002,(%edi,%eax,1)
		mov    %bl,(%esi,%eax,1)
		mov    0x000038(%esp),%esi
		mov    0x0000b8(%esp),%bl
		mov    %bl,(%esi,%eax,1)
		mov    0x0000a4(%esp),%esi
		movb   $0x0000c6,(%esi,%eax,1)
		mov    0x0000ac(%esp),%esi
		movb   $0x000004,(%esi,%eax,1)
		mov    0x00004c(%esp),%esi
		movb   $0x000017,(%edx,%eax,1)
		add    %esi,%eax
		mov    0x0000b0(%esp),%dl
		mov    0x000058(%esp),%ebx
		jmp    _03d403_jump

	_03d094_jump:
		cmp    $0x000002,%eax
		jne    _03d405_case
		mov    _0c0f84_data,%eax
		mov    %ebx,%ebp
		movb   $0x000066,(%eax,%ebp,1)
		mov    0x000074(%esp),%ebp
		movb   $0x0000c7,(%eax,%ebp,1)
		movb   $0x000044,(%esi,%eax,1)
		mov    0x00002c(%esp),%esi
		movb   $0x000057,(%esi,%eax,1)
		mov    0x000088(%esp),%esi
		mov    0x0000cc(%esp),%bl
		movb   $0x000002,(%edi,%eax,1)
		mov    %bl,(%esi,%eax,1)
		mov    0x000038(%esp),%esi
		mov    0x0000b8(%esp),%bl
		mov    %bl,(%esi,%eax,1)
		mov    0x0000a4(%esp),%esi
		movb   $0x0000c6,(%esi,%eax,1)
		mov    0x0000ac(%esp),%esi
		movb   $0x000004,(%esi,%eax,1)
		movb   $0x000057,(%edx,%eax,1)
		add    0x00004c(%esp),%eax
		mov    0x0000b0(%esp),%dl
		mov    0x000058(%esp),%ebx
		jmp    _03d403_jump

	_03d10d_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		lea    0x000001(%ebx),%esi
		lea    0x000002(%ebx),%edi
		lea    0x000003(%ebx),%eax
		mov    %eax,0x00007c(%esp)
		lea    0x000004(%ebx),%eax
		mov    %eax,0x00005c(%esp)
		lea    0x000005(%ebx),%eax
		mov    %eax,0x00008c(%esp)
		lea    0x000006(%ebx),%eax
		mov    %eax,0x000098(%esp)
		lea    0x000007(%ebx),%eax
		lea    0x000008(%ebx),%ebp
		mov    %eax,0x0000a8(%esp)
		lea    0x000009(%ebx),%eax
		mov    %eax,0x000044(%esp)
		lea    0x00000a(%ebx),%eax
		mov    %eax,0x000050(%esp)
		test   %edx,%edx
		jne    _03d1ca_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		movb   $0x000066,(%edx,%eax,1)
		movb   $0x0000c7,(%esi,%eax,1)
		mov    0x00007c(%esp),%edx
		movb   $0x000047,(%edi,%eax,1)
		movb   $0x000002,(%edx,%eax,1)
		mov    0x00005c(%esp),%edx
		mov    0x0000cc(%esp),%bl
		mov    %bl,(%edx,%eax,1)
		mov    0x00008c(%esp),%edx
		mov    0x0000b8(%esp),%bl
		mov    %bl,(%edx,%eax,1)
		mov    0x000098(%esp),%edx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    0x0000a8(%esp),%edx
		movb   $0x000047,(%edx,%eax,1)
		movb   $0x000001,(%eax,%ebp,1)
		add    0x000044(%esp),%eax
		mov    0x0000c8(%esp),%dl
		mov    0x000050(%esp),%ebx
		jmp    _03d244_jump

	_03d1ca_jump:
		cmp    $0x000001,%edx
		jne    _03d246_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		movb   $0x000066,(%edx,%eax,1)
		movb   $0x0000c7,(%esi,%eax,1)
		mov    0x00007c(%esp),%edx
		movb   $0x000044,(%edi,%eax,1)
		movb   $0x000017,(%edx,%eax,1)
		mov    0x00005c(%esp),%edx
		movb   $0x000002,(%edx,%eax,1)
		mov    0x00008c(%esp),%edx
		mov    0x0000cc(%esp),%bl
		mov    %bl,(%edx,%eax,1)
		mov    0x000098(%esp),%edx
		mov    0x0000b8(%esp),%bl
		mov    %bl,(%edx,%eax,1)
		mov    0x0000a8(%esp),%edx
		mov    0x000050(%esp),%esi
		mov    0x000050(%esp),%ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    0x000044(%esp),%edx
		movb   $0x000044,(%eax,%ebp,1)
		inc    %ebx
		movb   $0x000017,(%edx,%eax,1)
		mov    %ebx,%edx
		movb   $0x000001,(%esi,%eax,1)
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx

	_03d244_jump:
		mov    %dl,(%eax)

	_03d246_jump:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000002,%edx
		jne    _03d405_case
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000066,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c7,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000002,(%edx,%eax,1)
		mov    %ebx,%edx
		lea    (%eax,%edx,1),%esi
		mov    0x0000cc(%esp),%dl
		inc    %ebx
		mov    %dl,(%esi)
		mov    %ebx,%edx
		lea    (%eax,%edx,1),%esi
		mov    0x0000b8(%esp),%dl
		inc    %ebx
		mov    %dl,(%esi)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000c6,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000044,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000057,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000001,(%edx,%eax,1)
		mov    %ebx,%edx
		add    %edx,%eax
		mov    0x0000c8(%esp),%dl
		inc    %ebx
		jmp    _03d403_jump

	_03d2d0_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		lea    0x000001(%ebx),%esi
		mov    %edx,%eax
		lea    0x000002(%ebx),%edx
		lea    0x000003(%ebx),%edi
		mov    %edi,0x000080(%esp)
		lea    0x000004(%ebx),%edi
		lea    0x000005(%ebx),%ebp
		mov    %ebp,0x000090(%esp)
		lea    0x000006(%ebx),%ebp
		mov    %ebp,0x00009c(%esp)
		test   %eax,%eax
		jne    _03d359_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%ebp
		movb   $0x0000c7,(%eax,%ebp,1)
		mov    0x0000b0(%esp),%bl
		movb   $0x000007,(%esi,%eax,1)
		mov    %bl,(%edx,%eax,1)
		mov    0x000080(%esp),%edx
		mov    0x0000c8(%esp),%bl
		mov    %bl,(%edx,%eax,1)
		mov    0x0000cc(%esp),%dl
		mov    %dl,(%edi,%eax,1)
		add    0x000090(%esp),%eax
		mov    0x0000b8(%esp),%dl
		mov    0x00009c(%esp),%ebx
		jmp    _03d403_jump

	_03d359_jump:
		inc    %ebp
		mov    %ebp,0x000040(%esp)
		cmp    $0x000001,%eax
		jne    _03d3ad_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%ebp
		movb   $0x0000c7,(%eax,%ebp,1)
		movb   $0x000004,(%esi,%eax,1)
		movb   $0x000017,(%edx,%eax,1)
		mov    0x000080(%esp),%edx
		mov    0x0000b0(%esp),%bl
		mov    %bl,(%edx,%eax,1)
		mov    0x0000c8(%esp),%dl
		mov    %dl,(%edi,%eax,1)
		mov    0x000090(%esp),%edx
		mov    0x0000cc(%esp),%bl
		mov    0x00009c(%esp),%esi
		mov    %bl,(%edx,%eax,1)
		add    %esi,%eax
		jmp    _03d3f8_jump

	_03d3ad_jump:
		cmp    $0x000002,%eax
		jne    _03d405_case
		mov    _0c0f84_data,%eax
		mov    %ebx,%ebp
		movb   $0x0000c7,(%eax,%ebp,1)
		movb   $0x000004,(%esi,%eax,1)
		movb   $0x000057,(%edx,%eax,1)
		mov    0x000080(%esp),%edx
		mov    0x0000b0(%esp),%bl
		mov    %bl,(%edx,%eax,1)
		mov    0x0000c8(%esp),%dl
		mov    %dl,(%edi,%eax,1)
		mov    0x000090(%esp),%edx
		mov    0x0000cc(%esp),%bl
		mov    %bl,(%edx,%eax,1)
		add    0x00009c(%esp),%eax

	_03d3f8_jump:
		mov    0x0000b8(%esp),%dl
		mov    0x000040(%esp),%ebx

	_03d403_jump:
		mov    %dl,(%eax)

	_03d405_case:
		mov    $0x000003,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000002,%edx
		jne    _03d42b_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x000001,(%edx,%eax,1)
		mov    %ebx,%edx
		inc    %ebx
		movb   $0x0000cf,(%edx,%eax,1)

	_03d42b_jump:
		mov    0x000060(%esp),%edi
		add    $0x000280,%edi
		inc    %ecx
		mov    %edi,0x000060(%esp)
		cmp    $0x000010,%ecx
		jl     _03c0fe_jump
		mov    _0c0f84_data,%eax
		mov    %ebx,%edx
		mov    0x000064(%esp),%ebp
		inc    %ebx
		movb   $0x0000c3,(%edx,%eax,1)
		mov    0x00000c(%esp),%eax
		inc    %ebp
		inc    %eax
		mov    %ebp,0x000064(%esp)
		mov    %eax,0x00000c(%esp)

	_03d461_jump:
		mov    (%esp),%dh
		mov    %bl,%al
		mov    (%esp),%ecx
		sub    %dh,%al
		mov    %ebx,%edx
		sub    %ecx,%edx
		mov    0x00000c(%esp),%esi
		sub    $0x000004,%edx
		sub    $0x000004,%al
		mov    %edx,%ecx
		mov    %al,0x0000bc(%esp)
		shr    $0x000008,%ecx
		cmp    $0x000004,%esi
		jl     _03c06d_jump
		cmp    $0x0000ff,%edx
		ja     _03d4a4_jump
		mov    (%esp),%ebp
		mov    _0c0f84_data,%edx
		add    %ebp,%edx
		mov    %al,(%edx)
		jmp    _03d4ba_jump

	_03d4a4_jump:
		mov    (%esp),%edi
		mov    _0c0f84_data,%eax
		add    %edi,%eax
		mov    0x0000bc(%esp),%dl
		mov    %dl,(%eax)
		mov    %cl,0x000001(%eax)

	_03d4ba_jump:
		mov    _0c0f84_data,%edx
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x0000c3,(%edx,%eax,1)

	_03d4c7_jump:
		mov    0x000014(%esp),%ebp
		add    $0x000010,%ebp
		mov    %ebp,0x000014(%esp)
		cmp    $0x000280,%ebp
		jl     _03bed7_jump
		mov    0x000020(%esp),%edx
		mov    0x000010(%esp),%ecx
		add    $0x002800,%edx
		add    $0x000010,%ecx
		mov    %edx,0x000020(%esp)
		mov    %ecx,0x000010(%esp)
		cmp    $0x0001e0,%ecx
		jl     _03beb1_jump

	_03d503_jump:
		call   _03bd78_func
		mov    %ebx,_0c1db8_data
		add    $0x0000d0,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03d51c_func:
		push   %ecx
		push   %edi
		mov    %eax,%ecx
		test   %ax,%ax
		jle    _03d59a_jump
		cmp    $0x000140,%ax
		jge    _03d59a_jump
		test   %dx,%dx
		jle    _03d59a_jump
		cmp    $0x0000c8,%dx
		jge    _03d59a_jump
		cmpb   $0x000001,_0a7c9c_data
		jne    _03d57d_jump
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _0c0f9c_data,%edi
		shl    $0x000004,%eax
		movswl %cx,%edx
		xor    %ch,%ch
		sar    $0x000002,%edx
		and    $0x000003,%cl
		add    %eax,%edx
		mov    $0x000001,%eax
		movswl %cx,%ecx
		add    %edx,%edi
		shl    %cl,%eax
		movswl %bx,%ecx
		call   _0162d8_func
		pop    %edi
		pop    %ecx
		ret    

	_03d57d_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _0c0f9c_data,%edx
		shl    $0x000006,%eax
		add    %edx,%eax
		movswl %cx,%edx
		mov    %bl,(%edx,%eax,1)

	_03d59a_jump:
		pop    %edi
		pop    %ecx
		ret    



_03d5a0_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %cx,(%esp)
		test   %dx,%dx
		jle    _03d63e_jump
		cmp    $0x000140,%dx
		jge    _03d63e_jump
		test   %bx,%bx
		jle    _03d63e_jump
		cmp    $0x0000c8,%bx
		jge    _03d63e_jump
		cmpb   $0x000001,_0a7c9c_data
		jne    _03d623_jump
		movswl %bx,%eax
		movswl %dx,%ebx
		lea    0x000000(,%eax,4),%ecx
		mov    %ebx,%edx
		add    %eax,%ecx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		shl    $0x000004,%ecx
		lea    (%ecx,%eax,1),%edi
		mov    %ebx,%edx
		mov    $0x000004,%ecx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000001,%eax
		mov    %dl,%cl
		shl    %cl,%eax
		mov    -0x000002(%esp),%ecx
		add    %esi,%edi
		sar    $0x000010,%ecx
		call   _0162d8_func
		jmp    _03d63e_jump

	_03d623_jump:
		movswl %bx,%eax
		lea    0x000000(,%eax,4),%ebx
		add    %eax,%ebx
		shl    $0x000006,%ebx
		movswl %dx,%eax
		add    %ebx,%esi
		add    %eax,%esi
		mov    (%esp),%al
		mov    %al,(%esi)

	_03d63e_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    



_03d754_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0c0fdc_data,%ebx
		movswl %dx,%edx
		mov    %ebx,0x000004(%esp)
		mov    %ebx,_0c0fd8_data
		xor    %ebx,%ebx
		sar    $0x000004,%edx
		mov    _0c1124_data,%bx
		imul   %edx,%ebx
		movswl %ax,%edx
		sar    $0x000004,%edx
		add    %edx,%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0c112c_data,%ebx
		add    %edx,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,(%esp)
		mov    %edx,0x000008(%esp)
		mov    %edx,0x00000c(%esp)

	_03d7a6_jump:
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%ebp
		mov    %ecx,0x000010(%esp)
		add    %ebp,%edx
		mov    0x000008(%esp),%ebp

	_03d7bd_jump:
		xor    %ecx,%ecx

	_03d7bf_jump:
		mov    (%ebx),%di
		test   %di,%di
		jl     _03d7e9_jump
		cmp    $0x0004b0,%di
		jge    _03d7e9_jump
		cmpb   $0x000000,0x000004(%ebx)
		jne    _03d7e9_jump
		movswl %di,%esi
		mov    _0b0b48_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _01644e_func
		jmp    _03d7f0_jump

	_03d7e9_jump:
		mov    %edx,%edi
		call   _016406_func

	_03d7f0_jump:
		add    $0x000006,%ebx
		add    $0x000010,%ecx
		add    $0x000004,%edx
		cmp    $0x000140,%cx
		jl     _03d7bf_jump
		xor    %esi,%esi
		mov    _0c1124_data,%si
		sub    $0x000014,%esi
		imul   $0x000006,%esi,%esi
		add    %esi,%ebx
		mov    0x000010(%esp),%esi
		add    $0x000010,%esi
		add    $0x0004b0,%edx
		mov    %esi,0x000010(%esp)
		cmp    $0x0000e0,%si
		jl     _03d7bd_jump
		mov    0x000008(%esp),%ecx
		mov    0x00000c(%esp),%esi
		add    $0x000040,%ecx
		add    $0x004600,%esi
		mov    %ecx,0x000008(%esp)
		mov    %esi,0x00000c(%esp)
		cmp    $0x000100,%ecx
		jne    _03d7a6_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03e0bc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %ecx,%esi

	_03e0c6_jump:
		cmp    %si,%dx
		je     _03e0dd_jump
		movswl %si,%ecx
		lea    0x000001(%ecx),%ebp
		movswl %dx,%eax
		cmp    %ebp,%eax
		je     _03e0dd_jump
		dec    %ecx
		cmp    %ecx,%eax
		jne    _03e0fa_jump

	_03e0dd_jump:
		cmp    0x000018(%esp),%bx
		je     _03e142_jump
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000001(%eax),%ebp
		movswl %bx,%ecx
		cmp    %ebp,%ecx
		je     _03e142_jump
		dec    %eax
		cmp    %eax,%ecx
		je     _03e142_jump

	_03e0fa_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%al
		push   %eax
		mov    0x00001a(%esp),%eax
		movswl %bx,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		sar    %eax
		mov    %ax,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		push   %eax
		movswl %si,%eax
		add    %edx,%eax
		sar    %eax
		mov    %ax,0x00000c(%esp)
		mov    0x00000a(%esp),%ecx
		mov    %edi,%eax
		sar    $0x000010,%ecx
		call   _03e0bc_func
		mov    0x000004(%esp),%edx
		mov    (%esp),%ebx
		jmp    _03e0c6_jump

	_03e142_jump:
		movswl %bx,%ebx
		movswl %dx,%edx
		xor    %ecx,%ecx
		mov    %edi,%eax
		mov    0x00001c(%esp),%cl
		call   _03d5a0_func
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_03e160_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bx,(%esp)
		mov    %cl,0x000004(%esp)
		test   %dx,%dx
		jle    _03e1af_jump
		cmp    $0x0000c8,%dx
		jge    _03e1af_jump
		mov    %eax,%ecx
		jmp    _03e19c_jump

	_03e181_jump:
		test   %cx,%cx
		jle    _03e19b_jump
		cmp    $0x000140,%cx
		jge    _03e19b_jump
		xor    %ebx,%ebx
		movswl %si,%edx
		mov    0x000004(%esp),%bl
		call   _03d51c_func

	_03e19b_jump:
		inc    %ecx

	_03e19c_jump:
		mov    -0x000002(%esp),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		movswl %cx,%eax
		cmp    %edx,%eax
		jl     _03e181_jump

	_03e1af_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_03e1b8_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %bx,(%esp)
		mov    %cl,0x000004(%esp)
		test   %ax,%ax
		jle    _03e206_jump
		cmp    $0x000140,%ax
		jge    _03e206_jump
		mov    %edx,%ecx
		jmp    _03e1f3_jump

	_03e1d8_jump:
		test   %cx,%cx
		jle    _03e1f2_jump
		cmp    $0x0000c8,%cx
		jge    _03e1f2_jump
		xor    %ebx,%ebx
		movswl %si,%eax
		mov    0x000004(%esp),%bl
		call   _03d51c_func

	_03e1f2_jump:
		inc    %ecx

	_03e1f3_jump:
		mov    -0x000002(%esp),%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		movswl %cx,%edx
		cmp    %eax,%edx
		jl     _03e1d8_jump

	_03e206_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_03e20c_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %ax,(%esp)
		mov    %edx,%edi
		mov    %bx,0x000004(%esp)
		mov    %cl,0x000008(%esp)
		test   %dx,%dx
		jle    _03e267_jump
		cmp    $0x0000c8,%dx
		jge    _03e267_jump
		mov    %eax,%esi
		jmp    _03e250_jump

	_03e230_jump:
		test   %si,%si
		jle    _03e24f_jump
		cmp    $0x000140,%si
		jge    _03e24f_jump
		mov    _0c0f78_data,%eax
		xor    %ecx,%ecx
		movswl %di,%ebx
		mov    0x000008(%esp),%cl
		call   _03d5a0_func

	_03e24f_jump:
		inc    %esi

	_03e250_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		movswl %si,%edx
		cmp    %eax,%edx
		jl     _03e230_jump

	_03e267_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    



_03e270_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dx,(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cl,0x000008(%esp)
		test   %ax,%ax
		jle    _03e2ca_jump
		cmp    $0x000140,%ax
		jge    _03e2ca_jump
		mov    %edx,%esi
		jmp    _03e2b3_jump

	_03e293_jump:
		test   %si,%si
		jle    _03e2b2_jump
		cmp    $0x0000c8,%si
		jge    _03e2b2_jump
		mov    _0c0f78_data,%eax
		xor    %ecx,%ecx
		movswl %di,%edx
		mov    0x000008(%esp),%cl
		call   _03d5a0_func

	_03e2b2_jump:
		inc    %esi

	_03e2b3_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		movswl %si,%ebx
		add    %edx,%eax
		cmp    %eax,%ebx
		jl     _03e293_jump

	_03e2ca_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    



_03e2d0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,(%esp)
		mov    %dx,0x000004(%esp)
		mov    %bx,0x000008(%esp)
		mov    %cx,0x00000c(%esp)
		mov    0x000006(%esp),%ebp
		mov    0x000002(%esp),%edi
		mov    -0x000002(%esp),%esi
		mov    $0x00000c,%ecx
		sar    $0x000010,%ebp
		sar    $0x000010,%edi
		sar    $0x000010,%esi
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03e160_func
		mov    0x000004(%esp),%eax
		mov    0x00000c(%esp),%edx
		mov    $0x00000c,%ecx
		add    %edx,%eax
		mov    %ebp,%ebx
		dec    %eax
		mov    0x00000a(%esp),%ebp
		movswl %ax,%edx
		mov    %esi,%eax
		sar    $0x000010,%ebp
		call   _03e160_func
		mov    $0x00000c,%ecx
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03e1b8_func
		mov    (%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    $0x00000c,%ecx
		add    %ebx,%eax
		mov    %edi,%edx
		dec    %eax
		mov    %ebp,%ebx
		cwtl   
		call   _03e1b8_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03e364_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		call   _03e51c_func
		cmp    $0x000064,%bl
		jne    _03e388_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000008,%al
		mov    $0x0003c2,%edx
		and    $0x0000fb,%al
		jmp    _03e425_jump

	_03e388_jump:
		cmp    $0x000050,%bl
		jne    _03e3a3_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000004,%al
		mov    $0x0003c2,%edx
		and    $0x0000f7,%al
		jmp    _03e425_jump

	_03e3a3_jump:
		cmp    $0x000046,%bl
		jne    _03e3b9_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003c2,%edx
		and    $0x0000f3,%al
		jmp    _03e425_jump

	_03e3b9_jump:
		cmp    $0x00003c,%bl
		jne    _03e426_jump
		mov    $0x000063,%al
		mov    $0x0003c2,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x00000c,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000ff,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000c4,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx

	_03e425_jump:
		out    %al,(%dx)

	_03e426_jump:
		cmp    $0x000032,%bl
		jne    _03e48b_jump
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x000074,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000ff,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000fc,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)

	_03e48b_jump:
		mov    $0x0001f4,%eax
		mov    %bl,_0c33a0_data
		call   _08788a_func
		pop    %edx
		pop    %ebx
		ret    



_03e4a0_func:
		push   %edx
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d5d8a_data
		mov    $0x000010,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d5d89_data
		mov    $0x000011,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d5d88_data
		mov    $0x000006,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d5d8c_data
		mov    $0x000007,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d5d8b_data
		mov    $0x000016,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %al,_0d5d8d_data
		pop    %edx
		ret    



_03e51c_func:
		push   %edx
		mov    $0x0003c2,%edx
		mov    _0d5d8a_data,%al
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d5d89_data,%al
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d5d88_data,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d5d8c_data,%al
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d5d8b_data,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d5d8d_data,%al
		out    %al,(%dx)
		pop    %edx
		ret    



_03e6bc_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $_0b3728_data,%edx
		xor    %eax,%eax

	_03e6c7_jump:
		inc    %eax
		movb   $0x000000,(%ebx)
		inc    %ebx
		movw   $0x000000,(%edx)
		add    $0x000002,%edx
		cmp    $0x000300,%ax
		jl     _03e6c7_jump
		pop    %edx
		pop    %ebx
		ret    



_03e6e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0b3728_data,%ebx
		mov    %eax,%edx
		xor    %esi,%esi

	_03e6ed_jump:
		mov    $0x000006,%cl
		inc    %edx
		xor    %eax,%eax
		add    $0x000002,%ebx
		mov    -0x000001(%edx),%al
		inc    %esi
		cwtl   
		shl    %cl,%eax
		mov    %ax,-0x000002(%ebx)
		cmp    $0x000300,%si
		jl     _03e6ed_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e70c_func:
		push   %ecx
		push   %esi
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		mov    $_0b3d28_data,%esi
		sub    %eax,%ecx
		mov    %ax,_0c30ba_data
		shl    %cl,%edx
		mov    $_0b3d28_data,%eax
		mov    %dx,_0c317e_data
		mov    $0x000001,%dl
		mov    $0x0000ff,%ecx
		mov    %dl,_0c33d8_data
		call   _03e6bc_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		pop    %esi
		pop    %ecx
		ret    



_03e764_func:
		push   %ecx
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		sub    %eax,%ecx
		shl    %cl,%edx
		mov    %dx,_0c317e_data
		mov    $0x000002,%dl
		mov    %ax,_0c30ba_data
		mov    %dl,_0c33d8_data
		pop    %ecx
		ret    



_03e78c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    _0c317e_data,%cx
		test   %cx,%cx
		je     _03e872_jump
		mov    $_0b3728_data,%eax
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %ebx,%edx
		dec    %edi
		mov    _0c33d8_data,%bl
		mov    %di,_0c317e_data
		cmp    $0x000001,%bl
		jne    _03e7f1_jump
		xor    %ebx,%ebx

	_03e7c5_jump:
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0c30ba_data,%cl
		shl    %cl,%edi
		add    $0x000002,%eax
		mov    %edi,%ecx
		mov    -0x000002(%eax),%di
		inc    %edx
		add    %ecx,%edi
		inc    %ebx
		mov    %di,-0x000002(%eax)
		cmp    $0x000300,%bx
		jge    _03e821_jump
		jmp    _03e7c5_jump

	_03e7f1_jump:
		cmp    $0x000002,%bl
		jne    _03e821_jump
		xor    %ebx,%ebx

	_03e7f8_jump:
		cmpw   $0x000000,(%eax)
		jle    _03e815_jump
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0c30ba_data,%cl
		shl    %cl,%edi
		mov    %edi,%ecx
		sub    %cx,(%eax)

	_03e815_jump:
		add    $0x000002,%eax
		inc    %ebx
		inc    %edx
		cmp    $0x000300,%bx
		jl     _03e7f8_jump

	_03e821_jump:
		mov    $_0b3728_data,%eax
		xor    %edx,%edx

	_03e828_jump:
		inc    %esi
		movswl (%eax),%ebx
		add    $0x000002,%eax
		sar    $0x000006,%ebx
		inc    %edx
		mov    %bl,-0x000001(%esi)
		cmp    $0x000300,%dx
		jl     _03e828_jump
		mov    $_0b3d28_data,%esi
		mov    $0x0000ff,%ecx
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		cmpw   $0x000000,_0c317e_data
		jne    _03e872_jump
		orb    $0x000040,_0c33d8_data

	_03e872_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03e87c_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		cwtl   
		call   _03e764_func
		mov    _0c317e_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _03e8b1_jump

	_03e895_jump:
		call   _018b0f_func
		call   _018aff_func
		mov    $_0b3d28_data,%edx
		mov    %ecx,%eax
		inc    %ebx
		call   _03e78c_func
		cmp    %si,%bx
		jl     _03e895_jump

	_03e8b1_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03e8b8_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    _0c33d3_data,%al
		je     _03e92b_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %al,_0c33d3_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0b3d28_data,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _03e6e0_func
		cmpb   $0x000041,_0c33d8_data
		jne    _03e92b_jump
		mov    $0x0000ff,%ecx
		mov    %edi,%esi
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_03e92b_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_03e930_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %ax,0x000004(%esp)
		mov    %edx,%ecx
		mov    %bx,0x000008(%esp)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%esi
		sub    %edx,%esi
		movswl %cx,%edx
		mov    %edx,%ecx
		lea    0x000000(,%edx,4),%eax
		shl    $0x000008,%esi
		sub    %edx,%eax
		mov    _0b4328_data(%esi,%eax,1),%bl
		mov    %bl,(%esp)
		mov    _0b4329_data(%esi,%eax,1),%bl
		mov    _0b432a_data(%esi,%eax,1),%al
		mov    %al,0x000002(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bl,0x000001(%esp)
		mov    %eax,%edi
		lea    0x000003(%eax),%esi
		jmp    _03e9d1_jump

	_03e993_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000300,%edx,%edx
		mov    _0b4328_data(%edx,%esi,1),%bl
		mov    %bl,_0b4328_data(%edx,%edi,1)
		mov    _0b4329_data(%edx,%esi,1),%bl
		add    $0x000003,%esi
		mov    %bl,_0b4329_data(%edx,%edi,1)
		add    $0x000003,%edi
		mov    _0b4327_data(%edx,%esi,1),%al
		inc    %ecx
		mov    %al,_0b4327_data(%edx,%edi,1)

	_03e9d1_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    %eax,%ecx
		jl     _03e993_jump
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %eax,%edx
		lea    0x000000(,%ecx,4),%esi
		shl    $0x000002,%eax
		sub    %ecx,%esi
		sub    %edx,%eax
		shl    $0x000008,%esi
		mov    (%esp),%dl
		mov    %dl,_0b4328_data(%esi,%eax,1)
		mov    0x000001(%esp),%dl
		mov    $_0b3d28_data,%edi
		mov    %dl,_0b4329_data(%esi,%eax,1)
		mov    0x000002(%esp),%dl
		mov    $0x000300,%ecx
		mov    %dl,_0b432a_data(%esi,%eax,1)
		add    $_0b4328_data,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _03e6e0_func
		cmpw   $0x000000,_0c317e_data
		jne    _03ea50_jump
		movw   $0x000001,_0c317e_data

	_03ea50_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03ea58_func:
		push   %edx
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000008,%eax
		mov    $_0b3d28_data,%edx
		add    $_0b4328_data,%eax
		call   _03e78c_func
		pop    %edx
		ret    



_03ea80_func:
		push   %edx
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0b4328_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03e70c_func
		pop    %edx
		ret    



_03eaa8_func:
		push   %edx
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0b4328_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03e764_func
		pop    %edx
		ret    



_03ead0_func:
		push   %edx
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0b4328_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03e87c_func
		pop    %edx
		ret    



_03eaf8_func:
		push   %ecx
		push   %esi
		push   %edi
		call   _018b0f_func
		cmpb   $0x000001,_0a7c9c_data
		jne    _03eb32_jump
		call   _03ba10_func
		mov    $0x003e80,%ecx
		mov    _0c0f78_data,%edi
		call   _0143ce_func
		mov    $0x003e80,%ecx
		mov    _0c0f9c_data,%edi
		call   _0143ce_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_03eb32_jump:
		mov    _0a7c98_data,%esi
		mov    _0c0f50_data,%edi
		call   _01694c_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03eb48_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%bl
		xor    %edx,%edx
		xor    %ecx,%ecx

	_03eb57_jump:
		call   _018bed_func
		cmpb   $0x000001,_0a7c9c_data
		jne    _03eb8e_jump
		call   _018b0f_func
		call   _03ba10_func
		call   _018aff_func
		cmp    _0c339f_data,%cl
		je     _03eb83_jump
		call   _018b72_func
		mov    %eax,%edx

	_03eb83_jump:
		test   %bl,%bl
		jne    _03ebb5_jump
		call   _03ea58_func
		jmp    _03ebb5_jump

	_03eb8e_jump:
		call   _018b0f_func
		call   _018aff_func
		cmp    _0c339f_data,%cl
		je     _03eba7_jump
		call   _018b72_func
		mov    %eax,%edx

	_03eba7_jump:
		test   %bl,%bl
		jne    _03ebb0_jump
		call   _03ea58_func

	_03ebb0_jump:
		call   _03ba10_func

	_03ebb5_jump:
		cmp    (%esp),%ecx
		je     _03ebc1_jump
		mov    %edx,%eax
		call   *(%esp)
		jmp    _03ebc6_jump

	_03ebc1_jump:
		mov    $0x000001,%eax

	_03ebc6_jump:
		mov    %cl,%bl
		test   %ax,%ax
		je     _03eb57_jump
		cmpl   $_038054_jump,(%esp)
		je     _03ebde_jump
		xor    %ah,%ah
		mov    %ah,_0c33a4_data

	_03ebde_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ece4_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $0x000300,%ecx
		mov    $_0b4328_data,%esi
		mov    _0c33d3_data,%al
		mov    $_0b30c8_data,%edi
		mov    %al,_0c33a1_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0b4328_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0b3d28_data,%edi
		xor    %ah,%ah
		mov    %edx,%esi
		mov    %ah,_0c33d3_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_03ed58_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000300,%ecx
		mov    $_0b30c8_data,%esi
		mov    _0c33a1_data,%al
		mov    $_0b4328_data,%edi
		mov    %al,_0c33d3_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03ed88_func:
		mov    _0c0fd0_data,%eax
		mov    %eax,_0c0f80_data
		mov    _0c0fc4_data,%eax
		mov    %eax,_0c0f88_data
		mov    _0c0fa8_data,%eax
		mov    %eax,_0c0f98_data
		mov    _0c0f90_data,%eax
		mov    %eax,_0c0fd0_data
		mov    _0c0f8c_data,%eax
		mov    %eax,_0c0fc4_data
		mov    _0c0f94_data,%eax
		mov    %eax,_0c0fa8_data
		ret    



_03edc8_func:
		mov    _0c0f80_data,%eax
		mov    %eax,_0c0fd0_data
		mov    _0c0f88_data,%eax
		mov    %eax,_0c0fc4_data
		mov    _0c0f98_data,%eax
		mov    %eax,_0c0fa8_data
		ret    

	_03ede8_jump:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x00fa00,%ecx
		mov    _0c0fd0_data,%esi
		mov    _0c0f50_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03ee10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x000140,%edi
		mov    _0c0eac_data,%dx
		mov    _0c0eb0_data,%bx
		sub    %edx,%edi
		mov    _0a7cd3_data,%ah
		add    %ebx,%edi
		test   %ah,%ah
		jne    _03ee5d_jump
		mov    $0x00fa00,%ecx
		mov    _0c0f44_data,%esi
		mov    _0c0f78_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _03ef59_jump

	_03ee5d_jump:
		mov    _0aa1bc_data,%eax
		mov    _0c0eb0_data,%edx
		cmp    %edx,%eax
		je     _03eea0_jump
		jge    _03ee96_jump
		mov    _0c0eaa_data,%ecx
		mov    _0c0eae_data,%ebx
		mov    _0c0eb2_data,%edx
		mov    _0c0eba_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _022f0c_func

	_03ee96_jump:
		mov    _0c0eb0_data,%eax
		mov    %eax,_0aa1bc_data

	_03eea0_jump:
		mov    _0c0ebc_data,%ebx
		lea    0x000000(,%ebx,4),%eax
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0c0f78_data,%eax
		shl    $0x000006,%ebx
		call   _085360_func
		mov    _0c0f78_data,%edx
		mov    _0c0eb0_data,%ecx
		mov    _0c0ebc_data,%ebx
		add    %ecx,%edx
		lea    0x000000(,%ebx,4),%ecx
		add    %ebx,%ecx
		mov    _0c0eb0_data,%esi
		shl    $0x000006,%ecx
		mov    _0c0f44_data,%ebx
		lea    (%edx,%ecx,1),%eax
		add    %esi,%ebx
		mov    _0c0ebc_data,%si
		jmp    _03ef1c_jump

	_03eef8_jump:
		mov    _0c0eb0_data,%dx
		jmp    _03ef09_jump

	_03ef01_jump:
		inc    %edx
		inc    %eax
		mov    (%ebx),%cl
		inc    %ebx
		mov    %cl,-0x000001(%eax)

	_03ef09_jump:
		mov    _0c0eac_data,%ebp
		movswl %dx,%ecx
		cmp    %ebp,%ecx
		jl     _03ef01_jump
		movswl %di,%ecx
		inc    %esi
		add    %ecx,%eax

	_03ef1c_jump:
		add    %ecx,%ebx
		mov    _0c0eb4_data,%ebp
		movswl %si,%ecx
		cmp    %ebp,%ecx
		jl     _03eef8_jump
		mov    $0x0000c8,%ebx
		mov    _0c0f78_data,%edx
		sub    %ebp,%ebx
		lea    0x000000(,%ebp,4),%eax
		lea    0x000000(,%ebx,4),%ecx
		add    %ebp,%eax
		add    %ecx,%ebx
		shl    $0x000006,%eax
		shl    $0x000006,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _085360_func

	_03ef59_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ef60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %edx,%edx
		mov    _0c31b3_data,%ah
		mov    %edx,_0d5d80_data
		test   $0x000020,%ah
		je     _03f2ca_jump
		xor    %ecx,%ecx
		mov    $0x00003f,%esi
		mov    $0x000008,%ebp
		mov    $0x000003,%edi

	_03ef8e_jump:
		mov    _0c0fe4_data,%eax
		mov    _0b4328_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0b4329_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0b432a_data(%ecx),%dl
		mov    %dl,0x002d02(%ecx,%eax,1)
		xor    %edx,%edx
		mov    _0b4328_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03efd6_jump
		mov    %ebx,%eax

	_03efd6_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b4329_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03effb_jump
		mov    %ebx,%eax

	_03effb_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b432a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f026_jump
		mov    %ebx,%eax

	_03f026_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x000002(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b4328_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f04c_jump
		mov    %ebx,%eax

	_03f04c_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x000f00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b4329_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f075_jump
		mov    %ebx,%eax

	_03f075_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x000f01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b432a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f09e_jump
		mov    %ebx,%eax

	_03f09e_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x000f02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b4328_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f0cc_jump
		mov    %ebx,%eax

	_03f0cc_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x001500(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b4329_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f0fa_jump
		mov    %ebx,%eax

	_03f0fa_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x001501(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b432a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f129_jump
		mov    %ebx,%eax

	_03f129_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x001502(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b4328_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f158_jump
		mov    %ebx,%eax

	_03f158_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x001e00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b4329_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f187_jump
		mov    %ebx,%eax

	_03f187_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x001e01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b432a_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f1b6_jump
		mov    %ebx,%eax

	_03f1b6_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x001e02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b4328_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f1df_jump
		mov    %ebx,%eax

	_03f1df_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b4329_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f208_jump
		mov    %ebx,%eax

	_03f208_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b432a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03f239_jump
		mov    %ebx,%eax

	_03f239_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0b4325_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0b4326_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0b4327_data(%ecx)
		cmp    $0x000300,%ecx
		jne    _03ef8e_jump
		mov    $0x000005,%edx
		xor    %eax,%eax
		call   _03f4f4_func
		mov    $0x000007,%edx
		mov    $0x000005,%eax
		call   _03f4f4_func
		mov    $0x00000a,%edx
		mov    $0x000007,%eax
		call   _03f4f4_func
		mov    $0x00000e,%edx
		mov    $0x00000a,%eax
		call   _03f4f4_func
		xor    %edx,%edx
		mov    $0x0000c8,%eax
		mov    %dx,_0c3014_data
		call   _06a9a0_func
		inc    %eax
		mov    %ax,_0c3016_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f2ca_jump:
		testb  $0x000004,_0c3348_data
		je     _03f4eb_jump
		xor    %ecx,%ecx
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_03f2e3_jump:
		mov    _0c0fe4_data,%eax
		mov    _0b4328_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0b4329_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0b432a_data(%ecx),%dl
		xor    %ebx,%ebx
		mov    %dl,0x002d02(%ecx,%eax,1)
		mov    %esi,%eax
		mov    _0b4328_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _03f31f_jump
		mov    %ebx,%eax

	_03f31f_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b4329_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f344_jump
		mov    %ebx,%eax

	_03f344_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b432a_data(%ecx),%dl
		imul   $0x00001e,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f36a_jump
		mov    %ebx,%eax

	_03f36a_jump:
		mov    _0c0fe4_data,%edx
		xor    %ebx,%ebx
		mov    %al,0x000002(%ecx,%edx,1)
		mov    %esi,%eax
		mov    _0b4328_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _03f384_jump
		mov    %ebx,%eax

	_03f384_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b4329_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f3ad_jump
		mov    %ebx,%eax

	_03f3ad_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b432a_data(%ecx),%dl
		imul   $0x00001e,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03f3d9_jump
		mov    %ebx,%eax

	_03f3d9_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0b4325_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0b4326_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0b4327_data(%ecx)
		cmp    $0x0002fd,%ecx
		jne    _03f2e3_jump
		mov    $0x00000e,%edx
		xor    %eax,%eax
		call   _03f4f4_func
		xor    %ecx,%ecx
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_03f428_jump:
		xor    %edx,%edx
		mov    _0b4328_data(%ecx),%dl
		imul   $0x000054,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f444_jump
		mov    %ebx,%eax

	_03f444_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x001b00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b4329_data(%ecx),%dl
		imul   $0x00003e,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f46d_jump
		mov    %ebx,%eax

	_03f46d_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x001b01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0b432a_data(%ecx),%dl
		imul   $0x00001e,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03f499_jump
		mov    %ebx,%eax

	_03f499_jump:
		mov    _0c0fe4_data,%edx
		mov    %al,0x001aff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0b4325_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0b4326_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0b4327_data(%ecx)
		cmp    $0x0002fd,%ecx
		jne    _03f428_jump
		mov    $0x000009,%edx
		xor    %eax,%eax
		call   _03f4f4_func
		mov    $0x00000e,%edx
		mov    $0x000009,%eax
		call   _03f4f4_func

	_03f4eb_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f4f4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000028(%esp)
		inc    %eax
		mov    %ax,0x000024(%esp)
		cmp    %dx,%ax
		jge    _03f6a0_jump

	_03f515_jump:
		xor    %esi,%esi

	_03f517_jump:
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		imul   $0x000300,%eax,%ebp
		movswl %si,%ecx
		mov    _0c0fe4_data,%ebx
		lea    (%ecx,%ecx,2),%ecx
		lea    (%ebx,%ebp,1),%eax
		mov    (%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    0x000026(%esp),%edx
		mov    %eax,0x000008(%esp)
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %edx,%edi
		mov    %eax,0x000004(%esp)
		sub    %eax,%edi
		mov    0x000008(%esp),%eax
		imul   %edi,%eax
		mov    %eax,0x00000c(%esp)
		imul   $0x000300,%edx,%eax
		add    %eax,%ebx
		mov    %eax,0x000014(%esp)
		xor    %eax,%eax
		mov    (%ecx,%ebx,1),%al
		mov    (%esp),%ebx
		mov    %eax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,0x000018(%esp)
		mov    %eax,%ebx
		imul   0x000008(%esp),%ebx
		add    0x00000c(%esp),%ebx
		mov    (%esp),%eax
		sub    %eax,%edx
		mov    %edx,0x000010(%esp)
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    0x000010(%esp),%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    0x000004(%esp),%edx
		cmp    %ebx,%eax
		jle    _03f5b9_jump
		mov    %ebx,%eax

	_03f5b9_jump:
		mov    %eax,0x00000c(%esp)
		imul   $0x000300,%edx,%eax
		mov    _0c0fe4_data,%edx
		mov    %eax,0x00001c(%esp)
		add    %edx,%eax
		mov    0x00000c(%esp),%bl
		mov    %bl,(%ecx,%eax,1)
		lea    (%edx,%ebp,1),%eax
		mov    0x000001(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %edi,%ebx
		imul   %eax,%ebx
		add    0x000014(%esp),%edx
		mov    0x000001(%ecx,%edx,1),%al
		mov    0x000018(%esp),%edx
		and    $0x0000ff,%eax
		imul   %eax,%edx
		add    %ebx,%edx
		mov    0x000010(%esp),%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		cmp    %ebx,%eax
		jle    _03f617_jump
		mov    %ebx,%eax

	_03f617_jump:
		mov    _0c0fe4_data,%edx
		mov    %eax,0x00000c(%esp)
		mov    0x00001c(%esp),%eax
		add    %edx,%eax
		mov    0x00000c(%esp),%bl
		mov    %bl,0x000001(%ecx,%eax,1)
		lea    (%edx,%ebp,1),%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		imul   %eax,%edi
		mov    0x000014(%esp),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000018(%esp),%ebp
		mov    0x000002(%ecx,%eax,1),%dl
		imul   %ebp,%edx
		add    %edi,%edx
		mov    0x000010(%esp),%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    0x00001c(%esp),%edi
		cmp    %ebx,%eax
		jle    _03f671_jump
		mov    %ebx,%eax

	_03f671_jump:
		mov    _0c0fe4_data,%edx
		add    %edi,%edx
		inc    %esi
		mov    %al,0x000002(%ecx,%edx,1)
		cmp    $0x000100,%si
		jl     _03f517_jump
		mov    0x000024(%esp),%ebx
		inc    %ebx
		mov    0x000028(%esp),%ecx
		mov    %bx,0x000024(%esp)
		cmp    %cx,%bx
		jl     _03f515_jump

	_03f6a0_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03f6ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c3014_data,%bx
		testb  $0x000040,_0c33d8_data
		je     _03f804_jump
		testb  $0x000004,_0c3348_data
		je     _03f72c_jump
		cmpb   $0x000000,_0c334f_data
		jne    _03f711_jump
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c0fe4_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0c3014_data,%bx
		inc    %ebx
		jmp    _03f71b_jump

	_03f711_jump:
		test   %bx,%bx
		jne    _03f71b_jump
		mov    $0x000001,%ebx

	_03f71b_jump:
		cmp    $0x00000f,%bx
		jne    _03f804_jump
		xor    %ebx,%ebx
		jmp    _03f804_jump

	_03f72c_jump:
		testb  $0x000020,_0c31b3_data
		je     _03f804_jump
		mov    _0d5d80_data,%edx
		mov    _0c3014_data,%eax
		inc    %edx
		sar    $0x000010,%eax
		mov    %edx,_0d5d80_data
		cmp    %edx,%eax
		jle    _03f75b_jump
		test   %bx,%bx
		je     _03f804_jump

	_03f75b_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c0fe4_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		mov    %bx,_0c3014_data
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0c3014_data,%bx
		test   %bx,%bx
		jne    _03f7b3_jump
		mov    $0x0000c3,%eax
		call   _071754_func
		mov    _0c3014_data,%bx
		inc    %ebx
		jmp    _03f7d5_jump

	_03f7b3_jump:
		mov    _0d5d80_data,%eax
		mov    %eax,%edx
		mov    $0x000002,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03f7cb_jump
		inc    %ebx
		jmp    _03f7d5_jump

	_03f7cb_jump:
		test   %bx,%bx
		jne    _03f7d5_jump
		mov    $0x000001,%ebx

	_03f7d5_jump:
		cmp    $0x00000f,%bx
		jne    _03f804_jump
		mov    $0x000190,%eax
		xor    %esi,%esi
		xor    %ebx,%ebx
		mov    %esi,_0d5d80_data
		mov    %bx,_0c3014_data
		call   _06a9a0_func
		inc    %eax
		mov    _0c3014_data,%bx
		mov    %ax,_0c3016_data

	_03f804_jump:
		mov    %bx,_0c3014_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f9fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%cl
		cmpb   $0x0000ff,_0a7c9c_data
		jne    _03fa14_jump
		call   _0162e5_func
		call   _03e4a0_func

	_03fa14_jump:
		cmpb   $0x000001,_0a7c9c_data
		je     _03fa58_jump
		call   _0163a1_func
		mov    $0x010000,%ebx
		mov    _0a7c98_data,%eax
		xor    %edx,%edx
		call   _085360_func
		call   _017f59_func
		xor    %eax,%eax
		mov    %cl,%al
		mov    $0x0a0500,%edx
		call   _03e364_func
		mov    %edx,_0c0f78_data
		movb   $0x000001,_0a7c9c_data
		call   _03fbbc_func

	_03fa58_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03fa5c_func:
		call   _0164d0_func
		movb   $0x0000ff,_0a7c9c_data
		ret    



_03fa6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%cl
		cmpb   $0x0000ff,_0a7c9c_data
		jne    _03fa84_jump
		call   _0162e5_func
		call   _03e4a0_func

	_03fa84_jump:
		cmpb   $0x000000,_0a7c9c_data
		je     _03fae3_jump
		call   _016348_func
		mov    $0x00fa00,%ebx
		mov    _0c0f50_data,%eax
		xor    %edx,%edx
		call   _085360_func
		mov    $0x00fa00,%ebx
		mov    _0a7c98_data,%eax
		xor    %edx,%edx
		call   _085360_func
		call   _017f3d_func
		mov    _0c0f50_data,%eax
		mov    %eax,_0c0f78_data
		mov    _0a7c98_data,%eax
		call   _0162cd_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %dh,%dh
		call   _03e364_func
		mov    %dh,_0a7c9c_data
		call   _03fae8_func

	_03fae3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03fae8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_01871c_func,%edx
		mov    $_018710_func,%ebx
		mov    $_0187e1_func,%ecx
		mov    $_0187d5_func,%esi
		mov    $_0188a3_func,%edi
		mov    $_01892a_func,%ebp
		mov    $_0172ea_func,%eax
		mov    %edx,_0c0f4c_data
		mov    %ebx,_0c0ef0_data
		mov    %ecx,_0c0f20_data
		mov    %esi,_0c0f14_data
		mov    %edi,_0c0ef4_data
		mov    %ebp,_0c0f24_data
		mov    %eax,_0c0ef8_data
		mov    $_017321_func,%edx
		mov    $_017351_func,%ebx
		mov    $_017381_func,%ecx
		mov    $_0173bd_func,%esi
		mov    $_017436_func,%edi
		mov    $_0174c0_func,%ebp
		mov    $_01755e_func,%eax
		mov    %edx,_0c0efc_data
		mov    %ebx,_0c0f0c_data
		mov    %ecx,_0c0f04_data
		mov    %esi,_0c0f3c_data
		mov    %edi,_0c0f38_data
		mov    %ebp,_0c0f1c_data
		mov    %eax,_0c0f18_data
		mov    $_0175d5_func,%edx
		mov    $_017511_func,%ebx
		mov    $_017487_func,%ecx
		mov    $_017406_func,%esi
		mov    %edx,_0c0f2c_data
		mov    %ebx,_0c0f40_data
		mov    %ecx,_0c0f34_data
		mov    %esi,_0c0f30_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03fbbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_0180f2_func,%edx
		mov    $_0180e6_func,%ebx
		mov    $_018265_func,%ecx
		mov    $_018259_func,%esi
		mov    $_0183d7_func,%edi
		mov    $_01856e_func,%ebp
		mov    $_0147d1_func,%eax
		mov    %edx,_0c0f4c_data
		mov    %ebx,_0c0ef0_data
		mov    %ecx,_0c0f20_data
		mov    %esi,_0c0f14_data
		mov    %edi,_0c0ef4_data
		mov    %ebp,_0c0f24_data
		mov    %eax,_0c0ef8_data
		mov    $_014788_func,%edx
		mov    $_014802_func,%ebx
		mov    $_01484b_func,%ecx
		mov    $_0148a4_func,%esi
		mov    $_014953_func,%edi
		mov    $_014a46_func,%ebp
		mov    $_014b57_func,%eax
		mov    %edx,_0c0efc_data
		mov    %ebx,_0c0f0c_data
		mov    %ecx,_0c0f04_data
		mov    %esi,_0c0f3c_data
		mov    %edi,_0c0f38_data
		mov    %ebp,_0c0f1c_data
		mov    %eax,_0c0f18_data
		mov    $_014c5a_func,%edx
		mov    $_014ae7_func,%ebx
		mov    $_0149f4_func,%ecx
		mov    $_01490a_func,%esi
		mov    %edx,_0c0f2c_data
		mov    %ebx,_0c0f40_data
		mov    %ecx,_0c0f34_data
		mov    %esi,_0c0f30_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03fc90_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		test   %eax,%eax
		jle    _03fca9_jump

	_03fc9a_jump:
		call   _018b0f_func
		inc    %edx
		call   _018aff_func
		cmp    %ebx,%edx
		jl     _03fc9a_jump

	_03fca9_jump:
		pop    %edx
		pop    %ebx
		ret    



_03fcac_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000308,%esp
		mov    %eax,%ebx
		mov    _0c0fb0_data,%esi
		mov    $0x000300,%ecx
		mov    %esi,0x000304(%esp)
		mov    _0c0fb4_data,%esi
		mov    %esp,%edi
		mov    %esi,0x000300(%esp)
		mov    $_0b3428_data,%esi
		mov    _0c0fcc_data,%ebp
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebx,%eax
		call   _0488b0_func
		mov    _0c0fcc_data,%edx
		mov    $0x000300,%ecx
		mov    %edx,_0c0fd0_data
		mov    _0c0fb0_data,%edx
		mov    $_0b3428_data,%esi
		mov    %edx,_0c0fc4_data
		mov    _0c0fb4_data,%edx
		mov    $_0b4028_data,%edi
		mov    %edx,_0c0fa8_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x000304(%esp),%edx
		mov    $0x000300,%ecx
		mov    %esp,%esi
		mov    $_0b3428_data,%edi
		mov    %edx,_0c0fb0_data
		mov    0x000300(%esp),%edx
		mov    %ebp,_0c0fcc_data
		mov    %edx,_0c0fb4_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000308,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03fddc_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00030c,%esp
		mov    %eax,%ebp
		mov    _0c0fcc_data,%eax
		mov    $0x000300,%ecx
		mov    %eax,0x000308(%esp)
		mov    _0c0fb0_data,%eax
		mov    $_0b3428_data,%esi
		mov    %eax,0x000304(%esp)
		mov    _0c0fb4_data,%eax
		mov    %esp,%edi
		mov    %eax,0x000300(%esp)
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_0af048_data,%edi
		mov    %ebp,%eax
		mov    $0x000300,%ecx
		call   _0488b0_func
		movswl %bx,%edx
		mov    _0c0fcc_data,%esi
		lea    0x000000(,%edx,4),%eax
		mov    %esi,_0b3408_data(,%edx,4)
		sub    %edx,%eax
		mov    _0c0fb0_data,%esi
		shl    $0x000008,%eax
		mov    %esi,_0b33e8_data(,%edx,4)
		mov    _0c0fb4_data,%esi
		add    %eax,%edi
		mov    %esi,_0b33c8_data(,%edx,4)
		mov    $_0b3428_data,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x000308(%esp),%eax
		mov    $0x000300,%ecx
		mov    %eax,_0c0fcc_data
		mov    0x000304(%esp),%eax
		mov    %esp,%esi
		mov    %eax,_0c0fb0_data
		mov    0x000300(%esp),%eax
		mov    $_0b3428_data,%edi
		mov    %eax,_0c0fb4_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x00030c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_03ff88_switch:
		.long   _03ffab_case
		.long   _03ffb4_case
		.long   _03ffbd_case
		.long   _03ffc6_case


	_03ffab_case:
		push   $0x000002
		mov    $_0a15ac_data,%eax
		jmp    _03ffcd_jump

	_03ffb4_case:
		push   $0x000001
		mov    $_0a15b0_data,%eax
		jmp    _03ffcd_jump

	_03ffbd_case:
		push   $0x000005
		mov    $_0a15b4_data,%eax
		jmp    _03ffcd_jump

	_03ffc6_case:
		push   $0x000001
		mov    $_0a15b8_data,%eax

	_03ffcd_jump:
		and    $0x0000ff,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01b0f8_func
		ret    $0x000004

_03fff0_switch:
		.long   0
		.long   0
		.long   0
		.long   0


_040068_switch:
		.long   0
		.long   0
		.long   0
		.long   0




_040184_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %edx,%edx
		xor    %eax,%eax
		call   _0880fb_func
		test   %eax,%eax
		je     _0401a2_jump
		mov    $0x000001,%eax
		jmp    _040253_jump

	_0401a2_jump:
		mov    %esp,%ebx
		mov    $_0d6da4_data,%eax
		mov    %ds,%ecx
		mov    %ds,%edx
		call   _0886e9_func
		test   %eax,%eax
		je     _0401c8_jump
		call   _088245_func
		mov    $0x000002,%eax
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0401c8_jump:
		mov    $_0d6d90_data,%eax
		mov    %ds,%edx
		call   _088b61_func
		test   %eax,%eax
		je     _0401ea_jump
		call   _088245_func
		mov    $0x000003,%eax
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0401ea_jump:
		mov    _0d6d90_data,%edx
		push   %edx
		push   $_0a15bc_data
		call   _085441_func
		add    $0x000008,%esp
		mov    _0d6d94_data,%ebx
		push   %ebx
		push   $_0a15bc_data
		call   _085441_func
		add    $0x000008,%esp
		mov    _0d6d98_data,%ecx
		push   %ecx
		push   $_0a15c0_data
		call   _085441_func
		add    $0x000008,%esp
		push   $_0d6da4_data
		push   $_0a15c8_data
		call   _085441_func
		add    $0x000008,%esp
		mov    _0d6dc8_data,%esi
		push   %esi
		push   $_0a15e0_data
		call   _085441_func
		add    $0x000008,%esp
		call   _088245_func
		xor    %eax,%eax

	_040253_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04025c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0xffffffff,%edx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    %edx,_0d6e10_data
		xor    %edx,%edx
		call   _089370_func
		push   %ds
		push   $_0d6e10_data
		push   %ds
		mov    %ds,%ecx
		push   $_0aa1c0_data
		mov    $_0d6d90_data,%ebx
		mov    _0d6e08_data,%eax
		call   _089429_func
		test   %eax,%eax
		jne    _0402cc_jump
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _087944_func
		push   %ds
		mov    $0x000028,%eax
		push   $_0d6e14_data
		mov    _0aa1e0_data,%cx
		mov    _0aa1dc_data,%ebx
		call   _087a5a_func
		test   %eax,%eax
		je     _0402e0_jump
		mov    $0x000002,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0402cc_jump:
		movl   $0xffffffff,_0d6e10_data
		call   _0893e9_func
		mov    $0x000001,%eax

	_0402e0_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0402e4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000098,%esp
		mov    %eax,%ebp
		mov    %edx,0x00008c(%esp)
		mov    %ebx,0x000088(%esp)
		call   _01d724_func
		mov    $_0a1600_data,%eax
		mov    %esp,%edi
		call   _065510_func
		mov    %eax,%esi
		mov    $_0a160c_data,%edx
		push   %edi

	_040317_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04032f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _040317_jump

	_04032f_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%esi
		lea    0x000094(%esp),%eax
		lea    0x000080(%esp),%ecx
		push   %eax
		lea    0x000094(%esp),%eax
		lea    0x000088(%esp),%ebx
		push   %eax
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _04dc38_func
		mov    0x000084(%esp),%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _085e56_func
		push   %ebp
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00009c(%esp),%al
		mov    %esi,%ecx
		push   %eax
		lea    0x00009c(%esp),%eax
		mov    $0x000080,%ebx
		push   %eax
		mov    $0x000010,%edx
		mov    0x00009c(%esp),%eax
		call   _04dd40_func
		mov    %esi,%eax
		call   _08a18e_func
		mov    0x000084(%esp),%edx
		mov    %esp,%ebx
		sub    %edx,%eax
		mov    %ebp,%ecx
		mov    %eax,%edx
		mov    0x000080(%esp),%eax
		call   _04df9c_func
		mov    %esp,%edx
		xor    %eax,%eax
		mov    %ebp,%ebx
		mov    0x000090(%esp),%al
		call   _04df68_func
		mov    %esi,%eax
		call   _086112_func
		mov    $_0a1610_data,%eax
		mov    %esp,%edi
		call   _065510_func
		mov    %eax,%esi
		mov    $_0a160c_data,%edx
		push   %edi

	_0403ef_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _040407_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0403ef_jump

	_040407_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%esi
		mov    %eax,%edi
		lea    0x000094(%esp),%eax
		lea    0x000080(%esp),%ecx
		push   %eax
		lea    0x000094(%esp),%eax
		lea    0x000088(%esp),%ebx
		push   %eax
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _04dc38_func
		mov    0x000084(%esp),%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _085e56_func
		mov    0x000088(%esp),%eax
		cmpl   $0x000000,(%eax)
		je     _04045b_jump
		call   _0852ac_func

	_04045b_jump:
		mov    0x000080(%esp),%eax
		call   _085294_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _04049e_jump
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    0x000080(%esp),%ecx
		push   %ecx
		push   %ebp
		push   $_0a161c_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_04049e_jump:
		mov    0x000088(%esp),%eax
		push   %ebp
		mov    %esi,(%eax)
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00009c(%esp),%al
		mov    $0x000001,%edx
		push   %eax
		lea    0x00009c(%esp),%eax
		mov    %edi,%ecx
		push   %eax
		mov    0x000090(%esp),%ebx
		mov    %esi,%eax
		call   _04dd40_func
		mov    %edi,%eax
		call   _08a18e_func
		mov    0x000084(%esp),%edx
		mov    %esp,%ebx
		sub    %edx,%eax
		mov    %ebp,%ecx
		mov    %eax,%edx
		mov    0x000080(%esp),%eax
		call   _04df9c_func
		mov    %esp,%edx
		xor    %eax,%eax
		mov    %ebp,%ebx
		mov    0x000090(%esp),%al
		call   _04df68_func
		mov    %edi,%eax
		call   _086112_func
		mov    0x00008c(%esp),%eax
		lea    0x000800(%eax),%edx

	_04051c_jump:
		mov    (%eax),%ebx
		add    $0x000010,%eax
		add    %esi,%ebx
		mov    %ebx,-0x000010(%eax)
		cmp    %edx,%eax
		jne    _04051c_jump
		xor    %edx,%eax
		add    $0x000098,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_040538_func:
		push   %ebx
		push   %edx
		mov    $_0aa20c_data,%ebx
		mov    $_0d5d90_data,%edx
		mov    $_0c21c0_data,%eax
		call   _0402e4_func
		mov    %eax,%edx
		cmpb   $0x000000,_0c3372_data
		je     _040567_jump
		cmpb   $0x000000,_0c336f_data
		jne    _040567_jump
		call   _040940_func

	_040567_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_04056c_func:
		push   %ebx
		push   %edx
		mov    $_0aa210_data,%ebx
		mov    $_0d6590_data,%edx
		mov    $_0c2da7_data,%eax
		call   _0402e4_func
		pop    %edx
		pop    %ebx
		ret    



_040588_func:
		push   %esi
		push   %edi
		sub    $0x00007c,%esp
		mov    %eax,0x000074(%esp)
		mov    %edx,%ebx
		mov    %cx,0x000078(%esp)
		mov    0x000086(%esp),%eax
		mov    $0x00001d,%ecx
		sar    $0x000010,%eax
		mov    %esp,%edi
		mov    %eax,%edx
		mov    $_03fff0_switch,%esi
		shl    $0x00000f,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		sub    %eax,%edx
		mov    $0x00007f,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,0x000014(%esp)
		mov    0x00008a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000010,%edx
		sub    %eax,%edx
		mov    $0x00007f,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x000028(%esp),%ecx
		mov    %eax,0x000040(%esp)
		mov    0x000076(%esp),%eax
		or     $0x004760,%cx
		sar    $0x000010,%eax
		mov    0x000028(%esp),%edx
		mov    _0aa212_data(,%eax,2),%eax
		mov    0x000074(%esp),%esi
		sar    $0x000010,%eax
		or     $0x000720,%edx
		shl    $0x000008,%eax
		mov    %dx,0x000028(%esp)
		mov    %eax,0x000038(%esp)
		test   %si,%si
		jne    _040665_jump
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0d5d90_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0d5d94_data(%edx),%eax
		mov    _0d5d9c_data(%edx),%esi
		mov    %eax,0x000008(%esp)
		test   %esi,%esi
		je     _0406a7_jump
		mov    $0xffffffff,%edi
		mov    %ecx,0x000028(%esp)
		mov    _0d5d98_data(%edx),%eax
		mov    %esi,0x000034(%esp)
		mov    %eax,0x000030(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _0406a7_jump

	_040665_jump:
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0d6590_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0d6594_data(%edx),%eax
		mov    _0d659c_data(%edx),%ebx
		mov    %eax,0x000008(%esp)
		test   %ebx,%ebx
		je     _0406a7_jump
		mov    %ecx,0x000028(%esp)
		mov    %ebx,0x000034(%esp)
		mov    _0d6598_data(%edx),%eax
		mov    $0xffffffff,%ecx
		mov    %eax,0x000030(%esp)
		mov    %ecx,0x00000c(%esp)

	_0406a7_jump:
		cmpl   $0x000000,0x000008(%esp)
		je     _0406cb_jump
		mov    %esp,%ebx
		mov    _0d6e10_data,%eax
		mov    %ds,%ecx
		call   _08a1e5_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _0406cb_jump
		cmp    $0x000020,%ax
		jl     _0406d0_jump
		int3   

	_0406cb_jump:
		mov    $0xffffffff,%eax

	_0406d0_jump:
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_0406d8_func:
		movswl %ax,%edx
		mov    _0d6e10_data,%eax
		call   _08a7fe_func
		ret    $0x000004



_0406e8_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%edi
		movswl %dx,%edx
		mov    %edx,%eax
		shl    $0x00000f,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %cx,%ecx
		mov    _0d6e10_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _08ac79_func
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0d6e10_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _08af1c_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_040744_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_04074d_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _0406d8_func
		cmp    $0x000020,%si
		jl     _04074d_jump
		mov    _0d6e14_data,%eax
		call   _087ddf_func
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _087a20_func
		mov    %ebx,%edx
		mov    _0d6e10_data,%eax
		call   _089ce9_func
		call   _0893e9_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040790_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000098,%esp
		mov    %eax,%ebp
		mov    %edx,0x00008c(%esp)
		mov    $_0a1648_data,%eax
		mov    %esp,%edi
		call   _065440_func
		mov    %eax,%esi
		mov    $_0a160c_data,%edx
		push   %edi

	_0407b8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0407d0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0407b8_jump

	_0407d0_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%esi
		mov    %eax,0x000088(%esp)
		lea    0x000094(%esp),%eax
		lea    0x000080(%esp),%ecx
		push   %eax
		lea    0x000094(%esp),%eax
		lea    0x000088(%esp),%ebx
		push   %eax
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _04dc38_func
		mov    0x000084(%esp),%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _085e56_func
		mov    0x00008c(%esp),%eax
		movl   $0x000000,(%eax)
		mov    0x000080(%esp),%eax
		call   _085294_func
		mov    %eax,%edi
		test   %eax,%eax
		je     _0408a6_jump
		push   %ebp
		lea    0x000004(%esp),%edx
		push   %edx
		xor    %edx,%edx
		mov    0x00009c(%esp),%dl
		push   %edx
		lea    0x00009c(%esp),%edx
		mov    0x00008c(%esp),%ebx
		push   %edx
		mov    %esi,%ecx
		mov    $0x000001,%edx
		call   _04dd40_func
		mov    %esi,%eax
		call   _08a18e_func
		mov    0x000084(%esp),%edx
		mov    %esp,%ebx
		sub    %edx,%eax
		mov    %ebp,%ecx
		mov    %eax,%edx
		mov    0x000080(%esp),%eax
		call   _04df9c_func
		mov    %esp,%edx
		xor    %eax,%eax
		mov    %ebp,%ebx
		mov    0x000090(%esp),%al
		call   _04df68_func
		mov    0x00008c(%esp),%edx
		mov    0x000080(%esp),%eax
		mov    %eax,(%edx)

	_0408a6_jump:
		mov    0x000088(%esp),%eax
		call   _086112_func
		mov    %edi,%eax
		add    $0x000098,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0408c0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000078,%esp
		mov    %eax,%ebp
		mov    %edx,0x000074(%esp)
		test   %eax,%eax
		je     _040931_jump
		test   %edx,%edx
		je     _040931_jump
		test   %ebx,%ebx
		je     _040931_jump
		mov    %ebx,%edx
		shl    $0x00000f,%edx
		sub    %ebx,%edx
		mov    $0x00007f,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00001d,%ecx
		mov    %esp,%edi
		mov    $_040068_switch,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ds,0x000004(%esp)
		mov    %ebp,(%esp)
		mov    %ds,%ecx
		mov    0x000028(%esp),%edx
		mov    %esp,%ebx
		mov    %eax,0x000014(%esp)
		mov    0x000074(%esp),%eax
		or     $0x000120,%edx
		mov    %eax,0x000008(%esp)
		mov    _0d6e10_data,%eax
		mov    %dx,0x000028(%esp)
		call   _08a1e5_func
		cmp    $0x000020,%ax
		jl     _040936_jump
		int3   

	_040931_jump:
		mov    $0xffffffff,%eax

	_040936_jump:
		add    $0x000078,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_040940_func:
		push   %edx
		mov    $_0aa318_data,%edx
		mov    $_0c31d0_data,%eax
		call   _040790_func
		mov    %eax,_0aa314_data
		pop    %edx
		ret    



_040958_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $_0c31d0_data,%edx
		call   _0853a0_func
		test   %eax,%eax
		je     _0409a0_jump
		xor    %edx,%edx
		mov    _0aa31c_data,%esi
		mov    %edx,(%esp)
		test   %esi,%esi
		je     _040989_jump
		mov    $_0aa31c_data,%eax
		call   _0852ac_func

	_040989_jump:
		mov    %esp,%edx
		mov    %ebx,%eax
		call   _040790_func
		mov    %eax,_0aa31c_data
		test   %eax,%eax
		je     _0409b8_jump
		mov    (%esp),%edx
		jmp    _0409ab_jump

	_0409a0_jump:
		mov    _0aa318_data,%edx
		mov    _0aa314_data,%eax

	_0409ab_jump:
		mov    %ecx,%ebx
		call   _0408c0_func
		mov    %ax,_0d6e18_data

	_0409b8_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0409c0_jump:
		push   %ebx
		push   %edx
		xor    %ebx,%ebx

	_0409c4_jump:
		mov    _0d6e16_data,%edx
		mov    _0d6e10_data,%eax
		sar    $0x000010,%edx
		call   _08b2d1_func
		cmp    $0x000001,%eax
		je     _0409e7_jump
		cmp    $0x002710,%ebx
		je     _0409e7_jump
		inc    %ebx
		jmp    _0409c4_jump

	_0409e7_jump:
		mov    _0d6e16_data,%edx
		mov    _0d6e10_data,%eax
		sar    $0x000010,%edx
		call   _08b2d1_func
		cmp    $0x000001,%eax
		je     _040a12_jump
		mov    _0d6e16_data,%edx
		mov    _0d6e10_data,%eax
		sar    $0x000010,%edx
		call   _08a7fe_func

	_040a12_jump:
		cmpl   $0x000000,_0aa31c_data
		je     _040a25_jump
		mov    $_0aa31c_data,%eax
		call   _0852ac_func

	_040a25_jump:
		pop    %edx
		pop    %ebx
		ret    



_040a28_func:
		and    $0x00ffff,%eax
		mov    %eax,_0d6d90_data
		ret    



_040a34_func:
		mov    %eax,_0d6d94_data
		ret    



_040a3c_func:
		mov    %eax,_0d6d98_data
		ret    



_040a44_func:
		mov    %eax,_0d6d9c_data
		ret    



_040a4c_func:
		mov    %eax,_0d6e08_data
		ret    



_040a5c_func:
		mov    $_0d6d90_data,%eax
		ret    



_040a64_func:
		mov    $_0d6d94_data,%eax
		ret    



_040a6c_func:
		mov    $_0d6d98_data,%eax
		ret    



_040a74_func:
		mov    $_0d6d9c_data,%eax
		ret    



_040a7c_func:
		mov    $_0d6e08_data,%eax
		ret    



_040a90_func:
		push   %ebx
		push   %edx
		xor    %dl,%dl
		mov    %dl,_0aa320_data
		cmpb   $0x000000,_0bf2fd_data
		jne    _040abf_jump
		testb  $0x000010,_0c31b4_data
		jne    _040abf_jump
		mov    $_0a1654_data,%edx
		xor    %ebx,%ebx
		call   _03fddc_func
		movb   $0x000001,_0aa320_data

	_040abf_jump:
		pop    %edx
		pop    %ebx
		ret    



_040ac4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ah,%ah
		mov    _0bf2fd_data,%dl
		mov    %ah,_0aa321_data
		test   %dl,%dl
		jne    _040b78_jump
		testb  $0x000010,_0c31b4_data
		jne    _040b78_jump
		xor    %edx,%edx
		mov    _0bf3a5_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		add    %eax,%eax
		mov    %eax,%ebx
		shl    $0x000004,%ebx
		xor    %edx,%edx
		sub    %eax,%ebx
		call   _0302b8_func
		mov    %al,%dl
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		cmpb   $0x000000,_0c031d_data(%ebx,%eax,2)
		je     _040b78_jump
		xor    %edx,%edx
		mov    _0bf3a5_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		add    %eax,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		mov    $_0c0314_data,%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		xor    %edx,%edx
		call   _0302b8_func
		mov    %al,%dl
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		add    %eax,%eax
		add    %ebx,%eax
		add    $0x000009,%eax
		call   _072ffc_func
		mov    %ax,_0aa322_data
		cwtl   
		cmp    $0xffffffff,%eax
		je     _040b78_jump
		mov    $0x000001,%ch
		call   _0730b8_func
		mov    %ch,_0aa321_data

	_040b78_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040b7c_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0d6e1c_data,%edi
		mov    _0a165c_data,%dx
		mov    %eax,%esi
		mov    %dx,_0d6e1c_data
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_040b9e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _040bb6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _040b9e_jump

	_040bb6_jump:
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_040bbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    $_0d6e1c_data,%edi
		mov    $0x000019,%edx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %edx,0x000010(%esp)
		test   %ecx,%ecx
		je     _040c84_jump
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _017e8d_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _017eca_func
		mov    $_0d6e1c_data,%ebx
		mov    $0x00005c,%dh
		mov    %dh,%dl

	_040c13_jump:
		mov    %ebx,%esi

	_040c15_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _040c2d_jump
		cmp    $0x000000,%al
		je     _040c2b_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _040c2d_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _040c15_jump

	_040c2b_jump:
		sub    %esi,%esi

	_040c2d_jump:
		test   %esi,%esi
		je     _040c50_jump
		mov    %ebx,%esi

	_040c33_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _040c4b_jump
		cmp    $0x000000,%al
		je     _040c49_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _040c4b_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _040c33_jump

	_040c49_jump:
		sub    %esi,%esi

	_040c4b_jump:
		movb   $0x00002f,(%esi)
		jmp    _040c13_jump

	_040c50_jump:
		push   $0x0000ff
		mov    0x000012(%esp),%ebx
		mov    $0x000002,%ecx
		mov    $0x0000a0,%edx
		mov    $_0d6e1c_data,%eax
		sar    $0x000010,%ebx
		call   _01b0f8_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _017eca_func

	_040c84_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040c90_func:
		push   %ebx
		push   %edx
		call   _042170_func
		call   _03ede8_jump
		call   _040bbc_func
		mov    _0c30e8_data,%dx
		test   %dx,%dx
		jle    _040cb7_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,_0c30e8_data

	_040cb7_jump:
		xor    %ah,%ah
		mov    %ah,_0aa328_data
		mov    $0x000018,%eax
		call   _041ce0_func
		test   %al,%al
		jne    _040ce9_jump
		mov    $0x000015,%eax
		call   _041ce0_func
		test   %al,%al
		jne    _040ce9_jump
		mov    $0x000024,%eax
		call   _041ce0_func
		test   %al,%al
		je     _040cf0_jump

	_040ce9_jump:
		movb   $0x000001,_0aa328_data

	_040cf0_jump:
		cmpb   $0x000000,_0aa328_data
		jne    _040d60_jump
		mov    $0x00003b,%eax
		call   _041ce0_func
		test   %al,%al
		jne    _040d60_jump
		call   _0427d4_func
		test   %al,%al
		jne    _040d60_jump
		mov    $0x000031,%eax
		call   _041ce0_func
		test   %al,%al
		jne    _040d60_jump
		mov    $0x000001,%eax
		call   _041ce0_func
		test   %al,%al
		jne    _040d60_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _040d60_jump
		mov    $0x000039,%eax
		call   _041ce0_func
		test   %al,%al
		jne    _040d60_jump
		mov    $0x00001c,%eax
		call   _041ce0_func
		test   %al,%al
		jne    _040d60_jump
		cmpw   $0x000000,_0c30e8_data
		jne    _040d68_jump

	_040d60_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ebx
		ret    

	_040d68_jump:
		xor    %ah,%ah
		pop    %edx
		pop    %ebx
		ret    



_040d70_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		call   _071f04_func
		mov    $0x000001,%edx
		lea    0x000004(%esp),%ecx
		xor    %ebx,%ebx
		mov    %dx,_0c3016_data
		mov    %bx,_0c3014_data
		call   _03ead0_func
		mov    %esp,%edx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _017e8d_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _017eca_func
		mov    $_0af048_data,%eax
		mov    $0x000708,%ecx
		call   _03ece4_func
		call   _03ed88_func
		call   _03ea80_func
		mov    _0b3408_data,%eax
		mov    %cx,_0c30e8_data
		mov    %eax,_0c0fd0_data
		call   _042498_func
		mov    $_040c90_func,%eax
		call   _03eb48_func
		call   _042498_func
		call   _03ead0_func
		call   _03eaf8_func
		xor    %ah,%ah
		mov    %ah,_0c338e_data
		call   _071f04_func
		call   _03ed58_func
		call   _03edc8_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _017eca_func
		call   _03ea80_func
		mov    _0aa328_data,%al
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040e40_func:
		mov    _0aa329_data,%al
		ret    



_040e48_func:
		mov    %al,_0aa329_data
		ret    



_040e50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00003b,%eax
		call   _041ce0_func
		test   %al,%al
		je     _040e79_jump
		mov    $0x00003b,%eax
		call   _042488_func
		xorb   $0x000001,_0a7cd8_data
		jmp    _041034_jump

	_040e79_jump:
		mov    $0x00003c,%eax
		call   _041ce0_func
		test   %al,%al
		je     _040eac_jump
		mov    $0x00003c,%eax
		call   _042488_func
		cmpw   $0x000000,_0a7cda_data
		jne    _041034_jump
		xorb   $0x000001,_0a7cd6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040eac_jump:
		mov    $0x00003d,%eax
		call   _041ce0_func
		test   %al,%al
		je     _040ef1_jump
		mov    $0x00003d,%eax
		call   _042488_func
		mov    _0af042_data,%dx
		test   %dx,%dx
		jbe    _041034_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,_0af042_data
		mov    _0af040_data,%eax
		sar    $0x000010,%eax
		call   _070b70_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040ef1_jump:
		mov    $0x00003e,%eax
		call   _041ce0_func
		test   %al,%al
		je     _040f36_jump
		mov    $0x00003e,%eax
		call   _042488_func
		mov    _0af042_data,%di
		cmp    $0x000014,%di
		jae    _041034_jump
		mov    %edi,%eax
		inc    %eax
		mov    %ax,_0af042_data
		mov    _0af040_data,%eax
		sar    $0x000010,%eax
		call   _070b70_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040f36_jump:
		mov    $0x00003f,%eax
		call   _041ce0_func
		test   %al,%al
		je     _040f7b_jump
		mov    $0x00003f,%eax
		call   _042488_func
		mov    _0af046_data,%cx
		test   %cx,%cx
		jbe    _041034_jump
		mov    %ecx,%esi
		dec    %esi
		mov    %si,_0af046_data
		mov    _0af044_data,%eax
		sar    $0x000010,%eax
		call   _070b94_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040f7b_jump:
		mov    $0x000040,%eax
		call   _041ce0_func
		test   %al,%al
		je     _040fc1_jump
		mov    $0x000040,%eax
		call   _042488_func
		mov    _0af046_data,%dx
		cmp    $0x000014,%dx
		jae    _041034_jump
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,_0af046_data
		mov    _0af044_data,%eax
		sar    $0x000010,%eax
		call   _070b94_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040fc1_jump:
		mov    $0x000043,%eax
		call   _041ce0_func
		test   %al,%al
		je     _040ff6_jump
		mov    $0x000043,%eax
		call   _042488_func
		addb   $0x000005,_0aa329_data
		xor    %edx,%edx
		mov    _0aa329_data,%dl
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		jmp    _04102e_jump

	_040ff6_jump:
		mov    $0x000044,%eax
		call   _041ce0_func
		test   %al,%al
		je     _041034_jump
		mov    $0x000044,%eax
		call   _042488_func
		mov    _0aa329_data,%ah
		xor    %ebx,%ebx
		inc    %ah
		mov    $0x000006,%ecx
		mov    %ah,%bl
		mov    %ah,_0aa329_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx

	_04102e_jump:
		mov    %dl,_0aa329_data

	_041034_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04103c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		mov    $0xffffffff,%edx
		mov    _0a525a_data,%cx
		mov    %dx,_0aa324_data
		mov    %dx,_0aa326_data
		cmp    $0x000001,%cx
		jne    _0410ee_jump
		xor    %edx,%edx
		jmp    _0410db_jump

	_04106d_jump:
		movswl %dx,%ebx
		imul   $0x00007b,%ebx,%eax
		cmpb   $0x000003,_0bf3b7_data(%eax)
		jne    _0410da_jump
		mov    _0aa322_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0410da_jump
		imul   $0x00005a,%ebx,%ebx
		call   _0302b8_func
		and    $0x0000ff,%eax
		imul   $0x000012,%eax,%eax
		cmpb   $0x000000,_0c031d_data(%ebx,%eax,1)
		je     _0410da_jump
		call   _0302b8_func
		add    $_0c0314_data,%ebx
		and    $0x0000ff,%eax
		imul   $0x000012,%eax,%eax
		add    %ebx,%eax
		add    $0x000009,%eax
		call   _072ffc_func
		mov    %ax,_0aa324_data
		cwtl   
		cmp    $0xffffffff,%eax
		je     _0410da_jump
		call   _0730b8_func
		mov    %dx,_0aa326_data
		jmp    _041127_jump

	_0410da_jump:
		inc    %edx

	_0410db_jump:
		xor    %eax,%eax
		mov    _0bf388_data,%al
		cmp    %ax,%dx
		jl     _04106d_jump
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0410ee_jump:
		jle    _041127_jump
		mov    $0x000007,%eax
		call   _06a9a0_func
		cwtl   
		inc    %eax
		push   %eax
		push   $_0c3206_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %esp,%eax
		call   _072ffc_func
		mov    %ax,_0aa324_data
		cwtl   
		cmp    $0xffffffff,%eax
		je     _041127_jump
		call   _0730b8_func

	_041127_jump:
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041130_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0a525a_data,%bx
		test   %bx,%bx
		je     _041179_jump
		mov    _0c317e_data,%cx
		test   %cx,%cx
		jne    _041179_jump
		mov    _0aa322_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _041179_jump
		cmp    $0x000001,%bx
		jne    _04116b_jump
		cmp    _0aa326_data,%dx
		jne    _041179_jump
		jmp    _04116d_jump

	_04116b_jump:
		jle    _041179_jump

	_04116d_jump:
		call   _0733d4_func
		mov    %cx,_0a525a_data

	_041179_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041180_func:
		push   %ebx
		push   %edx
		call   _070a20_func
		mov    _0aa322_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0411a5_jump
		mov    $0xffffffff,%edx
		call   _0731f4_func
		mov    %dx,_0aa324_data

	_0411a5_jump:
		xor    %ebx,%ebx
		call   _073384_func
		mov    %bx,_0a525a_data
		pop    %edx
		pop    %ebx
		ret    



_041238_func:
		ret    



_041560_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%edi
		mov    $0x000100,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _085360_func
		xor    %ecx,%ecx

	_041578_jump:
		mov    %esi,%eax
		call   _0869e5_func
		mov    %eax,%edx
		cmp    $0x00000a,%eax
		je     _0415a2_jump
		cmp    $0xffffffff,%eax
		jne    _041592_jump
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_041592_jump:
		cmp    $0x0000ff,%ecx
		jge    _041578_jump
		mov    %ecx,%eax
		inc    %ecx
		mov    %dl,(%edi,%eax,1)
		jmp    _041578_jump

	_0415a2_jump:
		mov    $0x000001,%eax
		movb   $0x000000,0x0000ff(%edi)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0415b4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000214,%esp
		mov    %eax,0x00020c(%esp)
		mov    %edx,%ebp
		mov    %ebx,0x000210(%esp)
		mov    %ecx,%eax
		mov    $_0a16dc_data,%edx
		call   _085d60_func
		mov    %ebp,%edi
		mov    %eax,%edx
		mov    %eax,%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %edx,%edx
		jne    _0415f4_jump
		xor    %eax,%eax
		jmp    _041702_jump

	_0415f4_jump:
		mov    0x00020c(%esp),%edx
		push   %edx
		push   $_0a16e0_data
		lea    0x000108(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x00000c,%esp

	_041611_jump:
		mov    %esp,%edx
		mov    %esi,%eax
		call   _041560_func
		test   %eax,%eax
		jne    _04162a_jump
		mov    %esi,%eax
		call   _086112_func
		jmp    _0416fb_jump

	_04162a_jump:
		lea    0x000100(%esp),%edx
		mov    %esp,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _041611_jump

	_04163c_jump:
		mov    %esp,%edx
		mov    %esi,%eax
		call   _041560_func
		test   %eax,%eax
		je     _04164f_jump
		cmpb   $0x000000,(%esp)
		jne    _041667_jump

	_04164f_jump:
		mov    %esi,%eax
		call   _086112_func
		mov    0x000210(%esp),%eax
		add    $0x000214,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_041667_jump:
		mov    %esp,%eax
		mov    %ecx,%ebx
		mov    %ebp,%edx
		call   _0873fb_func
		test   %eax,%eax
		jne    _04163c_jump
		mov    %esi,%eax
		mov    $0x00003d,%edx
		call   _086112_func
		mov    %esp,%eax
		call   _08b403_func
		test   %eax,%eax
		je     _0416fb_jump
		lea    0x000001(%eax),%ebp
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _0416fb_jump
		mov    $0x00000a,%ebx
		lea    0x000200(%esp),%eax
		xor    %edx,%edx
		call   _085360_func
		xor    %esi,%esi
		mov    %ebp,%eax
		jmp    _0416c4_jump

	_0416b9_jump:
		inc    %esi
		mov    (%eax),%dl
		inc    %eax
		mov    %dl,0x0001ff(%esp,%esi,1)

	_0416c4_jump:
		mov    (%eax),%dl
		inc    %dl
		and    $0x0000ff,%edx
		testb  $0x000020,_0a4f18_data(%edx)
		je     _0416dc_jump
		cmp    $0x00000a,%esi
		jl     _0416b9_jump

	_0416dc_jump:
		xor    %bh,%bh
		lea    0x000200(%esp),%eax
		mov    %bh,0x000209(%esp)
		call   _0874cf_func
		add    $0x000214,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_0416fb_jump:
		mov    0x000210(%esp),%eax

	_041702_jump:
		add    $0x000214,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_04170c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00020c,%esp
		mov    %eax,0x000200(%esp)
		mov    %edx,%ebp
		mov    %ebx,0x000204(%esp)
		mov    %ecx,0x000208(%esp)
		mov    0x000220(%esp),%eax
		mov    $_0a16dc_data,%edx
		mov    0x00021c(%esp),%ebx
		call   _085d60_func
		mov    %ebp,%edi
		mov    %eax,%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		xor    %edx,%edx
		mov    0x000208(%esp),%eax
		call   _085360_func
		test   %esi,%esi
		jne    _04176b_jump
		xor    %eax,%eax
		jmp    _041876_jump

	_04176b_jump:
		mov    0x000200(%esp),%ebx
		push   %ebx
		push   $_0a16e0_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x00000c,%esp

	_041785_jump:
		lea    0x000100(%esp),%edx
		mov    %esi,%eax
		call   _041560_func
		test   %eax,%eax
		jne    _0417c4_jump
		mov    0x00021c(%esp),%ebx
		mov    %esi,%eax
		mov    0x000204(%esp),%edx
		call   _086112_func
		mov    0x000208(%esp),%eax
		mov    0x000208(%esp),%edi
		call   _085378_func
		jmp    _04186a_jump

	_0417c4_jump:
		mov    %esp,%edx
		lea    0x000100(%esp),%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _041785_jump

	_0417d6_jump:
		lea    0x000100(%esp),%edx
		mov    %esi,%eax
		call   _041560_func
		test   %eax,%eax
		je     _0417f2_jump
		cmpb   $0x000000,0x000100(%esp)
		jne    _04181c_jump

	_0417f2_jump:
		mov    0x00021c(%esp),%ebx
		mov    %esi,%eax
		mov    0x000204(%esp),%edx
		call   _086112_func
		mov    0x000208(%esp),%eax
		mov    0x000208(%esp),%edi
		call   _085378_func
		jmp    _04186a_jump

	_04181c_jump:
		lea    0x000100(%esp),%eax
		mov    %ecx,%ebx
		mov    %ebp,%edx
		call   _0873fb_func
		test   %eax,%eax
		jne    _0417d6_jump
		mov    %esi,%eax
		mov    $0x00003d,%edx
		call   _086112_func
		lea    0x000100(%esp),%eax
		call   _08b403_func
		test   %eax,%eax
		je     _041863_jump
		lea    0x000001(%eax),%edx
		mov    0x00021c(%esp),%ebx
		mov    0x000208(%esp),%eax
		dec    %ebx
		call   _085378_func

	_041863_jump:
		mov    0x000208(%esp),%edi

	_04186a_jump:
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%eax

	_041876_jump:
		add    $0x00020c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008

_041ae0_switch:
		.long   _041b3f_case
		.long   _041b56_case
		.long   _041b6e_case
		.long   _041b86_case

_041af0_switch:
		.long   _041bb5_case
		.long   _041bcd_case
		.long   _041be4_case
		.long   _041bfc_case

_041b00_switch:
		.long   _041c2b_case
		.long   _041c37_case
		.long   _041c43_case
		.long   _041c4f_case

_041b10_switch:
		.long   _041c72_case
		.long   _041c89_case
		.long   _041ca1_case
		.long   _041cb9_case




_041b20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0af038_data,%ax
		cmp    $0x000003,%ax
		ja     _041b9c_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_041ae0_switch(,%eax,4)

	_041b3f_case:
		mov    $_041ea4_func,%eax
		mov    $_041cec_jump,%edx
		mov    %eax,_0af028_data
		mov    %edx,_0aa338_data
		jmp    _041b9c_jump

	_041b56_case:
		mov    $_041f38_func,%edi
		mov    $_041cec_jump,%ebp
		mov    %edi,_0af028_data
		mov    %ebp,_0aa33c_data
		jmp    _041b9c_jump

	_041b6e_case:
		mov    $_041fcc_func,%ecx
		mov    $_041cec_jump,%esi
		mov    %ecx,_0af028_data
		mov    %esi,_0aa340_data
		jmp    _041b9c_jump

	_041b86_case:
		mov    $_042060_func,%edx
		mov    $_041cec_jump,%ebx
		mov    %edx,_0af028_data
		mov    %ebx,_0aa344_data

	_041b9c_jump:
		mov    _0af03a_data,%ax
		cmp    $0x000003,%ax
		ja     _041c12_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_041af0_switch(,%eax,4)

	_041bb5_case:
		mov    $_041ea4_func,%edx
		mov    $_041cd8_jump,%ebx
		mov    %edx,_0af02c_data
		mov    %ebx,_0aa338_data
		jmp    _041c12_jump

	_041bcd_case:
		mov    $_041f38_func,%ebp
		mov    $_041cd8_jump,%eax
		mov    %ebp,_0af02c_data
		mov    %eax,_0aa33c_data
		jmp    _041c12_jump

	_041be4_case:
		mov    $_041fcc_func,%esi
		mov    $_041cd8_jump,%edi
		mov    %esi,_0af02c_data
		mov    %edi,_0aa340_data
		jmp    _041c12_jump

	_041bfc_case:
		mov    $_042060_func,%ebx
		mov    $_041cd8_jump,%ecx
		mov    %ebx,_0af02c_data
		mov    %ecx,_0aa344_data

	_041c12_jump:
		mov    _0af03c_data,%ax
		cmp    $0x000003,%ax
		ja     _041c59_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_041b00_switch(,%eax,4)

	_041c2b_case:
		movl   $_041ea4_func,_0af030_data
		jmp    _041c59_jump

	_041c37_case:
		movl   $_041f38_func,_0af030_data
		jmp    _041c59_jump

	_041c43_case:
		movl   $_041fcc_func,_0af030_data
		jmp    _041c59_jump

	_041c4f_case:
		movl   $_042060_func,_0af030_data

	_041c59_jump:
		mov    _0af03e_data,%ax
		cmp    $0x000003,%ax
		ja     _041cce_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_041b10_switch(,%eax,4)

	_041c72_case:
		mov    $_041ea4_func,%ebp
		mov    $_041d00_jump,%eax
		mov    %ebp,_0af034_data
		mov    %eax,_0aa338_data
		jmp    _041cce_jump

	_041c89_case:
		mov    $_041f38_func,%esi
		mov    $_041d00_jump,%edi
		mov    %esi,_0af034_data
		mov    %edi,_0aa33c_data
		jmp    _041cce_jump

	_041ca1_case:
		mov    $_041fcc_func,%ebx
		mov    $_041d00_jump,%ecx
		mov    %ebx,_0af034_data
		mov    %ecx,_0aa340_data
		jmp    _041cce_jump

	_041cb9_case:
		mov    $_042060_func,%eax
		mov    $_041d00_jump,%edx
		mov    %eax,_0af034_data
		mov    %edx,_0aa344_data

	_041cce_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_041cd8_jump:
		xor    %eax,%eax
		mov    _0a7cac_data,%al
		nop



_041ce0_func:
		and    $0x0000ff,%eax
		mov    _0d7960_data(%eax),%al
		ret    

	_041cec_jump:
		xor    %eax,%eax
		mov    _0a7cad_data,%al
		and    $0x0000ff,%eax
		mov    _0d7960_data(%eax),%al
		ret    

	_041d00_jump:
		xor    %eax,%eax
		mov    _0a7cae_data,%al
		and    $0x0000ff,%eax
		mov    _0d7960_data(%eax),%al
		ret    



_041d14_func:
		push   %edx
		call   _03b930_func
		xor    %edx,%edx
		test   %al,%al
		jne    _041d74_jump
		cmpb   $0x000002,_0a7d24_data
		jne    _041d3d_jump
		mov    _0c301a_data,%ax
		cmp    _0d79ea_data,%ax
		setle  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_041d3d_jump:
		cmpb   $0x000001,_0c33a3_data
		jne    _041d74_jump
		xor    %eax,%eax
		mov    _0a7caa_data,%al
		call   _041ce0_func
		test   %al,%al
		je     _041d6d_jump
		xor    %eax,%eax
		mov    _0a7ca8_data,%al
		call   _041ce0_func
		test   %al,%al
		jne    _041d6d_jump
		mov    $0x000001,%eax
		jmp    _041d6f_jump

	_041d6d_jump:
		xor    %eax,%eax

	_041d6f_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_041d74_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_041d78_func:
		push   %edx
		call   _03b930_func
		xor    %edx,%edx
		test   %al,%al
		jne    _041dd8_jump
		cmpb   $0x000002,_0a7d24_data
		jne    _041da1_jump
		mov    _0c301a_data,%ax
		cmp    _0d79f8_data,%ax
		setge  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_041da1_jump:
		cmpb   $0x000001,_0c33a3_data
		jne    _041dd8_jump
		xor    %eax,%eax
		mov    _0a7ca8_data,%al
		call   _041ce0_func
		test   %al,%al
		je     _041dd1_jump
		xor    %eax,%eax
		mov    _0a7caa_data,%al
		call   _041ce0_func
		test   %al,%al
		jne    _041dd1_jump
		mov    $0x000001,%eax
		jmp    _041dd3_jump

	_041dd1_jump:
		xor    %eax,%eax

	_041dd3_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_041dd8_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_041ddc_func:
		push   %edx
		call   _03b930_func
		xor    %edx,%edx
		test   %al,%al
		jne    _041e3c_jump
		cmpb   $0x000002,_0a7d24_data
		jne    _041e05_jump
		mov    _0c3018_data,%ax
		cmp    _0d79f4_data,%ax
		setge  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_041e05_jump:
		cmpb   $0x000001,_0c33a3_data
		jne    _041e3c_jump
		xor    %eax,%eax
		mov    _0a7cab_data,%al
		call   _041ce0_func
		test   %al,%al
		je     _041e35_jump
		xor    %eax,%eax
		mov    _0a7ca9_data,%al
		call   _041ce0_func
		test   %al,%al
		jne    _041e35_jump
		mov    $0x000001,%eax
		jmp    _041e37_jump

	_041e35_jump:
		xor    %eax,%eax

	_041e37_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_041e3c_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_041e40_func:
		push   %edx
		call   _03b930_func
		xor    %edx,%edx
		test   %al,%al
		jne    _041ea0_jump
		cmpb   $0x000002,_0a7d24_data
		jne    _041e69_jump
		mov    _0c3018_data,%ax
		cmp    _0d79ee_data,%ax
		setle  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_041e69_jump:
		cmpb   $0x000001,_0c33a3_data
		jne    _041ea0_jump
		xor    %eax,%eax
		mov    _0a7ca9_data,%al
		call   _041ce0_func
		test   %al,%al
		je     _041e99_jump
		xor    %eax,%eax
		mov    _0a7cab_data,%al
		call   _041ce0_func
		test   %al,%al
		jne    _041e99_jump
		mov    $0x000001,%eax
		jmp    _041e9b_jump

	_041e99_jump:
		xor    %eax,%eax

	_041e9b_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_041ea0_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_041ea4_func:
		push   %ebx
		push   %edx
		mov    _0c317e_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jne    _041f32_jump
		call   _03b930_func
		test   %al,%al
		jne    _041f32_jump
		cmpb   $0x000000,_0a7d24_data
		je     _041ed8_jump
		cmpw   $0x000001,_0b5590_data
		jne    _041ef6_jump

	_041ed8_jump:
		cmpb   $0x000001,_0c33a3_data
		jne    _041ef2_jump
		call   *_0aa338_data
		test   %al,%al
		je     _041ef2_jump
		mov    $0x000001,%edx
		jmp    _041f1c_jump

	_041ef2_jump:
		xor    %edx,%edx
		jmp    _041f1c_jump

	_041ef6_jump:
		cmpw   $0x000001,_0c30c4_data
		je     _041f13_jump
		cmpb   $0x000001,_0c33a3_data
		jne    _041f1a_jump
		call   *_0aa338_data
		test   %al,%al
		je     _041f1a_jump

	_041f13_jump:
		mov    $0x000001,%edx
		jmp    _041f1c_jump

	_041f1a_jump:
		xor    %edx,%edx

	_041f1c_jump:
		cmpb   $0x000000,_0bf2fd_data
		je     _041f32_jump
		cmpw   $0x000001,_0c30c4_data
		sete   %dl
		xor    %dh,%dh

	_041f32_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_041f38_func:
		push   %ebx
		push   %edx
		mov    _0c317e_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jne    _041fc6_jump
		call   _03b930_func
		test   %al,%al
		jne    _041fc6_jump
		cmpb   $0x000000,_0a7d24_data
		je     _041f6c_jump
		cmpw   $0x000001,_0b5592_data
		jne    _041f8a_jump

	_041f6c_jump:
		cmpb   $0x000001,_0c33a3_data
		jne    _041f86_jump
		call   *_0aa33c_data
		test   %al,%al
		je     _041f86_jump
		mov    $0x000001,%edx
		jmp    _041fb0_jump

	_041f86_jump:
		xor    %edx,%edx
		jmp    _041fb0_jump

	_041f8a_jump:
		cmpw   $0x000001,_0c30c6_data
		je     _041fa7_jump
		cmpb   $0x000001,_0c33a3_data
		jne    _041fae_jump
		call   *_0aa33c_data
		test   %al,%al
		je     _041fae_jump

	_041fa7_jump:
		mov    $0x000001,%edx
		jmp    _041fb0_jump

	_041fae_jump:
		xor    %edx,%edx

	_041fb0_jump:
		cmpb   $0x000000,_0bf2fd_data
		je     _041fc6_jump
		cmpw   $0x000001,_0c30c6_data
		sete   %dl
		xor    %dh,%dh

	_041fc6_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_041fcc_func:
		push   %ebx
		push   %edx
		mov    _0c317e_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jne    _04205a_jump
		call   _03b930_func
		test   %al,%al
		jne    _04205a_jump
		cmpb   $0x000000,_0a7d24_data
		je     _042000_jump
		cmpw   $0x000001,_0b5594_data
		jne    _04201e_jump

	_042000_jump:
		cmpb   $0x000001,_0c33a3_data
		jne    _04201a_jump
		call   *_0aa340_data
		test   %al,%al
		je     _04201a_jump
		mov    $0x000001,%edx
		jmp    _042044_jump

	_04201a_jump:
		xor    %edx,%edx
		jmp    _042044_jump

	_04201e_jump:
		cmpw   $0x000001,_0c30c0_data
		je     _04203b_jump
		cmpb   $0x000001,_0c33a3_data
		jne    _042042_jump
		call   *_0aa340_data
		test   %al,%al
		je     _042042_jump

	_04203b_jump:
		mov    $0x000001,%edx
		jmp    _042044_jump

	_042042_jump:
		xor    %edx,%edx

	_042044_jump:
		cmpb   $0x000000,_0bf2fd_data
		je     _04205a_jump
		cmpw   $0x000001,_0c30c0_data
		sete   %dl
		xor    %dh,%dh

	_04205a_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_042060_func:
		push   %ebx
		push   %edx
		mov    _0c317e_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jne    _0420ee_jump
		call   _03b930_func
		test   %al,%al
		jne    _0420ee_jump
		cmpb   $0x000000,_0a7d24_data
		je     _042094_jump
		cmpw   $0x000001,_0b5596_data
		jne    _0420b2_jump

	_042094_jump:
		cmpb   $0x000001,_0c33a3_data
		jne    _0420ae_jump
		call   *_0aa344_data
		test   %al,%al
		je     _0420ae_jump
		mov    $0x000001,%edx
		jmp    _0420d8_jump

	_0420ae_jump:
		xor    %edx,%edx
		jmp    _0420d8_jump

	_0420b2_jump:
		cmpw   $0x000001,_0c30c2_data
		je     _0420cf_jump
		cmpb   $0x000001,_0c33a3_data
		jne    _0420d6_jump
		call   *_0aa344_data
		test   %al,%al
		je     _0420d6_jump

	_0420cf_jump:
		mov    $0x000001,%edx
		jmp    _0420d8_jump

	_0420d6_jump:
		xor    %edx,%edx

	_0420d8_jump:
		cmpb   $0x000000,_0bf2fd_data
		je     _0420ee_jump
		cmpw   $0x000001,_0c30c4_data
		sete   %dl
		xor    %dh,%dh

	_0420ee_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_042168_func:
		mov    %ax,_0d79f2_data
		ret    



_042170_func:
		call   *_0d79e0_data
		ret    



_042178_func:
		push   %esi
		mov    %eax,%esi
		call   *_0d79e0_data
		mov    _0c301a_data,%ax
		cmp    (%edx),%ax
		jge    _04218f_jump
		mov    %ax,(%edx)

	_04218f_jump:
		mov    _0c3018_data,%dx
		cmp    (%ecx),%dx
		jge    _04219e_jump
		mov    %dx,(%ecx)

	_04219e_jump:
		mov    _0c301a_data,%dx
		cmp    (%esi),%dx
		jle    _0421ad_jump
		mov    %dx,(%esi)

	_0421ad_jump:
		mov    _0c3018_data,%dx
		cmp    (%ebx),%dx
		jle    _0421bc_jump
		mov    %dx,(%ebx)

	_0421bc_jump:
		pop    %esi
		ret    



_0421c0_func:
		push   %ebx
		mov    %eax,%ebx
		cmpb   $0x000000,_0a7d24_data
		je     _0421fa_jump
		call   *_0d79e0_data
		mov    _0c301a_data,%ax
		mov    %ax,(%ebx)
		mov    _0c3018_data,%bx
		mov    %ax,_0d79f6_data
		mov    %bx,(%edx)
		mov    $0x000002,%dl
		mov    %bx,_0d79fa_data
		mov    %dl,_0a7d24_data

	_0421fa_jump:
		pop    %ebx
		ret    



_0421fc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %ebx,%edi
		mov    %ecx,%ebp
		mov    0x000014(%esp),%ecx
		movswl (%ecx),%ecx
		movswl (%edx),%esi
		mov    %ecx,%edx
		mov    _0d79f0_data,%ebx
		sub    %esi,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %esi,%eax
		mov    (%esp),%esi
		movswl (%esi),%esi
		mov    %esi,%edx
		sub    %ecx,%edx
		mov    %ax,_0d79ea_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    %eax,%esi
		mov    %si,_0d79f8_data
		mov    0x000018(%esp),%esi
		movswl (%esi),%esi
		movswl 0x000000(%ebp),%ecx
		mov    %esi,%edx
		sub    %ecx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %ecx,%eax
		movswl (%edi),%ecx
		mov    %ecx,%edx
		sub    %esi,%edx
		mov    %ax,_0d79ee_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    %eax,%ecx
		mov    %cx,_0d79f4_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_042288_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %esi,%esi

	_04228e_jump:
		movswl %si,%edx
		mov    _0d7960_data(%edx),%ah
		cmp    $0x00008b,%ah
		jbe    _0422a8_jump
		mov    %ah,%bh
		dec    %bh
		mov    %bh,_0d7960_data(%edx)
		jmp    _0422d7_jump

	_0422a8_jump:
		mov    $0x00008b,%ecx
		xor    %eax,%eax
		mov    $0x000081,%ebx
		mov    _0d7960_data(%edx),%al
		cmp    %ebx,%eax
		jl     _0422c9_jump
		cmp    %ecx,%eax
		jg     _0422c9_jump
		mov    $0x000001,%eax
		jmp    _0422cb_jump

	_0422c9_jump:
		xor    %eax,%eax

	_0422cb_jump:
		test   %eax,%eax
		je     _0422d7_jump
		xor    %bl,%bl
		mov    %bl,_0d7960_data(%edx)

	_0422d7_jump:
		inc    %esi
		cmp    $0x000080,%si
		jl     _04228e_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0422e4_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _085b78_func
		cli    
		mov    $0x000060,%edx
		in     $0x000021,%al
		or     $0x000002,%al
		out    %al,$0x000021
		sub    %eax,%eax
		in     (%dx),%al
		mov    %al,%dh
		mov    _0bf2fd_data,%dl
		xor    %bl,%bl
		cmp    $0x000001,%dl
		jne    _042330_jump
		testb  $0x000040,_0c33d8_data
		je     _042330_jump
		cmp    %dl,%al
		jne    _042327_jump
		movb   $0x000004,_0bf2fd_data
		jmp    _042362_jump

	_042327_jump:
		movb   $0x000003,_0bf2fd_data
		jmp    _042362_jump

	_042330_jump:
		cmpb   $0x000005,_0bf2fd_data
		jne    _042362_jump
		testb  $0x000040,_0c33d8_data
		je     _042362_jump
		xor    %ecx,%ecx
		mov    _0c33a0_data,%cl
		lea    0x000000(,%ecx,8),%eax
		sub    %ecx,%eax
		cmp    _0c1084_data,%eax
		jge    _042362_jump
		movb   $0x000006,_0bf2fd_data

	_042362_jump:
		test   $0x000080,%dh
		jne    _0423a1_jump
		mov    %dh,%al
		xor    %ecx,%ecx
		xor    $0x000096,%al
		mov    %al,%cl
		xor    %eax,%eax
		mov    _0a7d29_data,%al
		cmp    %eax,%ecx
		je     _0423a1_jump
		mov    $0x000001,%bh
		mov    $0x000009,%eax
		mov    %bh,_0c3366_data

	_042387_jump:
		dec    %eax
		mov    _0a7d29_data(%eax),%dl
		mov    %dl,_0a7d2a_data(%eax)
		test   %eax,%eax
		jg     _042387_jump
		mov    %dh,%al
		xor    $0x000096,%al
		mov    %al,_0a7d29_data

	_0423a1_jump:
		mov    _0aa348_data,%al
		cmp    $0x000001,%al
		jb     _0423b5_jump
		jbe    _0423d2_jump
		cmp    $0x000002,%al
		je     _0423ea_jump
		jmp    _042424_jump

	_0423b5_jump:
		test   %al,%al
		jne    _042424_jump
		cmp    $0x0000e1,%dh
		jne    _0423ce_jump
		movb   $0x000001,_0aa348_data
		jmp    _04242c_jump

	_0423ce_jump:
		mov    $0x000001,%bl
		jmp    _04242c_jump

	_0423d2_jump:
		cmp    $0x00001d,%dh
		jne    _0423e0_jump
		movb   $0x000002,_0aa348_data
		jmp    _04242c_jump

	_0423e0_jump:
		xor    %bh,%bh
		mov    %bh,_0aa348_data
		jmp    _04242c_jump

	_0423ea_jump:
		cmp    $0x000045,%dh
		jne    _04241a_jump
		cmpb   $0x000000,_0c33e1_data
		je     _04241a_jump
		cmpb   $0x000000,_0bf2fd_data
		jne    _04241a_jump
		call   _03b930_func
		test   %al,%al
		jne    _04241a_jump
		mov    _0c33a4_data,%ah
		test   %ah,%ah
		sete   %al
		mov    %al,_0c33a4_data

	_04241a_jump:
		xor    %dl,%dl
		mov    %dl,_0aa348_data
		jmp    _04242c_jump

	_042424_jump:
		xor    %ch,%ch
		mov    %ch,_0aa348_data

	_04242c_jump:
		test   %bl,%bl
		je     _04245d_jump
		mov    %dh,%al
		and    $0x00007f,%al
		and    $0x0000ff,%eax
		mov    _0d7960_data(%eax),%dl
		test   %dl,%dl
		je     _042448_jump
		cmp    $0x000080,%dl
		jne    _04245d_jump

	_042448_jump:
		mov    %dh,%al
		and    $0x000080,%al
		xor    $0x000080,%al
		mov    %dh,%ah
		xor    %ebx,%ebx
		and    $0x00007f,%ah
		mov    %ah,%bl
		mov    %al,_0d7960_data(%ebx)

	_04245d_jump:
		mov    $0x000061,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %eax,%ebx
		or     $0x000080,%al
		out    %al,(%dx)
		mov    %bl,%al
		out    %al,(%dx)
		mov    $0x000020,%al
		mov    $0x000020,%edx
		out    %al,(%dx)
		in     $0x000021,%al
		and    $0x0000fd,%al
		out    %al,$0x000021
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_042488_func:
		push   %edx
		and    $0x0000ff,%eax
		xor    %dl,%dl
		mov    %dl,_0d7960_data(%eax)
		pop    %edx
		ret    



_042498_func:
		push   %edx
		xor    %al,%al

	_04249b_jump:
		xor    %edx,%edx
		mov    %al,%dl
		xor    %ah,%ah
		mov    %ah,_0d7960_data(%edx)
		inc    %al
		cmp    $0x000080,%al
		jb     _04249b_jump
		pop    %edx
		ret    



_0424b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _042498_func
		mov    $0x000009,%eax
		call   _08b560_func
		mov    %eax,_0d79e4_data
		mov    _0c33a3_data,%ah
		mov    %dx,_0d79e8_data
		cmp    $0x000001,%ah
		jne    _0424ea_jump
		mov    $_0422e4_func,%ebx
		mov    $0x000009,%eax
		mov    %cs,%ecx
		call   _08b592_func

	_0424ea_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0424f0_func:
		push   %ebx
		push   %ecx
		mov    $0x000009,%eax
		mov    _0d79e8_data,%cx
		mov    _0d79e4_data,%ebx
		call   _08b592_func
		pop    %ecx
		pop    %ebx
		ret    



_04250c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0c339f_data
		je     _042524_jump
		mov    _0c336d_data,%dl
		test   %dl,%dl
		je     _042541_jump

	_042524_jump:
		xor    %bh,%bh
		mov    $_017836_func,%edx
		mov    %bh,_0c3378_data
		xor    %bl,%bl
		mov    %edx,_0d79e0_data
		mov    %bh,_0c3375_data
		jmp    _042567_jump

	_042541_jump:
		mov    $0x000001,%bh
		mov    $_017a2a_func,%ecx
		mov    %dl,_0c3375_data
		mov    $_01763e_func,%edx
		mov    %bh,_0c3378_data
		mov    %ecx,_0c0f54_data
		mov    %edx,_0d79e0_data
		xor    %bl,%bl

	_042567_jump:
		call   _0179c0_func
		test   %eax,%eax
		jne    _042609_jump
		call   _0179f5_func
		test   %eax,%eax
		jne    _042609_jump
		mov    _0c3378_data,%bh
		mov    _0d79e0_data,%edx
		xor    %cl,%cl
		xor    %esi,%esi
		xor    %edi,%edi
		xor    %eax,%eax
		mov    _0c3375_data,%bl
		mov    %cl,_0a7d24_data
		mov    %si,_0c301a_data
		mov    %di,_0c30c2_data
		mov    %ax,_0c30c0_data
		mov    %si,_0c30c4_data
		mov    %di,_0d79fc_data
		mov    %ax,_0d7a00_data
		mov    %si,_0d7a04_data
		mov    %di,_0d79f8_data
		mov    %ax,_0d79ea_data
		mov    %si,_0d79ee_data
		xor    %ch,%ch
		xor    %al,%al
		mov    %cx,_0c3018_data
		mov    %cx,_0c30c6_data
		mov    %cx,_0d7a02_data
		mov    %cx,_0d79f4_data
		jmp    _042688_jump

	_042609_jump:
		cmpb   $0x000000,_0a7d24_data
		jne    _042619_jump
		movb   $0x000001,_0a7d24_data

	_042619_jump:
		call   _0179c0_func
		test   %eax,%eax
		je     _042655_jump
		cmpb   $0x000000,_0c339f_data
		je     _042634_jump
		cmpb   $0x000000,_0c336d_data
		je     _04263f_jump

	_042634_jump:
		xor    %bh,%bh
		mov    $_017836_func,%edx
		xor    %bl,%bl
		jmp    _042686_jump

	_04263f_jump:
		mov    $0x000001,%bh
		mov    $_017a2a_func,%edi
		mov    $_01763e_func,%edx
		mov    %edi,_0c0f54_data
		xor    %bl,%bl
		jmp    _042686_jump

	_042655_jump:
		cmpb   $0x000000,_0c339f_data
		je     _042667_jump
		cmpb   $0x000000,_0c336d_data
		je     _042672_jump

	_042667_jump:
		xor    %bh,%bh
		mov    $_0178f4_func,%edx
		mov    $0x000001,%bl
		jmp    _042686_jump

	_042672_jump:
		mov    $0x000001,%bh
		mov    $_017738_func,%edx
		mov    $_017c14_func,%esi
		mov    %bh,%bl
		mov    %esi,_0c0f54_data

	_042686_jump:
		mov    $0x000001,%al

	_042688_jump:
		mov    %bh,_0c3378_data
		mov    %bl,_0c3375_data
		mov    %edx,_0d79e0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_04269f_jump:
		ret    



_0426a0_func:
		call   _08788f_func
		test   %eax,%eax
		je     _04269f_jump
		call   _086d6b_func
		jmp    _0426a0_func



_0426b0_func:
		push   %edx
		mov    _0c317e_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jne    _0426f4_jump
		cmpw   $0x000001,_0c30c4_data
		je     _0426ee_jump
		cmpb   $0x000001,_0c33a3_data
		jne    _0426f2_jump
		mov    $0x00001c,%eax
		call   _041ce0_func
		test   %al,%al
		jne    _0426ee_jump
		mov    $0x000039,%eax
		call   _041ce0_func
		test   %al,%al
		je     _0426f2_jump

	_0426ee_jump:
		mov    $0x000001,%al
		pop    %edx
		ret    

	_0426f2_jump:
		xor    %al,%al

	_0426f4_jump:
		pop    %edx
		ret    



_0426f8_func:
		push   %edx
		mov    _0c33a3_data,%ah
		xor    %dl,%dl
		cmp    $0x000001,%ah
		jne    _042716_jump
		mov    $0x00001c,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042722_jump
		jmp    _042720_jump

	_042716_jump:
		call   _041f38_func
		test   %ax,%ax
		je     _042722_jump

	_042720_jump:
		mov    $0x000001,%dl

	_042722_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_0427d4_func:
		push   %edx
		mov    _0c33a3_data,%ah
		xor    %dl,%dl
		cmp    $0x000001,%ah
		jne    _0427f2_jump
		mov    $0x000001,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042806_jump
		jmp    _042804_jump

	_0427f2_jump:
		call   _08788f_func
		test   %eax,%eax
		je     _042806_jump
		call   _086d6b_func
		cmp    $0x00001b,%al
		jne    _042806_jump

	_042804_jump:
		mov    $0x000001,%dl

	_042806_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_04280c_func:
		cmpb   $0x000001,_0c33a3_data
		jne    _042847_jump
		mov    $0x000001,%eax
		call   _041ce0_func
		test   %al,%al
		je     _04282b_jump
		movb   $0x000001,_0c338e_data

	_04282a_jump:
		ret    

	_04282b_jump:
		mov    $0x000020,%eax
		call   _041ce0_func
		test   %al,%al
		je     _04282a_jump
		cmpb   $0x000000,_0bf2fc_data
		je     _04282a_jump
		jmp    _030050_jump

	_042847_jump:
		call   _08788f_func
		test   %eax,%eax
		je     _04282a_jump
		call   _086d6b_func
		mov    %al,%ah
		cmp    $0x00001b,%al
		jne    _042862_jump
		movb   $0x000001,_0c338e_data

	_042862_jump:
		cmp    $0x000064,%ah
		jne    _04282a_jump
		jmp    _030050_jump



_04286c_func:
		cmpb   $0x000001,_0c33a3_data
		jne    _0428a2_jump
		mov    $0x000001,%eax
		call   _041ce0_func
		test   %al,%al
		je     _0428bb_jump
		call   _041180_func
		cmpw   $0x000000,_0c317e_data
		jne    _0428bb_jump
		mov    $0x000004,%eax
		call   _055dd4_func
		test   %al,%al
		je     _0428bb_jump
		jmp    _0428b4_jump

	_0428a2_jump:
		call   _08788f_func
		test   %eax,%eax
		je     _0428bb_jump
		call   _086d6b_func
		cmp    $0x00001b,%al
		jne    _0428bb_jump

	_0428b4_jump:
		movb   $0x000001,_0c338e_data

	_0428bb_jump:
		ret    



_0428f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		xor    %ah,%ah
		mov    %ah,_0c339e_data
		xor    %eax,%eax
		mov    _0c3142_data,%al
		call   _065998_func
		test   %al,%al
		je     _042922_jump
		cmpb   $0x000000,_0c33a8_data
		je     _042b8f_jump

	_042922_jump:
		mov    _0c309e_data,%bx
		cmp    $0x000001,%bx
		jne    _042b75_jump
		call   _041d78_func
		test   %ax,%ax
		je     _042954_jump
		mov    $0x00004d,%ch
		xor    %eax,%eax
		movb   $0x000000,(%edx)
		mov    _0a7ca8_data,%al
		mov    %ch,_0c339e_data
		call   _042488_func

	_042954_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _042974_jump
		movb   $0x000048,_0c339e_data
		xor    %eax,%eax
		mov    _0a7ca9_data,%al
		movb   $0x000000,(%edx)
		call   _042488_func

	_042974_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _042994_jump
		movb   $0x00004b,_0c339e_data
		xor    %eax,%eax
		mov    _0a7caa_data,%al
		movb   $0x000000,(%edx)
		call   _042488_func

	_042994_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _0429b5_jump
		mov    $0x000050,%bl
		xor    %eax,%eax
		movb   $0x000000,(%edx)
		mov    _0a7cab_data,%al
		mov    %bl,_0c339e_data
		call   _042488_func

	_0429b5_jump:
		mov    $0x00001f,%eax
		call   _041ce0_func
		test   %al,%al
		je     _0429cb_jump
		movb   $0x000073,(%edx)
		jmp    _042b6a_jump

	_0429cb_jump:
		mov    $0x000031,%eax
		call   _041ce0_func
		test   %al,%al
		je     _0429e7_jump
		movb   $0x00006e,(%edx)
		mov    %edx,%eax
		call   _042e60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0429e7_jump:
		mov    $0x000030,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042a0d_jump
		mov    $0x000030,%eax
		movb   $0x000062,(%edx)
		call   _042488_func
		mov    %edx,%eax
		call   _042e60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042a0d_jump:
		mov    $0x000014,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042a33_jump
		mov    $0x000014,%eax
		movb   $0x000074,(%edx)
		call   _042488_func
		mov    %edx,%eax
		call   _042e60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042a33_jump:
		mov    $0x000017,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042a59_jump
		mov    $0x000017,%eax
		movb   $0x000069,(%edx)
		call   _042488_func
		mov    %edx,%eax
		call   _042e60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042a59_jump:
		mov    $0x000025,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042a7f_jump
		mov    $0x000025,%eax
		movb   $0x00006b,(%edx)
		call   _042488_func
		mov    %edx,%eax
		call   _042e60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042a7f_jump:
		mov    $0x00002e,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042aa5_jump
		mov    $0x00002e,%eax
		movb   $0x000063,(%edx)
		call   _042488_func
		mov    %edx,%eax
		call   _042e60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042aa5_jump:
		mov    $0x00002d,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042acb_jump
		mov    $0x00002d,%eax
		movb   $0x000078,(%edx)
		call   _042488_func
		mov    %edx,%eax
		call   _042e60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042acb_jump:
		mov    $0x00002f,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042af1_jump
		mov    $0x00002f,%eax
		movb   $0x000076,(%edx)
		call   _042488_func
		mov    %edx,%eax
		call   _042e60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042af1_jump:
		mov    $0x000027,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042b17_jump
		mov    $0x000027,%eax
		movb   $0x00006d,(%edx)
		call   _042488_func
		mov    %edx,%eax
		call   _042e60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042b17_jump:
		mov    $0x000032,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042b3d_jump
		mov    $0x000032,%eax
		movb   $0x00006d,(%edx)
		call   _042488_func
		mov    %edx,%eax
		call   _042e60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042b3d_jump:
		mov    $0x000033,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042b6a_jump
		mov    $0x000036,%eax
		call   _041ce0_func
		test   %al,%al
		jne    _042b67_jump
		mov    $0x00002a,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042b6a_jump

	_042b67_jump:
		movb   $0x00002e,(%edx)

	_042b6a_jump:
		mov    %edx,%eax
		call   _042e60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042b75_jump:
		je     _042b8f_jump
		cmpb   $0x000000,_0bf2fd_data
		jne    _042b87_jump
		mov    %edx,%eax
		call   _042b94_func

	_042b87_jump:
		xor    %cl,%cl
		mov    %cl,_0c339e_data

	_042b8f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042b94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000012,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042cb2_jump
		cmpb   $0x000000,_0c33df_data
		jne    _042cb2_jump
		cmpb   $0x000000,_0c33dc_data
		je     _042cb2_jump
		mov    _0c309c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _042cb2_jump
		cmpw   $0x000001,_0c3130_data
		jne    _042cb2_jump
		mov    _0c33cf_data,%dh
		cmp    $0x000040,%dh
		je     _042bf8_jump
		cmp    $0x000080,%dh
		jne    _042cb2_jump

	_042bf8_jump:
		cmpb   $0x000001,_0c33ab_data
		jne    _042c16_jump
		mov    $_0c3347_data,%edi
		xor    %ah,%ah
		mov    $_0c3344_data,%esi
		mov    %ah,_0c33ab_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

	_042c16_jump:
		mov    $0x000001,%dl
		mov    _0c309e_data,%si
		mov    %dl,_0c33aa_data
		neg    %esi
		mov    _0c3348_data,%dh
		mov    %si,_0c309e_data
		test   $0x000002,%dh
		je     _042c46_jump
		call   _05fac0_func
		mov    %dl,_0aa349_data
		jmp    _042c4e_jump

	_042c46_jump:
		xor    %bl,%bl
		mov    %bl,_0aa349_data

	_042c4e_jump:
		mov    _0c3156_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _042c87_jump
		mov    $0x000001,%ch
		mov    $_0b9640_data,%edi
		mov    $_0b92f8_data,%esi
		mov    %ch,_0c339b_data
		mov    $0x000022,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000022,%ecx
		mov    $_0b92f8_data,%edi
		mov    $_0b95b8_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		jmp    _042c8f_jump

	_042c87_jump:
		xor    %cl,%cl
		mov    %cl,_0c339b_data

	_042c8f_jump:
		call   _031404_func
		mov    _0c3130_data,%di
		xor    %edx,%edx
		neg    %edi
		mov    %edx,_0b931c_data
		mov    %di,_0c3130_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042cb2_jump:
		mov    $0x00002c,%eax
		call   _041ce0_func
		test   %al,%al
		jne    _042cce_jump
		mov    $0x000011,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042d22_jump

	_042cce_jump:
		mov    $0x000001,%ebx
		xor    %cl,%cl
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %cl,_0c339c_data
		mov    %ax,_0c30ce_data
		mov    %cl,_0a7c8e_data
		mov    %dx,_0a7cd6_data
		mov    %bx,_0a7cd8_data
		call   _032858_func
		test   %al,%al
		je     _042e59_jump
		mov    %bx,_0c3156_data
		call   _071f04_func
		call   _070a20_func
		call   _0709d0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042d22_jump:
		mov    $0x000026,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042d4f_jump
		mov    _0a7c8e_data,%bh
		xor    $0x000001,%bh
		mov    $0x000026,%eax
		mov    %bh,_0a7c8e_data
		call   _042488_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042d4f_jump:
		mov    $0x000021,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042d7d_jump
		mov    _0c339c_data,%bl
		test   %bl,%bl
		sete   %al
		mov    %al,_0c339c_data
		mov    $0x000021,%eax
		call   _042488_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042d7d_jump:
		mov    $0x00002e,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042de1_jump
		cmpb   $0x000000,_0c33b4_data
		jne    _042de1_jump
		mov    $0x000001,%dl
		mov    $0xffffffff,%edi
		mov    $0x000002,%ebx
		mov    $_0b92f8_data,%eax
		mov    _0c3130_data,%si
		mov    %dl,_0c33aa_data
		neg    %esi
		mov    $0x000040,%dh
		mov    %di,_0b9342_data
		mov    %dh,_0c33cf_data
		mov    %ebx,%edx
		mov    %si,_0c3130_data
		call   _01dea8_func
		mov    $0x00002e,%eax
		call   _042488_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042de1_jump:
		mov    $0x000020,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042e1c_jump
		mov    $0x000001,%ah
		mov    _0c30ce_data,%cx
		mov    %ah,_0c33aa_data
		test   %cx,%cx
		sete   %al
		xor    %ah,%ah
		mov    %ax,_0c30ce_data
		mov    $0x000020,%eax
		call   _042488_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042e1c_jump:
		mov    $0x00002f,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042e59_jump
		movb   $0x000001,_0c33aa_data
		cmpb   $0x0000ff,_0b9372_data
		je     _042e59_jump
		cmpb   $0x000000,_0c33cb_data
		jne    _042e59_jump
		mov    $0x000009,%ebx
		mov    _0c2f49_data,%al
		mov    %bx,_0c2f40_data
		mov    %al,_0b9372_data

	_042e59_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042e60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00001e,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042eff_jump
		negw   _0c309e_data
		cmpb   $0x000000,_0aa349_data
		je     _042e94_jump
		xor    %dh,%dh
		mov    %dh,_0aa349_data
		call   _05fac0_func

	_042e94_jump:
		xor    %bl,%bl
		call   _0312b4_func
		mov    %bl,_0c33d9_data
		mov    _0c3130_data,%bx
		mov    _0c3156_data,%eax
		neg    %ebx
		sar    $0x000010,%eax
		mov    %bx,_0c3130_data
		cmp    $0xffffffff,%eax
		je     _042eda_jump
		cmpb   $0x000000,_0c339b_data
		je     _042eec_jump
		mov    $0x000022,%ecx
		mov    $_0b92f8_data,%edi
		mov    $_0b9640_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		jmp    _042ef3_jump

	_042eda_jump:
		cmpb   $0x000000,_0c339b_data
		je     _042ef3_jump
		movw   $0x000001,_0c3130_data

	_042eec_jump:
		movb   $0x000001,_0c33d9_data

	_042ef3_jump:
		movl   $0x000001,_0b931c_data
		jmp    _042f27_jump

	_042eff_jump:
		mov    $0x000021,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042f27_jump
		mov    _0c339c_data,%ah
		test   %ah,%ah
		sete   %al
		mov    %al,_0c339c_data
		mov    $0x000021,%eax
		call   _042488_func

	_042f27_jump:
		mov    $0x000020,%eax
		call   _041ce0_func
		test   %al,%al
		je     _042f52_jump
		cmpw   $0x000000,_0c30ce_data
		sete   %al
		xor    %ah,%ah
		mov    %ax,_0c30ce_data
		mov    $0x000020,%eax
		call   _042488_func

	_042f52_jump:
		call   _042288_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043348_func:
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ah
		mov    %edx,_0d7a0c_data
		mov    %ah,_0c338e_data
		pop    %edx
		ret    



_04335c_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000088,%ecx
		mov    $_0b9640_data,%esi
		xor    %ah,%ah
		mov    $_0b92f8_data,%edi
		mov    %ah,_0c338e_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03ead0_func
		call   _03ea80_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_043394_func:
		push   %edx
		cmpb   $0x000001,_0c33cb_data
		je     _0433cc_jump
		call   _043348_func
		mov    _0c338e_data,%dl
		test   %dl,%dl
		jne    _0433cc_jump
		call   _03eaf8_func
		call   _03ea80_func
		mov    $_01c868_jump,%eax
		call   _03eb48_func
		call   _04335c_func
		mov    %dl,_0c338e_data

	_0433cc_jump:
		pop    %edx
		ret    



_0433d0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,%esi
		mov    %edx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)
		mov    0x000040(%esp),%ecx
		mov    %ebx,%eax
		mov    _0c0ee0_data,%edx
		lea    0x000000(,%edx,4),%ebp
		add    %edx,%ebp
		mov    _0c0ee4_data,%edx
		shl    $0x000006,%ebp
		add    %ebp,%edx
		mov    %edx,0x000018(%esp)
		mov    %esi,%edx
		sub    $0x000070,%edx
		mov    %esi,%ebp
		mov    %edx,0x00001c(%esp)
		mov    0x000008(%esp),%edx
		sub    %ebx,%ebp
		sub    $0x000040,%edx
		sub    %ecx,%ebp
		mov    %edx,0x000010(%esp)
		cmp    %ecx,%ebx
		jle    _0435a5_jump
		lea    (%ebx,%ecx,1),%eax
		add    %eax,%eax
		mov    %eax,0x000024(%esp)
		test   %ebp,%ebp
		jge    _04343c_jump
		lea    (%eax,%ebp,1),%ecx
		mov    %ecx,0x000024(%esp)
		xor    %ebp,%ebp

	_04343c_jump:
		mov    0x000024(%esp),%eax
		add    %ebp,%eax
		cmp    $0x000140,%eax
		jl     _043455_jump
		mov    $0x000140,%eax
		sub    %ebp,%eax
		dec    %eax
		mov    %eax,0x000024(%esp)

	_043455_jump:
		cmpl   $0x000000,0x000024(%esp)
		jle    _0438b3_jump
		mov    0x000008(%esp),%ecx
		sub    0x000004(%esp),%ecx
		test   %ecx,%ecx
		jl     _043505_jump
		cmp    $0x0000c8,%ecx
		jge    _043505_jump
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000044(%esp),%edx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000048(%esp),%ebx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0c3382_data,%bh
		add    %edx,%esi
		test   %bh,%bh
		je     _0434f0_jump
		mov    0x000010(%esp),%eax
		mov    %ecx,%edx
		sub    %eax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0c0ed4_data,%ebx
		shl    $0x000002,%eax
		mov    0x000024(%esp),%ecx
		add    %eax,%ebx

	_0434df_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _0434df_jump
		jmp    _043505_jump

	_0434f0_jump:
		mov    0x000024(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0434fe_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0434fe_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_043505_jump:
		mov    0x000008(%esp),%esi
		add    0x000004(%esp),%esi
		test   %esi,%esi
		jl     _0438b3_jump
		cmp    $0x0000c8,%esi
		jge    _0438b3_jump
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%eax
		mov    0x000048(%esp),%ebx
		sub    %edx,%eax
		mov    0x000044(%esp),%edx
		mov    _0c3382_data,%cl
		add    %eax,%edx
		add    %ebx,%edi
		mov    %edx,(%esp)
		test   %cl,%cl
		je     _04359a_jump
		mov    0x000010(%esp),%ecx
		mov    %esi,%edx
		sub    %ecx,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x00001c(%esp),%ebp
		mov    _0c0ed4_data,%ebx
		add    %ebp,%eax
		mov    0x000024(%esp),%ecx
		shl    $0x000002,%eax
		mov    (%esp),%esi
		add    %eax,%ebx

	_043586_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _043586_jump
		jmp    _0438b3_jump

	_04359a_jump:
		mov    0x000024(%esp),%ecx
		mov    %edx,%esi
		jmp    _0438a2_jump

	_0435a5_jump:
		lea    (%ebx,%ebx,1),%edx
		mov    %edx,0x00002c(%esp)
		test   %ebp,%ebp
		jge    _0435b8_jump
		add    %ebp,%edx
		mov    %edx,0x00002c(%esp)
		xor    %ebp,%ebp

	_0435b8_jump:
		mov    0x00002c(%esp),%edx
		add    %ebp,%edx
		cmp    $0x000140,%edx
		jl     _0435d2_jump
		mov    $0x000140,%edx
		sub    %ebp,%edx
		dec    %edx
		mov    %edx,0x00002c(%esp)

	_0435d2_jump:
		lea    (%eax,%eax,1),%edx
		sub    %eax,%esi
		add    %ecx,%esi
		mov    %edx,0x000028(%esp)
		mov    %esi,0x000020(%esp)
		test   %esi,%esi
		jge    _0435f2_jump
		lea    (%edx,%esi,1),%ecx
		xor    %esi,%esi
		mov    %ecx,0x000028(%esp)
		mov    %esi,0x000020(%esp)

	_0435f2_jump:
		mov    0x000020(%esp),%eax
		add    0x000028(%esp),%eax
		cmp    $0x000140,%eax
		jl     _04360f_jump
		mov    $0x000140,%eax
		sub    0x000020(%esp),%eax
		dec    %eax
		mov    %eax,0x000028(%esp)

	_04360f_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x000014(%esp)
		test   %eax,%eax
		jl     _04375c_jump
		cmp    $0x0000c8,%eax
		jge    _04375c_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _0436c2_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000048(%esp),%ebx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000044(%esp),%edx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0c3382_data,%ah
		add    %edx,%esi
		test   %ah,%ah
		je     _0436ad_jump
		mov    0x000014(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0c0ed4_data,%ebx
		shl    $0x000002,%eax
		mov    0x00002c(%esp),%ecx
		add    %eax,%ebx

	_04369c_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _04369c_jump
		jmp    _0436c2_jump

	_0436ad_jump:
		mov    0x00002c(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0436bb_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0436bb_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0436c2_jump:
		mov    0x000028(%esp),%ecx
		test   %ecx,%ecx
		jle    _04375c_jump
		mov    0x000014(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    0x000020(%esp),%edi
		shl    $0x000006,%eax
		add    %eax,%edi
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000044(%esp),%edx
		sub    %eax,%esi
		mov    0x000048(%esp),%ebx
		add    %edx,%esi
		mov    _0c3382_data,%dl
		add    %ebx,%edi
		test   %dl,%dl
		je     _04374b_jump
		mov    0x000014(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    0x000020(%esp),%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0c0ed4_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_04373a_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _04373a_jump
		jmp    _04375c_jump

	_04374b_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _043755_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_043755_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_04375c_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ecx
		add    %ecx,%eax
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jl     _0438b3_jump
		cmp    $0x0000c8,%eax
		jge    _0438b3_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _043811_jump
		mov    0x00000c(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		mov    0x000044(%esp),%ebx
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%esi
		mov    0x000048(%esp),%ecx
		sub    %edx,%esi
		add    %ecx,%edi
		mov    _0c3382_data,%dh
		add    %ebx,%esi
		test   %dh,%dh
		je     _0437fc_jump
		mov    0x00000c(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x00001c(%esp),%ebp
		add    %ebp,%eax
		mov    _0c0ed4_data,%ebx
		shl    $0x000002,%eax
		mov    0x00002c(%esp),%ecx
		add    %eax,%ebx

	_0437eb_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _0437eb_jump
		jmp    _043811_jump

	_0437fc_jump:
		mov    0x00002c(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _04380a_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_04380a_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_043811_jump:
		cmpl   $0x000000,0x000028(%esp)
		jle    _0438b3_jump
		mov    0x00000c(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		mov    0x000020(%esp),%edi
		add    %edx,%eax
		mov    0x000018(%esp),%ecx
		shl    $0x000006,%eax
		mov    0x000044(%esp),%ebp
		add    %eax,%edi
		mov    _0c3382_data,%bl
		mov    %edi,%esi
		mov    0x000048(%esp),%eax
		sub    %ecx,%esi
		add    %eax,%edi
		add    %ebp,%esi
		test   %bl,%bl
		je     _04389e_jump
		mov    %edx,%eax
		sub    0x000010(%esp),%eax
		lea    0x000000(,%eax,8),%edx
		sub    %eax,%edx
		shl    $0x000006,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    0x000020(%esp),%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0c0ed4_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_043886_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _043886_jump
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_04389e_jump:
		mov    0x000028(%esp),%ecx

	_0438a2_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0438ac_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0438ac_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0438b3_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_0438bc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		xor    %ebp,%ebp
		test   %ebx,%ebx
		jl     _04394c_jump
		mov    $0x000001,%edx
		add    %ebx,%ebx
		sub    %edx,%ebx
		mov    %edx,0x00000c(%esp)
		mov    %ebx,0x000010(%esp)

	_0438e8_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    0x000028(%esp),%ecx
		mov    0x000008(%esp),%eax
		push   %ecx
		mov    0x000008(%esp),%edx
		mov    %edi,%ebx
		push   %eax
		mov    %esi,%ecx
		mov    0x000014(%esp),%eax
		call   _0433d0_func
		mov    0x000028(%esp),%edx
		push   %edx
		mov    0x000028(%esp),%ebx
		mov    0x000008(%esp),%ecx
		push   %ebx
		mov    0x000010(%esp),%eax
		mov    0x000008(%esp),%edx
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _0433d0_func
		mov    0x00000c(%esp),%eax
		add    %eax,%ebp
		lea    0x000002(%eax),%edx
		inc    %edi
		mov    %edx,0x00000c(%esp)
		cmp    %esi,%ebp
		jl     _043948_jump
		mov    0x000010(%esp),%ebx
		sub    %ebx,%ebp
		lea    -0x000002(%ebx),%ecx
		dec    %esi
		mov    %ecx,0x000010(%esp)

	_043948_jump:
		cmp    %esi,%edi
		jle    _0438e8_jump

	_04394c_jump:
		cmpb   $0x000000,_0c3383_data
		je     _04395a_jump
		call   _0442f8_func

	_04395a_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_043964_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0c3385_data
		je     _043aca_jump
		mov    $0x000004,%edx
		mov    $0x0000a1,%eax
		call   _08529c_func
		mov    $0x000004,%edx
		mov    %eax,_0d7a2c_data
		mov    $0x000041,%eax
		call   _08529c_func
		mov    $0x000004,%edx
		mov    %eax,_0d7a28_data
		mov    $0x001400,%eax
		call   _08529c_func
		mov    $0x000004,%edx
		mov    %eax,_0d7a40_data
		mov    $0x007161,%eax
		call   _08529c_func
		mov    _0d7a2c_data,%edx
		mov    %eax,_0c0ed4_data
		test   %edx,%edx
		je     _0439e6_jump
		cmpl   $0x000000,_0d7a28_data
		je     _0439e6_jump
		cmpl   $0x000000,_0d7a40_data
		je     _0439e6_jump
		test   %eax,%eax
		jne    _043a49_jump

	_0439e6_jump:
		cmpl   $0x000000,_0d7a2c_data
		je     _0439f9_jump
		mov    $_0d7a2c_data,%eax
		call   _0852ac_func

	_0439f9_jump:
		cmpl   $0x000000,_0d7a28_data
		je     _043a0c_jump
		mov    $_0d7a28_data,%eax
		call   _0852ac_func

	_043a0c_jump:
		cmpl   $0x000000,_0d7a40_data
		je     _043a1f_jump
		mov    $_0d7a40_data,%eax
		call   _0852ac_func

	_043a1f_jump:
		cmpl   $0x000000,_0c0ed4_data
		je     _043a32_jump
		mov    $_0c0ed4_data,%eax
		call   _0852ac_func

	_043a32_jump:
		xor    %dl,%dl
		mov    $_0a1700_data,%eax
		mov    %dl,_0c3385_data
		call   _020150_func
		jmp    _043aca_jump

	_043a49_jump:
		xor    %esi,%esi
		xor    %edi,%edi

	_043a4d_jump:
		mov    %esi,%eax
		imul   %esi,%eax
		mov    _0d7a28_data,%edx
		mov    %eax,(%edx,%edi,1)
		xor    %eax,%eax
		xor    %edx,%edx

	_043a5f_jump:
		mov    %eax,%ebx
		imul   %eax,%ebx
		mov    _0d7a2c_data,%ecx
		add    $0x000004,%edx
		inc    %eax
		mov    %ebx,-0x000004(%ecx,%edx,1)
		cmp    $0x0000a0,%eax
		jle    _043a5f_jump
		inc    %esi
		add    $0x000004,%edi
		cmp    $0x000040,%esi
		jle    _043a4d_jump
		xor    %esi,%esi
		xor    %edi,%edi

	_043a86_jump:
		mov    $0x3f500000,%ecx
		mov    %esi,%eax
		add    $0x000004,%edi
		call   _085498_func
		xor    %ebx,%ebx
		call   _0869d6_func
		call   _085695_func
		mov    $0x40f00000,%ecx
		xor    %ebx,%ebx
		call   _08b5d1_func
		call   _085695_func
		call   _0864a4_func
		mov    _0d7a40_data,%edx
		inc    %esi
		mov    %eax,-0x000004(%edx,%edi,1)
		cmp    $0x001400,%esi
		jl     _043a86_jump

	_043aca_jump:
		call   _043ad8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043ad8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c3385_data,%ah
		test   %ah,%ah
		je     _043af8_jump
		movb   $0x000001,_0c3382_data
		movb   $0x000003,_0c3381_data
		jmp    _043b06_jump

	_043af8_jump:
		mov    $0x000003,%dh
		mov    %ah,_0c3382_data
		mov    %dh,_0c3381_data

	_043b06_jump:
		mov    $0x000019,%edx
		mov    $0x000057,%ebx
		mov    $0x000032,%ecx
		mov    $0x0000a0,%esi
		mov    $0x000064,%edi
		mov    $0x000a00,%ebp
		mov    $0x000640,%eax
		mov    %edx,_0c0eec_data
		mov    %ebx,_0c0ec4_data
		mov    %ecx,_0c0ec0_data
		mov    %esi,_0c0ed0_data
		mov    %edi,_0c0ecc_data
		mov    %ebp,_0d7a24_data
		xor    %cl,%cl
		mov    %eax,_0d7a20_data
		mov    %cl,_0c3384_data
		mov    %cl,_0c3380_data
		call   _044180_func
		cmpb   $0x000000,_0c3385_data
		je     _043b95_jump
		mov    _0c0eec_data,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0c0ec8_data
		call   _0442f8_func

	_043b95_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_043b9c_jump:
		cmp    $0x000001,%dl
		jne    _043bdf_jump
		lea    0x000002(%ebx),%edx
		mov    %dx,_0c3116_data
		lea    0x000002(%eax),%edx
		mov    %dx,_0c3118_data
		xor    %edx,%edx
		mov    _0c303c_data,%dx
		sub    %ebx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0c3124_data
		xor    %edx,%edx
		mov    _0c3036_data,%dx
		sub    %eax,%edx
		sub    $0x000004,%edx
		mov    %dx,_0c3122_data

	_043bdf_jump:
		mov    %esi,_0c0ec0_data
		mov    %ecx,_0c0ec4_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043bf0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0c0eec_data,%ebx
		add    %eax,%ebx
		mov    $0x000040,%eax
		cmp    %ebx,%eax
		jle    _043c07_jump
		mov    %ebx,%eax

	_043c07_jump:
		mov    %eax,%ebx
		mov    $0x000019,%eax
		cmp    %ebx,%eax
		jge    _043c14_jump
		mov    %ebx,%eax

	_043c14_jump:
		mov    %eax,_0c0eec_data
		call   _044180_func
		cmpb   $0x000000,_0c3382_data
		je     _043c3c_jump
		test   %edx,%edx
		jle    _043c32_jump
		mov    $0xffffffbf,%eax
		jmp    _043c37_jump

	_043c32_jump:
		mov    $0x000041,%eax

	_043c37_jump:
		call   _04422c_func

	_043c3c_jump:
		pop    %edx
		pop    %ebx
		ret    



_043c40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0d7a1c_data,%bx
		mov    _0c0ed0_data,%dx
		mov    _0d7a18_data,%si
		sub    %edx,%ebx
		mov    _0c0ecc_data,%cx
		movswl %bx,%eax
		sub    %ecx,%esi
		test   %eax,%eax
		jge    _043c6e_jump
		neg    %eax

	_043c6e_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _043c7b_jump
		neg    %eax

	_043c7b_jump:
		add    %eax,%edi
		test   %di,%di
		jle    _043ca5_jump
		mov    $0x000006,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    $0x000006,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%esi

	_043ca5_jump:
		mov    _0aa400_data,%edx
		movswl %bx,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _043cbe_jump
		mov    $0x000001,%eax
		jg     _043cbe_jump
		neg    %eax

	_043cbe_jump:
		add    _0aa400_data,%eax
		mov    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _043ccf_jump
		mov    %ebx,%eax

	_043ccf_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _043cda_jump
		mov    %ebx,%eax

	_043cda_jump:
		mov    _0aa404_data,%ecx
		mov    %eax,_0aa400_data
		movswl %si,%eax
		sub    %ecx,%eax
		cmp    $0x000000,%eax
		je     _043cf8_jump
		mov    $0x000001,%eax
		jg     _043cf8_jump
		neg    %eax

	_043cf8_jump:
		mov    _0aa404_data,%esi
		mov    $0x000010,%ebx
		add    %esi,%eax
		cmp    %ebx,%eax
		jle    _043d0b_jump
		mov    %ebx,%eax

	_043d0b_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _043d16_jump
		mov    %ebx,%eax

	_043d16_jump:
		mov    %eax,_0aa404_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043d24_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043d36_jump
		mov    %ebx,%eax

	_043d36_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _043d43_jump
		mov    %ebx,%eax

	_043d43_jump:
		mov    _0c3384_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _043d9e_jump
		mov    _0d7a10_data,%ecx
		mov    _0d7a24_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0d7a10_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0c3122_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _043d7e_jump
		mov    %ebx,%eax

	_043d7e_jump:
		mov    _0c3114_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _043d94_jump
		mov    %ebx,%eax

	_043d94_jump:
		mov    %eax,_0d7a10_data
		sar    $0x000004,%eax
		jmp    _043dcd_jump

	_043d9e_jump:
		mov    _0c3160_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0c3122_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043dba_jump
		mov    %ebx,%eax

	_043dba_jump:
		mov    _0c3114_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _043dcd_jump
		mov    %ebx,%eax

	_043dcd_jump:
		mov    %ax,_0c3162_data
		mov    _0d7a24_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0d7a24_data
		mov    %eax,_0c0ed0_data
		call   _044180_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043df4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043e06_jump
		mov    %ebx,%eax

	_043e06_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _043e13_jump
		mov    %ebx,%eax

	_043e13_jump:
		mov    _0c3384_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _043e6e_jump
		mov    _0d7a14_data,%ecx
		mov    _0d7a20_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0d7a14_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0c3120_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _043e4e_jump
		mov    %ebx,%eax

	_043e4e_jump:
		mov    _0c3116_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _043e64_jump
		mov    %ebx,%eax

	_043e64_jump:
		mov    %eax,_0d7a14_data
		sar    $0x000004,%eax
		jmp    _043e9d_jump

	_043e6e_jump:
		mov    _0c3164_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0c3120_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043e8a_jump
		mov    %ebx,%eax

	_043e8a_jump:
		mov    _0c3116_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _043e9d_jump
		mov    %ebx,%eax

	_043e9d_jump:
		mov    %ax,_0c3166_data
		mov    _0d7a20_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0d7a20_data
		mov    %eax,_0c0ecc_data
		call   _044180_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043ec4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043ed7_jump
		mov    %ebx,%eax

	_043ed7_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _043ee4_jump
		mov    %ebx,%eax

	_043ee4_jump:
		mov    _0c3116_data,%dx
		mov    %eax,%ecx
		mov    _0c3162_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _043f03_jump
		cmp    _0c3124_data,%ax
		jne    _043f31_jump

	_043f03_jump:
		mov    _0c3162_data,%ax
		cmp    _0c3116_data,%ax
		jne    _043f16_jump
		test   %ecx,%ecx
		jg     _043f31_jump

	_043f16_jump:
		mov    _0c3162_data,%ax
		cmp    _0c3124_data,%ax
		jne    _044007_jump
		test   %ecx,%ecx
		jge    _044007_jump

	_043f31_jump:
		mov    _0c0eec_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0c0ed0_data,%edx
		cmp    %edx,%eax
		jge    _044007_jump
		mov    $0x000140,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _044007_jump
		testb  $0x000001,_0c3384_data
		je     _043fb3_jump
		mov    _0d7a10_data,%eax
		mov    _0d7a24_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0d7a10_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0c3122_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _043f93_jump
		mov    %ebx,%eax

	_043f93_jump:
		mov    _0c3114_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _043fa9_jump
		mov    %ebx,%eax

	_043fa9_jump:
		mov    %eax,_0d7a10_data
		sar    $0x000004,%eax
		jmp    _043fe4_jump

	_043fb3_jump:
		mov    %ecx,%eax
		mov    _0c3160_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0c3122_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043fd1_jump
		mov    %ebx,%eax

	_043fd1_jump:
		mov    _0c3114_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _043fe4_jump
		mov    %ebx,%eax

	_043fe4_jump:
		mov    %ax,_0c3162_data
		mov    _0d7a24_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0d7a24_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0c0ed0_data

	_044007_jump:
		call   _044180_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044014_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _044027_jump
		mov    %ebx,%eax

	_044027_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _044034_jump
		mov    %ebx,%eax

	_044034_jump:
		mov    _0c3118_data,%dx
		mov    %eax,%ecx
		mov    _0c3166_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _044053_jump
		cmp    _0c3122_data,%ax
		jne    _044081_jump

	_044053_jump:
		mov    _0c3166_data,%ax
		cmp    _0c3118_data,%ax
		jne    _044066_jump
		test   %ecx,%ecx
		jg     _044081_jump

	_044066_jump:
		mov    _0c3166_data,%ax
		cmp    _0c3122_data,%ax
		jne    _044157_jump
		test   %ecx,%ecx
		jge    _044157_jump

	_044081_jump:
		mov    _0c0eec_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0c0ecc_data,%edx
		cmp    %edx,%eax
		jge    _044157_jump
		mov    $0x0000c8,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _044157_jump
		testb  $0x000001,_0c3384_data
		je     _044103_jump
		mov    _0d7a14_data,%eax
		mov    _0d7a20_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0d7a14_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0c3120_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _0440e3_jump
		mov    %ebx,%eax

	_0440e3_jump:
		mov    _0c3116_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _0440f9_jump
		mov    %ebx,%eax

	_0440f9_jump:
		mov    %eax,_0d7a14_data
		sar    $0x000004,%eax
		jmp    _044134_jump

	_044103_jump:
		mov    %ecx,%eax
		mov    _0c3164_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0c3120_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _044121_jump
		mov    %ebx,%eax

	_044121_jump:
		mov    _0c3116_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _044134_jump
		mov    %ebx,%eax

	_044134_jump:
		mov    %ax,_0c3166_data
		mov    _0d7a20_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0d7a20_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0c0ecc_data

	_044157_jump:
		call   _044180_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044180_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c0eec_data,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		mov    %eax,%ecx
		sub    %edx,%eax
		sar    %eax
		mov    _0c0eec_data,%esi
		add    %esi,%esi
		mov    %eax,%ebx
		mov    _0c0ed0_data,%eax
		mov    %esi,%edx
		sub    %ebx,%eax
		sar    $0x00001f,%edx
		mov    %eax,_0c0ee4_data
		mov    %esi,%eax
		sub    %edx,%eax
		sar    %eax
		mov    _0c0ecc_data,%edx
		sub    %eax,%edx
		mov    %edx,_0c0ee0_data
		mov    _0bf38b_data,%dl
		test   %dl,%dl
		jne    _043b9c_jump
		mov    $0x0000a0,%edx
		mov    _0c303c_data,%ax
		sub    %edx,%eax
		mov    $0x000064,%ebx
		mov    %ax,_0c3124_data
		mov    _0c3036_data,%ax
		mov    %dx,_0c3116_data
		sub    %ebx,%eax
		mov    %bx,_0c3118_data
		mov    %ax,_0c3122_data
		mov    %esi,_0c0ec0_data
		mov    %ecx,_0c0ec4_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04422c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c0eec_data,%edx
		mov    _0a7ca0_data,%ebx
		neg    %edx
		imul   %ebx,%edx
		mov    _0a7ca4_data,%ecx
		mov    _0c0ec8_data,%esi
		add    %ecx,%edx
		cmp    %esi,%edx
		jne    _044264_jump
		testb  $0x000002,_0c3384_data
		je     _0442bf_jump
		cmp    _0d7a3c_data,%esi
		je     _0442bf_jump

	_044264_jump:
		cmpb   $0x000000,_0c3385_data
		je     _0442bf_jump
		mov    _0c0eec_data,%edx
		mov    _0c0ec8_data,%ebx
		neg    %edx
		add    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		cmp    %ebx,%eax
		jle    _044298_jump
		mov    %ebx,%eax

	_044298_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		cmp    %ebx,%eax
		jge    _0442a2_jump
		mov    %ebx,%eax

	_0442a2_jump:
		mov    %eax,_0c0ec8_data
		mov    $0x000001,%ah
		mov    %ah,_0c3382_data
		mov    %ah,_0c3383_data
		call   _044180_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0442bf_jump:
		cmpl   $0x000000,_0c0ec8_data
		je     _0442e5_jump
		cmpb   $0x000000,_0c3385_data
		je     _0442e5_jump
		mov    $0x000001,%ch
		xor    %al,%al
		mov    %ch,_0c3382_data
		mov    %al,_0c3383_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0442e5_jump:
		xor    %bh,%bh
		mov    %bh,_0c3382_data
		mov    %bh,_0c3383_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0442f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0c0eec_data,%ebx
		imul   %ebx,%ebx
		mov    $0x200000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000040,%edx
		sub    _0c0eec_data,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		sar    $0x000002,%eax
		mov    _0c0ed4_data,%edi
		shl    $0x000002,%eax
		lea    0x00e100(%edi,%eax,1),%edx
		mov    %edx,0x000014(%esp)
		lea    0x00037c(%edi),%edx
		sub    %eax,%edx
		add    $0x00df00,%edx
		mov    _0c3385_data,%ah
		mov    %edx,0x000018(%esp)
		test   %ah,%ah
		je     _04453f_jump
		xor    %dl,%dl
		mov    $0x007161,%ecx
		mov    %dl,_0c3383_data
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		xor    %ecx,%ecx
		mov    %ecx,0x000020(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)

	_044384_jump:
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%esi
		mov    0x000018(%esp),%ebp
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%esp)
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x00001c(%esp),%ecx
		mov    0x00001c(%esp),%edi
		mov    %eax,0x000010(%esp)
		neg    %edx
		add    %esi,%ecx
		add    %ebp,%edi
		mov    0x000018(%esp),%eax
		mov    %ecx,%esi
		mov    %edi,0x000028(%esp)
		add    %edx,%eax
		mov    0x000014(%esp),%edi
		mov    %eax,0x000030(%esp)
		add    %edi,%edx
		mov    %eax,(%esp)
		mov    %edx,0x00002c(%esp)
		jmp    _0444fd_jump

	_0443d5_jump:
		lea    0x000000(,%ebx,4),%eax
		mov    %eax,0x000024(%esp)
		mov    0x000024(%esp),%edx
		mov    _0d7a2c_data,%eax
		mov    0x000010(%esp),%edi
		add    %eax,%edx
		mov    _0d7a28_data,%eax
		add    %eax,%edi
		mov    (%edx),%eax
		mov    (%edi),%edx
		mov    0x00000c(%esp),%edi
		add    %edx,%eax
		imul   %edi,%eax
		cmp    $0x500000,%eax
		jae    _0444cc_jump
		shr    $0x00000a,%eax
		mov    _0d7a40_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0c0ec8_data,%eax
		mov    (%edx),%ebp
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %ebx,%eax
		shr    $0x000010,%edx
		imul   %edx,%eax
		imul   0x000020(%esp),%edx
		add    $0x008000,%edx
		shr    $0x000010,%edx
		imul   $0x000140,%edx,%edx
		add    $0x008000,%eax
		shr    $0x000010,%eax
		test   %ebx,%ebx
		je     _044474_jump
		mov    0x000014(%esp),%edi
		add    0x000024(%esp),%edi
		sub    0x00001c(%esp),%edi
		mov    %edx,%ebp
		sub    %eax,%ebp
		add    %ebp,(%edi)
		mov    0x000018(%esp),%edi
		sub    0x000024(%esp),%edi
		add    0x00001c(%esp),%edi
		mov    %eax,%ebp
		sub    %edx,%ebp
		add    %ebp,(%edi)

	_044474_jump:
		cmpl   $0x000000,0x000020(%esp)
		je     _044491_jump
		mov    %eax,%edi
		neg    %edi
		mov    (%esi),%ebp
		sub    %edx,%edi
		add    %edi,%ebp
		lea    (%eax,%edx,1),%edi
		mov    %ebp,(%esi)
		mov    0x000030(%esp),%ebp
		add    %edi,0x000000(%ebp)

	_044491_jump:
		cmp    _0c0eec_data,%ebx
		ja     _0444cc_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _0444b7_jump
		lea    (%eax,%edx,1),%edi
		mov    0x00002c(%esp),%ebp
		add    %edi,0x000000(%ebp)
		mov    %eax,%edi
		neg    %edi
		sub    %edx,%edi
		mov    0x000028(%esp),%ebp
		add    %edi,0x000000(%ebp)

	_0444b7_jump:
		test   %ebx,%ebx
		je     _0444cc_jump
		mov    %eax,%edi
		mov    (%ecx),%ebp
		sub    %edx,%edi
		add    %edi,%ebp
		sub    %eax,%edx
		mov    (%esp),%eax
		mov    %ebp,(%ecx)
		add    %edx,(%eax)

	_0444cc_jump:
		mov    0x000030(%esp),%ebp
		mov    0x000028(%esp),%eax
		mov    0x00002c(%esp),%edx
		mov    (%esp),%edi
		add    $0x000004,%esi
		sub    $0x000004,%ecx
		inc    %ebx
		sub    $0x000004,%ebp
		add    $0x000004,%eax
		sub    $0x000004,%edx
		add    $0x000004,%edi
		mov    %ebp,0x000030(%esp)
		mov    %eax,0x000028(%esp)
		mov    %edx,0x00002c(%esp)
		mov    %edi,(%esp)

	_0444fd_jump:
		mov    _0c0ec4_data,%eax
		sub    _0c0eec_data,%eax
		cmp    %eax,%ebx
		jb     _0443d5_jump
		mov    0x000004(%esp),%edi
		mov    0x000020(%esp),%ebp
		mov    0x000008(%esp),%eax
		mov    _0c0eec_data,%edx
		add    $0x000004,%edi
		inc    %ebp
		add    $0x0000e0,%eax
		mov    %edi,0x000004(%esp)
		mov    %ebp,0x000020(%esp)
		mov    %eax,0x000008(%esp)
		cmp    %edx,%ebp
		jbe    _044384_jump

	_04453f_jump:
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04454c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0a5256_data,%si
		mov    _0c3178_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0446a1_jump
		mov    _0c0ec0_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		sar    $0x000002,%edx
		mov    _0b9365_data,%al
		mov    _0c314e_data,%bx
		sub    %eax,%edx
		cmp    $0x0000ff,%bx
		jne    _0445a4_jump
		mov    _0c3112_data,%cx
		test   %cx,%cx
		je     _044673_jump

	_0445a4_jump:
		mov    _0b9330_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _0445ba_jump
		sar    %cl,%ax
		jmp    _0445c3_jump

	_0445ba_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0445c3_jump:
		mov    %ax,_0c314e_data
		mov    _0b9338_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0445d7_jump
		neg    %eax

	_0445d7_jump:
		mov    %eax,%ebx
		mov    _0c314c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0445e7_jump
		neg    %eax

	_0445e7_jump:
		cmp    %eax,%ebx
		jg     _0446a1_jump
		mov    _0b9338_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0445fd_jump
		neg    %eax

	_0445fd_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _04460a_jump
		mov    %ebx,%eax

	_04460a_jump:
		mov    _0c314e_data,%bx
		test   %bx,%bx
		jle    _044632_jump
		movswl %ax,%ebx
		mov    _0c314c_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _044627_jump
		mov    %ebx,%eax

	_044627_jump:
		mov    %ax,_0c314e_data
		jmp    _0446a1_jump

	_044632_jump:
		jge    _04464f_jump
		movswl %ax,%ebx
		mov    _0c314c_data,%eax
		neg    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _044647_jump
		mov    %ebx,%eax

	_044647_jump:
		mov    %ax,_0c314e_data
		jmp    _0446a1_jump

	_04464f_jump:
		mov    _0a5256_data,%si
		test   %dx,%dx
		jle    _044666_jump
		movw   $0x000001,_0c314e_data
		jmp    _0446a1_jump

	_044666_jump:
		jge    _0446a1_jump
		movw   $0x00ffff,_0c314e_data
		jmp    _0446a1_jump

	_044673_jump:
		cmpb   $0x000001,_0b9369_data
		je     _0446a1_jump
		mov    _0b932e_data,%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    $0x000030,%eax
		cmp    %eax,%ebx
		jge    _04469a_jump
		movw   $0x00fffc,_0c314e_data
		jmp    _0446a1_jump

	_04469a_jump:
		mov    %cx,_0c314e_data

	_0446a1_jump:
		mov    _0c3176_data,%eax
		sar    $0x000010,%eax
		mov    _0a5256_data,%si
		cmp    $0xffffffff,%eax
		jne    _0448a8_jump
		mov    _0c0ec4_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		xor    %ecx,%ecx
		mov    _0b9364_data,%cl
		sub    %ecx,%eax
		mov    _0c0ec4_data,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		sub    %ecx,%eax
		mov    _0c3112_data,%cx
		mov    %eax,%edx
		test   %cx,%cx
		jg     _044719_jump
		mov    _0b9338_data,%di
		test   %di,%di
		jle    _044759_jump

	_044719_jump:
		mov    _0b932e_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		mov    %si,_0a5256_data
		test   %ax,%ax
		js     _044734_jump
		sar    %cl,%ax
		jmp    _04473d_jump

	_044734_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04473d_jump:
		mov    _0a5256_data,%si
		cmp    %ax,%si
		jg     _044810_jump
		jge    _044811_jump
		inc    %esi
		jmp    _044811_jump

	_044759_jump:
		test   %cx,%cx
		jl     _044763_jump
		test   %di,%di
		jge    _0447a4_jump

	_044763_jump:
		mov    _0b932e_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		mov    %si,_0a5256_data
		test   %ax,%ax
		js     _04477e_jump
		sar    %cl,%ax
		jmp    _044787_jump

	_04477e_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_044787_jump:
		mov    _0a5256_data,%si
		cmp    %ax,%si
		jge    _044799_jump
		inc    %esi
		jmp    _044811_jump

	_044799_jump:
		jle    _044811_jump
		jmp    _044810_jump

	_0447a4_jump:
		mov    _0b937d_data,%cl
		test   $0x000008,%cl
		je     _0447dd_jump
		mov    _0b932e_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _0447c3_jump
		sar    %cl,%ax
		jmp    _0447cc_jump

	_0447c3_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0447cc_jump:
		mov    _0a5256_data,%si
		cmp    %ax,%si
		jg     _044810_jump
		jge    _044811_jump
		inc    %esi
		jmp    _044811_jump

	_0447dd_jump:
		test   $0x000008,%cl
		jne    _044811_jump
		mov    _0b932e_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _0447f6_jump
		sar    %cl,%ax
		jmp    _0447ff_jump

	_0447f6_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0447ff_jump:
		mov    _0a5256_data,%si
		cmp    %ax,%si
		jge    _04480e_jump
		inc    %esi
		jmp    _044811_jump

	_04480e_jump:
		jle    _044811_jump

	_044810_jump:
		dec    %esi

	_044811_jump:
		movswl %si,%eax
		mov    %si,_0a5256_data
		test   %eax,%eax
		jge    _044821_jump
		neg    %eax

	_044821_jump:
		mov    _0a5256_data,%si
		cmp    $0x000004,%eax
		jle    _04483e_jump
		test   %si,%si
		jle    _044839_jump
		mov    $0x000004,%esi
		jmp    _04483e_jump

	_044839_jump:
		mov    $0xfffffffc,%esi

	_04483e_jump:
		mov    $0x000002,%cl
		mov    %esi,%eax
		mov    %si,_0a5256_data
		test   %ax,%ax
		js     _044853_jump
		sar    %cl,%ax
		jmp    _04485c_jump

	_044853_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04485c_jump:
		mov    _0c3148_data,%di
		mov    _0a5256_data,%si
		add    %eax,%edi
		mov    _0b932e_data,%ax
		mov    %di,_0c3148_data
		cmp    %ax,%dx
		jle    _044888_jump
		cmpw   $0x000000,_0b9338_data
		jl     _04489b_jump

	_044888_jump:
		cmp    _0b932e_data,%bx
		jge    _0448a8_jump
		cmpw   $0x000000,_0b9338_data
		jle    _0448a8_jump

	_04489b_jump:
		mov    _0b9338_data,%ax
		add    %ax,_0c3148_data

	_0448a8_jump:
		mov    %si,_0a5256_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0448b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c0ec4_data,%edi
		mov    _0c0ec0_data,%esi
		xor    %ecx,%ecx
		xor    %eax,%eax
		add    $0x000002,%esi
		add    $0x000002,%edi
		mov    %esi,%edx
		mov    %edi,%ebx
		call   _017eca_func
		push   %esi
		xor    %eax,%eax
		push   %edi
		mov    _0c303c_data,%ax
		push   %eax
		mov    _0c0ec0_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0c3164_data,%ebx
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    _0c0ec4_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0c3160_data,%esi
		xor    %ecx,%ecx
		sar    $0x000010,%esi
		mov    _0c0f44_data,%edi
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		mov    _0c0fcc_data,%esi
		call   _0168fa_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044938_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _017eca_func
		push   $0x0000c8
		mov    _0c3164_data,%ebx
		mov    _0c0f50_data,%edi
		mov    _0c0fcc_data,%esi
		xor    %eax,%eax
		xor    %edx,%edx
		push   $0x000140
		mov    _0c303c_data,%ax
		xor    %ecx,%ecx
		push   %eax
		mov    _0c3160_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sub    $0x000064,%ebx
		sub    $0x0000a0,%eax
		call   _0168fa_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044998_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    $0x000001,%bl
		xor    %ecx,%ecx
		mov    %bl,0x000004(%esp)
		mov    _0c3381_data,%bh
		xor    %edx,%edx
		cmp    $0x000004,%bh
		je     _044c08_jump
		cmpw   $0x000000,_0b9338_data
		jne    _044a27_jump
		cmpw   $0x000000,_0b933a_data
		jne    _044a27_jump
		mov    $0x0000a0,%edx
		mov    $0x000064,%ecx
		mov    _0c0ed0_data,%ebp
		mov    %ecx,_0d7a18_data
		mov    %edx,%ecx
		mov    %edx,_0d7a1c_data
		sub    %ebp,%ecx
		mov    _0bf38b_data,%dl
		shl    $0x000004,%ecx
		cmp    %bl,%dl
		jne    _044a05_jump
		mov    %ecx,%eax
		call   _043d24_func

	_044a05_jump:
		mov    $0x000064,%edx
		sub    _0c0ecc_data,%edx
		mov    _0bf38b_data,%bh
		shl    $0x000004,%edx
		cmp    $0x000001,%bh
		jne    _044b33_jump
		jmp    _044b2c_jump

	_044a27_jump:
		mov    _0b9320_data,%edx
		xor    %eax,%eax
		mov    _0c3114_data,%ecx
		mov    _0b9364_data,%al
		sar    $0x000010,%ecx
		add    %eax,%edx
		cmp    %ecx,%edx
		jle    _044a89_jump
		mov    _0c3122_data,%ecx
		sar    $0x000010,%ecx
		cmp    %ecx,%edx
		jge    _044a89_jump
		mov    _0b932c_data,%edx
		sar    $0x000010,%edx
		lea    (%edx,%eax,1),%ecx
		mov    _0c0ec4_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %eax,%ecx
		mov    _0bf38b_data,%ah
		shl    $0x000004,%ecx
		cmp    $0x000001,%ah
		jne    _044aa7_jump
		mov    %ecx,%eax
		call   _043ec4_func
		test   %eax,%eax
		je     _044aa7_jump
		xor    %bl,%bl
		jmp    _044aa7_jump

	_044a89_jump:
		mov    $0x0000a0,%ecx
		sub    _0c0ed0_data,%ecx
		mov    _0bf38b_data,%al
		shl    $0x000004,%ecx
		cmp    $0x000001,%al
		jne    _044aa7_jump
		mov    %ecx,%eax
		call   _043d24_func

	_044aa7_jump:
		mov    _0b9324_data,%eax
		xor    %edx,%edx
		mov    _0c3116_data,%ebp
		mov    _0b9365_data,%dl
		sar    $0x000010,%ebp
		add    %edx,%eax
		cmp    %ebp,%eax
		jle    _044b13_jump
		mov    _0c3120_data,%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%eax
		jge    _044b13_jump
		mov    _0b932e_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    _0c0ec0_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		sar    $0x000002,%eax
		sub    %eax,%edx
		mov    _0bf38b_data,%al
		shl    $0x000004,%edx
		cmp    $0x000001,%al
		jne    _044b33_jump
		mov    %edx,%eax
		call   _044014_func
		test   %eax,%eax
		je     _044b33_jump
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		jmp    _044b33_jump

	_044b13_jump:
		mov    $0x000064,%edx
		sub    _0c0ecc_data,%edx
		mov    _0bf38b_data,%bh
		shl    $0x000004,%edx
		cmp    $0x000001,%bh
		jne    _044b33_jump

	_044b2c_jump:
		mov    %edx,%eax
		call   _043df4_func

	_044b33_jump:
		test   %bl,%bl
		je     _044b59_jump
		mov    $0x000001,%eax
		movswl %si,%ebx
		cmp    %ebx,%eax
		jle    _044b45_jump
		mov    %ebx,%eax

	_044b45_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _044b52_jump
		mov    %ebx,%eax

	_044b52_jump:
		add    %ax,_0c3162_data

	_044b59_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _044b82_jump
		mov    $0x000001,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jle    _044b6e_jump
		mov    %ebx,%eax

	_044b6e_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _044b7b_jump
		mov    %ebx,%eax

	_044b7b_jump:
		add    %ax,_0c3166_data

	_044b82_jump:
		mov    _0c3162_data,%ax
		mov    _0c3116_data,%bx
		cmp    %bx,%ax
		jge    _044ba9_jump
		mov    %ebx,%eax
		mov    %bx,_0c3162_data
		xor    %ebx,%eax
		xor    %esi,%esi
		mov    %ax,_0a5256_data
		jmp    _044bc5_jump

	_044ba9_jump:
		mov    _0c3124_data,%bx
		cmp    %bx,%ax
		jle    _044bc5_jump
		xor    %esi,%esi
		mov    %bx,_0c3162_data
		mov    %si,_0a5256_data

	_044bc5_jump:
		mov    _0c3166_data,%ax
		mov    _0c3118_data,%bx
		cmp    %bx,%ax
		jge    _044bec_jump
		mov    %ebx,%eax
		mov    %bx,_0c3166_data
		xor    %ebx,%eax
		xor    %edi,%edi
		mov    %ax,_0a5258_data
		jmp    _044c08_jump

	_044bec_jump:
		mov    _0c3122_data,%bx
		cmp    %bx,%ax
		jle    _044c08_jump
		xor    %edi,%edi
		mov    %bx,_0c3166_data
		mov    %di,_0a5258_data

	_044c08_jump:
		mov    $_0b92f8_data,%eax
		call   _045054_func
		test   %di,%di
		jne    _044c1e_jump
		andb   $0x0000fe,_0c3381_data

	_044c1e_jump:
		test   %si,%si
		jne    _044c2a_jump
		andb   $0x0000fd,_0c3381_data

	_044c2a_jump:
		test   %di,%di
		jne    _044c38_jump
		test   %si,%si
		jne    _044c38_jump
		xor    %edx,%edx
		xor    %ecx,%ecx

	_044c38_jump:
		test   %ecx,%ecx
		jne    _044d42_jump
		test   %edx,%edx
		jne    _044d42_jump
		cmpw   $0x000000,_0b933a_data
		jne    _044d42_jump
		cmpw   $0x000000,_0b9338_data
		jne    _044d42_jump
		testb  $0x0000fb,_0c3381_data
		jne    _044d42_jump
		cmpl   $0x000040,_0c0eec_data
		jge    _044c8d_jump
		cmpb   $0x000000,_0c3384_data
		jne    _044c8d_jump
		mov    $0x000001,%eax
		call   _043bf0_func

	_044c8d_jump:
		mov    _0c0eec_data,%eax
		mov    _0a7ca0_data,%ebx
		neg    %eax
		imul   %ebx,%eax
		mov    _0a7ca4_data,%ecx
		mov    _0c0ec8_data,%esi
		add    %ecx,%eax
		cmp    %esi,%eax
		jae    _044cbf_jump
		cmpb   $0x000000,_0c3384_data
		jne    _044cbf_jump
		mov    $0xfffffed4,%eax
		jmp    _044cef_jump

	_044cbf_jump:
		mov    _0c0eec_data,%eax
		mov    _0a7ca0_data,%edi
		neg    %eax
		imul   %edi,%eax
		mov    _0a7ca4_data,%ebp
		mov    _0c0ec8_data,%edx
		add    %ebp,%eax
		cmp    %edx,%eax
		jbe    _044cf4_jump
		cmpb   $0x000000,_0c3384_data
		jne    _044cf4_jump
		mov    $0x00012c,%eax

	_044cef_jump:
		call   _04422c_func

	_044cf4_jump:
		mov    _0c0eec_data,%eax
		mov    _0a7ca0_data,%ebx
		neg    %eax
		imul   %ebx,%eax
		mov    _0a7ca4_data,%ecx
		mov    _0c0ec8_data,%esi
		add    %ecx,%eax
		cmp    %esi,%eax
		jne    _044d5d_jump
		cmpl   $0x000040,_0c0eec_data
		jne    _044d5d_jump
		cmpb   $0x000000,_0c3381_data
		jne    _044d5d_jump
		mov    $0x000004,%bl
		xor    %ebp,%ebp
		xor    %dh,%dh
		mov    %ebp,_0d7a38_data
		mov    %dh,_0c3384_data
		mov    %bl,_0c3381_data
		jmp    _044d5d_jump

	_044d42_jump:
		cmpw   $0x000000,_0b9338_data
		jne    _044d56_jump
		cmpw   $0x000000,_0b933a_data
		je     _044d5d_jump

	_044d56_jump:
		andb   $0x0000fb,_0c3381_data

	_044d5d_jump:
		cmpb   $0x000004,_0c3381_data
		jne    _045048_jump
		mov    _0d7a38_data,%eax
		cmp    $0x000726,%eax
		ja     _044d7f_jump
		lea    0x000001(%eax),%edx
		mov    %edx,_0d7a38_data

	_044d7f_jump:
		mov    _0d7a38_data,%ebx
		cmp    $0x000726,%ebx
		jne    _044dac_jump
		mov    _0c3384_data,%dl
		mov    $0x000019,%ebp
		or     $0x000004,%dl
		mov    %ebp,_0d7a44_data
		mov    %dl,_0c3384_data
		jmp    _044eea_jump

	_044dac_jump:
		cmp    $0x000708,%ebx
		jne    _044dea_jump
		mov    _0c3384_data,%ah
		mov    _0c0eec_data,%edx
		or     $0x000002,%ah
		neg    %edx
		mov    %ah,_0c3384_data
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0d7a3c_data
		jmp    _044eea_jump

	_044dea_jump:
		mov    _0c3384_data,%cl
		test   %cl,%cl
		je     _044eea_jump
		test   $0x000001,%cl
		jne    _044eea_jump
		mov    _0c0eec_data,%esi
		cmp    $0x000019,%esi
		jne    _044eea_jump
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		mov    _0c0ec8_data,%edi
		add    $0x007d96,%eax
		cmp    %edi,%eax
		jne    _044eea_jump
		mov    $0x000003,%ebx
		mov    %cl,%al
		mov    %esi,%edx
		or     $0x000001,%al
		sar    $0x00001f,%edx
		mov    %al,_0c3384_data
		mov    %esi,%eax
		idiv   %ebx
		lea    0x000140(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _06a9a0_func
		movswl %ax,%ecx
		mov    _0c0eec_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    (%eax,%ecx,1),%edx
		mov    %edx,_0d7a30_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _06a9a0_func
		movswl %ax,%ecx
		mov    _0c0eec_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %ecx,%eax
		mov    %eax,_0d7a34_data
		mov    _0d7a30_data,%eax
		mov    %eax,_0d7a1c_data
		mov    _0d7a34_data,%eax
		mov    %eax,_0d7a18_data
		mov    _0c3160_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0d7a10_data
		mov    _0c3164_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0d7a14_data
		mov    _0c0ed0_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0d7a24_data
		mov    _0c0ecc_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0d7a20_data

	_044eea_jump:
		testb  $0x000001,_0c3384_data
		je     _044fa1_jump
		call   _043c40_func
		mov    _0aa400_data,%eax
		call   _043d24_func
		mov    _0aa404_data,%eax
		call   _043df4_func
		mov    _0c0ed0_data,%eax
		cmp    _0d7a30_data,%eax
		jne    _044fa1_jump
		mov    _0c0ecc_data,%eax
		cmp    _0d7a34_data,%eax
		jne    _044fa1_jump
		mov    _0c0eec_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000140(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _06a9a0_func
		movswl %ax,%ecx
		mov    _0c0eec_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    (%eax,%ecx,1),%edx
		mov    %edx,_0d7a30_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _06a9a0_func
		movswl %ax,%ecx
		mov    _0c0eec_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %ecx,%eax
		mov    %eax,_0d7a34_data
		mov    _0d7a30_data,%eax
		mov    %eax,_0d7a1c_data
		mov    _0d7a34_data,%eax
		mov    %eax,_0d7a18_data

	_044fa1_jump:
		testb  $0x000002,_0c3384_data
		je     _044ffb_jump
		mov    _0c0ec8_data,%eax
		mov    _0d7a3c_data,%ecx
		cmp    %ecx,%eax
		jae    _044fda_jump
		mov    $0x00012c,%eax
		call   _04422c_func
		mov    _0c0ec8_data,%eax
		mov    _0d7a3c_data,%ebp
		cmp    %ebp,%eax
		jbe    _044ffb_jump
		mov    %ebp,_0c0ec8_data
		jmp    _044ffb_jump

	_044fda_jump:
		jbe    _044ffb_jump
		mov    $0xfffffed4,%eax
		call   _04422c_func
		mov    _0c0ec8_data,%eax
		mov    _0d7a3c_data,%edi
		cmp    %edi,%eax
		jae    _044ffb_jump
		mov    %edi,_0c0ec8_data

	_044ffb_jump:
		testb  $0x000004,_0c3384_data
		je     _045048_jump
		mov    _0c0eec_data,%eax
		mov    _0d7a44_data,%edx
		cmp    %edx,%eax
		jae    _04501a_jump
		mov    $0x000001,%eax
		jmp    _045021_jump

	_04501a_jump:
		jbe    _045048_jump
		mov    $0xffffffff,%eax

	_045021_jump:
		call   _043bf0_func
		mov    _0c0eec_data,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0d7a3c_data

	_045048_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_045054_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0bf38b_data,%dl
		test   %dl,%dl
		jne    _04508c_jump
		mov    0x000028(%eax),%dx
		mov    _0c3162_data,%si
		add    $0x0000a0,%edx
		sub    %esi,%edx
		mov    0x00002c(%eax),%bx
		add    $0x000008,%edx
		add    $0x000064,%ebx
		mov    %dx,0x000036(%eax)
		mov    _0c3166_data,%dx
		jmp    _0450d4_jump

	_04508c_jump:
		cmp    $0x000001,%dl
		jne    _0450da_jump
		mov    _0c3162_data,%bx
		mov    0x000028(%eax),%dx
		sub    %ebx,%edx
		mov    _0c0ed0_data,%bx
		add    $0x000008,%edx
		add    %edx,%ebx
		mov    _0c0ee4_data,%dx
		mov    _0c3166_data,%cx
		sub    %edx,%ebx
		mov    0x00002c(%eax),%dx
		mov    %bx,0x000036(%eax)
		mov    _0c0ecc_data,%bx
		sub    %ecx,%edx
		add    %edx,%ebx
		mov    _0c0ee0_data,%dx

	_0450d4_jump:
		sub    %edx,%ebx
		mov    %bx,0x000038(%eax)

	_0450da_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0450e0_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0b9336_data,%eax
		mov    %dx,_0c3148_data
		mov    %dx,_0c314e_data
		sar    $0x000010,%eax
		mov    _0b9320_data,%edx
		add    %eax,%edx
		mov    _0b9338_data,%ax
		mov    %ax,_0c3112_data
		mov    _0b9338_data,%eax
		mov    _0b9324_data,%ebx
		sar    $0x000010,%eax
		add    %eax,%ebx
		mov    %edx,_0b9320_data
		mov    %ebx,_0b9324_data
		pop    %edx
		pop    %ebx
		ret    

_045130_switch:
		.long   _04522a_case
		.long   _04522a_case
		.long   _045208_case
		.long   _04522a_case
		.long   _04522a_case
		.long   _04522a_case
		.long   _045208_case
		.long   _04522a_case
		.long   _045222_case
		.long   _04522a_case
		.long   _045208_case
		.long   _045210_case




_045160_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%eax
		mov    _0d7a48_data,%ecx
		mov    0x00000c(%ecx),%edx
		movw   $0x000000,0x000002(%ecx)
		test   %ax,%ax
		jl     _04518e_jump
		movswl %ax,%ebx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _04518c_jump
		mov    %ebx,%eax

	_04518c_jump:
		jmp    _0451a0_jump

	_04518e_jump:
		movswl %ax,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _04519e_jump
		mov    %ebx,%eax

	_04519e_jump:
		neg    %eax

	_0451a0_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000006(%ecx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0451b4_jump
		mov    %ebx,%eax

	_0451b4_jump:
		mov    $0x00000c,%ebx
		cmp    %ebx,%eax
		jle    _0451bf_jump
		mov    %ebx,%eax

	_0451bf_jump:
		mov    %al,0x000008(%ecx)
		mov    (%ecx),%ah
		xor    %bl,%bl
		test   %ah,%ah
		jbe    _0451f2_jump

	_0451ca_jump:
		xor    %eax,%eax
		movw   $0x000000,0x000008(%edx)
		mov    %bl,%al
		mov    %ax,0x000006(%edx)
		mov    0x000008(%edx),%ax
		mov    %ax,0x000002(%edx)
		mov    %ax,(%edx)
		inc    %bl
		mov    %ax,0x000004(%edx)
		mov    (%ecx),%bh
		add    $0x00000a,%edx
		cmp    %bh,%bl
		jb     _0451ca_jump

	_0451f2_jump:
		mov    0x000008(%ecx),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _04522a_case
		and    $0x0000ff,%eax
		jmp    *%cs:_045130_switch(,%eax,4)

	_045208_case:
		movw   $0x000140,0x000004(%ecx)
		jmp    _045230_jump

	_045210_case:
		mov    0x000006(%ecx),%dx
		movw   $0x000140,0x000004(%ecx)
		neg    %edx
		mov    %dx,0x000006(%ecx)
		jmp    _045230_jump

	_045222_case:
		movw   $0x000064,0x000004(%ecx)
		jmp    _045230_jump

	_04522a_case:
		movw   $0x0000c8,0x000004(%ecx)

	_045230_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx

	_045235_jump:
		ret    

	_045238_case:
		mov    _0d7a48_data,%eax
		test   %eax,%eax
		je     _045235_jump
		cmpl   $0x000000,0x00000c(%eax)
		je     _04524f_jump
		add    $0x00000c,%eax
		call   _0852ac_func

	_04524f_jump:
		cmpl   $0x000000,_0d7a48_data
		je     _045235_jump
		mov    $_0d7a48_data,%eax
		jmp    _0852ac_func



_045264_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %al,0x000008(%esp)
		mov    %dx,(%esp)
		mov    %ecx,%ebp
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		test   %ebx,%ebx
		je     _0452e3_jump
		test   %ecx,%ecx
		je     _0452e3_jump
		mov    $0x000018,%eax
		call   _085294_func
		mov    %eax,%edx
		mov    %eax,_0d7a48_data
		test   %eax,%eax
		je     _0452e3_jump
		mov    $0x00fa00,%ecx
		mov    _0c0f44_data,%edi
		mov    %ebx,%esi
		movb   $0x0000c8,(%eax)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0452b1_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0452b1_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %ebx,%ebx
		mov    _0c0f44_data,%eax
		mov    (%edx),%bl
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    %ebp,0x000014(%edx)
		call   _085294_func
		mov    %eax,0x00000c(%edx)
		test   %eax,%eax
		je     _0452e3_jump
		movb   $0x000001,0x000004(%esp)

	_0452e3_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _0452fe_jump
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000008(%esp),%al
		sar    $0x000010,%edx
		call   _045160_func
		jmp    _045303_jump

	_0452fe_jump:
		call   _045238_case

	_045303_jump:
		mov    0x000004(%esp),%al
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_045310_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0d7a48_data,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    %edx,0x000004(%esp)
		mov    0x00000c(%eax),%ebp
		jmp    _045405_jump

	_045330_jump:
		mov    0x000006(%ebp),%ecx
		mov    0x000004(%ebp),%esi
		mov    0x000000(%ebp),%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ebx
		test   %ecx,%ecx
		jle    _0453f9_jump
		test   %ebx,%ebx
		jl     _0453f9_jump
		cmp    $0x0000c8,%ebx
		jge    _0453f9_jump
		test   %esi,%esi
		jl     _0453f9_jump
		cmp    $0x0000c8,%esi
		jge    _0453f9_jump
		movswl 0x000000(%ebp),%eax
		test   %eax,%eax
		jge    _04537e_jump
		add    %eax,%ecx
		xor    %eax,%eax

	_04537e_jump:
		lea    (%eax,%ecx,1),%edx
		cmp    $0x000140,%edx
		jle    _045390_jump
		mov    $0x000140,%ecx
		sub    %eax,%ecx

	_045390_jump:
		test   %ecx,%ecx
		jle    _0453f9_jump
		mov    0x000002(%ebp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _0453a2_jump
		add    %edx,%ecx
		xor    %edx,%edx

	_0453a2_jump:
		lea    (%edx,%ecx,1),%edi
		cmp    $0x000140,%edi
		jle    _0453b4_jump
		mov    $0x000140,%ecx
		sub    %edx,%ecx

	_0453b4_jump:
		test   %ecx,%ecx
		jle    _0453f9_jump
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000008(%esp),%ebx
		mov    0x000010(%ebx),%ebx
		add    %eax,%ebx
		mov    %ebx,(%esp)
		mov    %edx,%eax
		mov    %esi,%ebx
		mov    0x000008(%esp),%edi
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000014(%edi),%edi
		mov    (%esp),%esi
		add    %eax,%edi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0453f2_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0453f2_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0453f9_jump:
		mov    0x000004(%esp),%eax
		inc    %eax
		add    $0x00000a,%ebp
		mov    %eax,0x000004(%esp)

	_045405_jump:
		mov    0x000008(%esp),%edx
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    (%edx),%al
		cmp    %ebx,%eax
		jg     _045330_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_045424_switch:
		.long   _045497_case
		.long   _045497_case
		.long   _045497_case
		.long   _045497_case
		.long   _045497_case
		.long   _045497_case
		.long   _045497_case
		.long   _045497_case
		.long   _045659_case
		.long   _045547_case
		.long   _0455d8_case
		.long   _04586f_case




_045454_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000048,%esp
		mov    _0d7a48_data,%ebp
		mov    0x000006(%ebp),%dx
		mov    0x00000c(%ebp),%esi
		test   %dx,%dx
		jl     _045479_jump
		mov    0x000004(%ebp),%bx
		sub    0x000002(%ebp),%bx
		jmp    _04547d_jump

	_045479_jump:
		mov    0x000002(%ebp),%bx

	_04547d_jump:
		mov    0x000008(%ebp),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _0458d5_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_045424_switch(,%eax,4)

	_045497_case:
		mov    0x000008(%ebp),%ah
		cmp    $0x000001,%ah
		je     _0454a9_jump
		cmp    $0x000002,%ah
		je     _0454a9_jump
		cmp    $0x000008,%ah
		jne    _0454ad_jump

	_0454a9_jump:
		mov    %ebx,%eax
		jmp    _0454af_jump

	_0454ad_jump:
		xor    %eax,%eax

	_0454af_jump:
		mov    0x000008(%ebp),%cl
		cmp    $0x000005,%cl
		je     _0454c1_jump
		cmp    $0x000004,%cl
		je     _0454c1_jump
		cmp    $0x000006,%cl
		jne    _0454c5_jump

	_0454c1_jump:
		mov    %ebx,%eax
		neg    %eax

	_0454c5_jump:
		mov    0x000008(%ebp),%dh
		mov    %eax,0x000014(%esp)
		cmp    $0x000003,%dh
		je     _0454db_jump
		cmp    $0x000002,%dh
		je     _0454db_jump
		cmp    $0x000004,%dh
		jne    _0454df_jump

	_0454db_jump:
		mov    %ebx,%esi
		jmp    _0454e1_jump

	_0454df_jump:
		xor    %esi,%esi

	_0454e1_jump:
		mov    0x000008(%ebp),%al
		cmp    $0x000007,%al
		je     _0454f0_jump
		cmp    $0x000008,%al
		je     _0454f0_jump
		cmp    $0x000006,%al
		jne    _0454f4_jump

	_0454f0_jump:
		mov    %ebx,%eax
		jmp    _0454f6_jump

	_0454f4_jump:
		xor    %eax,%eax

	_0454f6_jump:
		mov    0x000008(%ebp),%dh
		mov    %eax,0x000010(%esp)
		cmp    $0x000001,%dh
		je     _045507_jump
		cmp    $0x000005,%dh
		jne    _04550b_jump

	_045507_jump:
		xor    %ebx,%ebx
		jmp    _04550d_jump

	_04550b_jump:
		neg    %ebx

	_04550d_jump:
		add    $0x000140,%ebx
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx

	_045518_jump:
		add    $0x00000a,%eax
		mov    %si,-0x000006(%eax)
		mov    0x000010(%esp),%edx
		mov    %cx,-0x000004(%eax)
		mov    %dx,-0x00000a(%eax)
		mov    0x000014(%esp),%edx
		mov    %bx,-0x000002(%eax)
		add    %ecx,%edx
		inc    %ecx
		mov    %dx,-0x000008(%eax)
		cmp    $0x0000c8,%cx
		jge    _045905_jump
		jmp    _045518_jump

	_045547_case:
		mov    %ebx,%eax
		mov    %ebx,0x00001c(%esp)
		xor    %ecx,%ecx
		neg    %eax
		mov    $0x000001,%ebx
		mov    %eax,0x000004(%esp)

	_04555a_jump:
		movswl %bx,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,(%esi,%eax,1)
		mov    (%esi,%eax,1),%dx
		mov    %edx,(%esp)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    (%esp),%edi
		mov    %di,(%edx,%esi,1)
		mov    %di,0x000004(%esi,%eax,1)
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x00001c(%esp),%edi
		mov    %bx,0x000006(%esi,%eax,1)
		mov    %di,0x000002(%edx,%esi,1)
		mov    0x000004(%esp),%edi
		movw   $0x000140,0x000008(%esi,%eax,1)
		mov    %di,0x000002(%esi,%eax,1)
		add    $0x000002,%ecx
		mov    0x000008(%esi,%eax,1),%ax
		add    $0x000002,%ebx
		mov    %ax,0x000008(%edx,%esi,1)
		mov    %edi,%edx
		mov    0x00001c(%esp),%edi
		add    $0x000002,%edx
		add    $0x000002,%edi
		mov    %edx,0x000004(%esp)
		mov    %edi,0x00001c(%esp)
		cmp    $0x0000c8,%cx
		jge    _045905_jump
		jmp    _04555a_jump

	_0455d8_case:
		mov    $0x000140,%eax
		mov    $0x000001,%edi
		xor    %ecx,%ecx
		sub    %ebx,%eax
		mov    %di,0x000034(%esp)
		mov    %eax,0x000008(%esp)

	_0455ef_jump:
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		movw   $0x000000,(%esi,%eax,1)
		mov    (%esi,%eax,1),%di
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    %bx,0x000004(%esi,%eax,1)
		mov    0x000008(%esp),%edi
		mov    %bx,(%edx,%esi,1)
		mov    %di,0x000008(%esi,%eax,1)
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000034(%esp),%edx
		mov    %dx,0x000002(%esi,%eax,1)
		mov    %dx,0x000006(%esi,%eax,1)
		mov    %edx,%eax
		add    $0x000002,%eax
		add    $0x000002,%ecx
		mov    %ax,0x000034(%esp)
		cmp    $0x0000c8,%cx
		jge    _045905_jump
		jmp    _0455ef_jump

	_045659_case:
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx

	_04565e_jump:
		add    $0x00000a,%eax
		inc    %ecx
		movw   $0x000000,-0x000002(%eax)
		cmp    $0x0000c8,%cx
		jl     _04565e_jump
		movw   $0x0000c7,0x000040(%esp)
		mov    %ebx,%eax
		add    %ebx,%eax
		neg    %eax
		add    $0x000140,%eax
		mov    %eax,0x00002c(%esp)
		mov    %ebx,%eax
		neg    %eax
		mov    0x00000c(%ebp),%esi
		add    $0x0000c7,%eax
		xor    %ecx,%ecx
		mov    %eax,0x000020(%esp)
		jmp    _04570b_jump

	_045699_jump:
		imul   $0x00000a,%edx,%edx
		mov    %ecx,%eax
		add    %ebx,%eax
		mov    %eax,0x000044(%esp)
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		mov    0x000044(%esp),%edi
		mov    %di,(%esi,%eax,1)
		mov    %di,0x000004(%esi,%eax,1)
		mov    %di,0x000002(%edx,%esi,1)
		mov    %di,(%edx,%esi,1)
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x000040(%esp),%edi
		mov    %di,0x000006(%esi,%eax,1)
		mov    0x000020(%esp),%edi
		mov    %di,0x000002(%esi,%eax,1)
		mov    0x00002c(%esp),%edi
		inc    %ecx
		mov    %di,0x000008(%esi,%eax,1)
		mov    %edi,%eax
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000040(%esp),%edi
		mov    0x000020(%esp),%edx
		sub    $0x000002,%eax
		dec    %edi
		mov    %eax,0x00002c(%esp)
		dec    %edx
		mov    %di,0x000040(%esp)
		mov    %edx,0x000020(%esp)

	_04570b_jump:
		mov    $0x000064,%edx
		movswl %bx,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %cx,%edx
		cmp    %eax,%edx
		jl     _045699_jump
		call   _045310_func
		mov    $0x0000c7,%edx
		mov    %ebx,%eax
		xor    %ecx,%ecx
		neg    %eax
		mov    %dx,0x00003c(%esp)
		mov    %eax,0x000028(%esp)

	_04573b_jump:
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,0x000004(%esi,%eax,1)
		mov    0x000004(%esi,%eax,1),%dx
		mov    %edx,0x000044(%esp)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    0x000044(%esp),%edi
		mov    %di,0x000004(%edx,%esi,1)
		mov    %bx,(%esi,%eax,1)
		mov    %bx,(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    0x000028(%esp),%edi
		mov    %cx,0x000006(%edx,%esi,1)
		mov    %di,0x000008(%esi,%eax,1)
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x00003c(%esp),%edx
		inc    %ecx
		mov    %dx,0x000002(%esi,%eax,1)
		mov    %edx,%edi
		mov    %dx,0x000006(%esi,%eax,1)
		mov    0x000028(%esp),%eax
		dec    %edi
		inc    %eax
		mov    %di,0x00003c(%esp)
		mov    %eax,0x000028(%esp)
		cmp    $0x000064,%cx
		jl     _04573b_jump
		call   _045310_func
		mov    $0x0000c7,%edx
		mov    $0x0000c8,%edi
		mov    $0x000140,%eax
		xor    %ecx,%ecx
		mov    %eax,0x000030(%esp)
		mov    %ebx,%eax
		mov    %dx,0x000038(%esp)
		add    $0x000140,%eax
		mov    %edi,0x000018(%esp)
		mov    %eax,0x000024(%esp)

	_0457d8_jump:
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,0x000044(%esp)
		mov    0x000036(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		mov    0x000024(%esp),%edx
		mov    %edx,(%esp)
		mov    %dx,0x000004(%esi,%eax,1)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    (%esp),%edi
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x000038(%esp),%edi
		mov    %di,0x000006(%esi,%eax,1)
		mov    0x000030(%esp),%edi
		mov    %di,(%esi,%eax,1)
		mov    %di,(%edx,%esi,1)
		mov    0x000018(%esp),%edi
		mov    %di,0x000002(%esi,%eax,1)
		mov    0x000044(%esp),%edi
		inc    %ecx
		mov    %di,0x000008(%esi,%eax,1)
		mov    0x000030(%esp),%eax
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000038(%esp),%edx
		mov    0x000018(%esp),%edi
		dec    %eax
		dec    %edx
		dec    %edi
		mov    %dx,0x000038(%esp)
		mov    0x000024(%esp),%edx
		mov    %eax,0x000030(%esp)
		dec    %edx
		mov    %edi,0x000018(%esp)
		mov    %edx,0x000024(%esp)
		cmp    $0x000064,%cx
		jge    _045905_jump
		jmp    _0457d8_jump

	_04586f_case:
		mov    $0x0000c8,%esi
		movswl %bx,%edx
		sub    %edx,%esi
		sar    %esi
		mov    %esi,%ecx
		mov    $0x000140,%esi
		sub    %edx,%esi
		mov    %esi,%edx
		sar    %edx
		mov    0x00000c(%ebp),%eax
		mov    %edx,0x00000c(%esp)
		xor    %edx,%edx

	_045891_jump:
		mov    %dx,0x000002(%eax)
		mov    0x00000c(%esp),%esi
		mov    %dx,0x000006(%eax)
		mov    %si,(%eax)
		mov    %si,0x000004(%eax)
		cmp    %cx,%dx
		jl     _0458c2_jump
		mov    $0x0000c8,%edi
		movswl %cx,%esi
		sub    %esi,%edi
		mov    %edi,%esi
		movswl %dx,%edi
		cmp    %edi,%esi
		jl     _0458c2_jump
		mov    %bx,0x000008(%eax)
		jmp    _0458c8_jump

	_0458c2_jump:
		movw   $0x000000,0x000008(%eax)

	_0458c8_jump:
		inc    %edx
		add    $0x00000a,%eax
		cmp    $0x0000c8,%dx
		jge    _045905_jump
		jmp    _045891_jump

	_0458d5_jump:
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx
		jmp    _0458fb_jump

	_0458dc_jump:
		movw   $0x000000,(%eax)
		add    $0x00000a,%eax
		movw   $0x000140,-0x000002(%eax)
		mov    %cx,-0x000008(%eax)
		mov    %cx,-0x000004(%eax)
		mov    -0x00000a(%eax),%dx
		inc    %ecx
		mov    %dx,-0x000006(%eax)

	_0458fb_jump:
		xor    %edx,%edx
		mov    0x000000(%ebp),%dl
		cmp    %dx,%cx
		jl     _0458dc_jump

	_045905_jump:
		mov    0x000004(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _045911_jump
		neg    %eax

	_045911_jump:
		mov    0x000002(%ebp),%bx
		add    %eax,%ebx
		mov    0x000004(%ebp),%cx
		mov    %bx,0x000002(%ebp)
		cmp    %cx,%bx
		jbe    _04592a_jump
		movw   $0x000000,0x000002(%ebp)

	_04592a_jump:
		mov    0x000002(%ebp),%ax
		add    $0x000048,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_045940_func:
		push   %ss
		add    %al,(%eax)
		add    %dl,(%edx)
		add    %al,(%eax)
		add    %cl,0xd000000
		add    %al,(%eax)
		add    %cl,(%eax,%eax,1)
		add    %al,(%eax)
		add    $0x000000,%al
		add    %al,(%eax)
		push   %edx
		mov    $0x00008f,%edx
		mov    $_0dad50_data,%eax
		call   _08b803_func
		test   %eax,%eax
		jne    _045976_jump
		mov    $_0a1710_data,%eax
		call   _020150_func

	_045976_jump:
		pop    %edx
		ret    



_045978_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		lea    0x000001(%ecx),%edx
		mov    %esi,%eax
		call   _084bac_func
		mov    _0a5250_data,%edx
		mov    %eax,%edi
		sar    $0x000010,%edx
		mov    %ebx,%esi
		mov    %eax,_0bf130_data(,%edx,4)
		push   %edi

	_0459ab_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0459c3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0459ab_jump

	_0459c3_jump:
		pop    %edi
		mov    _0a5252_data,%dx
		inc    %edx
		mov    %dx,_0a5252_data
		cmp    $0x000064,%dx
		jl     _045a02_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		push   %ebx
		push   $_0a1734_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_045a02_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_045a08_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		lea    0x000001(%ecx),%edx
		mov    %esi,%eax
		call   _084bac_func
		xor    %edx,%edx
		mov    _0c33e6_data,%dl
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %eax,_0bef50_data(,%edx,4)
		push   %edi

	_045a3a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045a52_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045a3a_jump

	_045a52_jump:
		pop    %edi
		mov    _0c33e6_data,%ah
		inc    %ah
		mov    %ah,_0c33e6_data
		cmp    $0x00003c,%ah
		jb     _045a8f_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		push   %ebx
		push   $_0a1764_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_045a8f_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_045a94_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000018(%esp)
		push   $0x000200
		mov    %edx,%eax
		call   _065798_func
		push   %eax
		xor    %ebp,%ebp
		call   _086d88_func
		movswl %ax,%edi
		add    $0x000008,%esp
		cmp    $0xffffffff,%edi
		jne    _045af5_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    0x000018(%esp),%eax
		call   _065798_func
		push   %eax
		push   $_0a1794_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		jmp    _04601c_jump

	_045af5_jump:
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _087044_func
		mov    %ax,%bx
		mov    %ebx,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    %eax,0x00000c(%esp)
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%ecx
		mov    %eax,0x000008(%esp)
		test   %edx,%edx
		je     _046021_jump
		test   %eax,%eax
		je     _046021_jump
		mov    %edi,%eax
		call   _087081_func
		mov    %edi,%eax
		xor    %edx,%edx
		call   _08717c_func
		mov    %dx,0x000020(%esp)
		xor    %edi,%edi

	_045b47_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _045b8c_jump
		mov    %ecx,%eax
		mov    0x000020(%esp),%edx
		call   _086cfe_func
		cmp    %dx,%ax
		jbe    _045b6b_jump
		mov    %ax,0x000020(%esp)

	_045b6b_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %edi,%ebx
		mov    %eax,%esi

	_045b78_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		inc    %ebx
		mov    %eax,%esi
		cmp    $0x000011,%bx
		jae    _045b47_jump
		jmp    _045b78_jump

	_045b8c_jump:
		mov    0x000020(%esp),%ebx
		inc    %ebx
		mov    %bx,%ax
		add    %eax,%eax
		mov    %bx,0x000020(%esp)
		call   _084f3c_func
		mov    %eax,%edi
		xor    %eax,%eax
		test   %bx,%bx
		jbe    _045bbe_jump
		mov    0x000020(%esp),%ebx

	_045bad_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		inc    %eax
		movw   $0x000000,(%edi,%edx,2)
		cmp    %bx,%ax
		jb     _045bad_jump

	_045bbe_jump:
		mov    0x00000c(%esp),%esi

	_045bc2_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%ebx
		test   %eax,%eax
		je     _045c17_jump
		mov    %ecx,%eax
		call   _086cfe_func
		mov    %ecx,%edx
		mov    %eax,0x000010(%esp)
		mov    %ebx,%eax
		call   _0470cc_func
		xor    %edx,%edx
		mov    0x000010(%esp),%dx
		mov    %eax,%esi
		add    %edx,%edx
		mov    %ecx,%eax
		add    %edi,%edx
		call   _086cfe_func
		cmp    (%edx),%ax
		jbe    _045c01_jump
		mov    %ax,(%edx)

	_045c01_jump:
		xor    %ebx,%ebx

	_045c03_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		inc    %ebx
		mov    %eax,%esi
		cmp    $0x000011,%bx
		jae    _045bc2_jump
		jmp    _045c03_jump

	_045c17_jump:
		mov    _0c33e6_data,%al
		mov    0x000020(%esp),%dl
		mov    0x000020(%esp),%esi
		mov    %dl,_0c1d78_data(%eax)
		cmp    $0x00001e,%si
		jbe    _045c5e_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    %si,%ax
		push   %eax
		push   $_0a17b8_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_045c5e_jump:
		mov    0x000020(%esp),%edx
		xor    %eax,%eax
		test   %dx,%dx
		jbe    _045c8e_jump

	_045c69_jump:
		xor    %ebx,%ebx
		mov    %ax,%bx
		incw   (%edi,%ebx,2)
		movzbl _0c33e6_data,%esi
		imul   $0x00001e,%esi,%esi
		mov    (%edi,%ebx,2),%dl
		inc    %eax
		mov    %dl,_0be290_data(%esi,%ebx,1)
		cmp    0x000020(%esp),%ax
		jb     _045c69_jump

	_045c8e_jump:
		xor    %edx,%edx
		mov    0x000004(%esp),%eax
		mov    0x000020(%esp),%dx
		mov    0x000020(%esp),%esi
		shl    $0x000002,%edx
		xor    %ebx,%ebx
		call   _084bac_func
		mov    %eax,%ebp
		test   %si,%si
		jbe    _045cd8_jump

	_045cae_jump:
		xor    %esi,%esi
		mov    %bx,%si
		mov    (%edi,%esi,2),%ax
		and    $0x00ffff,%eax
		lea    0x000000(,%eax,8),%edx
		mov    0x000004(%esp),%eax
		inc    %ebx
		call   _084bac_func
		mov    %eax,0x000000(%ebp,%esi,4)
		cmp    0x000020(%esp),%bx
		jb     _045cae_jump

	_045cd8_jump:
		mov    %edi,%eax
		call   _0850d4_func
		mov    0x00000c(%esp),%edi

	_045ce3_jump:
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%ebx
		test   %eax,%eax
		je     _046002_jump
		mov    %ecx,%eax
		call   _086cfe_func
		mov    %ecx,%edx
		mov    %eax,%esi
		mov    %eax,0x00001c(%esp)
		mov    %ebx,%eax
		call   _0470cc_func
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   _086cfe_func
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    %ecx,%edx
		mov    %eax,0x000024(%esp)
		mov    %ebx,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		xor    %eax,%eax
		mov    %si,%ax
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		lea    (%eax,%ebp,1),%esi
		mov    (%esp),%bx
		mov    (%esi),%eax
		shl    $0x000003,%ebx
		mov    0x000014(%esp),%dl
		mov    %dl,0x000002(%ebx,%eax,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %ecx,%edx
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    (%esi),%eax
		mov    0x000014(%esp),%dl
		mov    %dl,0x000003(%ebx,%eax,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    (%esi),%eax
		mov    0x000014(%esp),%dl
		mov    %dl,0x000004(%ebx,%eax,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		mov    (%esi),%edx
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    0x000014(%esp),%al
		and    $0x000001,%al
		mov    0x000007(%edx,%ebx,1),%ah
		and    $0x0000ef,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		shl    $0x000004,%al
		or     %al,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		mov    (%esi),%edx
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    0x000014(%esp),%al
		and    $0x00000f,%al
		mov    0x000005(%edx,%ebx,1),%ah
		and    $0x0000f0,%ah
		mov    %ah,0x000005(%edx,%ebx,1)
		or     %al,%ah
		mov    %ah,0x000005(%edx,%ebx,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    (%esi),%eax
		mov    0x000014(%esp),%dl
		mov    %dl,(%ebx,%eax,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _086cfe_func
		mov    (%esi),%edx
		add    %ebx,%edx
		mov    %al,0x000001(%edx)
		mov    (%esi),%eax
		movsbl 0x000001(%ebx,%eax,1),%edx
		movsbl (%ebx,%eax,1),%eax
		add    %edx,%eax
		je     _045e43_jump
		int3   

	_045e43_jump:
		mov    %ecx,%edx
		xor    %esi,%esi
		mov    %edi,%eax
		mov    0x00001c(%esp),%si
		call   _0470cc_func
		shl    $0x000002,%esi
		xor    %ebx,%ebx
		add    %ebp,%esi
		mov    %eax,%edi
		mov    %ecx,%eax
		mov    (%esi),%edx
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    0x000024(%esp),%bx
		mov    0x000014(%esp),%al
		shl    $0x000003,%ebx
		and    $0x00000f,%al
		mov    0x000005(%edx,%ebx,1),%ah
		and    $0x00000f,%ah
		mov    %ah,0x000005(%edx,%ebx,1)
		shl    $0x000004,%al
		or     %al,%ah
		mov    %ah,0x000005(%edx,%ebx,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		mov    (%esi),%edx
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    0x000014(%esp),%al
		and    $0x000001,%al
		mov    0x000007(%edx,%ebx,1),%ah
		and    $0x0000fe,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		or     %al,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		mov    (%esi),%edx
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    0x000014(%esp),%al
		and    $0x000001,%al
		mov    0x000007(%edx,%ebx,1),%ah
		and    $0x0000fd,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		add    %al,%al
		or     %al,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		mov    (%esi),%edx
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    0x000014(%esp),%al
		and    $0x000001,%al
		mov    0x000007(%edx,%ebx,1),%ah
		and    $0x0000fb,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		shl    $0x000002,%al
		or     %al,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		mov    (%esi),%edx
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    0x000014(%esp),%al
		and    $0x000001,%al
		mov    0x000007(%edx,%ebx,1),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		shl    $0x000003,%al
		or     %al,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		mov    (%esi),%edx
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    0x000014(%esp),%al
		and    $0x000001,%al
		mov    0x000007(%edx,%ebx,1),%ah
		and    $0x0000df,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		shl    $0x000005,%al
		or     %al,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		mov    (%esi),%edx
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    0x000014(%esp),%al
		and    $0x000001,%al
		mov    0x000007(%edx,%ebx,1),%ah
		and    $0x0000bf,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		shl    $0x000006,%al
		or     %al,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		mov    (%esi),%edx
		call   _086cfe_func
		mov    %eax,0x000014(%esp)
		mov    0x000014(%esp),%al
		and    $0x000001,%al
		mov    0x000007(%edx,%ebx,1),%ah
		and    $0x00007f,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		shl    $0x000007,%al
		or     %al,%ah
		mov    %ah,0x000007(%edx,%ebx,1)
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _086cfe_func
		mov    (%esi),%edx
		mov    %al,0x000006(%edx,%ebx,1)
		jmp    _045ce3_jump

	_046002_jump:
		mov    0x000018(%esp),%edx
		mov    0x000004(%esp),%eax
		call   _045a08_func
		mov    0x000008(%esp),%eax
		call   _0850d4_func
		mov    0x00000c(%esp),%eax

	_04601c_jump:
		call   _0850d4_func

	_046021_jump:
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04602c_func:
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %bl,(%esp)
		xor    %ebx,%ebx
		jmp    _046052_jump

	_04603c_jump:
		movswl %bx,%eax
		mov    %ecx,%edx
		mov    _0bef50_data(,%eax,4),%eax
		call   _086c40_func
		test   %eax,%eax
		jne    _04605e_jump
		inc    %ebx

	_046052_jump:
		xor    %eax,%eax
		mov    _0c33e6_data,%al
		cmp    %ax,%bx
		jl     _04603c_jump

	_04605e_jump:
		xor    %eax,%eax
		mov    _0c33e6_data,%al
		cmp    %ax,%bx
		jne    _0460ac_jump
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _045a94_func
		movswl %bx,%edx
		mov    %eax,_0bf040_data(,%edx,4)
		cmpb   $0x000000,(%esp)
		je     _0460ac_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		push   %ecx
		push   $_0a17e0_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_0460ac_jump:
		movswl %bx,%eax
		mov    _0bf040_data(,%eax,4),%eax
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		ret    



_0460bc_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %ebx,%edi
		push   $0x000200
		mov    %edx,%eax
		call   _065918_func
		push   %eax
		call   _086d88_func
		add    $0x000008,%esp
		mov    %ax,(%esp)
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _046117_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _065918_func
		push   %eax
		push   $_0a1820_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_046117_jump:
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _087044_func
		mov    %ax,%bx
		mov    %eax,0x000004(%esp)
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _084bac_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _046148_jump
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _087081_func
		jmp    _046152_jump

	_046148_jump:
		mov    $_0a1848_data,%eax
		call   _020150_func

	_046152_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x00000c,%ebx
		call   _08717c_func
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000004(%esp),%ax
		div    %ebx
		mov    %esi,(%edi)
		mov    %ax,0x000044(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04617c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,0x00001c(%esp)
		mov    %edx,%ecx
		mov    %ebx,0x000010(%esp)
		push   $0x000200
		mov    %edx,%eax
		call   _065918_func
		push   %eax
		call   _086d88_func
		add    $0x000008,%esp
		mov    %ax,0x000024(%esp)
		cwtl   
		mov    %esp,%esi
		cmp    $0xffffffff,%eax
		jne    _0461df_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _065918_func
		push   %eax
		push   $_0a1874_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_0461df_jump:
		mov    0x000022(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _087044_func
		mov    %ax,%dx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    0x000010(%esp),%edx
		mov    %ax,0x000044(%edx)
		and    $0x00ffff,%ebx
		mov    %ebx,%eax
		call   _084f3c_func
		mov    %eax,%edi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000044(%edx),%ax
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x00001c(%esp),%eax
		shl    $0x000002,%edx
		call   _084bac_func
		mov    %eax,0x000014(%esp)
		test   %edi,%edi
		je     _04624c_jump
		test   %eax,%eax
		je     _04624c_jump
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _087081_func
		jmp    _046256_jump

	_04624c_jump:
		mov    $_0a189c_data,%eax
		call   _020150_func

	_046256_jump:
		mov    0x000010(%esp),%edx
		mov    0x000044(%edx),%bx
		xor    %eax,%eax
		test   %bx,%bx
		jbe    _0463e6_jump

	_046269_jump:
		xor    %edx,%edx

	_04626b_jump:
		xor    %ebx,%ebx
		mov    %ax,%bx
		mov    %ebx,%edi
		xor    %ebx,%ebx
		shl    $0x000004,%edi
		mov    %dx,%bx
		add    $0x000003,%edi
		sub    %ebx,%edi
		inc    %edx
		lea    (%esi,%ebx,1),%ebp
		mov    (%ecx,%edi,1),%bl
		mov    %bl,0x000000(%ebp)
		cmp    $0x000004,%dx
		jb     _04626b_jump
		xor    %edx,%edx

	_046291_jump:
		xor    %ebx,%ebx
		mov    %ax,%bx
		mov    %ebx,%edi
		xor    %ebx,%ebx
		shl    $0x000004,%edi
		mov    %dx,%bx
		add    $0x000007,%edi
		sub    %ebx,%edi
		inc    %edx
		lea    (%esi,%ebx,1),%ebp
		mov    (%ecx,%edi,1),%bl
		mov    %bl,0x000004(%ebp)
		cmp    $0x000004,%dx
		jb     _046291_jump
		xor    %edx,%edx

	_0462b7_jump:
		xor    %edi,%edi
		mov    %ax,%di
		xor    %ebx,%ebx
		shl    $0x000004,%edi
		mov    %dx,%bx
		add    $0x00000b,%edi
		sub    %ebx,%edi
		inc    %edx
		lea    (%esi,%ebx,1),%ebp
		mov    (%ecx,%edi,1),%bl
		mov    %bl,0x000008(%ebp)
		cmp    $0x000004,%dx
		jb     _0462b7_jump
		xor    %edx,%edx

	_0462db_jump:
		xor    %edi,%edi
		mov    %ax,%di
		mov    %edi,%ebx
		shl    $0x000004,%ebx
		mov    %ebx,0x000018(%esp)
		mov    0x000018(%esp),%ebp
		xor    %ebx,%ebx
		add    $0x00000f,%ebp
		mov    %dx,%bx
		sub    %ebx,%ebp
		add    %ecx,%ebp
		mov    %ebp,0x000018(%esp)
		lea    (%esi,%ebx,1),%ebp
		mov    0x000018(%esp),%ebx
		inc    %edx
		mov    (%ebx),%bl
		mov    %bl,0x00000c(%ebp)
		cmp    $0x000004,%dx
		jb     _0462db_jump
		mov    (%esp),%ebx
		shr    $0x00000b,%ebx
		and    $0x1fffff,%ebx
		lea    0x000000(,%ebx,8),%edx
		imul   $0x00000c,%edi,%ebx
		add    0x000014(%esp),%ebx
		mov    %edx,(%ebx)
		mov    0x00000c(%esp),%dl
		mov    %dl,0x000004(%ebx)
		mov    0x00000c(%esp),%edx
		shr    $0x00000c,%edx
		and    $0x000007,%edx
		mov    %dx,0x000020(%esp)
		mov    0x000020(%esp),%dl
		and    $0x00000f,%dl
		mov    0x00000a(%ebx),%dh
		and    $0x0000f0,%dh
		mov    %dh,0x00000a(%ebx)
		or     %dl,%dh
		mov    %dh,0x00000a(%ebx)
		mov    0x00000c(%esp),%edi
		shr    $0x000012,%edi
		and    $0x0003ff,%edi
		shl    $0x000003,%edi
		mov    %edi,0x000018(%esp)
		mov    0x000018(%esp),%dl
		mov    %dl,0x000005(%ebx)
		mov    0x000004(%esp),%edi
		shr    $0x00000e,%edi
		and    $0x0003ff,%edi
		mov    %di,0x000020(%esp)
		mov    0x000020(%esp),%dl
		mov    %dl,0x000006(%ebx)
		mov    0x000008(%esp),%edx
		shr    $0x000009,%edx
		and    $0x00000f,%edx
		mov    %edx,0x000018(%esp)
		mov    0x000018(%esp),%dl
		and    $0x00000f,%dl
		mov    0x00000a(%ebx),%dh
		and    $0x00000f,%dh
		mov    %dh,0x00000a(%ebx)
		shl    $0x000004,%dl
		or     %dl,%dh
		mov    %dh,0x00000a(%ebx)
		mov    0x000008(%esp),%edx
		shr    $0x00000d,%edx
		and    $0x000001,%edx
		mov    %edx,0x000018(%esp)
		mov    0x000018(%esp),%dl
		and    $0x000001,%dl
		mov    0x00000b(%ebx),%dh
		and    $0x0000fb,%dh
		mov    %dh,0x00000b(%ebx)
		shl    $0x000002,%dl
		or     %dl,%dh
		mov    %dh,0x00000b(%ebx)
		mov    0x000010(%esp),%edx
		inc    %eax
		cmp    0x000044(%edx),%ax
		jb     _046269_jump

	_0463e6_jump:
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		call   _08717c_func
		mov    %ecx,%eax
		mov    0x000010(%esp),%edx
		call   _0850d4_func
		mov    0x000014(%esp),%eax
		mov    %eax,(%edx)
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04640c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%ebp
		mov    %bx,0x000008(%esp)
		mov    0x000008(%edx),%ax
		and    $0x00003f,%ah
		xor    %edx,%edx
		mov    %ax,%dx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		imul   %edx,%eax
		xor    %ecx,%ecx
		mov    %ebp,%edx
		shl    $0x000002,%eax
		mov    (%edx),%edx
		xor    %esi,%esi
		add    %eax,%edx
		mov    %cx,0x00000c(%esp)
		mov    %edx,(%esp)
		mov    $0x0000ff,%edx
		mov    %cx,0x000014(%esp)
		mov    %dx,0x000018(%esp)
		mov    %dx,0x000010(%esp)
		jmp    _0464f7_jump

	_046462_jump:
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x000003(%edx),%bl
		test   %bl,%bl
		je     _0464f6_jump
		xor    %eax,%eax
		mov    %bl,%al
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%esp),%ebx
		mov    (%ebx),%ebx
		add    %ebx,%eax
		cmpb   $0x000000,0x000004(%eax)
		je     _0464f6_jump
		mov    0x000009(%eax),%bl
		and    $0x00000f,%bl
		xor    %ecx,%ecx
		and    $0x0000ff,%ebx
		mov    0x000001(%edx),%cl
		movzbw 0x000007(%eax),%di
		add    %ecx,%ebx
		add    %ebx,%edi
		mov    0x000009(%eax),%cl
		dec    %edi
		shr    $0x000004,%cl
		and    $0x0000ff,%ecx
		mov    0x000002(%edx),%dl
		and    $0x0000ff,%edx
		mov    0x000008(%eax),%al
		add    %ecx,%edx
		xor    %ah,%ah
		add    %edx,%eax
		mov    0x00000c(%esp),%ecx
		dec    %eax
		cmp    %cx,%di
		jle    _0464d2_jump
		mov    %di,0x00000c(%esp)

	_0464d2_jump:
		cmp    0x000018(%esp),%bx
		jg     _0464de_jump
		mov    %bx,0x000018(%esp)

	_0464de_jump:
		cmp    0x000014(%esp),%ax
		jle    _0464ea_jump
		mov    %ax,0x000014(%esp)

	_0464ea_jump:
		cmp    0x000010(%esp),%dx
		jg     _0464f6_jump
		mov    %dx,0x000010(%esp)

	_0464f6_jump:
		inc    %esi

	_0464f7_jump:
		mov    0x000008(%ebp),%ax
		xor    %edx,%edx
		and    $0x00003f,%ah
		mov    %ax,%dx
		movswl %si,%eax
		cmp    %edx,%eax
		jl     _046462_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000004(%ebp),%edx
		shl    $0x000002,%eax
		mov    0x000018(%esp),%bl
		mov    %bl,(%edx,%eax,1)
		mov    0x000004(%ebp),%edx
		mov    0x000010(%esp),%bl
		mov    %bl,0x000001(%edx,%eax,1)
		mov    0x00000a(%esp),%edx
		mov    0x000016(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		cmp    $0x0000ff,%edx
		jg     _046556_jump
		mov    0x00000c(%esp),%bl
		sub    0x000018(%esp),%bl
		mov    0x000004(%ebp),%edx
		mov    %bl,0x000002(%edx,%eax,1)
		jmp    _04655e_jump

	_046556_jump:
		mov    0x000004(%ebp),%edx
		movb   $0x0000ff,0x000002(%edx,%eax,1)

	_04655e_jump:
		mov    0x000012(%esp),%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		cmp    $0x0000ff,%edx
		jg     _046590_jump
		mov    0x000014(%esp),%bl
		mov    0x000006(%esp),%eax
		mov    0x000010(%esp),%dh
		sar    $0x000010,%eax
		sub    %dh,%bl
		mov    0x000004(%ebp),%edx
		mov    %bl,0x000003(%edx,%eax,4)
		jmp    _04659f_jump

	_046590_jump:
		mov    0x000006(%esp),%eax
		mov    0x000004(%ebp),%edx
		sar    $0x000010,%eax
		movb   $0x0000ff,0x000003(%edx,%eax,4)

	_04659f_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0465a8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x00006e(%edi),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ecx
		shl    $0x000002,%eax
		push   $0x000200
		add    %eax,%ecx
		mov    %edx,%eax
		call   _065918_func
		push   %eax
		call   _086d88_func
		add    $0x000008,%esp
		mov    %ax,0x000004(%esp)
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _046618_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _065918_func
		push   %eax
		push   $_0a18c8_data
		push   %ebx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		call   _020150_func
		mov    %ebx,%eax
		call   _0850d4_func

	_046618_jump:
		mov    0x000002(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _087044_func
		mov    %ax,%bx
		mov    %eax,0x000008(%esp)
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _084bac_func
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _0466ef_jump
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _087081_func
		cmpw   $0x00003c,_0a5252_data
		jle    _046660_jump
		mov    $_0a18f0_data,%eax
		call   _020150_func

	_046660_jump:
		cmpb   $0x000096,0x00006e(%edi)
		jbe    _046670_jump
		mov    $_0a192c_data,%eax
		call   _020150_func

	_046670_jump:
		mov    _0a5250_data,%eax
		sar    $0x000010,%eax
		mov    %eax,_0aa408_data
		xor    %eax,%eax
		mov    _0aa40c_data,%edx
		mov    0x00006e(%edi),%al
		cmp    %edx,%eax
		jle    _046691_jump
		mov    %eax,_0aa40c_data

	_046691_jump:
		xor    %eax,%eax
		mov    _0a5250_data,%edx
		mov    0x00006e(%edi),%al
		sar    $0x000010,%edx
		lea    0x000000(,%eax,2),%ebx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%edx
		mov    %dx,_0b96c8_data(%ebx,%eax,1)
		mov    (%esp),%eax
		mov    0x000008(%ecx),%dx
		mov    (%eax),%ax
		xor    %dl,%dl
		mov    %ax,0x00000a(%ecx)
		mov    (%esp),%eax
		and    $0x0000c0,%dh
		mov    0x000002(%eax),%ax
		or     %eax,%edx
		mov    (%esp),%eax
		mov    %dx,0x000008(%ecx)
		add    $0x000004,%eax
		mov    %eax,(%ecx)
		jmp    _0466f9_jump

	_0466ef_jump:
		mov    $_0a1960_data,%eax
		call   _020150_func

	_0466f9_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		call   _08717c_func
		mov    0x00000a(%ecx),%dx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _084bac_func
		xor    %esi,%esi
		mov    %eax,0x000004(%ecx)
		jmp    _046726_jump

	_04671c_jump:
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _04640c_func
		inc    %esi

	_046726_jump:
		xor    %eax,%eax
		movswl %si,%ebx
		mov    0x00000a(%ecx),%ax
		cmp    %eax,%ebx
		jl     _04671c_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_04673c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		mov    %ebx,%esi
		push   $0x000200
		mov    %edx,%eax
		call   _065918_func
		push   %eax
		call   _086d88_func
		add    $0x000008,%esp
		movswl %ax,%edi
		mov    %ax,(%esp)
		cmp    $0xffffffff,%edi
		jne    _04679c_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _065918_func
		push   %eax
		push   $_0a198c_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func
		jmp    _0467db_jump

	_04679c_jump:
		mov    %edi,%eax
		call   _087044_func
		mov    %eax,%ecx
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _084bac_func
		mov    %eax,0x000008(%ebx)
		test   %eax,%eax
		je     _0467c5_jump
		mov    %eax,%edx
		mov    %ecx,%ebx
		mov    %edi,%eax
		call   _087081_func
		mov    %ecx,0x000028(%esi)
		jmp    _0467cf_jump

	_0467c5_jump:
		mov    $_0a19b4_data,%eax
		call   _020150_func

	_0467cf_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _08717c_func

	_0467db_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0467e4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000094,%esp
		mov    %eax,%ebp
		mov    %edx,%esi
		mov    %ecx,%edi
		xor    %ecx,%ecx
		push   $0x000200
		mov    %bl,%cl
		mov    %esi,%eax
		mov    %ecx,%edx
		call   _065d88_func
		push   %eax
		call   _086d88_func
		add    $0x000008,%esp
		mov    %ax,0x00008c(%esp)
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _04684e_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %ecx,%edx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _065d88_func
		push   %eax
		push   $_0a19e0_data
		push   %ebx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		call   _020150_func
		mov    %ebx,%eax
		call   _0850d4_func

	_04684e_jump:
		mov    0x00008a(%esp),%ecx
		sar    $0x000010,%ecx
		mov    $0x000080,%ebx
		mov    %ecx,%eax
		mov    %esp,%edx
		call   _087044_func
		mov    %eax,%esi
		mov    %ecx,%eax
		call   _087081_func
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		inc    %eax
		mov    %ax,(%edi)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x0000a4(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x0000a4(%esp),%ebx
		mov    0x000042(%esp),%eax
		xor    %edx,%edx
		mov    %eax,0x000088(%esp)
		xor    %eax,%eax
		mov    (%ebx),%dx
		mov    (%edi),%ax
		imul   %eax,%edx
		mov    %ebp,%eax
		lea    -0x000080(%esi),%ebx
		call   _084bac_func
		mov    %eax,%ebp
		mov    %ebx,%eax
		call   _084f3c_func
		mov    %eax,%esi
		mov    %eax,0x000084(%esp)
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _087081_func
		mov    %ecx,%eax
		mov    %ebp,%edx
		call   _08717c_func
		test   %edx,%edx
		je     _0469cb_jump
		test   %esi,%esi
		je     _0469cb_jump
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    %ebx,0x000080(%esp)
		jmp    _04699d_jump

	_0468fb_jump:
		xor    %eax,%eax

	_0468fd_jump:
		mov    0x000080(%esp),%edx
		mov    0x000084(%esp),%ebx
		lea    0x000001(%edx),%ecx
		add    %ebx,%edx
		mov    (%edx),%dl
		mov    %dl,0x000090(%esp)
		and    $0x0000c0,%dl
		mov    %ecx,0x000080(%esp)
		cmp    $0x0000c0,%dl
		jne    _046971_jump
		mov    0x000090(%esp),%dl
		and    $0x00003f,%dl
		mov    %ecx,%ebx
		inc    %ecx
		mov    %ecx,0x000080(%esp)
		add    0x000084(%esp),%ebx
		mov    (%ebx),%bl
		and    $0x0000ff,%edx
		mov    %bl,0x000090(%esp)

	_046952_jump:
		dec    %edx
		cmp    $0xffffffff,%edx
		je     _04698a_jump
		xor    %ebx,%ebx
		mov    (%edi),%bx
		imul   %esi,%ebx
		mov    %eax,%ecx
		add    %ecx,%ebx
		mov    0x000090(%esp),%cl
		inc    %eax
		mov    %cl,(%ebx,%ebp,1)
		jmp    _046952_jump

	_046971_jump:
		xor    %edx,%edx
		mov    (%edi),%dx
		mov    %edx,%ebx
		imul   %esi,%ebx
		mov    %eax,%edx
		add    %ebx,%edx
		mov    0x000090(%esp),%bl
		inc    %eax
		mov    %bl,(%edx,%ebp,1)

	_04698a_jump:
		xor    %edx,%edx
		mov    0x000088(%esp),%dx
		cmp    %edx,%eax
		jb     _0468fd_jump
		inc    %esi

	_04699d_jump:
		mov    0x0000a4(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		cmp    %eax,%esi
		jb     _0468fb_jump
		mov    0x000084(%esp),%eax
		call   _0850d4_func
		mov    %ebp,%eax
		add    $0x000094,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0469cb_jump:
		mov    $_0a1a04_data,%eax
		call   _020150_func
		mov    %ebp,%eax
		add    $0x000094,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_046a84_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%esi
		movzbl %dl,%edi
		push   $0x000200
		mov    %edi,%edx
		call   _065d88_func
		push   %eax
		call   _086d88_func
		add    $0x000008,%esp
		mov    %ax,(%esp)
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _046ae2_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %edi,%edx
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   _065d88_func
		push   %eax
		push   $_0a1a30_data
		push   %ebx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		call   _020150_func
		mov    %ebx,%eax
		call   _0850d4_func

	_046ae2_jump:
		mov    -0x000002(%esp),%ecx
		mov    $0x000002,%ebx
		sar    $0x000010,%ecx
		mov    $0xfffffd00,%edx
		mov    %ecx,%eax
		call   _08744e_func
		mov    $0x000300,%ebx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _087081_func
		mov    %ecx,%eax
		call   _08717c_func
		mov    %esi,%ebx
		lea    0x000300(%esi),%ecx

	_046b17_jump:
		xor    %edx,%edx
		mov    (%ebx),%dl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		inc    %ebx
		mov    %al,-0x000001(%ebx)
		cmp    %ecx,%ebx
		jne    _046b17_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_046b38_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		mov    %bl,0x00000c(%esp)
		mov    $_0c2e5a_data,%edi
		mov    %edx,%esi
		push   %edi

	_046b50_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _046b68_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _046b50_jump

	_046b68_jump:
		pop    %edi
		mov    _0a7c9d_data,%ah
		test   %ah,%ah
		jne    _046bc2_jump
		push   $_0c3030_data
		mov    $_0c3032_data,%ecx
		xor    %ebx,%ebx
		mov    %ebp,%eax
		mov    0x000010(%esp),%bl
		call   _0467e4_func
		mov    %eax,_0c0eb8_data
		mov    %eax,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    _0c3030_data,%cx
		mov    _0c3032_data,%bx
		mov    %ebp,%eax
		call   _061208_func
		mov    $_0ae6d8_data,%edx
		mov    %eax,_0c0fd4_data
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   _0614d0_func
		jmp    _046c6f_jump

	_046bc2_jump:
		cmp    $0x000001,%ah
		jne    _046bf3_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		xor    %ebx,%ebx
		push   %eax
		mov    0x000010(%esp),%bl
		mov    %ebp,%eax
		call   _0467e4_func
		mov    %eax,_0c0fd4_data
		xor    %edx,%edx
		mov    $0x0493e0,%eax
		call   _03bdc4_func
		jmp    _046c6f_jump

	_046bf3_jump:
		cmp    $0x0000ff,%ah
		jne    _046c6f_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		xor    %ebx,%ebx
		push   %eax
		mov    0x000010(%esp),%bl
		mov    %ebp,%eax
		call   _0467e4_func
		mov    %eax,_0c0fd4_data
		xor    %edx,%edx
		mov    $0x0493e0,%eax
		call   _03bdc4_func
		xor    %eax,%eax

	_046c21_jump:
		add    $0x000004,%eax
		mov    _0b1e04_data(%eax),%edx
		mov    %edx,_0d9a28_data(%eax)
		cmp    $0x0012c0,%eax
		jne    _046c21_jump
		mov    0x000008(%esp),%eax
		mov    _0c0fd4_data,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    %ax,_0c3032_data
		mov    0x000004(%esp),%eax
		mov    0x000008(%esp),%bx
		mov    %ax,_0c3030_data
		mov    %ax,%cx
		mov    %ebp,%eax
		mov    %edx,_0c0eb8_data
		call   _061208_func
		mov    %eax,_0c0fd4_data

	_046c6f_jump:
		mov    $_0b4328_data,%ebx
		mov    (%esp),%eax
		xor    %edx,%edx
		mov    $0x000300,%ecx
		mov    0x00000c(%esp),%dl
		mov    $_0b4328_data,%esi
		call   _046a84_func
		xor    %bl,%bl
		mov    $_0b3d28_data,%edi
		mov    %bl,_0b4328_data
		mov    %bl,_0b4329_data
		mov    %bl,_0b432a_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_046d50_switch:
		.long   _046e42_case
		.long   _046e66_case
		.long   _046e8a_case
		.long   _046eab_case
		.long   _046ec7_case
		.long   _046ee3_case




_046d68_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebp
		mov    %edx,%esi
		push   $0x000200
		and    $0x0000ff,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _065d0c_func
		push   %eax
		call   _086d88_func
		movswl %ax,%edi
		add    $0x000008,%esp
		cmp    $0xffffffff,%edi
		jne    _046dcf_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %ebx,%edx
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _065d0c_func
		push   %eax
		push   $_0a1a74_data
		push   %ecx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %ecx,%eax
		call   _020150_func
		mov    %ecx,%eax
		call   _0850d4_func
		jmp    _046f81_jump

	_046dcf_jump:
		mov    %edi,%eax
		call   _087044_func
		mov    %eax,%ebx
		call   _084f3c_func
		mov    %eax,%esi
		mov    %eax,%ecx
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _046f77_jump
		mov    %eax,%edx
		mov    %edi,%eax
		call   _087081_func
		mov    %edi,%eax
		call   _08717c_func
		mov    (%esi),%ah
		cmp    $0x00004d,%ah
		jne    _046e0b_jump
		cmp    0x000001(%esi),%ah
		jne    _046e0b_jump
		lea    0x000002(%esi),%ecx

	_046e0b_jump:
		mov    (%ecx),%ax
		mov    %ax,_0c1124_data
		mov    0x000002(%ecx),%ax
		mov    %ax,_0c1126_data
		mov    _0c3104_data,%ax
		add    $0x000002,%ecx
		dec    %eax
		add    $0x000002,%ecx
		cmp    $0x000005,%ax
		ja     _046eff_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_046d50_switch(,%eax,4)

	_046e42_case:
		cmpw   $0x0000fa,_0c1124_data
		jne    _046e5c_jump
		cmpw   $0x000098,_0c1126_data
		je     _046f09_jump

	_046e5c_jump:
		mov    $_0a1a98_data,%eax
		jmp    _046f04_jump

	_046e66_case:
		cmpw   $0x0000ab,_0c1124_data
		jne    _046e80_jump
		cmpw   $0x0000fa,_0c1126_data
		je     _046f09_jump

	_046e80_jump:
		mov    $_0a1ab4_data,%eax
		jmp    _046f04_jump

	_046e8a_case:
		cmpw   $0x0000fa,_0c1124_data
		jne    _046ea4_jump
		cmpw   $0x00008c,_0c1126_data
		je     _046f09_jump

	_046ea4_jump:
		mov    $_0a1acc_data,%eax
		jmp    _046f04_jump

	_046eab_case:
		mov    _0c1124_data,%ax
		cmp    $0x000096,%ax
		jne    _046ec0_jump
		cmp    _0c1126_data,%ax
		je     _046f09_jump

	_046ec0_jump:
		mov    $_0a1ae8_data,%eax
		jmp    _046f04_jump

	_046ec7_case:
		cmpw   $0x000190,_0c1124_data
		jne    _046edc_jump
		cmpw   $0x00003c,_0c1126_data
		je     _046f09_jump

	_046edc_jump:
		mov    $_0a1b00_data,%eax
		jmp    _046f04_jump

	_046ee3_case:
		cmpw   $0x00015e,_0c1124_data
		jne    _046ef8_jump
		cmpw   $0x000046,_0c1126_data
		je     _046f09_jump

	_046ef8_jump:
		mov    $_0a1b18_data,%eax
		jmp    _046f04_jump

	_046eff_jump:
		mov    $_0a1b30_data,%eax

	_046f04_jump:
		call   _020150_func

	_046f09_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c1126_data,%dx
		mov    _0c1124_data,%ax
		imul   %edx,%eax
		mov    %eax,_0c1128_data
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    %ebp,%eax
		call   _084bac_func
		mov    _0c1128_data,%ebx
		mov    %eax,%esi
		xor    %edx,%edx
		test   %ebx,%ebx
		jbe    _046f61_jump

	_046f41_jump:
		mov    _0c1128_data,%edi
		add    $0x000006,%eax
		mov    (%ecx),%bx
		add    $0x000002,%ecx
		mov    %bx,-0x000006(%eax)
		inc    %edx
		mov    (%ecx),%bl
		add    $0x000002,%ecx
		mov    %bl,-0x000004(%eax)
		cmp    %edi,%edx
		jb     _046f41_jump

	_046f61_jump:
		mov    (%esp),%eax
		call   _0850d4_func
		mov    %esi,_0c112c_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_046f77_jump:
		mov    $_0a1b44_data,%eax
		call   _020150_func

	_046f81_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0470cc_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cmpb   $0x00002c,(%eax)
		je     _047108_jump

	_0470d5_jump:
		mov    (%eax),%cl
		cmp    $0x00002a,%cl
		je     _047108_jump
		lea    0x000001(%eax),%edx
		cmp    $0x000020,%cl
		jbe    _047101_jump
		mov    %cl,%al
		cmp    $0x00002f,%cl
		jne    _0470f9_jump
		mov    %edx,%eax

	_0470ed_jump:
		mov    %eax,%edx
		mov    (%edx),%ch
		inc    %eax
		cmp    $0x00002f,%ch
		jne    _0470ed_jump
		jmp    _047103_jump

	_0470f9_jump:
		inc    %ebx
		mov    %edx,%eax
		mov    %cl,-0x000001(%ebx)
		jmp    _047103_jump

	_047101_jump:
		mov    %edx,%eax

	_047103_jump:
		cmpb   $0x00002c,(%eax)
		jne    _0470d5_jump

	_047108_jump:
		cmpb   $0x00002a,(%eax)
		jne    _047112_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_047112_jump:
		inc    %eax
		movb   $0x000000,(%ebx)
		pop    %ecx
		pop    %ebx
		ret    



_04711c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,0x000014(%esp)
		mov    %edx,0x000008(%esp)
		mov    %ebx,0x000010(%esp)
		mov    %ecx,0x000004(%esp)
		mov    $0x000064,%eax
		call   _084f3c_func
		push   $0x000200
		mov    %eax,0x000010(%esp)
		mov    %ecx,%eax
		call   _065818_func
		push   %eax
		call   _086d88_func
		movswl %ax,%ecx
		add    $0x000008,%esp
		cmp    $0xffffffff,%ecx
		jne    _04718f_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    0x000004(%esp),%eax
		call   _065818_func
		push   %eax
		push   $_0a1bac_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		jmp    _04748b_jump

	_04718f_jump:
		mov    %ecx,%eax
		call   _087044_func
		mov    %eax,%ebx
		call   _084f3c_func
		mov    %eax,%edx
		mov    %eax,(%esp)
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %edx,0x000018(%esp)
		mov    %eax,%ebp
		test   %edx,%edx
		je     _047490_jump
		test   %eax,%eax
		je     _047490_jump
		mov    %ecx,%eax
		call   _087081_func
		mov    %ecx,%eax
		call   _08717c_func
		mov    0x000010(%esp),%eax
		movb   $0x000000,0x00006e(%eax)
		mov    0x000004(%esp),%eax
		mov    $_0a1bd4_data,%edx
		call   _065818_func
		call   _047698_func
		mov    %eax,0x00001c(%esp)
		test   %ax,%ax
		je     _047219_jump
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000014(%esp),%eax
		call   _084bac_func
		mov    0x000010(%esp),%edx
		mov    %eax,0x000004(%edx)
		jmp    _047224_jump

	_047219_jump:
		mov    0x000010(%esp),%eax
		movl   $0x000000,0x000004(%eax)

	_047224_jump:
		xor    %edx,%edx
		mov    %edx,0x000020(%esp)

	_04722a_jump:
		mov    0x000018(%esp),%eax
		mov    %ebp,%edx
		call   _0470cc_func
		mov    %eax,%ebx
		mov    %eax,0x000018(%esp)
		test   %eax,%eax
		je     _047427_jump
		mov    $_0a1bd4_data,%edx
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _0472f6_jump
		mov    0x00000c(%esp),%edi
		mov    %ebp,%esi
		push   %edi

	_04725e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _047276_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04725e_jump

	_047276_jump:
		pop    %edi
		mov    %ebp,%edx
		mov    %ebx,%eax
		call   _0470cc_func
		mov    0x000010(%esp),%edx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006e(%edx),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%edx),%edx
		mov    0x000008(%edx,%eax,1),%dx
		mov    %ebp,%eax
		and    $0x00003f,%dh
		call   _086cfe_func
		shl    $0x00000e,%eax
		mov    %edx,%ecx
		mov    0x000010(%esp),%edx
		or     %eax,%ecx
		xor    %eax,%eax
		mov    0x00006e(%edx),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%edx),%edx
		mov    %cx,0x000008(%edx,%eax,1)
		mov    %ebp,%edx
		mov    %ebx,%eax
		mov    $0x000001,%ecx
		call   _0470cc_func
		mov    0x000010(%esp),%ebx
		mov    %eax,0x000018(%esp)
		mov    %edi,%edx
		mov    0x000014(%esp),%eax
		call   _0465a8_func
		mov    0x000010(%esp),%eax
		mov    0x000020(%esp),%ecx
		mov    0x00006e(%eax),%dl
		inc    %ecx
		inc    %dl
		mov    %ecx,0x000020(%esp)
		mov    %dl,0x00006e(%eax)
		jmp    _04722a_jump

	_0472f6_jump:
		mov    $_0a1bdc_data,%edx
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _04732a_jump

	_047306_jump:
		mov    0x000018(%esp),%eax
		mov    %ebp,%edx
		call   _0470cc_func
		mov    $_0a1bdc_data,%edx
		mov    %eax,0x000018(%esp)
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _047306_jump
		jmp    _04722a_jump

	_04732a_jump:
		mov    $_0a1be8_data,%edx
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _04736e_jump
		mov    0x00000c(%esp),%edi
		mov    %ebp,%esi
		mov    0x000010(%esp),%ebx
		push   %edi

	_047345_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04735d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047345_jump

	_04735d_jump:
		pop    %edi
		mov    0x000014(%esp),%eax
		mov    %edi,%edx
		call   _0460bc_func
		jmp    _04722a_jump

	_04736e_jump:
		mov    $_0a1bf0_data,%edx
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _0473b2_jump
		mov    0x00000c(%esp),%edi
		mov    %ebp,%esi
		mov    0x000010(%esp),%ebx
		push   %edi

	_047389_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0473a1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047389_jump

	_0473a1_jump:
		pop    %edi
		mov    0x000014(%esp),%eax
		mov    %edi,%edx
		call   _04617c_func
		jmp    _04722a_jump

	_0473b2_jump:
		mov    $_0a1bf8_data,%edx
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _0473f6_jump
		mov    0x00000c(%esp),%edi
		mov    %ebp,%esi
		mov    0x000010(%esp),%ebx
		push   %edi

	_0473cd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0473e5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0473cd_jump

	_0473e5_jump:
		pop    %edi
		mov    0x000008(%esp),%eax
		mov    %edi,%edx
		call   _04673c_func
		jmp    _04722a_jump

	_0473f6_jump:
		mov    $_0a1c00_data,%edx
		mov    %ebp,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _04722a_jump
		mov    0x000014(%esp),%eax
		xor    %ebx,%ebx
		mov    %ebp,%edx
		mov    0x000034(%esp),%bl
		call   _04602c_func
		mov    0x000010(%esp),%edx
		mov    %eax,0x00000c(%edx)
		jmp    _04722a_jump

	_047427_jump:
		mov    0x00001c(%esp),%eax
		cmp    0x000020(%esp),%ax
		je     _04745f_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%ebx
		call   _084f3c_func
		push   %ebx
		push   $_0a1c08_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_04745f_jump:
		mov    0x000010(%esp),%eax
		mov    0x000010(%esp),%edx
		mov    0x00006e(%eax),%al
		movb   $0x000000,0x00006e(%edx)
		mov    %al,0x000084(%edx)
		mov    0x000004(%esp),%edx
		mov    0x000014(%esp),%eax
		call   _045978_func
		mov    (%esp),%eax
		call   _0850d4_func
		mov    %ebp,%eax

	_04748b_jump:
		call   _0850d4_func

	_047490_jump:
		mov    0x00000c(%esp),%eax
		call   _0850d4_func
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_047698_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%ebx
		mov    %edx,%ebp
		push   $0x000200
		push   %eax
		call   _086d88_func
		add    $0x000008,%esp
		cwtl   
		xor    %edi,%edi
		mov    %eax,0x000004(%esp)
		cmp    $0xffffffff,%eax
		jne    _0476e4_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		push   %ebx
		push   $_0a1ca4_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		jmp    _047742_jump

	_0476e4_jump:
		call   _087044_func
		mov    %eax,%ebx
		call   _084f3c_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %edx,(%esp)
		mov    %eax,%ecx
		test   %edx,%edx
		je     _047747_jump
		mov    0x000004(%esp),%eax
		call   _087081_func
		mov    0x000004(%esp),%eax
		call   _08717c_func

	_047719_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _047738_jump
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _047719_jump
		inc    %edi
		jmp    _047719_jump

	_047738_jump:
		mov    (%esp),%eax
		call   _0850d4_func
		mov    %ecx,%eax

	_047742_jump:
		call   _0850d4_func

	_047747_jump:
		mov    %edi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_047754_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    _0a5252_data,%dx
		xor    %esi,%esi
		test   %dx,%dx
		jg     _047777_jump
		jmp    _04778c_jump

	_04776b_jump:
		mov    _0a5252_data,%ax
		inc    %esi
		cmp    %ax,%si
		jge    _04778c_jump

	_047777_jump:
		movswl %si,%eax
		mov    %ebx,%edx
		mov    _0bf130_data(,%eax,4),%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _04776b_jump

	_04778c_jump:
		cmp    _0a5252_data,%si
		jne    _0477bf_jump
		xor    %eax,%eax
		mov    _0a5250_data,%edx
		mov    %cl,%al
		sar    $0x000010,%edx
		push   %eax
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		shl    $0x000003,%eax
		mov    %ebx,%ecx
		add    $_0d7a4c_data,%eax
		mov    %ebp,%edx
		mov    %eax,%ebx
		mov    %edi,%eax
		call   _04711c_func

	_0477bf_jump:
		movswl %si,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		shl    $0x000003,%eax
		add    $_0d7a4c_data,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0477d8_func:
		push   %esi
		mov    %ebx,%esi
		mov    _0a5252_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jg     _0477f8_jump
		jmp    _04780d_jump

	_0477eb_jump:
		mov    _0a5252_data,%cx
		inc    %ebx
		cmp    %cx,%bx
		jge    _04780d_jump

	_0477f8_jump:
		movswl %bx,%eax
		mov    %esi,%edx
		mov    _0bf130_data(,%eax,4),%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _0477eb_jump

	_04780d_jump:
		cmp    _0a5252_data,%bx
		jne    _04784a_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    _0c3150_data,%eax
		sar    $0x000010,%eax
		push   %eax
		push   %esi
		push   $_0a1cc8_data
		push   %edx
		call   _0852d9_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func
		jmp    _047854_jump

	_04784a_jump:
		movswl %bx,%eax
		movb   $0x000001,_0dacec_data(%eax)

	_047854_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		shl    $0x000003,%eax
		add    $_0d7a4c_data,%eax
		pop    %esi
		ret    



_047868_func:
		push   %ecx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%ecx
		test   %edx,%edx
		jne    _047875_jump
		mov    %esp,%edx

	_047875_jump:
		xor    %eax,%eax

	_047877_jump:
		movswl %ax,%esi
		inc    %eax
		movw   $0x000000,(%edx,%esi,2)
		cmp    $0x000006,%ax
		jl     _047877_jump
		movw   $0x000000,(%ebx)
		movw   $0x00ffff,0x000046(%ecx)

	_047892_jump:
		mov    %ecx,%eax
		call   _065294_func
		mov    %al,0x00000c(%esp)
		test   %al,%al
		jne    _0478f6_jump
		mov    0x000074(%ecx),%al
		cmp    $0x00000c,%al
		jb     _0478c6_jump
		jbe    _0478dd_jump
		cmp    $0x00000f,%al
		jb     _0478c0_jump
		cmp    $0x000010,%al
		jbe    _0478e9_jump
		cmp    $0x00001f,%al
		jb     _0478f6_jump
		cmp    $0x000020,%al
		jbe    _0478ef_jump
		jmp    _0478f6_jump

	_0478c0_jump:
		cmp    $0x00000d,%al
		je     _0478e3_jump
		jmp    _0478f6_jump

	_0478c6_jump:
		cmp    $0x000006,%al
		jb     _0478f6_jump
		jbe    _0478d2_jump
		cmp    $0x00000b,%al
		je     _0478d8_jump
		jmp    _0478f6_jump

	_0478d2_jump:
		incw   0x000002(%edx)
		jmp    _0478f3_jump

	_0478d8_jump:
		incw   (%edx)
		jmp    _0478f6_jump

	_0478dd_jump:
		incw   0x000004(%edx)
		jmp    _0478f3_jump

	_0478e3_jump:
		incw   0x000008(%edx)
		jmp    _0478f3_jump

	_0478e9_jump:
		incw   0x000006(%edx)
		jmp    _0478f3_jump

	_0478ef_jump:
		incw   0x00000a(%edx)

	_0478f3_jump:
		incw   (%ebx)

	_0478f6_jump:
		cmpb   $0x000000,0x00000c(%esp)
		je     _047892_jump
		add    $0x000010,%esp
		pop    %esi
		pop    %ecx
		ret    



_047904_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,0x000004(%esp)
		mov    %ecx,%ebp
		movw   $0x00ffff,0x000046(%eax)
		xor    %edx,%edx

	_04791d_jump:
		mov    %esi,%eax
		call   _065294_func
		mov    %al,%ch
		test   %al,%al
		jne    _047957_jump
		cmpb   $0x00000b,0x000074(%esi)
		jne    _047957_jump
		mov    (%esp),%ebx
		mov    (%ebx),%ebx
		movswl %dx,%eax
		mov    0x000074(%esi),%cl
		mov    %cl,(%ebx,%eax,1)
		mov    0x000004(%esp),%ebx
		mov    (%ebx),%ebx
		mov    0x000048(%esi),%cl
		mov    %cl,(%ebx,%eax,1)
		mov    0x000046(%esi),%di
		mov    0x000000(%ebp),%ebx
		dec    %edi
		inc    %edx
		mov    %di,(%ebx,%eax,2)

	_047957_jump:
		test   %ch,%ch
		je     _04791d_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_047964_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		mov    (%ecx),%eax
		xor    %bl,%bl
		mov    (%eax),%cx
		xor    %edx,%edx
		cmp    %cx,%si
		jle    _04799d_jump
		movswl 0x000000(%ebp),%ecx
		add    %ecx,%ecx
		add    %ecx,%eax
		cmp    -0x000002(%eax),%si
		jge    _04799d_jump

	_04798f_jump:
		movswl %dx,%ecx
		mov    (%edi),%eax
		cmp    (%eax,%ecx,2),%si
		jle    _04799d_jump
		inc    %edx
		jmp    _04798f_jump

	_04799d_jump:
		mov    $0xffffffff,%esi
		mov    %edx,%eax
		mov    %esi,0x000004(%esp)
		jmp    _0479dc_jump

	_0479aa_jump:
		mov    (%esp),%esi
		movswl %ax,%ecx
		mov    (%esi),%esi
		mov    (%ecx,%esi,1),%bh
		cmp    0x000018(%esp),%bh
		jne    _0479ce_jump
		lea    0x000000(,%ecx,2),%eax
		mov    (%edi),%ecx
		mov    (%ecx,%eax,1),%ax
		mov    %eax,0x000004(%esp)
		jmp    _0479e5_jump

	_0479ce_jump:
		inc    %eax
		cmp    0x000000(%ebp),%ax
		jl     _0479db_jump
		mov    $0x000001,%bl
		xor    %eax,%eax
		jmp    _0479dc_jump

	_0479db_jump:
		cwtl   

	_0479dc_jump:
		cmp    %dx,%ax
		jne    _0479aa_jump
		test   %bl,%bl
		je     _0479aa_jump

	_0479e5_jump:
		mov    0x000004(%esp),%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_0479f4_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %ecx,%edi
		mov    %ebx,%eax
		mov    0x000010(%esp),%ebx
		cwtl   
		shl    $0x000002,%eax
		mov    0x000046(%esi),%cx
		add    %edx,%eax
		mov    %ecx,(%esp)
		mov    (%eax),%eax
		movswl %di,%edx
		mov    0x000074(%esi),%ch
		mov    (%eax,%edx,2),%ax
		mov    0x000048(%esi),%cl
		inc    %eax
		xor    %edx,%edx
		mov    %ax,0x000046(%esi)
		test   %bx,%bx
		jle    _047a38_jump

	_047a2b_jump:
		mov    %esi,%eax
		inc    %edx
		call   _065294_func
		cmp    %bx,%dx
		jl     _047a2b_jump

	_047a38_jump:
		mov    (%esp),%eax
		mov    0x000046(%esi),%dx
		mov    %ax,0x000046(%esi)
		xor    %eax,%eax
		mov    %ch,0x000074(%esi)
		mov    %cl,%al
		mov    %ax,0x000048(%esi)
		mov    %edx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_047a58_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    0x000038(%esp),%ebp
		mov    %eax,%edi
		mov    %edx,0x000010(%esp)
		mov    %ebx,0x000014(%esp)
		mov    %ecx,0x000018(%esp)
		xor    %edx,%edx

	_047a72_jump:
		movswl %dx,%eax
		xor    %ebx,%ebx
		inc    %edx
		mov    %bx,(%esp,%eax,2)
		cmp    $0x000006,%dx
		jl     _047a72_jump
		mov    0x000018(%esp),%ebx
		mov    0x000014(%esp),%edx
		mov    %ebp,%ecx
		mov    %edi,%eax
		call   _047904_func
		xor    %ecx,%ecx
		movw   $0x00ffff,0x000046(%edi)
		mov    %cx,0x000020(%esp)

	_047aa0_jump:
		mov    %edi,%eax
		call   _065294_func
		mov    %al,0x000024(%esp)
		test   %al,%al
		jne    _047c02_jump
		mov    0x000074(%edi),%al
		cmp    $0x00000c,%al
		jb     _047ad4_jump
		jbe    _047ae9_jump
		cmp    $0x00000f,%al
		jb     _047ace_jump
		cmp    $0x000010,%al
		jbe    _047af7_jump
		cmp    $0x00001f,%al
		jb     _047b05_jump
		cmp    $0x000020,%al
		jbe    _047afe_jump
		jmp    _047b05_jump

	_047ace_jump:
		cmp    $0x00000d,%al
		je     _047af0_jump
		jmp    _047b05_jump

	_047ad4_jump:
		cmp    $0x000006,%al
		jb     _047b05_jump
		jbe    _047ae2_jump
		cmp    $0x00000b,%al
		jne    _047b05_jump
		xor    %esi,%esi
		jmp    _047b0a_jump

	_047ae2_jump:
		mov    $0x000001,%esi
		jmp    _047b0a_jump

	_047ae9_jump:
		mov    $0x000002,%esi
		jmp    _047b0a_jump

	_047af0_jump:
		mov    $0x000004,%esi
		jmp    _047b0a_jump

	_047af7_jump:
		mov    $0x000003,%esi
		jmp    _047b0a_jump

	_047afe_jump:
		mov    $0x000005,%esi
		jmp    _047b0a_jump

	_047b05_jump:
		mov    $0xffffffff,%esi

	_047b0a_jump:
		mov    $0x000005,%ecx
		movswl %si,%edx
		xor    %ebx,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _047b25_jump
		cmp    %ecx,%eax
		jg     _047b25_jump
		mov    $0x000001,%eax
		jmp    _047b27_jump

	_047b25_jump:
		xor    %eax,%eax

	_047b27_jump:
		test   %eax,%eax
		je     _047c02_jump
		test   %si,%si
		je     _047c02_jump
		mov    0x000046(%edi),%ax
		dec    %eax
		mov    %eax,0x00001c(%esp)
		lea    0x000000(,%edx,2),%eax
		mov    -0x000002(%esp,%eax,1),%ebx
		sar    $0x000010,%ebx
		add    %ebx,%ebx
		mov    %ebx,0x00000c(%esp)
		shl    $0x000002,%edx
		mov    0x00000c(%esp),%ecx
		mov    (%edx,%ebp,1),%ebx
		add    %ecx,%ebx
		mov    0x00001c(%esp),%ecx
		mov    %cx,(%ebx)
		mov    -0x000002(%esp,%eax,1),%ecx
		mov    0x000014(%esp),%ebx
		sar    $0x000010,%ecx
		mov    (%edx,%ebx,1),%ebx
		add    %ebx,%ecx
		mov    0x000074(%edi),%bl
		mov    %bl,(%ecx)
		mov    0x000018(%esp),%ebx
		add    %edx,%ebx
		mov    -0x000002(%esp,%eax,1),%edx
		sar    $0x000010,%edx
		mov    (%ebx),%eax
		add    %edx,%eax
		mov    0x000020(%esp),%dl
		mov    %dl,(%eax)
		cmp    $0x000001,%si
		je     _047ba0_jump
		cmp    $0x000005,%si
		jne    _047bca_jump

	_047ba0_jump:
		movswl %si,%ebx
		mov    0x000046(%edi),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		mov    -0x000002(%esp,%ebx,2),%ecx
		push   %eax
		sar    $0x000010,%ecx
		mov    %edi,%eax
		call   _0479f4_func
		mov    0x00001e(%esp),%edx
		mov    0x000014(%edi),%ebx
		sar    $0x000010,%edx
		mov    %ax,(%ebx,%edx,2)
		jmp    _047bf6_jump

	_047bca_jump:
		xor    %eax,%eax
		mov    0x000048(%edi),%al
		mov    0x000018(%esp),%ebx
		push   %eax
		mov    0x000046(%edi),%ax
		mov    0x000014(%esp),%edx
		dec    %eax
		mov    %ebp,%ecx
		cwtl   
		call   _047964_func
		mov    %eax,%ebx
		mov    0x00001e(%esp),%eax
		mov    0x000014(%edi),%edx
		sar    $0x000010,%eax
		inc    %ebx
		mov    %bx,(%edx,%eax,2)

	_047bf6_jump:
		movswl %si,%eax
		incw   (%esp,%eax,2)
		incw   0x000020(%esp)

	_047c02_jump:
		cmpb   $0x000000,0x000024(%esp)
		je     _047aa0_jump
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

_047c18_switch:
		.long   _047cb4_case
		.long   _047c56_case
		.long   _047c62_case
		.long   _047c6e_case
		.long   _047caa_case
		.long   _047c8c_case




_047c30_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		xor    %esi,%esi

	_047c38_jump:
		xor    %eax,%eax
		jmp    _047cb5_jump

	_047c3f_jump:
		cmp    $0x000005,%si
		ja     _047cb4_case
		xor    %ebx,%ebx
		mov    %si,%bx
		jmp    *%cs:_047c18_switch(,%ebx,4)

	_047c56_case:
		movswl %ax,%ebx
		mov    0x000004(%edx),%ecx
		movb   $0x000017,(%ecx,%ebx,1)
		jmp    _047cb4_case

	_047c62_case:
		movswl %ax,%ebx
		mov    0x000008(%edx),%ecx
		movb   $0x000018,(%ecx,%ebx,1)
		jmp    _047cb4_case

	_047c6e_case:
		movswl %ax,%ecx
		mov    0x00000c(%edx),%ebx
		add    %ecx,%ebx
		mov    (%ebx),%cl
		cmp    $0x00000f,%cl
		jne    _047c82_jump
		movb   $0x00001a,(%ebx)
		jmp    _047cb4_case

	_047c82_jump:
		cmp    $0x000010,%cl
		jne    _047cb4_case
		movb   $0x00001b,(%ebx)
		jmp    _047cb4_case

	_047c8c_case:
		movswl %ax,%ecx
		mov    0x000014(%edx),%ebx
		add    %ecx,%ebx
		mov    (%ebx),%cl
		cmp    $0x00001f,%cl
		jne    _047ca0_jump
		movb   $0x00001c,(%ebx)
		jmp    _047cb4_case

	_047ca0_jump:
		cmp    $0x000020,%cl
		jne    _047cb4_case
		movb   $0x00001d,(%ebx)
		jmp    _047cb4_case

	_047caa_case:
		movswl %ax,%ebx
		mov    0x000010(%edx),%ecx
		movb   $0x000019,(%ecx,%ebx,1)

	_047cb4_case:
		inc    %eax

	_047cb5_jump:
		movswl %si,%ebx
		cmp    (%edi,%ebx,2),%ax
		jl     _047c3f_jump
		inc    %esi
		cmp    $0x000006,%si
		jl     _047c38_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_047cd0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,0x000010(%esp)
		mov    %edx,0x00000c(%esp)
		mov    %ebx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)
		xor    %edx,%edx
		mov    %dx,0x000014(%esp)

	_047ced_jump:
		xor    %eax,%eax
		jmp    _047d3d_jump

	_047cf1_jump:
		mov    0x000028(%esp),%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		mov    (%edi),%ecx
		movswl %ax,%ebx
		mov    0x000008(%esp),%esi
		movswl (%ecx,%ebx,2),%ecx
		mov    (%edx,%esi,1),%esi
		mov    %ecx,(%esp)
		mov    0x000010(%esp),%ecx
		add    %ebx,%esi
		mov    (%esp),%ebp
		mov    0x000010(%ecx),%ecx
		add    %ecx,%ebp
		mov    (%esi),%cl
		add    0x000004(%esp),%edx
		mov    %cl,0x000000(%ebp)
		mov    (%edx),%ecx
		mov    (%edi),%edx
		add    %ebx,%ecx
		movswl (%edx,%ebx,2),%edx
		mov    0x000010(%esp),%ebx
		mov    0x000010(%ebx),%ebx
		inc    %eax
		add    %edx,%ebx
		mov    (%ecx),%dl
		mov    %dl,0x000001(%ebx)

	_047d3d_jump:
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00000c(%esp),%ecx
		lea    0x000000(,%edx,2),%ebx
		add    %ecx,%ebx
		cmp    (%ebx),%ax
		jl     _047cf1_jump
		mov    0x000014(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000014(%esp)
		cmp    $0x000006,%bx
		jl     _047ced_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_047d70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000058,%esp
		mov    %eax,%esi
		lea    0x000054(%esp),%ebx
		lea    0x000048(%esp),%edx
		movw   $0x00ffff,0x000046(%eax)
		call   _047868_func
		cmpw   $0x000000,0x000054(%esp)
		je     _047e5d_jump
		xor    %ecx,%ecx
		xor    %edi,%edi

	_047d9d_jump:
		movswl %cx,%ebx
		lea    0x000000(,%ebx,4),%edx
		add    %ebx,%ebx
		mov    %edi,0x000018(%esp,%edx,1)
		mov    %edi,0x000030(%esp,%edx,1)
		mov    0x000048(%esp,%ebx,1),%ax
		mov    %edi,(%esp,%edx,1)
		cmp    %ax,%di
		je     _047def_jump
		mov    0x000046(%esp,%ebx,1),%eax
		sar    $0x000010,%eax
		call   _084f3c_func
		mov    %eax,0x000018(%esp,%edx,1)
		mov    0x000046(%esp,%ebx,1),%eax
		sar    $0x000010,%eax
		call   _084f3c_func
		mov    %eax,0x000030(%esp,%edx,1)
		mov    0x000046(%esp,%ebx,1),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		call   _084f3c_func
		mov    %eax,(%esp,%edx,1)

	_047def_jump:
		inc    %ecx
		cmp    $0x000006,%cx
		jl     _047d9d_jump
		mov    %esp,%eax
		lea    0x000030(%esp),%ecx
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x00004c(%esp),%edx
		mov    %esi,%eax
		call   _047a58_func
		lea    0x000018(%esp),%edx
		lea    0x000048(%esp),%eax
		lea    0x000030(%esp),%ecx
		call   _047c30_func
		mov    %esp,%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x00004c(%esp),%edx
		mov    %esi,%eax
		call   _047cd0_func
		xor    %edx,%edx

	_047e31_jump:
		movswl %dx,%ebx
		cmpw   $0x000000,0x000048(%esp,%ebx,2)
		je     _047e56_jump
		mov    0x000018(%esp,%ebx,4),%eax
		call   _0850d4_func
		mov    0x000030(%esp,%ebx,4),%eax
		call   _0850d4_func
		mov    (%esp,%ebx,4),%eax
		call   _0850d4_func

	_047e56_jump:
		inc    %edx
		cmp    $0x000006,%dx
		jl     _047e31_jump

	_047e5d_jump:
		add    $0x000058,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_047e68_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    %eax,(%esp)
		mov    %edx,%esi
		mov    %ebx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)
		xor    %ecx,%ecx
		push   $0x000200
		mov    0x000048(%esp),%cl
		mov    0x000008(%esp),%eax
		mov    %ecx,%edx
		call   _065e64_func
		push   %eax
		call   _086d88_func
		add    $0x000008,%esp
		movswl %ax,%edi
		mov    %ax,0x000028(%esp)
		cmp    $0xffffffff,%edi
		jne    _047edb_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %ecx,%edx
		mov    %eax,%ebx
		mov    0x000004(%esp),%eax
		call   _065e64_func
		push   %eax
		push   $_0a1d04_data
		push   %ebx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		call   _020150_func
		mov    %ebx,%eax
		jmp    _0485da_jump

	_047edb_jump:
		mov    %edi,%eax
		call   _087044_func
		mov    %eax,%ebx
		call   _084f3c_func
		mov    %eax,%edx
		mov    %eax,%ebp
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%ecx
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,0x000010(%esp)
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,0x000018(%esp)
		mov    $0x000190,%eax
		mov    %edx,0x000014(%esp)
		call   _084f3c_func
		mov    %eax,0x00001c(%esp)
		test   %edx,%edx
		je     _047f32_jump
		mov    %edi,%eax
		call   _087081_func

	_047f32_jump:
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		call   _08717c_func
		test   %ebp,%ebp
		je     _0485b4_jump
		test   %ecx,%ecx
		je     _0485b4_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _0485b4_jump
		cmpl   $0x000000,0x000010(%esp)
		je     _0485b4_jump
		cmpl   $0x000000,0x000018(%esp)
		je     _0485b4_jump
		xor    %edx,%edx
		mov    0x000004(%esp),%eax
		mov    0x000044(%esp),%dl
		call   _065e64_func
		mov    $_0a1c00_data,%edx
		call   _047698_func
		mov    0x000008(%esp),%edx
		mov    (%edx),%dx
		mov    %eax,0x000020(%esp)
		mov    %dx,0x00002c(%esp)
		xor    %edx,%edx
		test   %ax,%ax
		jle    _047fe5_jump

	_047f9f_jump:
		mov    0x00002a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ebx
		add    %ebx,%eax
		mov    (%esi),%ebx
		mov    %ebx,(%eax)
		mov    0x000004(%esi),%ebx
		mov    %ebx,0x000004(%eax)
		mov    0x000008(%esi),%ebx
		mov    %ebx,0x000008(%eax)
		mov    0x000044(%esi),%bx
		mov    %bx,0x000044(%eax)
		mov    0x000084(%esi),%bl
		inc    %edx
		mov    %bl,0x000084(%eax)
		cmp    0x000020(%esp),%dx
		jl     _047f9f_jump

	_047fe5_jump:
		mov    %ecx,%edx
		mov    %ebp,%eax
		call   _0470cc_func
		test   %eax,%eax
		je     _0485b4_jump
		mov    %ecx,%edx
		mov    %ebp,%eax
		call   _0470cc_func
		mov    %ecx,%esi
		mov    $0x00002e,%dl
		mov    %eax,%ebx
		mov    %eax,%ebp

	_048007_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _04801f_jump
		cmp    $0x000000,%al
		je     _04801d_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _04801f_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _048007_jump

	_04801d_jump:
		sub    %esi,%esi

	_04801f_jump:
		test   %esi,%esi
		jne    _048058_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    0x000014(%esp),%eax
		push   %ecx
		sub    %eax,%ebx
		push   %ebx
		mov    0x00000c(%esp),%ebx
		push   %ebx
		push   $_0a1d28_data
		push   %edx
		call   _0852d9_func
		add    $0x000014,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_048058_jump:
		mov    $0x000001,%ebx
		mov    (%esp),%eax
		mov    %ecx,%edx
		call   _04602c_func
		mov    0x000008(%esp),%edx
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edx
		mov    _0b9410_data,%ebx
		mov    %eax,0x00000c(%edx,%ebx,1)
		mov    0x000018(%esp),%edx
		mov    %ebp,%eax
		call   _0470cc_func
		mov    %eax,%ebp
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		imul   $0x00002a,%eax,%eax
		mov    _0c1050_data,%edi
		mov    0x000018(%esp),%esi
		add    %eax,%edi
		push   %edi

	_0480a2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0480ba_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0480a2_jump

	_0480ba_jump:
		pop    %edi
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		imul   $0x00002a,%eax,%eax
		mov    _0c1050_data,%edx
		xor    %ebx,%ebx
		movb   $0x000001,0x00001e(%edx,%eax,1)
		mov    $0x0000ff,%edi
		mov    $0x0000c8,%esi

	_0480dc_jump:
		mov    %ecx,%edx
		mov    %ebp,%eax
		call   _0470cc_func
		mov    %eax,%ebp
		mov    %ecx,%eax
		call   _086cfe_func
		mov    %ax,0x000030(%esp)
		cmp    $0x0000ff,%ax
		jle    _048123_jump
		mov    %esi,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    0x000004(%esp),%eax
		push   %eax
		push   $_0a1d5c_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_048123_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%edx
		mov    %bx,%ax
		add    %edx,%eax
		mov    0x000030(%esp),%dl
		mov    %dl,(%eax)
		mov    0x000030(%esp),%eax
		inc    %ebx
		cmp    %ax,%di
		jne    _0480dc_jump
		mov    %ecx,%edx
		mov    %ebp,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ecx,%eax
		call   _086cfe_func
		movswl %ax,%edi
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		mov    %edi,0x000028(%edx,%eax,1)
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %eax,%ebp
		mov    %ecx,%eax
		call   _086cfe_func
		cwtl   
		mov    %eax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		add    %edx,%eax
		mov    0x00000c(%esp),%edx
		mov    %edx,0x00002c(%eax)
		mov    $_0a1d80_data,%edx
		mov    0x000018(%esp),%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _0481de_jump
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		movb   $0x000007,0x00007c(%edx,%eax,1)
		mov    0x000008(%esp),%eax
		mov    _0c1d74_data,%edx
		movswl (%eax),%eax
		movw   $0x00ffff,(%edx,%eax,2)
		jmp    _04822a_jump

	_0481de_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ecx,%eax
		mov    0x000008(%esp),%edx
		call   _086cfe_func
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edx
		mov    _0b9410_data,%edi
		mov    %al,0x00007c(%edx,%edi,1)
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%ebp
		mov    %ecx,%eax
		mov    0x000008(%esp),%edx
		call   _086cfe_func
		mov    _0c1d74_data,%esi
		movswl (%edx),%edx
		mov    %ax,(%esi,%edx,2)

	_04822a_jump:
		mov    %ecx,%edx
		mov    %ebp,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ecx,%eax
		mov    0x000008(%esp),%edx
		call   _086cfe_func
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edi
		mov    _0b9410_data,%edx
		mov    %al,0x000071(%edx,%edi,1)
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ecx,%eax
		mov    0x000008(%esp),%edx
		call   _086cfe_func
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edx
		mov    _0b9410_data,%edi
		mov    %al,0x000070(%edx,%edi,1)
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ecx,%eax
		mov    0x000008(%esp),%edx
		call   _086cfe_func
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edx
		mov    _0b9410_data,%edi
		mov    %al,0x00006c(%edx,%edi,1)
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ecx,%eax
		mov    0x000008(%esp),%edx
		call   _086cfe_func
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edx
		mov    _0b9410_data,%edi
		mov    %al,0x00006d(%edx,%edi,1)
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ecx,%eax
		mov    0x000008(%esp),%edx
		call   _086cfe_func
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edx
		mov    _0b9410_data,%edi
		mov    %al,0x000078(%edx,%edi,1)
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		add    %eax,%edx
		mov    %ecx,%eax
		call   _086cfe_func
		mov    %eax,0x00000c(%esp)
		mov    0x00000c(%esp),%al
		and    $0x000001,%al
		mov    0x000085(%edx),%ah
		and    $0x0000df,%ah
		mov    %ah,0x000085(%edx)
		shl    $0x000005,%al
		or     %al,%ah
		mov    %ah,0x000085(%edx)
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ecx,%eax
		mov    0x000008(%esp),%edx
		call   _086cfe_func
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edi
		mov    _0b9410_data,%edx
		mov    %al,0x000079(%edx,%edi,1)
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ecx,%eax
		call   _086cfe_func
		mov    %ecx,%eax
		mov    0x000008(%esp),%edx
		call   _086cfe_func
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edi
		mov    _0b9410_data,%edx
		mov    %al,0x00007a(%edx,%edi,1)
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%ebp
		mov    %ecx,%eax
		call   _086cfe_func
		mov    %eax,%edx
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		imul   $0x000088,%eax,%esi
		mov    _0b9410_data,%eax
		mov    %dx,0x000064(%esi,%eax,1)
		mov    0x000008(%esp),%edx
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edx
		add    %edx,%eax
		mov    0x000064(%eax),%dx
		cmp    $0x000110,%dx
		je     _0483ee_jump
		cmp    $0x00010b,%dx
		je     _0483ee_jump
		cmp    $0x00010a,%dx
		jne    _048409_jump

	_0483ee_jump:
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		add    %edx,%eax
		mov    0x00007a(%eax),%dl
		mov    %dl,0x00007b(%eax)

	_048409_jump:
		mov    %ecx,%edx
		mov    %ebp,%eax
		call   _0470cc_func
		mov    %eax,%esi
		mov    %ecx,%eax
		mov    0x000008(%esp),%edx
		call   _086cfe_func
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edx
		mov    _0b9410_data,%edi
		mov    %al,0x00007d(%edx,%edi,1)
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0470cc_func
		mov    %eax,%ebp
		cmp    $0x000002,%bx
		jbe    _048559_jump
		xor    %edx,%edx
		mov    (%esp),%eax
		mov    %bx,%dx
		call   _084bac_func
		mov    0x000008(%esp),%edx
		movswl (%edx),%edx
		imul   $0x000088,%edx,%esi
		mov    _0b9410_data,%edx
		mov    %eax,0x000010(%edx,%esi,1)
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		xor    %edx,%edx
		mov    %bx,_0be998_data(,%eax,2)
		jmp    _0484ab_jump

	_04847e_jump:
		mov    0x00001c(%esp),%esi
		add    %eax,%esi
		mov    %esi,0x00000c(%esp)
		mov    0x000008(%esp),%esi
		movswl (%esi),%esi
		imul   $0x000088,%esi,%esi
		mov    _0b9410_data,%edi
		add    %edi,%esi
		mov    0x000010(%esi),%esi
		add    %eax,%esi
		mov    0x00000c(%esp),%eax
		inc    %edx
		mov    (%eax),%al
		mov    %al,(%esi)

	_0484ab_jump:
		xor    %esi,%esi
		movswl %dx,%eax
		mov    %bx,%si
		cmp    %esi,%eax
		jl     _04847e_jump
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		imul   $0x000088,%eax,%edx
		mov    _0b9410_data,%eax
		lea    0x000024(%esp),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _047868_func
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		lea    0x000000(,%eax,2),%edx
		mov    0x000024(%esp),%eax
		mov    %ax,_0bdd18_data(%edx)
		test   %ax,%ax
		jle    _048533_jump
		mov    0x000022(%esp),%edx
		sar    $0x000010,%edx
		mov    (%esp),%eax
		add    %edx,%edx
		mov    0x000008(%esp),%ebx
		call   _084bac_func
		movswl (%ebx),%ebx
		imul   $0x000088,%ebx,%ebx
		mov    %eax,%edx
		mov    _0b9410_data,%eax
		mov    %edx,0x000014(%ebx,%eax,1)
		mov    0x000008(%esp),%edx
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edx
		add    %edx,%eax
		call   _047d70_func
		jmp    _0485a8_jump

	_048533_jump:
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		imul   $0x000088,%eax,%edx
		mov    _0b9410_data,%eax
		movl   $0x000000,0x000014(%edx,%eax,1)
		mov    0x000008(%esp),%eax
		incw   (%eax)
		jmp    _047fe5_jump

	_048559_jump:
		mov    0x000008(%esp),%edx
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edx
		mov    _0b9410_data,%eax
		movl   $0x000000,0x000014(%edx,%eax,1)
		mov    0x000008(%esp),%edx
		movswl (%edx),%edx
		imul   $0x000088,%edx,%edx
		movl   $0x000000,0x000010(%edx,%eax,1)
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		xor    %edx,%edx
		mov    %dx,_0be998_data(,%eax,2)
		mov    0x000008(%esp),%eax
		movswl (%eax),%eax
		mov    %dx,_0bdd18_data(,%eax,2)

	_0485a8_jump:
		mov    0x000008(%esp),%eax
		incw   (%eax)
		jmp    _047fe5_jump

	_0485b4_jump:
		mov    0x000018(%esp),%eax
		call   _0850d4_func
		mov    0x000010(%esp),%eax
		call   _0850d4_func
		mov    %ecx,%eax
		call   _0850d4_func
		mov    0x000014(%esp),%eax
		call   _0850d4_func
		mov    0x00001c(%esp),%eax

	_0485da_jump:
		call   _0850d4_func
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_048828_func:
		push   %ecx
		push   %esi
		mov    %eax,%esi
		xor    %ecx,%ecx
		call   _047754_func
		mov    %eax,_0c1120_data
		mov    %esi,%eax
		call   _061e60_func
		pop    %esi
		pop    %ecx
		ret    



_0488b0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		mov    $_0b3428_data,%edi
		call   _049b64_func
		mov    $_0b3d28_data,%edx
		mov    $0x000300,%ecx
		mov    %eax,_0c0fbc_data
		mov    %esi,%eax
		mov    $_0b3d28_data,%esi
		call   _04a0e0_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		mov    0x000004(%esp),%ax
		mov    %eax,_0c0fa4_data
		mov    %eax,_0c0fb4_data
		xor    %eax,%eax
		mov    _0c0fb4_data,%esi
		mov    (%esp),%ax
		imul   %eax,%esi
		mov    _0c0fb4_data,%edx
		shr    $0x000002,%edx
		mov    %ax,_0c30b2_data
		mov    %edx,_0c0fb4_data
		mov    _0c0fbc_data,%eax
		mov    %esi,_0c0fb0_data
		mov    %eax,_0c0fcc_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_048944_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%esi
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %dx,%bx
		mov    %si,%di
		mov    %ebx,%edx
		imul   %edi,%edx
		call   _084bac_func
		lea    0x000000(,%ebx,2),%edx
		imul   %edi,%edx
		mov    %eax,%esi
		shl    $0x000003,%ebx
		mov    %ecx,%eax
		add    %ebx,%edx
		call   _084bac_func
		mov    %eax,_0c0fc8_data
		mov    %esi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_048984_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000018(%esp)
		xor    %eax,%eax
		mov    %dx,_0c30ae_data
		mov    %dx,%ax
		xor    %edx,%edx
		mov    %bx,%dx
		mov    %eax,_0c0fac_data
		imul   %edx,%eax
		mov    %bx,_0c30b4_data
		mov    %esi,0x000004(%esp)
		mov    _0c0fc8_data,%esi
		mov    %eax,_0c0fc0_data
		test   %esi,%esi
		jne    _0489d2_jump
		mov    $_0a1dbc_data,%eax
		call   _020150_func

	_0489d2_jump:
		xor    %edi,%edi
		jmp    _048a7f_jump

	_0489d9_jump:
		mov    _0c0fac_data,%edx
		xor    %eax,%eax
		test   %edx,%edx
		jbe    _048a7e_jump

	_0489e9_jump:
		mov    %eax,%edx
		mov    _0c0fc0_data,%ebx
		and    $0x000003,%edx
		shr    %ebx
		imul   %ebx,%edx
		mov    %ebx,0x00000c(%esp)
		mov    %eax,%ebx
		shr    $0x000002,%ebx
		mov    %ebx,0x000010(%esp)
		add    %edx,%ebx
		mov    _0c0fac_data,%edx
		mov    %edi,%ebp
		shr    %edx
		imul   %edx,%ebp
		mov    %ebp,0x000008(%esp)
		lea    (%ebx,%ebp,1),%edx
		xor    %ebx,%ebx
		mov    0x000014(%esp),%bx
		imul   %edi,%ebx
		mov    0x000004(%esp),%ebp
		add    %eax,%ebx
		add    %ebp,%ebx
		mov    _0c0fac_data,%ebp
		mov    (%ebx),%cl
		shr    $0x000002,%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		mov    %ebp,(%esp)
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)
		cmp    $0x000010,%edi
		jae    _048a6f_jump
		mov    0x00000c(%esp),%edx
		mov    0x000010(%esp),%ebp
		shl    $0x000002,%edx
		mov    0x000008(%esp),%ecx
		add    %ebp,%edx
		add    %ecx,%edx
		mov    (%ebx),%cl
		mov    (%esp),%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)

	_048a6f_jump:
		mov    _0c0fac_data,%ebx
		inc    %eax
		cmp    %ebx,%eax
		jb     _0489e9_jump

	_048a7e_jump:
		inc    %edi

	_048a7f_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		cmp    %eax,%edi
		jb     _0489d9_jump
		mov    _0c0fac_data,%eax
		mov    _0c0fc0_data,%edx
		shr    %eax
		add    %edx,%edx
		mov    %eax,_0c0fac_data
		mov    %edx,_0c0fc0_data
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_048bd8_switch:
		.long   _048c0a_case
		.long   _048c26_case
		.long   _048c42_case
		.long   _048c5a_case
		.long   _048c72_case
		.long   _048c8a_case




_048bf0_func:
		push   %ebx
		mov    %eax,%ebx
		dec    %ebx
		mov    $0x00000f,%eax
		cmp    $0x000005,%ebx
		ja     _048c9d_jump
		jmp    *%cs:_048bd8_switch(,%ebx,4)

	_048c0a_case:
		cmp    $0x000001,%edx
		jne    _048c16_jump
		mov    $0x00000e,%eax
		pop    %ebx
		ret    

	_048c16_jump:
		cmp    $0x000002,%edx
		jne    _048c9d_jump
		mov    $0x000005,%eax
		pop    %ebx
		ret    

	_048c26_case:
		cmp    $0x000001,%edx
		jne    _048c32_jump
		mov    $0x000011,%eax
		pop    %ebx
		ret    

	_048c32_jump:
		cmp    $0x000002,%edx
		jne    _048c9d_jump
		mov    $0x000007,%eax
		pop    %ebx
		ret    

	_048c42_case:
		cmp    $0x000001,%edx
		jne    _048c4e_jump
		mov    $0x000010,%eax
		pop    %ebx
		ret    

	_048c4e_jump:
		cmp    $0x000002,%edx
		jne    _048c9d_jump
		mov    $0x000006,%eax
		pop    %ebx
		ret    

	_048c5a_case:
		cmp    $0x000001,%edx
		jne    _048c66_jump
		mov    $0x00000d,%eax
		pop    %ebx
		ret    

	_048c66_jump:
		cmp    $0x000002,%edx
		jne    _048c9d_jump
		mov    $0x000004,%eax
		pop    %ebx
		ret    

	_048c72_case:
		cmp    $0x000001,%edx
		jne    _048c7e_jump
		mov    $0x000008,%eax
		pop    %ebx
		ret    

	_048c7e_jump:
		cmp    $0x000002,%edx
		jne    _048c9d_jump
		mov    $0x000003,%eax
		pop    %ebx
		ret    

	_048c8a_case:
		cmp    $0x000001,%edx
		jne    _048c96_jump
		mov    $0x00000b,%eax
		pop    %ebx
		ret    

	_048c96_jump:
		cmp    $0x000002,%edx
		jne    _048c9d_jump
		mov    %edx,%eax

	_048c9d_jump:
		pop    %ebx
		ret    



_048ca0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000080,%esp
		mov    %al,%cl
		mov    $0x00000d,%ebx
		mov    $_0c31a8_data,%eax
		xor    %edx,%edx
		call   _085360_func
		mov    $0xfffffffe,%edx
		mov    %esp,%edi
		mov    %dx,_0c31ac_data
		xor    %edx,%edx
		mov    $_0a1dfc_data,%eax
		mov    %cl,%dl
		xor    %ebx,%ebx
		call   _065ee0_func
		mov    %esp,%ecx
		mov    %eax,%esi
		mov    $_0a1e04_data,%edx
		push   %edi

	_048ce6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _048cfe_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _048ce6_jump

	_048cfe_jump:
		pop    %edi
		mov    $_0a1e0c_data,%eax
		call   _0415b4_func
		mov    _0c3102_data,%edx
		sar    $0x000010,%edx
		mov    %eax,%edi
		cmp    %edx,%eax
		je     _048d22_jump
		mov    $_0a1e10_data,%eax
		call   _020150_func

	_048d22_jump:
		mov    %esp,%ecx
		mov    $0x000001,%ebx
		mov    $_0a1e2c_data,%edx
		mov    $_0a1e34_data,%eax
		call   _0415b4_func
		mov    %esp,%ecx
		mov    %eax,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _048bf0_func
		mov    $_0a1e38_data,%edx
		mov    %al,_0c31ae_data
		mov    $_0a1e44_data,%eax
		call   _0415b4_func
		test   %eax,%eax
		jne    _048d69_jump
		mov    $_0a1e54_data,%eax
		call   _020150_func
		jmp    _048d92_jump

	_048d69_jump:
		lea    -0x000001(%eax),%edx
		mov    %edx,%ecx
		mov    %edx,%eax
		cmpb   $0x000000,_0c2e00_data(%ecx,%eax,8)
		jne    _048d86_jump
		mov    $_0a1e7c_data,%eax
		call   _020150_func
		jmp    _048d92_jump

	_048d86_jump:
		mov    %dl,_0c31b0_data
		mov    %dl,_0c31b1_data

	_048d92_jump:
		mov    $_0ae658_data,%edx
		mov    $0x000001,%cl
		mov    _0c3104_data,%si
		xor    %bh,%bh
		mov    %edx,_0bf318_data
		mov    %bh,_0ae658_data
		mov    %cl,_0ae65a_data
		mov    %bh,_0ae65b_data
		xor    %bl,%bl
		mov    $0x000002,%ecx
		mov    %bx,_0ae660_data
		mov    %bh,_0ae662_data
		mov    %bh,_0ae66c_data
		mov    %bh,_0ae66d_data
		mov    %bh,_0ae66e_data
		mov    %bh,_0ae659_data
		mov    %cx,_0ae65e_data
		cmp    $0x000001,%si
		jne    _048e1a_jump
		mov    _0c31b1_data,%bh
		cmp    $0x000001,%bh
		jne    _048e1a_jump
		mov    $0x000002,%ah
		mov    %bh,_0ae66c_data
		mov    %bh,_0ae66d_data
		mov    %bh,_0ae659_data
		mov    %ah,_0ae66e_data
		jmp    _048e3e_jump

	_048e1a_jump:
		cmpw   $0x000003,_0c3104_data
		jne    _048e3e_jump
		mov    _0c31b1_data,%cl
		cmp    $0x000001,%cl
		jne    _048e3e_jump
		mov    _0bf318_data,%eax
		movb   $0x000004,0x000016(%eax)
		mov    %cl,0x000014(%eax)
		mov    %cl,0x000001(%eax)

	_048e3e_jump:
		mov    %esp,%ecx
		mov    _0c3348_data,%dh
		mov    $0x000002,%ebx
		and    $0x0000fb,%dh
		mov    $_0a1eac_data,%eax
		mov    %dh,_0c3348_data
		mov    $_0a1ea4_data,%edx
		call   _0415b4_func
		mov    _0c3347_data,%bl
		and    $0x0000fe,%bl
		and    $0x000001,%al
		mov    %bl,_0c3347_data
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,%al
		and    $0x000001,%al
		mov    %bh,_0c3347_data
		cmp    $0x000001,%al
		jbe    _048e90_jump
		mov    $_0a1eb4_data,%eax
		call   _020150_func

	_048e90_jump:
		mov    %esp,%ecx
		mov    $0x000002,%ebx
		mov    $_0a1ed0_data,%edx
		mov    $_0a1eac_data,%eax
		call   _0415b4_func
		mov    _0c3348_data,%cl
		and    $0x0000fe,%cl
		and    $0x000001,%al
		mov    %cl,_0c3348_data
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,%al
		and    $0x000001,%al
		mov    %ch,_0c3348_data
		cmp    $0x000001,%al
		jbe    _048ed3_jump
		mov    $_0a1eb4_data,%eax
		call   _020150_func

	_048ed3_jump:
		mov    %esp,%ecx
		mov    _0c3347_data,%al
		mov    $0x000002,%ebx
		or     $0x000080,%al
		mov    $_0a1ed4_data,%edx
		mov    %al,_0c3347_data
		mov    $_0a1eac_data,%eax
		call   _0415b4_func
		and    $0x000001,%al
		mov    _0c3347_data,%ah
		and    $0x0000fb,%ah
		mov    %ah,_0c3347_data
		shl    $0x000002,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,%al
		and    $0x000004,%al
		mov    %dl,_0c3347_data
		cmp    $0x000004,%al
		jbe    _048f25_jump
		mov    $_0a1eb4_data,%eax
		call   _020150_func

	_048f25_jump:
		mov    %esp,%ecx
		mov    $0x000002,%ebx
		mov    $_0a1edc_data,%edx
		mov    $_0a1eac_data,%eax
		call   _0415b4_func
		mov    _0c3347_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		or     %al,%bl
		mov    %bl,%al
		mov    %dh,_0c3347_data
		and    $0x000008,%al
		mov    %bl,_0c3347_data
		cmp    $0x000008,%al
		jbe    _048f6b_jump
		mov    $_0a1eb4_data,%eax
		call   _020150_func

	_048f6b_jump:
		mov    %esp,%ecx
		mov    $0x000002,%ebx
		mov    $_0a1ee8_data,%edx
		mov    $_0a1eac_data,%eax
		call   _0415b4_func
		mov    _0c3347_data,%bh
		and    $0x000001,%al
		and    $0x0000fd,%bh
		add    %al,%al
		mov    %bh,%cl
		or     %al,%cl
		mov    %cl,%al
		mov    %bh,_0c3347_data
		and    $0x000002,%al
		mov    %cl,_0c3347_data
		cmp    $0x000002,%al
		jbe    _048fb0_jump
		mov    $_0a1eb4_data,%eax
		call   _020150_func

	_048fb0_jump:
		cmpw   $0x000001,_0c3104_data
		jne    _049002_jump
		mov    %esp,%ecx
		mov    $0x000002,%ebx
		mov    $_0a1ef0_data,%edx
		mov    $_0a1eac_data,%eax
		call   _0415b4_func
		and    $0x000001,%al
		mov    _0c3347_data,%ah
		and    $0x0000bf,%ah
		mov    %ah,_0c3347_data
		shl    $0x000006,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,%al
		and    $0x000040,%al
		mov    %dl,_0c3347_data
		cmp    $0x000040,%al
		jbe    _049009_jump
		mov    $_0a1eb4_data,%eax
		call   _020150_func
		jmp    _049009_jump

	_049002_jump:
		andb   $0x0000bf,_0c3347_data

	_049009_jump:
		mov    _0c3349_data,%dh
		and    $0x0000fe,%dh
		mov    _0c3347_data,%bl
		mov    %dh,_0c3349_data
		test   $0x000008,%bl
		je     _049032_jump
		test   $0x000004,%bl
		je     _049032_jump
		mov    $_0a1eb4_data,%eax
		call   _020150_func

	_049032_jump:
		testb  $0x000040,_0c3347_data
		je     _049050_jump
		mov    _0c3348_data,%al
		and    $0x000001,%al
		cmp    $0x000001,%al
		jne    _049050_jump
		mov    $_0a1eb4_data,%eax
		call   _020150_func

	_049050_jump:
		add    $0x000080,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04905c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000b0,%esp
		mov    _0c1d74_data,%ebp
		mov    %eax,0x00009c(%esp)
		mov    %edx,0x000090(%esp)
		mov    %ebx,0x000080(%esp)
		mov    $0x0000ff,%ah
		mov    $0x0002bc,%edx
		mov    %ah,_0c31af_data
		mov    %dx,0x0000a8(%esp)
		mov    $0x0072d8,%edx
		mov    0x00009c(%esp),%eax
		call   _084bac_func
		xor    %edx,%edx
		mov    %eax,_0c1050_data
		mov    %edx,0x0000a4(%esp)
		xor    %eax,%eax
		jmp    _0490d1_jump

	_0490b9_jump:
		mov    _0c1050_data,%edx
		lea    0x000001(%ebx),%ecx
		add    $0x00002a,%eax
		mov    %ecx,0x0000a4(%esp)
		movb   $0x000000,-0x00000c(%edx,%eax,1)

	_0490d1_jump:
		mov    0x0000a6(%esp),%edx
		mov    0x0000a4(%esp),%ebx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jg     _0490b9_jump
		mov    $_0a1ef8_data,%eax
		mov    0x00007e(%esp),%esi
		mov    $_0a1efc_data,%ebx
		xor    %dl,%dl
		call   _065510_func
		mov    %dl,0x0000ac(%esp)
		sar    $0x000010,%esi
		mov    %eax,%ecx
		mov    $_0c2da3_data,%edx
		mov    %esi,%eax
		mov    %esp,%edi
		call   _0655dc_func
		mov    %eax,%esi
		push   %edi

	_049118_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049130_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049118_jump

	_049130_jump:
		pop    %edi
		cmpb   $0x000000,_0c33df_data
		je     _049148_jump
		mov    $_0a1df8_data,%edx
		mov    %esp,%eax
		call   _085d60_func
		jmp    _04914a_jump

	_049148_jump:
		xor    %eax,%eax

	_04914a_jump:
		test   %eax,%eax
		je     _049175_jump
		call   _086112_func
		mov    0x000080(%esp),%ebx
		mov    0x000090(%esp),%edx
		mov    0x00009c(%esp),%eax
		call   _04c460_func
		movb   $0x000001,0x0000ac(%esp)

	_049175_jump:
		cmpb   $0x000000,_0c33df_data
		jne    _049758_jump
		cmpb   $0x000000,0x0000ac(%esp)
		jne    _049758_jump
		xor    %edx,%edx
		mov    0x000080(%esp),%dl
		mov    $_0c2e8c_data,%edi
		mov    %edx,%eax
		mov    $_0a1f00_data,%esi
		call   _048ca0_func
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    $_0c2da3_data,%esi
		mov    $_0c2e5a_data,%edi
		push   %edi

	_0491b8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0491d0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0491b8_jump

	_0491d0_jump:
		pop    %edi
		mov    $_0a1ef8_data,%eax
		call   _065ee0_func
		mov    $_0a1efc_data,%edx
		mov    %eax,%ebx
		mov    $_0a1f08_data,%eax
		mov    %esp,%edi
		call   _065590_func
		mov    %eax,%esi
		push   %edi

	_0491f1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049209_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0491f1_jump

	_049209_jump:
		pop    %edi
		push   $0x000200
		lea    0x000004(%esp),%eax
		push   %eax
		call   _086d88_func
		movswl %ax,%ecx
		add    $0x000008,%esp
		cmp    $0xffffffff,%ecx
		jne    _049254_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    %esp,%eax
		push   %eax
		push   $_0a1f0c_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func
		jmp    _0496e6_jump

	_049254_jump:
		mov    %ecx,%eax
		call   _087044_func
		mov    %eax,%ebx
		call   _084f3c_func
		mov    %eax,%edx
		mov    %eax,%edi
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %edx,0x000094(%esp)
		mov    %eax,%esi
		mov    %eax,0x000098(%esp)
		test   %edx,%edx
		je     _0496e6_jump
		test   %eax,%eax
		je     _0496e6_jump
		mov    %ecx,%eax
		call   _087081_func
		mov    %ecx,%eax
		call   _08717c_func
		xor    %ebx,%ebx
		xor    %ch,%ch
		mov    %bx,0x0000a8(%esp)
		mov    %ch,_0c33d5_data

	_0492b0_jump:
		mov    %esi,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%ebx
		mov    %eax,%edi
		test   %eax,%eax
		je     _04939c_jump
		mov    $_0a1f08_data,%edx
		mov    %esi,%eax
		call   _086c40_func
		xor    %ecx,%ecx
		test   %eax,%eax
		je     _0492ff_jump
		mov    %esi,%edx
		mov    %ebx,%eax
		call   _0470cc_func
		mov    $_0a1f40_data,%edx
		mov    %eax,%edi
		mov    %esi,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _049336_jump
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x000080(%esp),%dl
		jmp    _049325_jump

	_0492ff_jump:
		mov    $_0a1db4_data,%edx
		mov    %esi,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _049336_jump
		mov    %esi,%edx
		mov    %ebx,%eax
		call   _0470cc_func
		xor    %edx,%edx
		mov    %eax,%edi
		mov    0x000080(%esp),%dl
		mov    %esi,%eax

	_049325_jump:
		call   _065e64_func
		mov    $_0a1c00_data,%edx
		call   _047698_func
		mov    %eax,%ecx

	_049336_jump:
		mov    0x0000a6(%esp),%eax
		movswl %cx,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		cmp    $0x0002bc,%eax
		jle    _04938f_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    0x0000a6(%esp),%eax
		sar    $0x000010,%eax
		push   $0x0002bc
		add    %eax,%ebx
		mov    _0c3140_data,%eax
		push   %ebx
		sar    $0x000010,%eax
		push   %eax
		push   $_0a1f48_data
		push   %edx
		call   _0852d9_func
		add    $0x000014,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_04938f_jump:
		add    %cx,0x0000a8(%esp)
		jmp    _0492b0_jump

	_04939c_jump:
		mov    0x0000a8(%esp),%eax
		mov    $0x0173e0,%edx
		mov    %ax,_0b9414_data
		mov    0x00009c(%esp),%eax
		call   _084bac_func
		mov    $0x000578,%edx
		mov    %eax,_0b9410_data
		mov    0x00009c(%esp),%eax
		mov    0x000094(%esp),%edi
		call   _084bac_func
		mov    $0x000578,%edx
		mov    %eax,_0b9418_data
		mov    0x00009c(%esp),%eax
		mov    $0x0173e0,%ebx
		call   _084bac_func
		mov    %eax,_0b9408_data
		xor    %edx,%edx
		mov    _0b9410_data,%eax
		mov    0x000098(%esp),%esi
		call   _085360_func
		mov    $0x000579,%edx
		mov    0x00009c(%esp),%eax
		xor    %ecx,%ecx
		call   _084bac_func
		mov    %eax,%ebp
		mov    %eax,_0c1d74_data
		mov    %cx,0x0000a8(%esp)

	_04942c_jump:
		mov    %esi,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%ebx
		mov    %eax,%edi
		test   %eax,%eax
		je     _0494ea_jump
		mov    $_0a1f08_data,%edx
		mov    %esi,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _04945e_jump
		mov    %esi,%edx
		mov    %ebx,%eax
		call   _0470cc_func
		mov    %eax,%edi
		jmp    _04942c_jump

	_04945e_jump:
		mov    $_0a1db4_data,%edx
		mov    %esi,%eax
		call   _086c40_func
		test   %eax,%eax
		je     _04942c_jump
		cmpb   $0x0000ff,_0a7c9d_data
		jne    _049493_jump
		mov    $0x000001,%ecx
		mov    0x000090(%esp),%edx
		mov    0x00009c(%esp),%eax
		mov    %esi,%ebx
		call   _0477d8_func
		jmp    _0494ad_jump

	_049493_jump:
		mov    $0x000001,%ecx
		mov    0x000090(%esp),%edx
		mov    0x00009c(%esp),%eax
		mov    %esi,%ebx
		call   _047754_func

	_0494ad_jump:
		mov    %eax,0x0000a0(%esp)
		mov    %esi,%edx
		mov    %edi,%eax
		call   _0470cc_func
		mov    %eax,%edi
		xor    %eax,%eax
		lea    0x0000a8(%esp),%ebx
		mov    0x000080(%esp),%al
		mov    %esi,%ecx
		push   %eax
		mov    0x0000a4(%esp),%edx
		mov    0x0000a0(%esp),%eax
		call   _047e68_func
		jmp    _04942c_jump

	_0494ea_jump:
		mov    $_0a1f8c_data,%esi
		mov    $_0c2e8c_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0494fd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049515_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0494fd_jump

	_049515_jump:
		pop    %edi
		xor    %eax,%eax
		mov    $_0a1f94_data,%esi
		mov    0x000080(%esp),%al
		mov    %edi,%edx
		mov    %eax,0x000084(%esp)
		mov    %eax,%ebx
		mov    0x00009c(%esp),%eax
		mov    $_0c2e5a_data,%edi
		call   _046d68_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_049549_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049561_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049549_jump

	_049561_jump:
		pop    %edi
		mov    0x000084(%esp),%ebx
		mov    0x00009c(%esp),%eax
		mov    %edi,%edx
		call   _046b38_func
		movb   $0x000001,_0c33d3_data
		xor    %eax,%eax
		call   _03e8b8_func
		mov    _0b9412_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		xor    %edx,%edx
		inc    %eax
		mov    %edx,0x0000a4(%esp)
		call   _084f3c_func
		mov    %eax,0x00008c(%esp)
		jmp    _0495c5_jump

	_0495a7_jump:
		mov    0x0000a4(%esp),%edi
		mov    %ebx,%edx
		mov    %ebp,%ebx
		add    $0x000002,%eax
		inc    %edi
		mov    (%ebx,%edx,2),%dx
		mov    %edi,0x0000a4(%esp)
		mov    %dx,-0x000002(%eax)

	_0495c5_jump:
		mov    _0b9412_data,%edx
		mov    0x0000a4(%esp),%ebx
		sar    $0x000010,%edx
		mov    _0c1d74_data,%ebp
		cmp    %ebx,%edx
		jg     _0495a7_jump
		xor    %ecx,%ecx
		mov    0x00008c(%esp),%edi
		mov    %ecx,0x0000a4(%esp)
		mov    %ecx,0x000088(%esp)
		jmp    _04967d_jump

	_0495fb_jump:
		movswl (%edi),%eax
		mov    0x0000a4(%esp),%ecx
		cmp    $0xffffffff,%eax
		je     _049654_jump
		xor    %eax,%eax
		test   %edx,%edx
		jle    _049654_jump
		mov    0x00008c(%esp),%edx
		mov    %edi,%esi

	_049619_jump:
		mov    (%edx),%bx
		cmp    (%esi),%bx
		jne    _049645_jump
		mov    %eax,%ecx
		mov    %ebp,%edx
		movswl %cx,%ebx

	_049628_jump:
		mov    %eax,%esi
		movswl (%edx,%eax,2),%eax
		cmp    %eax,%ebx
		jne    _049628_jump
		movswl %si,%eax
		add    %eax,%eax
		add    %ebp,%eax
		mov    0x0000a4(%esp),%edx
		mov    %dx,(%eax)
		jmp    _049654_jump

	_049645_jump:
		mov    0x0000a4(%esp),%ebx
		inc    %eax
		add    $0x000002,%edx
		cmp    %ebx,%eax
		jl     _049619_jump

	_049654_jump:
		mov    0x000088(%esp),%esi
		mov    0x0000a4(%esp),%edx
		lea    (%esi,%ebp,1),%eax
		add    $0x000002,%edi
		inc    %edx
		mov    %cx,(%eax)
		lea    0x000002(%esi),%eax
		mov    %edx,0x0000a4(%esp)
		mov    %eax,0x000088(%esp)

	_04967d_jump:
		mov    _0b9412_data,%eax
		mov    0x0000a4(%esp),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _0495fb_jump
		mov    _0b9412_data,%ecx
		mov    $_0c11dc_data,%edi
		sar    $0x000010,%ecx
		mov    %ebp,%esi
		add    %ecx,%ecx
		mov    %ebp,_0c1d74_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x00008c(%esp),%eax
		call   _0850d4_func
		mov    0x000098(%esp),%eax
		call   _0850d4_func
		mov    0x000094(%esp),%eax
		call   _0850d4_func
		mov    _0c1d74_data,%ebp

	_0496e6_jump:
		mov    _0a7c9d_data,%dl
		mov    _0c1d74_data,%ebp
		cmp    $0x000001,%dl
		je     _049701_jump
		mov    _0c336c_data,%dh
		test   %dh,%dh
		jne    _049708_jump

	_049701_jump:
		mov    _0c31b0_data,%al
		jmp    _049715_jump

	_049708_jump:
		test   %dl,%dl
		jne    _04971a_jump
		test   %dh,%dh
		je     _04971a_jump
		mov    _0c31b1_data,%al

	_049715_jump:
		mov    %al,_0c31af_data

	_04971a_jump:
		mov    _0c31b0_data,%al
		mov    _0c31b1_data,%cl
		xor    %ebx,%ebx
		mov    %ebp,_0c1d74_data
		mov    %ebx,_0c1120_data
		cmp    %cl,%al
		je     _049758_jump
		cmpb   $0x000000,_0c3198_data
		je     _049758_jump
		mov    $_0c3198_data,%ebx
		mov    0x000090(%esp),%edx
		mov    0x00009c(%esp),%eax
		call   _048828_func

	_049758_jump:
		mov    _0c31ac_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _049790_jump
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    %esp,%eax
		push   %eax
		push   $_0a1f9c_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_049790_jump:
		xor    %eax,%eax
		mov    _0c1d74_data,%ebp
		mov    0x0000ac(%esp),%al
		add    $0x0000b0,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_049ab0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,(%esp)
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %ecx,0x000008(%esp)
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %edx,0x000004(%esp)
		jmp    _049b49_jump

	_049ace_jump:
		xor    %eax,%eax

	_049ad0_jump:
		mov    0x000004(%esp),%edx
		mov    (%esp),%ecx
		lea    0x000001(%edx),%ebx
		add    %ecx,%edx
		mov    (%edx),%dl
		mov    %dl,0x00000c(%esp)
		and    $0x0000c0,%dl
		mov    %ebx,0x000004(%esp)
		cmp    $0x0000c0,%dl
		jne    _049b27_jump
		mov    0x00000c(%esp),%dl
		and    $0x00003f,%dl
		lea    0x000001(%ebx),%ecx
		mov    %ecx,0x000004(%esp)
		add    (%esp),%ebx
		mov    (%ebx),%bl
		and    $0x0000ff,%edx
		mov    %bl,0x00000c(%esp)

	_049b0b_jump:
		dec    %edx
		cmp    $0xffffffff,%edx
		je     _049b3d_jump
		xor    %ebx,%ebx
		mov    %di,%bx
		imul   %esi,%ebx
		mov    %eax,%ecx
		add    %ecx,%ebx
		mov    0x00000c(%esp),%cl
		inc    %eax
		mov    %cl,(%ebx,%ebp,1)
		jmp    _049b0b_jump

	_049b27_jump:
		xor    %edx,%edx
		mov    %di,%dx
		mov    %edx,%ebx
		imul   %esi,%ebx
		mov    %eax,%edx
		add    %ebx,%edx
		mov    0x00000c(%esp),%bl
		inc    %eax
		mov    %bl,(%edx,%ebp,1)

	_049b3d_jump:
		xor    %edx,%edx
		mov    0x000020(%esp),%dx
		cmp    %edx,%eax
		jb     _049ad0_jump
		inc    %esi

	_049b49_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%ax
		cmp    %eax,%esi
		jb     _049ace_jump
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_049b64_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000ac,%esp
		mov    %eax,0x000094(%esp)
		mov    %edx,0x000088(%esp)
		mov    %ebx,0x000098(%esp)
		mov    %ecx,0x00008c(%esp)
		mov    $_0a1dec_data,%eax
		mov    %esp,%edi
		call   _065510_func
		mov    %eax,%esi
		mov    $_0a1df8_data,%edx
		push   %edi

	_049b9d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049bb5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049b9d_jump

	_049bb5_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%esi
		mov    %eax,%ebp
		lea    0x0000a8(%esp),%eax
		lea    0x000080(%esp),%ecx
		push   %eax
		lea    0x0000a4(%esp),%eax
		lea    0x000088(%esp),%ebx
		push   %eax
		mov    0x000090(%esp),%edx
		mov    %esi,%eax
		call   _04dc38_func
		mov    0x000080(%esp),%eax
		call   _084f3c_func
		mov    %eax,%edi
		mov    %eax,0x00009c(%esp)
		test   %eax,%eax
		je     _049e16_jump
		mov    0x0000a0(%esp),%al
		mov    0x000084(%esp),%edx
		xor    %ebx,%ebx
		mov    %al,0x0000a4(%esp)
		mov    %esi,%eax
		call   _085e56_func
		mov    0x000088(%esp),%edx
		push   %edx
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x0000b0(%esp),%al
		mov    %esi,%ecx
		push   %eax
		lea    0x0000ac(%esp),%eax
		mov    0x00008c(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _04dd40_func
		mov    %esi,%eax
		call   _08a18e_func
		mov    0x000084(%esp),%ebx
		mov    0x000080(%esp),%ecx
		sub    %ebx,%eax
		cmp    %ecx,%eax
		jne    _049c85_jump
		cmpb   $0x000000,0x0000a0(%esp)
		je     _049d31_jump

	_049c85_jump:
		mov    0x0000a4(%esp),%al
		mov    0x000084(%esp),%edx
		xor    %ebx,%ebx
		mov    %al,0x0000a0(%esp)
		mov    %ebp,%eax
		call   _085e56_func
		mov    0x000080(%esp),%esi
		xor    %edi,%edi
		test   %esi,%esi
		jle    _049cf3_jump
		mov    0x00009c(%esp),%esi

	_049cb7_jump:
		mov    0x000088(%esp),%eax
		push   %eax
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    $0x000001,%ebx
		mov    0x0000b0(%esp),%al
		mov    %ebp,%ecx
		push   %eax
		lea    0x0000ac(%esp),%eax
		mov    %ebx,%edx
		push   %eax
		mov    %esi,%eax
		inc    %edi
		call   _04dd40_func
		mov    0x000080(%esp),%edx
		inc    %esi
		cmp    %edx,%edi
		jl     _049cb7_jump

	_049cf3_jump:
		mov    %ebp,%eax
		mov    0x000088(%esp),%ecx
		call   _08a18e_func
		mov    0x000084(%esp),%ebx
		mov    %eax,%edx
		mov    0x000080(%esp),%eax
		sub    %ebx,%edx
		mov    %esp,%ebx
		call   _04df9c_func
		mov    0x000088(%esp),%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000a0(%esp),%al
		call   _04df68_func

	_049d31_jump:
		mov    %ebp,%eax
		mov    0x00009c(%esp),%edx
		call   _086112_func
		mov    0x00009c(%esp),%eax
		mov    0x000004(%edx),%bx
		mov    0x000008(%eax),%ax
		sub    %ebx,%eax
		mov    0x000098(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x00009c(%esp),%eax
		mov    0x00009c(%esp),%edx
		mov    0x00000a(%eax),%ax
		sub    0x000006(%edx),%ax
		mov    0x00008c(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x000098(%esp),%edx
		xor    %eax,%eax
		mov    0x00008c(%esp),%ecx
		mov    (%edx),%ax
		xor    %edx,%edx
		mov    (%ecx),%dx
		imul   %eax,%edx
		mov    0x00009c(%esp),%ebx
		mov    0x000094(%esp),%eax
		mov    0x000042(%ebx),%bx
		call   _084bac_func
		mov    %eax,0x000090(%esp)
		test   %eax,%eax
		je     _049def_jump
		xor    %edx,%edx
		mov    %bx,%dx
		push   %edx
		mov    0x000090(%esp),%edx
		xor    %ecx,%ecx
		mov    0x0000a0(%esp),%esi
		mov    (%edx),%cx
		mov    0x00009c(%esp),%edx
		xor    %ebx,%ebx
		add    $0x000080,%esi
		mov    (%edx),%bx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _049ab0_func
		jmp    _049df9_jump

	_049def_jump:
		mov    $_0a2030_data,%eax
		call   _020150_func

	_049df9_jump:
		mov    0x00009c(%esp),%eax
		call   _0850d4_func
		mov    0x000090(%esp),%eax
		add    $0x0000ac,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_049e16_jump:
		mov    %esi,%eax
		call   _086112_func
		mov    $_0a2060_data,%eax
		call   _020150_func
		mov    0x000090(%esp),%eax
		add    $0x0000ac,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_049e38_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000a8,%esp
		mov    %eax,0x000088(%esp)
		mov    %edx,0x000098(%esp)
		mov    %ebx,0x000090(%esp)
		mov    %ecx,0x000094(%esp)
		mov    $_0a1dec_data,%eax
		mov    %esp,%edi
		call   _065510_func
		mov    %eax,%esi
		mov    $_0a1df8_data,%edx
		push   %edi

	_049e71_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049e89_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049e71_jump

	_049e89_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%esi
		mov    %eax,%ebp
		lea    0x0000a4(%esp),%eax
		lea    0x000080(%esp),%ecx
		push   %eax
		lea    0x0000a4(%esp),%eax
		lea    0x000088(%esp),%ebx
		push   %eax
		mov    0x0000a0(%esp),%edx
		mov    %esi,%eax
		call   _04dc38_func
		mov    0x000080(%esp),%eax
		call   _084f3c_func
		mov    %eax,%edi
		mov    %eax,0x00008c(%esp)
		test   %eax,%eax
		je     _04a0be_jump
		mov    0x0000a0(%esp),%al
		mov    0x000084(%esp),%edx
		xor    %ebx,%ebx
		mov    %al,0x00009c(%esp)
		mov    %esi,%eax
		call   _085e56_func
		mov    0x000098(%esp),%edx
		push   %edx
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x0000ac(%esp),%al
		mov    %esi,%ecx
		push   %eax
		lea    0x0000ac(%esp),%eax
		mov    0x00008c(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _04dd40_func
		mov    %esi,%eax
		call   _08a18e_func
		mov    0x000084(%esp),%ebx
		mov    0x000080(%esp),%ecx
		sub    %ebx,%eax
		cmp    %ecx,%eax
		jne    _049f59_jump
		cmpb   $0x000000,0x0000a0(%esp)
		je     _04a005_jump

	_049f59_jump:
		mov    0x00009c(%esp),%al
		mov    0x000084(%esp),%edx
		xor    %ebx,%ebx
		mov    %al,0x0000a0(%esp)
		mov    %ebp,%eax
		call   _085e56_func
		mov    0x000080(%esp),%esi
		xor    %edi,%edi
		test   %esi,%esi
		jle    _049fc7_jump
		mov    0x00008c(%esp),%esi

	_049f8b_jump:
		mov    0x000098(%esp),%eax
		push   %eax
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    $0x000001,%ebx
		mov    0x0000ac(%esp),%al
		mov    %ebp,%ecx
		push   %eax
		lea    0x0000ac(%esp),%eax
		mov    %ebx,%edx
		push   %eax
		mov    %esi,%eax
		inc    %edi
		call   _04dd40_func
		mov    0x000080(%esp),%edx
		inc    %esi
		cmp    %edx,%edi
		jl     _049f8b_jump

	_049fc7_jump:
		mov    %ebp,%eax
		mov    0x000098(%esp),%ecx
		call   _08a18e_func
		mov    0x000084(%esp),%ebx
		mov    %eax,%edx
		mov    0x000080(%esp),%eax
		sub    %ebx,%edx
		mov    %esp,%ebx
		call   _04df9c_func
		mov    0x000098(%esp),%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000a0(%esp),%al
		call   _04df68_func

	_04a005_jump:
		mov    %ebp,%eax
		mov    0x00008c(%esp),%edx
		call   _086112_func
		mov    0x00008c(%esp),%eax
		mov    0x000004(%edx),%bx
		mov    0x000008(%eax),%ax
		sub    %ebx,%eax
		mov    0x000090(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x00008c(%esp),%eax
		mov    0x00008c(%esp),%edx
		mov    0x00000a(%eax),%ax
		sub    0x000006(%edx),%ax
		mov    0x000094(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x00008c(%esp),%eax
		mov    0x000088(%esp),%ecx
		mov    0x000042(%eax),%ax
		test   %ecx,%ecx
		je     _04a097_jump
		and    $0x00ffff,%eax
		xor    %ecx,%ecx
		push   %eax
		mov    0x000094(%esp),%eax
		xor    %ebx,%ebx
		mov    (%edx),%cx
		mov    (%eax),%bx
		mov    0x000090(%esp),%eax
		mov    0x00008c(%esp),%edx
		add    $0x000080,%eax
		call   _049ab0_func
		jmp    _04a0a1_jump

	_04a097_jump:
		mov    $_0a2090_data,%eax
		call   _020150_func

	_04a0a1_jump:
		mov    0x00008c(%esp),%eax
		call   _0850d4_func
		mov    0x000088(%esp),%eax
		add    $0x0000a8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_04a0be_jump:
		mov    %esi,%eax
		call   _086112_func
		mov    $_0a20c0_data,%eax
		call   _020150_func
		mov    0x000088(%esp),%eax
		add    $0x0000a8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_04a0e0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000094,%esp
		mov    %eax,0x000088(%esp)
		mov    %edx,%ebp
		mov    $_0a1dec_data,%eax
		mov    %esp,%edi
		call   _065510_func
		mov    %eax,%esi
		mov    $_0a1df8_data,%edx
		push   %edi

	_04a108_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a120_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a108_jump

	_04a120_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%esi
		lea    0x000090(%esp),%eax
		lea    0x000080(%esp),%ecx
		push   %eax
		lea    0x000090(%esp),%eax
		lea    0x000088(%esp),%ebx
		push   %eax
		mov    0x000090(%esp),%edx
		mov    %esi,%eax
		call   _04dc38_func
		mov    0x000084(%esp),%edx
		add    0x000080(%esp),%edx
		mov    %esi,%eax
		sub    $0x000300,%edx
		xor    %ebx,%ebx
		mov    0x000088(%esp),%ecx
		call   _085e56_func
		push   %ecx
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x000098(%esp),%eax
		mov    $0x000300,%edx
		push   %eax
		mov    %esi,%ecx
		mov    %ebp,%eax
		call   _04dd40_func
		mov    %esi,%eax
		call   _086112_func
		mov    %ebp,%ebx
		lea    0x000300(%ebp),%ecx

	_04a1b4_jump:
		xor    %edx,%edx
		mov    (%ebx),%dl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		inc    %ebx
		mov    %al,-0x000001(%ebx)
		cmp    %ecx,%ebx
		jne    _04a1b4_jump
		add    $0x000094,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04a1dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000b8,%esp
		mov    %eax,0x000088(%esp)
		mov    $_0a1dec_data,%eax
		mov    %esp,%edi
		call   _065510_func
		mov    %eax,%esi
		mov    $_0a1df8_data,%edx
		push   %edi

	_04a203_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a21b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a203_jump

	_04a21b_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%edi
		mov    %eax,0x000090(%esp)
		lea    0x0000b0(%esp),%eax
		lea    0x000080(%esp),%ecx
		push   %eax
		lea    0x0000b0(%esp),%eax
		lea    0x000088(%esp),%ebx
		push   %eax
		mov    0x000090(%esp),%edx
		mov    %edi,%eax
		call   _04dc38_func
		mov    0x000080(%esp),%eax
		call   _084f3c_func
		mov    _0c0fb8_data,%esi
		mov    %eax,%ebp
		mov    %eax,0x00008c(%esp)
		test   %eax,%eax
		je     _04a56e_jump
		test   %esi,%esi
		je     _04a56e_jump
		mov    0x0000ac(%esp),%al
		mov    0x000084(%esp),%edx
		xor    %ebx,%ebx
		mov    %al,0x0000b4(%esp)
		mov    %edi,%eax
		call   _085e56_func
		mov    0x000088(%esp),%edx
		push   %edx
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x0000b8(%esp),%al
		mov    %edi,%ecx
		push   %eax
		lea    0x0000b8(%esp),%eax
		mov    0x00008c(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    %ebp,%eax
		call   _04dd40_func
		mov    %edi,%eax
		call   _08a18e_func
		mov    0x000084(%esp),%ebx
		mov    0x000080(%esp),%ecx
		sub    %ebx,%eax
		cmp    %ecx,%eax
		jne    _04a2fe_jump
		cmpb   $0x000000,0x0000ac(%esp)
		je     _04a3b9_jump

	_04a2fe_jump:
		mov    0x0000b4(%esp),%al
		mov    0x000084(%esp),%edx
		xor    %ebx,%ebx
		mov    %al,0x0000ac(%esp)
		mov    0x000090(%esp),%eax
		call   _085e56_func
		mov    0x000080(%esp),%edi
		xor    %ebp,%ebp
		test   %edi,%edi
		jle    _04a376_jump
		mov    0x00008c(%esp),%edi

	_04a335_jump:
		mov    0x000088(%esp),%eax
		push   %eax
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%ecx
		mov    0x0000b8(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x0000b8(%esp),%eax
		mov    %ebx,%edx
		push   %eax
		mov    %edi,%eax
		inc    %ebp
		call   _04dd40_func
		mov    0x000080(%esp),%edx
		inc    %edi
		cmp    %edx,%ebp
		jl     _04a335_jump

	_04a376_jump:
		mov    0x000090(%esp),%eax
		mov    0x000088(%esp),%ecx
		call   _08a18e_func
		mov    0x000084(%esp),%ebx
		mov    %eax,%edx
		mov    0x000080(%esp),%eax
		sub    %ebx,%edx
		mov    %esp,%ebx
		call   _04df9c_func
		mov    0x000088(%esp),%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000ac(%esp),%al
		call   _04df68_func

	_04a3b9_jump:
		mov    0x000090(%esp),%eax
		call   _086112_func
		xor    %edi,%edi
		mov    0x00008c(%esp),%eax
		mov    %edi,0x00009c(%esp)
		mov    0x000008(%eax),%bx
		mov    0x000004(%eax),%dx
		mov    %eax,0x000094(%esp)
		sub    %edx,%ebx
		lea    0x000080(%eax),%ecx
		inc    %ebx
		mov    %ecx,0x00008c(%esp)
		mov    %ebx,0x0000a0(%esp)
		mov    0x000006(%eax),%cx
		mov    0x00000a(%eax),%bx
		mov    %edi,0x000098(%esp)
		sub    %ecx,%ebx
		mov    0x000042(%eax),%ax
		inc    %ebx
		mov    %eax,0x0000a4(%esp)
		mov    %ebx,0x0000a8(%esp)
		jmp    _04a547_jump

	_04a424_jump:
		xor    %eax,%eax
		xor    %dh,%dh

	_04a428_jump:
		mov    0x00009c(%esp),%ebx
		mov    0x00008c(%esp),%edi
		lea    0x000001(%ebx),%ecx
		add    %edi,%ebx
		mov    (%ebx),%dl
		mov    %dl,%bl
		and    $0x0000c0,%bl
		mov    %ecx,0x00009c(%esp)
		cmp    $0x0000c0,%bl
		jne    _04a4d0_jump
		and    $0x00003f,%dl
		lea    0x000001(%ecx),%ebp
		xor    %ebx,%ebx
		add    %edi,%ecx
		mov    %dl,%bl
		mov    %ebp,0x00009c(%esp)
		mov    (%ecx),%dl

	_04a467_jump:
		dec    %ebx
		cmp    $0xffffffff,%ebx
		je     _04a52e_jump
		mov    _0a7c9d_data,%ch
		lea    0x000001(%eax),%edi
		cmp    %ch,%dh
		jne    _04a4b1_jump
		xor    %ecx,%ecx
		mov    0x0000a0(%esp),%cx
		mov    0x000098(%esp),%ebp
		add    %ecx,%ecx
		imul   %ebp,%ecx
		lea    (%ecx,%eax,1),%ebp
		add    %esi,%ebp
		mov    %dl,0x000000(%ebp)
		movzwl 0x0000a0(%esp),%ebp
		add    %ebp,%ecx
		mov    %eax,%ebp
		add    %ebp,%ecx
		mov    %edi,%eax
		mov    %dl,(%ecx,%esi,1)
		jmp    _04a467_jump

	_04a4b1_jump:
		xor    %ecx,%ecx
		mov    0x000098(%esp),%ebp
		mov    0x0000a0(%esp),%cx
		imul   %ecx,%ebp
		mov    %eax,%ecx
		add    %ebp,%ecx
		mov    %edi,%eax
		mov    %dl,(%ecx,%esi,1)
		jmp    _04a467_jump

	_04a4d0_jump:
		mov    _0a7c9d_data,%cl
		lea    0x000001(%eax),%ebx
		cmp    %cl,%dh
		jne    _04a511_jump
		xor    %ecx,%ecx
		mov    0x0000a0(%esp),%cx
		mov    0x000098(%esp),%edi
		add    %ecx,%ecx
		imul   %edi,%ecx
		lea    (%ecx,%eax,1),%edi
		mov    %dl,(%edi,%esi,1)
		xor    %edi,%edi
		mov    0x0000a0(%esp),%di
		add    %ecx,%edi
		mov    %eax,%ecx
		mov    %ebx,%eax
		lea    (%edi,%ecx,1),%ebx
		mov    %dl,(%esi,%ebx,1)
		jmp    _04a52e_jump

	_04a511_jump:
		xor    %edi,%edi
		mov    0x000098(%esp),%ebp
		mov    0x0000a0(%esp),%di
		imul   %ebp,%edi
		mov    %eax,%ecx
		add    %edi,%ecx
		mov    %ebx,%eax
		mov    %dl,(%ecx,%esi,1)

	_04a52e_jump:
		xor    %ebx,%ebx
		mov    0x0000a4(%esp),%bx
		cmp    %ebx,%eax
		jb     _04a428_jump
		incl   0x000098(%esp)

	_04a547_jump:
		xor    %eax,%eax
		mov    0x000098(%esp),%edx
		mov    0x0000a8(%esp),%ax
		cmp    %edx,%eax
		ja     _04a424_jump
		mov    0x000094(%esp),%eax
		call   _0850d4_func
		jmp    _04a584_jump

	_04a56e_jump:
		mov    0x000090(%esp),%eax
		call   _086112_func
		mov    $_0a20f0_data,%eax
		call   _020150_func

	_04a584_jump:
		cmpb   $0x000000,_0a7c9d_data
		jne    _04a5b5_jump
		mov    _0c0fc8_data,%eax
		mov    %eax,_0c0fb8_data
		mov    0x0000a0(%esp),%eax
		add    %eax,%eax
		mov    %ax,_0c30ae_data
		mov    0x0000a8(%esp),%eax
		mov    %ax,_0c30b4_data
		jmp    _04a5d3_jump

	_04a5b5_jump:
		mov    _0c0fb8_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x0000a8(%esp),%bx
		mov    0x0000a0(%esp),%dx
		call   _048984_func

	_04a5d3_jump:
		add    $0x0000b8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b8e4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000090,%esp
		mov    %eax,%ebp
		mov    %ebx,0x000088(%esp)
		mov    $_0a1ef8_data,%eax
		mov    $_0a2548_data,%ebx
		call   _065440_func
		movswl %dx,%esi
		mov    $_0a2614_data,%edx
		mov    %eax,%ecx
		mov    %esi,%eax
		mov    %esp,%edi
		call   _0655dc_func
		mov    %eax,%esi
		mov    $_0a1df8_data,%edx
		push   %edi

	_04b921_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b939_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b921_jump

	_04b939_jump:
		pop    %edi
		mov    %esp,%eax
		mov    $0x000001,%ebx
		call   _04ddc8_func
		mov    %esp,%edx
		mov    %eax,%ecx
		mov    %eax,%edi
		call   _04e0c0_func
		mov    $0x000004,%edx
		mov    0x000088(%esp),%eax
		call   _086255_func
		mov    0x000088(%esp),%edx
		mov    (%edx),%edx
		mov    %ebp,%eax
		shl    $0x000002,%edx
		call   _084bac_func
		mov    0x000088(%esp),%edx
		mov    %eax,0x000004(%edx)
		mov    (%edx),%edx
		mov    %ebp,%eax
		shl    $0x000002,%edx
		call   _084bac_func
		mov    0x000088(%esp),%edx
		mov    %eax,0x000008(%edx)
		mov    (%edx),%edx
		mov    %ebp,%eax
		shl    $0x000002,%edx
		call   _084bac_func
		mov    0x000088(%esp),%edx
		mov    %eax,0x00000c(%edx)
		mov    $0x002328,%edx
		mov    %ebp,%eax
		call   _084bac_func
		mov    0x000088(%esp),%edx
		mov    0x000004(%edx),%edx
		mov    %eax,(%edx)
		mov    0x000088(%esp),%eax
		mov    0x000004(%eax),%eax
		mov    (%eax),%eax
		mov    %eax,0x000080(%esp)
		mov    %eax,%esi
		mov    0x000088(%esp),%eax
		xor    %edx,%edx
		mov    (%eax),%ebx
		mov    %edx,0x000084(%esp)
		test   %ebx,%ebx
		jbe    _04baad_jump
		xor    %ebp,%ebp

	_04b9f4_jump:
		mov    0x000088(%esp),%eax
		mov    $0x000001,%ebx
		mov    0x000004(%eax),%eax
		mov    $0x000002,%edx
		mov    %edi,%ecx
		mov    %esi,(%eax,%ebp,1)
		lea    0x00008c(%esp),%eax
		call   _086255_func
		xor    %eax,%eax
		mov    0x00008c(%esp),%ax
		inc    %eax
		add    %eax,%esi
		mov    0x000088(%esp),%eax
		mov    $0x000001,%ebx
		mov    0x000008(%eax),%eax
		mov    $0x000002,%edx
		mov    %edi,%ecx
		mov    %esi,(%eax,%ebp,1)
		lea    0x00008c(%esp),%eax
		call   _086255_func
		xor    %eax,%eax
		mov    0x00008c(%esp),%ax
		inc    %eax
		add    %eax,%esi
		mov    0x000088(%esp),%eax
		mov    $0x000001,%ebx
		mov    0x00000c(%eax),%eax
		mov    $0x000002,%edx
		mov    %edi,%ecx
		mov    %esi,(%eax,%ebp,1)
		lea    0x00008c(%esp),%eax
		add    $0x000004,%ebp
		call   _086255_func
		mov    0x000084(%esp),%ecx
		xor    %eax,%eax
		mov    0x000088(%esp),%edx
		mov    0x00008c(%esp),%ax
		inc    %ecx
		mov    (%edx),%ebx
		inc    %eax
		mov    %ecx,0x000084(%esp)
		add    %eax,%esi
		cmp    %ebx,%ecx
		jb     _04b9f4_jump

	_04baad_jump:
		mov    0x000080(%esp),%ecx
		mov    $0x000001,%ebx
		mov    %esi,%edx
		mov    0x000080(%esp),%eax
		sub    %ecx,%edx
		mov    %edi,%ecx
		call   _086255_func
		mov    %edi,%eax
		call   _086112_func
		add    $0x000090,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04bae0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000f4,%esp
		mov    %eax,0x0000c8(%esp)
		mov    %edx,0x0000a0(%esp)
		mov    $_0a261c_data,%eax
		mov    $_0a2624_data,%edx
		call   _065510_func
		movswl %bx,%esi
		mov    $_0a2620_data,%ebx
		mov    %eax,%ecx
		mov    %esi,%eax
		mov    %esp,%edi
		call   _0655dc_func
		mov    %eax,%esi
		mov    $_0a2628_data,%edx
		push   %edi

	_04bb22_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04bb3a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04bb22_jump

	_04bb3a_jump:
		pop    %edi
		mov    %esp,%eax
		mov    $0x000001,%ebx
		call   _04ddc8_func
		mov    %esp,%edx
		mov    %eax,%esi
		mov    %eax,%ebp
		call   _04e0c0_func
		mov    $0x000002,%edx
		lea    0x0000d8(%esp),%eax
		mov    %esi,%ecx
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x0000dc(%esp),%eax
		mov    %esi,%ecx
		call   _086255_func
		cmpb   $0x000000,_0a7c9d_data
		jne    _04bba7_jump
		mov    0x0000d8(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		add    %eax,%eax
		mov    0x0000dc(%esp),%bx
		mov    %ax,%dx
		mov    0x0000c8(%esp),%eax
		jmp    _04bbc2_jump

	_04bba7_jump:
		mov    0x0000c8(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x0000dc(%esp),%bx
		mov    0x0000d8(%esp),%dx

	_04bbc2_jump:
		call   _048944_func
		mov    %eax,_0c0fb8_data
		mov    $0x000001,%ebx
		lea    0x0000f0(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $_0c337e_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $_0c337b_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		xor    %edi,%edi
		call   _086255_func
		mov    $0x000008,%edx
		mov    $_0c2e00_data,%ebx
		mov    %edx,0x0000a4(%esp)
		mov    %ebx,0x0000ac(%esp)
		jmp    _04bc7c_jump

	_04bc23_jump:
		mov    $0x000008,%ebx
		mov    $0x000001,%edx
		mov    0x0000ac(%esp),%eax
		mov    %ebp,%ecx
		lea    (%edi,%edi,8),%esi
		call   _086255_func
		mov    0x0000a4(%esp),%eax

	_04bc45_jump:
		mov    _0c2e00_data(%esi),%dl
		inc    %esi
		xor    $0x000019,%dl
		mov    %dl,_0c2dff_data(%esi)
		cmp    %eax,%esi
		jne    _04bc45_jump
		mov    0x0000a4(%esp),%ecx
		mov    0x0000ac(%esp),%esi
		inc    %edi
		add    $0x000009,%ecx
		add    $0x000009,%esi
		mov    %ecx,0x0000a4(%esp)
		mov    %esi,0x0000ac(%esp)

	_04bc7c_jump:
		xor    %eax,%eax
		mov    0x0000f0(%esp),%al
		cmp    %eax,%edi
		jl     _04bc23_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0a5252_data,%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    _0a5252_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00009c(%esp)
		mov    %eax,%edx
		shl    $0x000004,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		lea    0x000028(%edx),%eax
		add    $_0d7a4c_data,%eax
		mov    %eax,0x0000a8(%esp)
		lea    0x000084(%edx),%eax
		add    $0x000044,%edx
		add    $_0d7a4c_data,%eax
		add    $_0d7a4c_data,%edx
		mov    %eax,0x000094(%esp)
		mov    %edx,0x0000b0(%esp)
		jmp    _04c10d_jump

	_04bcee_jump:
		imul   $0x000088,%edi,%edi
		mov    $0x000001,%ebx
		lea    0x0000e0(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    0x0000a8(%esp),%eax
		mov    %ebp,%ecx
		mov    $_0d7a4c_data,%esi
		call   _086255_func
		mov    0x0000e0(%esp),%dh
		add    %edi,%esi
		test   %dh,%dh
		jne    _04bd40_jump
		cmpb   $0x000000,_0c3373_data
		je     _04bf6e_jump

	_04bd40_jump:
		imul   $0x000088,0x00009c(%esp),%edi
		mov    0x0000a0(%esp),%eax
		mov    $0x000001,%ebx
		mov    _0d7a74_data(%edi),%edx
		mov    %ebp,%ecx
		call   _084bac_func
		mov    %ebx,%edx
		mov    %eax,_0d7a54_data(%edi)
		lea    0x0000e4(%esp),%eax
		call   _086255_func
		push   $_0a262c_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    $0x000001,%edx
		push   $0x00008f
		lea    0x0000f0(%esp),%eax
		mov    %ebp,%ecx
		push   %eax
		mov    _0d7a74_data(%edi),%ebx
		mov    _0d7a54_data(%edi),%eax
		call   _04dd40_func
		mov    $_0a262c_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000e4(%esp),%al
		mov    %ebp,%ecx
		call   _04df68_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    0x0000b0(%esp),%eax
		call   _086255_func
		xor    %edx,%edx
		mov    _0d7a90_data(%edi),%dx
		imul   $0x00000c,%edx,%edx
		mov    0x0000c8(%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		call   _084bac_func
		mov    $0x00000c,%edx
		mov    _0d7a90_data(%edi),%bx
		mov    %eax,_0d7a4c_data(%edi)
		call   _086255_func
		mov    $0x000001,%ebx
		mov    0x000094(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		mov    _0d7ad0_data(%edi),%cl
		test   %cl,%cl
		je     _04c0ac_jump
		xor    %edx,%edx
		mov    %cl,%dl
		imul   $0x00000c,%edx,%edx
		mov    0x0000c8(%esp),%eax
		call   _084bac_func
		mov    %eax,_0d7a50_data(%edi)
		xor    %eax,%eax
		xor    %esi,%esi
		jmp    _04bf4b_jump

	_04be4c_jump:
		mov    $0x000001,%ebx
		mov    _0d7a50_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _086255_func
		mov    $0x000001,%ebx
		mov    _0d7a50_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x00000a,%eax
		call   _086255_func
		mov    $0x000001,%ebx
		mov    _0d7a50_data(%edi),%eax
		mov    $0x000004,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000004,%eax
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x0000d0(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		xor    %edx,%edx
		mov    0x0000c8(%esp),%eax
		mov    0x0000d0(%esp),%dx
		call   _084bac_func
		mov    _0d7a50_data(%edi),%edx
		mov    %ebp,%ecx
		mov    %eax,(%edx,%esi,1)
		xor    %ebx,%ebx
		mov    _0d7a50_data(%edi),%eax
		mov    0x0000d0(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _086255_func
		mov    _0d7a50_data(%edi),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _04bf40_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x0000c8(%esp),%eax
		shl    $0x000002,%edx
		call   _084bac_func
		mov    _0d7a50_data(%edi),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		mov    %ebp,%ecx
		mov    _0d7a50_data(%edi),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _086255_func

	_04bf40_jump:
		mov    0x000098(%esp),%eax
		inc    %eax
		add    $0x00000c,%esi

	_04bf4b_jump:
		mov    %eax,0x000098(%esp)
		xor    %eax,%eax
		mov    0x000098(%esp),%ebx
		mov    _0d7ad0_data(%edi),%al
		cmp    %ebx,%eax
		jle    _04c0c2_jump
		jmp    _04be4c_jump

	_04bf6e_jump:
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %edx,_0d7a54_data(%edi)
		mov    %ebp,%eax
		mov    _0d7a74_data(%edi),%edx
		mov    %ebp,%ecx
		call   _085e56_func
		mov    $0x000001,%ebx
		lea    0x0000e4(%esp),%eax
		mov    %ebx,%edx
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000044(%esi),%eax
		mov    %ebp,%ecx
		call   _086255_func
		xor    %edx,%edx
		mov    _0d7a90_data(%edi),%dx
		imul   $0x00000c,%edx,%edx
		xor    %ebx,%ebx
		mov    %ebp,%eax
		mov    %ebx,_0d7a4c_data(%edi)
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		call   _085e56_func
		mov    $0x000001,%ebx
		lea    0x000084(%esi),%eax
		mov    %ebx,%edx
		call   _086255_func
		cmpb   $0x000000,_0d7ad0_data(%edi)
		je     _04c0ac_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		mov    %ecx,_0d7a50_data(%edi)
		jmp    _04c09b_jump

	_04c001_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x0000d4(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x0000cc(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000090(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x0000d0(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x0000d0(%esp),%dx
		call   _085e56_func
		cmpl   $0xffffffff,0x000090(%esp)
		je     _04c09a_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x0000cc(%esp),%dx
		mov    %ebp,%eax
		shl    $0x000002,%edx
		call   _085e56_func

	_04c09a_jump:
		inc    %esi

	_04c09b_jump:
		xor    %eax,%eax
		mov    _0d7ad0_data(%edi),%al
		cmp    %eax,%esi
		jge    _04c0c2_jump
		jmp    _04c001_jump

	_04c0ac_jump:
		mov    _0d7a50_data,%eax
		mov    %eax,_0d7a50_data(%edi)
		mov    _0d7ad0_data,%al
		mov    %al,_0d7ad0_data(%edi)

	_04c0c2_jump:
		mov    0x0000a8(%esp),%edx
		mov    0x000094(%esp),%ebx
		mov    0x0000b0(%esp),%ecx
		mov    0x00009c(%esp),%esi
		add    $0x000088,%edx
		add    $0x000088,%ebx
		add    $0x000088,%ecx
		inc    %esi
		mov    %edx,0x0000a8(%esp)
		mov    %ebx,0x000094(%esp)
		mov    %ecx,0x0000b0(%esp)
		mov    %esi,0x00009c(%esp)

	_04c10d_jump:
		mov    _0a5250_data,%edx
		mov    _0a5252_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00009c(%esp),%edi
		add    %edx,%eax
		cmp    %edi,%eax
		jg     _04bcee_jump
		mov    $0x000001,%ebx
		mov    $_0c33e6_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		xor    %eax,%eax
		mov    _0c33e5_data,%al
		mov    %eax,0x0000b4(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x0000b8(%esp)
		jmp    _04c23b_jump

	_04c15f_jump:
		mov    $0x000001,%ebx
		lea    0x0000ec(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		xor    %edx,%edx
		mov    0x0000ec(%esp),%dl
		mov    0x0000c8(%esp),%eax
		shl    $0x000002,%edx
		xor    %esi,%esi
		call   _084bac_func
		mov    0x0000b8(%esp),%edx
		xor    %edi,%edi
		mov    %edx,0x0000c4(%esp)
		mov    %eax,_0bf040_data(%edx)
		jmp    _04c20e_jump

	_04c1a6_jump:
		mov    $0x000001,%ebx
		lea    0x0000e8(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		xor    %edx,%edx
		mov    0x0000e8(%esp),%dl
		mov    0x0000c8(%esp),%eax
		shl    $0x000003,%edx
		call   _084bac_func
		mov    0x0000c4(%esp),%edx
		add    $0x000004,%edi
		mov    _0bf040_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%edi,1)
		mov    0x0000c4(%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0bf040_data(%eax),%eax
		mov    0x0000e8(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%edi,%eax,1),%eax
		inc    %esi
		call   _086255_func

	_04c20e_jump:
		xor    %eax,%eax
		mov    0x0000ec(%esp),%al
		cmp    %eax,%esi
		jl     _04c1a6_jump
		mov    0x0000b8(%esp),%eax
		mov    0x0000b4(%esp),%edx
		add    $0x000004,%eax
		inc    %edx
		mov    %eax,0x0000b8(%esp)
		mov    %edx,0x0000b4(%esp)

	_04c23b_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c33e6_data,%dl
		mov    _0c33e5_data,%al
		mov    0x0000b4(%esp),%edi
		add    %edx,%eax
		cmp    %edi,%eax
		jg     _04c15f_jump
		mov    $0x000001,%ebx
		lea    0x0000e4(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		push   $_0a2638_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    $0x000001,%ebx
		push   $0x000071
		lea    0x0000f0(%esp),%eax
		mov    $0x00001a,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    $_0c2d96_data,%eax
		call   _04dd40_func
		mov    $_0a2638_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000e4(%esp),%al
		call   _04df68_func
		mov    $_0c2e00_data,%eax
		call   _04a1dc_func
		mov    _0a5254_data,%ax
		mov    _0a5252_data,%dx
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,_0a5252_data
		mov    %eax,0x0000c0(%esp)

	_04c2d8_jump:
		mov    $0x00000d,%ebx
		mov    $0x000001,%edx
		lea    0x000080(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		xor    %ch,%ch
		lea    0x000080(%esp),%edi
		mov    %ch,0x00008d(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x0000c8(%esp),%eax
		lea    0x000001(%ecx),%edx
		call   _084bac_func
		mov    0x0000c0(%esp),%edx
		lea    0x000080(%esp),%esi
		mov    %eax,%edi
		mov    %eax,_0bf130_data(%edx)
		add    $0x000004,%edx
		push   %edi

	_04c333_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c34b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c333_jump

	_04c34b_jump:
		pop    %edi
		mov    %edx,0x0000c0(%esp)
		cmp    $0x000190,%edx
		jne    _04c2d8_jump
		mov    _0c33e5_data,%al
		mov    _0c33e6_data,%ah
		xor    %ecx,%ecx
		add    %al,%ah
		mov    %ecx,0x0000bc(%esp)
		mov    %ah,_0c33e6_data

	_04c37b_jump:
		mov    $0x00000d,%ebx
		mov    $0x000001,%edx
		lea    0x000080(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		xor    %dl,%dl
		lea    0x000080(%esp),%edi
		mov    %dl,0x00008d(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x0000c8(%esp),%eax
		lea    0x000001(%ecx),%edx
		call   _084bac_func
		mov    0x0000bc(%esp),%edx
		lea    0x000080(%esp),%esi
		mov    %eax,%edi
		mov    %eax,_0bef50_data(%edx)
		push   %edi

	_04c3d3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c3eb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c3d3_jump

	_04c3eb_jump:
		pop    %edi
		lea    0x000004(%edx),%esi
		mov    %esi,0x0000bc(%esp)
		cmp    $0x0000f0,%esi
		jne    _04c37b_jump
		mov    %ebp,%eax
		call   _086112_func
		mov    $0x000001,%eax
		add    $0x0000f4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04c41c_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		cmpb   $0x000001,_0a7c9d_data
		jne    _04c43e_jump
		mov    $0x011800,%edx
		mov    %ecx,%eax
		call   _084bac_func
		mov    %eax,_0c0fdc_data
		jmp    _04c446_jump

	_04c43e_jump:
		xor    %edx,%edx
		mov    %edx,_0c0fdc_data

	_04c446_jump:
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _04bae0_func
		mov    %ecx,%eax
		call   _03057c_func
		mov    $0x000001,%eax
		pop    %esi
		pop    %ecx
		ret    



_04c460_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000b4,%esp
		mov    %eax,0x00009c(%esp)
		mov    %ebx,0x000098(%esp)
		mov    $_0a261c_data,%eax
		mov    0x000096(%esp),%edi
		xor    %edx,%edx
		mov    $_0a2644_data,%ebx
		mov    %edx,0x00008c(%esp)
		mov    %edx,0x000088(%esp)
		call   _065510_func
		sar    $0x000010,%edi
		mov    $_0c2da3_data,%edx
		mov    %eax,%ecx
		mov    %edi,%eax
		call   _0655dc_func
		mov    %esp,%edi
		mov    %eax,%esi
		mov    $_0a2628_data,%edx
		push   %edi

	_04c4b9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c4d1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c4b9_jump

	_04c4d1_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    0x000098(%esp),%edx
		mov    %eax,%ebp
		dec    %edx
		mov    %eax,0x000094(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c3102_data,%edx
		add    %eax,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %dh,%dh
		mov    _0aa423_data(%eax),%dl
		shl    $0x000008,%edx
		mov    _0aa43c_data(%eax),%al
		xor    %ah,%ah
		add    %edx,%eax
		mov    %esp,%edx
		movswl %ax,%ebx
		mov    %ebp,%eax
		mov    %ebp,%ecx
		call   _04e1a4_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x00008c(%esp),%eax
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000088(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    $0x000001,%ebx
		lea    0x0000b0(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		push   $_0a2648_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    $0x000001,%ebx
		push   $0x000057
		lea    0x0000bc(%esp),%eax
		mov    $0x00000d,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    $_0c31a8_data,%eax
		call   _04dd40_func
		push   $_0a2648_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    $0x000001,%ebx
		push   $0x000057
		lea    0x0000bc(%esp),%eax
		mov    $0x000003,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    $_0c3347_data,%eax
		call   _04dd40_func
		mov    $_0a2648_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000b0(%esp),%al
		xor    %ecx,%ecx
		call   _04df68_func
		mov    $0x000001,%ebx
		lea    0x0000b0(%esp),%eax
		mov    %ecx,_0c31a8_data
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		push   $_0a2654_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    $0x000001,%ebx
		push   $0x0000a5
		lea    0x0000bc(%esp),%eax
		mov    $0x000018,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    $_0ae220_data,%eax
		call   _04dd40_func
		mov    $_0a2654_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000b0(%esp),%al
		call   _04df68_func
		mov    $0x000001,%ebx
		lea    0x0000b0(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		push   $_0a266c_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    $0x000001,%ebx
		push   $0x0000a5
		lea    0x0000bc(%esp),%eax
		mov    $0x000018,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    $_0ae658_data,%eax
		call   _04dd40_func
		mov    $_0a266c_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000b0(%esp),%al
		mov    %ebp,%ecx
		call   _04df68_func
		mov    $0x000001,%ebx
		lea    0x0000b0(%esp),%eax
		mov    %ebx,%edx
		call   _086255_func
		push   $_0a2684_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    $0x000001,%ebx
		push   $0x000000
		lea    0x0000bc(%esp),%eax
		mov    $0x000002,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    $_0c1124_data,%eax
		call   _04dd40_func
		push   $_0a2684_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    $0x000001,%ebx
		push   $0x000000
		lea    0x0000bc(%esp),%eax
		mov    $0x000002,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    $_0c1126_data,%eax
		call   _04dd40_func
		push   $_0a2684_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    $0x000300,%ebx
		push   $0x000000
		lea    0x0000bc(%esp),%eax
		mov    $0x000001,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    $_0b4328_data,%eax
		call   _04dd40_func
		push   $_0a2684_data
		lea    0x000004(%esp),%eax
		mov    $_0b4328_data,%esi
		push   %eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		push   $0x000000
		lea    0x0000bc(%esp),%eax
		mov    %ebx,%edx
		push   %eax
		mov    $_0c33d5_data,%eax
		mov    $_0b3d28_data,%edi
		call   _04dd40_func
		mov    $0x000300,%ecx
		xor    %ah,%ah
		mov    $0x000001,%dl
		mov    %ah,_0c33d3_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		mov    %dl,_0c33d3_data
		call   _03e8b8_func
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c1126_data,%dx
		mov    _0c1124_data,%ax
		imul   %edx,%eax
		mov    %eax,_0c1128_data
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x00009c(%esp),%eax
		add    %edx,%edx
		call   _084bac_func
		push   $_0a2684_data
		lea    0x000004(%esp),%edx
		push   %edx
		mov    %ebp,%ecx
		push   $0x000000
		lea    0x0000bc(%esp),%edx
		mov    _0c1128_data,%ebx
		push   %edx
		mov    $0x000006,%edx
		mov    %eax,_0c112c_data
		call   _04dd40_func
		mov    $_0a2684_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000b0(%esp),%al
		mov    %ebp,%ecx
		call   _04df68_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0c1120_data,%eax
		call   _086255_func
		mov    _0c1120_data,%esi
		cmp    $0xffffffff,%esi
		jne    _04c810_jump
		xor    %edi,%edi
		mov    %edi,_0c1120_data
		jmp    _04c845_jump

	_04c810_jump:
		mov    %esi,%eax
		shl    $0x000004,%eax
		add    %esi,%eax
		mov    $_0d7a4c_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    %edx,_0c1120_data
		cmpb   $0x000000,_0a7c9d_data
		jne    _04c845_jump
		cmpb   $0x000000,_0c336c_data
		je     _04c845_jump
		mov    0x00009c(%esp),%eax
		call   _061e60_func

	_04c845_jump:
		mov    _0a7c9d_data,%bh
		cmp    $0x000001,%bh
		je     _04c85a_jump
		mov    _0c336c_data,%cl
		test   %cl,%cl
		jne    _04c861_jump

	_04c85a_jump:
		mov    _0c31b0_data,%al
		jmp    _04c86e_jump

	_04c861_jump:
		test   %bh,%bh
		jne    _04c873_jump
		test   %cl,%cl
		je     _04c873_jump
		mov    _0c31b1_data,%al

	_04c86e_jump:
		mov    %al,_0c31af_data

	_04c873_jump:
		mov    _0a7c9d_data,%ah
		cmp    $0x000001,%ah
		jne    _04cac7_jump
		mov    0x000094(%esp),%ecx
		mov    $0x000001,%ebx
		lea    0x0000b0(%esp),%eax
		mov    %ebx,%edx
		call   _086255_func
		push   $_0a268c_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x00007d
		lea    0x0000bc(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    $0x000004,%edx
		lea    0x000094(%esp),%eax
		call   _04dd40_func
		mov    0x000084(%esp),%ebp
		test   %ebp,%ebp
		je     _04c8f0_jump
		mov    %ebp,%edx
		mov    0x00009c(%esp),%eax
		shl    $0x000008,%edx
		call   _084bac_func
		mov    %eax,_0c0fa0_data
		jmp    _04c8f6_jump

	_04c8f0_jump:
		mov    %ebp,_0c0fa0_data

	_04c8f6_jump:
		push   $_0a268c_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00008c(%esp),%ebx
		mov    0x00009c(%esp),%ecx
		push   $0x00007d
		lea    0x0000bc(%esp),%eax
		mov    $0x000001,%edx
		push   %eax
		shl    $0x000008,%ebx
		mov    _0c0fa0_data,%eax
		call   _04dd40_func
		push   $_0a268c_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x00007d
		lea    0x0000bc(%esp),%eax
		mov    $0x0004b0,%ebx
		push   %eax
		mov    $0x000004,%edx
		mov    $_0b0b48_data,%eax
		call   _04dd40_func
		mov    _0c0fa0_data,%edx
		xor    %eax,%eax

	_04c961_jump:
		mov    _0b0b48_data(%eax),%ebx
		add    $0x000004,%eax
		add    %edx,%ebx
		mov    %ebx,_0b0b44_data(%eax)
		cmp    $0x0012c0,%eax
		jne    _04c961_jump
		mov    $_0a268c_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000b0(%esp),%al
		mov    0x000094(%esp),%ecx
		call   _04df68_func
		mov    $0x000001,%ebx
		lea    0x0000b0(%esp),%eax
		mov    %ebx,%edx
		call   _086255_func
		push   $_0a269c_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x0000f3
		lea    0x0000bc(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    $0x000004,%edx
		lea    0x000090(%esp),%eax
		call   _04dd40_func
		mov    0x000080(%esp),%ecx
		test   %ecx,%ecx
		je     _04c9fc_jump
		mov    0x00009c(%esp),%eax
		mov    %ecx,%edx
		call   _084bac_func
		mov    %eax,_0c0f84_data
		jmp    _04ca02_jump

	_04c9fc_jump:
		mov    %ecx,_0c0f84_data

	_04ca02_jump:
		push   $_0a269c_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x0000f3
		lea    0x0000bc(%esp),%eax
		mov    0x00008c(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    _0c0f84_data,%eax
		call   _04dd40_func
		push   $_0a269c_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x0000f3
		lea    0x0000bc(%esp),%eax
		mov    $0x0004b0,%ebx
		push   %eax
		mov    $0x000004,%edx
		mov    $_0b1e08_data,%eax
		call   _04dd40_func
		mov    _0c0f84_data,%edx
		xor    %eax,%eax

	_04ca70_jump:
		mov    _0b1e08_data(%eax),%edi
		cmp    $0xffffffff,%edi
		je     _04ca86_jump
		lea    (%edi,%edx,1),%ebx
		mov    %ebx,_0b1e08_data(%eax)
		jmp    _04ca8e_jump

	_04ca86_jump:
		xor    %ebp,%ebp
		mov    %ebp,_0b1e08_data(%eax)

	_04ca8e_jump:
		add    $0x000004,%eax
		cmp    $0x0012c0,%eax
		jne    _04ca70_jump
		mov    $_0a268c_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000b0(%esp),%al
		call   _04df68_func
		mov    0x00008c(%esp),%edx
		mov    0x000094(%esp),%eax
		xor    %ebx,%ebx
		call   _085e56_func
		jmp    _04cc3b_jump

	_04cac7_jump:
		test   %ah,%ah
		jne    _04cc3b_jump
		mov    0x000088(%esp),%edx
		mov    0x000094(%esp),%eax
		xor    %ebx,%ebx
		mov    0x000094(%esp),%ecx
		call   _085e56_func
		mov    $0x000001,%ebx
		lea    0x0000b0(%esp),%eax
		mov    %ebx,%edx
		call   _086255_func
		push   $_0a26a8_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x0000ff
		lea    0x0000bc(%esp),%eax
		mov    $0x0004b0,%ebx
		push   %eax
		mov    $0x000004,%edx
		mov    $_0b1e08_data,%eax
		call   _04dd40_func
		push   $_0a26a8_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x0000ff
		lea    0x0000bc(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    $0x000004,%edx
		mov    $_0c0e6c_data,%eax
		call   _04dd40_func
		push   $_0a26a8_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x0000ff
		lea    0x0000bc(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    $0x000004,%edx
		mov    $_0c0e68_data,%eax
		call   _04dd40_func
		push   $_0a26a8_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x0000ff
		lea    0x0000bc(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    $0x000004,%edx
		lea    0x0000a0(%esp),%eax
		call   _04dd40_func
		mov    0x000090(%esp),%edx
		mov    0x00009c(%esp),%eax
		call   _084bac_func
		push   $_0a26a8_data
		lea    0x000004(%esp),%edx
		push   %edx
		mov    0x00009c(%esp),%ecx
		push   $0x0000ff
		lea    0x0000bc(%esp),%edx
		mov    $0x000001,%ebx
		push   %edx
		mov    0x0000a0(%esp),%edx
		mov    %eax,_0c0fd4_data
		call   _04dd40_func
		mov    $_0a26a8_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000b0(%esp),%al
		call   _04df68_func
		mov    $_0ae6d8_data,%edx
		mov    0x00009c(%esp),%eax
		mov    _0c0fd4_data,%ebx
		call   _0614d0_func

	_04cc3b_jump:
		mov    0x000094(%esp),%ecx
		mov    $0x000001,%ebx
		lea    0x0000b0(%esp),%eax
		mov    %ebx,%edx
		call   _086255_func
		push   $_0a26b4_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x000091
		lea    0x0000bc(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    $_0b9414_data,%eax
		call   _04dd40_func
		mov    $0x0173e0,%edx
		mov    0x00009c(%esp),%eax
		call   _084bac_func
		mov    $0x000578,%edx
		mov    %eax,_0b9410_data
		mov    0x00009c(%esp),%eax
		call   _084bac_func
		mov    $0x000578,%edx
		mov    %eax,_0b9418_data
		mov    0x00009c(%esp),%eax
		mov    $0x0173e0,%ebx
		call   _084bac_func
		mov    %eax,_0b9408_data
		xor    %edx,%edx
		mov    _0b9410_data,%eax
		call   _085360_func
		mov    $0x000579,%edx
		mov    0x00009c(%esp),%eax
		call   _084bac_func
		push   $_0a26b4_data
		lea    0x000004(%esp),%edx
		push   %edx
		mov    0x00009c(%esp),%ecx
		mov    _0b9412_data,%ebx
		push   $0x000091
		lea    0x0000bc(%esp),%edx
		sar    $0x000010,%ebx
		push   %edx
		mov    $0x000002,%edx
		mov    %eax,_0c1d74_data
		call   _04dd40_func
		mov    _0b9412_data,%ecx
		mov    $_0c11dc_data,%edi
		sar    $0x000010,%ecx
		mov    _0c1d74_data,%esi
		add    %ecx,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		push   $_0a26b4_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    $0x000088,%edx
		mov    0x00009c(%esp),%ecx
		push   $0x000091
		lea    0x0000bc(%esp),%eax
		mov    _0b9412_data,%ebx
		push   %eax
		sar    $0x000010,%ebx
		mov    _0b9410_data,%eax
		call   _04dd40_func
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		mov    %ecx,0x0000a4(%esp)
		mov    %ecx,0x0000a0(%esp)
		jmp    _04cf78_jump

	_04cd94_jump:
		mov    0x0000a0(%esp),%edx
		mov    _0c1050_data,%eax
		add    %edx,%eax
		mov    $_0a26b8_data,%esi
		mov    %eax,%edi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movb   $0x000001,0x00001e(%eax)
		mov    _0b9410_data,%eax
		movswl (%eax,%ebp,1),%edx
		imul   $0x000088,%edx,%edx
		mov    _0d7a4c_data(%edx),%edx
		mov    %edx,(%eax,%ebp,1)
		mov    0x000002(%eax,%ebp,1),%edx
		sar    $0x000010,%edx
		imul   $0x000088,%edx,%edx
		mov    _0d7a50_data(%edx),%edx
		mov    %edx,0x000004(%eax,%ebp,1)
		mov    0x000006(%eax,%ebp,1),%edx
		sar    $0x000010,%edx
		imul   $0x000088,%edx,%edx
		mov    _0d7a54_data(%edx),%edx
		mov    %edx,0x000008(%eax,%ebp,1)
		mov    0x00000a(%eax,%ebp,1),%edx
		sar    $0x000010,%edx
		mov    _0bf040_data(,%edx,4),%edx
		push   $_0a26b4_data
		mov    %edx,0x00000c(%eax,%ebp,1)
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x000091
		lea    0x0000bc(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    $0x000002,%edx
		lea    0x0000b8(%esp),%eax
		call   _04dd40_func
		push   $_0a26b4_data
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x000091
		lea    0x0000bc(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    $0x000002,%edx
		lea    0x0000bc(%esp),%eax
		call   _04dd40_func
		cmpw   $0x000000,0x0000a8(%esp)
		je     _04ced5_jump
		xor    %edx,%edx
		mov    0x00009c(%esp),%eax
		mov    0x0000a8(%esp),%dx
		call   _084bac_func
		mov    _0b9410_data,%edx
		push   $_0a26b4_data
		mov    %eax,0x000010(%edx,%ebp,1)
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x000091
		lea    0x0000bc(%esp),%eax
		xor    %ebx,%ebx
		push   %eax
		mov    %edx,%eax
		mov    0x0000b8(%esp),%bx
		mov    $0x000001,%edx
		mov    0x000010(%eax,%ebp,1),%eax
		call   _04dd40_func
		jmp    _04cee2_jump

	_04ced5_jump:
		mov    _0b9410_data,%eax
		movl   $0x000000,0x000010(%eax,%ebp,1)

	_04cee2_jump:
		mov    0x0000ac(%esp),%ebx
		test   %bx,%bx
		je     _04cf45_jump
		xor    %edx,%edx
		mov    %bx,%dx
		mov    0x00009c(%esp),%eax
		add    %edx,%edx
		call   _084bac_func
		mov    _0b9410_data,%edx
		push   $_0a26b4_data
		mov    %eax,0x000014(%edx,%ebp,1)
		lea    0x000004(%esp),%eax
		push   %eax
		mov    0x00009c(%esp),%ecx
		push   $0x000091
		lea    0x0000bc(%esp),%eax
		xor    %ebx,%ebx
		push   %eax
		mov    %edx,%eax
		mov    0x0000bc(%esp),%bx
		mov    $0x000002,%edx
		mov    0x000014(%eax,%ebp,1),%eax
		call   _04dd40_func
		jmp    _04cf52_jump

	_04cf45_jump:
		mov    _0b9410_data,%eax
		movl   $0x000000,0x000014(%eax,%ebp,1)

	_04cf52_jump:
		mov    0x0000a0(%esp),%ebx
		mov    0x0000a4(%esp),%ecx
		add    $0x000088,%ebp
		add    $0x00002a,%ebx
		inc    %ecx
		mov    %ebx,0x0000a0(%esp)
		mov    %ecx,0x0000a4(%esp)

	_04cf78_jump:
		mov    _0b9412_data,%eax
		mov    0x0000a4(%esp),%edi
		sar    $0x000010,%eax
		cmp    %edi,%eax
		jg     _04cd94_jump
		mov    $_0a26b4_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000b0(%esp),%al
		call   _04df68_func
		mov    0x000094(%esp),%eax
		call   _086112_func
		mov    $0x000001,%eax
		add    $0x0000b4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04cfcc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00009c,%esp
		mov    $_0a26c4_data,%eax
		mov    %esp,%edi
		call   _065510_func
		mov    %eax,%esi
		mov    $_0a2628_data,%edx
		push   %edi

	_04cfec_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04d004_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04cfec_jump

	_04d004_jump:
		pop    %edi
		mov    %esp,%eax
		mov    $0x000001,%ebx
		call   _04ddc8_func
		mov    %esp,%edx
		mov    %eax,%ecx
		mov    %eax,%ebp
		call   _04e0c0_func
		mov    $_0c33e6_data,%eax
		mov    %ebx,%edx
		call   _086255_func
		mov    _0c33e6_data,%al
		xor    %edx,%edx
		mov    %al,_0c33e5_data
		mov    %edx,0x000080(%esp)
		jmp    _04d0fa_jump

	_04d040_jump:
		mov    $0x000001,%ebx
		lea    0x000098(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		xor    %edx,%edx
		mov    0x000098(%esp),%dl
		mov    $_0c1020_data,%eax
		shl    $0x000002,%edx
		call   _084bac_func
		mov    0x000080(%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0bf040_data(,%edx,4)
		jmp    _04d0e6_jump

	_04d07f_jump:
		mov    $0x000001,%ebx
		lea    0x000090(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		xor    %edx,%edx
		mov    0x000090(%esp),%dl
		mov    $_0c1020_data,%eax
		shl    $0x000003,%edx
		call   _084bac_func
		mov    0x000080(%esp),%edx
		mov    _0bf040_data(,%edx,4),%edx
		mov    %eax,(%edx,%esi,1)
		add    $0x000004,%esi
		mov    0x000080(%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0bf040_data(,%eax,4),%eax
		mov    0x000090(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _086255_func

	_04d0e6_jump:
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		cmp    %eax,%edi
		jl     _04d07f_jump
		incl   0x000080(%esp)

	_04d0fa_jump:
		xor    %eax,%eax
		mov    0x000080(%esp),%ebx
		mov    _0c33e6_data,%al
		cmp    %ebx,%eax
		jg     _04d040_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0a5252_data,%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    _0a5252_data,%ax
		mov    $0x000001,%ecx
		mov    %ax,_0a5254_data
		mov    %ecx,0x000080(%esp)
		jmp    _04d4e9_jump

	_04d143_jump:
		imul   $0x000088,%edi,%eax
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		add    $_0d7a4c_data,%eax
		mov    %ebp,%ecx
		add    $0x00000c,%eax
		call   _086255_func
		imul   $0x000088,0x000080(%esp),%eax
		mov    _0d7a58_data(%eax),%ecx
		cmp    $0xffffffff,%ecx
		jne    _04d182_jump
		xor    %esi,%esi
		mov    %esi,_0d7a58_data(%eax)
		jmp    _04d18f_jump

	_04d182_jump:
		mov    _0bf040_data(,%ecx,4),%edx
		mov    %edx,_0d7a58_data(%eax)

	_04d18f_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0c0e70_data,%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0c0e7c_data,%eax
		mov    %ebp,%ecx
		call   _086255_func
		imul   $0x000088,0x000080(%esp),%eax
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		add    $_0d7a4c_data,%eax
		mov    %ebp,%ecx
		add    $0x000028,%eax
		call   _086255_func
		imul   $0x000088,0x000080(%esp),%edx
		mov    $_0c1010_data,%eax
		mov    _0d7a74_data(%edx),%edx
		call   _084bac_func
		mov    0x000080(%esp),%ebx
		mov    %eax,%edx
		imul   $0x000088,%ebx,%eax
		mov    %ebp,%ecx
		mov    _0d7a74_data(%eax),%ebx
		mov    %edx,_0d7a54_data(%eax)
		mov    %edx,%eax
		mov    $0x000001,%edx
		call   _086255_func
		mov    $0x000001,%ebx
		lea    0x000094(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		xor    %edx,%edx
		jmp    _04d260_jump

	_04d23c_jump:
		mov    _0d7a54_data(%eax),%esi
		mov    0x000094(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000094(%esp)
		mov    (%edx,%esi,1),%bh
		inc    %edx
		xor    $0x00008f,%bh
		mov    %bh,-0x000001(%edx,%esi,1)

	_04d260_jump:
		imul   $0x000088,0x000080(%esp),%eax
		cmp    _0d7a74_data(%eax),%edx
		jl     _04d23c_jump
		mov    $_0a26d0_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x000094(%esp),%al
		mov    %ebp,%ecx
		call   _04df68_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0c0e74_data,%eax
		call   _086255_func
		imul   $0x000088,0x000080(%esp),%eax
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		add    $_0d7a4c_data,%eax
		mov    %ebp,%ecx
		add    $0x000044,%eax
		call   _086255_func
		imul   $0x000088,0x000080(%esp),%edx
		mov    _0d7a90_data(%edx),%dx
		and    $0x00ffff,%edx
		imul   $0x00000c,%edx,%edx
		mov    $_0c1020_data,%eax
		call   _084bac_func
		mov    0x000080(%esp),%ebx
		mov    %eax,%edx
		imul   $0x000088,%ebx,%eax
		xor    %ebx,%ebx
		mov    %edx,_0d7a4c_data(%eax)
		mov    %ebp,%ecx
		mov    _0d7a90_data(%eax),%bx
		mov    %edx,%eax
		mov    $0x00000c,%edx
		call   _086255_func
		imul   $0x000088,0x000080(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebx,%edx
		add    $_0d7a4c_data,%eax
		mov    %ebp,%ecx
		add    $0x000084,%eax
		call   _086255_func
		imul   $0x000088,0x000080(%esp),%eax
		cmpb   $0x000000,_0d7ad0_data(%eax)
		je     _04d4da_jump
		xor    %edx,%edx
		mov    _0d7ad0_data(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    $_0c1020_data,%eax
		call   _084bac_func
		imul   $0x000088,0x000080(%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0d7a50_data(%edx)
		jmp    _04d4be_jump

	_04d37d_jump:
		mov    $0x000001,%ebx
		mov    _0d7a50_data(%eax),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _086255_func
		imul   $0x000088,0x000080(%esp),%eax
		mov    $0x000001,%ebx
		mov    _0d7a50_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000002,%edx
		add    $0x00000a,%eax
		call   _086255_func
		imul   $0x000088,0x000080(%esp),%eax
		mov    $0x000004,%edx
		mov    _0d7a50_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000001,%ebx
		add    $0x000004,%eax
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000088(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		xor    %edx,%edx
		mov    $_0c1020_data,%eax
		mov    0x000088(%esp),%dx
		call   _084bac_func
		imul   $0x000088,0x000080(%esp),%edx
		mov    _0d7a50_data(%edx),%edx
		mov    %eax,(%edx,%esi,1)
		imul   $0x000088,0x000080(%esp),%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0d7a50_data(%eax),%eax
		mov    0x000088(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _086255_func
		imul   $0x000088,0x000080(%esp),%eax
		mov    _0d7a50_data(%eax),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _04d4ba_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    $_0c1020_data,%eax
		shl    $0x000002,%edx
		call   _084bac_func
		imul   $0x000088,0x000080(%esp),%edx
		mov    _0d7a50_data(%edx),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		imul   $0x000088,0x000080(%esp),%eax
		xor    %ebx,%ebx
		mov    _0d7a50_data(%eax),%eax
		mov    $0x000004,%edx
		mov    %ebp,%ecx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _086255_func

	_04d4ba_jump:
		add    $0x00000c,%esi
		inc    %edi

	_04d4be_jump:
		imul   $0x000088,0x000080(%esp),%eax
		xor    %edx,%edx
		mov    _0d7ad0_data(%eax),%dl
		cmp    %edx,%edi
		jge    _04d4e2_jump
		jmp    _04d37d_jump

	_04d4da_jump:
		xor    %edi,%edi
		mov    %edi,_0d7a50_data(%eax)

	_04d4e2_jump:
		incl   0x000080(%esp)

	_04d4e9_jump:
		mov    _0a5250_data,%eax
		mov    0x000080(%esp),%edi
		sar    $0x000010,%eax
		cmp    %edi,%eax
		jg     _04d143_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0c0e78_data,%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000080(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    0x000080(%esp),%edx
		mov    %edx,%eax
		mov    $_0d7a4c_data,%esi
		shl    $0x000004,%eax
		mov    $_0b92f8_data,%edi
		add    %edx,%eax
		mov    $0x000088,%ecx
		shl    $0x000003,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		lea    0x000080(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    0x000080(%esp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0d7a4c_data(,%eax,8),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0c1114_data
		mov    _0d7a54_data(,%eax,8),%edx
		mov    %ebp,%ecx
		mov    %edx,_0c1118_data
		mov    _0d7a90_data(,%eax,8),%ax
		mov    $0x000004,%edx
		mov    %ax,_0c111c_data
		lea    0x000080(%esp),%eax
		call   _086255_func
		mov    0x000080(%esp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0d7a4c_data(,%eax,8),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0c1130_data
		mov    _0d7a54_data(,%eax,8),%edx
		mov    %ebp,%ecx
		mov    %edx,_0c1134_data
		mov    _0d7a90_data(,%eax,8),%ax
		mov    $0x000004,%edx
		mov    %ax,_0c1138_data
		lea    0x000080(%esp),%eax
		call   _086255_func
		mov    0x000080(%esp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0d7a4c_data(,%eax,8),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0b94a8_data
		mov    _0d7a54_data(,%eax,8),%edx
		mov    %ebp,%ecx
		mov    %edx,_0b94b0_data
		mov    _0d7a90_data(,%eax,8),%ax
		mov    $0x000004,%edx
		mov    %ax,_0b94ec_data
		lea    0x000080(%esp),%eax
		call   _086255_func
		mov    0x000080(%esp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0d7a4c_data(,%eax,8),%edx
		mov    _0d7a54_data(,%eax,8),%ebx
		mov    _0d7a90_data(,%eax,8),%cx
		mov    _0d7a58_data(,%eax,8),%esi
		mov    %edx,0x000084(%esp)
		mov    %ecx,0x00008c(%esp)
		mov    _0d7a50_data(,%eax,8),%edx
		mov    _0d7ad0_data(,%eax,8),%cl
		xor    %eax,%eax

	_04d6ab_jump:
		add    $0x000088,%eax
		mov    %edx,_0b6dc4_data(%eax)
		mov    %ebx,_0b6dc8_data(%eax)
		mov    %cl,_0b6e44_data(%eax)
		mov    0x000084(%esp),%edi
		mov    %esi,_0b6dcc_data(%eax)
		mov    %edi,_0b6dc0_data(%eax)
		mov    0x00008c(%esp),%edi
		mov    %di,_0b6e04_data(%eax)
		cmp    $0x001100,%eax
		jne    _04d6ab_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000080(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    0x000080(%esp),%edx
		mov    %edx,%eax
		mov    $_0d7a4c_data,%esi
		shl    $0x000004,%eax
		mov    $_0b9530_data,%edi
		add    %edx,%eax
		mov    $0x000088,%ecx
		shl    $0x000003,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		lea    0x000080(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    0x000080(%esp),%edx
		mov    %edx,%eax
		mov    $_0d7a4c_data,%esi
		shl    $0x000004,%eax
		mov    $_0b9380_data,%edi
		add    %edx,%eax
		mov    $0x000088,%ecx
		shl    $0x000003,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		lea    0x000080(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		mov    %ebp,%eax
		call   _086112_func
		mov    $0x000001,%eax
		add    $0x00009c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d7b0_func:
		push   %edx
		mov    $_0c102c_data,%eax
		mov    _0c1064_data,%edx
		call   _084e40_func
		mov    $_0c1010_data,%eax
		mov    _0c0ff4_data,%edx
		call   _084e40_func
		mov    $_0c0ff8_data,%eax
		mov    _0c0ff0_data,%edx
		call   _084e40_func
		mov    $_0c1020_data,%eax
		mov    _0c1060_data,%edx
		call   _084e40_func
		call   _04cfcc_func
		mov    $0x0004b0,%edx
		mov    $_0c1020_data,%eax
		call   _084bac_func
		mov    %eax,_0c0f7c_data
		mov    $_0c1010_data,%eax
		call   _0851e8_func
		mov    $0x000001,%eax
		pop    %edx
		ret    



_04d81c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000a4,%esp
		mov    %eax,0x000090(%esp)
		mov    $_0a26d8_data,%eax
		mov    %esp,%edi
		call   _065510_func
		mov    %eax,%esi
		mov    $_0a2628_data,%edx
		push   %edi

	_04d843_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04d85b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04d843_jump

	_04d85b_jump:
		pop    %edi
		mov    %esp,%eax
		mov    $0x000001,%ebx
		call   _04ddc8_func
		mov    %esp,%edx
		mov    %eax,%esi
		mov    %eax,%ebp
		call   _04e0c0_func
		mov    $_0d7a4c_data,%eax
		xor    %edx,%edx
		mov    %esi,%ecx
		mov    %dx,_0a5252_data
		xor    %edx,%edx
		add    $0x000028,%eax
		mov    %edx,0x000080(%esp)
		mov    $0x000004,%edx
		call   _086255_func
		mov    0x000090(%esp),%eax
		mov    _0d7a74_data,%edx
		call   _084bac_func
		mov    %esi,%ecx
		mov    $0x000001,%edx
		mov    _0d7a74_data,%ebx
		mov    %eax,_0d7a54_data
		call   _086255_func
		xor    %esi,%esi
		mov    _0d7a74_data,%ebx
		xor    %eax,%eax
		test   %ebx,%ebx
		jle    _04d8e3_jump

	_04d8d0_jump:
		mov    _0d7a54_data(%esi),%edx
		xorb   $0x00008f,(%edx,%eax,1)
		inc    %eax
		cmp    _0d7a74_data(%esi),%eax
		jl     _04d8d0_jump

	_04d8e3_jump:
		mov    $_0d7a4c_data,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		add    %esi,%edi
		mov    %ebp,%ecx
		lea    0x000044(%edi),%eax
		call   _086255_func
		xor    %edx,%edx
		mov    _0d7a90_data(%esi),%dx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    0x000090(%esp),%eax
		xor    %ebx,%ebx
		call   _084bac_func
		mov    $0x00000c,%edx
		mov    _0d7a90_data(%esi),%bx
		mov    %eax,_0d7a4c_data(%esi)
		call   _086255_func
		mov    $0x000001,%ebx
		lea    0x000084(%edi),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		xor    %edx,%edx
		mov    _0d7ad0_data(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000090(%esp),%eax
		call   _084bac_func
		mov    %eax,_0d7a50_data(%esi)
		mov    0x000080(%esp),%eax
		mov    %eax,%edi
		shl    $0x000004,%edi
		xor    %esi,%esi
		add    %eax,%edi
		mov    %esi,0x000084(%esp)
		shl    $0x000003,%edi
		jmp    _04daa1_jump

	_04d99b_jump:
		mov    $0x000001,%ebx
		mov    _0d7a50_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _086255_func
		mov    $0x000001,%ebx
		mov    _0d7a50_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x00000a,%eax
		call   _086255_func
		mov    $0x000001,%ebx
		mov    _0d7a50_data(%edi),%eax
		mov    $0x000004,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000004,%eax
		call   _086255_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000098(%esp),%eax
		mov    %ebp,%ecx
		call   _086255_func
		xor    %edx,%edx
		mov    0x000090(%esp),%eax
		mov    0x000098(%esp),%dx
		call   _084bac_func
		mov    _0d7a50_data(%edi),%edx
		mov    %ebp,%ecx
		mov    %eax,(%edx,%esi,1)
		xor    %ebx,%ebx
		mov    _0d7a50_data(%edi),%eax
		mov    0x000098(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _086255_func
		mov    _0d7a50_data(%edi),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _04da8f_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x000090(%esp),%eax
		shl    $0x000002,%edx
		call   _084bac_func
		mov    _0d7a50_data(%edi),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		mov    %ebp,%ecx
		mov    _0d7a50_data(%edi),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _086255_func

	_04da8f_jump:
		mov    0x000084(%esp),%ebx
		inc    %ebx
		add    $0x00000c,%esi
		mov    %ebx,0x000084(%esp)

	_04daa1_jump:
		xor    %eax,%eax
		mov    0x000084(%esp),%edx
		mov    _0d7ad0_data(%edi),%al
		cmp    %edx,%eax
		jg     _04d99b_jump
		mov    $0x000001,%ebx
		mov    $_0c33e6_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		xor    %ebx,%ebx
		mov    %ebx,0x000088(%esp)
		mov    %ebx,0x00008c(%esp)
		jmp    _04dbbc_jump

	_04dae0_jump:
		mov    $0x000001,%ebx
		lea    0x00009c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		xor    %edx,%edx
		mov    0x00009c(%esp),%dl
		mov    0x000090(%esp),%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		call   _084bac_func
		mov    0x00008c(%esp),%edx
		xor    %esi,%esi
		mov    %edx,0x000094(%esp)
		mov    %eax,_0bf040_data(%edx)
		jmp    _04db8f_jump

	_04db27_jump:
		mov    $0x000001,%ebx
		lea    0x0000a0(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _086255_func
		xor    %edx,%edx
		mov    0x0000a0(%esp),%dl
		mov    0x000090(%esp),%eax
		shl    $0x000003,%edx
		call   _084bac_func
		mov    0x000094(%esp),%edx
		add    $0x000004,%esi
		mov    _0bf040_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%esi,1)
		mov    0x000094(%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0bf040_data(%eax),%eax
		mov    0x0000a0(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _086255_func

	_04db8f_jump:
		xor    %eax,%eax
		mov    0x00009c(%esp),%al
		cmp    %eax,%edi
		jl     _04db27_jump
		mov    0x00008c(%esp),%esi
		mov    0x000088(%esp),%edi
		add    $0x000004,%esi
		inc    %edi
		mov    %esi,0x00008c(%esp)
		mov    %edi,0x000088(%esp)

	_04dbbc_jump:
		xor    %eax,%eax
		mov    0x000088(%esp),%ecx
		mov    _0c33e6_data,%al
		cmp    %ecx,%eax
		jg     _04dae0_jump
		mov    _0a5250_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    $_0d7a4c_data,%esi
		shl    $0x000004,%eax
		mov    $0x000088,%ecx
		add    %edx,%eax
		mov    $_0b9420_data,%edi
		shl    $0x000003,%eax
		mov    _0bf040_data,%edx
		add    %eax,%esi
		mov    %edx,_0d7a58_data(%eax)
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebp,%eax
		call   _086112_func
		mov    $0x000001,%eax
		add    $0x0000a4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04dc2c_func:
		call   _04d81c_func
		mov    $0x000001,%eax
		ret    



_04dc38_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,0x00001c(%esp)
		mov    %edx,%ebp
		mov    %ebx,0x000014(%esp)
		mov    %ecx,0x000018(%esp)
		mov    %edx,%eax
		call   _085309_func
		mov    0x00001c(%esp),%eax
		mov    $0x000009,%ebx
		call   _04e0c0_func
		lea    0x00000a(%esp),%eax
		xor    %edx,%edx
		call   _085360_func

	_04dc6c_jump:
		mov    $_0a26e4_data,%edx
		lea    0x00000a(%esp),%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _04dcd3_jump
		lea    0x00000a(%esp),%eax
		mov    %ebp,%edx
		call   _0853a0_func
		test   %eax,%eax
		je     _04dcd3_jump
		mov    0x00001c(%esp),%ecx
		mov    $0x000001,%ebx
		mov    $0x000013,%edx
		mov    %esp,%eax
		call   _086255_func
		test   %eax,%eax
		je     _04dcc6_jump
		xor    %edx,%edx

	_04dca8_jump:
		mov    (%esp),%al
		mov    0x00000a(%esp,%edx,1),%ah
		inc    %edx
		xor    %al,%ah
		mov    %ah,0x000009(%esp,%edx,1)
		cmp    $0x000009,%edx
		jl     _04dca8_jump
		lea    0x00000a(%esp),%eax
		call   _085309_func
		jmp    _04dc6c_jump

	_04dcc6_jump:
		lea    0x00000a(%esp),%edi
		mov    $_0a26e4_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		jmp    _04dc6c_jump

	_04dcd3_jump:
		mov    $_0a26e4_data,%edx
		lea    0x00000a(%esp),%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _04dd10_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		push   %ebp
		push   $_0a26ec_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func
		jmp    _04dd37_jump

	_04dd10_jump:
		mov    0x000014(%esp),%edx
		mov    0x000002(%esp),%eax
		mov    %eax,(%edx)
		mov    0x000018(%esp),%edx
		mov    0x000006(%esp),%eax
		mov    %eax,(%edx)
		mov    0x000030(%esp),%edx
		mov    0x000001(%esp),%al
		mov    %al,(%edx)
		mov    0x000034(%esp),%edx
		mov    (%esp),%al
		mov    %al,(%edx)

	_04dd37_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_04dd40_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    0x000018(%esp),%esi
		mov    %eax,0x000004(%esp)
		mov    %edx,%edi
		mov    %ebx,%ebp
		call   _086255_func
		mov    %eax,(%esp)
		cmp    %ebp,%eax
		jne    _04dd84_jump
		mov    %ebp,%ecx
		imul   %edi,%ecx
		mov    0x000004(%esp),%eax
		xor    %edx,%edx
		test   %ecx,%ecx
		jbe    _04ddba_jump

	_04dd6d_jump:
		mov    (%eax),%bl
		sub    %bl,(%esi)
		mov    0x00001c(%esp),%bl
		mov    (%eax),%bh
		inc    %eax
		xor    %bl,%bh
		inc    %edx
		mov    %bh,-0x000001(%eax)
		cmp    %ecx,%edx
		jae    _04ddba_jump
		jmp    _04dd6d_jump

	_04dd84_jump:
		test   %edi,%edi
		je     _04ddba_jump
		mov    $0x0000c8,%eax
		mov    0x000024(%esp),%ebx
		call   _084f3c_func
		push   %ebx
		mov    0x000024(%esp),%ecx
		push   %ecx
		push   $_0a2700_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_04ddba_jump:
		mov    (%esp),%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000010



_04ddc8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000084,%esp
		mov    %eax,%ebp
		mov    %edx,%ebx
		mov    %esp,%edi
		xor    %ah,%ah
		mov    %ebp,%esi
		mov    %ah,0x000080(%esp)
		push   %edi

	_04dde5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04ddfd_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04dde5_jump

	_04ddfd_jump:
		pop    %edi
		mov    %esp,%eax
		call   _085309_func
		mov    %edx,%eax
		call   _086bfe_func
		mov    $_0a2718_data,%edx
		mov    %esp,%eax
		xor    %ecx,%ecx
		call   _086c40_func
		mov    %eax,%edi
		test   %eax,%eax
		je     _04de40_jump
		mov    $0x000077,%dl
		mov    %ebx,%esi

	_04de24_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _04de3c_jump
		cmp    $0x000000,%al
		je     _04de3a_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _04de3c_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _04de24_jump

	_04de3a_jump:
		sub    %esi,%esi

	_04de3c_jump:
		test   %esi,%esi
		je     _04de58_jump

	_04de40_jump:
		mov    %esp,%eax
		mov    %ebx,%edx
		call   _085d60_func
		mov    %eax,%ecx
		test   %eax,%eax
		jne    _04df1f_jump
		jmp    _04df17_jump

	_04de58_jump:
		test   %edi,%edi
		je     _04ded0_jump
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a2718_data,%edx
		push   %edi

	_04de66_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04de7e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04de66_jump

	_04de7e_jump:
		pop    %edi
		mov    %esp,%eax
		call   _086c40_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _04dec8_jump
		mov    $_0a2720_data,%edi
		mov    $_0a2720_data,%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		call   _085309_func
		mov    %ebx,%edx
		mov    %esp,%eax
		call   _085d60_func
		mov    %eax,%ecx
		test   %eax,%eax
		jne    _04ded0_jump

	_04dec8_jump:
		movb   $0x000001,0x000080(%esp)

	_04ded0_jump:
		cmpb   $0x000000,0x000080(%esp)
		je     _04df1f_jump
		mov    %esp,%edi
		xor    %ah,%ah
		mov    %ebp,%esi
		mov    %ah,0x000080(%esp)
		push   %edi

	_04dee8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04df00_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04dee8_jump

	_04df00_jump:
		pop    %edi
		mov    %esp,%eax
		mov    %ebx,%edx
		call   _085309_func
		mov    %esp,%eax
		call   _085d60_func
		mov    %eax,%ecx
		test   %eax,%eax
		jne    _04df1f_jump

	_04df17_jump:
		movb   $0x000001,0x000080(%esp)

	_04df1f_jump:
		cmpb   $0x000000,0x000080(%esp)
		je     _04df58_jump
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%ebx
		mov    %esp,%eax
		push   %eax
		push   $_0a2728_data
		push   %ebx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		call   _020150_func
		mov    %ebx,%eax
		call   _0850d4_func
		xor    %eax,%eax
		jmp    _04df5a_jump

	_04df58_jump:
		mov    %ecx,%eax

	_04df5a_jump:
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04df68_func:
		push   %ecx
		mov    %edx,%ecx
		test   %al,%al
		je     _04df99_jump
		mov    $0x000064,%eax
		call   _084f3c_func
		push   %ebx
		push   %ecx
		push   $_0a273c_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_04df99_jump:
		pop    %ecx

	_04df9a_jump:
		ret    



_04df9c_func:
		cmp    %edx,%eax
		je     _04df9a_jump
		mov    $0x000064,%eax
		call   _084f3c_func
		push   %ecx
		push   %ebx
		push   $_0a2768_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		jmp    _0850d4_func



_04e0c0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    $0x000005,%ebx
		mov    $0x000001,%edx
		xor    %ah,%ah
		mov    %esi,%ecx
		mov    %ah,0x000014(%esp)
		mov    %esp,%eax
		call   _086255_func
		mov    $0x000005,%ebx
		mov    $0x000001,%edx
		lea    0x000008(%esp),%eax
		mov    %esi,%ecx
		call   _086255_func
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		lea    0x000010(%esp),%eax
		mov    %esi,%ecx
		call   _086255_func
		mov    %esp,%edx
		mov    $_0c2153_data,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _04e123_jump
		movb   $0x000001,0x000014(%esp)

	_04e123_jump:
		lea    0x000008(%esp),%edx
		mov    $_0c214e_data,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _04e153_jump
		cmpb   $0x000000,0x000014(%esp)
		jne    _04e153_jump
		lea    0x000008(%esp),%edx
		mov    $_0c2153_data,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _04e153_jump
		movb   $0x000001,0x000014(%esp)

	_04e153_jump:
		mov    0x000010(%esp),%eax
		cmp    _0c2158_data,%ax
		jge    _04e16c_jump
		cmpb   $0x000000,0x000014(%esp)
		jne    _04e16c_jump
		movb   $0x000001,0x000014(%esp)

	_04e16c_jump:
		cmpb   $0x000000,0x000014(%esp)
		je     _04e19c_jump
		mov    $0x000064,%eax
		call   _084f3c_func
		push   %edi
		push   $_0a2790_data
		push   %eax
		mov    %eax,%esi
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %esi,%eax
		call   _020150_func
		mov    %esi,%eax
		call   _0850d4_func

	_04e19c_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04e1a4_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,0x000014(%esp)
		mov    $0x000005,%ebx
		mov    $0x000001,%edx
		xor    %ah,%ah
		mov    %esi,%ecx
		mov    %ah,0x000018(%esp)
		mov    %esp,%eax
		call   _086255_func
		mov    $0x000005,%ebx
		mov    $0x000001,%edx
		lea    0x000008(%esp),%eax
		mov    %esi,%ecx
		call   _086255_func
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		lea    0x000010(%esp),%eax
		mov    %esi,%ecx
		call   _086255_func
		mov    %esp,%edx
		mov    $_0c2153_data,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _04e20a_jump
		movb   $0x000001,0x000018(%esp)

	_04e20a_jump:
		lea    0x000008(%esp),%edx
		mov    $_0c214e_data,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _04e23a_jump
		cmpb   $0x000000,0x000018(%esp)
		jne    _04e23a_jump
		lea    0x000008(%esp),%edx
		mov    $_0c2153_data,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _04e23a_jump
		movb   $0x000001,0x000018(%esp)

	_04e23a_jump:
		xor    %eax,%eax
		mov    0x00000e(%esp),%edx
		mov    0x000014(%esp),%ax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		je     _04e258_jump
		cmpb   $0x000000,0x000018(%esp)
		jne    _04e258_jump
		movb   $0x000001,0x000018(%esp)

	_04e258_jump:
		cmpb   $0x000000,0x000018(%esp)
		je     _04e288_jump
		mov    $0x000064,%eax
		call   _084f3c_func
		push   %edi
		push   $_0a27b8_data
		push   %eax
		mov    %eax,%esi
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %esi,%eax
		call   _020150_func
		mov    %esi,%eax
		call   _0850d4_func

	_04e288_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04e290_func:
		push   %ebx
		push   %ecx
		push   %edx
		testb  $0x000004,_0c3348_data
		je     _04e304_jump
		mov    _0c0ebc_data,%eax
		mov    %eax,_0c0e84_data
		mov    _0c0eb4_data,%eax
		mov    %eax,_0c0e80_data
		mov    _0c0eb0_data,%eax
		mov    %eax,_0c0e8c_data
		mov    _0c0eac_data,%eax
		mov    %eax,_0c0e88_data
		mov    _0c0e94_data,%eax
		mov    %eax,_0c0ebc_data
		mov    _0c0e90_data,%eax
		mov    %eax,_0c0eb4_data
		mov    _0c0ea4_data,%eax
		mov    _0c0ebc_data,%ecx
		mov    %eax,_0c0eb0_data
		mov    _0c0e98_data,%eax
		mov    _0c0eb4_data,%edx
		mov    %eax,_0c0eac_data
		mov    %eax,%ebx
		mov    _0c0eb0_data,%eax
		call   _017eca_func

	_04e304_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e308_func:
		push   %ebx
		push   %ecx
		push   %edx
		testb  $0x000004,_0c3348_data
		je     _04e376_jump
		mov    $0x000023,%ebx
		mov    _0c30fc_data,%dx
		mov    $0x00004d,%eax
		test   %dx,%dx
		je     _04e33d_jump
		mov    $0x000055,%eax
		xor    %ecx,%ecx
		mov    $0x000041,%ebx
		mov    %cx,_0c30fc_data

	_04e33d_jump:
		push   $0x000000
		movswl %bx,%ecx
		xor    %edx,%edx
		push   $0x0000ff
		movswl %ax,%ebx
		mov    $0x00000d,%eax
		call   _01aecc_func
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $0x0000ff
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax
		call   _01aecc_func

	_04e376_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e37c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c0e88_data,%edi
		mov    _0c0e84_data,%ebp
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    _0c307c_data,%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		sub    %eax,%edx
		add    %eax,%ebx
		sub    %eax,%esi
		add    %eax,%ecx
		cmp    %ebp,%esi
		jge    _04e3ab_jump
		mov    %ebp,%esi

	_04e3ab_jump:
		cmp    _0c0e80_data,%esi
		jle    _04e3b9_jump
		mov    _0c0e80_data,%esi

	_04e3b9_jump:
		cmp    _0c0e8c_data,%edx
		jge    _04e3c7_jump
		mov    _0c0e8c_data,%edx

	_04e3c7_jump:
		cmp    %edi,%edx
		jle    _04e3cd_jump
		mov    %edi,%edx

	_04e3cd_jump:
		cmp    _0c0e80_data,%ecx
		jle    _04e3db_jump
		mov    _0c0e80_data,%ecx

	_04e3db_jump:
		cmp    %ebp,%ecx
		jge    _04e3e1_jump
		mov    %ebp,%ecx

	_04e3e1_jump:
		cmp    %edi,%ebx
		jle    _04e3e7_jump
		mov    %edi,%ebx

	_04e3e7_jump:
		cmp    _0c0e8c_data,%ebx
		jge    _04e3f5_jump
		mov    _0c0e8c_data,%ebx

	_04e3f5_jump:
		mov    %ebp,_0c0e84_data
		mov    %edi,_0c0e88_data
		mov    %esi,_0c0e94_data
		mov    %ecx,_0c0e90_data
		mov    %ebx,_0c0e98_data
		mov    %edx,_0c0ea4_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04e420_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000005,%ecx
		xor    %ebx,%ebx
		mov    $0x00000f,%esi
		mov    %bx,_0c30ac_data
		mov    _0c0ebc_data,%ebx
		xor    %edi,%edi
		mov    %ebx,_0c0e84_data
		mov    _0c0eb4_data,%ebx
		mov    %cx,_0c30a2_data
		mov    %ebx,_0c0e80_data
		mov    _0c0eb0_data,%ebx
		mov    %si,_0c308a_data
		mov    %ebx,_0c0e8c_data
		mov    _0c0eac_data,%ebx
		mov    %di,_0c307e_data
		mov    %ebx,_0c0e88_data
		call   _04e37c_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04e488_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    %ecx,%esi
		mov    _0c307c_data,%ecx
		mov    _0c3088_data,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		add    %edx,%ecx
		mov    %eax,%edx
		sub    %ecx,%edx
		mov    %edx,0x000008(%esp)
		add    %eax,%ecx
		mov    %eax,%edx
		mov    0x000008(%esp),%edi
		sub    %ebx,%edx
		cmp    _0c0e8c_data,%edi
		jge    _04e4ca_jump
		mov    _0c0e8c_data,%edi
		mov    %edi,0x000008(%esp)

	_04e4ca_jump:
		mov    _0c0e88_data,%edi
		cmp    %edi,%edx
		jl     _04e4d6_jump
		mov    %edi,%edx

	_04e4d6_jump:
		mov    0x000008(%esp),%edi
		sub    %edi,%edx
		mov    %edx,0x000004(%esp)
		lea    (%eax,%ebx,1),%edx
		mov    _0c0e88_data,%eax
		cmp    %eax,%ecx
		jl     _04e4ee_jump
		mov    %eax,%ecx

	_04e4ee_jump:
		mov    _0c0e8c_data,%ebx
		cmp    %ebx,%edx
		jge    _04e4fa_jump
		mov    %ebx,%edx

	_04e4fa_jump:
		sub    %edx,%ecx
		mov    %ecx,(%esp)
		cmpl   $0x000000,0x000004(%esp)
		jle    _04e593_jump
		mov    %ebp,%eax
		mov    _0c0e84_data,%edi
		sub    %esi,%eax
		cmp    %edi,%eax
		jl     _04e54f_jump
		cmp    _0c0e80_data,%eax
		jge    _04e54f_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _04e546_jump
		rep stos %al,%es:(%edi)

	_04e546_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04e54f_jump
		rep stos %eax,%es:(%edi)

	_04e54f_jump:
		mov    _0c0e84_data,%edi
		lea    (%esi,%ebp,1),%eax
		cmp    %edi,%eax
		jl     _04e593_jump
		cmp    _0c0e80_data,%eax
		jge    _04e593_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _04e58a_jump
		rep stos %al,%es:(%edi)

	_04e58a_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04e593_jump
		rep stos %eax,%es:(%edi)

	_04e593_jump:
		cmpl   $0x000000,(%esp)
		jle    _04e61d_jump
		mov    %ebp,%eax
		mov    _0c0e84_data,%ebx
		sub    %esi,%eax
		cmp    %ebx,%eax
		jl     _04e5dd_jump
		cmp    _0c0e80_data,%eax
		jge    _04e5dd_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _04e5d4_jump
		rep stos %al,%es:(%edi)

	_04e5d4_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04e5dd_jump
		rep stos %eax,%es:(%edi)

	_04e5dd_jump:
		mov    _0c0e84_data,%edi
		add    %ebp,%esi
		cmp    %edi,%esi
		jl     _04e61d_jump
		cmp    _0c0e80_data,%esi
		jge    _04e61d_jump
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _04e614_jump
		rep stos %al,%es:(%edi)

	_04e614_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04e61d_jump
		rep stos %eax,%es:(%edi)

	_04e61d_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_04e628_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,0x000010(%esp)
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		jmp    _04e657_jump

	_04e641_jump:
		mov    0x000004(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%edx
		inc    %edi
		xor    %ebx,%ebx
		push   %eax
		mov    0x000014(%esp),%eax
		inc    %esi
		call   _04e488_func

	_04e657_jump:
		mov    _0c3088_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jle    _04e641_jump
		xor    %edi,%edi
		mov    (%esp),%esi
		mov    %edi,0x000014(%esp)
		test   %esi,%esi
		jl     _04e6da_jump
		mov    $0x000001,%edx
		lea    (%esi,%esi,1),%eax
		sub    %edx,%eax
		mov    %edx,0x000008(%esp)
		mov    %eax,0x00000c(%esp)

	_04e682_jump:
		mov    0x000004(%esp),%ebx
		mov    0x000010(%esp),%eax
		mov    %esi,%ecx
		push   %ebx
		mov    %ebp,%edx
		mov    %edi,%ebx
		call   _04e488_func
		mov    0x000004(%esp),%ecx
		mov    0x000010(%esp),%eax
		mov    %esi,%ebx
		push   %ecx
		mov    %ebp,%edx
		mov    %edi,%ecx
		call   _04e488_func
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%edx
		inc    %edi
		add    %eax,%edx
		lea    0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000008(%esp)
		cmp    %edx,%esi
		jg     _04e6d6_jump
		mov    0x00000c(%esp),%eax
		dec    %esi
		sub    %eax,%edx
		lea    -0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x00000c(%esp)

	_04e6d6_jump:
		cmp    %esi,%edi
		jle    _04e682_jump

	_04e6da_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_04e6e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		testb  $0x000004,_0c3348_data
		je     _04e7a1_jump
		mov    _0c307a_data,%edx
		mov    _0c307e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _04e711_jump
		neg    %eax

	_04e711_jump:
		mov    _0c3084_data,%edx
		mov    %eax,%ebx
		mov    _0c3082_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _04e72e_jump
		neg    %eax

	_04e72e_jump:
		cmp    %ebx,%eax
		jge    _04e734_jump
		mov    %ebx,%eax

	_04e734_jump:
		mov    _0c307c_data,%ebx
		add    $0x000006,%eax
		mov    _0c307e_data,%edx
		mov    %ax,_0c308a_data
		mov    _0c3084_data,%ax
		sar    $0x000010,%ebx
		mov    %ax,_0c3086_data
		mov    _0c3080_data,%ax
		sar    $0x000010,%edx
		mov    %ax,_0c307c_data
		mov    _0c3082_data,%eax
		sub    $0x000004,%ebx
		sar    $0x000010,%eax
		call   _04e628_func
		mov    _0c0e84_data,%eax
		mov    %eax,_0c0ebc_data
		mov    _0c0e80_data,%eax
		mov    %eax,_0c0eb4_data
		mov    _0c0e8c_data,%eax
		mov    %eax,_0c0eb0_data
		mov    _0c0e88_data,%eax
		mov    %eax,_0c0eac_data

	_04e7a1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e7a8_func:
		testb  $0x000004,_0c3348_data
		je     _04e7d9_jump
		mov    _0c0e84_data,%eax
		mov    %eax,_0c0ebc_data
		mov    _0c0e80_data,%eax
		mov    %eax,_0c0eb4_data
		mov    _0c0e8c_data,%eax
		mov    %eax,_0c0eb0_data
		mov    _0c0e88_data,%eax
		mov    %eax,_0c0eac_data

	_04e7d9_jump:
		ret    



_04e7dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0b9320_data,%cx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0b9370_data,%al
		mov    _0b9364_data,%dl
		mov    %eax,%esi
		add    %edx,%ecx
		mov    _0b9324_data,%dx
		mov    _0c3162_data,%ax
		add    %edx,%esi
		mov    %ecx,%edx
		sub    %eax,%edx
		sub    $0x000010,%esi
		add    $0x000008,%edx
		mov    %esi,%eax
		mov    %dx,_0c3084_data
		sub    _0c3166_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0c3080_data
		mov    _0c3084_data,%ax
		mov    %bx,_0c3096_data
		mov    %ax,_0c3086_data
		mov    _0c3080_data,%ax
		mov    %bx,_0c309a_data
		mov    %ax,_0c307c_data
		xor    %al,%al

	_04e853_jump:
		xor    %edx,%edx
		mov    %al,%dl
		inc    %al
		mov    %cx,_0af000_data(,%edx,2)
		mov    %si,_0aeff8_data(,%edx,2)
		cmp    $0x000004,%al
		jb     _04e853_jump
		mov    _0a7c9d_data,%ah
		mov    %cx,_0c3094_data
		xor    %ebx,%ebx
		mov    %si,_0c3092_data
		mov    %bx,_0c3098_data
		test   %ah,%ah
		jne    _04e8a4_jump
		mov    _0c307e_data,%edx
		mov    _0c3082_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _04e420_func

	_04e8a4_jump:
		mov    _0c3094_data,%cx
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e8b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpw   $0x000003,_0c3130_data
		je     _04eb60_jump
		cmpb   $0x000002,_0b9369_data
		jne    _04e8d8_jump
		cmpb   $0x000009,_0b9368_data
		je     _04e8df_jump

	_04e8d8_jump:
		mov    $0x000001,%eax
		jmp    _04e8e1_jump

	_04e8df_jump:
		xor    %eax,%eax

	_04e8e1_jump:
		test   %eax,%eax
		je     _04eb60_jump
		cmpb   $0x000003,_0b9369_data
		jne    _04e902_jump
		mov    _0b9368_data,%bl
		cmp    $0x000016,%bl
		je     _04e909_jump
		cmp    $0x000020,%bl
		je     _04e909_jump

	_04e902_jump:
		mov    $0x000001,%eax
		jmp    _04e90b_jump

	_04e909_jump:
		xor    %eax,%eax

	_04e90b_jump:
		test   %eax,%eax
		je     _04eb60_jump
		cmpw   $0x000036,_0c307e_data
		jge    _04e972_jump
		cmpw   $0x000000,_0c317e_data
		jne    _04e972_jump
		mov    _0c30aa_data,%eax
		sar    $0x000010,%eax
		mov    $0x000200,%edx
		call   _0626d0_func
		cwtl   
		sub    %eax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		add    %eax,%eax
		sar    $0x000009,%eax
		mov    _0c30ac_data,%di
		mov    %ax,_0c307e_data
		cmp    $0x000080,%di
		jge    _04e98f_jump
		mov    %edi,%eax
		add    $0x000002,%eax
		mov    %ax,_0c30ac_data
		jmp    _04e98f_jump

	_04e972_jump:
		mov    _0c334c_data,%ch
		cmp    $0x000001,%ch
		jb     _04e986_jump
		decw   _0c307e_data
		jmp    _04e98f_jump

	_04e986_jump:
		jae    _04e98f_jump
		incw   _0c307e_data

	_04e98f_jump:
		mov    _0c3096_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		mov    _0c1156_data,%dl
		mov    _0af000_data(%eax),%di
		mov    _0aeff8_data(%eax),%si
		test   %dl,%dl
		je     _04e9e0_jump
		mov    _0c1144_data,%edx
		xor    %ebx,%ebx
		mov    0x00006c(%edx),%bl
		mov    0x000028(%edx),%cx
		add    %ecx,%ebx
		mov    %bx,_0af000_data(%eax)
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%cx
		mov    0x00006d(%edx),%bl
		add    %ecx,%ebx
		mov    %bx,_0aeff8_data(%eax)
		jmp    _04ea81_jump

	_04e9e0_jump:
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _01e1b8_func
		mov    _0b9320_data,%bx
		xor    %edx,%edx
		mov    _0c3096_data,%eax
		mov    _0b9364_data,%dl
		sar    $0x000010,%eax
		add    %ebx,%edx
		mov    %dx,_0af000_data(,%eax,2)
		xor    %edx,%edx
		mov    _0b9324_data,%cx
		mov    _0b9370_data,%dl
		add    %ecx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0aeff8_data(,%eax,2)
		cmpw   $0x000001,0x000008(%esp)
		setg   %al
		mov    (%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0c3096_data,%eax
		sar    $0x000010,%eax
		mov    0x000004(%esp),%ebx
		mov    %dx,_0af000_data(,%eax,2)
		cmp    $0x000001,%bx
		setg   %al
		mov    0x00000c(%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0c3096_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0aeff8_data(,%eax,2)

	_04ea81_jump:
		mov    _0c3098_data,%ax
		inc    %eax
		mov    %eax,%edx
		xor    %ah,%dh
		mov    %ax,_0c3098_data
		and    $0x000003,%dl
		mov    _0c3094_data,%bx
		mov    %dx,_0c3098_data
		mov    %edi,%edx
		mov    _0c3096_data,%cx
		sub    %ebx,%edx
		sub    %cx,%dx
		je     _04eac4_jump
		test   %dx,%dx
		jle    _04eabf_jump
		mov    $0x000001,%edx
		jmp    _04eac4_jump

	_04eabf_jump:
		mov    $0xffffffff,%edx

	_04eac4_jump:
		mov    _0c3092_data,%di
		mov    %esi,%eax
		mov    _0c309a_data,%bx
		sub    %edi,%eax
		sub    %bx,%ax
		je     _04eaec_jump
		test   %ax,%ax
		jle    _04eae7_jump
		mov    $0x000001,%eax
		jmp    _04eaec_jump

	_04eae7_jump:
		mov    $0xffffffff,%eax

	_04eaec_jump:
		mov    _0c3096_data,%cx
		add    %edx,%ecx
		mov    %cx,_0c3096_data
		cmp    $0x000008,%cx
		jle    _04eb0b_jump
		movw   $0x000008,_0c3096_data

	_04eb0b_jump:
		mov    _0c3094_data,%edx
		sar    $0x000010,%edx
		cmp    $0xfffffff8,%edx
		jge    _04eb22_jump
		movw   $0x00fff8,_0c3096_data

	_04eb22_jump:
		mov    _0c309a_data,%bx
		add    %eax,%ebx
		mov    %bx,_0c309a_data
		cmp    $0x000008,%bx
		jle    _04eb41_jump
		movw   $0x000008,_0c309a_data

	_04eb41_jump:
		mov    _0c3098_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _04ec40_jump
		movw   $0x00fff8,_0c309a_data
		jmp    _04ec40_jump

	_04eb60_jump:
		cmpw   $0x000036,_0c307e_data
		jl     _04eb8b_jump
		mov    $0x000200,%eax
		call   _06a9a0_func
		mov    _0c307e_data,%cx
		sub    $0x000002,%ecx
		mov    %ax,_0c30ac_data
		mov    %cx,_0c307e_data

	_04eb8b_jump:
		mov    _0c30aa_data,%eax
		sar    $0x000010,%eax
		call   _0626d0_func
		movswl %ax,%edx
		mov    _0c30a0_data,%eax
		sar    $0x000010,%eax
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    %ax,_0c3096_data
		mov    _0c30aa_data,%eax
		sar    $0x000010,%eax
		call   _062710_func
		mov    _0c30a0_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    _0c334c_data,%cl
		mov    %ax,_0c309a_data
		test   %cl,%cl
		je     _04ebf8_jump
		mov    _0c307e_data,%si
		dec    %esi
		mov    %si,_0c307e_data
		test   %si,%si
		jge    _04ebf8_jump
		xor    %eax,%eax
		mov    %ax,_0c307e_data

	_04ebf8_jump:
		mov    $0x000036,%eax
		call   _06a9a0_func
		mov    _0c30ac_data,%dx
		add    %eax,%edx
		mov    %dx,_0c30ac_data
		cmp    $0x000200,%dx
		jle    _04ec40_jump
		mov    _0c30a2_data,%si
		xor    %ecx,%ecx
		inc    %esi
		mov    %cx,_0c30ac_data
		mov    %si,_0c30a2_data
		cmp    $0x00000a,%si
		jle    _04ec40_jump
		movw   $0x00000a,_0c30a2_data

	_04ec40_jump:
		mov    _0c3096_data,%ax
		mov    _0c3094_data,%dx
		mov    _0c3092_data,%bx
		add    %eax,%edx
		mov    _0c309a_data,%ax
		mov    _0c3162_data,%cx
		add    %eax,%ebx
		mov    %edx,%eax
		sub    %ecx,%eax
		mov    _0c3166_data,%si
		add    $0x000008,%eax
		mov    %dx,_0c3094_data
		mov    %ax,_0c3084_data
		mov    %ebx,%eax
		mov    %bx,_0c3092_data
		sub    %esi,%eax
		mov    _0a7c9d_data,%dh
		mov    %ax,_0c3080_data
		test   %dh,%dh
		jne    _04ecb3_jump
		mov    _0c307e_data,%edx
		mov    _0c3082_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _04e37c_func

	_04ecb3_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ecc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c1d74_data,%edi
		mov    0x000034(%eax),%si
		mov    %edi,%edx
		movswl %si,%eax
		mov    (%edx,%eax,2),%dx
		cmp    %dx,%si
		je     _04ed43_jump

	_04ecde_jump:
		movswl %dx,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ebx
		add    %ebx,%eax
		mov    0x000064(%eax),%bx
		cmp    $0x000107,%bx
		je     _04ed01_jump
		cmp    $0x00010c,%bx
		jne    _04ed35_jump

	_04ed01_jump:
		xor    %ebx,%ebx
		mov    _0b9320_data,%ecx
		mov    _0b9364_data,%bl
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x00006c(%eax),%cl
		sub    %ecx,%ebx
		mov    _0b9324_data,%ebp
		mov    %ebx,0x000028(%eax)
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0b9365_data,%bl
		mov    0x00006d(%eax),%cl
		add    %ebp,%ebx
		sub    %ecx,%ebx
		mov    %ebx,0x00002c(%eax)

	_04ed35_jump:
		movswl %dx,%eax
		mov    %edi,%edx
		mov    (%edx,%eax,2),%dx
		cmp    %dx,%si
		jne    _04ecde_jump

	_04ed43_jump:
		mov    %edi,_0c1d74_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ed50_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x00006c(%edx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0b9320_data,%cx
		mov    _0b9364_data,%al
		add    %ecx,%eax
		sub    %bx,%ax
		mov    %eax,%ebx
		je     _04edc5_jump
		lea    0x000085(%edx),%eax
		test   %bx,%bx
		setg   %bl
		and    $0x0000ff,%ebx
		and    $0x000001,%bl
		mov    (%eax),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%eax)
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%eax)
		call   _03b930_func
		test   %al,%al
		je     _04edc5_jump
		mov    0x000085(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		movswl %dx,%eax
		call   _06d0cc_func

	_04edc5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04edcc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x000071(%eax),%dl
		shl    $0x000002,%edx
		mov    0x00000c(%eax),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000070(%ecx),%dl
		mov    (%eax),%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		mov    0x000007(%eax),%dl
		test   $0x000040,%dl
		je     _04ee09_jump
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _04ed50_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _065368_func
		jmp    _04ee4c_jump

	_04ee09_jump:
		test   $0x000080,%dl
		jne    _04ee53_jump
		cmpb   $0x000000,0x000071(%ecx)
		jne    _04ee2e_jump
		cmpb   $0x00001a,0x000070(%ecx)
		jne    _04ee2e_jump
		mov    %ecx,%eax
		call   _04ed50_func
		mov    %ecx,%eax
		call   _062870_func
		mov    %al,0x000082(%ecx)

	_04ee2e_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _04ee3a_jump
		cmpb   $0x00000a,0x000070(%ecx)
		je     _04ee53_jump

	_04ee3a_jump:
		mov    %ecx,%eax
		call   _07c864_func
		mov    %ecx,%eax
		call   _07c830_func
		test   %al,%al
		je     _04ee53_jump

	_04ee4c_jump:
		mov    %ecx,%eax
		call   _04ecc0_func

	_04ee53_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ee58_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000071(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000070(%edx),%bl
		mov    (%eax),%eax
		shl    $0x000003,%ebx
		add    %ebx,%eax
		mov    0x000007(%eax),%bl
		test   $0x000080,%bl
		je     _04eea5_jump
		test   $0x000040,%bl
		jne    _04eee3_jump
		mov    %edx,%eax
		call   _01d740_func
		test   %al,%al
		je     _04eee3_jump
		mov    0x000085(%edx),%al
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%al
		mov    %al,0x000085(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_04eea5_jump:
		cmpb   $0x000000,0x000071(%edx)
		jne    _04eedc_jump
		cmpb   $0x00001a,0x000070(%edx)
		jne    _04eedc_jump
		cmpw   $0x000001,_0c309e_data
		jne    _04eed2_jump
		mov    %edx,%eax
		call   _062870_func
		mov    %al,0x000082(%edx)
		mov    %edx,%eax
		call   _04ed50_func
		pop    %edx
		pop    %ebx
		ret    

	_04eed2_jump:
		movb   $0x000000,0x000082(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_04eedc_jump:
		mov    %edx,%eax
		call   _07c91c_func

	_04eee3_jump:
		pop    %edx
		pop    %ebx
		ret    



_04eee8_func:
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x000071(%eax)
		jne    _04ef0b_jump
		cmpb   $0x000009,0x000070(%edx)
		jne    _04ef0b_jump
		mov    %edx,%eax
		call   _062870_func
		mov    %al,0x000082(%edx)
		mov    %edx,%eax
		call   _04ed50_func

	_04ef0b_jump:
		mov    %edx,%eax
		call   _07c864_func
		mov    %edx,%eax
		call   _07c830_func
		test   %al,%al
		je     _04ef24_jump
		mov    %edx,%eax
		call   _04ecc0_func

	_04ef24_jump:
		pop    %edx
		ret    



_04ef28_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000071(%eax),%ah
		test   %ah,%ah
		jne    _04ef60_jump
		cmpb   $0x000009,0x000070(%edx)
		jne    _04ef60_jump
		cmpw   $0x000001,_0c309e_data
		jne    _04ef58_jump
		mov    %edx,%eax
		call   _062870_func
		mov    %al,0x000082(%edx)
		mov    %edx,%eax
		call   _04ed50_func
		pop    %edx
		ret    

	_04ef58_jump:
		mov    %ah,0x000082(%edx)
		pop    %edx
		ret    

	_04ef60_jump:
		mov    %edx,%eax
		call   _07c91c_func
		pop    %edx
		ret    



_04ef70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c31ac_data,%edx
		sar    $0x000018,%edx
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		cmpb   $0x000000,_0c2e00_data(%eax)
		je     _04ef99_jump
		add    $_0c2e00_data,%eax
		call   _04a1dc_func

	_04ef99_jump:
		mov    _0a7c9d_data,%dh
		test   %dh,%dh
		jne    _04f03e_jump
		mov    _0c31af_data,%al
		mov    %dh,_0c3371_data
		cmp    _0c31b1_data,%al
		jne    _04f008_jump
		mov    $_0ae658_data,%ecx
		mov    _0ae658_data,%bh
		mov    %ecx,_0bf318_data
		test   %bh,%bh
		jne    _04f08d_jump
		mov    _0ae659_data,%cl
		test   %cl,%cl
		jne    _04efee_jump
		mov    _0c30b4_data,%ax
		mov    %ax,_0ae65c_data
		jmp    _04f08d_jump

	_04efee_jump:
		cmp    $0x000001,%cl
		jne    _04f08d_jump
		mov    _0c30ae_data,%ax
		mov    %ax,_0ae65c_data
		jmp    _04f08d_jump

	_04f008_jump:
		mov    $_0ae220_data,%ebx
		mov    _0ae221_data,%dh
		mov    %ebx,_0bf318_data
		test   %dh,%dh
		jne    _04f02b_jump
		mov    _0c30b4_data,%ax
		mov    %ax,_0ae224_data
		jmp    _04f08d_jump

	_04f02b_jump:
		cmp    $0x000001,%dh
		jne    _04f08d_jump
		mov    _0c30ae_data,%ax
		mov    %ax,_0ae224_data
		jmp    _04f08d_jump

	_04f03e_jump:
		cmp    $0x000001,%dh
		jne    _04f083_jump
		mov    _0c31af_data,%al
		mov    _0c31b1_data,%bh
		cmp    %bh,%al
		jne    _04f064_jump
		cmp    _0c31b0_data,%bh
		je     _04f064_jump
		mov    $_0a27e0_data,%eax
		call   _020150_func

	_04f064_jump:
		mov    $_0ae220_data,%edx
		mov    _0ae234_data,%ch
		mov    %edx,_0bf318_data
		cmp    $0x000001,%ch
		je     _04f08d_jump
		xor    %al,%al
		mov    %al,_0ae236_data
		jmp    _04f08d_jump

	_04f083_jump:
		mov    $_0a2808_data,%eax
		call   _020150_func

	_04f08d_jump:
		cmpb   $0x000000,_0a7c9d_data
		jne    _04f0c1_jump
		mov    _0c0f50_data,%esi
		mov    _0c0fc8_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c30b4_data,%bx
		push   %esi
		mov    _0c30ae_data,%dx
		mov    _0c31af_data,%al
		call   _07b550_func

	_04f0c1_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04f0c8_switch:
		.long   _04f0fd_case
		.long   _04f134_case
		.long   _04f16b_case
		.long   _04f178_case


	_04f0fd_case:
		xor    %edx,%edx
		mov    _0c3164_data,%eax
		mov    _0c30b4_data,%dx
		sar    $0x000010,%eax
		sub    $0x0000d8,%edx
		imul   %eax,%edx
		mov    _0c3148_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		mov    %cx,_0c30b0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04f134_case:
		mov    _0bf318_data,%eax
		mov    _0c3164_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000016(%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0c30b4_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edx,%ecx
		mov    %cx,_0c30b0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04f16b_case:
		xor    %ecx,%ecx
		mov    %cx,_0c30b0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04f178_case:
		mov    _0c30b4_data,%cx
		sub    $0x0000d8,%ecx
		mov    %cx,_0c30b0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f190_func:
		add    %al,(%eax)
		test   $0xb900cc00,%eax
		add    %al,%ah
		add    %dh,0x5c00b300(%ebx)
		add    %edi,(%ecx)
		add    %dl,%bh
		.byte 0x000000

_04f1a4_switch:
		.long   _0a2900_case
		.long   _0a2904_case
		.long   _0a2908_case
		.long   _0a290c_case




_04f1b4_func:
		insl   (%dx),%es:(%edi)
		popa   
		js     _04f1b8_jump

	_04f1b8_jump:
		xor    %al,%ss:(%eax)

	_04f1bb_jump:
		xor    $0xc08b0030,%eax



_04f1c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x0000a8,%esp
		lea    0x000080(%esp),%edi
		mov    $_04f190_func,%esi
		mov    $_0a2910_data,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _065510_func
		mov    %esp,%edi
		mov    %eax,%esi
		mov    $_0a291c_data,%edx
		push   %edi

	_04f1f0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04f208_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04f1f0_jump

	_04f208_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%esi
		mov    %eax,%edi
		lea    0x0000a4(%esp),%eax
		lea    0x000094(%esp),%ecx
		push   %eax
		lea    0x0000a4(%esp),%eax
		lea    0x00009c(%esp),%ebx
		push   %eax
		mov    $_0a2920_data,%edx
		mov    %esi,%eax
		call   _04dc38_func
		mov    0x000098(%esp),%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _085e56_func
		mov    0x000094(%esp),%eax
		call   _085294_func
		mov    %eax,_0aa90c_data
		test   %eax,%eax
		je     _04f294_jump
		push   $_0a2920_data
		lea    0x000004(%esp),%edx
		push   %edx
		xor    %edx,%edx
		mov    0x0000ac(%esp),%dl
		push   %edx
		lea    0x0000ac(%esp),%edx
		mov    0x0000a0(%esp),%ebx
		push   %edx
		mov    %esi,%ecx
		mov    $0x000001,%edx
		call   _04dd40_func
		jmp    _04f29e_jump

	_04f294_jump:
		mov    $_0a2928_data,%eax
		call   _020150_func

	_04f29e_jump:
		mov    $_0a2920_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x0000a0(%esp),%al
		call   _04df68_func
		mov    %edi,%eax
		call   _086112_func
		mov    _0aa90c_data,%eax
		mov    (%eax),%ax
		mov    %eax,0x00009c(%esp)
		xor    %eax,%eax
		mov    0x00009c(%esp),%ax
		shl    $0x000002,%eax
		call   _085294_func
		mov    %eax,_0aa908_data
		test   %eax,%eax
		je     _04f34f_jump
		xor    %edi,%edi
		jmp    _04f339_jump

	_04f2e8_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		jmp    _04f30c_jump

	_04f2ee_jump:
		xor    %ecx,%ecx
		mov    %ax,%cx
		mov    0x000002(%edx,%ecx,2),%dx
		and    $0x00ffff,%edx
		mov    0x00007e(%esp,%edx,2),%dx
		and    $0x00ffff,%edx
		inc    %eax
		add    %edx,%ebx

	_04f30c_jump:
		xor    %ecx,%ecx
		mov    _0aa90c_data,%edx
		mov    %di,%cx
		cmp    0x000002(%edx,%ecx,2),%ax
		jb     _04f2ee_jump
		xor    %esi,%esi
		mov    0x00009c(%esp),%si
		add    %esi,%esi
		add    %esi,%edx
		lea    (%edx,%ebx,1),%esi
		mov    _0aa908_data,%ebx
		inc    %edi
		mov    %esi,(%ebx,%ecx,4)

	_04f339_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x00009c(%esp),%dx
		mov    %di,%bx
		dec    %edx
		cmp    %edx,%ebx
		jl     _04f2e8_jump
		jmp    _04f359_jump

	_04f34f_jump:
		mov    $_0a2928_data,%eax
		call   _020150_func

	_04f359_jump:
		add    $0x0000a8,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f404_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		mov    $_0c2181_data,%edx
		mov    _0c0f44_data,%eax
		call   _049e38_func
		mov    $_0b4028_data,%edx
		mov    $_0c2181_data,%eax
		call   _04a0e0_func
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f438_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		mov    $_0c2193_data,%edx
		mov    _0c0f44_data,%eax
		call   _049e38_func
		mov    $_0b4028_data,%edx
		mov    $_0c2193_data,%eax
		call   _04a0e0_func
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f46c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04f1c0_func
		mov    _0aa908_data,%eax
		mov    0x000018(%eax),%eax
		mov    %eax,_0dd9c4_data
		call   _076430_func
		test   %al,%al
		je     _04f61e_jump
		cmpw   $0x000080,_0a7ce2_data
		jl     _04f4b8_jump
		mov    _0c301a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _04f4b8_jump
		mov    $0x000001,%bh
		xor    %cl,%cl
		mov    %bh,_0a7c9d_data
		mov    %cl,_0c336e_data

	_04f4b8_jump:
		cmpl   $0x0003e7,_0c0e58_data
		je     _04f51e_jump
		cmpb   $0x000000,_0c3372_data
		je     _04f51e_jump
		xor    %eax,%eax
		mov    _0c0e54_data,%ax
		call   _040a28_func
		mov    _0c0e5c_data,%eax
		call   _040a34_func
		mov    _0c0e64_data,%eax
		call   _040a3c_func
		mov    _0c0e60_data,%eax
		call   _040a44_func
		mov    _0c0e58_data,%eax
		call   _040a4c_func
		call   _04025c_func
		test   %eax,%eax
		je     _04f515_jump
		xor    %dl,%dl
		mov    %dl,_0c3372_data
		jmp    _04f52f_jump

	_04f515_jump:
		movb   $0x000001,_0c3372_data
		jmp    _04f52f_jump

	_04f51e_jump:
		mov    _0c0e58_data,%eax
		call   _040a4c_func
		xor    %al,%al
		mov    %al,_0c3372_data

	_04f52f_jump:
		call   _041b20_func
		call   _04250c_func
		test   %al,%al
		je     _04f5ff_jump
		cmpw   $0x000000,_0c301c_data
		jl     _04f5b1_jump
		mov    _0c3374_data,%al
		cmp    _0c3378_data,%al
		jne    _04f5b1_jump
		mov    _0c3376_data,%al
		cmp    _0c3375_data,%al
		jne    _04f5b1_jump
		mov    _0b5590_data,%dx
		test   %dx,%dx
		je     _04f57b_jump
		cmp    $0x000001,%dx
		jne    _04f5b1_jump

	_04f57b_jump:
		mov    _0b5592_data,%cx
		test   %cx,%cx
		je     _04f58d_jump
		cmp    $0x000001,%cx
		jne    _04f5b1_jump

	_04f58d_jump:
		mov    _0b5594_data,%di
		test   %di,%di
		je     _04f59f_jump
		cmp    $0x000001,%di
		jne    _04f5b1_jump

	_04f59f_jump:
		mov    _0b5596_data,%dx
		test   %dx,%dx
		je     _04f5cf_jump
		cmp    $0x000001,%dx
		je     _04f5cf_jump

	_04f5b1_jump:
		movl   $_04f438_func,_0dd9e8_data
		call   _022070_func
		call   _03ead0_func
		call   _054e38_func
		jmp    _04f6f4_jump

	_04f5cf_jump:
		mov    $0x000002,%bh
		push   $_0c3020_data
		mov    $_0c3026_data,%ecx
		mov    $_0c3024_data,%edx
		mov    $_0c301c_data,%eax
		push   $_0c3022_data
		mov    %bh,_0a7d24_data
		mov    $_0c301e_data,%ebx
		call   _0421fc_func
		jmp    _04f6f4_jump

	_04f5ff_jump:
		mov    _0c301a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _04f6f4_jump
		movw   $0x00fffe,_0c301c_data
		jmp    _04f6f4_jump

	_04f61e_jump:
		call   _04250c_func
		test   %al,%al
		je     _04f642_jump
		movl   $_04f438_func,_0dd9e8_data
		call   _022070_func
		call   _03ead0_func
		call   _054e38_func
		jmp    _04f64b_jump

	_04f642_jump:
		movw   $0x00ffff,_0c301c_data

	_04f64b_jump:
		mov    $0x00000d,%ebx
		mov    $0x000012,%ecx
		mov    $0x000001,%esi
		mov    $0x000014,%edi
		mov    $0x000012,%eax
		xor    %edx,%edx
		mov    %bx,_0af040_data
		mov    %cx,_0af042_data
		mov    %si,_0af044_data
		mov    %di,_0af046_data
		mov    %si,_0af038_data
		mov    %dx,_0af03a_data
		mov    $0x000002,%ebx
		mov    $0x000003,%ecx
		mov    %bx,_0af03e_data
		mov    %cx,_0af03c_data
		call   _070b70_func
		mov    _0af044_data,%eax
		sar    $0x000010,%eax
		call   _070b94_func
		xor    %ah,%ah
		mov    %ah,_0a7c9d_data
		call   _041b20_func
		cmpb   $0x000000,_0c3372_data
		je     _04f6f4_jump
		call   _040184_func
		test   %eax,%eax
		sete   %al
		mov    %al,_0c3372_data
		test   %al,%al
		je     _04f6f4_jump
		call   _04025c_func
		test   %eax,%eax
		je     _04f6f4_jump
		xor    %bl,%bl
		mov    %bl,_0c3372_data

	_04f6f4_jump:
		cmpb   $0x000000,_0c3372_data
		je     _04f707_jump
		call   _040538_func
		call   _070bbc_func

	_04f707_jump:
		call   _02f2cc_func
		mov    $_0aa908_data,%eax
		call   _0852ac_func
		mov    $_0aa90c_data,%eax
		call   _0852ac_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f728_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    $0x000002,%al
		jb     _04f753_jump
		jbe    _04f78f_jump
		cmp    $0x000050,%al
		jb     _04f74a_jump
		jbe    _04f7c4_jump
		cmp    $0x000064,%al
		je     _04f7ea_jump
		jmp    _04f805_jump

	_04f74a_jump:
		cmp    $0x000046,%al
		je     _04f79e_jump
		jmp    _04f805_jump

	_04f753_jump:
		test   %al,%al
		ja     _04f777_jump
		mov    $0x000001,%cl
		mov    $0x00003c,%eax
		xor    %edi,%edi
		mov    %cl,_0c33a2_data
		call   _03e364_func
		mov    %di,_0c30b8_data
		jmp    _04f805_jump

	_04f777_jump:
		mov    $0x000001,%bh
		mov    $0x000032,%eax
		xor    %esi,%esi
		mov    %bh,_0c33a2_data
		mov    %si,_0c30b8_data
		jmp    _04f800_jump

	_04f78f_jump:
		xor    %bl,%bl
		mov    $0x00003c,%eax
		mov    %bl,_0c33a2_data
		jmp    _04f800_jump

	_04f79e_jump:
		mov    $0x000001,%dh
		mov    $0x000046,%eax
		xor    %ecx,%ecx
		mov    %dh,_0c33a2_data
		mov    %cx,_0c30b8_data
		call   _03e364_func
		call   _060c8c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04f7c4_jump:
		mov    $0x000001,%dl
		mov    $0x000050,%eax
		xor    %ebx,%ebx
		mov    %dl,_0c33a2_data
		mov    %bx,_0c30b8_data
		call   _03e364_func
		call   _060c8c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04f7ea_jump:
		mov    $0x000001,%ah
		xor    %edx,%edx
		mov    %ah,_0c33a2_data
		mov    $0x000064,%eax
		mov    %dx,_0c30b8_data

	_04f800_jump:
		call   _03e364_func

	_04f805_jump:
		call   _060c8c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f810_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000000,_0a7c9d_data
		jne    _04f8db_jump
		mov    _0c31b3_data,%dl
		test   $0x000010,%dl
		jne    _04f831_jump
		test   $0x000002,%dl
		je     _04f87a_jump

	_04f831_jump:
		mov    _0aa4e2_data,%ecx
		mov    _0aa4da_data,%ebx
		mov    _0aa4d2_data,%edx
		mov    _0aa4ca_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _061b44_func
		mov    _0c0eb4_data,%edx
		mov    _0c0ebc_data,%ecx
		mov    _0c0eac_data,%ebx
		mov    _0c0eb0_data,%eax
		call   _017eca_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04f87a_jump:
		mov    _0a7cda_data,%eax
		sar    $0x000010,%eax
		mov    _0aa4e2_data(,%eax,2),%ecx
		mov    _0aa4da_data(,%eax,2),%ebx
		mov    _0aa4d2_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _0aa4ca_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _061b44_func
		mov    _0c0eb4_data,%edx
		mov    _0c0ebc_data,%ecx
		mov    _0c0eac_data,%ebx
		mov    _0c0eb0_data,%eax
		call   _017eca_func
		mov    _0c0f50_data,%edi
		call   _01696f_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04f8db_jump:
		call   _017e64_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f8e8_func:
		testb  $0x000001,_0c31b3_data
		jne    _04f8fa_jump
		cmpb   $0x000000,_0a7cdf_data
		je     _04f8fd_jump

	_04f8fa_jump:
		mov    $0x000001,%al
		ret    

	_04f8fd_jump:
		xor    %al,%al
		ret    



_04f900_func:
		push   %ebx
		push   %edx
		mov    _0bf2f4_data,%edx
		mov    _0dd9c8_data,%eax
		mov    0x0001d8(%edx),%ebx
		mov    %ebx,0x000038(%eax)
		mov    0x0001dc(%edx),%ebx
		mov    %ebx,0x00003c(%eax)
		mov    0x0001e0(%edx),%ebx
		mov    %ebx,0x000070(%eax)
		mov    0x0001d0(%edx),%ebx
		mov    %ebx,0x000074(%eax)
		mov    0x0001d4(%edx),%ebx
		mov    %ebx,0x0000e0(%eax)
		mov    0x0001cc(%edx),%ebx
		mov    %ebx,0x0000e4(%eax)
		mov    0x0001e4(%edx),%ebx
		mov    %ebx,0x0000e8(%eax)
		mov    0x0001e8(%edx),%ebx
		mov    %ebx,0x00011c(%eax)
		mov    0x0001bc(%edx),%ebx
		mov    %ebx,0x000120(%eax)
		mov    0x0001ec(%edx),%ebx
		mov    %ebx,0x000124(%eax)
		mov    0x0001b8(%edx),%ebx
		mov    %ebx,0x00012c(%eax)
		mov    0x0001c0(%edx),%ebx
		mov    %ebx,0x000134(%eax)
		mov    0x0001f0(%edx),%ebx
		mov    %ebx,0x00013c(%eax)
		mov    0x0001c4(%edx),%ebx
		mov    %ebx,0x000140(%eax)
		mov    0x0001f4(%edx),%ebx
		mov    %ebx,0x000144(%eax)
		mov    0x0001f8(%edx),%ebx
		mov    %ebx,0x000148(%eax)
		mov    0x0001c8(%edx),%edx
		mov    %edx,0x00014c(%eax)
		pop    %edx
		pop    %ebx
		ret    

_04f9d0_switch:
		.long   _04faa6_case
		.long   _04fc9f_case
		.long   _04fc9f_case
		.long   _04fad7_case
		.long   _04fb2b_case
		.long   _04fc9f_case
		.long   _04fc9f_case
		.long   _04fba7_case
		.long   _04fbd1_case
		.long   _04fbfb_case
		.long   _04fc24_case
		.long   _04fc4b_case




_04fa00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %ah,%ah
		xor    %bl,%bl
		xor    %cl,%cl
		mov    %ah,_0a525c_data
		mov    %bl,_0c33a9_data
		call   _01d718_func
		mov    %cl,_0c33cb_data
		xor    %bh,%bh
		xor    %al,%al
		mov    %bh,_0c33d3_data
		mov    %bx,_0c3088_data
		mov    %al,_0c3393_data
		mov    %al,_0c3398_data
		mov    %bl,_0c3397_data
		xor    %ch,%ch
		mov    %bh,_0c3387_data
		mov    %ch,_0c3392_data
		call   _0426a0_func
		call   _022070_func
		call   _055648_func
		call   _04f1c0_func
		mov    _0bf2fd_data,%cl
		xor    %edx,%edx
		test   %cl,%cl
		jne    _04fcc8_jump

	_04fa76_jump:
		cmpb   $0x000000,_0c33cb_data
		jne    _04fcc8_jump
		test   %dx,%dx
		jne    _04fcc8_jump
		mov    _0c3387_data,%al
		cmp    $0x00000b,%al
		ja     _04fc9f_case
		and    $0x0000ff,%eax
		jmp    *%cs:_04f9d0_switch(,%eax,4)

	_04faa6_case:
		mov    $_050070_func,%edi
		mov    _0aa908_data,%eax
		mov    $_04f404_func,%ebp
		mov    %edi,_0dd9d4_data
		mov    (%eax),%eax
		mov    %ebp,_0dd9e8_data
		mov    %eax,_0dd9c4_data
		call   _03ea80_func
		call   _055510_func
		jmp    _04fc9f_case

	_04fad7_case:
		mov    _0aa908_data,%eax
		mov    0x00001c(%eax),%eax
		mov    _0c3397_data,%bh
		mov    %eax,_0dd9c4_data
		test   %bh,%bh
		je     _04faf3_jump
		call   _074698_func

	_04faf3_jump:
		mov    _0c3398_data,%cl
		test   %cl,%cl
		jne    _04fb1f_jump
		cmpb   $0x000000,_0c3393_data
		jne    _04fc9f_case
		mov    $0x000001,%edx
		mov    $0x00003c,%eax
		mov    %cl,_0c33cb_data
		jmp    _04fc93_jump

	_04fb1f_jump:
		movb   $0x00000b,_0c3387_data
		jmp    _04fc9f_case

	_04fb2b_case:
		mov    _0af040_data,%eax
		sar    $0x000010,%eax
		call   _070b70_func
		mov    _0af042_data,%eax
		sar    $0x000010,%eax
		call   _070bb8_func
		mov    _0af03e_data,%eax
		sar    $0x000010,%eax
		call   _070bb4_func
		mov    _0af044_data,%eax
		sar    $0x000010,%eax
		call   _070b94_func
		mov    _0aa908_data,%eax
		mov    0x000004(%eax),%eax
		mov    %eax,_0dd9c4_data
		mov    $_0505a8_func,%eax
		mov    _0dd9e8_data,%ebx
		mov    %eax,_0dd9d4_data
		test   %ebx,%ebx
		je     _04fb95_jump
		mov    $0x000001,%bl
		mov    $_04f438_func,%esi
		mov    %bl,_0dda15_data
		mov    %esi,_0dd9e8_data
		jmp    _04fb9d_jump

	_04fb95_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0dd9e8_data

	_04fb9d_jump:
		call   _055510_func
		jmp    _04fc9f_case

	_04fba7_case:
		mov    $_0517a4_func,%edi
		mov    _0aa908_data,%eax
		xor    %ebp,%ebp
		mov    %edi,_0dd9d4_data
		mov    0x000008(%eax),%eax
		mov    %ebp,_0dd9e8_data
		mov    %eax,_0dd9c4_data
		call   _055510_func
		jmp    _04fc9f_case

	_04fbd1_case:
		mov    $_052a70_func,%ecx
		mov    _0aa908_data,%eax
		xor    %esi,%esi
		mov    %ecx,_0dd9d4_data
		mov    0x000014(%eax),%eax
		mov    %esi,_0dd9e8_data
		mov    %eax,_0dd9c4_data
		call   _055510_func
		jmp    _04fc9f_case

	_04fbfb_case:
		mov    _0aa908_data,%eax
		mov    0x00000c(%eax),%eax
		xor    %ebx,%ebx
		mov    %eax,_0dd9c4_data
		mov    $_053550_func,%eax
		mov    %ebx,_0dd9e8_data
		mov    %eax,_0dd9d4_data
		call   _055510_func
		jmp    _04fc9f_case

	_04fc24_case:
		mov    $_054254_func,%edi
		mov    _0aa908_data,%eax
		xor    %ebp,%ebp
		mov    %edi,_0dd9d4_data
		mov    0x000010(%eax),%eax
		mov    %ebp,_0dd9e8_data
		mov    %eax,_0dd9c4_data
		call   _055510_func
		jmp    _04fc9f_case

	_04fc4b_case:
		mov    _0aa908_data,%eax
		mov    $_056e08_func,%edx
		mov    _0dd9e8_data,%ebx
		mov    0x000020(%eax),%eax
		mov    %edx,_0dd9d4_data
		mov    %eax,_0dd9c4_data
		test   %ebx,%ebx
		je     _04fc77_jump
		movl   $_04f438_func,_0dd9e8_data

	_04fc77_jump:
		call   _03ead0_func
		call   _055510_func
		xor    %ah,%ah
		mov    $0x000001,%edx
		mov    %ah,_0c33cb_data
		mov    $0x00003c,%eax

	_04fc93_jump:
		mov    %dx,_0c3156_data
		call   _03fc90_func

	_04fc9f_case:
		call   _042498_func
		cmpb   $0x000000,_0c3393_data
		je     _04fcbb_jump
		xor    %bh,%bh
		mov    %bh,_0c3387_data
		mov    %bh,_0c3393_data

	_04fcbb_jump:
		cmpb   $0x000000,_0bf2fd_data
		je     _04fa76_jump

	_04fcc8_jump:
		mov    $_0aa908_data,%eax
		call   _0852ac_func
		mov    $_0aa90c_data,%eax
		call   _0852ac_func
		call   _0556a8_func
		call   _076074_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04fcf0_switch:
		.long   _04fe74_case
		.long   _04ff32_case
		.long   _04ff32_case
		.long   _04fecc_case
		.long   _04feeb_case
		.long   _04ff0a_case




_04fd08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    $0x000004,%bh
		mov    _0c33ce_data,%al
		mov    $0x000001,%cl
		mov    %al,(%esp)
		call   _01d718_func
		mov    %bh,_0c3387_data
		mov    %cl,_0dda15_data
		xor    %ah,%ah
		mov    _0a7cd4_data,%ch
		mov    %ah,_0c3392_data
		mov    %ah,_0c3393_data
		mov    %ah,_0c3398_data
		mov    %ah,_0c3397_data
		cmp    %cl,%ch
		jne    _04fdb5_jump
		cmpb   $0x000040,_0aa504_data
		jne    _04fdaa_jump
		mov    _0aa4e2_data,%ecx
		mov    _0aa4da_data,%ebx
		mov    _0aa4d2_data,%edx
		mov    _0aa4ca_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _061b44_func
		mov    _0c0eb4_data,%edx
		mov    _0c0ebc_data,%ecx
		mov    _0c0eac_data,%ebx
		mov    _0c0eb0_data,%eax
		call   _017eca_func
		incb   _0a7cd4_data
		jmp    _050053_jump

	_04fdaa_jump:
		mov    %ah,_0a7cd4_data
		jmp    _050053_jump

	_04fdb5_jump:
		cmp    $0x000002,%ch
		je     _04fdc6_jump
		cmp    _0a7c9d_data,%cl
		jne    _050053_jump

	_04fdc6_jump:
		mov    _0c31b3_data,%dl
		test   $0x000002,%dl
		jne    _04fdd6_jump
		test   $0x000010,%dl
		je     _04fde8_jump

	_04fdd6_jump:
		mov    _0a7cdc_data,%al
		xor    %edx,%edx
		mov    %al,0x000004(%esp)
		mov    %dx,_0a7cdc_data

	_04fde8_jump:
		mov    $0x000300,%ecx
		mov    $_0b4328_data,%esi
		mov    $_0dd6c0_data,%edi
		mov    $0x000001,%bl
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _0426a0_func
		call   _055648_func
		mov    %bl,_0a7cd3_data
		xor    %bh,%bh
		mov    %bh,_0a7cd4_data
		call   _04f1c0_func
		cmpb   $0x000000,_0c3372_data
		je     _04fe34_jump
		call   _071f30_func

	_04fe34_jump:
		mov    $0x000004,%bl
		mov    $_0505a8_func,%ebp
		mov    $_0517a4_func,%edi
		mov    $_052a70_func,%esi
		xor    %edx,%edx

	_04fe47_jump:
		cmp    _0c3387_data,%dl
		je     _04ff59_jump
		call   _042498_func
		mov    _0c3387_data,%al
		sub    $0x000004,%al
		cmp    $0x000005,%al
		ja     _04ff32_case
		and    $0x0000ff,%eax
		jmp    *%cs:_04fcf0_switch(,%eax,4)

	_04fe74_case:
		mov    _0af040_data,%eax
		sar    $0x000010,%eax
		call   _070b70_func
		mov    _0af042_data,%eax
		sar    $0x000010,%eax
		call   _070bb8_func
		mov    _0af03e_data,%eax
		sar    $0x000010,%eax
		call   _070bb4_func
		mov    _0af044_data,%eax
		sar    $0x000010,%eax
		call   _070b94_func
		mov    _0aa908_data,%eax
		mov    0x000004(%eax),%eax
		mov    %ebp,_0dd9d4_data
		mov    %eax,_0dd9c4_data
		mov    _0c3393_data,%al
		mov    %edx,_0dd9e8_data
		cmp    %al,%dl
		je     _04ff32_case
		jmp    _04ff2c_jump

	_04fecc_case:
		mov    _0aa908_data,%eax
		mov    _0c3393_data,%ch
		mov    0x000008(%eax),%eax
		mov    %edi,_0dd9d4_data
		mov    %eax,_0dd9c4_data
		cmp    %ch,%dl
		je     _04ff32_case
		jmp    _04ff2c_jump

	_04feeb_case:
		mov    _0aa908_data,%eax
		mov    _0c3393_data,%cl
		mov    0x000014(%eax),%eax
		mov    %esi,_0dd9d4_data
		mov    %eax,_0dd9c4_data
		cmp    %cl,%dl
		je     _04ff32_case
		jmp    _04ff2c_jump

	_04ff0a_case:
		mov    _0aa908_data,%eax
		mov    $_053550_func,%ecx
		mov    _0c3393_data,%bh
		mov    0x00000c(%eax),%eax
		mov    %ecx,_0dd9d4_data
		mov    %eax,_0dd9c4_data
		cmp    %bh,%dl
		je     _04ff32_case

	_04ff2c_jump:
		mov    %bl,_0c3387_data

	_04ff32_case:
		call   _055510_func
		cmp    _0c3393_data,%dl
		je     _04ff4e_jump
		cmp    _0c3387_data,%bl
		jne    _04ff4e_jump
		movb   $0x000001,_0aa503_data

	_04ff4e_jump:
		mov    %dl,_0c3393_data
		jmp    _04fe47_jump

	_04ff59_jump:
		xor    %cl,%cl
		mov    %cl,_0a7cd3_data
		call   _0556a8_func
		cmpb   $0x000000,_0a7c9d_data
		jne    _04ffcd_jump
		mov    _0a7cda_data,%eax
		sar    $0x000010,%eax
		mov    _0aa4e2_data(,%eax,2),%ecx
		mov    _0aa4da_data(,%eax,2),%ebx
		mov    _0aa4d2_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _0aa4ca_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _061b44_func
		mov    _0c0eb4_data,%edx
		mov    _0c0ebc_data,%ecx
		mov    _0c0eac_data,%ebx
		mov    _0c0eb0_data,%eax
		call   _017eca_func
		mov    _0c0f50_data,%edi
		call   _01696f_func
		jmp    _04fff0_jump

	_04ffcd_jump:
		cmpb   $0x000001,_0c336e_data
		jne    _04fff0_jump
		mov    _0c0fc0_data,%edx
		mov    _0c0fac_data,%ebx
		mov    _0c0fc8_data,%esi
		shr    $0x000002,%edx
		call   _0142d5_func

	_04fff0_jump:
		cmpb   $0x000000,_0c3372_data
		je     _04fffe_jump
		call   _071f44_func

	_04fffe_jump:
		mov    $0x000001,%ebx
		xor    %dl,%dl
		xor    %ecx,%ecx
		mov    %dl,_0c33a4_data
		xor    %edx,%edx
		mov    %bx,_0c3016_data
		mov    %edx,_0bf31c_data
		mov    _0c31b3_data,%dh
		mov    %cx,_0c3014_data
		test   $0x000002,%dh
		jne    _050033_jump
		test   $0x000010,%dh
		je     _05003f_jump

	_050033_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    %ax,_0a7cdc_data

	_05003f_jump:
		mov    $_0aa908_data,%eax
		call   _0852ac_func
		mov    $_0aa90c_data,%eax
		call   _0852ac_func

	_050053_jump:
		mov    _0c33cf_data,%al
		mov    %al,_0aa504_data
		mov    (%esp),%al
		mov    %al,_0c33ce_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050070_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %edx,%edx
		mov    _0dd9c4_data,%eax
		mov    %edx,_0dd9d0_data
		mov    %edx,_0dd9cc_data
		mov    (%eax),%dl
		mov    %dl,_0c33ce_data
		mov    0x000001(%eax),%dx
		mov    %dx,_0c3066_data
		mov    0x000003(%eax),%dx
		mov    %dx,_0c3070_data
		mov    0x000005(%eax),%dx
		mov    %dx,_0c3078_data
		mov    0x000007(%eax),%dx
		mov    $_0501f4_func,%ebx
		mov    %dx,_0c305e_data
		mov    0x000009(%eax),%dx
		mov    $_0502bc_func,%ecx
		mov    %dx,_0c3074_data
		mov    0x00000b(%eax),%dl
		mov    $_050530_func,%esi
		mov    %dl,_0aa501_data
		mov    0x00000c(%eax),%dx
		mov    %ebx,_0dd9e0_data
		mov    %dx,_0c302a_data
		mov    0x00000e(%eax),%dx
		mov    %ecx,_0dd9dc_data
		mov    %dx,_0c304c_data
		mov    0x000010(%eax),%dl
		mov    %esi,_0dd9e4_data
		cmp    $0x0000fa,%dl
		je     _050116_jump
		mov    %dl,_0dda14_data

	_050116_jump:
		mov    _0dd9c4_data,%eax
		mov    0x000013(%eax),%dx
		cmp    $0x0000fa,%dx
		je     _05012d_jump
		mov    %dx,_0c304e_data

	_05012d_jump:
		xor    %cl,%cl
		jmp    _0501c8_jump

	_050134_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		imul   $0x00000a,%edx,%ebp
		imul   $0x0000d8,%edx,%edx
		mov    _0dd9c4_data,%eax
		mov    0x000023(%eax,%ebp,1),%eax
		mov    _0bf2f4_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,4),%esi
		mov    $_0b8198_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%edi
		push   %edi

	_050160_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _050178_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _050160_jump

	_050178_jump:
		pop    %edi
		mov    _0c304e_data,%ax
		mov    %ax,_0b8268_data(%edx)
		mov    _0dd9c4_data,%eax
		mov    0x000029(%eax,%ebp,1),%si
		mov    %si,_0b826a_data(%edx)
		mov    0x00002b(%eax,%ebp,1),%ch
		mov    %ch,_0b826c_data(%edx)
		mov    0x00002c(%eax,%ebp,1),%ch
		mov    %ch,_0b826d_data(%edx)
		mov    0x00002d(%eax,%ebp,1),%ch
		mov    %ch,_0b826e_data(%edx)
		mov    0x00002e(%eax,%ebp,1),%al
		mov    %al,_0b826f_data(%edx)
		mov    %ebx,%eax
		inc    %cl
		call   _01f8d4_func

	_0501c8_jump:
		xor    %eax,%eax
		mov    _0c304c_data,%bx
		mov    %cl,%al
		cmp    %bx,%ax
		jl     _050134_jump
		xor    %ecx,%ecx
		mov    %cx,_0c3088_data
		mov    %cx,_0c306a_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0501f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		xor    %edx,%edx
		call   _03ee10_func
		mov    _0bf2cd_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		push   $0x000005
		shl    $0x000002,%eax
		mov    $0x000002,%ecx
		sub    %edx,%eax
		mov    $0x00001b,%ebx
		add    $_0bf2cf_data,%eax
		mov    %ecx,%edx
		call   _01b0f8_func
		xor    %ah,%ah
		mov    %ah,(%esp)
		jmp    _050294_jump

	_050234_jump:
		cmp    _0c3074_data,%ax
		jne    _050259_jump
		xor    %eax,%eax
		mov    (%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0b8198_data,%eax
		call   _055a20_func
		jmp    _050291_jump

	_050259_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		imul   $0x0000d8,%eax,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    _0b826f_data(%eax),%dl
		mov    _0b826c_data(%eax),%cl
		mov    _0b8268_data(%eax),%ebx
		push   %edx
		mov    _0b8266_data(%eax),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    $_0b8198_data,%eax
		call   _01b0f8_func

	_050291_jump:
		incb   (%esp)

	_050294_jump:
		xor    %eax,%eax
		mov    _0c304c_data,%dx
		mov    (%esp),%al
		cmp    %dx,%ax
		jl     _050234_jump
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0502ac_switch:
		.long   _05044b_case
		.long   _050480_case
		.long   _0504b3_case
		.long   _050510_case




_0502bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		call   _05598c_func
		cmpb   $0x000000,_0bf2fc_data
		je     _0502f5_jump
		mov    _0bf30c_data,%edx
		inc    %edx
		mov    _0bf308_data,%ebx
		mov    %edx,_0bf30c_data
		cmp    %ebx,%edx
		jb     _0502f5_jump
		cmpb   $0x000000,_0c33cb_data
		jne    _0502f5_jump
		call   _030050_jump

	_0502f5_jump:
		call   _0427d4_func
		test   %al,%al
		je     _05031a_jump
		mov    $0x000001,%eax
		call   _042488_func
		xor    %eax,%eax
		call   _055dd4_func
		test   %al,%al
		je     _05031a_jump
		movb   $0x000001,_0c3393_data

	_05031a_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _05039a_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _05035d_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _05039a_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _05039a_jump

	_05035d_jump:
		mov    $0x000044,%eax
		call   _071754_func
		xor    %eax,%eax
		mov    _0c3074_data,%bx
		mov    _0aa501_data,%al
		cmp    %bx,%ax
		jge    _050386_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0c3074_data
		jmp    _050392_jump

	_050386_jump:
		mov    _0c302a_data,%ax
		mov    %ax,_0c3074_data

	_050392_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0bf30c_data

	_05039a_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _05040a_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _0503d9_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _05040a_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _05040a_jump

	_0503d9_jump:
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3074_data,%ax
		cmp    _0c302a_data,%ax
		jge    _0503f5_jump
		inc    %eax
		jmp    _0503fc_jump

	_0503f5_jump:
		xor    %eax,%eax
		mov    _0aa501_data,%al

	_0503fc_jump:
		mov    %ax,_0c3074_data
		xor    %esi,%esi
		mov    %esi,_0bf30c_data

	_05040a_jump:
		call   _0426b0_func
		test   %al,%al
		je     _050522_jump
		cmpb   $0x000000,_0c33ce_data
		je     _050522_jump
		mov    $0x000045,%eax
		call   _071754_func
		mov    _0c3074_data,%ax
		cmp    $0x000003,%ax
		ja     _050522_jump
		xor    %edx,%edx
		mov    %ax,%dx
		jmp    *%cs:_0502ac_switch(,%edx,4)

	_05044b_case:
		mov    $0x000001,%esi
		mov    _0dd9c4_data,%ebx
		xor    %ebp,%ebp
		movswl %ax,%edx
		mov    %ebp,_0bf30c_data
		mov    0x00009e(%edx,%ebx,1),%al
		mov    %si,_0c306a_data
		mov    %al,_0c3387_data
		call   _0559d0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050480_case:
		mov    _0dd9c4_data,%edx
		cwtl   
		xor    %edi,%edi
		mov    $0x000001,%ecx
		mov    %edi,_0bf30c_data
		mov    0x00009e(%edx,%eax,1),%al
		mov    %cx,_0c306a_data
		mov    %al,_0c3387_data
		call   _0559d0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0504b3_case:
		mov    $0x000001,%al
		mov    $0x000004,%ebx
		xor    %edx,%edx
		mov    %al,_0c3396_data
		mov    %dx,_0c30e2_data
		mov    $_0c219c_data,%edx
		mov    $_0c0ff8_data,%eax
		mov    %bx,_0c30e8_data
		call   _03fcac_func
		call   _01f47c_func
		call   _03ead0_func
		call   _03ea80_func
		call   _02f224_func
		mov    $_0c0ff8_data,%eax
		call   _085244_func
		xor    %ah,%ah
		mov    %ah,_0c3396_data
		call   _0559d0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050510_case:
		xor    %eax,%eax
		call   _055dd4_func
		test   %al,%al
		je     _050522_jump
		movb   $0x000001,_0c3393_data

	_050522_jump:
		call   _0559d0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050530_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0c3393_data
		je     _050575_jump
		mov    $0x000001,%bh
		mov    _0dd9e0_data,%edx
		mov    %bh,_0c33cb_data
		mov    %bh,_0c33c5_data
		test   %edx,%edx
		je     _0505a5_jump
		call   *_0dd9e0_data
		call   _018b0f_func
		call   _018aff_func
		mov    $0x000001,%eax
		call   _02211c_func
		call   _03ba10_func
		pop    %edx
		pop    %ebx
		ret    

	_050575_jump:
		cmpb   $0x000000,_0bf2fd_data
		jne    _0505a5_jump
		mov    _0bf300_data,%eax
		mov    _0c338f_data,%dh
		mov    %eax,_0bf308_data
		cmp    $0x000002,%dh
		jne    _05059b_jump
		xor    %bl,%bl
		mov    %bl,_0c338f_data

	_05059b_jump:
		call   _03ead0_func
		call   _03ea80_func

	_0505a5_jump:
		pop    %edx
		pop    %ebx
		ret    



_0505a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_050798_func,%edx
		mov    _0dd9c4_data,%eax
		mov    %edx,_0dd9d0_data
		mov    (%eax),%dx
		mov    %dx,_0c3072_data
		mov    0x000002(%eax),%dx
		mov    %dx,_0c305a_data
		mov    0x000004(%eax),%dx
		mov    %dx,_0c306c_data
		mov    0x000006(%eax),%dx
		mov    %dx,_0c307a_data
		mov    0x000008(%eax),%dl
		mov    %dl,_0c33ce_data
		mov    0x000009(%eax),%dx
		mov    %dx,_0c3066_data
		mov    0x00000b(%eax),%dx
		mov    %dx,_0c3070_data
		mov    0x00000d(%eax),%dx
		mov    $_050d94_func,%ebx
		mov    %dx,_0c3078_data
		mov    0x00000f(%eax),%dx
		mov    %ebx,_0dd9e0_data
		mov    %dx,_0c305e_data
		mov    0x000018(%eax),%dl
		xor    %ebx,%ebx
		mov    %dl,_0dda14_data
		mov    %dl,%bl
		mov    0x00001b(%eax),%dx
		sub    %ebx,%edx
		mov    $_051268_func,%ecx
		mov    %dx,_0c304e_data
		mov    0x000011(%eax),%dx
		mov    $_05168c_func,%esi
		mov    %dx,_0c3068_data
		mov    0x000013(%eax),%dl
		mov    %ecx,_0dd9dc_data
		mov    %dl,_0aa501_data
		mov    0x000014(%eax),%dx
		mov    0x000016(%eax),%ax
		mov    %esi,_0dd9e4_data
		mov    %ax,_0c304c_data
		mov    _0a7cd3_data,%ah
		mov    %dx,_0c302a_data
		test   %ah,%ah
		jne    _0506b8_jump
		mov    _0c3068_data,%dx
		mov    _0c302a_data,%bx
		mov    _0c304c_data,%cx
		dec    %edx
		dec    %ebx
		dec    %ecx
		mov    %dx,_0c3068_data
		mov    %bx,_0c302a_data
		mov    %cx,_0c304c_data

	_0506b8_jump:
		mov    _0dd9c4_data,%eax
		mov    0x00001f(%eax),%ebx
		mov    0x00001d(%eax),%edx
		sar    $0x000010,%ebx
		mov    0x00001b(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _055854_func
		mov    _0c3062_data,%si
		mov    _0c309c_data,%ax
		mov    _0a7cd3_data,%dl
		inc    %esi
		sub    $0x000003,%eax
		mov    %si,_0c3062_data
		test   %dl,%dl
		jne    _050706_jump
		mov    %ax,_0c309c_data
		subw   $0x000002,_0c3090_data
		jmp    _05071b_jump

	_050706_jump:
		mov    _0c3090_data,%di
		inc    %edi
		mov    %ax,_0c309c_data
		mov    %di,_0c3090_data

	_05071b_jump:
		cmpb   $0x000000,_0aa503_data
		je     _050748_jump
		xor    %eax,%eax
		mov    _0dd9f1_data,%al
		mov    %ax,_0c0f66_data
		xor    %eax,%eax
		xor    %cl,%cl
		mov    _0dd9f0_data,%al
		mov    %cl,_0aa503_data
		mov    %ax,_0c0f64_data
		jmp    _05077f_jump

	_050748_jump:
		cmpw   $0x000000,_0af040_data
		je     _05076b_jump
		cmpb   $0x000000,_0a7d28_data
		je     _05076b_jump
		cmpb   $0x000000,_0c337f_data
		jne    _05076b_jump
		mov    $0x000001,%eax
		jmp    _05076d_jump

	_05076b_jump:
		xor    %eax,%eax

	_05076d_jump:
		mov    %ax,_0c0f64_data
		mov    _0af042_data,%ax
		mov    %ax,_0c0f66_data

	_05077f_jump:
		xor    %ch,%ch
		xor    %ebx,%ebx
		mov    %ch,_0a7d22_data
		mov    %bx,_0c306a_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050798_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    _0bf2f4_data,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		mov    0x000050(%eax),%ebp
		mov    0x000054(%eax),%eax
		lea    0x000004(%esp),%edx
		mov    %eax,(%esp)
		mov    $0x000002,%eax
		call   _01f3b8_func
		mov    _0dd9c4_data,%eax
		mov    0x00008d(%eax),%dl
		mov    %dl,_0b8a04_data
		mov    0x00008e(%eax),%dl
		mov    %dl,_0b8a05_data
		mov    0x00008f(%eax),%dl
		mov    %dl,_0b8a06_data
		mov    0x000090(%eax),%al
		xor    %edx,%edx
		mov    %al,_0b8a07_data
		mov    _0aa501_data,%dl
		jmp    _0508ef_jump

	_050806_jump:
		imul   $0x00000a,%ebx,%esi
		mov    _0dd9c4_data,%eax
		mov    0x00002d(%esi,%eax,1),%ax
		test   %ax,%ax
		jl     _050852_jump
		cmp    $0x0000be,%ax
		jge    _050852_jump
		imul   $0x0000d8,%ebx,%ebx
		movswl %ax,%esi
		mov    _0bf2f4_data,%eax
		mov    $_0b8198_data,%edi
		mov    (%eax,%esi,4),%esi
		add    %ebx,%edi
		push   %edi

	_050837_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05084f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _050837_jump

	_05084f_jump:
		pop    %edi
		jmp    _050867_jump

	_050852_jump:
		movswl %dx,%eax
		imul   $0x0000d8,%eax,%eax
		mov    _0a2944_data,%ebx
		mov    %ebx,_0b8198_data(%eax)

	_050867_jump:
		cmpb   $0x000000,_0a7cd3_data
		jne    _0508ab_jump
		cmp    $0x000005,%dx
		jne    _0508ab_jump
		movswl %dx,%edi
		imul   $0x0000d8,%edi,%edi
		mov    _0bf2f4_data,%esi
		mov    0x000124(%esi),%esi
		add    $_0b8198_data,%edi
		push   %edi

	_050892_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0508aa_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _050892_jump

	_0508aa_jump:
		pop    %edi

	_0508ab_jump:
		movswl %dx,%eax
		imul   $0x00000a,%eax,%ebx
		imul   $0x0000d8,%eax,%eax
		mov    _0dd9c4_data,%esi
		add    %esi,%ebx
		mov    0x00002f(%ebx),%si
		mov    %si,_0b8268_data(%eax)
		mov    0x000033(%ebx),%cl
		mov    %cl,_0b826c_data(%eax)
		mov    0x000034(%ebx),%cl
		mov    %cl,_0b826d_data(%eax)
		mov    0x000035(%ebx),%cl
		mov    %cl,_0b826e_data(%eax)
		mov    0x000036(%ebx),%bl
		inc    %edx
		mov    %bl,_0b826f_data(%eax)

	_0508ef_jump:
		xor    %ebx,%ebx
		mov    _0c304a_data,%eax
		mov    _0aa501_data,%bl
		sar    $0x000010,%eax
		add    %ebx,%eax
		movswl %dx,%ebx
		cmp    %eax,%ebx
		jle    _050806_jump
		mov    _0dd9c4_data,%eax
		mov    0x00008f(%eax),%eax
		mov    _0bf2f4_data,%edx
		sar    $0x000010,%eax
		mov    $_0b7fe8_data,%edi
		mov    (%edx,%eax,4),%esi
		push   %edi

	_050929_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _050941_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _050929_jump

	_050941_jump:
		pop    %edi
		mov    _0dd9c4_data,%eax
		mov    0x000093(%eax),%dx
		mov    %dx,_0b80b8_data
		mov    0x000095(%eax),%dx
		mov    %dx,_0b80ba_data
		mov    0x000097(%eax),%dl
		mov    %dl,_0b80bc_data
		mov    0x000098(%eax),%dl
		mov    %dl,_0b80bd_data
		mov    0x000099(%eax),%dl
		mov    %dl,_0b80be_data
		mov    0x00009d(%eax),%dx
		mov    %dx,_0b8190_data
		mov    0x00009f(%eax),%dx
		mov    0x00000a(%esp),%ecx
		mov    %dx,_0b8192_data
		mov    0x0000a1(%eax),%dl
		mov    0x000006(%esp),%ebx
		mov    %dl,_0b8194_data
		mov    0x0000a2(%eax),%dl
		mov    0x0000a3(%eax),%al
		sar    $0x000010,%ecx
		mov    %al,_0b8196_data
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    _0b826c_data,%al
		mov    %dl,_0b8195_data
		push   %eax
		mov    $0xffffffff,%edx
		mov    $_0b8198_data,%eax
		call   _01f824_func
		mov    0x000008(%esp),%esi
		add    %esi,%esi
		add    %eax,%esi
		mov    _0dd9c4_data,%eax
		mov    0x0000b7(%eax),%al
		mov    0x00000a(%esp),%ecx
		mov    0x000006(%esp),%ebx
		and    $0x0000ff,%eax
		mov    $0xffffffff,%edx
		push   %eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    %ebp,%eax
		call   _01f824_func
		add    %eax,%esi
		mov    _0dd9c4_data,%eax
		mov    0x0000c1(%eax),%al
		mov    0x00000a(%esp),%ecx
		mov    0x000006(%esp),%ebx
		and    $0x0000ff,%eax
		mov    $0xffffffff,%edx
		push   %eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x000004(%esp),%eax
		call   _01f824_func
		add    %esi,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0b8266_data,%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,_0b8268_data
		mov    0x00000a(%esp),%ecx
		mov    _0c309c_data,%ax
		mov    0x000006(%esp),%ebx
		mov    %ax,_0b826a_data
		xor    %eax,%eax
		mov    $0xffffffff,%edx
		mov    _0b8344_data,%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    $_0b8270_data,%eax
		call   _01f824_func
		mov    0x000008(%esp),%esi
		push   $0x000002
		mov    0x00000e(%esp),%ecx
		mov    0x00000a(%esp),%ebx
		mov    $0xffffffff,%edx
		sar    $0x000010,%ecx
		add    %esi,%esi
		sar    $0x000010,%ebx
		add    %eax,%esi
		mov    $_0a2948_data,%eax
		call   _01f824_func
		imul   $0x000014,%eax,%eax
		add    %esi,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0b833e_data,%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    _0c3062_data,%dx
		mov    %ax,_0b8340_data
		mov    0x000004(%esp),%eax
		add    %edx,%eax
		mov    _0c309c_data,%dx
		add    %eax,%edx
		mov    %dx,_0b8342_data
		mov    %eax,%edx
		mov    _0c309c_data,%bx
		add    %eax,%edx
		add    %ebx,%edx
		mov    %dx,_0b841a_data
		imul   $0x000003,%eax,%edx
		add    %ebx,%edx
		mov    %dx,_0b84f2_data
		mov    %eax,%edx
		shl    $0x000002,%edx
		add    %ebx,%edx
		mov    %dx,_0b85ca_data
		imul   $0x000005,%eax,%edx
		mov    %ebx,%eax
		add    %edx,%eax
		mov    %ax,_0b86a2_data
		xor    %edx,%edx
		mov    _0c3090_data,%ax
		mov    _0aa501_data,%dl
		mov    %ax,_0b877a_data
		jmp    _050b55_jump

	_050b44_jump:
		imul   $0x0000d8,%eax,%eax
		add    $_0b8198_data,%eax
		inc    %edx
		call   _01f8d4_func

	_050b55_jump:
		xor    %ebx,%ebx
		mov    _0c304a_data,%eax
		mov    _0aa501_data,%bl
		sar    $0x000010,%eax
		add    %eax,%ebx
		movswl %dx,%eax
		cmp    %ebx,%eax
		jle    _050b44_jump
		mov    $_0b7fe8_data,%eax
		call   _01f8d4_func
		mov    _0dd9c4_data,%eax
		mov    0x0000c8(%eax),%cx
		mov    0x0000ca(%eax),%di
		mov    _0c3082_data,%ax
		sub    %ecx,%eax
		mov    _0dda15_data,%dl
		mov    %eax,%ecx
		test   %dl,%dl
		je     _050c3a_jump
		cmpb   $0x000000,_0a7cd3_data
		je     _050d81_jump
		mov    _0c304e_data,%ax
		mov    %ax,_0dda04_data
		xor    %eax,%eax
		mov    _0dda14_data,%al
		mov    _0c3028_data,%ebx
		add    %eax,%eax
		sar    $0x000010,%ebx
		mov    %ax,_0dda0c_data
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		push   $0x000000
		mov    _0c3082_data,%dx
		mov    _0b826a_data(,%eax,8),%ax
		mov    %cx,_0dda08_data
		sub    %edx,%eax
		mov    _0dda0a_data,%ebx
		add    %edi,%eax
		sar    $0x000010,%ebx
		mov    %ax,_0dda06_data
		movswl %cx,%edx
		mov    _0dda04_data,%esi
		mov    _0dda02_data,%eax
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		mov    %esi,%ecx
		call   _056624_func
		xor    %bh,%bh
		mov    %bh,_0dda15_data
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050c3a_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0dda14_data,%al
		mov    _0c3028_data,%esi
		add    %eax,%eax
		sar    $0x000010,%esi
		mov    %ax,0x000014(%esp)
		lea    0x000000(,%esi,8),%eax
		sub    %esi,%eax
		shl    $0x000002,%eax
		sub    %esi,%eax
		mov    _0c3082_data,%cx
		mov    _0b826a_data(,%eax,8),%ax
		sub    %ecx,%eax
		mov    _0c304e_data,%dx
		add    %edi,%eax
		mov    _0dda04_data,%si
		mov    %ax,0x000010(%esp)
		cmp    %si,%dx
		jge    _050c90_jump
		mov    %edx,%ecx
		jmp    _050c92_jump

	_050c90_jump:
		mov    %esi,%ecx

	_050c92_jump:
		mov    _0dda08_data,%di
		cmp    %di,%bx
		jge    _050ca2_jump
		mov    %ebx,%eax
		jmp    _050ca4_jump

	_050ca2_jump:
		mov    %edi,%eax

	_050ca4_jump:
		mov    0x000012(%esp),%ebp
		mov    _0dda02_data,%edi
		mov    _0dda0a_data,%esi
		sar    $0x000010,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%ebp
		add    %edi,%esi
		movswl %dx,%edi
		add    %ebp,%edi
		cmp    %edi,%esi
		jle    _050cd1_jump
		movswl %cx,%edi
		sub    %edi,%esi
		mov    %esi,%edi
		jmp    _050cd6_jump

	_050cd1_jump:
		movswl %cx,%esi
		sub    %esi,%edi

	_050cd6_jump:
		mov    0x00000e(%esp),%ebp
		mov    _0dda04_data,%esi
		mov    %di,0x000018(%esp)
		mov    _0dda06_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		sar    $0x000010,%ebp
		add    %esi,%edi
		movswl %bx,%esi
		add    %ebp,%esi
		cmp    %esi,%edi
		jle    _050d08_jump
		movswl %ax,%esi
		sub    %esi,%edi
		mov    %edi,%esi
		jmp    _050d0d_jump

	_050d08_jump:
		movswl %ax,%edi
		sub    %edi,%esi

	_050d0d_jump:
		mov    %dx,_0dda04_data
		mov    0x000014(%esp),%edx
		mov    %dx,_0dda0c_data
		mov    0x000010(%esp),%edx
		mov    %dx,_0dda06_data
		mov    _0a7cd3_data,%dh
		mov    %bx,_0dda08_data
		test   %dh,%dh
		je     _050d68_jump
		push   $0x000001
		mov    0x00001a(%esp),%ebx
		movswl %si,%edx
		sar    $0x000010,%ebx
		movswl %ax,%esi
		movswl %cx,%eax
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _056624_func
		xor    %bh,%bh
		mov    %bh,_0dda15_data
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050d68_jump:
		movswl %si,%ebx
		movswl %ax,%edx
		mov    0x000016(%esp),%esi
		movswl %cx,%eax
		sar    $0x000010,%esi
		mov    %ebx,%ecx
		mov    %esi,%ebx
		call   _056db8_func

	_050d81_jump:
		xor    %bh,%bh
		mov    %bh,_0dda15_data
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050d94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0bf2f4_data,%eax
		lea    0x000014(%esp),%ecx
		mov    0x000050(%eax),%edx
		lea    0x000008(%esp),%ebx
		mov    %edx,0x000004(%esp)
		mov    0x000054(%eax),%eax
		lea    0x000010(%esp),%edx
		mov    %eax,(%esp)
		mov    $0x000002,%eax
		call   _01f3b8_func
		call   _03ee10_func
		cmpb   $0x000000,_0a7cd3_data
		je     _050dfb_jump
		mov    _0dda04_data,%ecx
		mov    _0dda0a_data,%ebx
		mov    _0dda06_data,%edx
		mov    _0dda02_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _022bd8_func

	_050dfb_jump:
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		mov    0x00002c(%eax),%dl
		push   %edx
		mov    _0c3082_data,%dx
		xor    %ecx,%ecx
		sub    $0x000004,%edx
		mov    0x000029(%eax),%cl
		movswl %dx,%ebx
		mov    0x000023(%eax),%edx
		mov    0x000021(%eax),%eax
		mov    _0bf2f4_data,%esi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    (%esi,%eax,4),%eax
		call   _01b0f8_func
		mov    _0aa501_data,%al
		mov    %al,0x000030(%esp)
		jmp    _05123b_jump

	_050e40_jump:
		imul   $0x0000d8,%edx,%edx
		mov    _0b8268_data(%edx),%ax
		mov    _0c3068_data,%cx
		mov    %ax,0x000028(%esp)
		mov    _0b826a_data(%edx),%ax
		xor    %ebx,%ebx
		mov    %ax,0x00000c(%esp)
		mov    $_0b8198_data,%eax
		mov    0x000030(%esp),%bl
		add    %edx,%eax
		cmp    %cx,%bx
		je     _050edf_jump
		cmp    _0c302a_data,%bx
		jne    _050eb9_jump
		mov    _0c3028_data,%ecx
		sar    $0x000010,%ecx
		imul   $0x0000d8,%ecx,%ecx
		xor    %edx,%edx
		mov    _0b826f_data(%ecx),%dl
		push   %edx
		mov    _0b826c_data(%ecx),%cl
		mov    0x00000e(%esp),%ebx
		mov    0x00002a(%esp),%edx
		and    $0x0000ff,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01b0f8_func
		jmp    _050ee9_jump

	_050eb9_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0b826f_data(%edx),%bl
		mov    _0b826c_data(%edx),%cl
		mov    0x000026(%esp),%edx
		push   %ebx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		call   _01b0f8_func
		jmp    _050ee9_jump

	_050edf_jump:
		mov    $0x000001,%edx
		call   _055a20_func

	_050ee9_jump:
		mov    0x000030(%esp),%dl
		test   %dl,%dl
		jne    _051090_jump
		movzbl %dl,%esi
		imul   $0x0000d8,%esi,%eax
		mov    0x000006(%esp),%ecx
		mov    0x000012(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		mov    _0b826c_data(%eax),%dl
		sar    $0x000010,%ebx
		push   %edx
		add    $_0b8198_data,%eax
		mov    $0xffffffff,%edx
		mov    0x00002c(%esp),%edi
		call   _01f824_func
		add    %eax,%edi
		cmpw   $0x000000,_0c0f64_data(,%esi,2)
		je     _050f88_jump
		mov    _0dd9c4_data,%eax
		mov    (%esp),%ebp
		mov    0x0000b7(%eax),%al
		mov    0x000006(%esp),%ecx
		mov    0x000012(%esp),%ebx
		and    $0x0000ff,%eax
		mov    $0xffffffff,%edx
		push   %eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x000008(%esp),%eax
		call   _01f824_func
		mov    0x000014(%esp),%edx
		add    %edi,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %ax,0x000018(%esp)
		mov    0x000014(%esp),%eax
		add    %eax,%eax
		add    %eax,%edi
		mov    0x000004(%esp),%esi
		mov    %di,0x00001c(%esp)
		jmp    _050fd9_jump

	_050f88_jump:
		mov    0x000014(%esp),%eax
		mov    %edi,%edx
		add    %eax,%eax
		mov    0x000004(%esp),%ebp
		add    %eax,%edx
		mov    _0dd9c4_data,%eax
		mov    (%esp),%esi
		mov    %dx,0x000018(%esp)
		mov    0x0000b7(%eax),%al
		mov    0x000006(%esp),%ecx
		mov    0x000012(%esp),%ebx
		and    $0x0000ff,%eax
		mov    $0xffffffff,%edx
		push   %eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    %ebp,%eax
		call   _01f824_func
		mov    0x000014(%esp),%edx
		add    %edi,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %ax,0x00001c(%esp)

	_050fd9_jump:
		mov    0x00000a(%esp),%edi
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%edi
		mov    0x0000c4(%eax),%dl
		mov    0x0000b7(%eax),%cl
		push   %edx
		mov    %edi,%ebx
		mov    0x00001a(%esp),%edx
		mov    %ebp,%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		xor    %eax,%eax
		mov    _0c3068_data,%dx
		mov    0x000030(%esp),%al
		cmp    %dx,%ax
		jne    _051060_jump
		mov    $_0b8930_data,%edi
		push   %edi

	_05101e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _051036_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05101e_jump

	_051036_jump:
		pop    %edi
		mov    0x00001c(%esp),%eax
		mov    %ax,_0b8a00_data
		mov    0x00000c(%esp),%eax
		mov    %ax,_0b8a02_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01f8d4_func
		mov    %edi,%eax
		call   _055a20_func
		jmp    _051237_jump

	_051060_jump:
		mov    _0dd9c4_data,%ecx
		xor    %eax,%eax
		mov    0x0000ba(%ecx),%al
		push   %eax
		mov    0x0000b7(%ecx),%cl
		mov    0x00001e(%esp),%edx
		and    $0x0000ff,%ecx
		mov    %edi,%ebx
		mov    %esi,%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		jmp    _051237_jump

	_051090_jump:
		cmp    $0x000001,%dl
		jne    _051237_jump
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x0000d8,%eax,%eax
		mov    0x000006(%esp),%ecx
		mov    0x000012(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		mov    _0b826c_data(%eax),%dl
		sar    $0x000010,%ebx
		push   %edx
		add    $_0b8198_data,%eax
		mov    $0xffffffff,%edx
		call   _01f824_func
		mov    0x000014(%esp),%edx
		add    %edx,%edx
		add    %edx,%eax
		mov    _0c307a_data,%di
		mov    %eax,0x000024(%esp)
		imul   $0x000014,%edi,%eax
		add    $0x000002,%eax
		movswl %ax,%ebx
		mov    0x00000c(%esp),%eax
		sub    $0x000013,%eax
		mov    0x000024(%esp),%ecx
		movswl %ax,%edx
		mov    0x000028(%esp),%eax
		push   $0x000001
		add    %ecx,%eax
		mov    $0x00000e,%ecx
		cwtl   
		call   _022cc0_func
		xor    %bl,%bl
		mov    %bl,0x00002c(%esp)
		jmp    _05121d_jump

	_051113_jump:
		imul   $0x000003,%eax,%eax
		cmp    _0c3072_data,%ax
		jge    _05112f_jump
		mov    _0dd9c4_data,%ebx
		xor    %eax,%eax
		mov    0x0000c5(%ebx),%al
		jmp    _05115f_jump

	_05112f_jump:
		mov    _0c3070_data,%ebx
		sar    $0x000010,%ebx
		movswl %ax,%ecx
		add    %ebx,%ebx
		cmp    %ebx,%ecx
		jl     _051151_jump
		mov    _0dd9c4_data,%ebx
		xor    %eax,%eax
		mov    0x0000c7(%ebx),%al
		jmp    _05115f_jump

	_051151_jump:
		mov    _0dd9c4_data,%ebx
		xor    %eax,%eax
		mov    0x0000c6(%ebx),%al

	_05115f_jump:
		xor    %ebx,%ebx
		mov    _0c307a_data,%di
		mov    0x00002c(%esp),%bl
		imul   %edi,%ebx
		mov    0x000028(%esp),%edx
		mov    0x000024(%esp),%esi
		add    %edx,%ebx
		mov    0x000010(%esp),%ecx
		add    %ebx,%esi
		mov    _0c3062_data,%bx
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x000030(%esp),%cl
		imul   %ecx,%ebx
		add    _0c309c_data,%bx
		movzbl %cl,%edi
		imul   $0x00000a,%edi,%edi
		movzbl %al,%ebp
		push   %ebp
		sub    $0x000006,%ebx
		mov    _0dd9c4_data,%ecx
		inc    %esi
		mov    %bx,0x000024(%esp)
		mov    0x000033(%ecx,%edi,1),%cl
		mov    0x000022(%esp),%ebx
		mov    $_0a28f8_data,%eax
		and    $0x0000ff,%ecx
		movswl %si,%esi
		sar    $0x000010,%ebx
		mov    %esi,%edx
		call   _01b0f8_func
		mov    0x000020(%esp),%eax
		mov    _0dd9c4_data,%ebx
		push   %ebp
		mov    %esi,%edx
		xor    %ecx,%ecx
		sub    $0x000004,%eax
		mov    0x000033(%edi,%ebx,1),%cl
		movswl %ax,%ebx
		mov    $_0a28f8_data,%eax
		call   _01b0f8_func
		mov    0x000020(%esp),%eax
		mov    _0dd9c4_data,%ebx
		push   %ebp
		mov    %esi,%edx
		xor    %ecx,%ecx
		add    $0x000004,%eax
		mov    0x000033(%edi,%ebx,1),%cl
		movswl %ax,%ebx
		mov    $_0a28f8_data,%eax
		call   _01b0f8_func
		incb   0x00002c(%esp)

	_05121d_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000030(%esp),%bl
		mov    0x00002c(%esp),%al
		cmp    _0c0f64_data(,%ebx,2),%ax
		jl     _051113_jump

	_051237_jump:
		incb   0x000030(%esp)

	_05123b_jump:
		xor    %edx,%edx
		mov    _0c304a_data,%eax
		mov    _0aa501_data,%dl
		sar    $0x000010,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000030(%esp),%dl
		cmp    %eax,%edx
		jle    _050e40_jump
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051268_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _05598c_func
		call   _0427d4_func
		test   %al,%al
		je     _0512b6_jump
		movb   $0x000001,_0c3393_data
		mov    _0af040_data,%eax
		sar    $0x000010,%eax
		call   _070b70_func
		mov    _0af042_data,%eax
		sar    $0x000010,%eax
		call   _070bb8_func
		mov    _0af03e_data,%eax
		sar    $0x000010,%eax
		call   _070bb4_func
		mov    _0af044_data,%eax
		sar    $0x000010,%eax
		call   _070b94_func

	_0512b6_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _051346_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _051346_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _051346_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _051311_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _051346_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _051346_jump

	_051311_jump:
		mov    $0x000044,%eax
		call   _071754_func
		xor    %eax,%eax
		mov    _0c3068_data,%bx
		mov    _0aa501_data,%al
		cmp    %bx,%ax
		jne    _05133c_jump
		mov    _0c302a_data,%ax
		mov    %ax,_0c3068_data
		jmp    _051346_jump

	_05133c_jump:
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0c3068_data

	_051346_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _0513cd_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _0513cd_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _0513cd_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _0513a1_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _0513cd_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0513cd_jump

	_0513a1_jump:
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3068_data,%ax
		mov    _0c302a_data,%di
		cmp    %di,%ax
		jne    _0513c6_jump
		xor    %edi,%eax
		mov    _0aa501_data,%al
		jmp    _0513c7_jump

	_0513c6_jump:
		inc    %eax

	_0513c7_jump:
		mov    %ax,_0c3068_data

	_0513cd_jump:
		cmpw   $0x000000,_0c3068_data
		jne    _0513f8_jump
		cmpb   $0x000000,_0c33ce_data
		je     _0513f8_jump
		call   _0426b0_func
		test   %al,%al
		jne    _0513f8_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _0513f8_jump
		call   _041d14_func

	_0513f8_jump:
		cmpw   $0x000001,_0c3068_data
		jne    _051520_jump
		call   _041d78_func
		test   %ax,%ax
		je     _051496_jump
		mov    _0c3066_data,%eax
		sar    $0x000010,%eax
		mov    _0c3072_data,%cx
		cmp    _0c0f64_data(,%eax,2),%cx
		jle    _051496_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _051462_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _051496_jump
		mov    _0c3064_data,%edx
		mov    _0c306a_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _051496_jump

	_051462_jump:
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3066_data,%eax
		sar    $0x000010,%eax
		incw   _0c0f64_data(,%eax,2)
		mov    _0c0f64_data,%eax
		sar    $0x000010,%eax
		call   _070b70_func
		mov    _0c0f64_data,%eax
		sar    $0x000010,%eax
		call   _070b94_func

	_051496_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _051520_jump
		mov    _0c3066_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0c0f64_data(,%eax,2)
		jle    _051520_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _0514ec_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _051520_jump
		mov    _0c3064_data,%edx
		mov    _0c306a_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _051520_jump

	_0514ec_jump:
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3066_data,%eax
		sar    $0x000010,%eax
		decw   _0c0f64_data(,%eax,2)
		mov    _0c0f64_data,%eax
		sar    $0x000010,%eax
		call   _070b70_func
		mov    _0c0f64_data,%eax
		sar    $0x000010,%eax
		call   _070b94_func

	_051520_jump:
		cmpw   $0x000003,_0c3068_data
		jne    _051588_jump
		call   _0426b0_func
		test   %al,%al
		je     _051588_jump
		call   _04250c_func
		test   %al,%al
		je     _051579_jump
		mov    _0c0f66_data,%al
		mov    %al,_0dd9f1_data
		mov    _0c0f64_data,%al
		mov    $0x000001,%bh
		mov    %al,_0dd9f0_data
		mov    _0dd9c4_data,%eax
		mov    $0x000001,%edi
		mov    %bh,_0aa503_data
		mov    0x0000a9(%eax),%al
		mov    %di,_0c306a_data
		mov    %al,_0c3387_data
		jmp    _05167e_jump

	_051579_jump:
		mov    $_0b7fe8_data,%eax
		call   _055b24_func
		jmp    _05167e_jump

	_051588_jump:
		cmpw   $0x000002,_0c3068_data
		jne    _0515de_jump
		call   _0426b0_func
		test   %al,%al
		je     _0515de_jump
		mov    _0c0f66_data,%al
		mov    %al,_0dd9f1_data
		mov    _0c0f64_data,%al
		mov    $0x000001,%bl
		mov    %al,_0dd9f0_data
		mov    _0dd9c4_data,%eax
		mov    $0x000001,%esi
		mov    %bl,_0aa503_data
		mov    0x0000a8(%eax),%al
		mov    %si,_0c306a_data
		mov    %al,_0c3387_data
		call   _0559d0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0515de_jump:
		cmpw   $0x000004,_0c3068_data
		jne    _051634_jump
		call   _0426b0_func
		test   %al,%al
		je     _051634_jump
		mov    _0c0f66_data,%al
		mov    %al,_0dd9f1_data
		mov    _0c0f64_data,%al
		mov    $0x000001,%dh
		mov    %al,_0dd9f0_data
		mov    _0dd9c4_data,%eax
		mov    $0x000001,%ecx
		mov    %dh,_0aa503_data
		mov    0x0000aa(%eax),%al
		mov    %cx,_0c306a_data
		mov    %al,_0c3387_data
		call   _0559d0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_051634_jump:
		cmpw   $0x000005,_0c3068_data
		jne    _05167e_jump
		call   _0426b0_func
		test   %al,%al
		je     _05167e_jump
		cmpb   $0x000000,_0c33ce_data
		je     _05167e_jump
		cmpb   $0x000000,_0a7cd3_data
		je     _05167e_jump
		xor    %eax,%eax
		call   _055dd4_func
		test   %al,%al
		je     _05167e_jump
		mov    $0x000001,%ah
		mov    $0x000001,%ebx
		mov    %ah,_0a7d22_data
		mov    %ah,_0c33cb_data
		mov    %bx,_0c3156_data

	_05167e_jump:
		call   _0559d0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05168c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c3068_data,%ax
		cmp    _0c302a_data,%ax
		jne    _0516a7_jump
		cmpb   $0x000001,_0c3393_data
		jne    _0516b0_jump

	_0516a7_jump:
		cmpb   $0x000000,_0c33cb_data
		je     _0516ce_jump

	_0516b0_jump:
		mov    _0c0f64_data,%ax
		mov    %ax,_0af040_data
		mov    _0c0f66_data,%ax
		mov    %ax,_0af042_data
		mov    %ax,_0af046_data

	_0516ce_jump:
		mov    _0c3068_data,%ax
		cmp    _0c302a_data,%ax
		je     _0516ef_jump
		cmpb   $0x000001,_0c3393_data
		je     _0516ef_jump
		cmpb   $0x000000,_0c33cb_data
		je     _051732_jump

	_0516ef_jump:
		xor    %bh,%bh
		mov    _0a7cd3_data,%cl
		mov    %bh,_0c3387_data
		test   %cl,%cl
		je     _05172d_jump
		push   $0x000002
		mov    _0dda04_data,%ecx
		mov    _0dda0a_data,%ebx
		mov    _0dda06_data,%edx
		mov    _0dda02_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _056624_func
		jmp    _051732_jump

	_05172d_jump:
		call   _03ead0_func

	_051732_jump:
		mov    _0c3068_data,%cx
		cmp    $0x000002,%cx
		je     _05174b_jump
		cmp    $0x000003,%cx
		je     _05174b_jump
		cmp    $0x000004,%cx
		jne    _05176c_jump

	_05174b_jump:
		mov    _0c0f64_data,%eax
		sar    $0x000010,%eax
		call   _070b70_func
		mov    _0c0f62_data,%eax
		sar    $0x000010,%eax
		call   _070bb4_func
		mov    _0c0f64_data,%eax
		jmp    _051798_jump

	_05176c_jump:
		mov    _0af040_data,%eax
		sar    $0x000010,%eax
		call   _070b70_func
		mov    _0af042_data,%eax
		sar    $0x000010,%eax
		call   _070bb8_func
		mov    _0af03e_data,%eax
		sar    $0x000010,%eax
		call   _070bb4_func
		mov    _0af044_data,%eax

	_051798_jump:
		sar    $0x000010,%eax
		call   _070b94_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0517a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c304c_data,%cx
		cmpb   $0x000001,_0bf2ce_data
		jne    _0517c6_jump
		movl   $_0aa508_data,_0dd9c8_data
		jmp    _0517d0_jump

	_0517c6_jump:
		movl   $_0aa708_data,_0dd9c8_data

	_0517d0_jump:
		mov    %cx,_0c304c_data
		call   _04f900_func
		mov    _0dd9c4_data,%eax
		mov    (%eax),%dl
		mov    $_051d0c_func,%esi
		mov    %dl,_0c33ce_data
		mov    0x000001(%eax),%dx
		mov    $_051f28_func,%edi
		mov    %dx,_0c3066_data
		mov    0x000003(%eax),%dx
		mov    $_052320_func,%ebp
		mov    %dx,_0c3070_data
		mov    0x000005(%eax),%dx
		mov    $_0518d4_func,%ecx
		mov    %dx,_0c3078_data
		mov    0x000007(%eax),%dx
		mov    %esi,_0dd9e0_data
		mov    %dx,_0c305e_data
		mov    0x000009(%eax),%dx
		mov    %edi,_0dd9dc_data
		mov    %dx,_0c3068_data
		mov    0x00000c(%eax),%dx
		mov    %ebp,_0dd9e4_data
		mov    %dx,_0c302a_data
		mov    0x000010(%eax),%dl
		mov    %ecx,_0dd9d0_data
		mov    %dl,_0dda14_data
		xor    %edx,%edx
		mov    0x000013(%eax),%bx
		mov    _0dda14_data,%dl
		mov    0x00000e(%eax),%cx
		sub    %edx,%ebx
		mov    0x000015(%eax),%edx
		mov    %bx,_0c304e_data
		sar    $0x000010,%edx
		mov    0x000017(%eax),%ebx
		mov    0x000013(%eax),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    %cx,_0c304c_data
		call   _055854_func
		xor    %dl,%dl
		mov    _0c304c_data,%cx
		mov    %dl,_0dda17_data
		xor    %dh,%dh
		jmp    _0518bb_jump

	_0518aa_jump:
		xor    %ebx,%ebx
		mov    _0a7ccc_data(%eax),%bl
		inc    %edx
		mov    %bx,_0c0f64_data(,%eax,2)

	_0518bb_jump:
		movswl %cx,%ebx
		movswl %dx,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jl     _0518aa_jump
		mov    %cx,_0c304c_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0518d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		lea    0x000018(%esp),%ecx
		lea    0x000014(%esp),%ebx
		lea    0x000020(%esp),%edx
		mov    $0x000002,%eax
		call   _01f3b8_func
		mov    _0dd9c4_data,%eax
		mov    0x000019(%eax),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0bf2f4_data,%eax
		mov    $_0aa459_data,%edi
		mov    (%edx,%eax,1),%esi
		push   %edi

	_051913_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05192b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _051913_jump

	_05192b_jump:
		pop    %edi
		mov    %edi,%eax
		call   _086bfe_func
		mov    _0dd9c4_data,%eax
		mov    0x000019(%eax),%eax
		mov    _0bf2f4_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    %cx,0x000024(%esp)
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		movb   $0x00002f,_0aa458_data(%eax)
		xor    %dh,%dh
		mov    %dh,_0aa459_data(%eax)
		mov    _0dd9c4_data,%eax
		mov    _0c3062_data,%cx
		mov    0x000027(%eax),%dx
		mov    0x000031(%eax),%bx
		mov    %dx,_0b8268_data
		mov    %bx,_0b8340_data
		mov    0x000020(%esp),%ebx
		mov    _0c309c_data,%dx
		add    %ecx,%ebx
		add    $0x000014,%edx
		add    $0x00000a,%ebx
		mov    %edx,%ecx
		add    %ebx,%ecx
		mov    %cx,_0b8342_data
		mov    0x00003b(%eax),%cx
		mov    %cx,_0b8418_data
		mov    %ebx,%ecx
		add    %ebx,%ecx
		imul   $0x000003,%ebx,%ebx
		mov    _0c304c_data,%di
		mov    %edx,%esi
		mov    %dx,_0b826a_data
		add    %ecx,%esi
		mov    %dx,_0b85ca_data
		mov    %si,_0b841a_data
		mov    0x000045(%eax),%cx
		mov    %si,_0b877a_data
		mov    %cx,_0b84f0_data
		xor    %esi,%esi
		mov    %edx,%ecx
		mov    0x000059(%eax),%dx
		mov    %si,0x000024(%esp)
		mov    %dx,_0b86a0_data
		add    %ebx,%ecx
		mov    _0b8342_data,%dx
		mov    %cx,_0b84f2_data
		mov    %cx,_0b8852_data
		mov    %dx,_0b86a2_data
		mov    0x000063(%eax),%dx
		mov    0x00004f(%eax),%bx
		mov    %dx,_0b8778_data
		mov    0x00006d(%eax),%dx
		mov    0x000077(%eax),%ax
		mov    %bx,_0b85c8_data
		mov    %ax,_0b8928_data
		mov    _0c3090_data,%ax
		mov    %dx,_0b8850_data
		mov    %ax,_0b892a_data
		test   %di,%di
		jl     _051af6_jump

	_051a63_jump:
		mov    0x000022(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x00000a,%edx,%ecx
		imul   $0x0000d8,%edx,%edx
		mov    _0dd9c4_data,%eax
		mov    0x000023(%ecx,%eax,1),%ebx
		mov    _0bf2f4_data,%eax
		sar    $0x000010,%ebx
		mov    (%eax,%ebx,4),%esi
		mov    $_0b8198_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%edi
		push   %edi

	_051a91_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _051aa9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _051a91_jump

	_051aa9_jump:
		pop    %edi
		mov    _0dd9c4_data,%eax
		add    %ecx,%eax
		mov    0x00002b(%eax),%cl
		mov    %cl,_0b826c_data(%edx)
		mov    0x00002c(%eax),%cl
		mov    %cl,_0b826d_data(%edx)
		mov    0x00002d(%eax),%cl
		mov    %cl,_0b826e_data(%edx)
		mov    0x00002e(%eax),%al
		mov    %al,_0b826f_data(%edx)
		mov    %ebx,%eax
		call   _01f8d4_func
		mov    0x000024(%esp),%eax
		inc    %eax
		mov    _0c304c_data,%dx
		mov    %ax,0x000024(%esp)
		cmp    %dx,%ax
		jle    _051a63_jump

	_051af6_jump:
		mov    _0dd9c4_data,%eax
		mov    _0c304e_data,%dx
		mov    0x0000ab(%eax),%bx
		add    %ebx,%edx
		mov    %dx,_0b8a00_data
		mov    0x000085(%eax),%dl
		mov    %dl,_0b8a04_data
		mov    0x000086(%eax),%dl
		mov    %dl,_0b8a05_data
		mov    0x000087(%eax),%dl
		mov    %dl,_0b8a06_data
		mov    0x000087(%eax),%eax
		mov    _0bf2f4_data,%edx
		sar    $0x000010,%eax
		mov    $_0b7fe8_data,%edi
		mov    (%edx,%eax,4),%esi
		push   %edi

	_051b4e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _051b66_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _051b4e_jump

	_051b66_jump:
		pop    %edi
		mov    _0dd9c4_data,%eax
		mov    0x00008b(%eax),%dx
		mov    %dx,_0b80b8_data
		mov    0x00008d(%eax),%dx
		mov    %dx,_0b80ba_data
		mov    0x00008f(%eax),%dl
		mov    %dl,_0b80bc_data
		mov    0x000090(%eax),%dl
		mov    0x000091(%eax),%al
		mov    %al,_0b80be_data
		mov    %edi,%eax
		mov    %dl,_0b80bd_data
		call   _01f8d4_func
		mov    _0dd9c4_data,%edx
		mov    _0c304e_data,%bx
		xor    %eax,%eax
		mov    _0c3082_data,%di
		mov    _0dda14_data,%al
		mov    0x0000ad(%edx),%cx
		mov    0x0000af(%edx),%si
		mov    0x0000b1(%edx),%dx
		add    %eax,%eax
		sub    %ecx,%ebx
		mov    %ax,0x000010(%esp)
		mov    _0b892a_data,%ax
		mov    _0c3082_data,%cx
		sub    %edi,%eax
		sub    %esi,%ecx
		add    %eax,%edx
		mov    _0dda04_data,%ax
		mov    %dx,0x00001c(%esp)
		cmp    %ax,%bx
		jge    _051c12_jump
		mov    %ebx,%edx
		jmp    _051c14_jump

	_051c12_jump:
		mov    %eax,%edx

	_051c14_jump:
		mov    _0dda08_data,%si
		cmp    %si,%cx
		jge    _051c24_jump
		mov    %ecx,%eax
		jmp    _051c26_jump

	_051c24_jump:
		mov    %esi,%eax

	_051c26_jump:
		mov    _0dda02_data,%esi
		mov    _0dda0a_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		add    %esi,%edi
		movswl %bx,%esi
		mov    %esi,0x000004(%esp)
		mov    0x00000e(%esp),%esi
		mov    0x000004(%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		cmp    %esi,%edi
		jle    _051c5b_jump
		movswl %dx,%esi
		sub    %esi,%edi
		mov    %edi,%esi
		jmp    _051c60_jump

	_051c5b_jump:
		movswl %dx,%edi
		sub    %edi,%esi

	_051c60_jump:
		mov    _0dda06_data,%edi
		sar    $0x000010,%edi
		mov    %edi,(%esp)
		mov    _0dda04_data,%edi
		mov    (%esp),%ebp
		sar    $0x000010,%edi
		add    %edi,%ebp
		movswl %cx,%edi
		mov    %ebp,0x00000c(%esp)
		mov    %edi,0x000008(%esp)
		mov    0x00001a(%esp),%edi
		mov    0x000008(%esp),%ebp
		sar    $0x000010,%edi
		add    %ebp,%edi
		mov    0x00000c(%esp),%ebp
		cmp    %ebp,%edi
		jge    _051ca3_jump
		movswl %ax,%edi
		sub    %edi,%ebp
		mov    %ebp,%edi
		jmp    _051ca8_jump

	_051ca3_jump:
		movswl %ax,%ebp
		sub    %ebp,%edi

	_051ca8_jump:
		mov    %bx,_0dda04_data
		mov    0x000010(%esp),%ebx
		mov    %bx,_0dda0c_data
		mov    0x00001c(%esp),%ebx
		mov    %bx,_0dda06_data
		mov    _0a7cd3_data,%bl
		mov    %cx,_0dda08_data
		test   %bl,%bl
		je     _051ced_jump
		push   $0x000001
		movswl %di,%ecx
		movswl %si,%ebx
		movswl %ax,%esi
		movswl %dx,%eax
		mov    %esi,%edx
		call   _056624_func
		jmp    _051d00_jump

	_051ced_jump:
		movswl %di,%ecx
		movswl %si,%ebx
		movswl %ax,%esi
		movswl %dx,%eax
		mov    %esi,%edx
		call   _056db8_func

	_051d00_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051d0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0dd9c4_data,%eax
		mov    0x0000b3(%eax),%al
		mov    %al,0x000008(%esp)
		call   _03ee10_func
		cmpb   $0x000000,_0a7cd3_data
		je     _051d5a_jump
		mov    _0dda04_data,%ecx
		mov    _0dda0a_data,%ebx
		mov    _0dda06_data,%edx
		mov    _0dda02_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _022bd8_func

	_051d5a_jump:
		mov    _0dd9c4_data,%eax
		mov    _0c3080_data,%ebx
		xor    %edx,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x000024(%eax),%dl
		mov    0x000021(%eax),%cl
		push   %edx
		mov    0x00001b(%eax),%edx
		mov    $_0aa458_data,%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		xor    %dl,%dl
		mov    $_0b8930_data,%ebp
		mov    %dl,0x000004(%esp)
		jmp    _051f08_jump

	_051d93_jump:
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x0000d8,%eax,%eax
		mov    _0b8268_data(%eax),%bx
		mov    _0c3068_data,%cx
		mov    %bx,(%esp)
		mov    _0b826a_data(%eax),%bx
		cmp    %cx,%dx
		je     _051de2_jump
		movswl %bx,%ebx
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    _0b826f_data(%eax),%dl
		mov    _0b826c_data(%eax),%cl
		push   %edx
		mov    0x000002(%esp),%edx
		add    $_0b8198_data,%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		jmp    _051dff_jump

	_051de2_jump:
		mov    _0c3066_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0b8198_data,%eax
		call   _055a20_func

	_051dff_jump:
		mov    _0c304a_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000004(%esp),%dl
		dec    %eax
		cmp    %eax,%edx
		jge    _051f04_jump
		cmpb   $0x000000,_0dda17_data
		je     _051eb9_jump
		xor    %eax,%eax
		mov    _0c3068_data,%si
		mov    %dl,%al
		cmp    %si,%ax
		jne    _051eb9_jump
		mov    _0c3066_data,%eax
		sar    $0x000010,%eax
		mov    _0c0f62_data(,%eax,2),%eax
		mov    _0dd9c8_data,%edx
		sar    $0x000010,%eax
		mov    %ebp,%edi
		mov    (%edx,%eax,4),%esi
		push   %edi

	_051e55_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _051e6d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _051e55_jump

	_051e6d_jump:
		pop    %edi
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000008(%esp),%al
		add    %eax,%edx
		mov    _0c3066_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    %dx,_0b8a00_data
		mov    _0b826a_data(%eax),%dx
		mov    %dx,_0b8a02_data
		mov    _0b826f_data(%eax),%al
		mov    %al,_0b8a07_data
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _01f8d4_func
		mov    %ebp,%eax
		call   _055a20_func
		jmp    _051f04_jump

	_051eb9_jump:
		movzbl 0x000004(%esp),%esi
		imul   $0x0000d8,%esi,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    _0b826f_data(%eax),%dl
		mov    _0b826c_data(%eax),%cl
		mov    _0b8268_data(%eax),%ebx
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x000008(%esp),%al
		add    %edi,%eax
		push   %edx
		movswl %ax,%edx
		mov    _0c0f62_data(,%esi,2),%eax
		mov    _0dd9c8_data,%esi
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    (%esi,%eax,4),%eax
		call   _01b0f8_func

	_051f04_jump:
		incb   0x000004(%esp)

	_051f08_jump:
		xor    %edx,%edx
		mov    _0c304c_data,%bx
		mov    0x000004(%esp),%dl
		cmp    %bx,%dx
		jle    _051d93_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051f28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c304c_data,%si
		call   _05598c_func
		cmpb   $0x000000,_0dda17_data
		jne    _0522a6_jump
		call   _0427d4_func
		test   %al,%al
		je     _051f56_jump
		movb   $0x000001,_0c3393_data

	_051f56_jump:
		call   _041d78_func
		test   %ax,%ax
		jne    _05202d_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _05202d_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _051faf_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _05202d_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _05202d_jump

	_051faf_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _051fec_jump
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3068_data,%cx
		test   %cx,%cx
		jne    _051fdd_jump
		movw   $0x000008,_0c3068_data
		jmp    _05216d_jump

	_051fdd_jump:
		mov    %ecx,%edi
		dec    %edi
		mov    %di,_0c3068_data
		jmp    _05216d_jump

	_051fec_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _05216d_jump
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3068_data,%ax
		cmp    $0x000008,%ax
		jne    _05201e_jump
		xor    %ebx,%ebx
		mov    %bx,_0c3068_data
		jmp    _05216d_jump

	_05201e_jump:
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0c3068_data
		jmp    _05216d_jump

	_05202d_jump:
		call   _041e40_func
		test   %ax,%ax
		jne    _05216d_jump
		call   _041ddc_func
		test   %ax,%ax
		jne    _05216d_jump
		cmpw   $0x000008,_0c3068_data
		je     _05216d_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _052094_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _05216d_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _05216d_jump

	_052094_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _05210a_jump
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3068_data,%bx
		cmp    $0x000004,%bx
		jne    _0520c3_jump
		xor    %edi,%edi
		mov    %di,_0c3068_data
		jmp    _05216d_jump

	_0520c3_jump:
		mov    _0c304c_data,%si
		cmp    $0x000005,%bx
		jne    _0520de_jump
		movw   $0x000001,_0c3068_data
		jmp    _05216d_jump

	_0520de_jump:
		cmp    $0x000006,%bx
		jne    _0520f2_jump
		movw   $0x000002,_0c3068_data
		jmp    _05216d_jump

	_0520f2_jump:
		cmp    $0x000007,%bx
		jne    _05216d_jump
		movw   $0x000003,_0c3068_data
		jmp    _05216d_jump

	_05210a_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _05216d_jump
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3068_data,%di
		test   %di,%di
		jne    _052135_jump
		movw   $0x000004,_0c3068_data
		jmp    _05216d_jump

	_052135_jump:
		mov    _0c304c_data,%si
		cmp    $0x000001,%di
		jne    _05214d_jump
		movw   $0x000005,_0c3068_data
		jmp    _05216d_jump

	_05214d_jump:
		cmp    $0x000002,%di
		jne    _05215e_jump
		movw   $0x000006,_0c3068_data
		jmp    _05216d_jump

	_05215e_jump:
		cmp    $0x000003,%di
		jne    _05216d_jump
		movw   $0x000007,_0c3068_data

	_05216d_jump:
		cmpw   $0x000007,_0c3068_data
		jne    _0521e0_jump
		call   _0426b0_func
		test   %al,%al
		je     _0521e0_jump
		cmpb   $0x000000,_0c33ce_data
		je     _0521e0_jump
		mov    $0x00004b,%eax
		mov    $0x000048,%edx
		mov    $0x00004d,%ebx
		mov    $0x000050,%ecx
		mov    $0x00001d,%edi
		mov    %ax,_0c0f64_data
		mov    %dx,_0c0f66_data
		mov    %bx,_0c0f68_data
		mov    %cx,_0c0f6a_data
		mov    %di,_0c0f6c_data
		mov    $0x000038,%eax
		mov    $0x00002d,%edx
		mov    %ax,_0c0f6e_data
		mov    %dx,_0c0f70_data
		jmp    _05230e_jump

	_0521e0_jump:
		mov    _0c3068_data,%bx
		test   %bx,%bx
		jl     _052222_jump
		cmp    $0x000006,%bx
		jg     _052222_jump
		call   _0426b0_func
		test   %al,%al
		je     _052222_jump
		cmpb   $0x000000,_0c33ce_data
		je     _052222_jump
		movb   $0x000001,_0dda17_data
		call   _042498_func
		call   _0559d0_func
		mov    _0c304c_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_052222_jump:
		cmpw   $0x000008,_0c3068_data
		jne    _05230e_jump
		call   _0426b0_func
		test   %al,%al
		je     _05230e_jump
		mov    _0c304c_data,%si
		xor    %ecx,%ecx
		mov    %esi,%eax
		test   %si,%si
		jg     _052275_jump
		jmp    _05227a_jump

	_05224f_jump:
		mov    %ecx,%eax

	_052251_jump:
		inc    %eax
		movswl %cx,%ebx
		movswl %ax,%edx
		mov    _0c0f64_data(,%ebx,2),%bx
		cmp    _0c0f64_data(,%edx,2),%bx
		je     _05226f_jump
		cmp    %si,%ax
		jl     _052251_jump

	_05226f_jump:
		inc    %ecx
		cmp    %si,%cx
		jge    _05227a_jump

	_052275_jump:
		cmp    %si,%ax
		je     _05224f_jump

	_05227a_jump:
		mov    %si,_0c304c_data
		cmp    %si,%ax
		jge    _05230e_jump
		mov    $_0b7fe8_data,%eax
		call   _055b24_func
		call   _0559d0_func
		mov    _0c304c_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0522a6_jump:
		xor    %ecx,%ecx
		xor    %ebx,%ebx

	_0522aa_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _041ce0_func
		test   %al,%al
		je     _052306_jump
		mov    _0dd9c8_data,%edx
		movswl %cx,%eax
		cmp    (%edx,%eax,4),%ebx
		je     _052306_jump
		cmpw   $0x000003,_0c3068_data
		jg     _0522e1_jump
		cmp    $0x00001c,%cx
		je     _0522e1_jump
		cmp    $0x000001,%cx
		je     _0522e1_jump
		cmp    $0x000039,%cx
		jne    _0522eb_jump

	_0522e1_jump:
		cmpw   $0x000004,_0c3068_data
		jl     _052301_jump

	_0522eb_jump:
		mov    _0c3066_data,%eax
		sar    $0x000010,%eax
		mov    %bl,_0dda17_data
		mov    %cx,_0c0f64_data(,%eax,2)

	_052301_jump:
		call   _042498_func

	_052306_jump:
		inc    %ecx
		cmp    $0x000080,%cx
		jl     _0522aa_jump

	_05230e_jump:
		call   _0559d0_func
		mov    _0c304c_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052320_func:
		push   %ebx
		push   %edx
		mov    _0dd9c4_data,%eax
		mov    0x0000a8(%eax),%al
		mov    %al,_0c3387_data
		cmpb   $0x000000,_0c3393_data
		jne    _052361_jump
		xor    %edx,%edx
		jmp    _05234d_jump

	_05233f_jump:
		mov    _0c0f64_data(,%eax,2),%bl
		inc    %edx
		mov    %bl,_0a7ccc_data(%eax)

	_05234d_jump:
		mov    _0c304a_data,%ebx
		sar    $0x000010,%ebx
		movswl %dx,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jl     _05233f_jump
		pop    %edx
		pop    %ebx
		ret    

	_052361_jump:
		xor    %dl,%dl
		mov    %dl,_0aa503_data
		cmpb   $0x000000,_0a7cd3_data
		jne    _052377_jump
		call   _03ead0_func

	_052377_jump:
		pop    %edx
		pop    %ebx
		ret    



_05237c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_05237c_func,%edx
		mov    $_0523dc_func,%ebx
		mov    $_052530_func,%ecx
		mov    $_0527d8_func,%esi
		mov    $_052a30_func,%edi
		mov    %edx,_0dd9d4_data
		mov    %ebx,_0dd9d0_data
		mov    %ecx,_0dd9e0_data
		mov    %esi,_0dd9dc_data
		xor    %edx,%edx
		mov    %edi,_0dd9e4_data
		mov    %dx,_0b5596_data
		mov    %dx,_0b5594_data
		mov    %dx,_0b5592_data
		mov    %dx,_0b5590_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0523dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0dd9c4_data,%eax
		mov    0x0000c0(%eax),%dl
		mov    %dl,_0c33ce_data
		mov    0x0000c1(%eax),%dx
		mov    %dx,_0c3066_data
		mov    0x0000c3(%eax),%dx
		mov    %dx,_0c3070_data
		mov    0x0000c5(%eax),%dx
		mov    %dx,_0c3078_data
		mov    0x0000c7(%eax),%dx
		mov    $_0b8198_data,%ebx
		mov    %dx,_0c305e_data
		mov    0x0000c9(%eax),%dx
		xor    %ebp,%ebp
		mov    %dx,_0c3068_data
		mov    0x0000ce(%eax),%dx
		mov    %ebp,(%esp)
		mov    %dx,_0c304c_data
		mov    0x0000cb(%eax),%dl
		mov    0x0000cc(%eax),%ax
		mov    %dl,_0aa501_data
		mov    %ax,_0c302a_data

	_05246d_jump:
		xor    %ah,%ah
		mov    (%esp),%ecx
		mov    %ah,_0dda0e_data(%ebp)
		mov    _0dd9c4_data,%eax
		add    %ecx,%eax
		mov    0x0000ce(%eax),%eax
		mov    _0bf2f4_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,4),%esi
		imul   $0x0000d8,%ebp,%edx
		mov    %ebx,%edi
		push   %edi

	_05249a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0524b2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05249a_jump

	_0524b2_jump:
		pop    %edi
		mov    _0dd9c4_data,%eax
		add    %ecx,%eax
		mov    0x0000d2(%eax),%si
		mov    %si,_0b8268_data(%edx)
		mov    0x0000d4(%eax),%si
		mov    %si,_0b826a_data(%edx)
		mov    0x0000d6(%eax),%cl
		mov    %cl,_0b826c_data(%edx)
		mov    0x0000d7(%eax),%cl
		mov    %cl,_0b826d_data(%edx)
		mov    0x0000d8(%eax),%cl
		mov    (%esp),%edi
		mov    %cl,_0b826e_data(%edx)
		add    $0x00000a,%edi
		mov    0x0000d9(%eax),%al
		mov    %edi,(%esp)
		mov    %al,_0b826f_data(%edx)
		mov    %ebx,%eax
		inc    %ebp
		call   _01f8d4_func
		add    $0x0000d8,%ebx
		cmp    $0x000004,%ebp
		jle    _05246d_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052530_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		call   _03ee10_func
		mov    _0dd9c4_data,%esi
		mov    _0a7cd3_data,%ah
		mov    0x00015a(%esi),%si
		test   %ah,%ah
		je     _05257c_jump
		mov    _0dda04_data,%ecx
		mov    _0dda0a_data,%ebx
		mov    _0dda06_data,%edx
		mov    _0dda02_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _022bd8_func

	_05257c_jump:
		mov    $_0b8930_data,%eax
		xor    %dl,%dl
		call   _01b714_func
		mov    %dl,0x00000c(%esp)

	_05258c_jump:
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		imul   $0x0000d8,%edx,%eax
		mov    _0b8268_data(%eax),%bx
		mov    _0b826a_data(%eax),%ax
		mov    %bx,(%esp)
		mov    %ax,0x000008(%esp)
		cmp    $0x000004,%dl
		jae    _0526e7_jump
		cmpb   $0x000000,_0dda0e_data(%edx)
		je     _052604_jump
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		mov    0x000150(%eax),%dl
		push   %edx
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		imul   %esi,%edx
		mov    0x00014c(%eax),%ecx
		mov    0x00014a(%eax),%ebx
		mov    0x00014a(%eax),%di
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x000146(%eax),%eax
		add    %edi,%edx
		sar    $0x000010,%eax
		movswl %dx,%edx
		call   _02233c_func

	_052604_jump:
		movzbl 0x00000c(%esp),%edi
		cmpw   $0x000002,_0b5590_data(,%edi,2)
		jne    _0526a2_jump
		imul   $0x00000a,%edi,%edi
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		push   $0x000002
		mov    0x000159(%eax),%dl
		push   %edx
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		imul   %esi,%edx
		mov    0x000155(%eax),%ecx
		mov    0x000153(%eax),%ebx
		mov    %edx,0x00000c(%esp)
		mov    0x000153(%eax),%dx
		sar    $0x000010,%ecx
		add    0x00000c(%esp),%edx
		sar    $0x000010,%ebx
		mov    %dx,0x00000c(%esp)
		mov    0x00014f(%eax),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		call   _01aecc_func
		mov    0x000006(%esp),%ebx
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d9(%edi,%eax,1),%dl
		mov    0x000144(%eax),%cl
		push   %edx
		mov    0x00013e(%eax),%edx
		mov    $_0a294c_data,%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		jmp    _0526e7_jump

	_0526a2_jump:
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		push   $0x000001
		mov    0x000159(%eax),%dl
		push   %edx
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		imul   %esi,%edx
		mov    0x000155(%eax),%ecx
		mov    0x000153(%eax),%ebx
		mov    0x000153(%eax),%di
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x00014f(%eax),%eax
		add    %edi,%edx
		sar    $0x000010,%eax
		movswl %dx,%edx
		call   _01aecc_func

	_0526e7_jump:
		xor    %eax,%eax
		mov    _0c3068_data,%dx
		mov    0x00000c(%esp),%al
		cmp    %dx,%ax
		je     _05273e_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x00000a,%eax,%edx
		mov    _0dd9c4_data,%ebx
		mov    0x0000d9(%edx,%ebx,1),%dl
		imul   $0x0000d8,%eax,%eax
		mov    0x000006(%esp),%ebx
		and    $0x0000ff,%edx
		xor    %ecx,%ecx
		push   %edx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		mov    _0b826c_data(%eax),%cl
		add    $_0b8198_data,%eax
		call   _01b0f8_func
		jmp    _05277a_jump

	_05273e_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x00000a,%eax,%edx
		imul   $0x0000d8,%eax,%eax
		mov    _0dd9c4_data,%ebx
		mov    0x0000d9(%edx,%ebx,1),%dl
		mov    $_0b8198_data,%ebx
		add    %eax,%ebx
		mov    %dl,_0b826f_data(%eax)
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _01f8d4_func
		mov    %ebx,%eax
		call   _055a20_func

	_05277a_jump:
		mov    0x00000c(%esp),%dh
		inc    %dh
		mov    %dh,0x00000c(%esp)
		cmp    $0x000004,%dh
		jbe    _05258c_jump
		mov    _0dd9c4_data,%eax
		mov    _0bf2f4_data,%edi
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x00013d(%eax),%dl
		mov    0x00013a(%eax),%cl
		mov    0x000136(%eax),%ebx
		push   %edx
		mov    0x000134(%eax),%edx
		mov    0x000132(%eax),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    (%edi,%eax,4),%eax
		call   _01b0f8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0527d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _05598c_func
		cmpw   $0x000001,_0c30c4_data
		jne    _05280d_jump
		mov    _0b5590_data,%bx
		test   %bx,%bx
		jne    _05280d_jump
		mov    _0c3068_data,%ax
		cmp    _0c302a_data,%ax
		jne    _05280d_jump
		mov    %bx,_0c30c4_data

	_05280d_jump:
		call   _0427d4_func
		test   %al,%al
		je     _05281d_jump
		movb   $0x000001,_0c3393_data

	_05281d_jump:
		cmpb   $0x000000,_0c33ce_data
		jne    _05285a_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _0528da_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0528da_jump

	_05285a_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _05289b_jump
		mov    $0x000044,%eax
		call   _071754_func
		xor    %eax,%eax
		mov    _0c3068_data,%cx
		mov    _0aa501_data,%al
		cmp    %cx,%ax
		jne    _05288f_jump
		mov    _0c302a_data,%ax
		mov    %ax,_0c3068_data
		jmp    _0528da_jump

	_05288f_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,_0c3068_data
		jmp    _0528da_jump

	_05289b_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _0528da_jump
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3068_data,%ax
		mov    _0c302a_data,%dx
		cmp    %dx,%ax
		jne    _0528d0_jump
		xor    %edx,%eax
		mov    _0aa501_data,%al
		mov    %ax,_0c3068_data
		jmp    _0528da_jump

	_0528d0_jump:
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,_0c3068_data

	_0528da_jump:
		xor    %dh,%dh
		mov    %dh,_0c33a3_data
		call   _041ea4_func
		test   %ax,%ax
		je     _052917_jump
		mov    _0c3068_data,%ax
		cmp    _0c302a_data,%ax
		je     _052917_jump
		cmpb   $0x000000,_0dda0e_data
		jne    _05290e_jump
		mov    $0x000044,%eax
		call   _071754_func

	_05290e_jump:
		movb   $0x000001,_0dda0e_data
		jmp    _052931_jump

	_052917_jump:
		cmpb   $0x000000,_0dda0e_data
		je     _052929_jump
		movw   $0x000002,_0b5590_data

	_052929_jump:
		xor    %bh,%bh
		mov    %bh,_0dda0e_data

	_052931_jump:
		call   _041f38_func
		test   %ax,%ax
		je     _052966_jump
		mov    _0c3068_data,%ax
		cmp    _0c302a_data,%ax
		je     _052966_jump
		cmpb   $0x000000,_0dda0f_data
		jne    _05295d_jump
		mov    $0x000044,%eax
		call   _071754_func

	_05295d_jump:
		movb   $0x000001,_0dda0f_data
		jmp    _052980_jump

	_052966_jump:
		cmpb   $0x000000,_0dda0f_data
		je     _052978_jump
		movw   $0x000002,_0b5592_data

	_052978_jump:
		xor    %ah,%ah
		mov    %ah,_0dda0f_data

	_052980_jump:
		call   _041fcc_func
		test   %ax,%ax
		je     _0529b5_jump
		mov    _0c3068_data,%ax
		cmp    _0c302a_data,%ax
		je     _0529b5_jump
		cmpb   $0x000000,_0dda10_data
		jne    _0529ac_jump
		mov    $0x000044,%eax
		call   _071754_func

	_0529ac_jump:
		movb   $0x000001,_0dda10_data
		jmp    _0529cf_jump

	_0529b5_jump:
		cmpb   $0x000000,_0dda10_data
		je     _0529c7_jump
		movw   $0x000002,_0b5594_data

	_0529c7_jump:
		xor    %bh,%bh
		mov    %bh,_0dda10_data

	_0529cf_jump:
		call   _042060_func
		test   %ax,%ax
		je     _052a04_jump
		mov    _0c3068_data,%ax
		cmp    _0c302a_data,%ax
		je     _052a04_jump
		cmpb   $0x000000,_0dda11_data
		jne    _0529fb_jump
		mov    $0x000044,%eax
		call   _071754_func

	_0529fb_jump:
		movb   $0x000001,_0dda11_data
		jmp    _052a1e_jump

	_052a04_jump:
		cmpb   $0x000000,_0dda11_data
		je     _052a16_jump
		movw   $0x000002,_0b5596_data

	_052a16_jump:
		xor    %ah,%ah
		mov    %ah,_0dda11_data

	_052a1e_jump:
		movb   $0x000001,_0c33a3_data
		call   _0559d0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052a30_func:
		push   %ebx
		push   %edx
		push   %esi
		xor    %eax,%eax

	_052a35_jump:
		movswl %ax,%edx
		cmpw   $0x000000,_0b5590_data(,%edx,2)
		sete   %bl
		xor    %bh,%bh
		inc    %eax
		mov    %bx,_0b5590_data(,%edx,2)
		cmp    $0x000004,%ax
		jl     _052a35_jump
		mov    %bh,_0c3393_data
		xor    %esi,%esi
		xor    %edx,%edx
		mov    %si,_0c306a_data
		mov    %edx,_0dd9e4_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_052a70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0af038_data,%ax
		mov    %ax,_0c0f66_data
		mov    _0af03a_data,%ax
		mov    %ax,_0c0f68_data
		mov    _0af03e_data,%ax
		mov    $_052b64_func,%edx
		mov    %ax,_0c0f6a_data
		mov    _0dd9c4_data,%eax
		mov    %edx,_0dd9d0_data
		mov    (%eax),%dl
		mov    %dl,_0c33ce_data
		mov    0x000001(%eax),%dx
		mov    %dx,_0c3066_data
		mov    0x000003(%eax),%dx
		mov    %dx,_0c3070_data
		mov    0x000005(%eax),%dx
		mov    %dx,_0c3078_data
		mov    0x000007(%eax),%dx
		mov    %dx,_0c305e_data
		mov    0x000009(%eax),%dx
		mov    %dx,_0c3068_data
		mov    0x00000b(%eax),%dl
		mov    $_052eec_func,%ebx
		mov    %dl,_0aa501_data
		mov    0x00000e(%eax),%dx
		mov    $_0530a0_func,%ecx
		mov    %dx,_0c304c_data
		mov    0x00000c(%eax),%dx
		mov    $_053418_func,%esi
		mov    %dx,_0c302a_data
		mov    0x000010(%eax),%dl
		mov    %ebx,_0dd9e0_data
		mov    %dl,_0dda14_data
		xor    %edx,%edx
		mov    0x000013(%eax),%bx
		mov    _0dda14_data,%dl
		mov    %ecx,_0dd9dc_data
		sub    %edx,%ebx
		mov    0x000015(%eax),%edx
		mov    %bx,_0c304e_data
		sar    $0x000010,%edx
		mov    0x000017(%eax),%ebx
		mov    0x000013(%eax),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    %esi,_0dd9e4_data
		call   _055854_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052b64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		lea    0x00001c(%esp),%ecx
		lea    0x000024(%esp),%ebx
		lea    0x000018(%esp),%edx
		mov    $0x000002,%eax
		call   _01f3b8_func
		mov    _0dd9c4_data,%eax
		mov    0x000019(%eax),%eax
		mov    _0bf2f4_data,%edx
		sar    $0x000010,%eax
		mov    $_0aa458_data,%edi
		mov    (%edx,%eax,4),%esi
		push   %edi

	_052b9d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _052bb5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _052b9d_jump

	_052bb5_jump:
		pop    %edi
		mov    %edi,%eax
		call   _086bfe_func
		mov    _0aa501_data,%al
		mov    %al,0x00002c(%esp)
		mov    $0xffffffff,%ebp
		jmp    _052d52_jump

	_052bd0_jump:
		imul   $0x0000d8,%eax,%edi
		imul   $0x00000a,%eax,%esi
		add    $_0b8198_data,%edi
		cmp    $0x000004,%al
		jne    _052c0f_jump
		mov    _0dd9c4_data,%eax
		mov    0x000023(%esi,%eax,1),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    _0bf2f4_data,%eax
		mov    (%ebx,%eax,1),%edx
		push   %edx
		push   $_0a2950_data
		push   %edi
		call   _0852d9_func
		add    $0x00000c,%esp
		jmp    _052c3e_jump

	_052c0f_jump:
		mov    _0dd9c4_data,%eax
		mov    0x000023(%esi,%eax,1),%eax
		mov    _0bf2f4_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,4),%esi
		push   %edi

	_052c25_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _052c3d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _052c25_jump

	_052c3d_jump:
		pop    %edi

	_052c3e_jump:
		movzbl 0x00002c(%esp),%esi
		imul   $0x00000a,%esi,%eax
		imul   $0x0000d8,%esi,%esi
		mov    _0dd9c4_data,%ebx
		add    %ebx,%eax
		mov    0x000018(%esp),%ecx
		mov    0x000027(%eax),%bx
		mov    _0c3062_data,%dx
		mov    %bx,_0b8268_data(%esi)
		xor    %ebx,%ebx
		movzbw _0aa501_data,%di
		mov    0x00002c(%esp),%bl
		add    %edx,%ecx
		mov    %ebx,%edx
		sub    %edi,%edx
		imul   %edx,%ecx
		mov    _0c309c_data,%di
		add    %edi,%ecx
		mov    %cx,_0b826a_data(%esi)
		mov    0x00002b(%eax),%cl
		mov    %cl,_0b826c_data(%esi)
		mov    0x00002d(%eax),%cl
		mov    %cl,_0b826e_data(%esi)
		mov    0x00002c(%eax),%cl
		mov    %cl,_0b826d_data(%esi)
		mov    0x00002e(%eax),%al
		mov    %al,_0b826f_data(%esi)
		cmp    _0c302a_data,%bx
		jne    _052ccd_jump
		mov    _0c3090_data,%ax
		mov    %ax,_0b826a_data(%esi)
		jmp    _052d38_jump

	_052ccd_jump:
		test   %bl,%bl
		je     _052d38_jump
		cmp    $0x000004,%bl
		je     _052d38_jump
		mov    0x000022(%esp),%ecx
		mov    0x00001a(%esp),%ebx
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    _0b826c_data(%esi),%al
		sar    $0x000010,%ecx
		push   %eax
		mov    $_0b8198_data,%eax
		sar    $0x000010,%ebx
		add    %esi,%eax
		call   _01f824_func
		mov    0x00001c(%esp),%edi
		push   $0x000002
		mov    0x000026(%esp),%ecx
		mov    0x00001e(%esp),%ebx
		mov    %ebp,%edx
		sar    $0x000010,%ecx
		add    %edi,%edi
		sar    $0x000010,%ebx
		add    %eax,%edi
		mov    $_0a288c_data,%eax
		call   _01f824_func
		add    %edi,%eax
		movswl %ax,%ebx
		mov    _0b8266_data(%esi),%eax
		sar    %ebx
		sar    $0x000010,%eax
		sub    %ebx,%eax
		mov    %ax,_0b8268_data(%esi)

	_052d38_jump:
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		imul   $0x0000d8,%eax,%eax
		add    $_0b8198_data,%eax
		call   _01f8d4_func
		incb   0x00002c(%esp)

	_052d52_jump:
		xor    %eax,%eax
		mov    _0c304a_data,%ebx
		mov    _0aa501_data,%al
		sar    $0x000010,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		cmp    %ebx,%eax
		jle    _052bd0_jump
		mov    _0dd9c4_data,%edx
		mov    _0c3082_data,%bx
		xor    %eax,%eax
		mov    0x0000af(%edx),%si
		mov    _0dda14_data,%al
		sub    %esi,%ebx
		mov    _0c3028_data,%esi
		add    %eax,%eax
		sar    $0x000010,%esi
		mov    %ax,0x000020(%esp)
		lea    0x000000(,%esi,8),%eax
		sub    %esi,%eax
		shl    $0x000002,%eax
		sub    %esi,%eax
		mov    _0c3082_data,%di
		mov    _0b826a_data(,%eax,8),%ax
		mov    0x0000b1(%edx),%si
		sub    %edi,%eax
		mov    _0c304e_data,%cx
		add    %eax,%esi
		mov    _0dda04_data,%ax
		cmp    %ax,%cx
		jge    _052ddd_jump
		mov    %ecx,%edx
		jmp    _052ddf_jump

	_052ddd_jump:
		mov    %eax,%edx

	_052ddf_jump:
		mov    _0dda08_data,%di
		cmp    %di,%bx
		jge    _052def_jump
		mov    %ebx,%eax
		jmp    _052df1_jump

	_052def_jump:
		mov    %edi,%eax

	_052df1_jump:
		mov    _0dda0a_data,%ebp
		mov    _0dda02_data,%edi
		sar    $0x000010,%ebp
		sar    $0x000010,%edi
		add    %ebp,%edi
		movswl %cx,%ebp
		mov    %ebp,0x000004(%esp)
		mov    0x00001e(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000004(%esp),%ebp
		add    0x000008(%esp),%ebp
		cmp    %ebp,%edi
		jle    _052e2e_jump
		movswl %dx,%ebp
		sub    %ebp,%edi
		mov    %edi,0x000010(%esp)
		jmp    _052e37_jump

	_052e2e_jump:
		movswl %dx,%edi
		sub    %edi,%ebp
		mov    %ebp,0x000010(%esp)

	_052e37_jump:
		mov    0x000010(%esp),%edi
		mov    _0dda04_data,%ebp
		mov    %di,0x000028(%esp)
		mov    _0dda06_data,%edi
		sar    $0x000010,%ebp
		sar    $0x000010,%edi
		add    %ebp,%edi
		movswl %bx,%ebp
		mov    %ebp,(%esp)
		movswl %si,%ebp
		mov    %ebp,0x000014(%esp)
		mov    (%esp),%ebp
		add    0x000014(%esp),%ebp
		cmp    %ebp,%edi
		jle    _052e77_jump
		movswl %ax,%ebp
		sub    %ebp,%edi
		mov    %edi,0x00000c(%esp)
		jmp    _052e80_jump

	_052e77_jump:
		movswl %ax,%edi
		sub    %edi,%ebp
		mov    %ebp,0x00000c(%esp)

	_052e80_jump:
		mov    0x00000c(%esp),%edi
		mov    %bx,_0dda08_data
		mov    0x000020(%esp),%ebx
		mov    %cx,_0dda04_data
		mov    %bx,_0dda0c_data
		mov    _0a7cd3_data,%bl
		mov    %si,_0dda06_data
		test   %bl,%bl
		je     _052ec9_jump
		push   $0x000001
		mov    0x00002a(%esp),%ebx
		movswl %di,%ecx
		cwtl   
		movswl %dx,%esi
		sar    $0x000010,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _056624_func
		jmp    _052ee0_jump

	_052ec9_jump:
		mov    0x000026(%esp),%ebx
		movswl %di,%ecx
		movswl %ax,%esi
		sar    $0x000010,%ebx
		movswl %dx,%eax
		mov    %esi,%edx
		call   _056db8_func

	_052ee0_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052eec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000028,%esp
		mov    %esp,%edi
		lea    0x00001c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		mov    $_04f1a4_switch,%esi
		lea    0x000014(%esp),%edx
		mov    $0x000002,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _01f3b8_func
		call   _03ee10_func
		cmpb   $0x000000,_0a7cd3_data
		je     _052f4b_jump
		mov    _0dda04_data,%ecx
		mov    _0dda0a_data,%ebx
		mov    _0dda06_data,%edx
		mov    _0dda02_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _022bd8_func

	_052f4b_jump:
		mov    _0dd9c4_data,%eax
		mov    _0c3080_data,%ebx
		xor    %edx,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x000024(%eax),%dl
		mov    0x000021(%eax),%cl
		push   %edx
		mov    0x00001b(%eax),%edx
		mov    $_0aa458_data,%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		mov    _0aa501_data,%al
		mov    %al,0x000024(%esp)
		jmp    _053076_jump

	_052f82_jump:
		imul   $0x0000d8,%eax,%eax
		mov    _0b8268_data(%eax),%dx
		mov    %dx,0x000020(%esp)
		mov    _0b826a_data(%eax),%dx
		mov    %dx,0x000018(%esp)
		xor    %edx,%edx
		mov    _0c3068_data,%bx
		mov    0x000024(%esp),%dl
		cmp    %bx,%dx
		je     _052fdd_jump
		mov    0x000016(%esp),%ebx
		xor    %edx,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    _0b826f_data(%eax),%dl
		mov    _0b826c_data(%eax),%cl
		push   %edx
		mov    0x000022(%esp),%edx
		add    $_0b8198_data,%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		jmp    _052ffa_jump

	_052fdd_jump:
		mov    _0c3066_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0b8198_data,%eax
		call   _055a20_func

	_052ffa_jump:
		mov    0x000024(%esp),%dl
		test   %dl,%dl
		jbe    _053072_jump
		cmp    $0x000004,%dl
		jae    _053072_jump
		movzbl %dl,%edi
		imul   $0x0000d8,%edi,%esi
		mov    0x00000e(%esp),%ecx
		mov    0x00001a(%esp),%ebx
		xor    %eax,%eax
		mov    $0xffffffff,%edx
		mov    _0b826c_data(%esi),%al
		sar    $0x000010,%ecx
		push   %eax
		mov    $_0b8198_data,%eax
		sar    $0x000010,%ebx
		add    %esi,%eax
		call   _01f824_func
		mov    0x00001c(%esp),%edx
		add    %edx,%edx
		xor    %ecx,%ecx
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0b826c_data(%esi),%cl
		mov    _0b826f_data(%esi),%dl
		add    0x000020(%esp),%eax
		push   %edx
		movswl %ax,%edx
		mov    _0c0f62_data(,%edi,2),%eax
		mov    0x00001a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp,%eax,4),%eax
		call   _01b0f8_func

	_053072_jump:
		incb   0x000024(%esp)

	_053076_jump:
		xor    %eax,%eax
		mov    _0c304a_data,%edx
		mov    _0aa501_data,%al
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000024(%esp),%al
		cmp    %edx,%eax
		jle    _052f82_jump
		add    $0x000028,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0530a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _05598c_func
		call   _0427d4_func
		mov    $0x000004,%cl
		test   %al,%al
		je     _0530bc_jump
		movb   $0x000001,_0c3393_data

	_0530bc_jump:
		cmpb   $0x000000,_0c33ce_data
		jne    _0530f9_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _053178_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _053178_jump

	_0530f9_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _053139_jump
		mov    $0x000044,%eax
		call   _071754_func
		xor    %eax,%eax
		mov    _0c3068_data,%di
		mov    _0aa501_data,%al
		cmp    %di,%ax
		jne    _05312e_jump
		mov    _0c302a_data,%ax
		mov    %ax,_0c3068_data
		jmp    _053178_jump

	_05312e_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %ax,_0c3068_data
		jmp    _053178_jump

	_053139_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _053178_jump
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3068_data,%ax
		mov    _0c302a_data,%bx
		cmp    %bx,%ax
		jne    _05316e_jump
		xor    %ebx,%eax
		mov    _0aa501_data,%al
		mov    %ax,_0c3068_data
		jmp    _053178_jump

	_05316e_jump:
		mov    %eax,%esi
		inc    %esi
		mov    %si,_0c3068_data

	_053178_jump:
		cmpw   $0x000000,_0c3068_data
		jne    _05327e_jump
		call   _0426b0_func
		test   %al,%al
		je     _05327e_jump
		xor    %cl,%cl
		mov    %cl,_0c33a3_data
		cmpb   $0x000000,_0a7cd3_data
		jne    _0531a9_jump
		call   _03ead0_func

	_0531a9_jump:
		mov    _0aa908_data,%edx
		mov    0x000018(%edx),%edx
		mov    %edx,_0dd9c4_data
		call   _054e38_func
		cmpb   $0x000000,_0a7d24_data
		jne    _053267_jump
		mov    $0x0000ff,%ah
		mov    $0xffffffff,%ebx
		mov    _0aa908_data,%edx
		mov    %ah,_0c3374_data
		mov    %ah,_0c3378_data
		mov    %bx,_0c301c_data
		mov    %bx,_0c3024_data
		mov    %bx,_0c301e_data
		mov    %bx,_0c3026_data
		mov    %bx,_0c3022_data
		mov    %bx,_0c3020_data
		mov    %bx,_0b5590_data
		mov    %bx,_0b5592_data
		mov    %bx,_0b5594_data
		mov    %bx,_0b5596_data
		mov    0x000004(%edx),%edx
		mov    $0x000001,%eax
		mov    %edx,_0dd9c4_data
		mov    _0a7cd3_data,%dh
		mov    %ax,_0c306a_data
		test   %dh,%dh
		jne    _05325d_jump
		call   _03ead0_func
		call   _0505a8_func
		call   _050798_func
		call   _03ea80_func
		jmp    _053267_jump

	_05325d_jump:
		call   _0505a8_func
		call   _050798_func

	_053267_jump:
		movb   $0x000001,_0c33a3_data
		call   _042170_func
		call   _0559d0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05327e_jump:
		mov    _0c3068_data,%bx
		cmp    $0x000001,%bx
		jl     _0533ce_jump
		cmp    $0x000003,%bx
		jg     _0533ce_jump
		cmpb   $0x000000,_0c33ce_data
		je     _0533ce_jump
		xor    %bh,%bh
		mov    %bh,_0c33a3_data
		call   _041f38_func
		test   %ax,%ax
		je     _0532d3_jump
		mov    _0c3066_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000001,_0c0f64_data(,%edx,2)
		je     _0532d3_jump
		mov    $0x000001,%cl
		jmp    _053337_jump

	_0532d3_jump:
		call   _041ea4_func
		test   %ax,%ax
		je     _0532f5_jump
		mov    _0c3066_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000000,_0c0f64_data(,%edx,2)
		je     _0532f5_jump
		xor    %cl,%cl
		jmp    _053337_jump

	_0532f5_jump:
		call   _041fcc_func
		test   %ax,%ax
		je     _053317_jump
		mov    _0c3066_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000002,_0c0f64_data(,%edx,2)
		je     _053317_jump
		mov    $0x000002,%cl
		jmp    _053337_jump

	_053317_jump:
		call   _042060_func
		test   %ax,%ax
		je     _053337_jump
		mov    _0c3066_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000003,_0c0f64_data(,%edx,2)
		je     _053337_jump
		mov    $0x000003,%cl

	_053337_jump:
		cmp    $0x000004,%cl
		je     _0533bc_jump
		xor    %eax,%eax
		mov    _0c0f66_data,%si
		mov    %cl,%al
		cmp    %si,%ax
		je     _05336d_jump
		cmp    _0c0f68_data,%ax
		je     _05336d_jump
		cmp    _0c0f6a_data,%ax
		je     _05336d_jump
		mov    _0c3066_data,%edx
		sar    $0x000010,%edx
		jmp    _0533b4_jump

	_05336d_jump:
		mov    $0x000044,%eax
		call   _071754_func
		mov    $0x000001,%al
		jmp    _05337d_jump

	_05337b_jump:
		inc    %al

	_05337d_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %al,%dl
		mov    %cl,%bl
		cmp    _0c0f64_data(,%edx,2),%bx
		je     _053393_jump
		cmp    $0x000003,%al
		jbe    _05337b_jump

	_053393_jump:
		mov    _0c3066_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    %al,%bl
		mov    _0c0f64_data(,%edx,2),%ax
		mov    %ax,_0c0f64_data(,%ebx,2)
		xor    %eax,%eax
		mov    %cl,%al

	_0533b4_jump:
		mov    %ax,_0c0f64_data(,%edx,2)

	_0533bc_jump:
		movb   $0x000001,_0c33a3_data
		call   _0559d0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0533ce_jump:
		cmpw   $0x000004,_0c3068_data
		jne    _05340a_jump
		call   _0426b0_func
		test   %al,%al
		je     _05340a_jump
		cmpb   $0x000000,_0c33ce_data
		je     _05340a_jump
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		xor    %edx,%edx
		mov    %ax,_0c0f66_data
		mov    %dx,_0c0f68_data
		mov    %bx,_0c0f6a_data

	_05340a_jump:
		call   _0559d0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053418_func:
		push   %edx
		mov    _0dd9c4_data,%eax
		mov    0x0000a8(%eax),%al
		mov    %al,_0c3387_data
		cmpb   $0x000000,_0c3393_data
		jne    _05345d_jump
		mov    _0c0f66_data,%ax
		mov    %ax,_0af038_data
		mov    _0c0f68_data,%ax
		mov    %ax,_0af03a_data
		mov    _0c0f6a_data,%ax
		mov    %ax,_0af03e_data
		call   _041b20_func
		pop    %edx
		ret    

	_05345d_jump:
		xor    %dl,%dl
		mov    %dl,_0aa503_data
		cmpb   $0x000000,_0a7cd3_data
		jne    _053473_jump
		call   _03ead0_func

	_053473_jump:
		pop    %edx
		ret    



_053478_func:
		push   %ebx
		push   %edx
		mov    _0dd9c4_data,%eax
		mov    (%eax),%dl
		mov    %dl,_0c33ce_data
		mov    0x000001(%eax),%dx
		mov    %dx,_0c3066_data
		mov    0x000003(%eax),%dx
		mov    %dx,_0c3070_data
		mov    0x000005(%eax),%dx
		mov    %dx,_0c3078_data
		mov    0x000007(%eax),%dx
		mov    %dx,_0c305e_data
		cmpb   $0x000000,_0a7cd3_data
		je     _0534e8_jump
		mov    0x000009(%eax),%dx
		sub    $0x000002,%edx
		mov    %dx,_0c3068_data
		mov    0x00000c(%eax),%dl
		mov    %dl,_0aa501_data
		mov    0x00000e(%eax),%dx
		dec    %edx
		mov    %dx,_0c302a_data
		mov    0x000010(%eax),%dx
		sub    $0x000003,%edx
		jmp    _053512_jump

	_0534e8_jump:
		mov    0x000009(%eax),%dx
		sub    $0x000002,%edx
		mov    %dx,_0c3068_data
		mov    0x00000d(%eax),%dl
		mov    %dl,_0aa501_data
		mov    0x00000e(%eax),%dx
		dec    %edx
		mov    %dx,_0c302a_data
		mov    0x000010(%eax),%dx
		sub    $0x000002,%edx

	_053512_jump:
		mov    %dx,_0c304c_data
		mov    0x000012(%eax),%dl
		xor    %ebx,%ebx
		mov    %dl,_0dda14_data
		mov    %dl,%bl
		mov    0x000018(%eax),%dx
		sub    %ebx,%edx
		mov    0x00001c(%eax),%ebx
		mov    %dx,_0c304e_data
		sar    $0x000010,%ebx
		mov    0x00001a(%eax),%edx
		mov    0x000018(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _055854_func
		pop    %edx
		pop    %ebx
		ret    



_053550_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0535f8_func,%edx
		mov    $_053a10_func,%ebx
		mov    $_053eac_func,%ecx
		mov    $_054188_func,%esi
		mov    $_053550_func,%edi
		mov    $0x000001,%ah
		mov    %edx,_0dd9d0_data
		mov    %ebx,_0dd9e0_data
		mov    %ecx,_0dd9dc_data
		mov    %esi,_0dd9e4_data
		mov    %edi,_0dd9d4_data
		mov    %ah,_0dda16_data
		xor    %edx,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0a7cde_data,%al
		mov    %dx,_0c0f66_data
		mov    %bx,_0a7cdc_data
		mov    %bx,_0c0f68_data
		mov    %ax,_0c0f6a_data
		mov    _0a7cd6_data,%ax
		mov    %bx,_0c0f70_data
		mov    %ax,_0c0f6c_data
		xor    %eax,%eax
		xor    %dl,%dl
		mov    _0a7cdf_data,%al
		mov    %dl,_0c336c_data
		mov    %ax,_0c0f6e_data
		call   _0556c8_func
		mov    %ax,_0dda0a_data
		call   _053478_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0535f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		lea    0x000014(%esp),%ecx
		lea    0x000018(%esp),%ebx
		lea    0x00001c(%esp),%edx
		mov    $0x000002,%eax
		call   _01f3b8_func
		mov    _0dd9c4_data,%eax
		mov    0x00002e(%eax),%eax
		mov    _0bf2f4_data,%edx
		sar    $0x000010,%eax
		mov    $_0b8198_data,%edi
		mov    (%edx,%eax,4),%esi
		push   %edi

	_053631_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _053649_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _053631_jump

	_053649_jump:
		pop    %edi
		mov    _0dd9c4_data,%eax
		mov    _0c304e_data,%dx
		mov    0x000032(%eax),%bx
		add    %ebx,%edx
		mov    %dx,_0b8268_data
		mov    _0c309c_data,%dx
		mov    %dx,_0b826a_data
		mov    0x000036(%eax),%dl
		mov    %dl,_0b826c_data
		mov    0x000039(%eax),%dl
		mov    %dl,_0b826f_data
		mov    0x000090(%eax),%dl
		mov    %dl,_0b8a04_data
		mov    0x000092(%eax),%dl
		mov    %dl,_0b8a06_data
		mov    0x000091(%eax),%dl
		mov    %dl,_0b8a05_data
		mov    0x000093(%eax),%dl
		mov    %dl,_0b8a07_data
		mov    0x000024(%eax),%edx
		mov    _0bf2f4_data,%eax
		sar    $0x000010,%edx
		mov    $_0aa458_data,%edi
		mov    (%eax,%edx,4),%esi
		push   %edi

	_0536c7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0536df_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0536c7_jump

	_0536df_jump:
		pop    %edi
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _086bfe_func
		mov    _0aa501_data,%bl
		jmp    _05386c_jump

	_0536f4_jump:
		imul   $0x00000a,%eax,%ecx
		mov    _0dd9c4_data,%edx
		mov    0x00002e(%ecx,%edx,1),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%esi
		mov    _0bf2f4_data,%edx
		mov    (%edx,%esi,1),%esi
		imul   $0x0000d8,%eax,%edx
		mov    $_0b8198_data,%ebp
		add    %edx,%ebp
		mov    %ebp,%edi
		push   %edi

	_053724_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05373c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _053724_jump

	_05373c_jump:
		pop    %edi
		mov    _0dd9c4_data,%esi
		lea    (%esi,%ecx,1),%eax
		mov    0x000036(%eax),%cl
		mov    %cl,_0b826c_data(%edx)
		mov    0x000038(%eax),%cl
		mov    %cl,_0b826e_data(%edx)
		mov    0x000037(%eax),%cl
		mov    %cl,_0b826d_data(%edx)
		mov    0x000039(%eax),%cl
		mov    %cl,_0b826f_data(%edx)
		cmp    _0c302a_data,%bx
		jne    _0537ce_jump
		mov    0x000074(%esi),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ecx
		mov    _0bf2f4_data,%eax
		mov    (%ecx,%eax,1),%esi
		push   %edi

	_053789_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0537a1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _053789_jump

	_0537a1_jump:
		pop    %edi
		mov    _0dd9c4_data,%eax
		mov    0x000078(%eax),%cx
		mov    %cx,_0b8268_data(%edx)
		mov    _0c3090_data,%cx
		mov    %cx,_0b826a_data(%edx)
		mov    0x00007f(%eax),%al
		mov    %al,_0b826f_data(%edx)
		jmp    _053858_jump

	_0537ce_jump:
		mov    _0c304e_data,%cx
		mov    _0c3062_data,%di
		mov    0x000032(%eax),%si
		mov    0x00001c(%esp),%eax
		add    %esi,%ecx
		add    %edi,%eax
		mov    %cx,_0b8268_data(%edx)
		cmp    $0x000001,%bx
		jne    _053813_jump
		xor    %ecx,%ecx
		mov    %ebx,%esi
		mov    _0aa501_data,%cl
		sub    %ecx,%esi
		mov    %esi,%ecx
		add    %ebx,%ecx
		imul   %ecx,%eax
		mov    _0c309c_data,%di
		add    %edi,%eax
		jmp    _053851_jump

	_053813_jump:
		cmpb   $0x000000,_0a7cd3_data
		je     _053839_jump
		xor    %ecx,%ecx
		mov    %ebx,%esi
		mov    _0aa501_data,%cl
		sub    %ecx,%esi
		mov    %esi,%ecx
		inc    %ecx
		imul   %ecx,%eax
		mov    _0c309c_data,%si
		add    %esi,%eax
		jmp    _053851_jump

	_053839_jump:
		xor    %ch,%ch
		mov    %ebx,%esi
		mov    _0aa501_data,%cl
		sub    %ecx,%esi
		imul   %esi,%eax
		mov    _0c309c_data,%cx
		add    %ecx,%eax

	_053851_jump:
		mov    %ax,_0b826a_data(%edx)

	_053858_jump:
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		add    $_0b8198_data,%eax
		inc    %ebx
		call   _01f8d4_func

	_05386c_jump:
		xor    %eax,%eax
		mov    _0c304a_data,%edx
		mov    _0aa501_data,%al
		sar    $0x000010,%edx
		add    %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jle    _0536f4_jump
		mov    _0dd9c4_data,%ebx
		mov    _0c3082_data,%cx
		sub    0x0000ba(%ebx),%cx
		mov    _0c3028_data,%esi
		mov    _0c302a_data,%ax
		sar    $0x000010,%esi
		mov    %ax,_0c3068_data
		lea    0x000000(,%esi,8),%eax
		sub    %esi,%eax
		shl    $0x000002,%eax
		mov    _0c304e_data,%dx
		sub    %esi,%eax
		movzbw _0dda14_data,%di
		mov    _0c3082_data,%si
		mov    _0b826a_data(,%eax,8),%ax
		mov    0x0000bc(%ebx),%bx
		sub    %esi,%eax
		add    %edi,%edi
		add    %eax,%ebx
		mov    _0dda04_data,%ax
		mov    %bx,0x000024(%esp)
		cmp    %ax,%dx
		jge    _0538fd_jump
		mov    %edx,%eax

	_0538fd_jump:
		mov    _0dda08_data,%bx
		cmp    %bx,%cx
		jge    _05390b_jump
		mov    %ecx,%ebx

	_05390b_jump:
		mov    _0dda0a_data,%ebp
		mov    _0dda02_data,%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		mov    %ebp,0x000008(%esp)
		movswl %di,%ebp
		movswl %dx,%esi
		add    %ebp,%esi
		mov    0x000008(%esp),%ebp
		cmp    %ebp,%esi
		jge    _05393e_jump
		movswl %ax,%esi
		sub    %esi,%ebp
		mov    %ebp,0x000010(%esp)
		jmp    _053947_jump

	_05393e_jump:
		movswl %ax,%ebp
		sub    %ebp,%esi
		mov    %esi,0x000010(%esp)

	_053947_jump:
		mov    0x000010(%esp),%esi
		mov    %si,0x000020(%esp)
		mov    _0dda06_data,%esi
		sar    $0x000010,%esi
		mov    %esi,(%esp)
		mov    _0dda04_data,%esi
		mov    (%esp),%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		movswl %cx,%esi
		mov    %ebp,0x00000c(%esp)
		mov    %esi,0x000004(%esp)
		mov    0x000022(%esp),%esi
		mov    0x000004(%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		mov    0x00000c(%esp),%ebp
		cmp    %ebp,%esi
		jge    _053993_jump
		movswl %bx,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		jmp    _053998_jump

	_053993_jump:
		movswl %bx,%ebp
		sub    %ebp,%esi

	_053998_jump:
		mov    %dx,_0dda04_data
		mov    0x000024(%esp),%edx
		mov    %cx,_0dda08_data
		mov    %dx,_0dda06_data
		mov    _0a7cd3_data,%dl
		mov    %di,_0dda0c_data
		test   %dl,%dl
		je     _0539db_jump
		push   $0x000001
		movswl %si,%ecx
		mov    0x000022(%esp),%esi
		movswl %bx,%edx
		sar    $0x000010,%esi
		cwtl   
		mov    %esi,%ebx
		call   _056624_func
		jmp    _0539f2_jump

	_0539db_jump:
		mov    0x00001e(%esp),%edx
		movswl %si,%ecx
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%esi
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _056db8_func

	_0539f2_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0539fc_switch:
		.long   _053e84_case
		.long   _053e84_case
		.long   _053bf7_case
		.long   _053d8d_case
		.long   _053d76_case




_053a10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		lea    0x000014(%esp),%edi
		mov    _0bf2f4_data,%eax
		lea    0x000020(%esp),%ecx
		lea    0x00001c(%esp),%ebx
		mov    0x000050(%eax),%edx
		mov    $_04f1b8_jump,%esi
		mov    %edx,0x00000c(%esp)
		mov    0x000054(%eax),%eax
		lea    0x000030(%esp),%edx
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %eax,(%esp)
		lea    0x000018(%esp),%edi
		mov    _04f1b4_func,%eax
		mov    $_04f1bb_jump,%esi
		mov    %eax,0x000004(%esp)
		mov    $0x000002,%eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _01f3b8_func
		movl   $0x000008,0x000020(%esp)
		call   _03ee10_func
		cmpb   $0x000000,_0a7cd3_data
		je     _053aa0_jump
		mov    _0dda04_data,%ecx
		mov    _0dda0a_data,%ebx
		mov    _0dda06_data,%edx
		mov    _0dda02_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _022bd8_func

	_053aa0_jump:
		mov    _0dd9c4_data,%eax
		mov    _0c3080_data,%ebx
		xor    %edx,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x00002f(%eax),%dl
		mov    0x00002c(%eax),%cl
		push   %edx
		mov    0x000026(%eax),%edx
		mov    $_0aa458_data,%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		mov    _0b8268_data,%ebx
		mov    _0b8266_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0b826f_data,%al
		mov    _0b826c_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0b8198_data,%eax
		call   _01b0f8_func
		mov    _0dda08_data,%eax
		xor    %ecx,%ecx
		mov    _0b826a_data,%dx
		mov    _0dda14_data,%cl
		sar    $0x000010,%eax
		sub    $0x00000f,%edx
		push   %eax
		movswl %dx,%edx
		mov    0x000024(%esp),%eax
		add    $0x000096,%ecx
		sub    $0x000003,%eax
		push   $0x000100
		shl    $0x000004,%eax
		push   $0x000080
		sub    %eax,%ecx
		movswl %ax,%ebx
		movswl %cx,%eax
		mov    $0x00000c,%ecx
		call   _022d94_func
		mov    _0aa501_data,%al
		mov    %al,0x000034(%esp)
		dec    %al
		mov    %al,0x000038(%esp)
		jmp    _053e8c_jump

	_053b53_jump:
		cmp    $0x000002,%al
		je     _053e84_case
		cmp    $0x000005,%al
		jne    _053b76_jump
		cmpb   $0x000000,_0a7cd3_data
		je     _053b76_jump
		cmpw   $0x000000,_0c0f66_data
		je     _053e84_case

	_053b76_jump:
		xor    %eax,%eax
		mov    0x000034(%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    $_0b8198_data,%esi
		mov    _0b826a_data(%eax),%dx
		mov    _0c3068_data,%bx
		mov    %dx,0x000024(%esp)
		xor    %edx,%edx
		mov    _0b8268_data(%eax),%di
		mov    0x000034(%esp),%dl
		add    %eax,%esi
		cmp    %bx,%dx
		je     _053bd2_jump
		mov    0x000022(%esp),%ebx
		xor    %edx,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    _0b826f_data(%eax),%dl
		mov    _0b826c_data(%eax),%cl
		push   %edx
		mov    %esi,%eax
		movswl %di,%edx
		call   _01b0f8_func
		jmp    _053bde_jump

	_053bd2_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _055a20_func

	_053bde_jump:
		mov    0x000038(%esp),%bh
		cmp    $0x000004,%bh
		ja     _053e84_case
		xor    %eax,%eax
		mov    %bh,%al
		jmp    *%cs:_0539fc_switch(,%eax,4)

	_053bf7_case:
		mov    0x000020(%esp),%ebx
		imul   $0x000005,%ebx,%edx
		mov    %ebx,%eax
		mov    _0c0f6a_data,%cx
		add    %ebx,%eax
		test   %cx,%cx
		jne    _053c3f_jump
		xor    %ebx,%ebx
		mov    _0dda14_data,%bl
		add    $0x000096,%ebx
		sub    %eax,%ebx
		lea    0x000018(%esp),%ebp
		mov    %ebx,%eax
		sub    %edx,%ebx
		lea    0x000014(%esp),%edi
		mov    %bx,0x00002c(%esp)
		lea    0x000004(%esp),%ebx
		mov    0x00002c(%esp),%esi
		mov    %ebx,0x000010(%esp)
		sub    %edx,%esi
		jmp    _053ca3_jump

	_053c3f_jump:
		cmp    $0x000001,%cx
		jne    _053c74_jump
		xor    %ebx,%ebx
		mov    _0dda14_data,%bl
		add    $0x000096,%ebx
		lea    0x000018(%esp),%edi
		sub    %eax,%ebx
		lea    0x000014(%esp),%ebp
		mov    %ebx,%eax
		mov    %bx,0x00002c(%esp)
		sub    %edx,%eax
		lea    0x000004(%esp),%ebx
		mov    %eax,%esi
		mov    %ebx,0x000010(%esp)
		sub    %edx,%esi
		jmp    _053ca3_jump

	_053c74_jump:
		xor    %ebx,%ebx
		mov    _0dda14_data,%bl
		add    $0x000096,%ebx
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    %eax,%esi
		lea    0x000014(%esp),%ebx
		sub    %edx,%esi
		mov    %ebx,0x000010(%esp)
		mov    %esi,%ebx
		lea    0x000018(%esp),%ebp
		sub    %edx,%ebx
		lea    0x000004(%esp),%edi
		mov    %bx,0x00002c(%esp)

	_053ca3_jump:
		mov    0x000022(%esp),%edx
		push   $0x000005
		sar    $0x000010,%edx
		sub    $0x00000a,%eax
		mov    %edx,0x00000c(%esp)
		movswl %ax,%edx
		mov    0x000030(%esp),%eax
		mov    $0x000002,%ecx
		sub    $0x00000a,%eax
		mov    0x00000c(%esp),%ebx
		mov    %ax,0x000030(%esp)
		mov    %ebp,%eax
		call   _01b0f8_func
		mov    _0c0f66_data,%dx
		sub    $0x00000a,%esi
		test   %dx,%dx
		jne    _053d01_jump
		cmpb   $0x000002,_0dda16_data
		jne    _053d01_jump
		push   $0x000005
		mov    $0x000002,%ecx
		mov    0x00000c(%esp),%ebx
		mov    0x000014(%esp),%eax
		movswl %si,%edx
		call   _01b0f8_func

	_053d01_jump:
		xor    %eax,%eax
		mov    _0c3068_data,%bx
		mov    0x000034(%esp),%al
		cmp    %bx,%ax
		jne    _053d5d_jump
		mov    %edi,%esi
		mov    $_0b8930_data,%edi
		push   %edi

	_053d1b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _053d33_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _053d1b_jump

	_053d33_jump:
		pop    %edi
		mov    0x00002c(%esp),%eax
		mov    %ax,_0b8a00_data
		mov    0x000024(%esp),%eax
		mov    %ax,_0b8a02_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01f8d4_func
		mov    %edi,%eax
		call   _055a20_func
		jmp    _053e84_case

	_053d5d_jump:
		push   $0x000003
		mov    0x000026(%esp),%ebx
		mov    0x00002e(%esp),%edx
		mov    $0x000002,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		jmp    _053e7c_jump

	_053d76_case:
		cmpb   $0x000000,_0a7cd3_data
		je     _053d8d_case
		cmpw   $0x000000,_0c0f66_data
		je     _053e84_case

	_053d8d_case:
		mov    0x000020(%esp),%esi
		imul   $0x000005,%esi,%edx
		xor    %ebx,%ebx
		mov    0x000034(%esp),%bl
		mov    %esi,%eax
		mov    _0c0f64_data(,%ebx,2),%di
		add    %esi,%eax
		test   %di,%di
		je     _053dcd_jump
		xor    %ebx,%ebx
		mov    _0dda14_data,%bl
		add    $0x000096,%ebx
		sub    %eax,%ebx
		mov    (%esp),%ebp
		mov    %ebx,%eax
		sub    %edx,%ebx
		mov    0x00000c(%esp),%esi
		mov    %bx,0x000028(%esp)
		jmp    _053ded_jump

	_053dcd_jump:
		xor    %ebx,%ebx
		mov    _0dda14_data,%bl
		add    $0x000096,%ebx
		mov    (%esp),%esi
		sub    %eax,%ebx
		mov    0x00000c(%esp),%ebp
		mov    %ebx,%eax
		mov    %bx,0x000028(%esp)
		sub    %edx,%eax

	_053ded_jump:
		push   $0x000005
		mov    0x000026(%esp),%edi
		sub    $0x00000a,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    0x00002c(%esp),%eax
		sar    $0x000010,%edi
		sub    $0x00000a,%eax
		mov    %edi,%ebx
		mov    %ax,0x00002c(%esp)
		mov    %ebp,%eax
		call   _01b0f8_func
		xor    %eax,%eax
		mov    _0c3068_data,%dx
		mov    0x000034(%esp),%al
		cmp    %dx,%ax
		jne    _053e6d_jump
		mov    $_0b8930_data,%edi
		push   %edi

	_053e2e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _053e46_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _053e2e_jump

	_053e46_jump:
		pop    %edi
		mov    0x000028(%esp),%eax
		mov    %ax,_0b8a00_data
		mov    0x000024(%esp),%eax
		mov    %ax,_0b8a02_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01f8d4_func
		mov    %edi,%eax
		call   _055a20_func
		jmp    _053e84_case

	_053e6d_jump:
		push   $0x000003
		mov    0x00002a(%esp),%edx
		mov    $0x000002,%ecx
		mov    %edi,%ebx
		mov    %esi,%eax

	_053e7c_jump:
		sar    $0x000010,%edx
		call   _01b0f8_func

	_053e84_case:
		incb   0x000038(%esp)
		incb   0x000034(%esp)

	_053e8c_jump:
		xor    %eax,%eax
		mov    _0c302a_data,%bx
		mov    0x000034(%esp),%al
		cmp    %bx,%ax
		jle    _053b53_jump
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053eac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _05598c_func
		mov    _0dd9c4_data,%eax
		mov    0x0000a8(%eax),%al
		xor    %bl,%bl
		mov    %al,_0c3387_data
		call   _0427d4_func
		test   %al,%al
		je     _053ed8_jump
		movb   $0x000001,_0c3393_data

	_053ed8_jump:
		movb   $0x000003,_0aa501_data
		cmpb   $0x000000,_0c33ce_data
		jne    _053f1c_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _053ff4_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    _053ff4_jump

	_053f1c_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _053f8f_jump
		mov    $0x000044,%eax
		call   _071754_func
		xor    %eax,%eax
		mov    _0c3068_data,%si
		mov    _0aa501_data,%al
		cmp    %si,%ax
		jne    _053f54_jump
		mov    _0c302a_data,%ax
		mov    %ax,_0c3068_data
		jmp    _053ff4_jump

	_053f54_jump:
		cmp    $0x000003,%si
		je     _053f76_jump
		cmp    _0c302a_data,%si
		jne    _053f83_jump
		cmpb   $0x000000,_0a7cd3_data
		je     _053f83_jump
		cmpw   $0x000000,_0c0f66_data
		jne    _053f83_jump

	_053f76_jump:
		subw   $0x000002,_0c3068_data
		jmp    _053ff4_jump

	_053f83_jump:
		decw   _0c3068_data
		jmp    _053ff4_jump

	_053f8f_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _053ff4_jump
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3068_data,%ax
		mov    _0c302a_data,%cx
		cmp    %cx,%ax
		jne    _053fc4_jump
		xor    %ecx,%eax
		mov    _0aa501_data,%al
		mov    %ax,_0c3068_data
		jmp    _053ff4_jump

	_053fc4_jump:
		cmp    $0x000001,%ax
		je     _053fe3_jump
		cmp    $0x000004,%ax
		jne    _053fed_jump
		cmpb   $0x000000,_0a7cd3_data
		je     _053fed_jump
		cmpw   $0x000000,_0c0f66_data
		jne    _053fed_jump

	_053fe3_jump:
		addw   $0x000002,_0c3068_data
		jmp    _053ff4_jump

	_053fed_jump:
		incw   _0c3068_data

	_053ff4_jump:
		cmpw   $0x000003,_0c3068_data
		jne    _0540be_jump
		call   _041ddc_func
		test   %ax,%ax
		jne    _0540be_jump
		call   _041e40_func
		test   %ax,%ax
		jne    _0540be_jump
		cmpb   $0x000000,_0c33ce_data
		je     _0540be_jump
		call   _0426b0_func
		test   %al,%al
		jne    _05403e_jump
		call   _041d78_func
		test   %ax,%ax
		je     _054078_jump

	_05403e_jump:
		xor    %eax,%eax
		mov    _0c0f6a_data,%si
		mov    _0dda16_data,%al
		cmp    %si,%ax
		jle    _05405c_jump
		mov    %esi,%eax
		inc    %eax
		mov    %ax,_0c0f6a_data
		jmp    _054065_jump

	_05405c_jump:
		xor    %edi,%edi
		mov    %di,_0c0f6a_data

	_054065_jump:
		xor    %eax,%eax
		mov    _0c0f6a_data,%al
		mov    $0x000001,%bl
		call   _04f728_func
		jmp    _05416c_jump

	_054078_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _05416c_jump
		mov    _0c0f6a_data,%bx
		test   %bx,%bx
		jle    _05409e_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0c0f6a_data
		jmp    _0540ab_jump

	_05409e_jump:
		xor    %eax,%eax
		mov    _0dda16_data,%al
		mov    %ax,_0c0f6a_data

	_0540ab_jump:
		xor    %eax,%eax
		mov    _0c0f6a_data,%al
		mov    $0x000001,%bl
		call   _04f728_func
		jmp    _05416c_jump

	_0540be_jump:
		mov    _0c3068_data,%dx
		cmp    $0x000004,%dx
		jl     _05412c_jump
		cmp    _0c302a_data,%dx
		jge    _05412c_jump
		cmp    $0x000006,%dx
		je     _05412c_jump
		cmpb   $0x000000,_0c33ce_data
		je     _05412c_jump
		call   _0426b0_func
		test   %al,%al
		jne    _054100_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _054100_jump
		call   _041d14_func
		test   %ax,%ax
		je     _05412c_jump

	_054100_jump:
		mov    _0c3066_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0c0f64_data(,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    %eax,%edx
		mov    _0c3066_data,%eax
		sar    $0x000010,%eax
		mov    $0x000001,%bl
		mov    %dx,_0c0f64_data(,%eax,2)
		jmp    _05416c_jump

	_05412c_jump:
		mov    _0c3068_data,%di
		cmp    $0x000001,%di
		jne    _05416c_jump
		call   _0426b0_func
		test   %al,%al
		je     _05416c_jump
		cmpb   $0x000000,_0c33ce_data
		je     _05416c_jump
		mov    _0c3066_data,%edx
		mov    _0dd9c4_data,%eax
		sar    $0x000010,%edx
		mov    0x0000a9(%edx,%eax,1),%al
		mov    %di,_0c306a_data
		mov    %al,_0c3387_data

	_05416c_jump:
		test   %bl,%bl
		je     _05417b_jump
		call   _0556c8_func
		mov    %ax,_0dda0a_data

	_05417b_jump:
		call   _0559d0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054188_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0c3393_data
		jne    _0541e6_jump
		mov    _0c0f68_data,%ax
		mov    %ax,_0a7cdc_data
		mov    _0c0f6a_data,%al
		mov    %al,_0a7cde_data
		mov    _0c0f6c_data,%ax
		mov    %ax,_0a7cd6_data
		mov    _0c0f6e_data,%al
		xor    %bh,%bh
		mov    %al,_0a7cdf_data
		call   _04f8e8_func
		mov    %al,_0a7ce0_data
		mov    %bh,_0a7c9d_data
		mov    _0c0f70_data,%al
		mov    %bh,_0c336e_data
		mov    %al,_0c336c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0541e6_jump:
		xor    %dl,%dl
		mov    %dl,_0aa503_data
		cmpb   $0x000000,_0a7c9d_data
		jne    _05422c_jump
		mov    _0a7cda_data,%eax
		sar    $0x000010,%eax
		mov    _0aa4e2_data(,%eax,2),%ecx
		mov    _0aa4da_data(,%eax,2),%ebx
		mov    _0aa4d2_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _0aa4ca_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _061b44_func

	_05422c_jump:
		mov    $0x000019,%eax
		call   _03fc90_func
		xor    %eax,%eax
		mov    _0a7cde_data,%al
		call   _04f728_func
		cmpb   $0x000000,_0a7cd3_data
		jne    _054250_jump
		call   _03ead0_func

	_054250_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054254_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_05432c_func,%edx
		mov    _0dd9c4_data,%eax
		mov    $_05463c_func,%ebx
		mov    %edx,_0dd9d0_data
		mov    (%eax),%dl
		mov    $_054770_func,%ecx
		mov    %dl,_0c33ce_data
		mov    0x000001(%eax),%dx
		mov    $_054904_func,%esi
		mov    %dx,_0c3066_data
		mov    0x000003(%eax),%dx
		mov    $_054254_func,%edi
		mov    %dx,_0c3070_data
		mov    0x000005(%eax),%dx
		mov    %ebx,_0dd9e0_data
		mov    %dx,_0c3078_data
		mov    0x000007(%eax),%dx
		mov    %ecx,_0dd9dc_data
		mov    %dx,_0c305e_data
		mov    0x000009(%eax),%dx
		mov    %esi,_0dd9e4_data
		mov    %dx,_0c3068_data
		mov    0x00000b(%eax),%dl
		mov    %edi,_0dd9d4_data
		mov    %dl,_0aa501_data
		mov    0x00000c(%eax),%dx
		mov    0x000017(%eax),%ebx
		mov    %dx,_0c302a_data
		mov    0x00000e(%eax),%dx
		sar    $0x000010,%ebx
		mov    %dx,_0c304c_data
		mov    0x000015(%eax),%edx
		mov    0x000013(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    $0x000001,%ecx
		call   _055854_func
		xor    %edx,%edx
		mov    %cx,_0c0f64_data
		mov    %dx,_0c0f66_data
		mov    %dx,_0c0f68_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05432c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		lea    0x000014(%esp),%ecx
		lea    0x000008(%esp),%ebx
		lea    0x000010(%esp),%edx
		mov    $0x000002,%eax
		call   _01f3b8_func
		mov    _0dd9c4_data,%eax
		mov    0x000088(%eax),%dl
		mov    %dl,_0b8a07_data
		mov    0x000085(%eax),%dl
		mov    %dl,_0b8a04_data
		mov    0x000087(%eax),%dl
		mov    %dl,_0b8a06_data
		mov    0x000086(%eax),%dl
		mov    %dl,_0b8a05_data
		mov    0x000019(%eax),%eax
		mov    _0bf2f4_data,%edx
		sar    $0x000010,%eax
		mov    $_0aa458_data,%edi
		mov    (%edx,%eax,4),%esi
		xor    %ebx,%ebx
		push   %edi

	_054397_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0543af_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _054397_jump

	_0543af_jump:
		pop    %edi
		mov    _0aa501_data,%bl
		jmp    _0544c5_jump

	_0543bb_jump:
		imul   $0x00000a,%edx,%ebp
		imul   $0x0000d8,%edx,%edx
		mov    _0dd9c4_data,%esi
		lea    (%esi,%ebp,1),%eax
		mov    0x000027(%eax),%di
		mov    %di,_0b8268_data(%edx)
		mov    0x00002b(%eax),%cl
		mov    %cl,_0b826c_data(%edx)
		mov    0x00002d(%eax),%cl
		mov    %cl,_0b826e_data(%edx)
		mov    0x00002c(%eax),%cl
		mov    $_0b8198_data,%edi
		mov    %cl,_0b826d_data(%edx)
		mov    _0c302a_data,%cx
		add    %edx,%edi
		cmp    %cx,%bx
		jne    _05444c_jump
		mov    0x000041(%esi),%eax
		mov    _0bf2f4_data,%esi
		sar    $0x000010,%eax
		mov    (%esi,%eax,4),%esi
		push   %edi

	_054416_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05442e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _054416_jump

	_05442e_jump:
		pop    %edi
		mov    _0c3090_data,%ax
		mov    %ax,_0b826a_data(%edx)
		mov    _0dd9c4_data,%eax
		mov    0x00004c(%eax),%al
		mov    %al,_0b826f_data(%edx)
		jmp    _0544b1_jump

	_05444c_jump:
		mov    0x000023(%eax),%eax
		mov    _0bf2f4_data,%esi
		sar    $0x000010,%eax
		mov    (%esi,%eax,4),%esi
		push   %edi

	_05445c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _054474_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05445c_jump

	_054474_jump:
		pop    %edi
		mov    _0dd9c4_data,%eax
		mov    0x00002e(%eax,%ebp,1),%al
		mov    %ebx,%ecx
		mov    %al,_0b826f_data(%edx)
		xor    %eax,%eax
		mov    0x000010(%esp),%esi
		mov    _0aa501_data,%al
		mov    _0c3062_data,%di
		sub    %eax,%ecx
		add    %edi,%esi
		mov    %ecx,%eax
		imul   %esi,%eax
		mov    _0c309c_data,%cx
		add    %ecx,%eax
		mov    %ax,_0b826a_data(%edx)

	_0544b1_jump:
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		add    $_0b8198_data,%eax
		inc    %ebx
		call   _01f8d4_func

	_0544c5_jump:
		xor    %eax,%eax
		mov    _0c304a_data,%edx
		mov    _0aa501_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jle    _0543bb_jump
		mov    _0dd9c4_data,%ecx
		mov    _0c3082_data,%bx
		xor    %eax,%eax
		mov    0x0000af(%ecx),%dx
		mov    _0dda14_data,%al
		sub    %edx,%ebx
		mov    _0c3028_data,%edx
		add    %eax,%eax
		sar    $0x000010,%edx
		mov    %ax,0x000018(%esp)
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c3082_data,%di
		mov    _0b826a_data(,%eax,8),%ax
		mov    0x0000b1(%ecx),%dx
		sub    %edi,%eax
		mov    _0c304e_data,%si
		add    %eax,%edx
		mov    _0dda04_data,%ax
		mov    %dx,0x00000c(%esp)
		cmp    %ax,%si
		jge    _054552_jump
		mov    %esi,%edx
		jmp    _054554_jump

	_054552_jump:
		mov    %eax,%edx

	_054554_jump:
		mov    _0dda08_data,%cx
		cmp    %cx,%bx
		jge    _054564_jump
		mov    %ebx,%eax
		jmp    _054566_jump

	_054564_jump:
		mov    %ecx,%eax

	_054566_jump:
		mov    _0dda02_data,%ecx
		mov    _0dda0a_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		add    %ecx,%edi
		mov    0x000016(%esp),%ecx
		movswl %si,%ebp
		sar    $0x000010,%ecx
		add    %ecx,%ebp
		cmp    %ebp,%edi
		jle    _054593_jump
		movswl %dx,%ecx
		sub    %ecx,%edi
		mov    %edi,%ecx
		jmp    _05459a_jump

	_054593_jump:
		movswl %dx,%ecx
		sub    %ecx,%ebp
		mov    %ebp,%ecx

	_05459a_jump:
		mov    _0dda04_data,%ebp
		mov    %ecx,%edi
		mov    _0dda06_data,%ecx
		sar    $0x000010,%ebp
		sar    $0x000010,%ecx
		add    %ebp,%ecx
		movswl %bx,%ebp
		mov    %ebp,(%esp)
		mov    0x00000a(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x000004(%esp)
		mov    (%esp),%ebp
		add    0x000004(%esp),%ebp
		cmp    %ebp,%ecx
		jle    _0545d3_jump
		movswl %ax,%ebp
		sub    %ebp,%ecx
		jmp    _0545da_jump

	_0545d3_jump:
		movswl %ax,%ecx
		sub    %ecx,%ebp
		mov    %ebp,%ecx

	_0545da_jump:
		mov    %bx,_0dda08_data
		mov    0x000018(%esp),%ebx
		mov    %bx,_0dda0c_data
		mov    0x00000c(%esp),%ebx
		mov    %bx,_0dda06_data
		mov    _0a7cd3_data,%bl
		mov    %si,_0dda04_data
		test   %bl,%bl
		je     _05461f_jump
		push   $0x000001
		movswl %cx,%ecx
		movswl %di,%ebx
		cwtl   
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _056624_func
		jmp    _054632_jump

	_05461f_jump:
		movswl %cx,%ecx
		movswl %di,%ebx
		movswl %ax,%esi
		movswl %dx,%eax
		mov    %esi,%edx
		call   _056db8_func

	_054632_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05463c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		lea    0x000004(%esp),%edx
		mov    $0x000002,%eax
		call   _01f3b8_func
		call   _03ee10_func
		mov    _0dd9c4_data,%eax
		mov    _0c3080_data,%ebx
		xor    %edx,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x000024(%eax),%dl
		mov    0x000021(%eax),%cl
		push   %edx
		mov    0x00001b(%eax),%edx
		mov    $_0aa458_data,%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		mov    _0aa501_data,%al
		mov    %al,0x00000c(%esp)
		jmp    _054746_jump

	_054694_jump:
		imul   $0x0000d8,%ebx,%eax
		mov    _0b8268_data(%eax),%di
		mov    _0b826a_data(%eax),%si
		cmp    $0x000003,%bl
		jae    _0546c6_jump
		cmpw   $0x000000,_0c0f64_data(,%ebx,2)
		je     _0546c6_jump
		mov    _0dd9c4_data,%ebx
		mov    0x000088(%ebx),%bl
		jmp    _0546d9_jump

	_0546c6_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x00000a,%eax,%eax
		mov    _0dd9c4_data,%edx
		mov    0x00002e(%edx,%eax,1),%bl

	_0546d9_jump:
		xor    %eax,%eax
		mov    _0c3068_data,%cx
		mov    0x00000c(%esp),%al
		cmp    %cx,%ax
		je     _054716_jump
		xor    %eax,%eax
		mov    %bl,%al
		push   %eax
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		imul   $0x0000d8,%eax,%eax
		movswl %di,%edx
		xor    %ecx,%ecx
		movswl %si,%ebx
		mov    _0b826c_data(%eax),%cl
		add    $_0b8198_data,%eax
		call   _01b0f8_func
		jmp    _054742_jump

	_054716_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    %bl,_0b826f_data(%eax)
		mov    $_0b8198_data,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _01f8d4_func
		mov    %ebx,%eax
		call   _055a20_func

	_054742_jump:
		incb   0x00000c(%esp)

	_054746_jump:
		mov    _0c304a_data,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0aa501_data,%al
		sar    $0x000010,%edx
		mov    0x00000c(%esp),%bl
		add    %edx,%eax
		cmp    %eax,%ebx
		jle    _054694_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054770_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _05598c_func
		call   _0427d4_func
		test   %al,%al
		je     _05478a_jump
		movb   $0x000001,_0c3393_data

	_05478a_jump:
		cmpb   $0x000000,_0c33ce_data
		jne    _0547c7_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _054847_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _054847_jump

	_0547c7_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _054808_jump
		mov    $0x000044,%eax
		call   _071754_func
		xor    %eax,%eax
		mov    _0c3068_data,%si
		mov    _0aa501_data,%al
		cmp    %si,%ax
		jne    _0547fc_jump
		mov    _0c302a_data,%ax
		mov    %ax,_0c3068_data
		jmp    _054847_jump

	_0547fc_jump:
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0c3068_data
		jmp    _054847_jump

	_054808_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _054847_jump
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3068_data,%ax
		mov    _0c302a_data,%bx
		cmp    %bx,%ax
		jne    _05483d_jump
		xor    %ebx,%eax
		mov    _0aa501_data,%al
		mov    %ax,_0c3068_data
		jmp    _054847_jump

	_05483d_jump:
		mov    %eax,%ecx
		inc    %ecx
		mov    %cx,_0c3068_data

	_054847_jump:
		mov    _0c3068_data,%ax
		test   %ax,%ax
		jl     _0548f9_jump
		cmp    $0x000002,%ax
		jg     _0548f9_jump
		cmpb   $0x000000,_0c33ce_data
		je     _0548f9_jump
		call   _0426b0_func
		test   %al,%al
		jne    _05488a_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _05488a_jump
		call   _041d14_func
		test   %ax,%ax
		je     _0548f9_jump

	_05488a_jump:
		xor    %al,%al
		jmp    _054890_jump

	_05488e_jump:
		inc    %al

	_054890_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0c0f64_data(,%edx,2)
		je     _05488e_jump
		xor    %edx,%edx
		mov    _0c3068_data,%cx
		mov    %al,%dl
		cmp    %cx,%dx
		je     _0548f9_jump
		mov    _0c3066_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000000,_0c0f64_data(,%edx,2)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		mov    _0c3066_data,%edx
		sar    $0x000010,%edx
		mov    %bx,_0c0f64_data(,%edx,2)
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0c0f64_data(,%edx,2)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %bx,_0c0f64_data(,%edx,2)

	_0548f9_jump:
		call   _0559d0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054904_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c3393_data,%ah
		test   %ah,%ah
		jne    _05497e_jump
		cmpw   $0x000000,_0c0f64_data
		je     _054935_jump
		mov    $0x000001,%bl
		mov    %ah,_0a7c9d_data
		mov    %ah,_0c336e_data
		mov    %bl,_0a7cdf_data
		jmp    _05497e_jump

	_054935_jump:
		cmpw   $0x000000,_0c0f66_data
		je     _054958_jump
		mov    $0x000001,%cl
		mov    %ah,_0c336e_data
		mov    _0a7cde_data,%al
		mov    %cl,_0a7c9d_data
		cmp    $0x000002,%al
		jne    _05497e_jump
		jmp    _054971_jump

	_054958_jump:
		mov    $0x000001,%dl
		mov    _0a7cde_data,%bl
		mov    %dl,_0a7c9d_data
		mov    %dl,_0c336e_data
		cmp    $0x000002,%bl
		jne    _05497e_jump

	_054971_jump:
		mov    %ah,_0a7cde_data
		xor    %eax,%eax
		call   _04f728_func

	_05497e_jump:
		mov    _0dd9c4_data,%eax
		mov    0x0000a8(%eax),%al
		mov    %al,_0c3387_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054994_func:
		push   %esi
		push   %edi
		movw   $0x0000c8,(%eax)
		movw   $0x000000,(%edx)
		movw   $0x0000c8,(%ebx)
		mov    _0dd9c4_data,%eax
		movw   $0x000000,(%ecx)
		movswl (%eax),%edx
		mov    _0bf2f4_data,%eax
		mov    $_0b8930_data,%edi
		mov    $0x000046,%ecx
		mov    (%eax,%edx,4),%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0dd9c4_data,%eax
		mov    0x000002(%eax),%dx
		mov    %dx,_0b8a00_data
		mov    0x000004(%eax),%dx
		mov    %dx,_0b8a02_data
		mov    0x000006(%eax),%dl
		mov    %dl,_0b8a04_data
		mov    0x000007(%eax),%dl
		mov    %dl,_0b8a05_data
		mov    0x000008(%eax),%dl
		mov    0x000009(%eax),%al
		mov    %al,_0b8a07_data
		mov    %edi,%eax
		mov    %dl,_0b8a06_data
		call   _086bfe_func
		mov    %edi,%eax
		call   _01f8d4_func
		pop    %edi
		pop    %esi
		ret    



_054a24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		call   _03ee10_func
		cmpb   $0x000000,_0a7cd3_data
		je     _054a61_jump
		mov    _0dda04_data,%ecx
		mov    _0dda0a_data,%ebx
		mov    _0dda06_data,%edx
		mov    _0dda02_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _022bd8_func

	_054a61_jump:
		mov    $_0b8930_data,%eax
		call   _01b714_func
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x000013(%eax),%dl
		mov    0x000010(%eax),%cl
		mov    0x00000c(%eax),%ebx
		push   %edx
		sar    $0x000010,%ebx
		mov    0x00000a(%eax),%edx
		mov    $_0a2958_data,%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		xor    %dl,%dl
		mov    $_0a2964_data,%esi
		mov    %dl,0x00000c(%esp)

	_054a9c_jump:
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		mov    0x00001d(%eax),%dl
		push   %edx
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		mov    0x000018(%eax),%bx
		shl    $0x000003,%edx
		add    %ebx,%edx
		xor    %ecx,%ecx
		movswl %dx,%ebx
		mov    0x000014(%eax),%edx
		mov    0x00001a(%eax),%cl
		sar    $0x000010,%edx
		mov    %esi,%eax
		call   _01b0f8_func
		mov    0x00000c(%esp),%dh
		inc    %dh
		mov    %dh,0x00000c(%esp)
		cmp    $0x000007,%dh
		jb     _054a9c_jump
		mov    _0c301a_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		push   %eax
		push   $_0a2968_data
		lea    0x000008(%esp),%eax
		push   %eax
		xor    %ecx,%ecx
		call   _0852d9_func
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		add    $0x00000c,%esp
		mov    0x000027(%eax),%dl
		mov    0x000024(%eax),%cl
		mov    0x000020(%eax),%ebx
		push   %edx
		sar    $0x000010,%ebx
		mov    0x00001e(%eax),%edx
		lea    0x000004(%esp),%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		mov    _0c3022_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		push   %eax
		push   $_0a2968_data
		lea    0x000008(%esp),%eax
		push   %eax
		xor    %ecx,%ecx
		call   _0852d9_func
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		add    $0x00000c,%esp
		mov    0x000031(%eax),%dl
		mov    0x00002e(%eax),%cl
		mov    0x00002a(%eax),%ebx
		push   %edx
		sar    $0x000010,%ebx
		mov    0x000028(%eax),%edx
		lea    0x000004(%esp),%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		mov    _0c3024_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		push   %eax
		push   $_0a2968_data
		lea    0x000008(%esp),%eax
		push   %eax
		xor    %ecx,%ecx
		call   _0852d9_func
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		add    $0x00000c,%esp
		mov    0x00003b(%eax),%dl
		mov    0x000038(%eax),%cl
		mov    0x000034(%eax),%ebx
		push   %edx
		sar    $0x000010,%ebx
		mov    0x000032(%eax),%edx
		lea    0x000004(%esp),%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		mov    _0c301c_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		push   %eax
		push   $_0a2968_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x000045(%eax),%dl
		mov    0x000042(%eax),%cl
		mov    0x00003e(%eax),%ebx
		push   %edx
		sar    $0x000010,%ebx
		mov    0x00003c(%eax),%edx
		lea    0x000004(%esp),%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		mov    _0dd9c4_data,%ebx
		xor    %eax,%eax
		mov    0x000046(%ebx),%edx
		mov    0x00004f(%ebx),%al
		sar    $0x000010,%edx
		push   %eax
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x00004c(%ebx),%cl
		mov    0x000048(%ebx),%esi
		movswl %ax,%edx
		mov    0x000044(%ebx),%eax
		mov    _0bf2f4_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    (%ebx,%eax,4),%eax
		mov    %esi,%ebx
		call   _01b0f8_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054c58_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $_0c3026_data,%ecx
		mov    $_0c301e_data,%ebx
		mov    $_0c3024_data,%edx
		mov    $_0c301c_data,%eax
		call   _042178_func
		call   _054a24_func
		xor    %edx,%edx
		call   _0426b0_func
		mov    %al,%dl
		mov    $0x000001,%eax
		call   _041ce0_func
		test   %al,%al
		je     _054c9d_jump
		xor    %ah,%ah
		mov    $0x000001,%edx
		mov    %ah,_0a7d24_data

	_054c9d_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054ca4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		call   _03ee10_func
		cmpb   $0x000000,_0a7cd3_data
		je     _054ce1_jump
		mov    _0dda04_data,%ecx
		mov    _0dda0a_data,%ebx
		mov    _0dda06_data,%edx
		mov    _0dda02_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _022bd8_func

	_054ce1_jump:
		mov    $_0b8930_data,%eax
		call   _01b714_func
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x000071(%eax),%dl
		mov    0x00006e(%eax),%cl
		mov    0x00006a(%eax),%ebx
		mov    0x000066(%eax),%esi
		push   %edx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		mov    0x000068(%eax),%edx
		mov    _0bf2f4_data,%eax
		sar    $0x000010,%edx
		mov    (%eax,%esi,4),%eax
		call   _01b0f8_func
		mov    _0c3020_data,%edx
		sar    $0x000010,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00000a,%ebx
		mov    %esp,%edx
		add    %eax,%eax
		call   _08b918_func
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x00007b(%eax),%dl
		mov    0x000078(%eax),%cl
		mov    0x000074(%eax),%ebx
		push   %edx
		sar    $0x000010,%ebx
		mov    0x000072(%eax),%edx
		lea    0x000004(%esp),%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		mov    _0c301e_data,%edx
		sar    $0x000010,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00000a,%ebx
		mov    %esp,%edx
		add    %eax,%eax
		call   _08b918_func
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x000085(%eax),%dl
		mov    0x000082(%eax),%cl
		mov    0x00007e(%eax),%ebx
		push   %edx
		sar    $0x000010,%ebx
		mov    0x00007c(%eax),%edx
		lea    0x000004(%esp),%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		mov    _0dd9c4_data,%eax
		mov    _0bf2f4_data,%esi
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x00008f(%eax),%dl
		mov    0x00008c(%eax),%cl
		mov    0x000088(%eax),%ebx
		push   %edx
		mov    0x000086(%eax),%edx
		mov    0x000084(%eax),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    (%esi,%eax,4),%eax
		call   _01b0f8_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054df8_func:
		push   %edx
		mov    $_0c3020_data,%edx
		mov    $_0c3022_data,%eax
		call   _0421c0_func
		call   _054ca4_func
		xor    %edx,%edx
		call   _0426b0_func
		mov    %al,%dl
		mov    $0x000001,%eax
		call   _041ce0_func
		test   %al,%al
		je     _054e31_jump
		xor    %ah,%ah
		mov    $0x000001,%edx
		mov    %ah,_0a7d24_data

	_054e31_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_054e38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000048,%esp
		cmpl   $0x000000,_0dd9e8_data
		je     _054ec1_jump
		xor    %edx,%edx
		call   *_0dd9e8_data
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd0c0_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0b4028_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		call   _02211c_func

	_054ec1_jump:
		mov    $_0c301e_data,%ecx
		mov    $_0c3026_data,%ebx
		mov    $_0c301c_data,%edx
		mov    $_0c3024_data,%eax
		call   _054994_func
		cmpb   $0x000000,_0a7cd3_data
		jne    _054eed_jump
		call   _03ea80_func
		jmp    _055012_jump

	_054eed_jump:
		mov    _0dd9c4_data,%eax
		mov    0x000050(%eax),%bx
		mov    0x00005c(%eax),%cx
		mov    0x000056(%eax),%dx
		mov    %cx,0x000038(%esp)
		mov    _0dda04_data,%cx
		mov    0x000062(%eax),%di
		cmp    %cx,%bx
		jge    _054f17_jump
		mov    %ebx,%eax
		jmp    _054f19_jump

	_054f17_jump:
		mov    %ecx,%eax

	_054f19_jump:
		mov    _0dda08_data,%si
		cmp    %si,%dx
		jge    _054f29_jump
		mov    %edx,%ecx
		jmp    _054f2b_jump

	_054f29_jump:
		mov    %esi,%ecx

	_054f2b_jump:
		mov    _0dda02_data,%esi
		sar    $0x000010,%esi
		mov    %esi,(%esp)
		mov    _0dda0a_data,%esi
		mov    (%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		movswl %bx,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000036(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x000010(%esp)
		mov    0x00000c(%esp),%ebp
		add    0x000010(%esp),%ebp
		cmp    %ebp,%esi
		jle    _054f6e_jump
		movswl %ax,%ebp
		sub    %ebp,%esi
		mov    %esi,0x000024(%esp)
		jmp    _054f77_jump

	_054f6e_jump:
		movswl %ax,%esi
		sub    %esi,%ebp
		mov    %ebp,0x000024(%esp)

	_054f77_jump:
		mov    0x000024(%esp),%esi
		mov    %si,0x00002c(%esp)
		mov    _0dda06_data,%esi
		sar    $0x000010,%esi
		mov    %esi,0x000018(%esp)
		mov    _0dda04_data,%esi
		mov    0x000018(%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		movswl %dx,%ebp
		mov    %ebp,0x00001c(%esp)
		movswl %di,%ebp
		mov    %ebp,0x000004(%esp)
		mov    0x00001c(%esp),%ebp
		add    0x000004(%esp),%ebp
		cmp    %ebp,%esi
		jle    _054fc1_jump
		movswl %cx,%ebp
		sub    %ebp,%esi
		mov    %esi,0x000020(%esp)
		jmp    _054fca_jump

	_054fc1_jump:
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,0x000020(%esp)

	_054fca_jump:
		mov    0x000020(%esp),%esi
		push   $0x000001
		mov    %bx,_0dda04_data
		mov    %dx,_0dda08_data
		cwtl   
		mov    0x00003c(%esp),%edx
		mov    0x00002e(%esp),%ebx
		mov    %dx,_0dda0c_data
		mov    $_054a24_func,%edx
		sar    $0x000010,%ebx
		mov    %edx,_0dd9e0_data
		movswl %si,%edx
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %esi,%edx
		mov    %di,_0dda06_data
		call   _056624_func

	_055012_jump:
		cmpb   $0x000000,_0a7d24_data
		je     _055150_jump
		mov    $_054c58_func,%eax
		call   _03eb48_func
		cmpb   $0x000000,_0a7cd3_data
		jne    _055041_jump
		call   _03ead0_func
		call   _03ea80_func
		jmp    _055150_jump

	_055041_jump:
		mov    _0dd9c4_data,%edx
		mov    _0dda04_data,%di
		mov    0x000090(%edx),%bx
		mov    0x000096(%edx),%ax
		mov    0x00009c(%edx),%cx
		mov    0x0000a2(%edx),%dx
		mov    %cx,0x00003c(%esp)
		mov    %dx,0x000040(%esp)
		cmp    %di,%bx
		jge    _05507d_jump
		mov    %ebx,%edx
		jmp    _05507f_jump

	_05507d_jump:
		mov    %edi,%edx

	_05507f_jump:
		mov    _0dda08_data,%cx
		cmp    %cx,%ax
		jge    _05508d_jump
		mov    %eax,%ecx

	_05508d_jump:
		mov    _0dda02_data,%edi
		mov    _0dda0a_data,%esi
		sar    $0x000010,%edi
		sar    $0x000010,%esi
		add    %edi,%esi
		movswl %bx,%edi
		mov    %edi,0x000014(%esp)
		mov    0x00003a(%esp),%edi
		mov    0x000014(%esp),%ebp
		sar    $0x000010,%edi
		add    %ebp,%edi
		cmp    %edi,%esi
		jle    _0550c2_jump
		movswl %dx,%edi
		sub    %edi,%esi
		mov    %esi,%edi
		jmp    _0550c7_jump

	_0550c2_jump:
		movswl %dx,%esi
		sub    %esi,%edi

	_0550c7_jump:
		mov    0x00003e(%esp),%ebp
		mov    _0dda06_data,%esi
		mov    %di,0x000034(%esp)
		mov    _0dda04_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		sar    $0x000010,%ebp
		add    %esi,%edi
		movswl %ax,%esi
		add    %ebp,%esi
		cmp    %esi,%edi
		jle    _0550f9_jump
		movswl %cx,%esi
		sub    %esi,%edi
		mov    %edi,%esi
		jmp    _0550fe_jump

	_0550f9_jump:
		movswl %cx,%edi
		sub    %edi,%esi

	_0550fe_jump:
		mov    %ax,_0dda08_data
		mov    0x00003c(%esp),%eax
		mov    %bx,_0dda04_data
		mov    %ax,_0dda0c_data
		mov    0x000040(%esp),%eax
		mov    _0a7d24_data,%bl
		mov    %ax,_0dda06_data
		test   %bl,%bl
		je     _055150_jump
		mov    $_054ca4_func,%eax
		push   $0x000001
		mov    0x000036(%esp),%ebx
		movswl %dx,%edi
		mov    %eax,_0dd9e0_data
		sar    $0x000010,%ebx
		movswl %si,%eax
		movswl %cx,%esi
		mov    %eax,%ecx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _056624_func

	_055150_jump:
		cmpb   $0x000000,_0a7d24_data
		je     _055294_jump
		mov    $_054df8_func,%eax
		call   _03eb48_func
		cmpb   $0x000000,_0a7cd3_data
		jne    _05517f_jump
		call   _03ead0_func
		call   _03ea80_func
		jmp    _055294_jump

	_05517f_jump:
		mov    _0dd9c4_data,%edx
		mov    _0dda04_data,%si
		mov    0x0000a8(%edx),%bx
		mov    0x0000ae(%edx),%ax
		mov    0x0000b4(%edx),%cx
		mov    0x0000ba(%edx),%dx
		mov    %cx,0x000044(%esp)
		mov    %dx,0x000028(%esp)
		cmp    %si,%bx
		jge    _0551bb_jump
		mov    %ebx,%ecx
		jmp    _0551bd_jump

	_0551bb_jump:
		mov    %esi,%ecx

	_0551bd_jump:
		mov    _0dda08_data,%di
		cmp    %di,%ax
		jge    _0551cd_jump
		mov    %eax,%edx
		jmp    _0551cf_jump

	_0551cd_jump:
		mov    %edi,%edx

	_0551cf_jump:
		mov    _0dda02_data,%esi
		mov    _0dda0a_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		add    %edi,%esi
		movswl %bx,%edi
		mov    %edi,0x000008(%esp)
		mov    0x000042(%esp),%edi
		mov    0x000008(%esp),%ebp
		sar    $0x000010,%edi
		add    %ebp,%edi
		cmp    %edi,%esi
		jle    _055202_jump
		movswl %cx,%edi
		sub    %edi,%esi
		jmp    _055209_jump

	_055202_jump:
		movswl %cx,%esi
		sub    %esi,%edi
		mov    %edi,%esi

	_055209_jump:
		mov    0x000026(%esp),%ebp
		mov    _0dda06_data,%edi
		mov    %si,0x000030(%esp)
		mov    _0dda04_data,%esi
		sar    $0x000010,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%ebp
		add    %edi,%esi
		movswl %ax,%edi
		add    %ebp,%edi
		cmp    %edi,%esi
		jle    _05523b_jump
		movswl %dx,%edi
		sub    %edi,%esi
		mov    %esi,%edi
		jmp    _055240_jump

	_05523b_jump:
		movswl %dx,%esi
		sub    %esi,%edi

	_055240_jump:
		mov    %ax,_0dda08_data
		mov    0x000044(%esp),%eax
		mov    %ax,_0dda0c_data
		mov    0x000028(%esp),%eax
		mov    %ax,_0dda06_data
		mov    _0a7d24_data,%al
		mov    %bx,_0dda04_data
		test   %al,%al
		je     _055294_jump
		call   _0523dc_func
		mov    $_052530_func,%eax
		push   $0x000001
		mov    0x000032(%esp),%ebx
		movswl %dx,%edx
		movswl %cx,%esi
		mov    %eax,_0dd9e0_data
		movswl %di,%eax
		sar    $0x000010,%ebx
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _056624_func

	_055294_jump:
		push   $_0c3020_data
		mov    $_0c3026_data,%ecx
		mov    $_0c301e_data,%ebx
		mov    $_0c3024_data,%edx
		mov    _0dd9e4_data,%eax
		push   $_0c3022_data
		mov    %eax,_0dd9d8_data
		mov    $_0c301c_data,%eax
		call   _0421fc_func
		cmpb   $0x000000,_0a7d24_data
		je     _05536c_jump
		movl   $_05237c_func,_0dd9d4_data
		cmpb   $0x000000,_0a7cd3_data
		jne    _0552e8_jump
		call   _055510_func
		jmp    _0552ed_jump

	_0552e8_jump:
		call   _0554d8_func

	_0552ed_jump:
		mov    _0dd9d8_data,%eax
		mov    %eax,_0dd9e4_data
		mov    _0aa908_data,%eax
		mov    0x000014(%eax),%eax
		mov    _0a7cd3_data,%dh
		mov    %eax,_0dd9c4_data
		test   %dh,%dh
		jne    _055324_jump
		call   _03ead0_func
		call   _052a70_func
		call   _052b64_func
		call   _03ea80_func
		jmp    _05532e_jump

	_055324_jump:
		call   _052a70_func
		call   _052b64_func

	_05532e_jump:
		cmpl   $0x000000,_0dd9e8_data
		je     _05536c_jump
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd0c0_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_05536c_jump:
		call   _0426a0_func
		add    $0x000048,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05537c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _042170_func
		mov    _0a7d24_data,%ah
		xor    %dl,%dl
		test   %ah,%ah
		je     _0553e5_jump
		mov    _0c301a_data,%ax
		cmp    _0c3024_data,%ax
		jge    _0553aa_jump
		mov    $0x000001,%dl
		mov    %ax,_0c3024_data
		jmp    _0553bb_jump

	_0553aa_jump:
		cmp    _0c301c_data,%ax
		jle    _0553bb_jump
		mov    $0x000001,%dl
		mov    %ax,_0c301c_data

	_0553bb_jump:
		mov    _0c3018_data,%ax
		cmp    _0c3026_data,%ax
		jge    _0553d4_jump
		mov    $0x000001,%dl
		mov    %ax,_0c3026_data
		jmp    _0553e5_jump

	_0553d4_jump:
		cmp    _0c301e_data,%ax
		jle    _0553e5_jump
		mov    $0x000001,%dl
		mov    %ax,_0c301e_data

	_0553e5_jump:
		test   %dl,%dl
		je     _05540c_jump
		push   $_0c3020_data
		mov    $_0c3026_data,%ecx
		mov    $_0c301e_data,%ebx
		push   $_0c3022_data
		mov    $_0c3024_data,%edx
		mov    $_0c301c_data,%eax
		call   _0421fc_func

	_05540c_jump:
		cmpl   $0x000000,_0dd9e0_data
		je     _05541b_jump
		call   *_0dd9e0_data

	_05541b_jump:
		cmpb   $0x000000,_0a7d23_data
		je     _055445_jump
		xor    %dh,%dh
		mov    %dh,_0a7d23_data
		call   _018b0f_func
		call   _018aff_func
		mov    $0x000001,%eax
		call   _02211c_func
		call   _03ba10_func

	_055445_jump:
		cmpb   $0x000000,_0c33cb_data
		jne    _05546b_jump
		mov    _0c306a_data,%ax
		test   %ax,%ax
		jne    _05546b_jump
		cmpb   $0x000000,_0c3393_data
		jne    _05546b_jump
		cmpb   $0x000000,_0bf2fd_data
		je     _055470_jump

	_05546b_jump:
		mov    $0x000001,%eax

	_055470_jump:
		mov    %eax,%edx
		test   %ax,%ax
		jne    _0554d3_jump
		cmpl   $0x000000,_0dd9dc_data
		je     _055490_jump
		cmpw   $0x000000,_0c317e_data
		jne    _055490_jump
		call   *_0dd9dc_data

	_055490_jump:
		call   _0426b0_func
		test   %al,%al
		je     _0554be_jump
		mov    _0c3068_data,%ax
		cmp    _0c302a_data,%ax
		jne    _0554be_jump
		mov    $0x000001,%esi
		mov    $0x000045,%eax
		mov    %si,_0c306a_data
		call   _071754_func

	_0554be_jump:
		cmpb   $0x000000,_0c3393_data
		je     _0554d1_jump
		mov    $0x00004d,%eax
		call   _071754_func

	_0554d1_jump:
		mov    %edx,%eax

	_0554d3_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0554d8_func:
		cmpl   $0x000000,_0dd9d4_data
		je     _0554e7_jump
		call   *_0dd9d4_data

	_0554e7_jump:
		cmpl   $0x000000,_0dd9d0_data
		je     _0554f6_jump
		call   *_0dd9d0_data

	_0554f6_jump:
		mov    $_05537c_func,%eax
		call   _03eb48_func
		cmpl   $0x000000,_0dd9e4_data
		je     _05550f_jump
		call   *_0dd9e4_data

	_05550f_jump:
		ret    



_055510_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpl   $0x000000,_0dd9d4_data
		je     _055523_jump
		call   *_0dd9d4_data

	_055523_jump:
		cmpl   $0x000000,_0dd9d0_data
		je     _055532_jump
		call   *_0dd9d0_data

	_055532_jump:
		cmpl   $0x000000,_0dd9e8_data
		je     _055541_jump
		call   *_0dd9e8_data

	_055541_jump:
		testb  $0x000004,_0c3348_data
		jne    _055553_jump
		testb  $0x000020,_0c31b3_data
		je     _05557c_jump

	_055553_jump:
		mov    _0c3012_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		mov    $0x000300,%ecx
		sub    %edx,%eax
		mov    _0c0fe4_data,%esi
		shl    $0x000008,%eax
		mov    $_0dd0c0_data,%edi
		add    %eax,%esi
		jmp    _0555d6_jump

	_05557c_jump:
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd0c0_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0b4028_data,%esi
		add    %eax,%edi

	_0555d6_jump:
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _022d30_func
		xor    %eax,%eax
		call   _02211c_func
		mov    $_05537c_func,%eax
		call   _03eb48_func
		cmpl   $0x000000,_0dd9e4_data
		je     _05560b_jump
		call   *_0dd9e4_data

	_05560b_jump:
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd0c0_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_055648_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax

	_05564c_jump:
		movswl %ax,%edx
		mov    _0a7cb0_data(,%edx,4),%ebx
		mov    (%ebx),%bl
		inc    %eax
		mov    %bl,_0a7ccc_data(%edx)
		cmp    $0x000007,%ax
		jl     _05564c_jump
		mov    _0a7cb0_data,%edx
		movb   $0x00004b,(%edx)
		mov    _0a7cb4_data,%edx
		movb   $0x000048,(%edx)
		mov    _0a7cb8_data,%edx
		movb   $0x00004d,(%edx)
		mov    _0a7cbc_data,%edx
		movb   $0x000050,(%edx)
		mov    _0a7cc0_data,%edx
		movb   $0x00001d,(%edx)
		mov    _0a7cc4_data,%edx
		movb   $0x000038,(%edx)
		mov    _0a7cc8_data,%edx
		movb   $0x000032,(%edx)
		pop    %edx
		pop    %ebx
		ret    



_0556a8_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax

	_0556ac_jump:
		movswl %ax,%edx
		mov    _0a7cb0_data(,%edx,4),%ebx
		mov    _0a7ccc_data(%edx),%dl
		inc    %eax
		mov    %dl,(%ebx)
		cmp    $0x000007,%ax
		jl     _0556ac_jump
		pop    %edx
		pop    %ebx
		ret    



_0556c8_func:
		push   %ebx
		push   %edx
		push   %edi
		cmpw   $0x000000,_0c0f66_data
		jne    _055783_jump
		cmpw   $0x000002,_0c0f6a_data
		jne    _0556ea_jump
		xor    %eax,%eax
		jmp    _05581c_jump

	_0556ea_jump:
		mov    _0c0f68_data,%edx
		sar    $0x000010,%edx
		mov    _0c0f6c_data,%di
		mov    _0a7d12_data(,%edx,2),%ax
		shl    $0x000003,%edx
		test   %di,%di
		je     _05571d_jump
		mov    _0c0f66_data,%ebx
		sar    $0x000010,%ebx
		add    _0a7ce2_data(%edx,%ebx,2),%ax
		jmp    _05572e_jump

	_05571d_jump:
		mov    _0c0f66_data,%ebx
		sar    $0x000010,%ebx
		add    _0a7cf2_data(%edx,%ebx,2),%ax

	_05572e_jump:
		cmpw   $0x000000,_0c0f70_data
		je     _055762_jump
		mov    _0c0f68_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%ebx
		mov    _0c0f66_data,%edx
		sar    $0x000010,%edx
		mov    _0a7d02_data(%ebx,%edx,2),%dx
		add    %edx,%edx
		add    %edx,%eax
		jmp    _05581c_jump

	_055762_jump:
		mov    _0c0f66_data,%ebx
		mov    _0c0f68_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ebx,%ebx
		add    _0a7d02_data(%ebx,%edx,8),%ax
		jmp    _05581c_jump

	_055783_jump:
		cmpb   $0x000000,_0c336e_data
		jne    _0557d6_jump
		mov    _0c0f68_data,%eax
		sar    $0x000010,%eax
		mov    _0a7d1c_data(,%eax,2),%edx
		sar    $0x000010,%edx
		mov    %edx,%ebx
		sar    %ebx
		movswl %bx,%eax
		mov    _0c0f6c_data,%di
		add    %ebx,%eax
		test   %di,%di
		je     _0557b9_jump
		sar    $0x000003,%edx
		cwtl   
		add    %edx,%eax

	_0557b9_jump:
		cmpw   $0x000000,_0c0f6e_data
		je     _05581c_jump
		mov    _0c0f68_data,%edx
		sar    $0x000010,%edx
		add    _0a7d16_data(,%edx,2),%ax
		jmp    _05581c_jump

	_0557d6_jump:
		mov    _0c0f68_data,%eax
		sar    $0x000010,%eax
		mov    _0a7d1c_data(,%eax,2),%edx
		sar    $0x000010,%edx
		mov    %edx,%ebx
		sar    %ebx
		movswl %bx,%eax
		add    %ebx,%eax
		cmpw   $0x000000,_0c0f6c_data
		je     _055801_jump
		sar    $0x000003,%edx
		cwtl   
		add    %edx,%eax

	_055801_jump:
		cmpw   $0x000000,_0c0f6e_data
		je     _05581c_jump
		mov    _0c0f68_data,%edx
		sar    $0x000010,%edx
		add    _0a7d1a_data(,%edx,2),%ax

	_05581c_jump:
		cmpw   $0x000100,_0dda0a_data
		jle    _055830_jump
		mov    $0x000080,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    

	_055830_jump:
		cmp    $0x000080,%ax
		jge    _05583f_jump
		mov    $0x000100,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    

	_05583f_jump:
		mov    $0x000100,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		add    $0x000080,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    



_055854_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %dx,0x000010(%esp)
		mov    %ebx,%edi
		lea    0x000008(%esp),%ecx
		lea    0x000014(%esp),%ebx
		lea    0x000018(%esp),%edx
		mov    $0x000002,%eax
		call   _01f3b8_func
		lea    0x000008(%esp),%ecx
		lea    0x000014(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    $0x000001,%eax
		call   _01f3b8_func
		movswl %si,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		mov    %eax,%ebx
		sub    %edx,%eax
		sar    %eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		mov    %eax,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00000e(%esp),%edx
		mov    %eax,%ecx
		sar    $0x000010,%edx
		add    %eax,%esi
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    %si,_0c3082_data
		shl    $0x000003,%edx
		mov    $0x000064,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x000016(%esp),%edx
		mov    %eax,%esi
		mov    _0c304a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %edx,(%esp)
		imul   %eax,%edx
		mov    %esi,%ebp
		sub    %edx,%ebp
		inc    %eax
		mov    %ebp,%edx
		mov    %eax,0x000004(%esp)
		mov    %ebp,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %ax,_0c3062_data
		mov    _0c3060_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		add    %ebx,%eax
		movswl %di,%edx
		mov    %ax,_0c309c_data
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		add    %ecx,%eax
		add    %eax,%ebx
		xor    %edx,%edx
		add    %esi,%ebx
		mov    %dx,_0c306a_data
		mov    %bx,_0c3090_data
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05598c_func:
		push   %edx
		mov    _0c3066_data,%dx
		cmp    _0c3070_data,%dx
		jge    _0559a9_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _0559a9_jump
		inc    %edx
		jmp    _0559c5_jump

	_0559a9_jump:
		cmpb   $0x000000,_0c33ce_data
		jne    _0559c3_jump
		mov    _0c3078_data,%dx
		inc    %edx
		mov    %dx,_0c3066_data
		pop    %edx
		ret    

	_0559c3_jump:
		xor    %edx,%edx

	_0559c5_jump:
		mov    %dx,_0c3066_data
		pop    %edx
		ret    



_0559d0_func:
		push   %edx
		call   _041e40_func
		test   %ax,%ax
		jne    _055a14_jump
		call   _041ddc_func
		test   %ax,%ax
		jne    _055a14_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _055a14_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _055a14_jump
		call   _0426b0_func
		test   %al,%al
		jne    _055a14_jump
		movb   $0x000001,_0c33ce_data
		xor    %edx,%edx
		mov    %dx,_0c3066_data
		pop    %edx
		ret    

	_055a14_jump:
		xor    %ah,%ah
		mov    %ah,_0c33ce_data
		pop    %edx
		ret    



_055a20_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		cmpb   $0x000000,_0aa500_data
		jne    _055a67_jump
		mov    0x0000cc(%esi),%ecx
		xor    %eax,%eax
		mov    0x0000ca(%esi),%ebx
		mov    %dl,%al
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		mov    0x0000c8(%esi),%edx
		mov    0x0000c6(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02233c_func
		mov    %esi,%eax
		call   _01b714_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_055a67_jump:
		mov    0x0000d0(%esi),%ebx
		mov    0x0000ce(%esi),%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d7(%esi),%al
		sar    $0x000010,%edx
		push   %eax
		mov    0x0000d4(%esi),%cl
		mov    %esi,%eax
		call   _01b0f8_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_055a98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x0000cc(%eax),%ecx
		mov    0x0000ca(%eax),%ebx
		mov    0x0000c8(%eax),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x0000c6(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _022878_func
		mov    %esi,%eax
		call   _01b714_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_055ad4_jump:
		xor    %ah,%ah
		mov    %ah,_0aa502_data
		call   _042170_func
		cmpl   $0x000000,_0dd9e0_data
		je     _055af0_jump
		call   *_0dd9e0_data

	_055af0_jump:
		mov    _0dd9c0_data,%eax
		call   _055a98_func
		cmpl   $0x000000,_0dd9ec_data
		je     _055b09_jump
		call   *_0dd9ec_data

	_055b09_jump:
		call   _0427d4_func
		test   %al,%al
		jne    _055b1b_jump
		cmpb   $0x000000,_0aa502_data
		je     _055b21_jump

	_055b1b_jump:
		mov    $0x000001,%eax
		ret    

	_055b21_jump:
		xor    %ah,%ah
		ret    



_055b24_func:
		push   %ebx
		push   %edx
		mov    _0dd9e0_data,%edx
		mov    %eax,_0dd9c0_data
		test   %edx,%edx
		je     _055b3b_jump
		call   *_0dd9e0_data

	_055b3b_jump:
		call   _018b0f_func
		call   _018aff_func
		call   _022520_func
		call   _03ba10_func
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %dl,%dl
		mov    %ah,_0aa500_data
		mov    $_055ad4_jump,%eax
		mov    %ebx,_0dd9ec_data
		call   _03eb48_func
		mov    %dl,_0aa500_data
		movb   $0x000001,_0a7d23_data
		call   _042498_func
		pop    %edx
		pop    %ebx
		ret    



_055b80_func:
		push   %ebx
		mov    %eax,_0dd9c0_data
		mov    %edx,_0dd9ec_data
		mov    $0x000001,%ah
		xor    %edx,%edx
		mov    %ah,_0aa500_data
		call   _018b0f_func
		call   _018aff_func
		call   _022520_func

	_055ba5_jump:
		cmp    _0dd9e0_data,%edx
		je     _055bb3_jump
		call   *_0dd9e0_data

	_055bb3_jump:
		mov    _0dd9c0_data,%eax
		call   _055a98_func
		call   _055c10_func
		call   _018b0f_func
		call   _018aff_func
		call   _03ea58_func
		call   _03ba10_func
		call   _042170_func
		call   _0426b0_func
		test   %al,%al
		jne    _055ba5_jump
		mov    _0c317e_data,%bx
		cmp    %bx,%dx
		jne    _055ba5_jump
		mov    $_055ad4_jump,%eax
		xor    %bl,%dl
		call   _03eb48_func
		mov    %dl,_0aa500_data
		movb   $0x000001,_0a7d23_data
		call   _042498_func
		pop    %ebx
		ret    



_055c10_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0c33a5_data
		jne    _055c86_jump
		mov    _0dd9c0_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		sub    $0x000019,%eax
		movswl %ax,%edx
		mov    _0bf2f4_data,%eax
		push   $0x000003
		mov    $0x000002,%ecx
		mov    0x000114(%eax),%eax
		call   _01b0f8_func
		mov    _0dd9c0_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		add    $0x000023,%eax
		movswl %ax,%edx
		mov    _0bf2f4_data,%eax
		push   $0x000000
		jmp    _055cee_jump

	_055c86_jump:
		mov    _0dd9c0_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		sub    $0x000019,%eax
		movswl %ax,%edx
		mov    _0bf2f4_data,%eax
		push   $0x000000
		mov    $0x000002,%ecx
		mov    0x000114(%eax),%eax
		call   _01b0f8_func
		mov    _0dd9c0_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		add    $0x000023,%eax
		movswl %ax,%edx
		mov    _0bf2f4_data,%eax
		push   $0x000003

	_055cee_jump:
		mov    $0x000002,%ecx
		mov    0x000118(%eax),%eax
		call   _01b0f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055d04_func:
		push   %ebx
		push   %edx
		call   _05598c_func
		call   _041d14_func
		test   %ax,%ax
		jne    _055d1f_jump
		call   _041d78_func
		test   %ax,%ax
		je     _055d82_jump

	_055d1f_jump:
		call   _041ddc_func
		test   %ax,%ax
		jne    _055d82_jump
		call   _041e40_func
		test   %ax,%ax
		jne    _055d82_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _055d68_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _055d82_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _055d82_jump

	_055d68_jump:
		mov    _0c33a5_data,%dl
		test   %dl,%dl
		sete   %al
		mov    %al,_0c33a5_data
		mov    $0x000044,%eax
		call   _071754_func

	_055d82_jump:
		call   _055c10_func
		call   _0427d4_func
		test   %al,%al
		je     _055d9e_jump
		mov    $0x000001,%dh
		mov    %dh,_0c33a5_data
		mov    %dh,_0aa502_data

	_055d9e_jump:
		call   _0426b0_func
		test   %al,%al
		je     _055db7_jump
		cmpb   $0x000000,_0c33ce_data
		je     _055db7_jump
		movb   $0x000001,_0aa502_data

	_055db7_jump:
		call   _0559d0_func
		pop    %edx
		pop    %ebx
		ret    

_055dc0_switch:
		.long   _055e1c_case
		.long   _055eca_case
		.long   _055f52_case
		.long   _055fdb_case
		.long   _0560f0_case




_055dd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000a0,%edx
		mov    $0x000064,%ebx
		mov    $0x000002,%ah
		mov    %dx,_0b8190_data
		mov    %bx,_0b8192_data
		mov    %ah,_0b8194_data
		xor    %dh,%dh
		mov    %ah,_0b8196_data
		mov    %dh,_0b8195_data
		cmp    $0x000004,%al
		ja     _05620e_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_055dc0_switch(,%eax,4)

	_055e1c_case:
		mov    $0x000001,%ah
		mov    _0a7cd3_data,%dl
		mov    %ah,_0c33a5_data
		test   %dl,%dl
		je     _055e41_jump
		mov    _0bf2f4_data,%esi
		mov    $_0b80c0_data,%edi
		mov    0x000148(%esi),%esi
		jmp    _055e52_jump

	_055e41_jump:
		mov    _0bf2f4_data,%esi
		mov    $_0b80c0_data,%edi
		mov    0x0000fc(%esi),%esi

	_055e52_jump:
		push   %edi

	_055e53_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _055e6b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _055e53_jump

	_055e6b_jump:
		pop    %edi
		mov    $_0b80c0_data,%eax
		call   _01f8d4_func
		cmpb   $0x000000,_0c3372_data
		je     _055e99_jump
		cmpb   $0x000000,_0a7cd3_data
		je     _055e8f_jump
		mov    $_0c31e2_data,%eax
		jmp    _055e94_jump

	_055e8f_jump:
		mov    $_0c31fd_data,%eax

	_055e94_jump:
		call   _071f50_func

	_055e99_jump:
		mov    $_055d04_func,%edx
		mov    $_0b80c0_data,%eax
		call   _055b80_func
		cmpb   $0x000000,_0c3372_data
		je     _05620e_jump
		call   _071f70_func
		cmpb   $0x000000,_0c33a5_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_055eca_case:
		movl   $_074734_func,_0dd9e0_data
		mov    _0bf2f4_data,%esi
		mov    $0x000001,%cl
		mov    $_0b80c0_data,%edi
		mov    0x0000f0(%esi),%esi
		mov    %cl,_0c33a5_data
		push   %edi

	_055eee_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _055f06_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _055eee_jump

	_055f06_jump:
		pop    %edi
		mov    %edi,%eax
		call   _01f8d4_func
		cmpb   $0x000000,_0c3372_data
		je     _055f21_jump
		mov    $_0c31eb_data,%eax
		call   _071f50_func

	_055f21_jump:
		mov    $_055d04_func,%edx
		mov    $_0b80c0_data,%eax
		call   _055b80_func
		cmpb   $0x000000,_0c3372_data
		je     _05620e_jump
		call   _071f70_func
		cmpb   $0x000000,_0c33a5_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_055f52_case:
		mov    $0x000001,%dh
		mov    $_074734_func,%ecx
		mov    _0bf2f4_data,%esi
		mov    $_0b80c0_data,%edi
		mov    %dh,_0c33a5_data
		mov    0x0000f4(%esi),%esi
		mov    %ecx,_0dd9e0_data
		push   %edi

	_055f77_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _055f8f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _055f77_jump

	_055f8f_jump:
		pop    %edi
		mov    %edi,%eax
		call   _01f8d4_func
		cmpb   $0x000000,_0c3372_data
		je     _055faa_jump
		mov    $_0c31eb_data,%eax
		call   _071f50_func

	_055faa_jump:
		mov    $_055d04_func,%edx
		mov    $_0b80c0_data,%eax
		call   _055b80_func
		cmpb   $0x000000,_0c3372_data
		je     _05620e_jump
		call   _071f70_func
		cmpb   $0x000000,_0c33a5_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_055fdb_case:
		call   _055648_func
		mov    $0x000001,%al
		mov    $0x000300,%ecx
		mov    $_0b4328_data,%esi
		mov    $_0dd3c0_data,%edi
		mov    $0x000001,%edx
		mov    %al,_0c33a5_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _0228dc_func
		mov    _0c0f9c_data,%eax
		call   _022a8c_func
		call   _03ead0_func
		mov    _0c0f9c_data,%edi
		mov    $_0d3f7c_data,%esi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $0x000300,%ecx
		mov    $_0b4328_data,%edi
		call   _03ea80_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0bf2f4_data,%esi
		mov    $_03ee10_func,%ebx
		mov    $_0b80c0_data,%edi
		mov    0x0000f4(%esi),%esi
		mov    %ebx,_0dd9e0_data
		push   %edi

	_056072_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05608a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _056072_jump

	_05608a_jump:
		pop    %edi
		mov    %edi,%eax
		call   _01f8d4_func
		cmpb   $0x000000,_0c3372_data
		je     _0560a5_jump
		mov    $_0c31eb_data,%eax
		call   _071f50_func

	_0560a5_jump:
		mov    $_055d04_func,%edx
		mov    $_0b80c0_data,%eax
		call   _055b80_func
		cmpb   $0x000000,_0c3372_data
		je     _0560c2_jump
		call   _071f70_func

	_0560c2_jump:
		mov    $0x000300,%ecx
		mov    $_0dd3c0_data,%esi
		mov    $_0b4328_data,%edi
		call   _03ead0_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03ea80_func
		jmp    _056209_jump

	_0560f0_case:
		call   _055648_func
		mov    $0x000001,%bl
		mov    $0x000300,%ecx
		mov    $_0b4328_data,%esi
		mov    $_0dd3c0_data,%edi
		mov    $0x000001,%edx
		mov    %bl,_0c33a5_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _0228dc_func
		mov    _0c0f9c_data,%eax
		call   _022a8c_func
		call   _03ead0_func
		mov    _0c0f9c_data,%edi
		mov    $_0d3f7c_data,%esi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $0x000300,%ecx
		mov    $_0b4328_data,%edi
		call   _03ea80_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0bf2f4_data,%esi
		mov    $_03ee10_func,%edx
		mov    $_0b80c0_data,%edi
		mov    0x000148(%esi),%esi
		mov    %edx,_0dd9e0_data
		push   %edi

	_056188_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0561a0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _056188_jump

	_0561a0_jump:
		pop    %edi
		mov    %edi,%eax
		call   _01f8d4_func
		cmpb   $0x000000,_0c3372_data
		je     _0561bb_jump
		mov    $_0c31e2_data,%eax
		call   _071f50_func

	_0561bb_jump:
		mov    $_055d04_func,%edx
		mov    $_0b80c0_data,%eax
		call   _055b80_func
		cmpb   $0x000000,_0c3372_data
		je     _0561d8_jump
		call   _071f70_func

	_0561d8_jump:
		mov    $0x000300,%ecx
		mov    $_0dd3c0_data,%esi
		mov    $_0b4328_data,%edi
		call   _03ead0_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %ch,%ch
		call   _03ea80_func
		mov    %ch,_0a7d23_data

	_056209_jump:
		call   _0556a8_func

	_05620e_jump:
		cmpb   $0x000000,_0c33a5_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056220_func:
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,(%esp)

	_056229_jump:
		call   _018b0f_func
		call   _018aff_func
		mov    $_0dcdc0_data,%esi
		mov    $0x0000ff,%ecx
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		call   _03ba10_func
		call   *(%esp)
		test   %ax,%ax
		je     _056229_jump
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_05626c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0dda00_data,%di
		mov    _0c0eac_data,%ebp
		mov    $0x000140,%eax
		sub    %edi,%eax
		mov    %ax,(%esp)
		call   _03ee10_func
		mov    _0c0f44_data,%edx
		mov    _0dd9fa_data,%eax
		add    $0x00fa00,%edx
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ecx
		mov    _0dd9fc_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _0dd9f8_data,%edx
		sar    $0x000010,%edx
		shl    $0x000006,%eax
		neg    %edx
		add    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0dda00_data,%di
		mov    %ax,0x000004(%esp)
		jmp    _056381_jump

	_0562e5_jump:
		mov    0x000004(%esp),%eax
		imul   _0dda02_data,%ax
		add    $0x000064,%eax
		cwtl   
		imul   $0x000140,%eax,%esi
		mov    _0c0f50_data,%edx
		mov    _0c0ebc_data,%ebx
		add    %edx,%esi
		cmp    %ebx,%eax
		jle    _05636b_jump
		cmp    _0c0eb4_data,%eax
		jge    _05636b_jump
		movswl %di,%edx
		neg    %edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%ebx
		jmp    _05634d_jump

	_056329_jump:
		mov    _0dda02_data,%ax
		imul   %ebx,%eax
		add    $0x0000a0,%eax
		movswl %ax,%edx
		cmp    _0c0eb0_data,%edx
		jle    _05634b_jump
		cmp    %ebp,%edx
		jge    _05634b_jump
		mov    (%ecx),%al
		mov    %al,(%edx,%esi,1)

	_05634b_jump:
		inc    %ebx
		inc    %ecx

	_05634d_jump:
		movswl %di,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jl     _056329_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%ecx
		jmp    _056371_jump

	_05636b_jump:
		add    $0x000140,%ecx

	_056371_jump:
		mov    0x000004(%esp),%esi
		inc    %esi
		mov    %ebp,_0c0eac_data
		mov    %si,0x000004(%esp)

	_056381_jump:
		mov    _0dd9f8_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    _0c0eac_data,%ebp
		cmp    %eax,%edx
		jl     _0562e5_jump
		cmpb   $0x000000,_0dda13_data
		je     _0563cb_jump
		mov    _0dda02_data,%si
		dec    %esi
		mov    %si,_0dda02_data
		cmp    $0x000001,%si
		sete   %bl
		xor    %bh,%bh
		jmp    _05640b_jump

	_0563cb_jump:
		mov    _0dda02_data,%dx
		mov    %di,_0dda00_data
		cmp    $0x000010,%dx
		jne    _0563e4_jump
		call   _03eaa8_func

	_0563e4_jump:
		mov    _0dda02_data,%bx
		mov    _0c0eac_data,%ebp
		inc    %ebx
		mov    _0dda00_data,%di
		mov    %bx,_0dda02_data
		cmp    $0x000020,%bx
		sete   %al
		xor    %ah,%ah
		mov    %eax,%ebx

	_05640b_jump:
		mov    %ebx,%eax
		mov    %ebp,_0c0eac_data
		mov    %di,_0dda00_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056424_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    $0x000140,%eax
		mov    _0dda00_data,%dx
		mov    _0dd9fc_data,%ebx
		mov    _0c0f50_data,%ecx
		sar    $0x000010,%ebx
		sub    %edx,%eax
		mov    _0dd9fa_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%ebx,4),%eax
		sar    $0x000010,%edx
		add    %ebx,%eax
		add    %edx,%ecx
		shl    $0x000006,%eax
		lea    (%ecx,%eax,1),%ebx
		mov    _0c0f44_data,%ecx
		mov    $0x000011,%ebp
		add    $0x00fa00,%ecx
		xor    %esi,%esi
		add    %edx,%ecx
		mov    %esi,0x000004(%esp)
		jmp    _0564d9_jump

	_056482_jump:
		xor    %esi,%esi
		jmp    _0564b7_jump

	_056486_jump:
		mov    (%ebx),%al
		cmp    (%ecx),%al
		je     _0564b4_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0dda00_data,%eax
		mov    $0x000010,%edi
		sar    $0x000010,%eax
		sub    %eax,%edi
		imul   %edi,%edx
		movzbl (%ecx),%edi
		add    %edi,%edx
		mov    %ebp,%edi
		sub    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %al,(%ebx)

	_0564b4_jump:
		inc    %esi
		inc    %ebx
		inc    %ecx

	_0564b7_jump:
		xor    %edx,%edx
		mov    _0dd9fe_data,%eax
		mov    %si,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _056486_jump
		mov    0x000004(%esp),%edi
		xor    %eax,%eax
		inc    %edi
		mov    (%esp),%ax
		mov    %edi,0x000004(%esp)
		add    %eax,%ebx

	_0564d9_jump:
		add    %eax,%ecx
		xor    %eax,%eax
		mov    _0dd9f8_data,%edx
		mov    0x000004(%esp),%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _056482_jump
		mov    _0dda02_data,%ax
		inc    %eax
		mov    %ax,_0dda02_data
		cmp    $0x000010,%ax
		sete   %al
		xor    %ah,%ah
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056510_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%ebx
		xor    %edx,%edx

	_05651c_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0dcdc0_data(%eax),%cl
		mov    _0dd3c0_data(%eax),%ch
		cmp    %ch,%cl
		je     _05656b_jump
		movzbl %ch,%esi
		xor    %ecx,%ecx
		lea    0x000002(%esi),%edi
		mov    _0dcdc0_data(%eax),%cl
		xor    %ebx,%ebx
		cmp    %edi,%ecx
		jle    _056553_jump
		mov    %cl,%ch
		sub    $0x000002,%ch
		mov    %ch,_0dcdc0_data(%eax)
		jmp    _05656b_jump

	_056553_jump:
		sub    $0x000002,%esi
		cmp    %esi,%ecx
		jge    _05655f_jump
		add    $0x000002,%cl
		jmp    _056565_jump

	_05655f_jump:
		mov    _0dd3c0_data(%eax),%cl

	_056565_jump:
		mov    %cl,_0dcdc0_data(%eax)

	_05656b_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0dd3c1_data(%eax),%cl
		cmp    _0dcdc1_data(%eax),%cl
		je     _0565bc_jump
		xor    %ecx,%ecx
		mov    _0dd3c1_data(%eax),%cl
		movzbl _0dcdc1_data(%eax),%esi
		lea    0x000002(%ecx),%edi
		xor    %ebx,%ebx
		cmp    %edi,%esi
		jle    _0565a0_jump
		subb   $0x000002,_0dcdc1_data(%eax)
		jmp    _0565bc_jump

	_0565a0_jump:
		sub    $0x000002,%ecx
		cmp    %ecx,%esi
		jge    _0565b0_jump
		addb   $0x000002,_0dcdc1_data(%eax)
		jmp    _0565bc_jump

	_0565b0_jump:
		mov    _0dd3c1_data(%eax),%cl
		mov    %cl,_0dcdc1_data(%eax)

	_0565bc_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0dcdc2_data(%eax),%cl
		cmp    _0dd3c2_data(%eax),%cl
		je     _05660d_jump
		xor    %ecx,%ecx
		mov    _0dd3c2_data(%eax),%cl
		movzbl _0dcdc2_data(%eax),%esi
		lea    0x000002(%ecx),%edi
		xor    %ebx,%ebx
		cmp    %edi,%esi
		jle    _0565f1_jump
		subb   $0x000002,_0dcdc2_data(%eax)
		jmp    _05660d_jump

	_0565f1_jump:
		sub    $0x000002,%ecx
		cmp    %ecx,%esi
		jge    _056601_jump
		addb   $0x000002,_0dcdc2_data(%eax)
		jmp    _05660d_jump

	_056601_jump:
		mov    _0dd3c2_data(%eax),%cl
		mov    %cl,_0dcdc2_data(%eax)

	_05660d_jump:
		inc    %edx
		cmp    $0x000100,%dx
		jl     _05651c_jump
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056624_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ecx,%esi
		mov    0x000014(%esp),%cl
		cmp    $0x000001,%cl
		jb     _05663e_jump
		jbe    _056654_jump
		cmp    $0x000002,%cl
		je     _05665f_jump
		jmp    _056670_jump

	_05663e_jump:
		test   %cl,%cl
		jne    _056670_jump
		movw   $0x000020,_0dda02_data
		movb   $0x000001,_0dda13_data
		jmp    _056670_jump

	_056654_jump:
		xor    %edi,%edi
		mov    %di,_0dda02_data
		jmp    _056670_jump

	_05665f_jump:
		movw   $0x000001,_0dda02_data
		xor    %ch,%ch
		mov    %ch,_0dda13_data

	_056670_jump:
		mov    %eax,%ecx
		xor    %ah,%ch
		mov    $0x000004,%edi
		and    $0x000003,%cl
		sub    %ecx,%edi
		add    %edi,%eax
		mov    %ax,_0dd9fc_data
		mov    %ebx,%eax
		mov    %dx,_0dd9fe_data
		xor    %bh,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		mov    %edx,%eax
		add    %ebx,%eax
		add    $0x000002,%esi
		add    $0x000002,%eax
		mov    %si,_0dd9fa_data
		mov    %ax,_0dda00_data
		mov    $0x000140,%eax
		mov    _0dda00_data,%si
		sub    %esi,%eax
		mov    %eax,(%esp)
		mov    0x000014(%esp),%al
		test   %al,%al
		jne    _056813_jump
		cmpb   $0x000000,_0a7c9d_data
		jne    _056780_jump
		mov    $0x000001,%edx
		mov    _0c0f78_data,%eax
		call   _022a8c_func
		testb  $0x000004,_0c3348_data
		je     _056739_jump
		mov    _0aa4e2_data,%ecx
		mov    _0aa4da_data,%ebx
		mov    _0aa4d2_data,%edx
		mov    _0aa4ca_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _061b44_func
		mov    _0c0eb4_data,%edx
		mov    _0c0ebc_data,%ecx
		mov    _0c0eac_data,%ebx
		mov    _0c0eb0_data,%eax
		call   _017eca_func

	_056739_jump:
		call   _03ead0_func
		mov    _0a7cda_data,%eax
		sar    $0x000010,%eax
		mov    _0aa4e2_data(,%eax,2),%ecx
		mov    _0aa4da_data(,%eax,2),%ebx
		mov    _0aa4d2_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _0aa4ca_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _061b44_func
		mov    _0c0f50_data,%edi
		call   _01696f_func
		jmp    _0567ac_jump

	_056780_jump:
		mov    $0x000001,%edx
		mov    _0c0f9c_data,%eax
		call   _022a8c_func
		call   _03ead0_func
		xor    %eax,%eax
		mov    _0c33a0_data,%al
		call   _03fa6c_func
		xor    %eax,%eax
		mov    _0a7cde_data,%al
		call   _04f728_func

	_0567ac_jump:
		testb  $0x000004,_0c3348_data
		jne    _0567be_jump
		testb  $0x000020,_0c31b3_data
		je     _0567fa_jump

	_0567be_jump:
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		mov    $_0b4328_data,%edi
		lea    0x000000(,%edx,4),%eax
		mov    $0x000300,%ecx
		sub    %edx,%eax
		mov    _0c0fe4_data,%esi
		shl    $0x000008,%eax
		add    $0x002d00,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_0567fa_jump:
		call   _0228dc_func
		mov    _0c0f50_data,%eax
		mov    %eax,_0c0f78_data
		call   _03ee10_func
		jmp    _056949_jump

	_056813_jump:
		cmp    $0x000001,%al
		jne    _056949_jump
		mov    $0x000003,%esi
		xor    %ecx,%ecx

	_056822_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		lea    (%ebx,%ebx,2),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0d3f7d_data(%ebx),%dl
		mov    _0d3f7c_data(%ebx),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0d3f7e_data(%ebx),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		and    $0x0000ff,%eax
		add    $0x000080,%eax
		imul   %esi,%eax
		mov    _0d3f7c_data(%eax),%dl
		mov    %dl,_0dd3c0_data(%ebx)
		mov    _0d3f7d_data(%eax),%dl
		mov    _0d3f7e_data(%eax),%al
		mov    %dl,_0dd3c1_data(%ebx)
		inc    %ecx
		mov    %al,_0dd3c2_data(%ebx)
		cmp    $0x000100,%cx
		jb     _056822_jump
		mov    $0x000300,%ecx
		mov    $_0d3f7c_data,%esi
		mov    $_0dcdc0_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_056510_func,%eax
		call   _056220_func
		mov    _0dd9fa_data,%ebx
		mov    _0c0f50_data,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		mov    _0dd9fc_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		xor    %edi,%edi
		add    %eax,%ebx
		mov    $0x000003,%ebp
		jmp    _056937_jump

	_0568e0_jump:
		xor    %ecx,%ecx
		jmp    _05691d_jump

	_0568e4_jump:
		mov    (%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		xor    %eax,%eax
		mov    _0d3f7d_data(%edx),%al
		movzbl _0d3f7c_data(%edx),%esi
		mov    _0d3f7e_data(%edx),%dl
		add    %esi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		inc    %ebx
		add    $0x000080,%eax
		inc    %ecx
		mov    %al,-0x000001(%ebx)

	_05691d_jump:
		xor    %edx,%edx
		mov    _0dd9fe_data,%eax
		mov    %cx,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _0568e4_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		inc    %edi
		add    %eax,%ebx

	_056937_jump:
		xor    %eax,%eax
		mov    _0dd9f8_data,%edx
		mov    %di,%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _0568e0_jump

	_056949_jump:
		mov    _0c0f44_data,%eax
		add    $0x00fa00,%eax
		mov    %eax,_0c0f78_data
		call   *_0dd9e0_data
		mov    _0c0f50_data,%eax
		mov    0x000014(%esp),%cl
		mov    %eax,_0c0f78_data
		cmp    $0x000001,%cl
		jne    _056a11_jump
		mov    _0c0f44_data,%eax
		mov    _0dd9fa_data,%ebx
		mov    _0dd9fc_data,%edx
		add    $0x00fa00,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		xor    %edi,%edi
		jmp    _0569fe_jump

	_0569a3_jump:
		xor    %ecx,%ecx
		jmp    _0569e5_jump

	_0569a7_jump:
		mov    (%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		xor    %eax,%eax
		mov    _0d3f7d_data(%edx),%al
		movzbl _0d3f7c_data(%edx),%esi
		mov    _0d3f7e_data(%edx),%dl
		add    %esi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    $0x000003,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		inc    %ebx
		add    $0x000080,%eax
		inc    %ecx
		mov    %al,-0x000001(%ebx)

	_0569e5_jump:
		xor    %eax,%eax
		mov    _0dd9fe_data,%edx
		mov    %cx,%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _0569a7_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		inc    %edi

	_0569fe_jump:
		add    %eax,%ebx
		xor    %edx,%edx
		mov    _0dd9f8_data,%eax
		mov    %di,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _0569a3_jump

	_056a11_jump:
		mov    0x000014(%esp),%ch
		test   %ch,%ch
		jne    _056ad4_jump
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd3c0_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0d3f7c_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03ea80_func
		mov    $_05626c_func,%eax
		xor    %edx,%edx
		call   _03eb48_func
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd3c0_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_056ad4_jump:
		cmp    $0x000001,%ch
		jne    _056b8a_jump
		mov    $_056424_func,%eax
		mov    $0x000003,%esi
		call   _03eb48_func
		xor    %ecx,%ecx

	_056aee_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		lea    (%ebx,%ebx,2),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0d3f7d_data(%ebx),%al
		mov    _0d3f7c_data(%ebx),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0d3f7e_data(%ebx),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		and    $0x0000ff,%eax
		add    $0x000080,%eax
		imul   %esi,%eax
		mov    _0d3f7c_data(%eax),%dl
		mov    %dl,_0dcdc0_data(%ebx)
		mov    _0d3f7d_data(%eax),%dl
		mov    _0d3f7e_data(%eax),%al
		mov    %dl,_0dcdc1_data(%ebx)
		inc    %ecx
		mov    %al,_0dcdc2_data(%ebx)
		cmp    $0x000100,%cx
		jb     _056aee_jump
		mov    $0x000300,%ecx
		mov    $_0d3f7c_data,%esi
		mov    $_0dd3c0_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   *_0dd9e0_data
		mov    $_056510_func,%eax
		call   _056220_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_056b8a_jump:
		cmp    $0x000002,%ch
		jne    _056cd9_jump
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd3c0_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0d3f7c_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_05626c_func,%eax
		call   _03eb48_func
		cmpb   $0x000001,_0a7c9d_data
		jne    _056c28_jump
		xor    %eax,%eax
		mov    _0c33a0_data,%al
		call   _03f9fc_func
		xor    %eax,%eax
		mov    _0a7cde_data,%al
		call   _04f728_func

	_056c28_jump:
		testb  $0x000004,_0c3348_data
		jne    _056c3a_jump
		testb  $0x000020,_0c31b3_data
		je     _056c77_jump

	_056c3a_jump:
		mov    _0c3012_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c0fe4_data,%esi
		sub    %edx,%eax
		xor    %edx,%edx
		shl    $0x000008,%eax
		mov    _0c33d3_data,%dl
		add    %eax,%esi
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0b4328_data,%edi
		shl    $0x000008,%eax
		mov    $0x000300,%ecx
		jmp    _056c9a_jump

	_056c77_jump:
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd3c0_data,%esi

	_056c9a_jump:
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,_0c33d3_data
		je     _056cd4_jump
		mov    $0x000300,%ecx
		mov    $_0dd6c0_data,%esi
		mov    $_0b4328_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_056cd4_jump:
		call   _03ea80_func

	_056cd9_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_056ce4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    $0x000140,%eax
		mov    _0dda00_data,%dx
		mov    _0dd9fc_data,%esi
		mov    _0c0f50_data,%edi
		sar    $0x000010,%esi
		sub    %edx,%eax
		mov    _0dd9fa_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%esi,4),%eax
		sar    $0x000010,%edx
		add    %eax,%esi
		add    %edx,%edi
		shl    $0x000006,%esi
		lea    (%edi,%esi,1),%eax
		mov    _0c0f44_data,%edi
		add    $0x00fa00,%edi
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    %ebx,0x000004(%esp)
		jmp    _056d85_jump

	_056d3c_jump:
		xor    %ecx,%ecx
		jmp    _056d62_jump

	_056d40_jump:
		xor    %edi,%edi
		mov    _0dda00_data,%esi
		mov    %bx,%di
		sar    $0x000010,%esi
		cmp    %esi,%edi
		jne    _056d5e_jump
		mov    (%eax),%bl
		mov    (%edx),%bh
		cmp    %bh,%bl
		je     _056d5c_jump
		mov    %bh,(%eax)

	_056d5c_jump:
		xor    %ebx,%ebx

	_056d5e_jump:
		inc    %ecx
		inc    %eax
		inc    %edx
		inc    %ebx

	_056d62_jump:
		xor    %esi,%esi
		mov    _0dd9fe_data,%edi
		mov    %cx,%si
		sar    $0x000010,%edi
		cmp    %edi,%esi
		jl     _056d40_jump
		mov    0x000004(%esp),%edi
		xor    %esi,%esi
		inc    %edi
		mov    (%esp),%si
		mov    %edi,0x000004(%esp)
		add    %esi,%eax

	_056d85_jump:
		add    %esi,%edx
		xor    %esi,%esi
		mov    _0dd9f8_data,%edi
		mov    0x000004(%esp),%si
		sar    $0x000010,%edi
		cmp    %edi,%esi
		jl     _056d3c_jump
		mov    _0dda02_data,%ax
		dec    %ax
		mov    %ax,_0dda02_data
		sete   %al
		xor    %ah,%ah
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056db8_func:
		mov    %ax,_0dd9fc_data
		mov    %dx,_0dd9fe_data
		mov    %bx,_0dda00_data
		mov    %cx,_0dd9fa_data
		mov    _0c0f44_data,%eax
		mov    $0x000010,%edx
		add    $0x00fa00,%eax
		mov    %dx,_0dda02_data
		mov    %eax,_0c0f78_data
		call   *_0dd9e0_data
		mov    _0c0f50_data,%eax
		mov    %eax,_0c0f78_data
		mov    $_056ce4_func,%eax
		jmp    _03eb48_func



_056e08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_057008_func,%edx
		mov    _0dd9c4_data,%eax
		mov    %edx,_0dd9d0_data
		mov    (%eax),%dl
		mov    $_057420_func,%ebx
		mov    %dl,_0c33ce_data
		mov    0x000001(%eax),%dx
		mov    $_0575b4_func,%ecx
		mov    %dx,_0c3066_data
		mov    0x000003(%eax),%dx
		mov    $_0577a0_func,%esi
		mov    %dx,_0c3070_data
		mov    0x000005(%eax),%dx
		mov    $_056e08_func,%edi
		mov    %dx,_0c3078_data
		mov    0x000007(%eax),%dx
		mov    %ebx,_0dd9e0_data
		mov    %dx,_0c305e_data
		xor    %dl,%dl
		mov    %ecx,_0dd9dc_data
		mov    %dl,_0aa501_data
		xor    %dh,%dh
		mov    %esi,_0dd9e4_data
		mov    _0c221e_data,%dl
		mov    0x000017(%eax),%ebx
		mov    %dx,_0c304c_data
		mov    $0x000009,%edx
		sar    $0x000010,%ebx
		mov    %dx,_0c302a_data
		mov    %dx,_0c3068_data
		mov    0x000015(%eax),%edx
		mov    0x000013(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %edi,_0dd9d4_data
		call   _055854_func
		mov    _0dd9c4_data,%eax
		mov    0x000010(%eax),%dl
		mov    %dl,_0dda14_data
		xor    %edx,%edx
		mov    0x000013(%eax),%ax
		mov    _0dda14_data,%dl
		sub    %edx,%eax
		mov    $0x000014,%ebx
		mov    %ax,_0c304e_data
		xor    %edx,%edx
		mov    $_0c0f64_data,%eax
		call   _085360_func
		xor    %eax,%eax
		mov    $0x000001,%dh
		mov    _0aa501_data,%al
		mov    $0x000001,%ecx
		mov    %dh,_0aa910_data
		mov    %cx,_0c0f64_data(,%eax,2)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056f14_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00003c,%esp
		mov    %eax,%esi
		mov    _0a2970_data,%ax
		mov    %ax,(%esp)
		movswl %si,%eax
		mov    _0bf2f4_data,%esi
		mov    %esp,%edi
		mov    (%esi,%eax,4),%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_056f3d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _056f55_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _056f3d_jump

	_056f55_jump:
		pop    %edi
		mov    $_0a2974_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_056f66_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _056f7e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _056f66_jump

	_056f7e_jump:
		pop    %edi
		movswl %dx,%esi
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		mov    $_0c221f_data,%esi
		add    %eax,%eax
		mov    %esp,%edi
		add    %eax,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_056f9f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _056fb7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _056f9f_jump

	_056fb7_jump:
		pop    %edi
		mov    $_0a2970_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_056fc8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _056fe0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _056fc8_jump

	_056fe0_jump:
		pop    %edi
		mov    %esp,%esi
		mov    %ebx,%edi
		push   %edi

	_056fe6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _056ffe_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _056fe6_jump

	_056ffe_jump:
		pop    %edi
		add    $0x00003c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_057008_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    _0dd9c4_data,%eax
		mov    0x000019(%eax),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0bf2f4_data,%eax
		mov    $_0aa458_data,%edi
		mov    (%edx,%eax,1),%esi
		push   %edi

	_057031_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _057049_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _057031_jump

	_057049_jump:
		pop    %edi
		mov    _0dd9c4_data,%eax
		mov    0x000021(%eax),%al
		lea    0x000014(%esp),%ecx
		lea    0x000018(%esp),%ebx
		lea    0x00001c(%esp),%edx
		and    $0x0000ff,%eax
		call   _01f3b8_func
		mov    _0dd9c4_data,%eax
		mov    0x000021(%eax),%al
		mov    0x000016(%esp),%ecx
		mov    0x000012(%esp),%ebx
		and    $0x0000ff,%eax
		xor    %edx,%edx
		push   %eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    %edi,%eax
		call   _01f824_func
		cmp    $0x00012c,%ax
		jg     _05709a_jump
		mov    %edi,%eax
		call   _086bfe_func

	_05709a_jump:
		lea    0x000014(%esp),%ecx
		lea    0x000018(%esp),%ebx
		lea    0x00001c(%esp),%edx
		mov    $0x000002,%eax
		call   _01f3b8_func
		xor    %eax,%eax
		mov    _0aa501_data,%al
		mov    _0c302a_data,%dx
		mov    %ax,0x000024(%esp)
		cmp    %dx,%ax
		jg     _057229_jump

	_0570cc_jump:
		mov    0x000024(%esp),%eax
		cmp    _0c304c_data,%ax
		jl     _0570e6_jump
		cmp    _0c302a_data,%ax
		jne    _05720f_jump

	_0570e6_jump:
		mov    0x000022(%esp),%esi
		sar    $0x000010,%esi
		imul   $0x00000a,%esi,%edi
		imul   $0x0000d8,%esi,%ecx
		mov    _0dd9c4_data,%edx
		mov    0x000027(%edx,%edi,1),%bx
		mov    %bx,_0b8268_data(%ecx)
		mov    0x00002b(%edx,%edi,1),%bl
		mov    %bl,_0b826c_data(%ecx)
		mov    0x00002d(%edx,%edi,1),%bl
		mov    %bl,_0b826e_data(%ecx)
		mov    0x00002c(%edx,%edi,1),%al
		mov    %al,_0b826d_data(%ecx)
		mov    $_0b8198_data,%eax
		mov    0x000024(%esp),%ebx
		add    %ecx,%eax
		cmp    _0c302a_data,%bx
		jne    _05719b_jump
		mov    _0c3028_data,%esi
		sar    $0x000010,%esi
		imul   $0x00000a,%esi,%esi
		mov    0x000023(%edx,%esi,1),%edx
		mov    _0bf2f4_data,%esi
		sar    $0x000010,%edx
		mov    %eax,%edi
		mov    (%esi,%edx,4),%esi
		push   %edi

	_057159_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _057171_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _057159_jump

	_057171_jump:
		pop    %edi
		mov    _0c3090_data,%ax
		mov    %ax,_0b826a_data(%ecx)
		mov    _0c3028_data,%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%edx
		mov    _0dd9c4_data,%eax
		mov    0x00002e(%edx,%eax,1),%al
		mov    %al,_0b826f_data(%ecx)
		jmp    _0571f8_jump

	_05719b_jump:
		add    %esi,%esi
		add    %edx,%esi
		mov    0x0000c3(%esi),%edx
		mov    0x0000b1(%esi),%esi
		mov    %eax,%ebx
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		mov    %esi,%eax
		call   _056f14_func
		mov    _0dd9c4_data,%eax
		mov    0x00002e(%edi,%eax,1),%al
		mov    0x00001c(%esp),%edx
		mov    %al,_0b826f_data(%ecx)
		xor    %eax,%eax
		mov    0x000024(%esp),%ebx
		mov    _0aa501_data,%al
		mov    _0c3062_data,%si
		sub    %eax,%ebx
		add    %esi,%edx
		mov    %ebx,%eax
		imul   %edx,%eax
		mov    _0c309c_data,%di
		add    %edi,%eax
		mov    %ax,_0b826a_data(%ecx)

	_0571f8_jump:
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		add    $_0b8198_data,%eax
		call   _01f8d4_func

	_05720f_jump:
		mov    0x000024(%esp),%ebx
		inc    %ebx
		mov    _0c302a_data,%cx
		mov    %bx,0x000024(%esp)
		cmp    %cx,%bx
		jle    _0570cc_jump

	_057229_jump:
		mov    _0dd9c4_data,%eax
		mov    0x0000af(%eax),%dx
		mov    0x0000b1(%eax),%si
		mov    _0c3082_data,%ax
		mov    _0c3028_data,%ecx
		sub    %edx,%eax
		sar    $0x000010,%ecx
		mov    %eax,%edx
		lea    0x000000(,%ecx,8),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		sub    %ecx,%eax
		mov    _0c304e_data,%bx
		mov    _0c3082_data,%cx
		mov    _0b826a_data(,%eax,8),%ax
		movzbw _0dda14_data,%di
		sub    %ecx,%eax
		add    %edi,%edi
		add    %esi,%eax
		mov    _0dda04_data,%si
		mov    %ax,0x000020(%esp)
		cmp    %si,%bx
		jge    _057296_jump
		mov    %ebx,%ecx
		jmp    _057298_jump

	_057296_jump:
		mov    %esi,%ecx

	_057298_jump:
		mov    _0dda08_data,%ax
		cmp    %ax,%dx
		jge    _0572a5_jump
		mov    %edx,%eax

	_0572a5_jump:
		mov    _0dda0a_data,%ebp
		mov    _0dda02_data,%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		movswl %bx,%ebp
		mov    %ebp,0x000004(%esp)
		movswl %di,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000004(%esp),%ebp
		add    0x00000c(%esp),%ebp
		cmp    %ebp,%esi
		jle    _0572dd_jump
		movswl %cx,%ebp
		sub    %ebp,%esi
		mov    %esi,(%esp)
		jmp    _0572e5_jump

	_0572dd_jump:
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,(%esp)

	_0572e5_jump:
		mov    (%esp),%esi
		mov    _0dda04_data,%ebp
		mov    %si,0x000028(%esp)
		mov    _0dda06_data,%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		movswl %dx,%ebp
		mov    %ebp,0x000010(%esp)
		mov    0x00001e(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000010(%esp),%ebp
		add    0x000008(%esp),%ebp
		cmp    %ebp,%esi
		jle    _057326_jump
		movswl %ax,%ebp
		sub    %ebp,%esi
		jmp    _05732d_jump

	_057326_jump:
		movswl %ax,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi

	_05732d_jump:
		mov    %dx,_0dda08_data
		mov    0x000020(%esp),%edx
		mov    %bx,_0dda04_data
		mov    %dx,_0dda06_data
		mov    _0a7cd3_data,%dl
		mov    %di,_0dda0c_data
		test   %dl,%dl
		je     _057374_jump
		push   $0x000001
		movswl %si,%ebx
		movswl %ax,%edx
		mov    0x00002a(%esp),%esi
		movswl %cx,%eax
		sar    $0x000010,%esi
		mov    %ebx,%ecx
		mov    %esi,%ebx
		call   _056624_func
		jmp    _05738d_jump

	_057374_jump:
		mov    0x000026(%esp),%ebx
		movswl %si,%edx
		sar    $0x000010,%ebx
		movswl %ax,%esi
		movswl %cx,%eax
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _056db8_func

	_05738d_jump:
		mov    _0c0f9c_data,%edi
		xor    %edx,%edx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd0c0_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0c33d3_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0b4328_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0b4028_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		call   _02211c_func
		call   _03ea80_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057420_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		call   _03ee10_func
		mov    _0dd9c4_data,%eax
		mov    0x000021(%eax),%al
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%edx
		and    $0x0000ff,%eax
		call   _01f3b8_func
		mov    _0dd9c4_data,%eax
		mov    0x000021(%eax),%al
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		and    $0x0000ff,%eax
		xor    %edx,%edx
		push   %eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    $_0aa458_data,%eax
		call   _01f824_func
		cmp    $0x00012c,%ax
		jle    _057491_jump
		mov    $0x000002,%ecx
		mov    _0dd9c4_data,%eax
		xor    %edx,%edx
		mov    _0c3080_data,%ebx
		mov    0x000024(%eax),%dl
		sar    $0x000010,%ebx
		jmp    _0574a9_jump

	_057491_jump:
		mov    _0dd9c4_data,%eax
		mov    _0c3080_data,%ebx
		xor    %edx,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x000024(%eax),%dl
		mov    0x000021(%eax),%cl

	_0574a9_jump:
		push   %edx
		mov    0x00001b(%eax),%edx
		mov    $_0aa458_data,%eax
		sar    $0x000010,%edx
		call   _01b0f8_func
		mov    _0aa501_data,%al
		mov    %al,0x00000c(%esp)
		jmp    _057595_jump

	_0574c8_jump:
		cmp    _0c304c_data,%bx
		jl     _0574da_jump
		cmp    %dx,%bx
		jne    _057591_jump

	_0574da_jump:
		xor    %ebx,%ebx
		mov    0x00000c(%esp),%bl
		imul   $0x0000d8,%ebx,%eax
		mov    _0b8268_data(%eax),%si
		mov    _0b826a_data(%eax),%dx
		xor    %eax,%eax
		mov    _0c302a_data,%di
		mov    %bl,%al
		cmp    %di,%ax
		je     _05750f_jump
		cmpw   $0x000000,_0c0f64_data(,%ebx,2)
		je     _05751c_jump

	_05750f_jump:
		mov    _0c3028_data,%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%ebx
		jmp    _05751f_jump

	_05751c_jump:
		imul   $0x00000a,%ebx,%ebx

	_05751f_jump:
		mov    _0dd9c4_data,%eax
		mov    0x00002e(%ebx,%eax,1),%bl
		xor    %eax,%eax
		mov    _0c3068_data,%cx
		mov    0x00000c(%esp),%al
		cmp    %cx,%ax
		je     _057565_jump
		xor    %eax,%eax
		mov    %bl,%al
		push   %eax
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		imul   $0x0000d8,%eax,%eax
		xor    %ecx,%ecx
		movswl %dx,%ebx
		movswl %si,%edx
		mov    _0b826c_data(%eax),%cl
		add    $_0b8198_data,%eax
		call   _01b0f8_func
		jmp    _057591_jump

	_057565_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    %bl,_0b826f_data(%eax)
		mov    $_0b8198_data,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _01f8d4_func
		mov    %ebx,%eax
		call   _055a20_func

	_057591_jump:
		incb   0x00000c(%esp)

	_057595_jump:
		xor    %ebx,%ebx
		mov    _0c302a_data,%dx
		mov    0x00000c(%esp),%bl
		cmp    %dx,%bx
		jle    _0574c8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0575b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		call   _05598c_func
		cmpb   $0x000000,_0aa910_data
		je     _0575eb_jump
		cmpw   $0x000000,_0c317e_data
		jne    _0575eb_jump
		cmpb   $0x000000,_0c3372_data
		je     _0575e3_jump
		mov    $_0c31f4_data,%eax
		call   _071f50_func

	_0575e3_jump:
		xor    %dh,%dh
		mov    %dh,_0aa910_data

	_0575eb_jump:
		cmpb   $0x000000,_0c33ce_data
		jne    _057628_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _0576df_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0576df_jump

	_057628_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _057684_jump
		mov    $0x000044,%eax
		call   _071754_func
		xor    %eax,%eax
		mov    _0c3068_data,%di
		mov    _0aa501_data,%al
		cmp    %di,%ax
		jne    _057660_jump
		mov    _0c302a_data,%ax
		mov    %ax,_0c3068_data
		jmp    _0576df_jump

	_057660_jump:
		cmp    _0c302a_data,%di
		jne    _057678_jump
		mov    _0c304c_data,%ax
		dec    %eax
		mov    %ax,_0c3068_data
		jmp    _0576df_jump

	_057678_jump:
		mov    %edi,%ebx
		dec    %ebx
		mov    %bx,_0c3068_data
		jmp    _0576df_jump

	_057684_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _0576df_jump
		mov    $0x000044,%eax
		call   _071754_func
		mov    _0c3068_data,%ax
		mov    _0c302a_data,%cx
		cmp    %cx,%ax
		jne    _0576b9_jump
		xor    %ecx,%eax
		mov    _0aa501_data,%al
		mov    %ax,_0c3068_data
		jmp    _0576df_jump

	_0576b9_jump:
		mov    _0c304a_data,%edx
		mov    _0c3066_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		dec    %edx
		cmp    %edx,%eax
		jne    _0576d8_jump
		mov    %cx,_0c3068_data
		jmp    _0576df_jump

	_0576d8_jump:
		incw   _0c3068_data

	_0576df_jump:
		mov    _0c3068_data,%cx
		test   %cx,%cx
		jl     _057795_jump
		cmp    _0c304c_data,%cx
		jge    _057795_jump
		cmpb   $0x000000,_0c33ce_data
		je     _057795_jump
		call   _0426b0_func
		test   %al,%al
		jne    _057726_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _057726_jump
		call   _041d14_func
		test   %ax,%ax
		je     _057795_jump

	_057726_jump:
		xor    %al,%al
		jmp    _05772c_jump

	_05772a_jump:
		inc    %al

	_05772c_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0c0f64_data(,%edx,2)
		je     _05772a_jump
		xor    %edx,%edx
		mov    _0c3068_data,%bx
		mov    %al,%dl
		cmp    %bx,%dx
		je     _057795_jump
		mov    _0c3066_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000000,_0c0f64_data(,%edx,2)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		mov    _0c3066_data,%edx
		sar    $0x000010,%edx
		mov    %bx,_0c0f64_data(,%edx,2)
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0c0f64_data(,%edx,2)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %bx,_0c0f64_data(,%edx,2)

	_057795_jump:
		call   _0559d0_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0577a0_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0c3393_data
		jne    _0577db_jump
		mov    _0c304c_data,%bx
		xor    %al,%al
		jmp    _0577c8_jump

	_0577b7_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0c0f64_data(,%edx,2)
		jne    _0577d1_jump
		inc    %al

	_0577c8_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    %bx,%dx
		jl     _0577b7_jump

	_0577d1_jump:
		and    $0x0000ff,%eax
		call   _0302b0_func

	_0577db_jump:
		mov    $0x000001,%esi
		mov    _0c3372_data,%dl
		mov    %si,_0c306a_data
		test   %dl,%dl
		je     _0577f6_jump
		call   _071f70_func

	_0577f6_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_057800_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ebx
		mov    _0c1144_data,%edx
		cmpl   $0x000000,0x000024(%edx)
		jne    _05784f_jump
		xor    %ecx,%ecx
		mov    _0b9320_data,%di
		mov    _0b9364_data,%cl
		movzbl _0b9370_data,%esi
		add    %edi,%ecx
		movzbl _0b9365_data,%edi
		add    %edi,%esi
		mov    _0b9324_data,%ebp
		sar    %esi
		movw   $0x000000,0x000040(%edx)
		add    %ebp,%esi
		movw   $0x000000,0x000042(%edx)
		sub    $0x00000a,%esi
		jmp    _05786c_jump

	_05784f_jump:
		xor    %ecx,%ecx
		mov    0x000028(%edx),%si
		mov    0x00006c(%edx),%cl
		movzbl 0x00006d(%edx),%edi
		add    %esi,%ecx
		movzbl 0x000078(%edx),%esi
		add    %edi,%esi
		sar    %esi
		add    0x00002c(%edx),%esi
		sub    $0x000003,%esi

	_05786c_jump:
		xor    %edx,%edx
		movzbl 0x000078(%eax),%edi
		mov    0x00006d(%eax),%dl
		add    %edi,%edx
		sar    %edx
		mov    0x00002c(%eax),%edi
		add    %edx,%edi
		movswl %si,%edx
		mov    0x000028(%eax),%si
		sub    %esi,%ecx
		mov    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x00006c(%eax),%cl
		sub    %edx,%edi
		sub    %ecx,%esi
		mov    %edi,%edx
		mov    %si,(%ebx)
		test   %di,%di
		jge    _0578e3_jump
		mov    _0c1144_data,%ebx
		cmpw   $0x000000,0x000042(%ebx)
		jle    _0578cd_jump
		movswl %dx,%edx
		cmp    $0xffffffe2,%edx
		jle    _0578bb_jump
		addw   $0x000002,0x000042(%eax)
		jmp    _05792c_jump

	_0578bb_jump:
		cmp    $0xffffffd0,%edx
		jle    _05792c_jump
		incw   0x000042(%eax)
		jmp    _05792c_jump

	_0578cd_jump:
		movswl %dx,%edx
		cmp    $0xffffffe2,%edx
		jle    _0578dc_jump
		subw   $0x000002,0x000042(%eax)
		jmp    _05792c_jump

	_0578dc_jump:
		cmp    $0xffffffd0,%edx
		jle    _05792c_jump
		jmp    _057928_jump

	_0578e3_jump:
		mov    _0c1144_data,%ebx
		cmpw   $0x000000,0x000042(%ebx)
		jl     _057911_jump
		cmp    $0x00001e,%dx
		jge    _057901_jump
		addw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_057901_jump:
		cmp    $0x000030,%dx
		jge    _05792c_jump
		incw   0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_057911_jump:
		cmp    $0x00001e,%dx
		jge    _057922_jump
		subw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_057922_jump:
		cmp    $0x000030,%dx
		jge    _05792c_jump

	_057928_jump:
		decw   0x000042(%eax)

	_05792c_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_057934_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    0x000071(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000002,%dl
		je     _05796e_jump
		xor    %edx,%edx
		mov    0x000071(%eax),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%eax),%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x000070(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _057997_jump
		mov    $0x000001,%ebx
		mov    %ebx,%edx
		call   _065368_func
		jmp    _057997_jump

	_05796e_jump:
		cmp    %dl,%dl
		jne    _057995_jump
		cmpb   $0x000001,0x000070(%eax)
		jne    _057995_jump
		cmpb   $0x000000,0x00006f(%eax)
		jne    _057995_jump
		movw   $0x00fffb,0x000042(%eax)
		mov    %cl,0x000075(%eax)
		mov    0x00002c(%eax),%edx
		mov    %cl,0x000076(%eax)
		sub    $0x00000e,%edx
		mov    %edx,0x00002c(%eax)
		jmp    _057997_jump

	_057995_jump:
		mov    $0x000001,%cl

	_057997_jump:
		mov    %cl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0579a0_func:
		testb  $0x000008,0x000085(%eax)
		jne    _0579ae_jump
		test   %dx,%dx
		jg     _0579bc_jump

	_0579ae_jump:
		testb  $0x000008,0x000085(%eax)
		je     _0579bf_jump
		test   %dx,%dx
		jge    _0579bf_jump

	_0579bc_jump:
		mov    $0x000001,%al
		ret    

	_0579bf_jump:
		xor    %al,%al
		ret    



_0579c4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000002,0x000071(%eax)
		je     _0579da_jump
		cmpb   $0x000001,0x000071(%ebx)
		jne    _057b2b_jump

	_0579da_jump:
		movswl %dx,%edx
		mov    %ebx,%eax
		call   _0579a0_func
		test   %al,%al
		je     _057a32_jump
		cmpb   $0x000002,0x000071(%ebx)
		jne    _057a0d_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _057a0d_jump
		cmpb   $0x000000,0x000070(%ebx)
		setne  %al
		and    $0x0000ff,%eax
		je     _057a0d_jump
		incw   0x000042(%ebx)
		jmp    _057a14_jump

	_057a0d_jump:
		mov    %ebx,%eax
		call   _057934_func

	_057a14_jump:
		testb  $0x000008,0x000085(%ebx)
		jne    _057a24_jump
		mov    $0x000004,%eax
		jmp    _057a29_jump

	_057a24_jump:
		mov    $0xfffffffc,%eax

	_057a29_jump:
		mov    %ax,0x000040(%ebx)
		jmp    _057aa2_jump

	_057a32_jump:
		mov    _0b9338_data,%ax
		mov    %eax,%edx
		mov    %ax,0x000040(%ebx)
		neg    %edx
		mov    0x00003a(%ebx),%eax
		mov    %dx,0x000040(%ebx)
		sar    $0x000010,%eax
		cmp    0x000028(%ebx),%eax
		jle    _057a73_jump
		testb  $0x000008,0x000085(%ebx)
		je     _057a73_jump
		mov    0x000040(%ebx),%di
		test   %di,%di
		jge    _057a69_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _057aa2_jump

	_057a69_jump:
		mov    %edi,%eax
		add    %edi,%eax
		mov    %ax,0x000040(%ebx)
		jmp    _057aa2_jump

	_057a73_jump:
		mov    0x00003a(%ebx),%eax
		mov    0x000028(%ebx),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jge    _057aa2_jump
		testb  $0x000008,0x000085(%ebx)
		jne    _057aa2_jump
		mov    0x000040(%ebx),%cx
		test   %cx,%cx
		jle    _057a9a_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _057aa2_jump

	_057a9a_jump:
		mov    %ecx,%esi
		add    %ecx,%esi
		mov    %si,0x000040(%ebx)

	_057aa2_jump:
		mov    0x000071(%ebx),%cl
		cmp    $0x000001,%cl
		jne    _057b03_jump
		xor    %eax,%eax
		mov    %cl,%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000070(%ebx),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000085(%ebx),%ch
		add    $0x000007,%eax
		test   $0x000008,%ch
		jne    _057ad7_jump
		cmpw   $0x000000,0x000040(%ebx)
		jg     _057ae7_jump

	_057ad7_jump:
		testb  $0x000008,0x000085(%ebx)
		je     _057aee_jump
		cmpw   $0x000000,0x000040(%ebx)
		jge    _057aee_jump

	_057ae7_jump:
		mov    $0x000001,%edx
		jmp    _057af0_jump

	_057aee_jump:
		xor    %edx,%edx

	_057af0_jump:
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		mov    %dh,(%eax)
		shl    $0x000004,%dl
		mov    %dh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)

	_057b03_jump:
		cmpw   $0x000004,0x000040(%ebx)
		jle    _057b15_jump
		movw   $0x000004,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_057b15_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _057b32_jump
		movw   $0x00fffc,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_057b2b_jump:
		mov    %ebx,%eax
		call   _05a530_func

	_057b32_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_057b38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		cmpb   $0x000000,0x000071(%eax)
		jne    _057b6a_jump
		cmpb   $0x00000a,0x000070(%ebx)
		jne    _057b6a_jump
		mov    0x00004a(%ebx),%cx
		cmp    $0x000032,%cx
		jle    _057df3_jump
		mov    %ecx,%esi
		sub    $0x000032,%esi
		mov    %si,0x00004a(%ebx)
		jmp    _057df3_jump

	_057b6a_jump:
		mov    %ebx,%eax
		call   _057934_func
		test   %al,%al
		je     _057df3_jump
		cmpb   $0x000001,0x000070(%ebx)
		setne  %al
		and    $0x0000ff,%eax
		je     _057bc2_jump
		cmpw   $0x0001f4,0x00004a(%ebx)
		jne    _057bc2_jump
		movb   $0x00008c,0x000081(%ebx)
		mov    0x00004a(%ebx),%dx
		mov    0x000028(%ebx),%ax
		inc    %edx
		mov    %ax,0x00004e(%ebx)
		mov    %ebx,%eax
		mov    %dx,0x00004a(%ebx)
		mov    $0x000003,%edx
		movw   $0x000000,0x000042(%ebx)
		call   _01de98_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_057bc2_jump:
		mov    0x000070(%ebx),%cl
		cmp    $0x000003,%cl
		jne    _057bf1_jump
		cmpb   $0x000000,0x000076(%ebx)
		je     _057df3_jump
		mov    0x000042(%ebx),%di
		test   %di,%di
		jl     _057df3_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000042(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_057bf1_jump:
		cmp    $0x000004,%cl
		jne    _057df3_jump
		mov    0x00004c(%ebx),%eax
		mov    0x000028(%ebx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _057c0d_jump
		neg    %eax

	_057c0d_jump:
		mov    %eax,%edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0b9320_data,%esi
		mov    _0b9364_data,%al
		add    %eax,%esi
		mov    0x00004c(%ebx),%eax
		sar    $0x000010,%eax
		sub    %eax,%esi
		mov    %esi,%eax
		movzbl 0x00006c(%ebx),%esi
		sub    %esi,%eax
		sub    $0x00000a,%eax
		test   %eax,%eax
		jge    _057c39_jump
		neg    %eax

	_057c39_jump:
		movzbw 0x000081(%ebx),%si
		mov    %ax,(%esp)
		cmp    %si,%dx
		jg     _057c58_jump
		cmp    %ax,%dx
		jle    _057cad_jump
		cmpb   $0x00008c,0x000081(%ebx)
		jne    _057cad_jump

	_057c58_jump:
		cmpb   $0x00008c,0x000081(%ebx)
		jne    _057c72_jump
		cmpw   $0x00008c,(%esp)
		jge    _057c72_jump
		mov    (%esp),%al
		mov    %al,0x000081(%ebx)

	_057c72_jump:
		cmpb   $0x000001,0x000076(%ebx)
		jne    _057c8b_jump
		testb  $0x000008,0x000085(%ebx)
		jne    _057c87_jump
		incw   0x000040(%ebx)
		jmp    _057c8b_jump

	_057c87_jump:
		decw   0x000040(%ebx)

	_057c8b_jump:
		cmpb   $0x000001,0x000075(%ebx)
		jne    _057dc5_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jle    _057dc5_jump
		decw   0x000042(%ebx)
		jmp    _057dc5_jump

	_057cad_jump:
		xor    %eax,%eax
		mov    _0b9324_data,%di
		mov    0x00006d(%ebx),%al
		mov    0x00002c(%ebx),%si
		mov    %eax,%edx
		xor    %eax,%eax
		add    %esi,%edx
		mov    _0b9365_data,%al
		sub    %edi,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		cmpw   $0x000000,0x000040(%ebx)
		jg     _057cde_jump
		testb  $0x000008,0x000085(%ebx)
		je     _057cee_jump

	_057cde_jump:
		cmpw   $0x000000,0x000040(%ebx)
		jl     _057d42_jump
		testb  $0x000008,0x000085(%ebx)
		je     _057d42_jump

	_057cee_jump:
		testb  $0x000008,0x000085(%ebx)
		jne    _057cff_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _057d05_jump

	_057cff_jump:
		movw   $0x000004,0x000040(%ebx)

	_057d05_jump:
		cmp    $0x00000a,%ax
		jle    _057d16_jump
		movw   $0x00ffff,0x000042(%ebx)
		jmp    _057dc5_jump

	_057d16_jump:
		cwtl   
		cmp    $0xffffffec,%eax
		jge    _057d27_jump
		movw   $0x000002,0x000042(%ebx)
		jmp    _057dc5_jump

	_057d27_jump:
		cmp    $0xfffffff6,%eax
		jge    _057d37_jump
		movw   $0x000001,0x000042(%ebx)
		jmp    _057dc5_jump

	_057d37_jump:
		movw   $0x000000,0x000042(%ebx)
		jmp    _057dc5_jump

	_057d42_jump:
		cwtl   
		cmp    $0xfffffff6,%eax
		jle    _057d59_jump
		cmpb   $0x000000,_0b9369_data
		jne    _057d59_jump
		movw   $0x000000,0x000042(%ebx)
		jmp    _057d5f_jump

	_057d59_jump:
		movw   $0x000001,0x000042(%ebx)

	_057d5f_jump:
		cmp    $0x000008,%cx
		jge    _057d6e_jump
		testb  $0x000008,0x000085(%ebx)
		je     _057d7d_jump

	_057d6e_jump:
		cmp    $0x000008,%cx
		jle    _057d94_jump
		testb  $0x000008,0x000085(%ebx)
		je     _057d94_jump

	_057d7d_jump:
		decw   0x000040(%ebx)
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _057da9_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _057da9_jump

	_057d94_jump:
		mov    0x000040(%ebx),%di
		inc    %edi
		mov    %di,0x000040(%ebx)
		cmp    $0x000004,%di
		jle    _057da9_jump
		movw   $0x000004,0x000040(%ebx)

	_057da9_jump:
		mov    0x000040(%ebx),%si
		test   %si,%si
		jne    _057dc5_jump
		cmp    $0x000008,%cx
		jge    _057dc5_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		mov    %si,0x00004a(%ebx)
		call   _01de98_func

	_057dc5_jump:
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _02346c_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _057df3_jump
		cmpw   $0x000000,0x000040(%ebx)
		jle    _057dea_jump
		mov    $0xffffffff,%eax
		jmp    _057def_jump

	_057dea_jump:
		mov    $0x000001,%eax

	_057def_jump:
		mov    %ax,0x000040(%ebx)

	_057df3_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057dfc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000071(%eax),%ah
		xor    %bl,%bl
		test   %ah,%ah
		jne    _057e32_jump
		cmpb   $0x000003,0x000070(%edx)
		jne    _057e32_jump
		movw   $0x00fffc,0x000042(%edx)
		mov    0x000085(%edx),%cl
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%cl
		mov    $0x000001,%bl
		mov    %cl,0x000085(%edx)
		jmp    _057ef2_jump

	_057e32_jump:
		cmpb   $0x000001,0x000071(%edx)
		jne    _057e3e_jump
		cmpb   $0x000002,0x000070(%edx)
		je     _057e66_jump

	_057e3e_jump:
		cmpb   $0x000000,0x000071(%edx)
		jne    _057e51_jump
		mov    0x000070(%edx),%ah
		cmp    $0x000002,%ah
		je     _057e66_jump
		cmp    $0x000004,%ah
		je     _057e66_jump

	_057e51_jump:
		mov    0x000071(%edx),%cl
		cmp    $0x000002,%cl
		jne    _057ef2_jump
		cmp    0x000070(%edx),%cl
		jne    _057ef2_jump

	_057e66_jump:
		mov    %edx,%eax
		mov    $0x000001,%bl
		call   _01d740_func
		test   %al,%al
		je     _057e7f_jump
		movw   $0x000000,0x00004a(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_057e7f_jump:
		cmpb   $0x000002,0x000071(%edx)
		je     _057e92_jump
		mov    %edx,%eax
		call   _05a530_func
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_057e92_jump:
		mov    0x00004a(%edx),%cx
		movw   $0x000000,0x000042(%edx)
		cmp    $0x0001f4,%cx
		jl     _057ef2_jump
		mov    0x00004c(%edx),%eax
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _057eb6_jump
		neg    %eax

	_057eb6_jump:
		cmp    $0x000008,%ax
		jge    _057ed9_jump
		testb  $0x000008,0x000085(%edx)
		jne    _057ecf_jump
		decw   0x000040(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_057ecf_jump:
		incw   0x000040(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_057ed9_jump:
		testb  $0x000008,0x000085(%edx)
		jne    _057ee9_jump
		mov    $0x000004,%eax
		jmp    _057eee_jump

	_057ee9_jump:
		mov    $0xfffffffc,%eax

	_057eee_jump:
		mov    %ax,0x000040(%edx)

	_057ef2_jump:
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_057ef8_switch:
		.long   _058104_case
		.long   _05812f_case
		.long   _0581a4_case
		.long   _058104_case




_057f08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		mov    %ecx,%eax
		call   _057dfc_func
		test   %al,%al
		jne    _058312_jump
		cmpw   $0x0001f4,0x00004a(%ecx)
		jl     _057f53_jump
		mov    %ecx,%eax
		call   _057b38_func
		jmp    _058312_jump

	_057f53_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _057f63_jump
		cmpb   $0x000007,0x000070(%ecx)
		je     _058312_jump

	_057f63_jump:
		mov    0x000074(%ecx),%dh
		test   %dh,%dh
		jne    _057f73_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _057f7f_jump

	_057f73_jump:
		cmp    $0x000001,%dh
		jne    _057f7f_jump
		orb    $0x000008,0x000085(%ecx)

	_057f7f_jump:
		cmpb   $0x000000,0x00007f(%ecx)
		je     _05826e_jump
		xor    %eax,%eax
		mov    _0b9320_data,%bx
		mov    _0b9364_data,%al
		mov    0x000028(%ecx),%si
		add    %ebx,%eax
		sub    %esi,%eax
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		sub    %eax,%esi
		movswl %si,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _057fb3_jump
		neg    %eax

	_057fb3_jump:
		sar    %eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x00006d(%ecx),%al
		add    %ebx,%eax
		mov    _0b9324_data,%bx
		sub    %ebx,%eax
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    _0b9365_data,%al
		sub    %eax,%ebx
		incw   0x00004a(%ecx)
		mov    %ecx,%eax
		mov    %ebx,0x000008(%esp)
		call   _0579a0_func
		test   %al,%al
		je     _058018_jump
		cmpb   $0x000000,0x000071(%ecx)
		jne    _05800c_jump
		cmpb   $0x00000a,0x000070(%ecx)
		jne    _05800c_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01de98_func
		jmp    _0581e1_jump

	_05800c_jump:
		mov    %ecx,%eax
		call   _057934_func
		jmp    _0581e1_jump

	_058018_jump:
		cmpb   $0x000000,_0c1156_data
		jne    _05802e_jump
		cmpb   $0x000000,_0c1158_data
		je     _0580ea_jump

	_05802e_jump:
		mov    %esp,%edx
		mov    %ecx,%eax
		call   _057800_func
		testb  $0x000008,0x000085(%ecx)
		jne    _058064_jump
		movswl %si,%eax
		cmp    $0xfffffff6,%eax
		jge    _058064_jump
		movswl %di,%eax
		mov    -0x000002(%esp),%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _058085_jump
		mov    _0c1144_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jge    _058085_jump

	_058064_jump:
		testb  $0x000008,0x000085(%ecx)
		je     _0580ab_jump
		cmp    $0x00000a,%si
		jle    _0580ab_jump
		cmp    (%esp),%di
		jg     _058085_jump
		mov    _0c1144_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jg     _0580ab_jump

	_058085_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _058095_jump
		mov    %ecx,%eax
		call   _057934_func
		jmp    _0580c3_jump

	_058095_jump:
		testb  $0x000004,0x000007(%ebp)
		je     _0580c3_jump
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		jmp    _0580c3_jump

	_0580ab_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _0580c3_jump
		cmpb   $0x00000a,0x000070(%ecx)
		jne    _0580c3_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01de98_func

	_0580c3_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _0580d4_jump
		movw   $0x00fffd,0x000042(%ecx)

	_0580d4_jump:
		cmpw   $0x000003,0x000042(%ecx)
		jle    _0581e1_jump
		movw   $0x000003,0x000042(%ecx)
		jmp    _0581e1_jump

	_0580ea_jump:
		mov    _0b9369_data,%al
		cmp    $0x000003,%al
		ja     _0581e1_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_057ef8_switch(,%eax,4)

	_058104_case:
		mov    0x000071(%ecx),%dl
		cmp    $0x000001,%dl
		je     _058116_jump
		test   %dl,%dl
		jne    _058124_jump
		cmpb   $0x00000a,0x000070(%ecx)
		jne    _058124_jump

	_058116_jump:
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func

	_058124_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _0581e1_jump

	_05812f_case:
		cmpb   $0x000002,0x000071(%ecx)
		setne  %al
		and    $0x0000ff,%eax
		je     _0581e1_jump
		cmpb   $0x000000,0x000071(%ecx)
		jne    _05814d_jump
		cmpb   $0x000009,0x000070(%ecx)
		je     _058154_jump

	_05814d_jump:
		mov    $0x000001,%edx
		jmp    _058156_jump

	_058154_jump:
		xor    %edx,%edx

	_058156_jump:
		test   %edx,%edx
		je     _0581e1_jump
		cmpb   $0x000000,0x000071(%ecx)
		jne    _05816a_jump
		cmpb   $0x00000a,0x000070(%ecx)
		je     _058171_jump

	_05816a_jump:
		mov    $0x000001,%edx
		jmp    _058173_jump

	_058171_jump:
		xor    %edx,%edx

	_058173_jump:
		test   %edx,%edx
		je     _0581e1_jump
		cmpb   $0x000000,0x000071(%ecx)
		jne    _058187_jump
		cmpb   $0x00000b,0x000070(%ecx)
		je     _05818e_jump

	_058187_jump:
		mov    $0x000001,%eax
		jmp    _058190_jump

	_05818e_jump:
		xor    %eax,%eax

	_058190_jump:
		test   %eax,%eax
		je     _0581e1_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		jmp    _0581e1_jump

	_0581a4_case:
		mov    %ecx,%eax
		call   _057934_func
		test   %al,%al
		je     _0581e1_jump
		cmpw   $0x000000,0x000008(%esp)
		jle    _0581d4_jump
		cmpb   $0x000001,0x000075(%ecx)
		jne    _0581e1_jump
		decw   0x000042(%ecx)
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _0581e1_jump
		movw   $0x00fffd,0x000042(%ecx)
		jmp    _0581e1_jump

	_0581d4_jump:
		cmpw   $0x000001,0x000042(%ecx)
		jle    _0581e1_jump
		movw   $0x000001,0x000042(%ecx)

	_0581e1_jump:
		cmp    $0x000028,%di
		jge    _058224_jump
		cmpw   $0x00000a,0x000008(%esp)
		jge    _058224_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _058224_jump
		testb  $0x000002,0x000007(%ebp)
		je     _058224_jump
		cmpb   $0x000001,0x000071(%ecx)
		jne    _05820b_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea0_func

	_05820b_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01de98_func
		movw   $0x000001,0x000052(%ecx)
		movb   $0x000000,0x000083(%ecx)

	_058224_jump:
		cmpw   $0x000001,0x000052(%ecx)
		jne    _058244_jump
		mov    0x000083(%ecx),%dl
		inc    %dl
		mov    %dl,0x000083(%ecx)
		cmp    $0x000028,%dl
		jbe    _058244_jump
		movw   $0x000000,0x000052(%ecx)

	_058244_jump:
		mov    _0c3164_data,%eax
		mov    0x00002c(%ecx),%ebx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000078(%ecx),%dl
		sub    $0x000032,%eax
		add    %ebx,%edx
		cmp    %eax,%edx
		jge    _058262_jump
		addw   $0x000002,0x000042(%ecx)

	_058262_jump:
		movswl %si,%edx
		mov    %ecx,%eax
		call   _0579c4_func
		jmp    _0582d4_jump

	_05826e_jump:
		mov    0x000071(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000002,%dl
		je     _0582d4_jump
		cmp    $0x000001,%dl
		jne    _0582a0_jump
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _065368_func

	_0582a0_jump:
		mov    %ecx,%eax
		mov    0x000085(%ecx),%dl
		call   _01e4c4_func
		mov    0x000085(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _0582d4_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _065368_func

	_0582d4_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		testb  $0x000001,_0a525d_data(%eax)
		je     _0582e8_jump
		movw   $0x000000,0x000042(%ecx)

	_0582e8_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02346c_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _058305_jump
		movw   $0x000000,0x000040(%ecx)

	_058305_jump:
		cmpb   $0x000002,0x000071(%ecx)
		je     _058312_jump
		mov    %ecx,%eax
		call   _023aac_func

	_058312_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05831c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000001,%dx
		jne    _05835a_jump
		call   _01f090_func
		cmpb   $0x000000,0x00007a(%ecx)
		je     _058345_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _065368_func
		pop    %ecx
		pop    %ebx
		ret    

	_058345_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		andb   $0x0000ef,0x000085(%ecx)

	_05835a_jump:
		pop    %ecx
		pop    %ebx
		ret    



_058360_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _058392_jump
		cmpb   $0x000003,0x000070(%ecx)
		jne    _058392_jump
		movw   $0x000000,0x000040(%ecx)
		mov    0x000085(%ecx),%dh
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000085(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058392_jump:
		mov    %ecx,%eax
		call   _05854c_func
		cmpw   $0x000000,0x00004a(%ecx)
		je     _0583c2_jump
		mov    %ecx,%eax
		call   _057934_func
		test   %al,%al
		je     _0583c2_jump
		testb  $0x000008,0x000085(%ecx)
		je     _0583bc_jump
		movw   $0x000002,0x000040(%ecx)
		jmp    _0583c2_jump

	_0583bc_jump:
		movw   $0x00fffe,0x000040(%ecx)

	_0583c2_jump:
		cmpb   $0x000002,0x000071(%ecx)
		je     _0583fe_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x00006c(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _0583f0_jump
		movw   $0x0001f6,0x00004a(%ecx)
		movw   $0x000000,0x000040(%ecx)

	_0583f0_jump:
		mov    %ecx,%eax
		call   _05a530_func
		mov    %ecx,%eax
		call   _023aac_func

	_0583fe_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02346c_func
		mov    0x000071(%ecx),%bh
		movzbw %al,%si
		cmp    $0x000002,%bh
		jne    _058453_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000078(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x00006c(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _058480_jump
		cmpw   $0x000000,0x000042(%ecx)
		jge    _058480_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _058480_jump

	_058453_jump:
		xor    %eax,%eax
		mov    0x00006a(%ecx),%al
		testb  $0x000002,_0a525d_data(%eax)
		jne    _058480_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _065368_func

	_058480_jump:
		movswl %si,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _0584e0_jump
		cmpb   $0x000001,0x000071(%ecx)
		jne    _05849e_jump
		mov    %ecx,%eax
		call   _01e568_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05849e_jump:
		mov    0x000085(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		and    $0x000001,%al
		mov    0x000085(%ecx),%ah
		and    $0x0000f7,%ah
		mov    0x000040(%ecx),%si
		mov    %ah,0x000085(%ecx)
		shl    $0x000003,%al
		neg    %esi
		mov    %ah,%dl
		mov    %si,0x000040(%ecx)
		or     %al,%dl
		mov    %dl,0x000085(%ecx)

	_0584e0_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0584e8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000001,%dx
		jne    _058548_jump
		mov    _0c1144_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _058509_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _058512_jump

	_058509_jump:
		jge    _058512_jump
		orb    $0x000008,0x000085(%ecx)

	_058512_jump:
		mov    %ecx,%eax
		call   _01f090_func
		cmpb   $0x000000,0x00007a(%ecx)
		je     _058533_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _065368_func
		pop    %ecx
		pop    %ebx
		ret    

	_058533_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		andb   $0x0000ef,0x000085(%ecx)

	_058548_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05854c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0c1156_data
		jne    _05856b_jump
		cmpb   $0x000000,_0c1158_data
		je     _058662_jump

	_05856b_jump:
		lea    0x000008(%esp),%ecx
		mov    %esp,%ebx
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _07da20_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058589_jump
		neg    %eax

	_058589_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _058691_jump
		cmpw   $0x000023,(%esp)
		jge    _058691_jump
		cmpb   $0x000001,0x000071(%esi)
		jne    _058691_jump
		testb  $0x000008,0x000085(%esi)
		jne    _0585be_jump
		cmpw   $0x000000,0x000004(%esp)
		jl     _0585d7_jump

	_0585be_jump:
		testb  $0x000008,0x000085(%esi)
		je     _058691_jump
		cmpw   $0x000000,0x000004(%esp)
		jle    _058691_jump

	_0585d7_jump:
		mov    _0c1144_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _0585f0_jump
		mov    $0x000001,%eax
		jg     _0585f0_jump
		neg    %eax

	_0585f0_jump:
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		neg    %edx
		cmp    $0x000000,%eax
		je     _058608_jump
		mov    $0x000001,%eax
		jg     _058608_jump
		neg    %eax

	_058608_jump:
		cmp    %edx,%eax
		jne    _058691_jump
		movw   $0x000000,0x000040(%esi)
		mov    _0b9369_data,%al
		movw   $0x000000,0x000042(%esi)
		cmp    $0x000002,%al
		je     _05862d_jump
		movw   $0x0001f5,0x00004a(%esi)
		jmp    _058691_jump

	_05862d_jump:
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%esi),%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _058691_jump
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _05868a_jump

	_058662_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _058691_jump
		cmpb   $0x00000a,0x000070(%esi)
		jne    _058691_jump
		mov    $0x00000c,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x00004a(%esi)
		call   _01de98_func
		mov    $0x000008,%edx

	_05868a_jump:
		mov    %esi,%eax
		call   _065368_func

	_058691_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0586a0_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c312a_data,%ecx
		mov    _0c3126_data,%esi
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		sar    %ecx
		add    %esi,%ecx
		mov    %ecx,%esi
		mov    _0c313c_data,%ecx
		mov    _0c3128_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		sar    %ecx
		add    %edi,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    0x00006c(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		testb  $0x000008,0x000085(%eax)
		je     _0586f2_jump
		sub    $0x000030,%esi
		mov    %si,(%edx)
		jmp    _0586fa_jump

	_0586f2_jump:
		mov    %esi,%ecx
		add    $0x000030,%ecx
		mov    %cx,(%edx)

	_0586fa_jump:
		mov    (%esp),%eax
		sub    $0x000070,%eax
		mov    %ax,(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05870c_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    %ebx,%edi
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _0586a0_func
		mov    (%esp),%edx
		mov    0x000028(%ecx),%ax
		sub    %eax,%edx
		mov    %dx,(%esp)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05873d_jump
		neg    %eax

	_05873d_jump:
		mov    %ax,(%esp)
		mov    0x000004(%esp),%ebx
		mov    0x00002c(%ecx),%ax
		sub    %eax,%ebx
		mov    %bx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		test   %eax,%eax
		jge    _05875f_jump
		neg    %eax

	_05875f_jump:
		mov    -0x000002(%esp),%ebx
		mov    %si,%dx
		sar    $0x000010,%ebx
		mov    %ax,0x000004(%esp)
		cmp    %edx,%ebx
		jge    _058782_jump
		movswl %ax,%edx
		xor    %eax,%eax
		mov    %di,%ax
		cmp    %eax,%edx
		jge    _058782_jump
		mov    $0x000001,%al
		jmp    _058784_jump

	_058782_jump:
		xor    %al,%al

	_058784_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05878c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		cmpb   $0x000000,_0c33ba_data
		jne    _058850_jump
		mov    _0c311c_data,%ecx
		mov    _0c3146_data,%eax
		mov    _0c311a_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0c3160_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0587d4_jump
		cmp    %ecx,%eax
		jg     _0587d4_jump
		mov    $0x000001,%eax
		jmp    _0587d6_jump

	_0587d4_jump:
		xor    %eax,%eax

	_0587d6_jump:
		test   %eax,%eax
		je     _058819_jump
		mov    _0c311e_data,%ecx
		mov    _0c314c_data,%eax
		mov    _0c3118_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0c3164_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _05880f_jump
		cmp    %ecx,%eax
		jg     _05880f_jump
		mov    $0x000001,%eax
		jmp    _058811_jump

	_05880f_jump:
		xor    %eax,%eax

	_058811_jump:
		test   %eax,%eax
		je     _058819_jump
		mov    $0x000001,%al
		jmp    _05881b_jump

	_058819_jump:
		xor    %al,%al

	_05881b_jump:
		mov    %al,_0c33ba_data
		test   %al,%al
		je     _05888d_jump
		mov    _0c3162_data,%ax
		mov    %ax,_0c3124_data
		mov    %ax,_0c3116_data
		mov    _0c311a_data,%ax
		mov    %ax,_0c3118_data
		mov    _0c3120_data,%ax
		mov    %ax,_0c3122_data
		jmp    _05888d_jump

	_058850_jump:
		mov    _0c3118_data,%ax
		mov    _0c3166_data,%bx
		cmp    %bx,%ax
		jge    _058869_jump
		mov    %bx,_0c3118_data

	_058869_jump:
		mov    0x000083(%edx),%bl
		test   %bl,%bl
		je     _05887d_jump
		mov    %bl,%bh
		dec    %bh
		mov    %bh,0x000083(%edx)

	_05887d_jump:
		mov    0x00005e(%edx),%cx
		test   %cx,%cx
		je     _05888d_jump
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x00005e(%edx)

	_05888d_jump:
		cmpb   $0x000000,_0c33ba_data
		je     _0588a6_jump
		cmpb   $0x000000,0x000083(%edx)
		jne    _0588a6_jump
		mov    $0x000001,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0588a6_jump:
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0588b0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _0588c2_jump
		cmp    $0x000001,%dl
		je     _0588ed_jump
		jmp    _05891a_jump

	_0588c2_jump:
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    _0c3114_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000085(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		and    $0x0000f7,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000085(%ebx)
		jmp    _058983_jump

	_0588ed_jump:
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    _0c3122_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		sub    %edx,%eax
		mov    0x000085(%ebx),%dl
		mov    %eax,0x000028(%ebx)
		or     $0x000008,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000085(%ebx)
		jmp    _058983_jump

	_05891a_jump:
		mov    _0c3114_data,%esi
		mov    _0c3122_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x00006c(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %ax,%ax
		jle    _05896f_jump
		add    $0x000140,%edi
		sub    %ecx,%edi
		mov    0x000085(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000085(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05896f_jump:
		sub    %ecx,%esi
		mov    0x000085(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000085(%ebx)

	_058983_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_05898c_switch:
		.long   _058a7d_case
		.long   _058a77_case
		.long   _058fd4_case
		.long   _058a91_case
		.long   _058e74_case
		.long   _0591d4_case
		.long   _0591e2_case
		.long   _0592f5_case
		.long   _0590b1_case
		.long   _058fa1_case
		.long   _058bb9_case
		.long   _059118_case
		.long   _059088_case
		.long   _05905f_case
		.long   _058e4b_case
		.long   _058dc3_case
		.long   _059405_case
		.long   _059405_case
		.long   _059514_case
		.long   _0594be_case
		.long   _058c6a_case
		.long   _058f66_case
		.long   _058d27_case
		.long   _058bea_case
		.long   _058e9d_case




_0589f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0c3114_data,%edx
		mov    _0c3122_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		add    $0x000140,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edi
		cmpb   $0x000000,_0c33be_data
		je     _0595dc_jump

	_058a2c_jump:
		xor    %eax,%eax
		mov    _0c33c0_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0c33c1_data,%al
		mov    %al,%bl
		inc    %al
		mov    _0aa9a4_data(%edx),%edx
		mov    %al,_0c33c1_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0dda18_data
		xor    %ebx,%ebx
		sub    $0x000002,%al
		mov    %ebx,_0c1090_data
		cmp    $0x000018,%al
		ja     _0595cf_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05898c_switch(,%eax,4)

	_058a77_case:
		incb   _0c33c0_data

	_058a7d_case:
		xor    %dl,%dl
		mov    %dl,_0c33c1_data
		movb   $0x000001,_0c33be_data
		jmp    _0595cf_jump

	_058a91_case:
		mov    _0c33bb_data,%al
		mov    %al,_0c33c0_data
		mov    _0c33b8_data,%al
		mov    %al,_0c33c1_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c33c0_data,%al
		mov    _0c33c1_data,%dl
		mov    _0aa9a4_data(,%eax,4),%eax
		mov    (%edx,%eax,1),%al
		mov    %al,_0dda18_data
		cmp    $0x00001a,%al
		je     _058acb_jump
		cmp    $0x00000e,%al
		jne    _058b09_jump

	_058acb_jump:
		mov    _0dda18_data,%bl
		cmp    $0x00001a,%bl
		je     _058adf_jump
		cmp    $0x00000e,%bl
		jne    _058b9d_jump

	_058adf_jump:
		mov    _0c33c1_data,%cl
		xor    %eax,%eax
		xor    %edx,%edx
		inc    %cl
		mov    _0c33c0_data,%al
		mov    %cl,%dl
		mov    _0aa9a4_data(,%eax,4),%eax
		mov    (%edx,%eax,1),%al
		mov    %cl,_0c33c1_data
		mov    %al,_0dda18_data
		jmp    _058acb_jump

	_058b09_jump:
		cmp    $0x000014,%al
		jne    _058b1c_jump
		mov    %dl,%dh
		inc    %dh
		mov    %dh,_0c33c1_data
		jmp    _058b9d_jump

	_058b1c_jump:
		cmp    $0x000012,%al
		je     _058b2c_jump
		cmp    $0x000013,%al
		je     _058b2c_jump
		cmp    $0x000015,%al
		jne    _058b9d_jump

	_058b2c_jump:
		cmpb   $0x000015,_0dda18_data
		jne    _058b3b_jump
		incb   _0c33c1_data

	_058b3b_jump:
		mov    _0c33c1_data,%dl
		xor    %eax,%eax
		inc    %dl
		mov    _0c33c0_data,%al
		mov    %dl,_0c33c1_data

	_058b50_jump:
		xor    %edx,%edx
		mov    _0aa9a4_data(,%eax,4),%eax
		mov    _0c33c1_data,%dl
		mov    (%edx,%eax,1),%al
		mov    %al,_0dda18_data
		mov    _0dda18_data,%ch
		cmp    $0x000015,%ch
		je     _058b77_jump
		cmp    $0x000014,%ch
		jne    _058b9d_jump

	_058b77_jump:
		cmpb   $0x000015,_0dda18_data
		jne    _058b86_jump
		incb   _0c33c1_data

	_058b86_jump:
		mov    _0c33c1_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    _0c33c0_data,%al
		mov    %dh,_0c33c1_data
		jmp    _058b50_jump

	_058b9d_jump:
		mov    $0x000001,%al
		mov    $0x0000ff,%ch
		mov    %al,_0c33be_data
		xor    %ah,%ah
		mov    %ch,_0c33bb_data
		mov    %ah,_0dda1a_data
		jmp    _0595cf_jump

	_058bb9_case:
		mov    _0c33c1_data,%al
		xor    %cl,%cl
		and    $0x0000ff,%eax
		mov    %cl,_0c33c1_data
		mov    (%edx,%eax,1),%al
		cmp    _0c33c0_data,%al
		jne    _058bd8_jump
		inc    %al

	_058bd8_jump:
		mov    %al,_0c33c0_data
		xor    %ah,%ah
		mov    %ah,_0c33be_data
		jmp    _0595cf_jump

	_058bea_case:
		cmpb   $0x000005,0x00007b(%esi)
		jne    _058c12_jump
		call   _07caac_func
		mov    _0c30da_data,%bl
		mov    $0x000001,%ecx
		or     $0x000001,%bl
		mov    %cx,_0c3146_data
		mov    %bl,_0c30da_data
		jmp    _058c5d_jump

	_058c12_jump:
		mov    $0xffff8300,%ebx
		mov    _0c30da_data,%dl
		mov    $_0b92f8_data,%eax
		or     $0x000002,%dl
		mov    %bx,_0c3132_data
		mov    $0x000007,%ebx
		mov    %dl,_0c30da_data
		mov    $0x000003,%edx
		call   _01dea8_func
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		call   _01dd88_func
		mov    $0x000001,%dh
		inc    %eax
		mov    %dh,_0c33c7_data
		mov    %ax,0x000048(%esi)

	_058c5d_jump:
		xor    %bh,%bh
		mov    %bh,_0c33be_data
		jmp    _0595cf_jump

	_058c6a_case:
		cmpb   $0x00000c,0x00007b(%esi)
		jne    _058c83_jump
		mov    $0x000013,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		jmp    _058cff_jump

	_058c83_jump:
		mov    _0b9410_data,%eax
		mov    _0b9414_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jle    _058cff_jump

	_058c96_jump:
		cmpw   $0x0000ab,0x000064(%eax)
		jne    _058cf4_jump
		mov    (%eax),%edx
		mov    %edx,(%esi)
		mov    0x000004(%eax),%edx
		mov    %edx,0x000004(%esi)
		mov    0x000008(%eax),%edx
		mov    %edx,0x000008(%esi)
		mov    0x00000c(%eax),%edx
		mov    %edx,0x00000c(%esi)
		mov    0x000044(%eax),%dx
		mov    %dx,0x000044(%esi)
		mov    0x000071(%eax),%dl
		mov    %dl,0x000071(%esi)
		mov    0x000070(%eax),%dl
		mov    0x00006d(%esi),%bl
		mov    %dl,0x000070(%esi)
		add    $0x000004,%bl
		mov    0x00006e(%eax),%al
		movb   $0x000000,0x00006f(%esi)
		mov    %bl,0x00006d(%esi)
		mov    0x000085(%esi),%bh
		mov    %al,0x00006e(%esi)
		and    $0x0000f7,%bh
		xor    %ecx,%ecx
		mov    %bh,0x000085(%esi)
		mov    %ecx,_0b931c_data
		jmp    _058cff_jump

	_058cf4_jump:
		inc    %ebx
		add    $0x000088,%eax
		cmp    %dx,%bx
		jl     _058c96_jump

	_058cff_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _065368_func
		mov    0x000048(%esi),%ax
		xor    %cl,%cl
		add    $0x000080,%eax
		mov    %cl,_0c33be_data
		mov    %ax,0x000048(%esi)
		jmp    _0595cf_jump

	_058d27_case:
		cmpb   $0x00000c,0x00007b(%esi)
		jne    _058d31_jump
		subb   $0x000010,0x00006d(%esi)

	_058d31_jump:
		mov    0x000085(%esi),%al
		and    $0x0000f7,%al
		mov    _0c3116_data,%dx
		mov    %al,0x000085(%esi)
		xor    %eax,%eax
		add    $0x0000a0,%edx
		mov    0x00006c(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0c3114_data
		mov    _0c3112_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		xor    %eax,%eax
		mov    _0c30dc_data,%dx
		mov    0x00006d(%esi),%al
		sub    %eax,%edx
		mov    $0x000001,%ebx
		mov    %dx,_0c3110_data
		mov    %esi,%eax
		mov    $0x000002,%edx
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _065368_func
		mov    $0x0000ff,%ah
		xor    %dl,%dl
		movb   $0x000000,0x000076(%esi)
		mov    %dl,_0c33b7_data
		mov    $0x000001,%dh
		mov    %ah,_0c33b6_data
		mov    %dh,_0c33bc_data
		mov    %dl,_0c33be_data
		jmp    _0595cf_jump

	_058dc3_case:
		mov    _0c3116_data,%ax
		xor    %edx,%edx
		add    $0x0000a0,%eax
		mov    0x00006c(%esi),%dl
		sub    %edx,%eax
		mov    %ax,_0c3114_data
		mov    _0c30dc_data,%ax
		mov    _0c0ebc_data,%dx
		sub    $0x0000e6,%eax
		add    %edx,%eax
		mov    $0x000006,%ebx
		mov    %ax,_0c3110_data
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x0000ff,%ch
		call   _065368_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0c33b6_data
		mov    %ch,_0c33b7_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0c33bc_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018c00_func
		xor    %dl,%dl
		mov    %dl,_0c33be_data
		jmp    _0595cf_jump

	_058e4b_case:
		mov    $0x000005,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _065368_func
		xor    %dh,%dh
		mov    %dh,_0c33be_data
		jmp    _0595cf_jump

	_058e74_case:
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _065368_func
		xor    %ah,%ah
		mov    %ah,_0c33be_data
		jmp    _0595cf_jump

	_058e9d_case:
		cmpb   $0x000000,0x000071(%esi)
		jne    _058ed5_jump
		cmpb   $0x000014,0x000070(%esi)
		jne    _058ed5_jump
		mov    %esi,%eax
		call   _01e4c4_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _065368_func
		xor    %al,%al
		mov    %al,_0c33be_data
		jmp    _0595cf_jump

	_058ed5_jump:
		mov    0x000085(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    %esi,%eax
		call   _01e4c4_func
		mov    0x000085(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _0595cf_jump
		mov    %dl,%al
		mov    0x000085(%esi),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		xor    %edx,%edx
		shl    $0x000003,%al
		mov    %bh,%cl
		mov    %bh,0x000085(%esi)
		or     %al,%cl
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    %cl,0x000085(%esi)
		call   _01dea8_func
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01dd88_func
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _065368_func
		mov    0x000048(%esi),%dx
		add    %ecx,%edx
		xor    %ch,%ch
		mov    %dx,0x000048(%esi)
		jmp    _0595c9_jump

	_058f66_case:
		mov    _0c3116_data,%dx
		xor    %eax,%eax
		add    $0x0000a0,%edx
		mov    0x00006c(%esi),%al
		sub    %eax,%edx
		sub    $0x000030,%edx
		mov    _0b9320_data,%bh
		mov    %dx,_0c3132_data
		test   $0x000001,%bh
		je     _058f98_jump
		orb    $0x000001,_0c3132_data
		jmp    _058fd4_case

	_058f98_jump:
		andb   $0x0000fe,_0c3132_data
		jmp    _058fd4_case

	_058fa1_case:
		xor    %dl,%dl
		mov    %dl,_0c33bd_data
		mov    _0dda1a_data,%dh
		movb   $0x000003,0x000082(%esi)
		test   %dh,%dh
		jne    _058fc6_jump
		movb   $0x000001,_0c33be_data
		jmp    _0595cf_jump

	_058fc6_jump:
		mov    $0x000004,%bh
		mov    %dl,_0dda1a_data
		mov    %bh,_0dda18_data

	_058fd4_case:
		mov    0x000028(%esi),%ax
		mov    _0c3118_data,%dx
		mov    %ax,_0c3114_data
		add    _0c0ebc_data,%dx
		sub    $0x000080,%edx
		mov    _0dda18_data,%bl
		mov    %dx,_0c3110_data
		cmp    $0x000004,%bl
		jne    _05900b_jump
		mov    $0x000008,%ebx
		jmp    _059010_jump

	_05900b_jump:
		mov    $0x000006,%ebx

	_059010_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    $0x0000ff,%bh
		mov    $0x000001,%ch
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %bh,_0c33b6_data
		mov    %ch,_0c33bc_data
		mov    $0x0000ff,%ecx
		mov    %bh,_0c33b7_data
		mov    %ecx,%ebx
		call   _018c00_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _065368_func
		xor    %al,%al
		mov    %al,_0c33be_data
		jmp    _0595cf_jump

	_05905f_case:
		mov    $0x000014,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _065368_func
		xor    %bl,%bl
		mov    %bl,_0c33be_data
		jmp    _0595cf_jump

	_059088_case:
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _065368_func
		xor    %bh,%bh
		mov    %bh,_0c33be_data
		jmp    _0595cf_jump

	_0590b1_case:
		mov    %esi,%eax
		call   _01e4c4_func
		mov    0x000085(%esi),%ch
		xor    %edx,%edx
		test   $0x000008,%ch
		sete   %dl
		mov    %esi,%eax
		call   _0588b0_func
		mov    _0c3116_data,%eax
		sar    $0x000010,%eax
		sub    $0x000080,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000085(%esi)
		je     _059100_jump
		mov    0x000028(%esi),%ecx
		mov    0x000085(%esi),%dl
		sub    $0x000030,%ecx
		and    $0x0000f7,%dl
		mov    %ecx,0x000028(%esi)
		mov    %dl,0x000085(%esi)
		jmp    _059118_case

	_059100_jump:
		mov    0x000028(%esi),%ebx
		mov    0x000085(%esi),%ah
		add    $0x000030,%ebx
		or     $0x000008,%ah
		mov    %ebx,0x000028(%esi)
		mov    %ah,0x000085(%esi)

	_059118_case:
		mov    0x000085(%esi),%al
		mov    $_0c3110_data,%ebx
		shl    $0x000004,%al
		xor    %dh,%dh
		shr    $0x000007,%al
		mov    %dh,_0dda19_data
		mov    %al,(%esp)
		mov    %esi,%eax
		mov    $_0c3114_data,%edx
		call   _01e4c4_func
		mov    %esi,%eax
		call   _0586a0_func
		mov    $0x000008,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000002,%cl
		call   _01dea8_func
		mov    $0x000010,%bl
		mov    $0x000001,%edx
		mov    %cl,_0c33bc_data
		mov    %esi,%eax
		mov    $0x0000ff,%ecx
		mov    %bl,_0c33b6_data
		mov    %bl,_0c33b7_data
		mov    %ecx,%ebx
		call   _018c00_func
		cmpb   $0x00000d,_0dda18_data
		jne    _05918f_jump
		movw   $0x00ffc0,0x000042(%esi)
		jmp    _059195_jump

	_05918f_jump:
		movw   $0x000000,0x000040(%esi)

	_059195_jump:
		mov    (%esp),%al
		and    $0x000001,%al
		mov    0x000085(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000085(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0x000001,%ebx
		or     %al,%dl
		mov    %esi,%eax
		mov    %dl,0x000085(%esi)
		mov    $0x000002,%edx
		call   _065368_func
		xor    %dh,%dh
		mov    %dh,_0c33be_data
		jmp    _0595cf_jump

	_0591d4_case:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func

	_0591e2_case:
		cmpb   $0x000008,_0dda18_data
		jne    _0591f9_jump
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func

	_0591f9_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _0588b0_func
		test   %ax,%ax
		jle    _059237_jump
		mov    _0c3116_data,%dx
		mov    0x000085(%esi),%bl
		xor    %eax,%eax
		and    $0x0000f7,%bl
		mov    0x00006c(%esi),%al
		mov    %bl,0x000085(%esi)
		sub    %eax,%edx
		mov    0x000028(%esi),%ebx
		mov    %edx,%eax
		add    $0x000030,%ebx
		sub    $0x000030,%eax
		mov    %ebx,0x000028(%esi)
		jmp    _05925e_jump

	_059237_jump:
		orb    $0x000008,0x000085(%esi)
		mov    0x000028(%esi),%edx
		sub    $0x000030,%edx
		mov    _0c3124_data,%ax
		mov    %edx,0x000028(%esi)
		xor    %edx,%edx
		add    $0x000140,%eax
		mov    0x00006c(%esi),%dl
		sub    %edx,%eax
		add    $0x000030,%eax

	_05925e_jump:
		mov    %ax,_0c3114_data
		mov    _0c30da_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000e6,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0c3110_data
		xor    %eax,%eax
		mov    _0c33c0_data,%al
		mov    $0x000001,%ch
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0c33c1_data,%al
		mov    %ch,_0c33bc_data
		mov    %al,%bl
		inc    %al
		mov    _0aa9a4_data(%edx),%edx
		mov    %al,_0c33c1_data
		xor    %eax,%eax
		mov    $0x0000ff,%ecx
		mov    (%edx,%ebx,1),%al
		mov    $0x0000ff,%bh
		shl    $0x00000a,%eax
		mov    $0x000001,%edx
		mov    %eax,_0c1090_data
		mov    %bh,_0c33b6_data
		mov    %bh,_0c33b7_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018c00_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _065368_func
		xor    %al,%al
		mov    %al,_0c33be_data
		jmp    _0595cf_jump

	_0592f5_case:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _0588b0_func
		test   %ax,%ax
		jle    _05933c_jump
		addl   $0x000050,0x000028(%esi)
		xor    %eax,%eax
		mov    _0c3116_data,%dx
		mov    0x00006c(%esi),%al
		mov    0x000085(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,0x000085(%esi)
		sub    $0x000050,%eax
		jmp    _05936b_jump

	_05933c_jump:
		mov    _0c3124_data,%ax
		mov    0x000085(%esi),%bl
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		or     $0x000008,%bl
		sub    $0x000060,%ebp
		add    $0x000140,%eax
		mov    0x00006c(%esi),%dl
		mov    %bl,0x000085(%esi)
		sub    %edx,%eax
		mov    %ebp,0x000028(%esi)
		add    $0x000040,%eax

	_05936b_jump:
		mov    %ax,_0c3114_data
		mov    _0c30da_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000b4,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0c3110_data
		xor    %eax,%eax
		mov    _0c33c0_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0c33c1_data,%al
		mov    %al,%bl
		inc    %al
		mov    _0aa9a4_data(%edx),%edx
		mov    %al,_0c33c1_data
		mov    (%edx,%ebx,1),%al
		mov    $0x0000ff,%cl
		and    $0x0000ff,%eax
		mov    $0x000001,%edx
		shl    $0x00000a,%eax
		mov    %cl,_0c33b6_data
		mov    %cl,_0c33b7_data
		mov    $0x0000ff,%ecx
		mov    %eax,_0c1090_data
		mov    $0x000001,%al
		mov    %ecx,%ebx
		mov    %al,_0c33bc_data
		mov    %esi,%eax
		call   _018c00_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _065368_func
		xor    %ah,%ah
		mov    %ah,_0c33be_data
		jmp    _0595cf_jump

	_059405_case:
		mov    _0c30da_data,%eax
		sar    $0x000010,%eax
		sub    $0x000048,%eax
		mov    %eax,0x00002c(%esi)
		cmpb   $0x000013,_0dda18_data
		jne    _059420_jump
		subl   $0x000030,0x00002c(%esi)

	_059420_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _0588b0_func
		test   %ax,%ax
		jle    _059445_jump
		andb   $0x0000f7,0x000085(%esi)
		addl   $0x000044,0x000028(%esi)
		mov    0x000028(%esi),%ax
		sub    $0x000018,%eax
		jmp    _059459_jump

	_059445_jump:
		orb    $0x000008,0x000085(%esi)
		subl   $0x00004c,0x000028(%esi)
		mov    0x000028(%esi),%ax
		add    $0x000010,%eax

	_059459_jump:
		mov    %ax,_0c3114_data
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x0000ff,%ecx
		call   _01dea8_func
		mov    $0x0000ff,%dh
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%bh
		mov    %ax,_0c3110_data
		mov    %dh,_0c33b6_data
		mov    %dh,_0c33b7_data
		mov    %bh,_0c33bc_data
		mov    $0x000001,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018c00_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %cl,%cl
		call   _065368_func
		mov    %cl,_0c33be_data
		jmp    _0595cf_jump

	_0594be_case:
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _065368_func
		mov    _0c33c1_data,%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0c33c0_data,%dl
		mov    %al,%bl
		inc    %al
		mov    _0aa9a4_data(,%edx,4),%edx
		mov    %al,_0c33c1_data
		mov    (%edx,%ebx,1),%al
		mov    0x000048(%esi),%dx
		xor    %ah,%ah
		imul   %eax,%edx
		mov    %ah,_0c33be_data
		mov    %dx,0x000048(%esi)
		jmp    _0595cf_jump

	_059514_case:
		xor    %edx,%edx
		mov    0x000028(%esi),%ecx
		mov    0x00006c(%esi),%dl
		movswl %di,%eax
		add    %ecx,%edx
		cmp    %eax,%edx
		jle    _059549_jump
		mov    0x000085(%esi),%dh
		xor    %eax,%eax
		and    $0x0000f7,%dh
		mov    0x00006c(%esi),%al
		mov    %dh,0x000085(%esi)
		mov    _0c3116_data,%dx
		sub    %eax,%edx
		mov    %edx,%eax
		sub    $0x000038,%eax
		jmp    _05956f_jump

	_059549_jump:
		mov    0x000085(%esi),%dl
		or     $0x000008,%dl
		mov    _0c3124_data,%ax
		mov    %dl,0x000085(%esi)
		xor    %edx,%edx
		add    $0x000140,%eax
		mov    0x00006c(%esi),%dl
		sub    %edx,%eax
		add    $0x000030,%eax

	_05956f_jump:
		mov    %ax,_0c3114_data
		mov    $0x000004,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0c3110_data
		mov    %esi,%eax
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x000001,%cl
		call   _065368_func
		mov    $0x0000ff,%bl
		mov    $0x000001,%edx
		mov    %cl,_0c33bc_data
		mov    %esi,%eax
		mov    $0x0000ff,%ecx
		mov    %bl,_0c33b6_data
		mov    %bl,_0c33b7_data
		mov    %ecx,%ebx
		call   _018c00_func
		xor    %ch,%ch

	_0595c9_jump:
		mov    %ch,_0c33be_data

	_0595cf_jump:
		cmpb   $0x000000,_0c33be_data
		jne    _058a2c_jump

	_0595dc_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0595e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		mov    0x000070(%eax),%al
		xor    %ebp,%ebp
		cmp    $0x00000b,%al
		jb     _05961c_jump
		jbe    _059610_jump
		cmp    $0x00000c,%al
		jne    _05961c_jump
		mov    $0x000003,%ah
		mov    $0x000033,%dl
		mov    %ah,0x000014(%esp)
		mov    %dl,0x000010(%esp)
		jmp    _05961c_jump

	_059610_jump:
		mov    $0x000003,%dh
		mov    $0x000034,%bl
		mov    %dh,0x000014(%esp)
		mov    %bl,0x000010(%esp)

	_05961c_jump:
		mov    _0b9410_data,%esi
		mov    _0b9414_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jle    _05978b_jump

	_059634_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000010(%esp),%dl
		mov    0x000064(%esi),%bx
		cmp    %edx,%ebx
		jne    _05977b_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _05977b_jump
		lea    0x000004(%esp),%edx
		lea    0x00000c(%esp),%ecx
		mov    0x000085(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000085(%esi)
		call   _020064_func
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		xor    %edx,%edx
		mov    %edi,%eax
		mov    0x00001c(%esp),%dl
		call   _01e1b8_func
		mov    -0x000002(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x00006c(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		xor    %edx,%edx
		mov    0x00000a(%esp),%ebx
		mov    0x000078(%esi),%dl
		mov    0x000028(%esi),%ax
		sar    $0x000010,%ebx
		mov    %ax,0x00003c(%esi)
		sub    %edx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    0x000010(%esp),%cl
		mov    %ax,0x00003e(%esi)
		cmp    $0x000033,%cl
		jb     _0596fb_jump
		jbe    _0596df_jump
		cmp    $0x000034,%cl
		je     _0596ed_jump
		jmp    _0596fb_jump

	_0596df_jump:
		movw   $0x000001,0x000050(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _0596fb_jump

	_0596ed_jump:
		movw   $0x000003,0x000050(%esi)
		mov    0x000040(%edi),%ax
		mov    %ax,0x000040(%esi)

	_0596fb_jump:
		xor    %edx,%edx
		mov    0x000071(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movw   $0x000000,0x000042(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x000070(%esi),%dl
		mov    0x000002(%ebx,%edx,8),%al
		mov    %al,0x00006e(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00006f(%esi)
		call   _01e53c_func
		movb   $0x000000,0x000075(%esi)
		mov    0x000085(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000085(%esi)
		mov    0x000085(%esi),%dl
		mov    0x000085(%edi),%al
		and    $0x0000f7,%dl
		and    $0x000008,%al
		mov    %dl,0x000085(%esi)
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,%bl
		mov    %dh,0x000085(%esi)
		and    $0x0000bf,%bl
		mov    %esi,%ebp
		mov    %bl,0x000085(%esi)
		mov    %ebp,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05977b_jump:
		inc    %eax
		add    $0x000088,%esi
		cmp    %cx,%ax
		jl     _059634_jump

	_05978b_jump:
		mov    %ebp,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059798_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %eax,%esi
		movzbw 0x00006c(%eax),%di
		add    0x000028(%eax),%di
		mov    0x000070(%eax),%al
		mov    %di,0x000008(%esp)
		cmp    $0x00000b,%al
		jb     _059811_jump
		jbe    _0597f2_jump
		cmp    $0x00000c,%al
		jne    _059811_jump
		mov    0x00003e(%esi),%eax
		mov    _0b9336_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		add    %eax,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %di,%edi
		sub    %eax,%edi
		jmp    _059811_jump

	_0597f2_jump:
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %eax,%ebx

	_059811_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _05981a_jump
		neg    %eax

	_05981a_jump:
		mov    %ax,0x00000c(%esp)
		test   %bx,%bx
		jge    _059826_jump
		add    %ebx,%edi

	_059826_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x00006d(%esi),%al
		mov    _0c3118_data,%bx
		add    %eax,%edx
		mov    _0c3122_data,%ax
		sub    %ebx,%eax
		add    $0x0000c8,%eax
		mov    %dx,0x000014(%esp)
		mov    %ax,(%esp)
		mov    _0c312a_data,%eax
		mov    _0c3126_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		mov    _0c313c_data,%eax
		mov    _0c3128_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    _0c30ce_data,%cx
		mov    %ax,0x000010(%esp)
		test   %cx,%cx
		je     _0598b3_jump
		push   $0x000000
		mov    0x000002(%esp),%ecx
		mov    0x00000e(%esp),%ebx
		mov    0x000016(%esp),%edx
		movswl %di,%eax
		push   $0x000000
		sar    $0x000010,%ecx
		push   $0x000000
		sar    $0x000010,%ebx
		push   $0x000000
		sar    $0x000010,%edx
		call   _027cc0_func

	_0598b3_jump:
		mov    0x000006(%esp),%eax
		mov    _0c3122_data,%ecx
		mov    _0c3114_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    $0x000130,%ecx
		cmp    %ebx,%eax
		jl     _0598e1_jump
		cmp    %ecx,%eax
		jg     _0598e1_jump
		mov    $0x000001,%eax
		jmp    _0598e3_jump

	_0598e1_jump:
		xor    %eax,%eax

	_0598e3_jump:
		test   %eax,%eax
		je     _059948_jump
		cmp    0x000004(%esp),%di
		jg     _059948_jump
		mov    0x000010(%esp),%eax
		cmp    0x000014(%esp),%ax
		jl     _059948_jump
		mov    0x00000a(%esp),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _059948_jump
		mov    0x000012(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _059948_jump
		mov    %esi,%eax
		mov    $0x000010,%ebx
		call   _0595e8_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01dea8_func
		subw   $0x000040,_0c3110_data

	_059948_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059954_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		cmpw   $0x000000,_0c30ce_data
		je     _0599d3_jump
		mov    _0c3110_data,%ax
		sub    _0c3166_data,%ax
		movswl %ax,%edx
		mov    _0c3114_data,%ax
		mov    _0c3162_data,%cx
		add    $0x000008,%eax
		sub    %ecx,%eax
		mov    $0x00000a,%ebx
		sub    $0x000005,%eax
		mov    $0x000028,%ecx
		cwtl   
		call   _03e160_func
		mov    _0c3110_data,%ax
		sub    _0c3166_data,%ax
		sub    $0x000005,%eax
		movswl %ax,%edx
		mov    _0c3114_data,%ax
		mov    _0c3162_data,%bx
		add    $0x000008,%eax
		mov    $0x000028,%ecx
		sub    %ebx,%eax
		mov    $0x00000a,%ebx
		cwtl   
		call   _03e1b8_func

	_0599d3_jump:
		mov    %esi,%eax
		call   _05878c_func
		test   %al,%al
		je     _059bbd_jump
		mov    _0c309c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _059bbd_jump
		mov    0x00005e(%esi),%cx
		test   %cx,%cx
		je     _059a03_jump
		mov    %ecx,%edi
		dec    %edi
		mov    %di,0x00005e(%esi)

	_059a03_jump:
		mov    _0c33bd_data,%ah
		test   %ah,%ah
		je     _059a17_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0c33bd_data

	_059a17_jump:
		mov    0x000085(%esi),%dh
		test   $0x000001,%dh
		jne    _059bb6_jump
		mov    0x000074(%esi),%al
		cmp    $0x000002,%al
		jne    _059a7e_jump
		cmpw   $0x00000e,_0aa9cc_data
		jne    _059a5c_jump
		cmpb   $0x00000f,0x00006e(%esi)
		jne    _059a5c_jump
		lea    0x000085(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		mov    %dh,(%eax)

	_059a5c_jump:
		mov    $0xffff8300,%eax
		mov    %ax,_0c3114_data
		mov    %ax,_0c3110_data
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _059baf_jump

	_059a7e_jump:
		mov    _0dda18_data,%al
		cmp    $0x00000a,%al
		jb     _059a92_jump
		jbe    _059a9b_jump
		cmp    $0x00000d,%al
		je     _059a9b_jump
		jmp    _059b76_jump

	_059a92_jump:
		cmp    $0x000004,%al
		je     _059acc_jump
		jmp    _059b76_jump

	_059a9b_jump:
		mov    $_0c3110_data,%ebx
		mov    %esi,%eax
		mov    $_0c3114_data,%edx
		call   _01e4c4_func
		mov    %esi,%eax
		call   _0586a0_func
		mov    $0x000018,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05870c_func
		test   %al,%al
		je     _059acc_jump
		movb   $0x000001,_0c33be_data

	_059acc_jump:
		cmpb   $0x000002,0x00007a(%esi)
		jae    _059b76_jump
		cmpb   $0x000000,_0c1156_data
		je     _059b76_jump
		cmpb   $0x000000,_0dda19_data
		jne    _059b76_jump
		cmpb   $0x000000,_0bf2fd_data
		jne    _059b76_jump
		mov    $0x000001,%ah
		xor    %edx,%edx
		mov    %ah,_0dda19_data
		xor    %eax,%eax
		mov    0x000078(%esi),%dl
		mov    0x00006d(%esi),%al
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00002c(%esi),%ecx
		mov    _0c1144_data,%ebx
		add    %eax,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000078(%ebx),%dl
		mov    0x00006d(%ebx),%al
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		add    0x00002c(%ebx),%eax
		cmp    %eax,%ecx
		jle    _059b48_jump
		addw   $0x000050,0x000042(%esi)
		jmp    _059b4d_jump

	_059b48_jump:
		subw   $0x000050,0x000042(%esi)

	_059b4d_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x00006c(%esi),%al
		add    %eax,%edx
		mov    _0c1144_data,%eax
		xor    %ebx,%ebx
		mov    0x00006c(%eax),%bl
		mov    0x000028(%eax),%eax
		add    %ebx,%eax
		cmp    %eax,%edx
		jle    _059b71_jump
		addw   $0x000050,0x000040(%esi)
		jmp    _059b76_jump

	_059b71_jump:
		subw   $0x000050,0x000040(%esi)

	_059b76_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c33b7_data,%cl
		mov    _0c33b6_data,%bl
		mov    _0c33bc_data,%dl
		call   _018c00_func
		cmpb   $0x000000,0x000071(%esi)
		jne    _059baf_jump
		mov    0x000070(%esi),%dh
		cmp    $0x00000c,%dh
		je     _059ba8_jump
		cmp    $0x00000b,%dh
		jne    _059baf_jump

	_059ba8_jump:
		mov    %esi,%eax
		call   _059798_func

	_059baf_jump:
		mov    %esi,%eax
		call   _018dd4_func

	_059bb6_jump:
		mov    %esi,%eax
		call   _0589f0_func

	_059bbd_jump:
		xor    %eax,%eax
		mov    0x000085(%esi),%bl
		mov    0x00006e(%esi),%al
		and    $0x0000fe,%bl
		mov    %ax,_0aa9cc_data
		mov    %bl,0x000085(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_059be0_switch:
		.long   _059c57_case
		.long   _059c5d_case
		.long   _059c82_case
		.long   _059c6a_case
		.long   _059c82_case
		.long   _059c82_case
		.long   _059c82_case
		.long   _059c82_case
		.long   _059c82_case
		.long   _059c82_case
		.long   _059c73_case




_059c0c_func:
		push   %ebx
		push   %edx
		mov    _0c33c0_data,%bl
		cmp    $0x000008,%bl
		je     _059c27_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %bl,%al
		mov    _0c33c1_data,%dl
		jmp    _059c36_jump

	_059c27_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c33bb_data,%al
		mov    _0c33b8_data,%dl

	_059c36_jump:
		mov    _0aa9a4_data(,%eax,4),%eax
		add    %edx,%eax
		mov    (%eax),%dl
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _059c82_case
		and    $0x0000ff,%edx
		jmp    *%cs:_059be0_switch(,%edx,4)

	_059c57_case:
		xor    %eax,%eax
		mov    %bl,%al
		jmp    _059c7b_jump

	_059c5d_case:
		xor    %eax,%eax
		mov    %bl,%al
		mov    _0aa9a8_data(,%eax,4),%eax
		jmp    _059c82_case

	_059c6a_case:
		xor    %eax,%eax
		mov    _0c33bb_data,%al
		jmp    _059c7b_jump

	_059c73_case:
		mov    0x000001(%eax),%al
		and    $0x0000ff,%eax

	_059c7b_jump:
		mov    _0aa9a4_data(,%eax,4),%eax

	_059c82_case:
		mov    (%eax),%al
		mov    %bl,_0c33c0_data
		pop    %edx
		pop    %ebx
		ret    



_059c90_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000008,_0c33c0_data
		jne    _059caa_jump
		mov    $_0c33bb_data,%eax
		mov    $_0c33b8_data,%ebx
		jmp    _059cb4_jump

	_059caa_jump:
		mov    $_0c33c0_data,%eax
		mov    $_0c33c1_data,%ebx

	_059cb4_jump:
		mov    (%eax),%cl
		cmpb   $0x00000c,0x00007b(%edx)
		jne    _059cf8_jump
		mov    0x00007a(%edx),%ch
		cmp    $0x000009,%ch
		jbe    _059cc9_jump
		movb   $0x000003,(%eax)
		jmp    _059cf1_jump

	_059cc9_jump:
		cmp    $0x000007,%ch
		jbe    _059cd3_jump
		movb   $0x000005,(%eax)
		jmp    _059cf1_jump

	_059cd3_jump:
		cmp    $0x000004,%ch
		jbe    _059cdd_jump
		movb   $0x000006,(%eax)
		jmp    _059cf1_jump

	_059cdd_jump:
		test   %ch,%ch
		jbe    _059ce6_jump
		movb   $0x000007,(%eax)
		jmp    _059cf1_jump

	_059ce6_jump:
		xor    %dl,%dl
		movb   $0x000009,(%eax)
		mov    %dl,_0c33bd_data

	_059cf1_jump:
		cmp    (%eax),%cl
		je     _059cf8_jump
		movb   $0x000000,(%ebx)

	_059cf8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059cfc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmpb   $0x000000,_0c33bd_data
		jne    _059de2_jump
		mov    $0x000001,%dl
		mov    %ebx,%eax
		mov    %dl,_0c1157_data
		call   _01f090_func
		mov    $0x0000ff,%dh
		mov    0x000085(%ebx),%cl
		mov    %ebx,%eax
		or     %dl,%cl
		mov    %dh,_0c33bd_data
		mov    %cl,0x000085(%ebx)
		call   _059c90_func
		call   _059c0c_func
		cmp    $0x000007,%al
		jb     _059d55_jump
		cmp    $0x00000a,%al
		jbe    _059d4e_jump
		cmp    $0x000012,%al
		jb     _059d55_jump
		cmp    $0x000015,%al
		ja     _059d55_jump

	_059d4e_jump:
		movb   $0x000001,_0dda1a_data

	_059d55_jump:
		mov    0x00007a(%ebx),%al
		test   %al,%al
		je     _059db7_jump
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %al,%cl
		mov    0x00007b(%ebx),%dl
		add    %edx,%ecx
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		mov    %ebx,%edx
		shl    $0x00000e,%edx
		mov    $0x00000c,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x004000,%eax
		mov    _0c33c0_data,%dh
		mov    %eax,_0c1094_data
		cmp    $0x000008,%dh
		je     _059dd2_jump
		mov    $0x000008,%bl
		mov    _0c33c1_data,%al
		mov    %dh,_0c33bb_data
		mov    %al,_0c33b8_data
		mov    %bl,_0c33c0_data
		jmp    _059dd2_jump

	_059db7_jump:
		mov    $0x004000,%edx
		mov    $0x000009,%ah
		mov    %edx,_0c1094_data
		mov    $0x000001,%dl
		mov    %ah,_0c33c0_data
		mov    %dl,_0c33c9_data

	_059dd2_jump:
		xor    %bh,%bh
		mov    $0x000001,%cl
		mov    %bh,_0c33c1_data
		mov    %cl,_0c33be_data

	_059de2_jump:
		pop    %ecx
		pop    %ebx
		ret    



_059de8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    0x00007a(%eax),%cl
		xor    %esi,%esi
		test   %cl,%cl
		jne    _059fdb_jump
		mov    _0c3178_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _059e1e_jump
		cmpb   $0x000002,0x000083(%eax)
		je     _059e1e_jump
		mov    $0x000001,%esi
		movb   $0x000001,0x000083(%eax)

	_059e1e_jump:
		mov    0x000083(%eax),%cl
		cmp    $0x000001,%cl
		jb     _059e39_jump
		jbe    _059e69_jump
		cmp    $0x000002,%cl
		je     _059edd_jump
		jmp    _059f0c_jump

	_059e39_jump:
		test   %cl,%cl
		jne    _059f0c_jump
		mov    _0b9320_data,%dx
		sub    $0x000032,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0b9324_data,%dx
		sub    $0x000050,%edx
		mov    $0x000001,%ebx
		mov    %dx,0x00005c(%eax)
		mov    %ebx,%edx
		jmp    _059f0c_jump

	_059e69_jump:
		cmpw   $0x000000,_0c3130_data
		jg     _059e7a_jump
		movb   $0x000002,0x000083(%eax)

	_059e7a_jump:
		mov    _0c3148_data,%bx
		inc    %ebx
		test   %si,%si
		jne    _059eb4_jump
		mov    _0c3162_data,%dx
		add    0x000050(%eax),%dx
		sub    $0x000064,%edx
		mov    0x000052(%eax),%di
		mov    %dx,0x00004a(%eax)
		mov    _0c3166_data,%dx
		add    %edi,%edx
		sub    $0x00000a,%edx
		mov    %dx,0x00005c(%eax)
		mov    $0x000002,%edx
		jmp    _059f0c_jump

	_059eb4_jump:
		mov    _0b9320_data,%dx
		sub    $0x000032,%edx
		mov    0x000052(%eax),%cx
		mov    %dx,0x00004a(%eax)
		mov    _0c3166_data,%dx
		add    %ecx,%edx
		mov    %dx,0x00005c(%eax)
		mov    _0c314e_data,%dx
		dec    %edx
		jmp    _059f0c_jump

	_059edd_jump:
		mov    _0c3162_data,%dx
		add    $0x0003e8,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0b9324_data,%dx
		movw   $0x0001f4,0x000050(%eax)
		sub    $0x00007d,%edx
		mov    $0x000003,%ebx
		mov    %dx,0x00005c(%eax)
		mov    $0x000001,%edx

	_059f0c_jump:
		mov    _0c3176_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _059f2a_jump
		cmpb   $0x000002,0x000083(%eax)
		je     _059f2a_jump
		movb   $0x000001,0x000083(%eax)

	_059f2a_jump:
		cmpb   $0x000000,_0c334f_data
		je     _059fdb_jump
		mov    0x000048(%eax),%ecx
		mov    0x000028(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jle    _059f72_jump
		mov    0x000040(%eax),%cx
		inc    %ecx
		mov    %cx,0x000040(%eax)
		cmp    %cx,%bx
		jge    _059f56_jump
		mov    %bx,0x000040(%eax)

	_059f56_jump:
		mov    0x00003e(%eax),%esi
		mov    0x000028(%eax),%edi
		mov    0x000048(%eax),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %edi,%esi
		cmp    %ecx,%esi
		jle    _059f87_jump
		dec    %ebx
		mov    %bx,0x000040(%eax)
		jmp    _059f87_jump

	_059f72_jump:
		decw   0x000040(%eax)
		mov    0x00003e(%eax),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jge    _059f87_jump
		movw   $0x00ffff,0x000040(%eax)

	_059f87_jump:
		mov    0x000040(%eax),%ecx
		mov    0x00002c(%eax),%ebp
		mov    0x00005a(%eax),%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %ebp,%ecx
		cmp    %ecx,%ebx
		jle    _059fb0_jump
		mov    0x000042(%eax),%bx
		inc    %ebx
		mov    %bx,0x000042(%eax)
		cmp    %bx,%dx
		jge    _059fdb_jump
		mov    %dx,0x000042(%eax)
		jmp    _059fdb_jump

	_059fb0_jump:
		movswl %dx,%esi
		sub    %esi,%ecx
		cmp    %ecx,%ebx
		jge    _059fd5_jump
		decw   0x000042(%eax)
		mov    0x000040(%eax),%ebx
		neg    %esi
		sar    $0x000010,%ebx
		cmp    %esi,%ebx
		jge    _059fdb_jump
		mov    %dx,0x000042(%eax)
		neg    %edx
		mov    %dx,0x000042(%eax)
		jmp    _059fdb_jump

	_059fd5_jump:
		movw   $0x000000,0x000042(%eax)

	_059fdb_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_059fe4_switch:
		.long   _05a03f_case
		.long   _05a048_case
		.long   _05a051_case
		.long   _05a05a_case
		.long   _05a063_case
		.long   _05a06c_case
		.long   _05a075_case




_05a000_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    _0c3124_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		cmpw   $0x0001f4,0x000050(%eax)
		je     _05a07b_jump
		mov    0x00007a(%ebx),%dl
		dec    %dl
		cmp    $0x000006,%dl
		ja     _05a07b_jump
		and    $0x0000ff,%edx
		jmp    *%cs:_059fe4_switch(,%edx,4)

	_05a03f_case:
		movw   $0x000064,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_05a048_case:
		movw   $0x000000,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_05a051_case:
		movw   $0x00ffb0,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_05a05a_case:
		movw   $0x00ff9c,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_05a063_case:
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_05a06c_case:
		movw   $0x0000d2,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_05a075_case:
		movw   $0x0001ea,0x000052(%eax)

	_05a07b_jump:
		pop    %edx
		pop    %ebx
		ret    



_05a080_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x000071(%eax)
		je     _05a0a9_jump
		cmpb   $0x000001,0x000070(%ecx)
		je     _05a0a9_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000001,0x000050(%ecx)
		call   _065368_func
		movb   $0x000004,0x000076(%ecx)

	_05a0a9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a0d4_func:
		push   %ecx
		push   %edx
		mov    $0x000019,%ecx
		mov    $_0c334a_data,%eax
		xor    %edx,%edx
		call   _08b940_func
		pop    %edx
		pop    %ecx
		ret    



_05a0ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%bl
		xor    %eax,%eax

	_05a0f3_jump:
		incb   _0c334a_data(%eax)
		xor    %edx,%edx
		mov    _0c334a_data(%eax),%dl
		cmp    %eax,%edx
		jl     _05a10d_jump
		xor    %dh,%dh
		mov    %dh,_0c334a_data(%eax)

	_05a10d_jump:
		inc    %eax
		cmp    $0x000019,%eax
		jl     _05a0f3_jump
		call   _03b930_func
		test   %al,%al
		jne    _05a12e_jump
		xor    %eax,%eax
		mov    _0c1084_data,%edx
		mov    %bl,%al
		add    %eax,%edx
		mov    %edx,_0c1084_data

	_05a12e_jump:
		mov    _0a7d34_data,%ebx
		test   %ebx,%ebx
		jle    _05a141_jump
		lea    -0x000001(%ebx),%ecx
		mov    %ecx,_0a7d34_data

	_05a141_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a148_func:
		push   %ebx
		push   %ecx
		cmpl   $0x000000,_0c1084_data
		jne    _05a158_jump
		call   _03ea80_func

	_05a158_jump:
		mov    $0x000020,%ebx
		mov    _0c30b6_data,%ecx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    _0c33cf_data,%al
		add    $0x000021,%ecx
		cmp    %ebx,%eax
		jl     _05a17f_jump
		cmp    %ecx,%eax
		jg     _05a17f_jump
		mov    $0x000001,%eax
		jmp    _05a181_jump

	_05a17f_jump:
		xor    %eax,%eax

	_05a181_jump:
		test   %eax,%eax
		je     _05a193_jump
		cmpb   $0x000041,_0c33d8_data
		jne    _05a193_jump
		call   _03eaa8_func

	_05a193_jump:
		testb  $0x000040,_0c33d8_data
		jne    _05a1a1_jump
		call   _03ea58_func

	_05a1a1_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05a1a4_func:
		push   %ecx
		cwtl   
		mov    $0x000007,%cl
		mov    _0a7b48_data(,%eax,2),%ax
		test   %ax,%ax
		js     _05a1ba_jump
		sar    %cl,%ax
		jmp    _05a1c3_jump

	_05a1ba_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05a1c3_jump:
		pop    %ecx
		ret    



_05a1c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpw   $0x000000,_0c30fa_data
		je     _05a20b_jump
		mov    _0c30f8_data,%eax
		sar    $0x000010,%eax
		call   _05a1a4_func
		mov    _0c30fa_data,%bx
		inc    %ebx
		mov    %eax,%edx
		mov    %bx,_0c30fa_data
		cmp    $0x0000ff,%ax
		jne    _05a204_jump
		xor    %ecx,%ecx
		xor    %eax,%edx
		mov    %cx,_0c30fa_data

	_05a204_jump:
		add    %dx,_0c3166_data

	_05a20b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a210_func:
		push   %ebx
		push   %edx
		mov    _0c30ee_data,%dx
		movswl %dx,%eax
		mov    _0a7bc6_data(,%eax,2),%ax
		cmp    $0x0000ff,%ax
		je     _05a23d_jump
		mov    _0c3166_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0c3166_data
		jmp    _05a23f_jump

	_05a23d_jump:
		xor    %edx,%edx

	_05a23f_jump:
		mov    %dx,_0c30ee_data
		pop    %edx
		pop    %ebx
		ret    



_05a24c_func:
		push   %ebx
		push   %edx
		mov    _0c30f0_data,%dx
		movswl %dx,%eax
		mov    _0a7bc6_data(,%eax,2),%ax
		cmp    $0x0000ff,%ax
		je     _05a279_jump
		mov    _0c3162_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0c3162_data
		jmp    _05a27b_jump

	_05a279_jump:
		xor    %edx,%edx

	_05a27b_jump:
		mov    %dx,_0c30f0_data
		pop    %edx
		pop    %ebx
		ret    



_05a288_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    _0c3162_data,%cx
		mov    _0c3166_data,%si
		mov    %eax,%ebx
		cmpw   $0x0000ff,(%edx)
		jne    _05a2a8_jump
		movw   $0x000000,(%edx)

	_05a2a8_jump:
		testb  $0x000004,_0c31b3_data
		je     _05a2b6_jump
		movw   $0x000000,(%ebx)

	_05a2b6_jump:
		mov    _0c31b3_data,%al
		mov    %cx,_0c3162_data
		mov    %si,_0c3166_data
		test   $0x000008,%al
		je     _05a2d2_jump
		movw   $0x000000,(%edx)

	_05a2d2_jump:
		call   _05a1c8_func
		cmpw   $0x000000,_0c30f0_data
		jle    _05a2e6_jump
		call   _05a24c_func

	_05a2e6_jump:
		cmpw   $0x000000,_0c30ee_data
		jle    _05a2f5_jump
		call   _05a210_func

	_05a2f5_jump:
		mov    _0c3166_data,%si
		mov    (%edx),%ax
		mov    _0c3162_data,%cx
		add    %eax,%esi
		mov    (%ebx),%ax
		mov    _0c3116_data,%di
		add    %eax,%ecx
		cmp    %di,%cx
		jge    _05a32d_jump
		mov    %edi,%eax
		sub    %ecx,%eax
		add    %ax,(%ebx)
		mov    %edi,%ecx
		xor    %edi,%edi
		mov    %di,_0a5256_data
		jmp    _05a34f_jump

	_05a32d_jump:
		mov    _0c3124_data,%di
		cmp    %di,%cx
		jle    _05a34f_jump
		mov    %ecx,%eax
		mov    %edi,%ecx
		sub    %edi,%eax
		mov    (%ebx),%di
		sub    %eax,%edi
		xor    %eax,%eax
		mov    %di,(%ebx)
		mov    %ax,_0a5256_data

	_05a34f_jump:
		mov    _0c3118_data,%bx
		cmp    %bx,%si
		jge    _05a379_jump
		mov    %ebx,%eax
		xor    %edi,%edi
		mov    (%edx),%bx
		sub    %esi,%eax
		mov    %di,_0a5258_data
		add    %eax,%ebx
		mov    _0c3118_data,%si
		mov    %bx,(%edx)
		jmp    _05a39c_jump

	_05a379_jump:
		mov    _0c3122_data,%di
		cmp    %di,%si
		jle    _05a39c_jump
		mov    %esi,%ebx
		mov    (%edx),%si
		sub    %edi,%ebx
		sub    %ebx,%esi
		mov    %si,(%edx)
		mov    %edi,%esi
		xor    %edi,%edi
		mov    %di,_0a5258_data

	_05a39c_jump:
		mov    $_0b92f8_data,%eax
		mov    %cx,_0c3162_data
		mov    %si,_0c3166_data
		call   _01e53c_func
		mov    _0c3162_data,%cx
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_05a3c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edi
		xor    %esi,%esi

	_05a3c9_jump:
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _05a496_jump

	_05a3e1_jump:
		cmpw   $0x0000d0,0x000064(%ecx)
		jne    _05a486_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _05a486_jump
		mov    0x000085(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000085(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _020064_func
		movw   $0x000000,0x000062(%ecx)
		mov    %ecx,%eax
		mov    %ebx,0x000030(%ecx)
		test   %si,%si
		setne  %bl
		call   _01dea8_func
		xor    %ebx,%ebx
		mov    0x000028(%edi),%eax
		mov    0x00006c(%edi),%bl
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x00006c(%ecx),%bl
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    0x00006d(%edi),%bl
		mov    0x00002c(%edi),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x00006d(%ecx),%bl
		sub    %ebx,%eax
		mov    %eax,0x00002c(%ecx)
		test   %si,%si
		je     _05a461_jump
		mov    $0x000002,%ebx
		jmp    _05a466_jump

	_05a461_jump:
		mov    $0x000007,%ebx

	_05a466_jump:
		mov    %ecx,%eax
		mov    %bl,0x000082(%ecx)
		call   _01e53c_func
		add    $0x000002,%esi
		cmp    $0x000002,%si
		jle    _05a3c9_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05a486_jump:
		inc    %eax
		add    $0x000088,%ecx
		cmp    %dx,%ax
		jl     _05a3e1_jump

	_05a496_jump:
		add    $0x000002,%esi
		cmp    $0x000002,%si
		jle    _05a3c9_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a4ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _05a4c0_jump
		sar    %cl,%ax
		jmp    _05a4c9_jump

	_05a4c0_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05a4c9_jump:
		movswl %dx,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _05a4d7_jump
		neg    %eax

	_05a4d7_jump:
		mov    %eax,%esi
		and    $0x00000f,%esi
		je     _05a526_jump
		mov    _0c1084_data,%edi
		imul   %esi,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %eax,%eax
		js     _05a4f3_jump
		sar    %cl,%eax
		jmp    _05a4f9_jump

	_05a4f3_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_05a4f9_jump:
		mov    %eax,%ebp
		mov    %edi,%eax
		mov    $0x000004,%cl
		sub    %esi,%eax
		test   %eax,%eax
		js     _05a509_jump
		sar    %cl,%eax
		jmp    _05a50f_jump

	_05a509_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_05a50f_jump:
		sub    %eax,%ebp
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _05a521_jump
		mov    $0x000001,%eax
		jg     _05a521_jump
		neg    %eax

	_05a521_jump:
		imul   %ebp,%eax
		add    %eax,%ebx

	_05a526_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a530_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006e(%eax),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    0x000004(%edx),%ecx
		mov    0x000008(%ecx,%eax,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		xor    %ecx,%ecx
		inc    %eax
		mov    %al,%cl
		cmpb   $0x000000,_0c334a_data(%ecx)
		jne    _05a5b3_jump
		xor    %ecx,%ecx
		mov    0x000071(%edx),%cl
		mov    0x000085(%edx),%ah
		lea    0x000000(,%ecx,4),%esi
		shl    $0x000004,%ah
		mov    0x00000c(%edx),%ecx
		add    %esi,%ecx
		movzbl 0x000070(%edx),%esi
		mov    (%ecx),%ecx
		shl    $0x000003,%esi
		shr    $0x000007,%ah
		add    %esi,%ecx
		test   %ah,%ah
		jbe    _05a59a_jump
		cmp    $0x000001,%ah
		je     _05a5a6_jump
		jmp    _05a5b5_jump

	_05a59a_jump:
		movsbw 0x000001(%ecx),%bx
		xor    %ah,%ah
		imul   %eax,%ebx
		jmp    _05a5b5_jump

	_05a5a6_jump:
		xor    %ebx,%ebx
		movsbw (%ecx),%cx
		mov    %al,%bl
		imul   %ecx,%ebx
		jmp    _05a5b5_jump

	_05a5b3_jump:
		xor    %ebx,%ebx

	_05a5b5_jump:
		cmpw   $0x000017,0x000064(%edx)
		jne    _05a5de_jump
		testb  $0x000002,_0c3348_data
		je     _05a5de_jump
		mov    $0x000001,%cl
		mov    %ebx,%eax
		test   %ax,%ax
		js     _05a5d3_jump
		sar    %cl,%ax
		jmp    _05a5dc_jump

	_05a5d3_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05a5dc_jump:
		mov    %eax,%ebx

	_05a5de_jump:
		mov    %bx,0x000040(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_05a5e6_jump:
		ret    



_05a5e8_func:
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _05a5e6_jump
		jmp    _07d3c4_func



_05a608_func:
		testb  $0x000004,0x000085(%eax)
		je     _05a5e6_jump
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _05a5e6_jump
		jmp    _07d3c4_func



_05a630_func:
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dx,0x000004(%esp)
		mov    %ebx,%edi
		mov    %cl,0x000010(%esp)
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		xor    %ecx,%ecx
		mov    _0a592e_data(,%eax,2),%dx
		mov    _0a56fe_data(,%eax,2),%bx
		mov    %dx,0x000008(%esp)
		mov    0x00006c(%edi),%dl
		shl    $0x000002,%eax
		mov    %dl,0x00000c(%esp)
		mov    _0a529d_data(%eax),%dl
		mov    %bx,(%esp)
		test   $0x000010,%dl
		je     _05a7ec_jump
		test   $0x000080,%dl
		je     _05a690_jump
		cmpb   $0x000000,_0c33de_data
		jne    _05a7e7_jump

	_05a690_jump:
		mov    _0dda32_data,%ax
		cmp    $0x00009d,%ax
		jb     _05a6e2_jump
		jbe    _05a7ae_jump
		cmp    $0x0000d7,%ax
		jb     _05a6c9_jump
		jbe    _05a7e7_jump
		cmp    $0x0000db,%ax
		jb     _05a7ec_jump
		jbe    _05a78f_jump
		cmp    $0x0000dc,%ax
		je     _05a735_jump
		jmp    _05a7ec_jump

	_05a6c9_jump:
		cmp    $0x0000cc,%ax
		jb     _05a7ec_jump
		cmp    $0x0000cd,%ax
		jbe    _05a7e7_jump
		jmp    _05a7ec_jump

	_05a6e2_jump:
		cmp    $0x00005e,%ax
		jb     _05a70d_jump
		jbe    _05a7e7_jump
		cmp    $0x00007a,%ax
		jb     _05a7ec_jump
		jbe    _05a7c1_jump
		cmp    $0x00008f,%ax
		je     _05a7e7_jump
		jmp    _05a7ec_jump

	_05a70d_jump:
		cmp    $0x00000a,%ax
		jne    _05a7ec_jump
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _05a7ec_jump
		cmp    $0x0001bc,%si
		jge    _05a7ec_jump
		jmp    _05a7e7_jump

	_05a735_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		cmp    $0xffffffce,%eax
		jle    _05a78f_jump
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _05a78f_jump
		cmp    $0x0001f4,%si
		jge    _05a78f_jump
		mov    _0c3152_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		cmpb   $0x000000,0x00007a(%eax)
		jne    _05a78f_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x00000a,0x00007a(%eax)
		call   _01dea8_func

	_05a78f_jump:
		mov    _0c3152_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		cmpb   $0x000000,0x00007a(%edx,%eax,8)
		jbe    _05a7ec_jump
		jmp    _05a7e7_jump

	_05a7ae_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _05a7ec_jump
		cmp    $0x0001f4,%si
		jge    _05a7ec_jump
		jmp    _05a7e7_jump

	_05a7c1_jump:
		movswl %si,%eax

_05a7c4_unknown:
		cmp    $0xfffffee4,%eax
		jle    _05a7ec_jump
		cmp    $0x0001bc,%si
		jge    _05a7ec_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff9c,%eax
		jle    _05a7ec_jump
		cmpw   $0x0000fa,0x000004(%esp)
		jge    _05a7ec_jump

	_05a7e7_jump:
		mov    $0x000001,%ecx

	_05a7ec_jump:
		test   %cx,%cx
		jne    _05a8a0_jump
		cmpb   $0x000000,0x000010(%esp)
		je     _05a812_jump
		mov    (%esp),%ebx
		mov    0x000008(%esp),%ecx
		add    $0x00003c,%ebx
		add    $0x00003c,%ecx
		mov    %bx,(%esp)
		mov    %cx,0x000008(%esp)

	_05a812_jump:
		mov    -0x000002(%esp),%eax
		mov    $0xfffffee4,%ebx
		sar    $0x000010,%eax
		movswl %si,%edx
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jl     _05a897_jump
		add    $0x0001bc,%eax
		cmp    %eax,%edx
		jg     _05a897_jump
		mov    0x000006(%esp),%eax
		mov    $0xffffff70,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jl     _05a897_jump
		add    $0x000130,%eax
		cmp    %eax,%edx
		jg     _05a897_jump
		xor    %eax,%eax
		mov    0x00002c(%edi),%edx
		mov    0x00006d(%edi),%al
		add    %edx,%eax
		cmp    $0xffffffe2,%eax
		jl     _05a897_jump
		xor    %eax,%eax
		mov    _0c1126_data,%ax
		shl    $0x000004,%eax
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jl     _05a897_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		mov    0x000028(%edi),%ecx
		add    %eax,%eax
		add    %ecx,%eax
		test   %eax,%eax
		jl     _05a897_jump
		xor    %eax,%eax
		mov    _0c1124_data,%ax
		shl    $0x000004,%eax
		cmp    %ecx,%eax
		jge    _05a89b_jump

	_05a897_jump:
		xor    %ecx,%ecx
		jmp    _05a8a0_jump

	_05a89b_jump:
		mov    $0x000001,%ecx

	_05a8a0_jump:
		cmp    $0x000001,%cx
		jne    _05a8ed_jump
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		testb  $0x000080,_0a529d_data(,%eax,4)
		je     _05a8ed_jump
		mov    $0x000001,%dh
		mov    _0c33c3_data,%bl
		mov    %dh,_0c33de_data
		test   %bl,%bl
		jne    _05a8d9_jump
		cmpb   $0x000000,0x00007a(%edi)
		je     _05a8d9_jump
		cmpb   $0x000000,_0c33ba_data
		jne    _05a8e8_jump

	_05a8d9_jump:
		cmpb   $0x000000,_0c33c3_data
		je     _05a8ed_jump
		cmpb   $0x000000,0x00007a(%edi)
		jne    _05a8ed_jump

	_05a8e8_jump:
		call   _020020_func

	_05a8ed_jump:
		cmp    $0x000001,%cx
		sete   %al
		xor    %ah,%ah
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		ret    



_05a8fc_func:
		push   %edx
		movl   $0xffff8300,0x000028(%eax)
		movl   $0xffff8300,0x00002c(%eax)
		mov    0x000085(%eax),%dl
		movl   $0x000001,0x000030(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000085(%eax)
		pop    %edx
		ret    



_05a924_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ebx,%esi
		mov    0x000064(%ebx),%bx
		mov    %bx,_0dda32_data
		mov    0x000024(%esi),%bl
		mov    %bl,(%esp)
		mov    0x000085(%esi),%bl
		movl   $0x000000,0x000024(%esi)
		test   $0x000004,%bl
		je     _05abf3_jump
		movswl %dx,%edx
		cwtl   
		xor    %ecx,%ecx
		mov    %esi,%ebx
		mov    (%esp),%cl
		call   _05a630_func
		test   %ax,%ax
		je     _05aa72_jump
		cmpw   $0x000000,0x000062(%esi)
		jne    _05aa56_jump
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		testb  $0x000001,_0a529e_data(,%eax,4)
		jne    _05a9a2_jump
		mov    0x000030(%esi),%edx
		cmp    $0x000002,%edx
		jl     _05a9a2_jump
		je     _05aa56_jump
		cmp    $0x00000a,%ax
		jne    _05aa56_jump

	_05a9a2_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %eax,0x000024(%esi)
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		shl    $0x000002,%eax
		testb  $0x000001,_0a529d_data(%eax)
		jne    _05a9c7_jump
		testb  $0x000040,_0a52a0_data(%eax)
		je     _05a9f5_jump

	_05a9c7_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _05a9e3_jump
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		testb  $0x000001,_0a529e_data(,%eax,4)
		je     _05a9e3_jump
		mov    $0x000001,%al
		jmp    _05a9e5_jump

	_05a9e3_jump:
		xor    %al,%al

	_05a9e5_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05a5e8_func
		jmp    _05abf3_jump

	_05a9f5_jump:
		mov    $0x000001,%cl
		mov    0x000034(%esi),%ax

	_05a9fb_jump:
		cwtl   
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ebx
		add    %eax,%ebx
		mov    0x000024(%ebx),%eax
		test   %eax,%eax
		jne    _05aa22_jump
		mov    0x000064(%esi),%ax
		test   %cl,_0a529e_data(,%eax,4)
		je     _05aa22_jump
		mov    %cl,%al
		jmp    _05aa24_jump

	_05aa22_jump:
		xor    %al,%al

	_05aa24_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,%eax
		call   _05a608_func
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0c1d74_data,%eax
		mov    0x000034(%esi),%di
		mov    (%edx,%eax,1),%ax
		cmp    %di,%ax
		jne    _05a9fb_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05aa56_jump:
		mov    0x000062(%esi),%di
		test   %di,%di
		jle    _05abf3_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000062(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05aa72_jump:
		mov    0x000030(%esi),%ax
		cmp    $0x000001,%ax
		je     _05abf3_jump
		xor    %edx,%edx
		mov    _0dda32_data,%dx
		movw   $0x000000,0x000062(%esi)
		testb  $0x000020,_0a529f_data(,%edx,4)
		je     _05aaa8_jump
		mov    %esi,%eax
		call   _05a8fc_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05aaa8_jump:
		cmp    $0x000002,%ax
		jne    _05aabd_jump
		movl   $0x000001,0x000030(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05aabd_jump:
		test   %ax,%ax
		je     _05aad1_jump
		cmp    $0x000004,%ax
		je     _05aad1_jump
		int3   
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05aad1_jump:
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		testb  $0x000001,_0a529d_data(,%eax,4)
		je     _05aaf2_jump
		mov    %esi,%eax
		call   _063f90_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05aaf2_jump:
		movl   $0x000004,0x000030(%esi)
		mov    _0dda32_data,%dx
		mov    0x000034(%esi),%ax
		movl   $0x000001,0x000024(%esi)
		xor    %bl,%bl
		cmp    $0x00000a,%dx
		je     _05ab87_jump

	_05ab17_jump:
		cwtl   
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		add    %eax,%edx
		cmpl   $0x000004,0x000030(%edx)
		je     _05ab71_jump
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _0755a0_func
		test   %al,%al
		je     _05ab5e_jump
		xor    %eax,%eax
		mov    0x000064(%edx),%ax
		testb  $0x000002,_0a529e_data(,%eax,4)
		je     _05ab71_jump
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _0754d4_func
		test   %al,%al
		je     _05ab71_jump
		mov    $0x000001,%bl
		jmp    _05ab87_jump

	_05ab5e_jump:
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _0754d4_func
		test   %al,%al
		jne    _05ab71_jump
		mov    $0x000001,%bl
		jmp    _05ab87_jump

	_05ab71_jump:
		mov    0x000032(%edx),%eax
		mov    _0c1d74_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%esi),%ax
		jne    _05ab17_jump

	_05ab87_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x00006d(%esi),%al
		add    %ebp,%eax
		cmp    $0xffffffe2,%eax
		jge    _05ab9d_jump
		movl   $0x000000,0x000024(%esi)

	_05ab9d_jump:
		test   %bl,%bl
		jne    _05abf3_jump
		mov    0x000034(%esi),%ax

	_05aba5_jump:
		cwtl   
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000064(%edx),%ax
		testb  $0x000002,_0a529e_data(,%eax,4)
		je     _05abd3_jump
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _0754d4_func
		test   %al,%al
		jne    _05abda_jump

	_05abd3_jump:
		mov    %edx,%eax
		call   _063f90_func

	_05abda_jump:
		mov    0x000032(%edx),%eax
		mov    _0c1d74_data,%edx
		sar    $0x000010,%eax
		mov    0x000034(%esi),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _05aba5_jump

	_05abf3_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_05aecc_switch:
		.long   _05af95_case
		.long   _05afab_case
		.long   _05afc1_case
		.long   _05afe2_case
		.long   _05affd_case
		.long   _05af7c_case
		.long   _05b03f_case
		.long   _05b03f_case
		.long   _05b03f_case
		.long   _05b00a_case
		.long   _05b024_case




_05aef8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x000071(%edx),%cl
		mov    0x00000c(%edx),%esi
		shl    $0x000002,%ecx
		add    %esi,%ecx
		movzbl 0x000070(%edx),%esi
		mov    (%ecx),%ecx
		mov    0x000005(%ecx,%esi,8),%cl
		xor    %ebx,%ebx
		shr    $0x000004,%cl
		xor    %eax,%eax
		test   %cl,%cl
		je     _05b058_jump
		mov    0x000064(%edx),%si
		cmp    $0x000057,%si
		je     _05af34_jump
		cmp    $0x000058,%si
		jne    _05af63_jump

	_05af34_jump:
		mov    0x000081(%edx),%cl
		test   %cl,%cl
		jbe    _05af4b_jump
		dec    %cl
		mov    %cl,0x000081(%edx)
		jmp    _05b03f_case

	_05af4b_jump:
		cmpb   $0x000000,0x000075(%edx)
		jne    _05b03f_case
		mov    $0x000001,%ebx
		add    %bx,0x000042(%edx)
		jmp    _05b03f_case

	_05af63_jump:
		dec    %cl
		cmp    $0x00000a,%cl
		ja     _05b03f_case
		and    $0x0000ff,%ecx
		jmp    *%cs:_05aecc_switch(,%ecx,4)

	_05af7c_case:
		cmpb   $0x000000,_0c334c_data
		jne    _05b03f_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _05b03f_case

	_05af95_case:
		cmpb   $0x000000,0x000075(%edx)
		jne    _05b03f_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _05b03f_case

	_05afab_case:
		cmpb   $0x000000,0x000076(%edx)
		jne    _05b03f_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _05b03f_case

	_05afc1_case:
		mov    0x000042(%edx),%cx
		cmp    $0x000001,%cx
		jge    _05afd5_jump
		mov    $0x000001,%eax
		jmp    _05b03f_case

	_05afd5_jump:
		jle    _05b03f_case
		mov    $0xffffffff,%eax
		jmp    _05b03f_case

	_05afe2_case:
		mov    0x000040(%edx),%ecx
		sar    $0x000010,%ecx
		cmp    $0xfffffffe,%ecx
		jle    _05aff4_jump
		mov    $0xffffffff,%eax
		jmp    _05b03f_case

	_05aff4_jump:
		jge    _05b03f_case
		mov    $0x000001,%eax
		jmp    _05b03f_case

	_05affd_case:
		cmpb   $0x000000,0x000075(%edx)
		jne    _05b03f_case
		mov    $0xffffffff,%eax
		jmp    _05b03f_case

	_05b00a_case:
		mov    0x000075(%edx),%cl
		inc    %cl
		mov    %cl,0x000075(%edx)
		cmp    0x000076(%edx),%cl
		jb     _05b03f_case
		mov    $0x000001,%eax
		movb   $0x000000,0x000075(%edx)
		mov    %eax,%ebx
		jmp    _05b03f_case

	_05b024_case:
		mov    0x000075(%edx),%cl
		inc    %cl
		mov    %cl,0x000075(%edx)
		cmp    0x000076(%edx),%cl
		jb     _05b03f_case
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		movb   $0x000000,0x000075(%edx)

	_05b03f_case:
		xor    %ecx,%ecx
		mov    0x000064(%edx),%cx
		testb  $0x000020,_0a529e_data(,%ecx,4)
		je     _05b054_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax

	_05b054_jump:
		add    %ax,0x000042(%edx)

	_05b058_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b060_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006e(%eax),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%ecx),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		dec    %eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x000070(%ecx),%al
		testb  $0x000010,0x000007(%ebx,%eax,8)
		je     _05b0bd_jump
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _05b0b2_jump
		mov    %ebx,%eax

	_05b0b2_jump:
		mov    (%esp),%ah
		sub    %al,%ah
		mov    %ah,%al
		inc    %al
		jmp    _05b0ce_jump

	_05b0bd_jump:
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _05b0ce_jump
		mov    %ebx,%eax

	_05b0ce_jump:
		mov    %al,0x00006f(%ecx)
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_05b0d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006f(%esi),%al
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00006e(%esi),%al
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		mov    (%edx),%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006e(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		mov    0x000004(%esi),%ebp
		shl    $0x000002,%edi
		mov    0x000005(%ebx),%al
		add    %edi,%ebp
		and    $0x00000f,%al
		je     _05b14f_jump
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0c334a_data(%eax)
		jne    _05b14f_jump
		mov    0x000007(%ebx),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		test   %al,%al
		jne    _05b14c_jump
		incb   0x00006f(%esi)
		jmp    _05b14f_jump

	_05b14c_jump:
		decb   0x00006f(%esi)

	_05b14f_jump:
		mov    0x000002(%ebx),%al
		mov    %al,0x00006e(%esi)
		xor    %eax,%eax
		mov    0x00006e(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		shl    $0x000002,%edi
		mov    0x000004(%esi),%eax
		add    %eax,%edi
		mov    0x000077(%esi),%al
		cmp    $0x000001,%al
		jb     _05b1f7_jump
		jbe    _05b181_jump
		cmp    $0x000002,%al
		je     _05b1ab_jump
		jmp    _05b1f7_jump

	_05b181_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x00006e(%esi),%al
		cmp    %dx,%ax
		je     _05b1a3_jump
		testb  $0x000010,0x000007(%ebx)
		jne    _05b19b_jump
		movb   $0x000000,0x00006f(%esi)
		jmp    _05b1a3_jump

	_05b19b_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006f(%esi)

	_05b1a3_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _05b1f7_jump
		jmp    _05b1c5_jump

	_05b1ab_jump:
		testb  $0x000010,0x000007(%ebx)
		jne    _05b1b7_jump
		movb   $0x000000,0x00006f(%esi)
		jmp    _05b1bf_jump

	_05b1b7_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006f(%esi)

	_05b1bf_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _05b1f7_jump

	_05b1c5_jump:
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%ecx),%eax
		mov    (%esp),%ecx
		mov    0x000032(%esi),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		mov    0x000006(%eax),%al
		and    $0x0000ff,%eax
		call   _071068_func

	_05b1f7_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006f(%esi),%dl
		mov    0x00000a(%edi),%ax
		cmp    %eax,%edx
		jge    _05b20f_jump
		cmp    $0x0000ff,%dl
		jne    _05b2fc_jump

	_05b20f_jump:
		mov    0x000004(%ebx),%al
		mov    %al,0x000070(%esi)
		mov    0x000003(%ebx),%al
		mov    %al,0x000071(%esi)
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		xor    %ebx,%ebx
		lea    0x000000(,%eax,4),%edx
		mov    0x000070(%esi),%bl
		mov    0x00000c(%esi),%eax
		shl    $0x000003,%ebx
		mov    (%edx,%eax,1),%eax
		add    %eax,%ebx
		mov    0x000002(%ebx),%al
		mov    %al,0x00006e(%esi)
		xor    %eax,%eax
		mov    0x00006e(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		lea    0x000000(,%edi,4),%eax
		mov    0x000004(%esi),%edi
		mov    0x000064(%esi),%cx
		add    %eax,%edi
		cmp    $0x000017,%cx
		jne    _05b284_jump
		cmpw   $0x000008,_0c317c_data
		jne    _05b284_jump
		mov    _0c3176_data,%dx
		cmp    $0x000002,%dx
		je     _05b27e_jump
		cmp    $0x000006,%dx
		jne    _05b284_jump

	_05b27e_jump:
		cmpb   $0x000008,0x000070(%esi)
		jne    _05b29e_jump

	_05b284_jump:
		cmpw   $0x00003d,_0c317c_data
		jne    _05b2ba_jump
		cmpw   $0x000000,_0c3176_data
		jne    _05b2ba_jump
		cmpb   $0x00003d,0x000070(%esi)
		je     _05b2ba_jump

	_05b29e_jump:
		cmpw   $0x00003c,_0b9354_data
		jle    _05b2ba_jump
		testb  $0x000080,_0c3348_data
		jne    _05b2ba_jump
		movw   $0x00003c,_0b9354_data

	_05b2ba_jump:
		testb  $0x000010,0x000007(%ebx)
		je     _05b2c9_jump
		xor    %eax,%eax
		mov    0x00000a(%edi),%ax
		dec    %eax
		jmp    _05b2cb_jump

	_05b2c9_jump:
		xor    %eax,%eax

	_05b2cb_jump:
		mov    %al,0x00006f(%esi)
		cmpl   $0x000000,0x000024(%esi)
		je     _05b2fc_jump
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000032(%esi),%edx
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x000070(%esi),%bl
		sar    $0x000010,%edx
		mov    0x000006(%eax,%ebx,8),%al
		and    $0x0000ff,%eax
		call   _071068_func

	_05b2fc_jump:
		mov    0x000085(%esi),%al
		movb   $0x000000,0x000077(%esi)
		test   $0x000020,%al
		je     _05b31c_jump
		mov    0x000002(%esp),%ecx
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		sar    $0x000010,%ecx
		call   _01e108_func

	_05b31c_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x00006f(%esi),%al
		lea    0x000085(%esi),%ebx
		cmp    %dx,%ax
		jne    _05b33e_jump
		xor    %edx,%eax
		mov    0x000008(%esp),%ecx
		mov    0x00006e(%esi),%al
		cmp    %cx,%ax
		je     _05b345_jump

	_05b33e_jump:
		mov    $0x000001,%eax
		jmp    _05b347_jump

	_05b345_jump:
		xor    %eax,%eax

	_05b347_jump:
		and    $0x000001,%al
		mov    (%ebx),%ah
		and    $0x00007f,%ah
		mov    %ah,(%ebx)
		shl    $0x000007,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,(%ebx)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b364_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00002c(%eax),%ax
		add    %edx,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		pop    %edx
		ret    

_05b378_switch:
		.long   _05b4ef_case
		.long   _05b4ef_case
		.long   _05b459_case
		.long   _05b47c_case
		.long   _05b49c_case
		.long   _05b49c_case
		.long   _05b4bb_case
		.long   _05b4bb_case
		.long   _05b4ef_case
		.long   _05b4de_case
		.long   _05b4ef_case
		.long   _05b4ef_case
		.long   _05b4ef_case
		.long   _05b4ef_case
		.long   _05b4d5_case
		.long   _05b4d5_case
		.long   _05b4ef_case
		.long   _05b4ef_case
		.long   _05b459_case
		.long   _05b47c_case
		.long   _05b49c_case
		.long   _05b49c_case
		.long   _05b4bb_case
		.long   _05b4bb_case
		.long   _05b4ef_case
		.long   _05b4ef_case
		.long   _05b4ef_case
		.long   _05b4ef_case
		.long   _05b4ef_case
		.long   _05b4ef_case
		.long   _05b4d5_case




_05b3f4_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %dl,(%esp)
		cmpw   $0x000001,0x000042(%eax)
		jg     _05b432_jump
		movw   $0x000000,0x000042(%eax)
		xor    %edx,%edx
		and    $0x0000ff,%ebx
		mov    (%esp),%dl
		call   _01dea8_func
		cmpb   $0x000002,(%esp)
		je     _05b4ff_jump
		mov    %ecx,%eax
		call   _023dbc_func
		jmp    _05b4ff_jump

	_05b432_jump:
		cmpb   $0x000000,_0c334c_data
		jne    _05b4ef_case
		mov    0x000066(%ecx),%dl
		cmp    $0x00001e,%dl
		ja     _05b4ef_case
		and    $0x0000ff,%edx
		jmp    *%cs:_05b378_switch(,%edx,4)

	_05b459_case:
		mov    $0x000001,%ebx
		mov    0x000040(%ecx),%edx
		mov    0x000040(%ecx),%ax
		sar    $0x000010,%edx
		sub    $0x000002,%eax
		sar    %edx
		mov    %ax,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _05b4ef_case

	_05b47c_case:
		mov    $0x000001,%ebx
		mov    0x000040(%ecx),%edx
		mov    0x000040(%ecx),%di
		sar    $0x000010,%edx
		add    $0x000002,%edi
		sar    %edx
		mov    %di,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _05b4ef_case

	_05b49c_case:
		mov    0x000040(%ecx),%edx
		mov    $0x000001,%ebx
		sar    $0x000010,%edx
		mov    0x000040(%ecx),%si
		inc    %edx
		dec    %esi
		sar    %edx
		mov    %si,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _05b4ef_case

	_05b4bb_case:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		inc    %edx
		mov    $0x000001,%ebx
		sar    %edx
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		incw   0x000040(%ecx)
		jmp    _05b4ef_case

	_05b4d5_case:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		inc    %edx
		jmp    _05b4e7_jump

	_05b4de_case:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		add    $0x000003,%edx

	_05b4e7_jump:
		sar    %edx
		neg    %edx
		mov    %dx,0x000042(%ecx)

	_05b4ef_case:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _05b4ff_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01de98_func

	_05b4ff_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05b508_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000066(%eax),%dl
		testb  $0x000001,_0a525d_data(%edx)
		je     _05b52c_jump
		mov    0x000069(%eax),%al
		and    $0x0000ff,%eax
		testb  $0x000040,_0a525d_data(%eax)
		je     _05b52c_jump
		mov    $0x000001,%al
		pop    %edx
		ret    

	_05b52c_jump:
		xor    %al,%al
		pop    %edx
		ret    



_05b530_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000064(%eax),%si
		cmp    $0x00002f,%si
		jne    _05b54c_jump
		mov    $0x000020,%ecx
		mov    $0xfffffffc,%ebx
		jmp    _05b55c_jump

	_05b54c_jump:
		cmp    $0x000045,%si
		jne    _05b55c_jump
		mov    $0x000030,%ecx
		mov    $0xfffffffa,%ebx

	_05b55c_jump:
		mov    %edx,%eax
		call   _05b508_func
		test   %al,%al
		je     _05b56d_jump
		mov    0x000069(%edx),%al
		mov    %al,0x000066(%edx)

	_05b56d_jump:
		mov    0x000066(%edx),%al
		cmp    $0x00000e,%al
		jb     _05b5a1_jump
		cmp    $0x00000f,%al
		jbe    _05b60a_jump
		cmp    $0x000014,%al
		jb     _05b595_jump
		cmp    $0x000015,%al
		jbe    _05b5bb_jump
		cmp    $0x000017,%al
		jbe    _05b5d3_jump
		cmp    $0x00001e,%al
		je     _05b60a_jump
		jmp    _05b60e_jump

	_05b595_jump:
		cmp    $0x000012,%al
		jb     _05b60e_jump
		jbe    _05b5e8_jump
		jmp    _05b5cd_jump

	_05b5a1_jump:
		cmp    $0x000004,%al
		jb     _05b5b3_jump
		cmp    $0x000005,%al
		jbe    _05b5bb_jump
		cmp    $0x000007,%al
		jbe    _05b5d3_jump
		cmp    $0x000009,%al
		je     _05b607_jump
		jmp    _05b60e_jump

	_05b5b3_jump:
		cmp    $0x000002,%al
		jb     _05b60e_jump
		jbe    _05b5e8_jump
		jmp    _05b5cd_jump

	_05b5bb_jump:
		mov    %bx,0x000042(%edx)
		mov    %ecx,%eax
		mov    %cx,0x000040(%edx)
		neg    %eax
		mov    %ax,0x000040(%edx)
		jmp    _05b60e_jump

	_05b5cd_jump:
		add    $0x000002,%ebx
		add    $0x000010,%ecx

	_05b5d3_jump:
		mov    %bx,0x000042(%edx)
		mov    %cx,0x000040(%edx)
		movb   $0x000000,0x000075(%edx)
		movb   $0x000002,0x000076(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b5e8_jump:
		add    $0x000002,%ebx
		mov    %bx,0x000042(%edx)
		mov    $0xfffffff0,%ebx
		sub    %ecx,%ebx
		mov    %bx,0x000040(%edx)
		movb   $0x000000,0x000075(%edx)
		movb   $0x000002,0x000076(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b607_jump:
		sub    $0x000003,%ebx

	_05b60a_jump:
		mov    %bx,0x000042(%edx)

	_05b60e_jump:
		movb   $0x000000,0x000075(%edx)
		movb   $0x000002,0x000076(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05b61c_switch:
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b729_case
		.long   _05b744_case
		.long   _05b75f_case
		.long   _05b75f_case
		.long   _05b77a_case
		.long   _05b77a_case
		.long   _05b7a5_case
		.long   _05b795_case
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b729_case
		.long   _05b744_case
		.long   _05b75f_case
		.long   _05b75f_case
		.long   _05b77a_case
		.long   _05b77a_case
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b7a5_case
		.long   _05b7a5_case




_05b698_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    $0x000005,%esi
		mov    0x000071(%eax),%ah
		mov    $0x000003,%edx
		cmp    $0x000002,%ah
		jne    _05b6cb_jump
		cmpb   $0x000001,0x000070(%ecx)
		jne    _05b6cb_jump
		mov    $0xffffffff,%edx
		mov    %ecx,%eax
		call   _07f2b8_func
		jmp    _05b87d_jump

	_05b6cb_jump:
		cmpb   $0x000002,0x000071(%ecx)
		jne    _05b6f3_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _05b6f3_jump
		mov    %ecx,%eax
		mov    0x000064(%ecx),%dx
		movw   $0x00002f,0x000064(%ecx)
		call   _05b530_func
		mov    %dx,0x000064(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05b6f3_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jl     _05b852_jump
		mov    %ecx,%eax
		call   _05b508_func
		mov    %al,(%esp)
		test   %al,%al
		je     _05b711_jump
		mov    0x000069(%ecx),%al
		jmp    _05b714_jump

	_05b711_jump:
		mov    0x000066(%ecx),%al

	_05b714_jump:
		cmp    $0x00001e,%al
		ja     _05b7a5_case
		and    $0x0000ff,%eax
		jmp    *%cs:_05b61c_switch(,%eax,4)

	_05b729_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _05b739_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%ecx)

	_05b739_jump:
		imul   0x000042(%ecx),%si
		sub    %si,0x000040(%ecx)
		jmp    _05b7a5_case

	_05b744_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _05b754_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%ecx)

	_05b754_jump:
		imul   0x000042(%ecx),%si
		add    %si,0x000040(%ecx)
		jmp    _05b7a5_case

	_05b75f_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _05b76f_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_05b76f_jump:
		imul   0x000042(%ecx),%dx
		sub    %dx,0x000040(%ecx)
		jmp    _05b7a5_case

	_05b77a_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _05b78a_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_05b78a_jump:
		imul   0x000042(%ecx),%dx
		add    %dx,0x000040(%ecx)
		jmp    _05b7a5_case

	_05b795_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _05b7a5_case
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_05b7a5_case:
		test   %bx,%bx
		jle    _05b7d0_jump
		mov    0x000042(%ecx),%si
		cmp    $0x000001,%si
		jle    _05b7c8_jump
		sub    %esi,%ebx
		mov    %bx,0x000042(%ecx)
		test   %di,%di
		je     _05b7d6_jump
		mov    %ebx,%edx
		inc    %edx
		mov    %dx,0x000042(%ecx)
		jmp    _05b7d6_jump

	_05b7c8_jump:
		movw   $0x000000,0x000042(%ecx)
		jmp    _05b7d6_jump

	_05b7d0_jump:
		movw   $0x00fffd,0x000042(%ecx)

	_05b7d6_jump:
		cmpb   $0x000000,(%esp)
		je     _05b819_jump

	_05b7dc_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x00006d(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x00006c(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		cmp    0x000066(%ecx),%al
		jne    _05b809_jump
		decl   0x00002c(%ecx)
		jmp    _05b7dc_jump

	_05b809_jump:
		mov    %ecx,%eax
		call   _023dbc_func
		mov    %ecx,%eax
		call   _01ec9c_func
		jmp    _05b852_jump

	_05b819_jump:
		xor    %eax,%eax
		mov    0x000066(%ecx),%al
		testb  $0x000001,_0a525d_data(%eax)
		je     _05b84b_jump
		mov    %ecx,%eax
		call   _05b364_func
		cmp    $0x000004,%ax
		jl     _05b84b_jump
		mov    0x000042(%ecx),%bx
		cmp    $0x000002,%bx
		jg     _05b84b_jump
		test   %bx,%bx
		jne    _05b852_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _05b852_jump

	_05b84b_jump:
		mov    %ecx,%eax
		call   _023dbc_func

	_05b852_jump:
		xor    %edx,%edx
		mov    0x000071(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		movb   $0x000000,0x000075(%ecx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _05b87d_jump
		cmp    $0x00000a,%al
		je     _05b87d_jump
		movb   $0x000000,0x000076(%ecx)

	_05b87d_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_05b884_switch:
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05b9b4_case
		.long   _05b9d6_case
		.long   _05b9f8_case
		.long   _05b9f8_case
		.long   _05ba2e_case
		.long   _05ba2e_case
		.long   _05ba74_case
		.long   _05ba64_case
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05b9b4_case
		.long   _05b9d6_case
		.long   _05b9f8_case
		.long   _05b9f8_case
		.long   _05ba2e_case
		.long   _05ba2e_case
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05ba74_case
		.long   _05ba74_case




_05b900_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,0x000008(%esp)
		cmpw   $0x000026,0x000064(%eax)
		jne    _05b92a_jump
		mov    $0x000001,%eax
		mov    $0x000002,%edi
		mov    %eax,%ebx
		mov    %eax,0x000004(%esp)
		mov    %eax,%edx
		jmp    _05b942_jump

	_05b92a_jump:
		mov    $0x000005,%eax
		mov    $0x000004,%ebx
		mov    $0x000003,%edx
		mov    $0x000001,%edi
		mov    %eax,0x000004(%esp)

	_05b942_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _05bb88_jump
		mov    0x000040(%esi),%cx
		test   %cx,%cx
		jle    _05b95a_jump
		sub    %eax,%ecx
		jmp    _05b95e_jump

	_05b95a_jump:
		jge    _05b962_jump
		add    %eax,%ecx

	_05b95e_jump:
		mov    %cx,0x000040(%esi)

	_05b962_jump:
		movswl %bx,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jl     _05b97e_jump
		cmp    %ecx,%eax
		jg     _05b97e_jump
		mov    $0x000001,%eax
		jmp    _05b980_jump

	_05b97e_jump:
		xor    %eax,%eax

	_05b980_jump:
		test   %eax,%eax
		je     _05b98a_jump
		movw   $0x000000,0x000040(%esi)

	_05b98a_jump:
		mov    %esi,%eax
		call   _05b508_func
		mov    %al,%bl
		test   %al,%al
		je     _05b99c_jump
		mov    0x000069(%esi),%al
		jmp    _05b99f_jump

	_05b99c_jump:
		mov    0x000066(%esi),%al

	_05b99f_jump:
		cmp    $0x00001e,%al
		ja     _05ba74_case
		and    $0x0000ff,%eax
		jmp    *%cs:_05b884_switch(,%eax,4)

	_05b9b4_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _05b9c4_jump
		mov    $0x000001,%edi
		mov    %di,0x000042(%esi)

	_05b9c4_jump:
		mov    0x000004(%esp),%eax
		imul   0x000042(%esi),%ax
		sub    %ax,0x000040(%esi)
		jmp    _05ba74_case

	_05b9d6_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _05b9e6_jump
		mov    $0x000001,%ecx
		mov    %cx,0x000042(%esi)

	_05b9e6_jump:
		mov    0x000004(%esp),%eax
		imul   0x000042(%esi),%ax
		add    %ax,0x000040(%esi)
		jmp    _05ba74_case

	_05b9f8_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _05ba08_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_05ba08_jump:
		mov    0x000040(%esi),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %di,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _05ba74_case

	_05ba2e_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _05ba3e_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_05ba3e_jump:
		mov    0x000040(%esi),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %di,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _05ba74_case

	_05ba64_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _05ba74_case
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_05ba74_case:
		mov    0x000008(%esp),%edi
		test   %di,%di
		jle    _05bab5_jump
		cmpw   $0x000001,0x000042(%esi)
		jle    _05baa6_jump
		mov    %edi,%eax
		sub    0x000042(%esi),%ax
		mov    (%esp),%ecx
		mov    %ax,0x000042(%esi)
		test   %cx,%cx
		je     _05bb15_jump
		mov    %eax,%edi
		inc    %edi
		mov    %di,0x000042(%esi)
		jmp    _05bb15_jump

	_05baa6_jump:
		movw   $0x000000,0x000042(%esi)
		movb   $0x000002,0x00007a(%esi)
		jmp    _05bb15_jump

	_05bab5_jump:
		mov    0x000064(%esi),%ax
		cmp    $0x000008,%ax
		je     _05bad7_jump
		cmp    $0x000086,%ax
		je     _05bad7_jump
		cmp    $0x0000a7,%ax
		je     _05bad7_jump
		cmp    $0x0000b1,%ax
		je     _05bad7_jump
		cmp    $0x000006,%ax
		jne    _05bb0f_jump

	_05bad7_jump:
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _05bafc_jump
		testb  $0x000002,_0c3348_data
		je     _05baf4_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _05bb02_jump

	_05baf4_jump:
		movw   $0x00fffd,0x000042(%esi)
		jmp    _05bb02_jump

	_05bafc_jump:
		movw   $0x00fffb,0x000042(%esi)

	_05bb02_jump:
		cmpw   $0x000006,0x000064(%esi)
		jne    _05bb15_jump
		incw   0x000042(%esi)
		jmp    _05bb15_jump

	_05bb0f_jump:
		movw   $0x00fffd,0x000042(%esi)

	_05bb15_jump:
		test   %bl,%bl
		je     _05bb4f_jump

	_05bb19_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x00006d(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x00006c(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		cmp    0x000066(%esi),%al
		jne    _05bb46_jump
		decl   0x00002c(%esi)
		jmp    _05bb19_jump

	_05bb46_jump:
		mov    %esi,%eax
		call   _01ec9c_func
		jmp    _05bb81_jump

	_05bb4f_jump:
		xor    %eax,%eax
		mov    0x000066(%esi),%al
		testb  $0x000001,_0a525d_data(%eax)
		je     _05bb81_jump
		mov    %esi,%eax
		call   _05b364_func
		cmp    $0x000004,%ax
		jl     _05bb81_jump
		mov    0x000042(%esi),%ax
		cmp    $0x000002,%ax
		jg     _05bb81_jump
		test   %ax,%ax
		jne    _05bb88_jump
		movw   $0x000001,0x000042(%esi)
		jmp    _05bb88_jump

	_05bb81_jump:
		mov    %esi,%eax
		call   _023dbc_func

	_05bb88_jump:
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		movb   $0x000000,0x000075(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _05bbb7_jump
		cmp    $0x00000a,%al
		je     _05bbb7_jump
		movb   $0x000000,0x000076(%esi)

	_05bbb7_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05bbc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		call   _01dea8_func
		movw   $0x000000,0x000042(%ecx)
		movw   $0x000000,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bbe4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _023dbc_func
		mov    0x00007a(%ecx),%dl
		cmp    0x00007b(%ecx),%dl
		je     _05bc2f_jump
		xor    %edx,%edx
		mov    0x000071(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x000070(%ecx),%bl
		testb  $0x000040,0x000007(%edx,%ebx,8)
		je     _05bc18_jump
		mov    $0x000002,%edx
		jmp    _05bc1d_jump

	_05bc18_jump:
		mov    $0x00000b,%edx

	_05bc1d_jump:
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %dl,%bl
		mov    $0x000001,%edx
		call   _01dea8_func
		jmp    _05bc44_jump

	_05bc2f_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		orb    $0x000010,0x000085(%ecx)

	_05bc44_jump:
		mov    %ecx,%eax
		call   _01e4c4_func
		mov    0x000085(%ecx),%ah
		mov    $0x000001,%ebx
		test   $0x000008,%ah
		setne  %dl
		and    $0x0000ff,%edx
		add    $0x000002,%edx
		and    $0x0000ff,%edx
		mov    %ecx,%eax
		call   _065368_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bc78_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000042(%eax)
		jle    _05bca8_jump
		call   _023dbc_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _065368_func
		cmpw   $0x0001f4,0x00004a(%ecx)
		jle    _05bca8_jump
		movw   $0x000000,0x00004a(%ecx)

	_05bca8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bcac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,_0c33c2_data
		je     _05bcd2_jump
		cmpb   $0x000001,0x000070(%ecx)
		jne    _05bcd2_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _05b3f4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bcd2_jump:
		cmpb   $0x000000,0x000070(%ecx)
		je     _05bcf3_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _065368_func
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _023dbc_func

	_05bcf3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bcf8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x000070(%eax)
		jne    _05bd1b_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _065368_func
		mov    %ecx,%eax
		call   _023dbc_func

	_05bd1b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bd20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x00006c(%ecx),%al
		add    %edx,%eax
		lea    -0x000002(%eax),%ebx
		lea    0x000002(%eax),%esi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x00006d(%ecx),%al
		xor    %edx,%edx
		add    %edi,%eax
		mov    _0c1124_data,%dx
		sar    $0x000004,%eax
		imul   %eax,%edx
		sar    $0x000004,%ebx
		add    %edx,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c112c_data,%ebx
		sar    $0x000004,%esi
		mov    0x000002(%ebx,%eax,2),%al
		xor    %ah,%ah
		add    %esi,%edx
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    0x000002(%ebx,%eax,2),%dl
		cmpb   $0x000002,0x000071(%ecx)
		jne    _05be5f_jump
		xor    %eax,%eax
		mov    0x000066(%ecx),%al
		testb  $0x000002,_0a525d_data(%eax)
		jne    _05be5f_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _05bdbb_jump
		testb  $0x000008,0x000085(%ecx)
		je     _05bdd8_jump

	_05bdbb_jump:
		movswl %dx,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _05be5f_jump
		testb  $0x000008,0x000085(%ecx)
		je     _05be5f_jump

	_05bdd8_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _05be0e_jump
		testb  $0x000008,0x000085(%ecx)
		je     _05bdfb_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _065368_func
		jmp    _05be5f_jump

	_05bdfb_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _065368_func
		jmp    _05be5f_jump

	_05be0e_jump:
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ebp
		mov    $0x000004,%edx
		add    %eax,%ebp
		mov    %ecx,%eax
		mov    %ebp,0x000028(%ecx)
		call   _065368_func
		mov    0x000085(%ecx),%bl
		lea    0x000085(%ecx),%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		or     %dl,%cl
		mov    %cl,(%eax)

	_05be5f_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05be6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		call   _01dea8_func
		testb  $0x000008,0x000085(%ecx)
		je     _05be94_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		jmp    _05be9d_jump

	_05be94_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_05be9d_jump:
		call   _065368_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bea8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000072(%eax),%bl
		mov    0x000073(%eax),%dl
		call   _01dea8_func
		mov    %ecx,%eax
		call   _023dbc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05bec8_switch:
		.long   _05c402_case
		.long   _05c448_case
		.long   _05c194_case
		.long   _05c402_case
		.long   _05c194_case
		.long   _05c194_case
		.long   _05c3f4_case




_05bee4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _05bf33_jump
		cmp    $0x00000a,%al
		je     _05bf33_jump
		mov    0x000075(%esi),%ah
		inc    %ah
		mov    %ah,0x000075(%esi)
		cmp    $0x000003,%ah
		jb     _05bf22_jump
		movb   $0x000000,0x000075(%esi)

	_05bf22_jump:
		mov    0x000076(%esi),%dh
		inc    %dh
		mov    %dh,0x000076(%esi)
		cmp    $0x000004,%dh
		jb     _05bf33_jump
		movb   $0x000000,0x000076(%esi)

	_05bf33_jump:
		mov    %esi,%eax
		call   _05aef8_func
		mov    0x000064(%esi),%dx
		mov    %eax,%edi
		cmp    $0x000003,%dx
		jne    _05bf95_jump
		cmpw   $0x000000,0x000042(%esi)
		jl     _05bf5f_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _05bf5f_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01de98_func

	_05bf5f_jump:
		cmpb   $0x000000,_0c33c2_data
		jne    _05bfee_jump
		cmpw   $0x000003,0x000042(%esi)
		jl     _05bfee_jump
		cmpb   $0x000001,0x000070(%esi)
		jne    _05bfee_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01de98_func
		movw   $0x000000,0x000040(%esi)
		jmp    _05bfee_jump

	_05bf95_jump:
		cmp    $0x000028,%dx
		je     _05bfa1_jump
		cmp    $0x00007a,%dx
		jne    _05bfee_jump

	_05bfa1_jump:
		mov    %esi,%eax
		call   _05bd20_func
		mov    0x000071(%esi),%bh
		cmp    $0x000002,%bh
		jne    _05bfee_jump
		mov    0x000042(%esi),%ax
		test   %ax,%ax
		jle    _05bfcc_jump
		cmp    0x000070(%esi),%bh
		je     _05bfee_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01de98_func
		jmp    _05bfee_jump

	_05bfcc_jump:
		jge    _05bfee_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0230e0_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _05bfee_jump
		movw   $0x000000,0x000042(%esi)

	_05bfee_jump:
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		testb  $0x000004,_0a52a0_data(,%eax,4)
		je     _05c0a4_jump
		cmpw   $0x000000,0x000042(%esi)
		jge    _05c0a4_jump
		testb  $0x000020,0x000085(%esi)
		je     _05c04c_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x00006c(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000078(%esi),%al
		jmp    _05c064_jump

	_05c04c_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x00006c(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000078(%esi),%al
		mov    0x00002c(%esi),%dx

	_05c064_jump:
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		mov    0x000040(%esi),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		je     _05c0a4_jump
		movw   $0x000000,0x000042(%esi)

	_05c0a4_jump:
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		testb  $0x000001,_0a529f_data(,%eax,4)
		je     _05c194_case
		xor    %eax,%eax
		mov    0x000066(%esi),%al
		testb  $0x000002,_0a525d_data(%eax)
		je     _05c194_case
		mov    0x000064(%esi),%ax
		cmp    $0x000064,%ax
		jb     _05c25e_jump
		jbe    _05c471_jump
		cmp    $0x000093,%ax
		jb     _05c1d3_jump
		jbe    _05c194_case
		cmp    $0x0000c3,%ax
		jb     _05c148_jump
		jbe    _05c63e_jump
		cmp    $0x0000d9,%ax
		jb     _05c125_jump
		jbe    _05c471_jump
		cmp    $0x0000de,%ax
		jb     _05c18d_jump
		jbe    _05c194_case
		cmp    $0x0000e3,%ax
		je     _05c194_case
		jmp    _05c18d_jump

	_05c125_jump:
		cmp    $0x0000cc,%ax
		jb     _05c18d_jump
		cmp    $0x0000cd,%ax
		jbe    _05c194_case
		cmp    $0x0000d4,%ax
		je     _05c194_case
		jmp    _05c18d_jump

	_05c148_jump:
		cmp    $0x0000a7,%ax
		jb     _05c173_jump
		jbe    _05c597_jump
		cmp    $0x0000ac,%ax
		jb     _05c18d_jump
		jbe    _05c47d_jump
		cmp    $0x0000b1,%ax
		je     _05c597_jump
		jmp    _05c18d_jump

	_05c173_jump:
		cmp    $0x000097,%ax
		jb     _05c18d_jump
		jbe    _05c194_case
		cmp    $0x0000a5,%ax
		je     _05c4c1_jump

	_05c18d_jump:
		mov    %esi,%eax
		call   _05bea8_func

	_05c194_case:
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		testb  $0x000020,_0a529e_data(,%eax,4)
		je     _05c69f_jump
		cmpw   $0x000060,0x000042(%esi)
		jle    _05c1b5_jump
		movw   $0x000060,0x000042(%esi)

	_05c1b5_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff80,%eax
		jge    _05c6bd_jump
		movw   $0x00ff80,0x000042(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c1d3_jump:
		cmp    $0x00007b,%ax
		jb     _05c214_jump
		jbe    _05c3da_jump
		cmp    $0x000085,%ax
		jb     _05c1fd_jump
		jbe    _05c615_jump
		cmp    $0x000086,%ax
		jbe    _05c597_jump
		cmp    $0x00008b,%ax
		je     _05c194_case
		jmp    _05c18d_jump

	_05c1fd_jump:
		cmp    $0x000082,%ax
		jb     _05c18d_jump
		jbe    _05c597_jump
		cmp    $0x000084,%ax
		je     _05c194_case
		jmp    _05c18d_jump

	_05c214_jump:
		cmp    $0x00006e,%ax
		jb     _05c23f_jump
		jbe    _05c194_case
		cmp    $0x000077,%ax
		jb     _05c18d_jump
		jbe    _05c4a5_jump
		cmp    $0x00007a,%ax
		je     _05c51b_jump
		jmp    _05c18d_jump

	_05c23f_jump:
		cmp    $0x000066,%ax
		jb     _05c18d_jump
		jbe    _05c194_case
		cmp    $0x000068,%ax
		jbe    _05c194_case
		jmp    _05c18d_jump

	_05c25e_jump:
		cmp    $0x00002f,%ax
		jb     _05c335_jump
		jbe    _05c4cd_jump
		cmp    $0x00003e,%ax
		jb     _05c2c8_jump
		jbe    _05c465_jump
		cmp    $0x000045,%ax
		jb     _05c2a9_jump
		jbe    _05c4cd_jump
		cmp    $0x000046,%ax
		jbe    _05c3ce_jump
		cmp    $0x000057,%ax
		jb     _05c18d_jump
		cmp    $0x000058,%ax
		jbe    _05c194_case
		jmp    _05c18d_jump

	_05c2a9_jump:
		cmp    $0x000041,%ax
		jb     _05c18d_jump
		jbe    _05c632_jump
		cmp    $0x000044,%ax
		je     _05c194_case
		jmp    _05c18d_jump

	_05c2c8_jump:
		cmp    $0x000034,%ax
		jb     _05c2ed_jump
		jbe    _05c55f_jump
		cmp    $0x000035,%ax
		jbe    _05c527_jump
		cmp    $0x00003c,%ax
		jb     _05c18d_jump
		jmp    _05c626_jump

	_05c2ed_jump:
		cmp    $0x000032,%ax
		jb     _05c18d_jump
		jbe    _05c194_case
		cmpw   $0x000000,0x000050(%esi)
		je     _05c194_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _071068_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000007,0x000042(%esi)
		call   _05b900_func
		decw   0x000050(%esi)
		jmp    _05c194_case

	_05c335_jump:
		cmp    $0x00000d,%ax
		jb     _05c38b_jump
		jbe    _05c194_case
		cmp    $0x000024,%ax
		jb     _05c36c_jump
		jbe    _05c4f0_jump
		cmp    $0x000026,%ax
		jb     _05c18d_jump
		jbe    _05c597_jump
		cmp    $0x000028,%ax
		je     _05c51b_jump
		jmp    _05c18d_jump

	_05c36c_jump:
		cmp    $0x00000f,%ax
		jb     _05c18d_jump
		jbe    _05c194_case
		cmp    $0x00001b,%ax
		je     _05c194_case
		jmp    _05c18d_jump

	_05c38b_jump:
		cmp    $0x000006,%ax
		jb     _05c3b6_jump
		jbe    _05c597_jump
		cmp    $0x000008,%ax
		jb     _05c18d_jump
		jbe    _05c597_jump
		cmp    $0x000009,%ax
		je     _05c4c1_jump
		jmp    _05c18d_jump

	_05c3b6_jump:
		test   %ax,%ax
		jbe    _05c4c1_jump
		cmp    $0x000003,%ax
		je     _05c609_jump
		jmp    _05c18d_jump

	_05c3ce_jump:
		mov    %esi,%eax
		call   _0805a4_func
		jmp    _05c194_case

	_05c3da_jump:
		mov    0x000079(%esi),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _05c194_case
		and    $0x0000ff,%eax
		jmp    *%cs:_05bec8_switch(,%eax,4)

	_05c3f4_case:
		mov    %esi,%eax
		movb   $0x000002,0x000081(%esi)
		call   _01e4c4_func

	_05c402_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		testb  $0x000008,0x000085(%esi)
		je     _05c425_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _05c42f_jump

	_05c425_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_05c42f_jump:
		mov    %esi,%eax
		call   _065368_func
		mov    %esi,%eax
		call   _023dbc_func
		movw   $0x000000,0x000042(%esi)
		jmp    _05c194_case

	_05c448_case:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		mov    %esi,%eax
		call   _023dbc_func
		movw   $0x000000,0x000042(%esi)
		jmp    _05c194_case

	_05c465_jump:
		mov    %esi,%eax
		call   _05bbc0_func
		jmp    _05c194_case

	_05c471_jump:
		mov    %esi,%eax
		call   _05bc78_func
		jmp    _05c194_case

	_05c47d_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _05c194_case
		mov    $0x000001,%ebx
		mov    $0x000010,%edx
		mov    %esi,%eax
		call   _065368_func
		movb   $0x000000,0x000081(%esi)
		jmp    _05c194_case

	_05c4a5_jump:
		mov    0x000032(%esi),%edx
		mov    $0x0000bb,%eax
		sar    $0x000010,%edx
		call   _071068_func
		mov    %esi,%eax
		call   _07d10c_func
		jmp    _05c194_case

	_05c4c1_jump:
		mov    %esi,%eax
		call   _05bbe4_func
		jmp    _05c194_case

	_05c4cd_jump:
		cmpw   $0x000000,0x000042(%esi)
		je     _05c4e4_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _071068_func

	_05c4e4_jump:
		mov    %esi,%eax
		call   _05b530_func
		jmp    _05c194_case

	_05c4f0_jump:
		cmpw   $0x000000,0x000042(%esi)
		je     _05c507_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _071068_func

	_05c507_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _05b698_func
		jmp    _05c194_case

	_05c51b_jump:
		mov    %esi,%eax
		call   _05bcf8_func
		jmp    _05c194_case

	_05c527_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _05c194_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _071068_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _05b900_func
		decw   0x000050(%esi)
		jmp    _05c194_case

	_05c55f_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _05c194_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _071068_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _05b698_func
		decw   0x000050(%esi)
		jmp    _05c194_case

	_05c597_jump:
		mov    0x000064(%esi),%dx
		cmp    $0x000082,%dx
		jb     _05c5bf_jump
		jbe    _05c5eb_jump
		cmp    $0x0000a7,%dx
		jb     _05c5b6_jump
		jbe    _05c5d7_jump
		cmp    $0x0000b1,%dx
		je     _05c5e1_jump
		jmp    _05c5f8_jump

	_05c5b6_jump:
		cmp    $0x000086,%dx
		je     _05c5d7_jump
		jmp    _05c5f8_jump

	_05c5bf_jump:
		cmp    $0x000008,%dx
		jb     _05c5cf_jump
		jbe    _05c5d7_jump
		cmp    $0x000026,%dx
		je     _05c5eb_jump
		jmp    _05c5f8_jump

	_05c5cf_jump:
		cmp    $0x000006,%dx
		je     _05c5e1_jump
		jmp    _05c5f8_jump

	_05c5d7_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		jmp    _05c5f0_jump

	_05c5e1_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00008c,%eax
		jmp    _05c5f0_jump

	_05c5eb_jump:
		mov    0x000032(%esi),%edx
		xor    %eax,%eax

	_05c5f0_jump:
		sar    $0x000010,%edx
		call   _071068_func

	_05c5f8_jump:
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _05b900_func
		jmp    _05c194_case

	_05c609_jump:
		mov    %esi,%eax
		call   _05bcac_func
		jmp    _05c194_case

	_05c615_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _05c194_case

	_05c626_jump:
		mov    %esi,%eax
		call   _0278a4_func
		jmp    _05c194_case

	_05c632_jump:
		mov    %esi,%eax
		call   _05be6c_func
		jmp    _05c194_case

	_05c63e_jump:
		cmpb   $0x000002,0x000071(%esi)
		jne    _05c194_case
		cmpw   $0x000000,0x000042(%esi)
		jle    _05c194_case
		mov    $0x00001d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    _0b9320_data,%edx
		movw   $0x000000,0x000040(%esi)
		lea    0x000085(%esi),%eax
		mov    0x000028(%esi),%ebx
		movw   $0x000000,0x000042(%esi)
		cmp    %ebx,%edx
		setg   %dl
		and    $0x0000ff,%edx
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)
		jmp    _05c194_case

	_05c69f_jump:
		cmpw   $0x000006,0x000042(%esi)
		jle    _05c6ac_jump
		movw   $0x000006,0x000042(%esi)

	_05c6ac_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _05c6bd_jump
		movw   $0x00fff8,0x000042(%esi)

	_05c6bd_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c6c8_func:
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x00000a,0x000066(%eax)
		jne    _05c75b_jump
		cmpw   $0x000017,0x000064(%edx)
		jne    _05c6e6_jump
		cmpb   $0x000006,_0b9369_data
		je     _05c6ed_jump

	_05c6e6_jump:
		mov    $0x000001,%eax
		jmp    _05c6ef_jump

	_05c6ed_jump:
		xor    %eax,%eax

	_05c6ef_jump:
		test   %eax,%eax
		je     _05c75b_jump
		mov    0x000064(%edx),%cx
		cmp    $0x000034,%cx
		jne    _05c707_jump
		andb   $0x0000fb,0x000085(%edx)
		pop    %edx
		pop    %ecx
		ret    

	_05c707_jump:
		xor    %eax,%eax
		mov    %cx,%ax
		testb  $0x000002,_0a529f_data(,%eax,4)
		je     _05c75b_jump
		testb  $0x000040,0x000085(%edx)
		jne    _05c734_jump
		mov    %edx,%eax
		call   _07cbf8_func
		movw   $0x000000,0x000042(%edx)
		mov    0x000042(%edx),%ax
		mov    %ax,0x000040(%edx)

	_05c734_jump:
		xor    %eax,%eax
		mov    0x000064(%edx),%ax
		testb  $0x000002,_0a52a0_data(,%eax,4)
		je     _05c75b_jump
		mov    _0c3164_data,%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%edx)
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%edx)

	_05c75b_jump:
		pop    %edx
		pop    %ecx
		ret    



_05c760_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpw   $0x000000,0x000040(%eax)
		jne    _05c77d_jump
		cmpw   $0x000000,0x000042(%eax)
		je     _05c939_jump

	_05c77d_jump:
		xor    %ebx,%ebx
		mov    0x000064(%esi),%bx
		mov    0x000040(%esi),%dx
		mov    _0a529f_data(,%ebx,4),%cl
		mov    0x000042(%esi),%ax
		test   $0x000080,%cl
		je     _05c7c8_jump
		cmpb   $0x000001,0x000081(%esi)
		jne    _05c7c8_jump
		cmpb   $0x000000,_0c335e_data
		jne    _05c7c8_jump
		test   %dx,%dx
		jle    _05c7b3_jump
		mov    %edx,%ebx
		dec    %ebx
		jmp    _05c7b6_jump

	_05c7b3_jump:
		mov    %edx,%ebx
		inc    %ebx

	_05c7b6_jump:
		mov    %bx,0x000040(%esi)
		cmpw   $0x000000,0x000040(%esi)
		jne    _05c7c8_jump
		movb   $0x000000,0x000081(%esi)

	_05c7c8_jump:
		cmpw   $0x00005e,0x000064(%esi)
		jne    _05c7fd_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		mov    _0c1148_data,%ecx
		mov    0x000028(%esi),%ebp
		add    %eax,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		sar    $0x000004,%ebx
		add    %eax,%ebp
		mov    %ebx,0x00002c(%esi)
		mov    %ecx,_0c1148_data
		mov    %ebp,0x000028(%esi)
		jmp    _05c8fe_jump

	_05c7fd_jump:
		xor    %ebx,%ebx
		mov    0x000064(%esi),%bx
		testb  $0x000020,_0a529e_data(,%ebx,4)
		je     _05c818_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		call   _05a4ac_func

	_05c818_jump:
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		testb  $0x000010,_0a529e_data(,%eax,4)
		je     _05c83b_jump
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		call   _05a4ac_func
		mov    %eax,%edi
		jmp    _05c83d_jump

	_05c83b_jump:
		mov    %edx,%edi

	_05c83d_jump:
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		testb  $0x000040,_0a529f_data(,%eax,4)
		je     _05c8e4_jump
		mov    0x000028(%esi),%cx
		mov    0x00002c(%esi),%bx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006d(%esi),%dl
		mov    0x00006c(%esi),%al
		add    %ebx,%edx
		add    %ecx,%eax
		sub    $0x000008,%edx
		mov    %eax,%ecx
		movswl %dx,%ebx
		cwtl   
		sar    $0x000004,%ebx
		sar    $0x000004,%eax
		movswl %bx,%ebx
		cwtl   
		mov    %ebx,%edx
		add    %edi,%ecx
		call   _01ea94_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		jne    _05c8ad_jump
		movswl %cx,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01ea94_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		jne    _05c8d8_jump

	_05c8ad_jump:
		mov    _0c313a_data,%ebx
		sar    $0x000010,%ebx
		add    $0x000130,%ebx
		movswl %cx,%eax
		mov    %ebx,%ecx
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jl     _05c8d2_jump
		cmp    %ecx,%eax
		jg     _05c8d2_jump
		mov    $0x000001,%eax
		jmp    _05c8d4_jump

	_05c8d2_jump:
		xor    %eax,%eax

	_05c8d4_jump:
		test   %eax,%eax
		jne    _05c8e4_jump

	_05c8d8_jump:
		mov    0x000040(%esi),%cx
		neg    %ecx
		neg    %edi
		mov    %cx,0x000040(%esi)

	_05c8e4_jump:
		movswl %di,%eax
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00002c(%esi),%ebx
		sar    $0x000010,%eax
		mov    %edx,0x000028(%esi)
		add    %eax,%ebx
		mov    %ebx,0x00002c(%esi)

	_05c8fe_jump:
		lea    0x000086(%esi),%ebx
		test   %di,%di
		jne    _05c910_jump
		cmpw   $0x000000,(%esp)
		je     _05c917_jump

	_05c910_jump:
		mov    $0x000001,%eax
		jmp    _05c919_jump

	_05c917_jump:
		xor    %eax,%eax

	_05c919_jump:
		mov    (%ebx),%cl
		and    $0x0000fe,%cl
		and    $0x000001,%al
		mov    %cl,(%ebx)
		mov    %cl,%ch
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,(%ebx)
		call   _05c6c8_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c939_jump:
		mov    0x000086(%eax),%ah
		and    $0x0000fe,%ah
		mov    %ah,0x000086(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c954_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _01e500_func
		test   %ax,%ax
		je     _05c97c_jump
		xor    %ebx,%ebx
		mov    0x000064(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0a63dc_data(%ebx)

	_05c97c_jump:
		pop    %edx
		pop    %ebx
		mov    %eax,%eax
		ret    



_05c984_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		testb  $0x000002,_0a529d_data(,%eax,4)
		je     _05c9a1_jump
		mov    %edx,%eax
		call   _026ad0_func

	_05c9a1_jump:
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		testb  $0x000020,_0a529d_data(,%eax,4)
		je     _05c9ba_jump
		mov    %edx,%eax
		call   _02a680_func

	_05c9ba_jump:
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		testb  $0x000001,_0a529f_data(,%eax,4)
		je     _05c9d3_jump
		mov    %edx,%eax
		call   _01ec9c_func

	_05c9d3_jump:
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		testb  $0x000080,_0a529e_data(,%eax,4)
		je     _05c9ee_jump
		mov    %edx,%eax
		call   _0652ec_func
		jmp    _05c9f2_jump

	_05c9ee_jump:
		movb   $0x00001e,0x000074(%edx)

	_05c9f2_jump:
		xor    %ebx,%ebx
		mov    _0dda32_data,%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0a63d0_data(%ebx)
		cmpb   $0x000002,0x000071(%edx)
		jne    _05ca1c_jump
		mov    %edx,%eax
		call   _05bee4_func

	_05ca1c_jump:
		testb  $0x000020,0x000085(%edx)
		je     _05ca2e_jump
		mov    %edx,%eax
		call   _029c64_func
		jmp    _05ca35_jump

	_05ca2e_jump:
		movl   $0x002710,0x000054(%edx)

	_05ca35_jump:
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		testb  $0x000040,_0a529e_data(,%eax,4)
		je     _05ca4e_jump
		mov    %edx,%eax
		call   _068b00_func

	_05ca4e_jump:
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		testb  $0x000020,_0a529d_data(,%eax,4)
		je     _05ca67_jump
		mov    %edx,%eax
		call   _05c954_func

	_05ca67_jump:
		pop    %edx
		pop    %ebx
		ret    



_05ca6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    $0xffffffff,%ebx
		xor    %edx,%edx
		mov    _0c3160_data,%eax
		mov    %dx,_0c3012_data
		sar    $0x000010,%eax
		mov    %bx,_0c2f4a_data
		mov    %eax,0x000004(%esp)
		mov    _0c3164_data,%ebx
		mov    0x000004(%esp),%edx
		sar    $0x000010,%ebx
		add    $0x000528,%eax
		mov    %ebx,(%esp)
		sub    %edx,%eax
		mov    (%esp),%ecx
		sar    %eax
		add    $0x0004b0,%ebx
		mov    %eax,0x00000c(%esp)
		add    %edx,%eax
		sub    %ecx,%ebx
		sub    $0x0001f4,%eax
		sar    %ebx
		mov    %eax,0x000004(%esp)
		lea    -0x0001f4(%ecx,%ebx,1),%eax
		mov    %eax,(%esp)
		mov    _0b9418_data,%eax
		movswl (%eax),%ecx
		mov    %ecx,%eax
		xor    %edi,%edi
		shl    $0x000004,%eax
		mov    %ebx,0x000010(%esp)
		add    %ecx,%eax
		mov    _0b9410_data,%ecx
		shl    $0x000003,%eax
		xor    %ebx,%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		jmp    _05cb1f_jump

	_05cafb_jump:
		movl   $0x000000,0x00001c(%ecx)
		mov    _0b9418_data,%ecx
		movswl 0x000002(%ecx,%eax,1),%ecx
		imul   $0x000088,%ecx,%ecx
		mov    _0b9410_data,%esi
		add    $0x000002,%eax
		inc    %ebx
		add    %esi,%ecx

	_05cb1f_jump:
		mov    _0b941a_data,%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%ebx
		jl     _05cafb_jump
		mov    $_0c2f4a_data,%esi
		mov    _0c3010_data,%eax
		dec    %ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000014(%esp)
		add    %eax,%eax
		lea    0x000000(%ebp,%ebp,1),%ecx
		add    %eax,%esi
		mov    _0b9418_data,%eax
		movswl (%ecx,%eax,1),%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9410_data,%ebx
		shl    $0x000003,%eax
		mov    %esi,0x000008(%esp)
		add    %eax,%ebx
		test   %ebp,%ebp
		jl     _05cc3f_jump

	_05cb6d_jump:
		cmpl   $0x000000,0x00001c(%ebx)
		jne    _05cc13_jump
		mov    0x000004(%esp),%edx
		mov    0x000028(%ebx),%eax
		sub    %edx,%eax
		mov    0x00000c(%esp),%ebp
		test   %eax,%eax
		jge    _05cb8a_jump
		neg    %eax

	_05cb8a_jump:
		cmp    %ebp,%eax
		jge    _05cbd0_jump
		mov    (%esp),%edx
		mov    0x00002c(%ebx),%eax
		sub    %edx,%eax
		mov    0x000010(%esp),%ebp
		test   %eax,%eax
		jge    _05cba0_jump
		neg    %eax

	_05cba0_jump:
		cmp    %ebp,%eax
		jge    _05cbd0_jump
		mov    _0c3166_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0c3162_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _05a924_func
		jmp    _05cc13_jump

	_05cbd0_jump:
		xor    %eax,%eax
		mov    0x000064(%ebx),%ax
		testb  $0x000010,_0a529d_data(,%eax,4)
		je     _05cc0c_jump
		mov    _0c3166_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0c3162_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _05a924_func
		jmp    _05cc13_jump

	_05cc0c_jump:
		movl   $0x000000,0x000024(%ebx)

	_05cc13_jump:
		mov    _0b9418_data,%eax
		movswl -0x000002(%ecx,%eax,1),%eax
		imul   $0x000088,%eax,%eax
		mov    0x000014(%esp),%edx
		mov    _0b9410_data,%ebx
		dec    %edx
		sub    $0x000002,%ecx
		mov    %edx,0x000014(%esp)
		add    %eax,%ebx
		test   %ecx,%ecx
		jge    _05cb6d_jump

	_05cc3f_jump:
		call   _060e90_func
		mov    _0b941a_data,%ebp
		sar    $0x000010,%ebp
		dec    %ebp
		mov    _0b9418_data,%eax
		lea    0x000000(,%ebp,2),%ecx
		movswl (%ecx,%eax,1),%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9410_data,%ebx
		shl    $0x000003,%eax
		add    %ebx,%eax
		test   %ebp,%ebp
		jl     _05cd01_jump
		mov    %ecx,%ebx

	_05cc7a_jump:
		cmpl   $0x000000,0x000024(%eax)
		je     _05ccc2_jump
		mov    _0c3162_data,%dx
		mov    0x000028(%eax),%cx
		sub    %edx,%ecx
		add    $0x000008,%ecx
		mov    %cx,0x000036(%eax)
		mov    _0c3166_data,%dx
		mov    0x00002c(%eax),%cx
		sub    %edx,%ecx
		mov    %cx,0x000038(%eax)
		add    $0x000002,%esi
		mov    0x000034(%eax),%ax
		inc    %edi
		mov    %ax,-0x000002(%esi)
		cmp    $0x000064,%edi
		jle    _05ccdd_jump
		mov    $_0a2978_data,%eax
		call   _020150_func
		jmp    _05ccdd_jump

	_05ccc2_jump:
		xor    %ecx,%ecx
		mov    0x000064(%eax),%cx
		testb  $0x000001,_0a529d_data(,%ecx,4)
		je     _05ccdd_jump
		mov    0x000032(%eax),%eax
		sar    $0x000010,%eax
		call   _0200e0_func

	_05ccdd_jump:
		mov    _0b9418_data,%eax
		movswl -0x000002(%ebx,%eax,1),%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ecx
		sub    $0x000002,%ebx
		dec    %ebp
		add    %ecx,%eax
		test   %ebx,%ebx
		jge    _05cc7a_jump

	_05cd01_jump:
		mov    0x000008(%esp),%ebx
		movw   $0x00ffff,(%esi)
		sub    %ebx,%esi
		mov    _0c3010_data,%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		mov    %ax,_0c3012_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05cd2c_func:
		push   %edx
		mov    _0c2f40_data,%dx
		inc    %edx
		mov    %dx,_0c2f40_data
		cmp    $0x000063,%dx
		jle    _05cd4b_jump
		movw   $0x000063,_0c2f40_data

	_05cd4b_jump:
		mov    _0c2f49_data,%ah
		cmp    $0x000004,%ah
		jne    _05cd5e_jump
		mov    %ah,_0b9372_data
		pop    %edx
		ret    

	_05cd5e_jump:
		movb   $0x000002,_0b9372_data
		pop    %edx
		ret    



_05cd68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    _0c30f4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05cddf_jump
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		add    %eax,%edx
		mov    0x000083(%edx),%ah
		test   %ah,%ah
		jbe    _05cda2_jump
		mov    %ah,%bl
		movb   $0x000000,0x00006f(%edx)
		dec    %bl
		mov    %bl,0x000083(%edx)

	_05cda2_jump:
		mov    %edx,%eax
		call   _05b0d8_func
		mov    %edx,%eax
		call   _01d740_func
		test   %al,%al
		je     _05cddf_jump
		mov    $0xffffffff,%ebx
		mov    _0c3130_data,%cx
		mov    %bx,_0c30f6_data
		cmp    $0x000003,%cx
		je     _05cdd8_jump
		cmp    $0x000004,%cx
		je     _05cdd8_jump
		call   _05cd2c_func

	_05cdd8_jump:
		andb   $0x0000fb,0x000085(%edx)

	_05cddf_jump:
		mov    _0c310a_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05ce43_jump
		mov    %edx,%eax
		shl    $0x000004,%edx
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    0x000083(%edx),%cl
		test   %cl,%cl
		jbe    _05ce17_jump
		mov    %cl,%ch
		movb   $0x000000,0x00006f(%edx)
		dec    %ch
		mov    %ch,0x000083(%edx)

	_05ce17_jump:
		mov    %edx,%eax
		call   _05b0d8_func
		mov    %edx,%eax
		call   _01d740_func
		test   %al,%al
		je     _05ce43_jump
		mov    0x000085(%edx),%al
		mov    $0xffffffff,%edi
		and    $0x0000fb,%al
		mov    %di,_0c310c_data
		mov    %al,0x000085(%edx)

	_05ce43_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ce48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c2f48_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9410_data,%ebx
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    _0c3012_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _05ceb4_jump

	_05ce75_jump:
		mov    0x000064(%eax),%si
		cmp    $0x0000cc,%si
		je     _05ce8c_jump
		cmp    $0x0000cd,%si
		je     _05ce8c_jump
		call   _05b0d8_func

	_05ce8c_jump:
		inc    %edx
		movswl %dx,%eax
		mov    _0c2f48_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ebx
		mov    _0c3012_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _05ce75_jump

	_05ceb4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05cebc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c30f4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05ceda_jump
		mov    _0c310a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05cedf_jump

	_05ceda_jump:
		call   _05cd68_func

	_05cedf_jump:
		cmpb   $0x000000,_0c33b2_data
		je     _05ceff_jump
		mov    $0x000007,%edx
		mov    _0c108c_data,%eax
		call   _024cb0_func
		xor    %dl,%dl
		mov    %dl,_0c33b2_data

	_05ceff_jump:
		mov    _0c2f48_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		mov    _0c3012_data,%cx
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _05d006_jump

	_05cf2c_jump:
		mov    0x000064(%edx),%ax
		mov    %ax,_0dda32_data
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		testb  $0x000008,_0a52a0_data(,%eax,4)
		jne    _05cf85_jump
		cmp    $0x0000a1,%ax
		jne    _05cf54_jump
		cmpb   $0x000017,0x000070(%edx)
		je     _05cf85_jump

	_05cf54_jump:
		cmpw   $0x00010b,_0dda32_data
		jne    _05cf65_jump
		cmpb   $0x000001,0x000070(%edx)
		je     _05cf85_jump

	_05cf65_jump:
		cmpw   $0x000053,_0dda32_data
		jne    _05cf75_jump
		cmpb   $0x000001,0x000070(%edx)
		je     _05cf85_jump

	_05cf75_jump:
		cmpw   $0x000021,_0dda32_data
		jne    _05cf8c_jump
		cmpb   $0x000023,0x000070(%edx)
		je     _05cf8c_jump

	_05cf85_jump:
		mov    %edx,%eax
		call   _01f028_func

	_05cf8c_jump:
		cmpw   $0x0000a1,_0dda32_data
		je     _05cfda_jump
		cmpl   $0x000000,0x000024(%edx)
		je     _05cfda_jump
		mov    %edx,%eax
		call   _05c984_func
		xor    %eax,%eax
		mov    _0dda32_data,%ax
		testb  $0x000080,_0a529d_data(,%eax,4)
		jne    _05cfda_jump
		cmpb   $0x000000,0x00007a(%edx)
		jne    _05cfda_jump
		xor    %eax,%eax
		mov    0x000071(%edx),%al
		mov    0x00000c(%edx),%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    (%eax),%eax
		mov    0x000070(%edx),%cl
		testb  $0x000008,0x000007(%eax,%ecx,8)
		je     _05cfda_jump
		incb   0x00007a(%edx)

	_05cfda_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0c2f48_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		mov    _0c3012_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jl     _05cf2c_jump

	_05d006_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d00c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c2f48_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		mov    _0b9410_data,%eax
		shl    $0x000003,%ebx
		add    %ebx,%eax
		mov    _0c3012_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _05d064_jump

	_05d037_jump:
		inc    %edx
		call   _05c760_func
		movswl %dx,%eax
		mov    _0c2f48_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ebx
		mov    _0c3012_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _05d037_jump

	_05d064_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d068_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _0c2f48_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9410_data,%ebx
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    _0c3012_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _05d0c5_jump

	_05d099_jump:
		inc    %edx
		call   _01e53c_func
		movswl %dx,%eax
		mov    _0c2f48_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%ebx
		mov    _0b9410_data,%eax
		mov    _0c3012_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _05d099_jump

	_05d0c5_jump:
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05d1ab_jump
		mov    %eax,%ebx
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9410_data,%esi
		shl    $0x000003,%eax
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		je     _05d1ab_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0b9365_data,%al
		mov    0x000078(%esi),%dl
		sub    %eax,%edx
		mov    _0b9324_data,%ax
		sub    %edx,%eax
		lea    0x000004(%esp),%ecx
		mov    %ax,0x000004(%esp)
		mov    %esp,%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000078(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0b9365_data,%al
		sub    %eax,%edx
		mov    0x000064(%esi),%di
		mov    %edx,_0b9324_data
		cmp    $0x0000fe,%di
		jne    _05d1a1_jump
		xor    %eax,%eax
		mov    _0b9320_data,%edx
		mov    _0b9364_data,%al
		add    %eax,%edx
		mov    0x000006(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		sub    %eax,%edx
		mov    0x000077(%esi),%eax
		sar    $0x000018,%eax
		imul   %edx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _05d189_jump
		sar    %cl,%ax
		jmp    _05d192_jump

	_05d189_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05d192_jump:
		mov    _0b9324_data,%ebx
		cwtl   
		sub    %eax,%ebx
		mov    %ebx,_0b9324_data

	_05d1a1_jump:
		mov    $_0b92f8_data,%eax
		call   _01e53c_func

	_05d1ab_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05d1b4_switch:
		.long   _05d370_case
		.long   _05d43a_case
		.long   _05d20d_case
		.long   _05d2bd_case




_05d1c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0b937d_data,%dl
		xor    %ebx,%ebx
		test   $0x000008,%dl
		je     _05d1e2_jump
		mov    _0b9320_data,%si
		add    $0x000046,%esi
		jmp    _05d1ec_jump

	_05d1e2_jump:
		mov    _0b9320_data,%si
		add    $0x00003a,%esi

	_05d1ec_jump:
		mov    _0b9324_data,%di
		add    $0x000020,%edi
		cmp    $0x000003,%ax
		ja     _05d4f8_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_05d1b4_switch(,%eax,4)

	_05d20d_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _05d4f8_jump
		xor    %eax,%eax
		sar    $0x000004,%ecx
		mov    _0c1124_data,%ax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c112c_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_0a525d_data(%edx)
		je     _05d264_jump
		mov    $0x000001,%ebx

	_05d264_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c112c_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_0a525d_data(%edx)
		je     _05d28c_jump
		mov    $0x000001,%ebx

	_05d28c_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c112c_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _05d4f8_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d2bd_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _05d4f8_jump
		xor    %eax,%eax
		add    $0x000040,%ecx
		mov    _0c1124_data,%ax
		sar    $0x000004,%ecx
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c112c_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_0a525d_data(%edx)
		je     _05d317_jump
		mov    $0x000001,%ebx

	_05d317_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c112c_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_0a525d_data(%edx)
		je     _05d33f_jump
		mov    $0x000001,%ebx

	_05d33f_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c112c_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _05d4f8_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d370_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _05d4f8_jump
		movswl %di,%eax
		xor    %edx,%edx
		add    %esi,%eax
		mov    _0c1124_data,%dx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		dec    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c112c_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_0a525d_data(%edx)
		je     _05d3cb_jump
		mov    $0x000001,%ebx

	_05d3cb_jump:
		xor    %edx,%edx
		mov    _0c1124_data,%dx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c112c_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_0a525d_data(%edx)
		je     _05d3fd_jump
		mov    $0x000001,%ebx

	_05d3fd_jump:
		xor    %edx,%edx
		mov    _0c1124_data,%dx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c112c_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _05d4f8_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d43a_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _05d4f8_jump
		movswl %di,%eax
		xor    %edx,%edx
		add    %esi,%eax
		mov    _0c1124_data,%dx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		lea    0x000003(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c112c_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _05d496_jump
		mov    $0x000001,%ebx

	_05d496_jump:
		xor    %eax,%eax
		mov    _0c1124_data,%ax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0c112c_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _05d4c8_jump
		mov    $0x000001,%ebx

	_05d4c8_jump:
		xor    %eax,%eax
		mov    _0c1124_data,%ax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c112c_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _05d4f8_jump
		mov    $0x000001,%ebx

	_05d4f8_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d500_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0c3130_data
		jne    _05d526_jump
		mov    $0x000002,%eax
		call   _05d1c4_func
		test   %ax,%ax
		je     _05d526_jump
		xor    %ebx,%ebx
		mov    %bx,_0b933a_data

	_05d526_jump:
		xor    %eax,%eax
		mov    _0b9369_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0b9304_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0b9368_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _05d554_jump
		testb  $0x000002,_0c3348_data
		je     _05d55b_jump

	_05d554_jump:
		mov    $0x000028,%eax
		jmp    _05d560_jump

	_05d55b_jump:
		mov    $0x000019,%eax

	_05d560_jump:
		mov    _0b9338_data,%edx
		mov    _0b9324_data,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		mov    _0c3116_data,%edx
		mov    %ebx,_0b9324_data
		sar    $0x000010,%edx
		movswl %ax,%ebx
		lea    -0x000014(%edx),%eax
		mov    _0b9324_data,%ecx
		sub    %ebx,%eax
		cmp    %ecx,%eax
		jle    _05d5c7_jump
		mov    %eax,_0b9324_data
		mov    _0b9340_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    %cx,_0b933a_data
		cmp    $0xffffffff,%eax
		je     _05d5c7_jump
		mov    _0b9352_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		cmp    $0xffffffff,%eax
		sete   %al
		and    $0x0000ff,%eax
		call   _02a364_func

	_05d5c7_jump:
		mov    $_0b92f8_data,%eax
		xor    %esi,%esi
		call   _01e53c_func
		mov    %si,_0c314e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d5e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpw   $0x000002,_0c3130_data
		jne    _05d606_jump
		mov    $0x000003,%eax
		call   _05d1c4_func
		test   %ax,%ax
		je     _05d606_jump
		xor    %ebx,%ebx
		mov    %bx,_0b933a_data

	_05d606_jump:
		mov    _0b9338_data,%eax
		mov    _0b9324_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    $_0b92f8_data,%eax
		mov    %edx,_0b9324_data
		call   _01e53c_func
		cmpb   $0x000002,_0b9369_data
		jne    _05d682_jump
		mov    _0c3120_data,%eax
		mov    _0c3164_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0b9338_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _05d679_jump
		cmpw   $0x000064,_0b9330_data
		jge    _05d668_jump
		xor    %edi,%edi
		mov    %di,_0c314e_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d668_jump:
		mov    _0b933a_data,%ax
		mov    %ax,_0c314e_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d679_jump:
		xor    %ecx,%ecx
		mov    %cx,_0c314e_data

	_05d682_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d688_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000003,_0b9369_data
		jne    _05d6a3_jump
		cmpb   $0x000017,_0b9368_data
		je     _05db2a_jump

	_05d6a3_jump:
		mov    _0c3178_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05d8b4_jump
		mov    _0c313c_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0b9365_data,%al
		sar    %edx
		sub    %eax,%edx
		mov    _0b9369_data,%bl
		add    $0x000072,%edx
		cmp    $0x000002,%bl
		setne  %al
		and    $0x0000ff,%eax
		jne    _05d6f8_jump
		cmpb   $0x00000f,_0b9368_data
		jne    _05d830_jump
		cmpb   $0x000000,_0c33c6_data
		je     _05d830_jump

	_05d6f8_jump:
		cmpw   $0x000000,_0c30fa_data
		jne    _05d830_jump
		cmpw   $0x0000ff,_0c314e_data
		jne    _05d71f_jump
		cmpw   $0x000000,_0c3112_data
		je     _05d7f4_jump

	_05d71f_jump:
		mov    _0b9330_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _05d735_jump
		sar    %cl,%ax
		jmp    _05d73e_jump

	_05d735_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05d73e_jump:
		mov    %ax,_0c314e_data
		mov    _0b9338_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05d752_jump
		neg    %eax

	_05d752_jump:
		mov    %eax,%ebx
		mov    _0c314c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05d762_jump
		neg    %eax

	_05d762_jump:
		cmp    %eax,%ebx
		jg     _05d8b4_jump
		mov    _0b9338_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05d778_jump
		neg    %eax

	_05d778_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _05d785_jump
		mov    %ebx,%eax

	_05d785_jump:
		mov    _0c314e_data,%bx
		test   %bx,%bx
		jle    _05d7ad_jump
		movswl %ax,%ebx
		mov    _0c314c_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _05d7a2_jump
		mov    %ebx,%eax

	_05d7a2_jump:
		mov    %ax,_0c314e_data
		jmp    _05d8b4_jump

	_05d7ad_jump:
		jge    _05d7cd_jump
		movswl %ax,%ebx
		mov    _0c314c_data,%eax
		neg    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _05d7c2_jump
		mov    %ebx,%eax

	_05d7c2_jump:
		mov    %ax,_0c314e_data
		jmp    _05d8b4_jump

	_05d7cd_jump:
		test   %dx,%dx
		jle    _05d7e0_jump
		movw   $0x000001,_0c314e_data
		jmp    _05d8b4_jump

	_05d7e0_jump:
		jge    _05d8b4_jump
		movw   $0x00ffff,_0c314e_data
		jmp    _05d8b4_jump

	_05d7f4_jump:
		cmpb   $0x000001,_0b9369_data
		je     _05d8b4_jump
		mov    _0b932e_data,%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    $0x000030,%eax
		cmp    %eax,%ebx
		jge    _05d822_jump
		movw   $0x00fffc,_0c314e_data
		jmp    _05d8b4_jump

	_05d822_jump:
		xor    %edi,%edi
		mov    %di,_0c314e_data
		jmp    _05d8b4_jump

	_05d830_jump:
		mov    _0c3166_data,%ax
		cmp    _0c3122_data,%ax
		je     _05d863_jump
		mov    _0b932e_data,%ebx
		mov    _0b9338_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _05d863_jump
		cmpw   $0x000000,_0b933a_data
		jg     _05d895_jump

	_05d863_jump:
		mov    _0c3166_data,%ax
		cmp    _0c3118_data,%ax
		je     _05d8b4_jump
		xor    %eax,%eax
		mov    _0b9370_data,%al
		mov    _0b932e_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		sub    $0x000010,%eax
		cmp    %eax,%edx
		jg     _05d8b4_jump
		cmpw   $0x000000,_0b933a_data
		jge    _05d8b4_jump

	_05d895_jump:
		mov    _0b933a_data,%dx
		cmp    $0x000010,%dx
		jg     _05d8ab_jump
		mov    %dx,_0c314e_data
		jmp    _05d8b4_jump

	_05d8ab_jump:
		xor    %ebx,%ebx
		mov    %bx,_0c314e_data

	_05d8b4_jump:
		mov    _0c3176_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05dabb_jump
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0b9364_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    %edx,%ebx
		mov    _0c3168_data,%dx
		sub    $0x000030,%ebx
		add    $0x000030,%eax
		sub    %edx,%ebx
		mov    _0c316e_data,%dx
		mov    _0c3112_data,%cx
		add    %eax,%edx
		test   %cx,%cx
		jg     _05d909_jump
		mov    _0b9338_data,%si
		test   %si,%si
		jle    _05d94e_jump

	_05d909_jump:
		mov    _0b932e_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _05d91d_jump
		sar    %cl,%ax
		jmp    _05d926_jump

	_05d91d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05d926_jump:
		mov    _0a5256_data,%cx
		cmp    %cx,%ax
		jge    _05d940_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_0a5256_data
		jmp    _05da22_jump

	_05d940_jump:
		jle    _05da22_jump
		mov    %ecx,%edi
		inc    %edi
		jmp    _05da1b_jump

	_05d94e_jump:
		test   %cx,%cx
		jl     _05d958_jump
		test   %si,%si
		jge    _05d99a_jump

	_05d958_jump:
		mov    _0b932e_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _05d96c_jump
		sar    %cl,%ax
		jmp    _05d975_jump

	_05d96c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05d975_jump:
		mov    _0a5256_data,%cx
		cmp    %cx,%ax
		jle    _05d98f_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_0a5256_data
		jmp    _05da22_jump

	_05d98f_jump:
		jge    _05da22_jump
		jmp    _05da18_jump

	_05d99a_jump:
		mov    _0b937d_data,%al
		test   $0x000008,%al
		je     _05d9de_jump
		mov    _0b932e_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _05d9b7_jump
		sar    %cl,%ax
		jmp    _05d9c0_jump

	_05d9b7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05d9c0_jump:
		mov    _0a5256_data,%cx
		cmp    %cx,%ax
		jge    _05d9d7_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_0a5256_data
		jmp    _05da22_jump

	_05d9d7_jump:
		jle    _05da22_jump
		mov    %ecx,%edi
		inc    %edi
		jmp    _05da1b_jump

	_05d9de_jump:
		test   $0x000008,%al
		jne    _05da22_jump
		mov    _0b932e_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _05d9f6_jump
		sar    %cl,%ax
		jmp    _05d9ff_jump

	_05d9f6_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05d9ff_jump:
		mov    _0a5256_data,%cx
		cmp    %cx,%ax
		jle    _05da16_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_0a5256_data
		jmp    _05da22_jump

	_05da16_jump:
		jge    _05da22_jump

	_05da18_jump:
		mov    %ecx,%edi
		dec    %edi

	_05da1b_jump:
		mov    %di,_0a5256_data

	_05da22_jump:
		cmpb   $0x000000,_0c33a9_data
		je     _05da5a_jump
		mov    _0a5254_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05da39_jump
		neg    %eax

	_05da39_jump:
		cmp    $0x000004,%eax
		jle    _05da5a_jump
		cmpw   $0x000000,_0a5256_data
		jle    _05da4f_jump
		mov    $0x000004,%eax
		jmp    _05da54_jump

	_05da4f_jump:
		mov    $0xfffffffc,%eax

	_05da54_jump:
		mov    %ax,_0a5256_data

	_05da5a_jump:
		mov    $0x000002,%cl
		mov    _0a5256_data,%ax
		test   %ax,%ax
		js     _05da6c_jump
		sar    %cl,%ax
		jmp    _05da75_jump

	_05da6c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05da75_jump:
		mov    _0c3148_data,%si
		add    %eax,%esi
		mov    _0b932e_data,%di
		mov    %si,_0c3148_data
		cmp    %di,%dx
		jle    _05da9b_jump
		cmpw   $0x000000,_0b9338_data
		jl     _05daae_jump

	_05da9b_jump:
		cmp    _0b932e_data,%bx
		jge    _05dabb_jump
		cmpw   $0x000000,_0b9338_data
		jle    _05dabb_jump

	_05daae_jump:
		mov    _0b9338_data,%ax
		add    %ax,_0c3148_data

	_05dabb_jump:
		mov    _0c3178_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05db2a_jump
		mov    _0b9340_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		je     _05db2a_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000064(%edx),%ax
		testb  $0x000020,_0a529e_data(,%eax,4)
		je     _05db0b_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _05a4ac_func
		add    %ax,_0c314e_data
		jmp    _05db1f_jump

	_05db0b_jump:
		mov    _0c314e_data,%si
		mov    0x000042(%edx),%ax
		add    %eax,%esi
		mov    %si,_0c314e_data

	_05db1f_jump:
		mov    0x00004c(%edx),%ax
		add    %ax,_0c314e_data

	_05db2a_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05db30_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0c3130_data
		jne    _05db5c_jump
		mov    $0x000001,%eax
		call   _05d1c4_func
		test   %ax,%ax
		je     _05db5c_jump
		xor    %ebx,%ebx
		mov    %bx,_0b9338_data
		mov    %bx,_0c3112_data

	_05db5c_jump:
		mov    _0b9336_data,%eax
		mov    _0b9320_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0c302e_data,%ax
		cwtl   
		mov    %edx,_0b9320_data
		cmp    %edx,%eax
		jge    _05dba4_jump
		mov    %eax,_0b9320_data
		xor    %esi,%esi
		mov    _0b9369_data,%ah
		mov    %si,_0b9338_data
		mov    %si,_0c3112_data
		cmp    $0x000002,%ah
		je     _05dba4_jump
		mov    %si,_0b933a_data

	_05dba4_jump:
		mov    $_0b92f8_data,%eax
		call   _01e53c_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_05dbb4_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0c3130_data
		jne    _05dbdd_jump
		xor    %eax,%eax
		call   _05d1c4_func
		test   %ax,%ax
		je     _05dbdd_jump
		xor    %ebx,%ebx
		mov    %bx,_0b9338_data
		mov    %bx,_0c3112_data

	_05dbdd_jump:
		mov    _0b9336_data,%eax
		mov    _0b9320_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0c3176_data,%eax
		sar    $0x000010,%eax
		mov    %edx,_0b9320_data
		cmp    $0xffffffff,%eax
		jne    _05dc2b_jump
		mov    _0c3028_data,%ax
		cwtl   
		cmp    %edx,%eax
		jle    _05dc2b_jump
		mov    %eax,_0b9320_data
		xor    %esi,%esi
		mov    _0b9369_data,%ah
		mov    %si,_0c3112_data
		cmp    $0x000002,%ah
		je     _05dc2b_jump
		mov    %si,_0b933a_data

	_05dc2b_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_05dc30_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000002,_0c2f49_data
		jne    _05dc50_jump
		mov    _0b9372_data,%al
		xor    %bh,%bh
		mov    %al,_0c2f45_data
		mov    %bh,_0c2f44_data
		jmp    _05dc7b_jump

	_05dc50_jump:
		mov    _0b9372_data,%dl
		cmp    $0x000002,%dl
		ja     _05dc6b_jump
		xor    %bl,%bl
		mov    %dl,_0c2f45_data
		mov    %bl,_0c2f44_data
		jmp    _05dc7b_jump

	_05dc6b_jump:
		mov    $0x000002,%dh
		mov    %dh,_0c2f45_data
		sub    %dh,%dl
		mov    %dl,_0c2f44_data

	_05dc7b_jump:
		mov    _0c2f3e_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _05dc99_jump
		xor    %cl,%cl
		mov    %cl,_0c2f43_data
		mov    %cl,_0c2f42_data
		jmp    _05dcbb_jump

	_05dc99_jump:
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0c2f43_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0c2f42_data

	_05dcbb_jump:
		mov    _0c2f46_data,%al
		cmp    $0x000064,%al
		jbe    _05dccb_jump
		mov    $0x000064,%edx
		jmp    _05dccf_jump

	_05dccb_jump:
		xor    %edx,%edx
		mov    %al,%dl

	_05dccf_jump:
		xor    %ebx,%ebx
		mov    $0x00000a,%ecx
		mov    %dl,%bl
		mov    %dl,_0c2f46_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0c2f47_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0c2f48_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05dd08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c1d74_data,%esi
		mov    %eax,%ecx
		xor    %ah,%ah
		mov    %ah,(%esp)
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    %esi,%eax
		mov    (%edx,%eax,1),%ax
		cmp    0x000034(%ecx),%ax
		je     _05dd7a_jump

	_05dd36_jump:
		movswl %ax,%edx
		imul   $0x000088,%edx,%ebx
		mov    _0b9410_data,%eax
		add    %ebx,%eax
		mov    0x000064(%eax),%di
		cmp    $0x0000a4,%di
		je     _05dd65_jump
		cmp    $0x00004c,%di
		je     _05dd65_jump
		cmp    $0x00010a,%di
		je     _05dd65_jump
		cmp    $0x000113,%di
		jne    _05dd6b_jump

	_05dd65_jump:
		movb   $0x000001,(%esp)
		jmp    _05dd7a_jump

	_05dd6b_jump:
		mov    %esi,%eax
		mov    0x000034(%ecx),%bx
		mov    (%eax,%edx,2),%ax
		cmp    %bx,%ax
		jne    _05dd36_jump

	_05dd7a_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %esi,_0c1d74_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05dd90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c1d74_data,%esi
		mov    %eax,%ecx
		xor    %ah,%ah
		mov    0x000032(%ecx),%edx
		mov    %ah,(%esp)
		sar    $0x000010,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _05ddee_jump

	_05ddb7_jump:
		movswl %ax,%edx
		imul   $0x000088,%edx,%ebx
		mov    _0b9410_data,%eax
		add    %ebx,%eax
		mov    0x000064(%eax),%di
		cmp    $0x000116,%di
		je     _05ddd9_jump
		cmp    $0x000117,%di
		jne    _05dddf_jump

	_05ddd9_jump:
		movb   $0x000001,(%esp)
		jmp    _05ddee_jump

	_05dddf_jump:
		mov    %esi,%eax
		mov    0x000034(%ecx),%bx
		mov    (%eax,%edx,2),%ax
		cmp    %bx,%ax
		jne    _05ddb7_jump

	_05ddee_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %esi,_0c1d74_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05de04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    _0b9410_data,%edx
		mov    _0b9414_data,%ax
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _05df59_jump

	_05de2b_jump:
		mov    0x000064(%edx),%si
		cmp    $0x0000a4,%si
		je     _05de47_jump
		cmp    $0x00004c,%si
		je     _05de47_jump
		cmp    $0x000113,%si
		jne    _05df46_jump

	_05de47_jump:
		movswl %di,%eax
		lea    0x000000(,%eax,2),%ecx
		mov    _0c1d74_data,%eax
		mov    (%ecx,%eax,1),%ax
		mov    %edi,%ebx
		cmp    %di,%ax
		je     _05deb1_jump

	_05de61_jump:
		cmp    %di,%ax
		je     _05deb1_jump
		testb  $0x000004,0x000085(%edx)
		je     _05de77_jump
		cmpw   $0x0000a4,0x000064(%edx)
		je     _05de88_jump

	_05de77_jump:
		testb  $0x000004,0x000085(%edx)
		je     _05de9f_jump
		cmpw   $0x000113,0x000064(%edx)
		jne    _05de9f_jump

	_05de88_jump:
		movswl %ax,%ebx
		imul   $0x000088,%ebx,%ecx
		mov    _0b9410_data,%ebx
		andb   $0x0000fb,0x000085(%ecx,%ebx,1)

	_05de9f_jump:
		mov    _0c1d74_data,%ecx
		mov    %eax,%ebx
		cwtl   
		mov    (%ecx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _05de61_jump

	_05deb1_jump:
		cmp    %di,%ax
		jne    _05df0b_jump
		movswl %di,%ecx
		mov    _0c1d74_data,%eax
		add    %ecx,%ecx
		lea    (%eax,%ecx,1),%esi
		movswl %bx,%ecx
		lea    (%ecx,%ecx,1),%ebp
		add    %ebp,%eax
		mov    (%esi),%si
		mov    %si,(%eax)
		cmp    %si,%bx
		jne    _05dee9_jump
		imul   $0x000088,%ecx,%ecx
		mov    _0b9410_data,%eax
		movl   $0x000000,0x000020(%ecx,%eax,1)

	_05dee9_jump:
		movswl %di,%eax
		lea    0x000000(,%eax,2),%ebx
		mov    _0c1d74_data,%eax
		add    %ebx,%eax
		mov    (%eax),%bx
		mov    %bx,0x000052(%edx)
		mov    %di,(%eax)
		movl   $0x000000,0x000020(%edx)

	_05df0b_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _05df46_jump
		testb  $0x000004,0x000085(%edx)
		jne    _05df46_jump
		mov    0x000052(%edx),%si

	_05df1f_jump:
		mov    _0c1d74_data,%ebx
		movswl %si,%eax
		mov    (%ebx,%eax,2),%bx
		movswl %bx,%eax
		imul   $0x000088,%eax,%ecx
		mov    _0b9410_data,%eax
		add    %ecx,%eax
		call   _05e0c8_func
		cmp    %si,%bx
		jne    _05df1f_jump

	_05df46_jump:
		mov    (%esp),%ecx
		inc    %edi
		add    $0x000088,%edx
		cmp    %cx,%di
		jl     _05de2b_jump

	_05df59_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05df64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    _0b9410_data,%esi
		mov    _0b9414_data,%ax
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _05e0bc_jump

	_05df8b_jump:
		mov    0x000064(%esi),%cx
		cmp    $0x000116,%cx
		je     _05dfa1_jump
		cmp    $0x000117,%cx
		jne    _05e0a9_jump

	_05dfa1_jump:
		mov    _0c1d74_data,%ebx
		movswl %di,%edx
		mov    (%ebx,%edx,2),%dx
		mov    %edi,%eax
		cmp    %di,%dx
		je     _05e008_jump

	_05dfb5_jump:
		cmp    %di,%dx
		je     _05e008_jump
		cmpw   $0x000116,0x000064(%esi)
		jne    _05dfed_jump
		mov    0x000032(%esi),%eax
		sar    $0x000010,%eax
		call   _0755a0_func
		test   %al,%al
		jne    _05dfed_jump
		movswl %dx,%eax
		imul   $0x000088,%eax,%ecx
		mov    _0b9410_data,%ebx
		andb   $0x0000fb,0x000085(%ecx,%ebx,1)
		call   _075530_func

	_05dfed_jump:
		mov    %edx,%eax
		movswl %dx,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    _0c1d74_data,%edx
		mov    (%edx,%ebx,1),%dx
		cmp    %ax,%dx
		jne    _05dfb5_jump

	_05e008_jump:
		cmp    %di,%dx
		jne    _05e068_jump
		movswl %di,%edx
		lea    0x000000(,%edx,2),%ebp
		movswl %ax,%ebx
		mov    _0c1d74_data,%edx
		lea    (%ebx,%ebx,1),%ecx
		add    %edx,%ebp
		add    %ecx,%edx
		mov    0x000000(%ebp),%cx
		mov    %cx,(%edx)
		cmp    %cx,%ax
		jne    _05e046_jump
		imul   $0x000088,%ebx,%ebx
		mov    _0b9410_data,%eax
		movl   $0x000000,0x000020(%ebx,%eax,1)

	_05e046_jump:
		movswl %di,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0c1d74_data,%eax
		add    %edx,%eax
		mov    (%eax),%dx
		mov    %dx,0x000052(%esi)
		mov    %di,(%eax)
		movl   $0x000000,0x000020(%esi)

	_05e068_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _05e0a9_jump
		mov    0x000032(%esi),%eax
		sar    $0x000010,%eax
		call   _0755a0_func
		test   %al,%al
		je     _05e0a9_jump
		mov    0x000052(%esi),%bx

	_05e082_jump:
		mov    _0c1d74_data,%edx
		movswl %bx,%eax
		mov    (%edx,%eax,2),%dx
		movswl %dx,%eax
		imul   $0x000088,%eax,%ecx
		mov    _0b9410_data,%eax
		add    %ecx,%eax
		call   _05e0c8_func
		cmp    %bx,%dx
		jne    _05e082_jump

	_05e0a9_jump:
		mov    (%esp),%ebx
		inc    %edi
		add    $0x000088,%esi
		cmp    %bx,%di
		jl     _05df8b_jump

	_05e0bc_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e0c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c1d74_data,%esi
		mov    %eax,%ebx
		mov    0x000034(%eax),%cx
		mov    %esi,%edx
		movswl %cx,%eax
		mov    (%edx,%eax,2),%ax
		cmp    %cx,%ax
		je     _05e0f9_jump

	_05e0e8_jump:
		mov    %eax,%ecx
		movswl %ax,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ebx),%ax
		jne    _05e0e8_jump

	_05e0f9_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%ebp
		movswl %cx,%eax
		lea    (%eax,%eax,1),%edi
		lea    (%esi,%edi,1),%edx
		mov    0x000000(%ebp),%di
		mov    %di,(%edx)
		cmp    %di,%cx
		jne    _05e12e_jump
		mov    %eax,%edx
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		movl   $0x000000,0x000020(%edx,%eax,8)

	_05e12e_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%edx
		mov    0x000034(%ebx),%ax
		mov    %ax,(%edx)
		movl   $0x000000,0x000020(%ebx)
		mov    %esi,_0c1d74_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e154_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0b9410_data,%edx
		mov    _0b9414_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _05e1db_jump

	_05e170_jump:
		movswl %bx,%eax
		lea    0x000000(,%eax,2),%ecx
		mov    _0c1d74_data,%eax
		cmp    (%ecx,%eax,1),%bx
		je     _05e1c8_jump
		xor    %eax,%eax
		mov    0x000064(%edx),%ax
		shl    $0x000002,%eax
		mov    _0a52a0_data(%eax),%cl
		test   $0x000040,%cl
		jne    _05e1b6_jump
		test   $0x000020,%cl
		je     _05e1bf_jump
		mov    %edx,%eax
		call   _05dd08_func
		test   %ax,%ax
		jne    _05e1bf_jump
		mov    %edx,%eax
		call   _05dd90_func
		test   %ax,%ax
		jne    _05e1bf_jump

	_05e1b6_jump:
		mov    %edx,%eax
		call   _05e0c8_func
		jmp    _05e1cf_jump

	_05e1bf_jump:
		movl   $0x000001,0x000020(%edx)
		jmp    _05e1cf_jump

	_05e1c8_jump:
		movl   $0x000000,0x000020(%edx)

	_05e1cf_jump:
		inc    %ebx
		add    $0x000088,%edx
		cmp    %si,%bx
		jl     _05e170_jump

	_05e1db_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e1e0_func:
		push   %ebx
		push   %edx
		mov    $0x000002,%bl
		mov    _0c3347_data,%ah
		mov    _0c3348_data,%dl
		and    $0x000048,%ah
		and    $0x000002,%dl
		mov    %bl,_0c2f49_data
		mov    %ah,_0c3347_data
		mov    %dl,_0c3348_data
		mov    _0b937d_data,%dh
		xor    %bh,%bh
		and    $0x0000fe,%dh
		mov    %bh,_0c2f46_data
		mov    %dh,_0b937d_data
		pop    %edx
		pop    %ebx
		ret    



_05e224_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %ah,%ah
		mov    _0b9369_data,%dl
		mov    %ah,_0c33b4_data
		cmp    $0x000006,%dl
		sete   %al
		xor    %ah,%ah
		xor    %edx,%edx
		inc    %eax
		mov    %dx,_0c303e_data
		mov    _0c3348_data,%dh
		mov    %ax,_0c3130_data
		test   $0x000002,%dh
		je     _05e275_jump
		mov    $0x000022,%ecx
		mov    _0b9372_data,%al
		mov    $_0b92f8_data,%edi
		mov    $_0b95b8_data,%esi
		mov    %al,_0b9632_data
		rep movsl %ds:(%esi),%es:(%edi)

	_05e275_jump:
		mov    $0x000017,%esi
		mov    $0x000064,%edx
		mov    $0x000014,%cl
		xor    %al,%al
		xor    %ebx,%ebx
		mov    _0b937d_data,%ah
		mov    %bx,_0c3162_data
		mov    %bx,_0c3166_data
		mov    %si,_0b935c_data
		mov    %bx,_0b932e_data
		mov    %bx,_0b9330_data
		mov    %bx,_0b9338_data
		mov    %bx,_0b933a_data
		mov    %edx,_0b9320_data
		mov    %cl,_0b9370_data
		mov    $0x00000a,%ebx
		mov    $0x000002,%dl
		or     $0x00000c,%ah
		xor    %ch,%ch
		mov    %ebx,_0b9324_data
		mov    %ch,_0b9366_data
		mov    %ch,_0b9367_data
		mov    %ah,_0b937d_data
		mov    %dl,_0b9369_data
		mov    %dl,_0b9368_data
		mov    %al,_0b9379_data
		mov    %al,_0b937b_data
		mov    $0x000050,%bl
		mov    $0xffffffff,%ecx
		xor    %dl,%dl
		mov    %bl,_0b9364_data
		mov    %cx,_0b9342_data
		mov    %ecx,%edi
		mov    %cx,_0b934a_data
		xor    %dh,%dh
		mov    $0x00004e,%bh
		mov    $0x000001,%ecx
		mov    %di,_0b9354_data
		mov    %bh,_0b9365_data
		mov    %ecx,_0b931c_data
		mov    %ah,%cl
		xor    %bl,%bl
		and    $0x0000bf,%cl
		mov    $0xffff8300,%eax
		mov    %cl,_0b937d_data
		mov    $0x000001,%ch
		mov    %ax,_0c3132_data
		mov    %ch,_0c33c4_data
		call   _020784_func
		mov    %bl,_0c33cc_data
		mov    %dx,_0c3112_data
		xor    %al,%al
		mov    %bl,_0c3389_data
		xor    %ah,%ah
		mov    _0b9320_data,%bx
		mov    %al,_0c33c8_data
		mov    %al,_0c33ca_data
		mov    %al,_0c33da_data

	_05e38f_jump:
		movswl %ax,%edx
		inc    %eax
		mov    %bx,_0c1098_data(,%edx,2)
		cmp    $0x00000a,%ax
		jl     _05e38f_jump
		xor    %bh,%bh
		mov    _0c3348_data,%ch
		mov    %bh,_0c1156_data
		mov    %bh,_0c1158_data
		test   $0x000080,%ch
		je     _05e3da_jump
		mov    %ch,%al
		mov    %ch,%ah
		shr    $0x000007,%ah
		and    $0x000001,%ah
		and    $0x0000fd,%al
		mov    %al,_0c3348_data
		mov    %ah,%al
		add    %ah,%al
		or     %al,_0c3348_data
		call   _05fce4_func

	_05e3da_jump:
		mov    _0c3348_data,%dl
		and    $0x0000e5,%dl
		mov    %dl,_0c3348_data
		cmpb   $0x000000,_0c1760_data
		je     _05e40c_jump
		mov    _0c11d8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05e40c_jump
		mov    %dl,%cl
		and    $0x00009f,%cl
		mov    %cl,_0c3348_data
		jmp    _05e426_jump

	_05e40c_jump:
		mov    _0c3348_data,%bl
		and    $0x00009f,%bl
		mov    %bl,_0c3348_data
		mov    %bl,%bh
		or     $0x000020,%bh
		mov    %bh,_0c3348_data

	_05e426_jump:
		call   _05fa04_func
		mov    _0b9410_data,%edx
		mov    _0b9414_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _05e532_jump

	_05e443_jump:
		cmpw   $0x000063,0x000064(%edx)
		jne    _05e522_jump
		xor    %esi,%esi
		xor    %eax,%eax
		mov    %esi,_0b931c_data
		mov    0x00006c(%edx),%al
		add    0x000028(%edx),%ax
		sub    $0x0000a0,%eax
		mov    %ax,_0c3162_data
		mov    0x00002c(%edx),%ax
		mov    _0b937d_data,%ch
		sub    $0x00000a,%eax
		and    $0x0000fb,%ch
		mov    %ax,_0c3166_data
		mov    _0a7c9d_data,%al
		mov    %ch,_0b937d_data
		test   %al,%al
		jne    _05e497_jump
		call   _06180c_func
		jmp    _05e4ee_jump

	_05e497_jump:
		mov    _0c3162_data,%ax
		mov    _0c313c_data,%di
		cmp    %di,%ax
		jl     _05e4b0_jump
		mov    %di,_0c3162_data

	_05e4b0_jump:
		mov    _0c3166_data,%ax
		mov    _0c314a_data,%bx
		cmp    %bx,%ax
		jl     _05e4c9_jump
		mov    %bx,_0c3166_data

	_05e4c9_jump:
		cmpw   $0x000000,_0c3162_data
		jge    _05e4dc_jump
		xor    %esi,%esi
		mov    %si,_0c3162_data

	_05e4dc_jump:
		cmpw   $0x000000,_0c3166_data
		jge    _05e4ee_jump
		xor    %eax,%eax
		mov    %ax,_0c3166_data

	_05e4ee_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%ebx
		mov    0x00006c(%edx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0b9364_data,%al
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00002c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0b9365_data,%al
		sub    %eax,%edx
		mov    %ebx,_0b9320_data
		mov    %edx,_0b9324_data
		jmp    _05e532_jump

	_05e522_jump:
		inc    %eax
		add    $0x000088,%edx
		cmp    %bx,%ax
		jl     _05e443_jump

	_05e532_jump:
		cmpb   $0x000000,_0c33e1_data
		je     _05e547_jump
		mov    $_0b92f8_data,%eax
		call   _01ec9c_func
		jmp    _05e557_jump

	_05e547_jump:
		xor    %eax,%eax

	_05e549_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0b935d_data(%eax)
		cmp    $0x000005,%eax
		jb     _05e549_jump

	_05e557_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e560_func:
		push   %edx
		and    $0x0000ff,%eax
		mov    _0a525d_data(%eax),%dl
		test   $0x000040,%dl
		je     _05e57d_jump
		test   $0x000008,%dl
		je     _05e57d_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_05e57d_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_05e584_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		cmpb   $0x000007,_0b9369_data
		je     _05e700_jump
		mov    _0b9320_data,%si
		xor    %eax,%eax
		mov    _0b9324_data,%dx
		mov    _0b9364_data,%al
		xor    %ebx,%ebx
		add    %eax,%esi
		xor    %eax,%eax
		mov    _0b9365_data,%bl
		mov    _0b935e_data,%al
		add    %edx,%ebx
		testb  $0x000040,_0a525d_data(%eax)
		je     _05e5cc_jump
		sub    $0x000008,%ebx

	_05e5cc_jump:
		mov    _0b9338_data,%ax
		add    %eax,%eax
		movswl %bx,%ecx
		add    %eax,%esi
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _01ea94_func
		mov    %al,0x000008(%esp)
		lea    -0x000018(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _01ea94_func
		mov    %al,(%esp)
		mov    %al,0x000004(%esp)
		lea    -0x000028(%ecx),%eax
		sar    $0x000004,%eax
		sub    $0x000038,%ecx
		movswl %ax,%edx
		mov    %ebx,%eax
		sar    $0x000004,%ecx
		call   _01ea94_func
		mov    %al,0x00000c(%esp)
		movswl %cx,%edx
		mov    %ebx,%eax
		call   _01ea94_func
		mov    %al,%cl
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    _0a525d_data(%eax),%dh
		xor    %ebx,%ebx
		test   $0x000010,%dh
		je     _05e65a_jump
		xor    %eax,%eax
		mov    (%esp),%al
		call   _05e560_func
		test   %ax,%ax
		jne    _05e65a_jump
		mov    $0x000001,%ebx

	_05e65a_jump:
		test   %bx,%bx
		jne    _05e6d3_jump
		xor    %eax,%eax
		mov    _0b9369_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0b9304_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0b9368_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _05e6d3_jump
		testb  $0x000002,_0c3348_data
		jne    _05e6d3_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		testb  $0x000010,_0a525d_data(%eax)
		je     _05e6b1_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _05e560_func
		test   %ax,%ax
		je     _05e6ce_jump

	_05e6b1_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		testb  $0x000010,_0a525d_data(%eax)
		je     _05e6d3_jump
		xor    %eax,%eax
		mov    %cl,%al
		call   _05e560_func
		test   %ax,%ax
		jne    _05e6d3_jump

	_05e6ce_jump:
		mov    $0x000001,%ebx

	_05e6d3_jump:
		test   %bx,%bx
		je     _05e700_jump
		xor    %ebx,%ebx
		mov    $0x000001,%eax
		mov    %bx,_0b9338_data
		mov    %bx,_0c3112_data
		mov    %bx,_0b9340_data
		call   _06b680_func
		xor    %eax,%eax
		call   _06b680_func

	_05e700_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e708_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		xor    %edx,%edx
		mov    _0c309e_data,%di
		mov    %dx,_0c3148_data
		mov    %dx,_0c314e_data
		mov    %dx,_0b9338_data
		mov    %dx,_0b933a_data
		cmp    $0x000001,%di
		je     _05e81b_jump
		call   _041d78_func
		test   %ax,%ax
		je     _05e75e_jump
		xor    %eax,%eax
		mov    _0b9338_data,%bx
		mov    _0c33b9_data,%al
		add    %eax,%ebx
		mov    %bx,_0b9338_data
		jmp    _05e77f_jump

	_05e75e_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _05e77f_jump
		xor    %eax,%eax
		mov    _0b9338_data,%dx
		mov    _0c33b9_data,%al
		sub    %eax,%edx
		mov    %dx,_0b9338_data

	_05e77f_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _05e7a0_jump
		xor    %eax,%eax
		mov    _0c33b9_data,%al
		mov    %eax,%edx
		mov    _0b9338_data,%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		jmp    _05e7bf_jump

	_05e7a0_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _05e7c5_jump
		xor    %eax,%eax
		mov    _0c33b9_data,%al
		mov    %eax,%edx
		mov    _0b9338_data,%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax

	_05e7bf_jump:
		mov    %ax,_0b933a_data

	_05e7c5_jump:
		mov    _0b933a_data,%cx
		test   %cx,%cx
		jle    _05e7d8_jump
		call   _05d5e0_func
		jmp    _05e7df_jump

	_05e7d8_jump:
		jge    _05e7df_jump
		call   _05d500_func

	_05e7df_jump:
		mov    _0b9338_data,%di
		test   %di,%di
		jge    _05e7f2_jump
		call   _05dbb4_func
		jmp    _05e7f9_jump

	_05e7f2_jump:
		jle    _05e7f9_jump
		call   _05db30_func

	_05e7f9_jump:
		mov    $_0b92f8_data,%eax
		call   _01e53c_func
		mov    _0b9338_data,%ax
		mov    %ax,_0c3148_data
		mov    _0b933a_data,%ax
		mov    %ax,_0c314e_data

	_05e81b_jump:
		call   _02b370_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05e828_switch:
		.long   _05e8be_case
		.long   _05e8f3_case
		.long   _05e97c_case
		.long   _05e997_case
		.long   _05e928_case
		.long   _05e952_case




_05e840_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0b9320_data,%ax
		mov    _0b9324_data,%si
		mov    _0c312e_data,%cx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000004(%esp)
		mov    %ax,(%esp)
		mov    %dx,_0c3178_data
		mov    $0xffffffff,%edx
		test   %cx,%cx
		jle    _05ea27_jump

	_05e87e_jump:
		movswl %bx,%eax
		mov    _0c10aa_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edi
		add    %edi,%eax
		cmpw   $0x000040,0x000064(%eax)
		jne    _05ea27_jump
		mov    0x00007a(%eax),%cl
		cmp    $0x000005,%cl
		ja     _05ea16_jump
		and    $0x0000ff,%ecx
		jmp    *%cs:_05e828_switch(,%ecx,4)

	_05e8be_case:
		mov    -0x000002(%esp),%ecx
		mov    0x000028(%eax),%ebp
		sar    $0x000010,%ecx
		cmp    %ebp,%ecx
		jl     _05ea16_jump
		mov    0x00003a(%eax),%ecx
		mov    _0c3178_data,%di
		sar    $0x000010,%ecx
		inc    %edi
		sub    $0x0000c8,%ecx
		mov    %di,_0c3178_data
		mov    %ecx,0x000028(%eax)
		jmp    _05ea16_jump

	_05e8f3_case:
		mov    -0x000002(%esp),%ecx
		mov    0x000028(%eax),%edi
		sar    $0x000010,%ecx
		cmp    %edi,%ecx
		jl     _05ea16_jump
		mov    0x00003a(%eax),%ecx
		mov    _0c3178_data,%di
		sar    $0x000010,%ecx
		dec    %edi
		sub    $0x0000c8,%ecx
		mov    %di,_0c3178_data
		mov    %ecx,0x000028(%eax)
		jmp    _05ea16_jump

	_05e928_case:
		movswl %si,%ecx
		cmp    0x00002c(%eax),%ecx
		jg     _05ea16_jump
		mov    0x00003c(%eax),%ecx
		mov    $0x000001,%edi
		sar    $0x000010,%ecx
		inc    %edx
		add    $0x0000c8,%ecx
		mov    %edi,0x000004(%esp)
		mov    %ecx,0x00002c(%eax)
		jmp    _05ea16_jump

	_05e952_case:
		movswl %si,%ecx
		cmp    0x00002c(%eax),%ecx
		jg     _05ea16_jump
		mov    0x00003c(%eax),%ecx
		sar    $0x000010,%ecx
		add    $0x0000c8,%ecx
		mov    %ecx,0x00002c(%eax)
		mov    $0x000001,%ecx
		dec    %edx
		mov    %ecx,0x000004(%esp)
		jmp    _05ea16_jump

	_05e97c_case:
		movswl %si,%ecx
		cmp    0x00002c(%eax),%ecx
		jl     _05e98b_jump
		neg    %edx
		jmp    _05ea16_jump

	_05e98b_jump:
		movl   $0x002710,0x00002c(%eax)
		jmp    _05ea16_jump

	_05e997_case:
		mov    _0c3134_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _05e9ba_jump
		imul   $0x000088,%ecx,%ecx
		add    %ecx,%edi
		cmpb   $0x000000,0x00007a(%edi)
		jne    _05ea16_jump
		cmpw   $0x000000,0x000050(%edi)
		jne    _05ea16_jump

	_05e9ba_jump:
		movswl %si,%ecx
		cmp    0x00002c(%eax),%ecx
		jl     _05e9e9_jump
		movswl %dx,%eax
		mov    %dx,_0c317a_data
		test   %eax,%eax
		jge    _05e9d2_jump
		neg    %eax

	_05e9d2_jump:
		mov    _0c317a_data,%dx
		cmp    $0x000001,%eax
		jne    _05e9e5_jump
		mov    $0x000002,%edx
		jmp    _05e9f0_jump

	_05e9e5_jump:
		neg    %edx
		jmp    _05e9f0_jump

	_05e9e9_jump:
		movl   $0x002710,0x00002c(%eax)

	_05e9f0_jump:
		mov    _0c3134_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05ea16_jump
		cmp    $0x000002,%dx
		je     _05ea16_jump
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ecx
		movw   $0x000002,0x00005c(%ecx,%eax,1)

	_05ea16_jump:
		mov    _0c312e_data,%di
		inc    %ebx
		cmp    %di,%bx
		jl     _05e87e_jump

	_05ea27_jump:
		mov    _0c3178_data,%si
		mov    $0x000001,%al
		test   %si,%si
		jg     _05ea3f_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0c3178_data

	_05ea3f_jump:
		cmpw   $0x000001,_0c309e_data
		je     _05ea57_jump
		mov    _0c312e_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		jne    _05ea59_jump

	_05ea57_jump:
		xor    %al,%al

	_05ea59_jump:
		test   %al,%al
		je     _05eaf3_jump
		mov    _0c3178_data,%cx
		test   %cx,%cx
		jle    _05ea76_jump
		mov    %cx,_0c3148_data
		jmp    _05ea8c_jump

	_05ea76_jump:
		mov    _0c3176_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jge    _05ea8c_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_0c3148_data

	_05ea8c_jump:
		test   %dx,%dx
		jle    _05ea9a_jump
		mov    %dx,_0c314e_data
		jmp    _05eaab_jump

	_05ea9a_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		jge    _05eaab_jump
		mov    %edx,%eax
		inc    %eax
		mov    %ax,_0c314e_data

	_05eaab_jump:
		mov    0x000004(%esp),%esi
		test   %si,%si
		jne    _05eaf3_jump
		cmp    $0x000001,%dx
		jne    _05eac5_jump
		movw   $0x00ffff,_0c314e_data
		jmp    _05eaf3_jump

	_05eac5_jump:
		cmp    $0x000002,%dx
		jne    _05eae6_jump
		cmpb   $0x000000,_0c334c_data
		je     _05eadf_jump
		movw   $0x00ffff,_0c314e_data
		jmp    _05eae6_jump

	_05eadf_jump:
		mov    %si,_0c314e_data

	_05eae6_jump:
		movswl %dx,%eax
		cmp    $0xfffffffe,%eax
		jne    _05eaf3_jump
		mov    $0xffffffff,%edx

	_05eaf3_jump:
		mov    %dx,_0c317a_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05eb04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %al,%cl
		mov    _0b9410_data,%eax
		mov    _0b9414_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _05eb30_jump

	_05eb1e_jump:
		add    $0x000088,%eax
		inc    %edx
		movl   $0x000000,-0x00006c(%eax)
		cmp    %bx,%dx
		jl     _05eb1e_jump

	_05eb30_jump:
		xor    %ebx,%ebx
		xor    %esi,%esi

	_05eb34_jump:
		movswl %bx,%eax
		imul   $0x000282,%eax,%eax
		mov    %esi,%edx
		mov    %si,_0b5aa0_data(%eax)
		add    $_0b5820_data,%eax

	_05eb4b_jump:
		add    $0x000002,%eax
		inc    %edx
		mov    %si,-0x000002(%eax)
		cmp    $0x000140,%dx
		jl     _05eb4b_jump
		inc    %ebx
		cmp    $0x000008,%bx
		jl     _05eb34_jump
		mov    $0xfffffffe,%esi
		mov    $0xffffffff,%ebx
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,_0c33ba_data
		mov    %ah,_0c3394_data
		mov    %ah,_0c33a9_data
		mov    %ah,_0c33a4_data
		mov    %esi,_0c1088_data
		xor    %dh,%dh
		mov    %esi,_0c1080_data
		mov    %dx,_0c30d8_data
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %edx,_0c1084_data
		mov    %edx,_0a7d34_data
		call   _05a0d4_func
		mov    %bx,_0b932c_data
		mov    %si,_0c3012_data
		mov    %bx,_0c2f4a_data
		xor    %eax,%eax
		mov    _0a7c9d_data,%bh
		mov    %ax,_0c3162_data
		mov    %ax,_0c3166_data
		test   %bh,%bh
		jne    _05ebe5_jump
		call   _061760_func
		jmp    _05ec55_jump

	_05ebe5_jump:
		mov    _0c1126_data,%ax
		shl    $0x000004,%eax
		sub    $0x0000c8,%eax
		mov    %ax,_0c314a_data
		mov    _0c1124_data,%ax
		shl    $0x000004,%eax
		sub    $0x000131,%eax
		mov    %ax,_0c313c_data
		test   %ax,%ax
		jge    _05ec1b_jump
		mov    %si,_0c313c_data

	_05ec1b_jump:
		cmpw   $0x000000,_0c314a_data
		jge    _05ec2d_jump
		xor    %eax,%eax
		mov    %ax,_0c314a_data

	_05ec2d_jump:
		xor    %edx,%edx
		mov    _0c313c_data,%ax
		mov    %dx,_0c3116_data
		mov    %ax,_0c3124_data
		mov    _0c314a_data,%ax
		mov    %dx,_0c3118_data
		mov    %ax,_0c3122_data

	_05ec55_jump:
		mov    $0xffffffff,%ebx
		xor    %esi,%esi
		xor    %ch,%ch
		xor    %al,%al
		mov    %si,_0c314e_data
		mov    %si,_0c3148_data
		mov    %si,_0a5258_data
		mov    %si,_0a5256_data
		mov    %si,_0c3140_data
		mov    %ch,_0c33c2_data
		mov    %si,_0c3112_data
		mov    %si,_0c3138_data
		mov    %si,_0c313a_data
		mov    %si,_0c30fa_data
		mov    %al,_0c33b2_data
		mov    %bx,_0c315c_data
		mov    %al,_0c33c7_data
		mov    %al,_0c33c9_data
		mov    _0c33cb_data,%bl
		mov    %al,_0c33db_data
		test   %bl,%bl
		jne    _05ecd1_jump
		movb   $0x000040,_0c33cf_data

	_05ecd1_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _05e224_func
		cmpw   $0x000000,_0c30d4_data
		jne    _05ed13_jump
		cmpb   $0x000000,_0c33d6_data
		jne    _05ed13_jump
		cmpb   $0x000000,_0c1765_data
		je     _05ed13_jump
		mov    $_0c115c_data,%eax
		mov    _0c2f46_data,%dl
		call   _0750c4_func
		xor    %eax,%eax
		call   _05df64_func
		mov    %dl,_0c2f46_data

	_05ed13_jump:
		mov    _0c33d6_data,%ah
		test   %ah,%ah
		je     _05ed9c_jump
		mov    _0c33d4_data,%al
		mov    %al,_0c1765_data
		mov    _0c3168_data,%eax
		mov    $0x000001,%ebp
		sar    $0x000010,%eax
		mov    _0b937d_data,%dh
		mov    %eax,_0b9320_data
		mov    _0c3162_data,%eax
		mov    %ebp,_0b931c_data
		sar    $0x000010,%eax
		and    $0x0000fb,%dh
		mov    %eax,_0b9324_data
		mov    _0c33d7_data,%al
		mov    %dh,_0b937d_data
		inc    %al
		mov    %dh,%bl
		mov    %al,_0c33d3_data
		xor    %eax,%eax
		or     $0x000004,%bl
		mov    _0c33d7_data,%al
		mov    %bl,_0b937d_data
		call   _03e8b8_func
		mov    _0c3172_data,%ax
		mov    %ax,_0c3162_data
		mov    _0c3174_data,%ax
		mov    %ax,_0c3166_data
		jmp    _05eda2_jump

	_05ed9c_jump:
		mov    %ah,_0c33ac_data

	_05eda2_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _063620_func
		test   %cl,%cl
		je     _05edb4_jump
		call   _05e154_func

	_05edb4_jump:
		call   _063fcc_func
		testb  $0x000004,_0c3348_data
		je     _05edc7_jump
		call   _04e7dc_func

	_05edc7_jump:
		call   _05cebc_func
		cmpw   $0x000014,_0c1124_data
		ja     _05edfb_jump
		cmpw   $0x000000,_0a7cdc_data
		je     _05ede9_jump
		cmpb   $0x000001,_0a7c9d_data
		jne    _05edfb_jump

	_05ede9_jump:
		mov    _0c3124_data,%ax
		mov    %ax,_0c3116_data
		mov    %ax,_0c3162_data

	_05edfb_jump:
		cmpb   $0x000000,_0c3371_data
		je     _05ee16_jump
		mov    _0c3116_data,%ax
		mov    %ax,_0c3124_data
		mov    %ax,_0c3162_data

	_05ee16_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ee1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _021d24_func
		call   _01fffc_func
		call   _023f08_func
		mov    $0x000001,%edx
		mov    $0x000005,%ecx
		mov    $0x000002,%ah
		mov    $0xffffffff,%esi
		xor    %bh,%bh
		mov    %dx,_0c3146_data
		mov    %dx,_0c3156_data
		mov    $0x000001,%dl
		mov    %ah,_0b9372_data
		mov    %dl,_0c1154_data
		xor    %dh,%dh
		mov    $0x0000a0,%eax
		mov    %dh,_0c33b4_data
		mov    %dh,_0c3396_data
		mov    $0x0000aa,%edx
		mov    %cx,_0c2f40_data
		call   _01dc20_func
		call   _05e1e0_func
		mov    _0bf2fc_data,%cl
		mov    %si,_0c3178_data
		mov    %si,_0c317a_data
		xor    %eax,%eax
		mov    %bh,_0c33c5_data
		mov    %ax,_0c3168_data
		mov    %ax,_0c316e_data
		test   %cl,%cl
		je     _05eec3_jump
		mov    %cl,%al
		dec    %eax
		cwtl   
		call   _06a9a0_func
		mov    %al,_0bf2fe_data
		jmp    _05eecb_jump

	_05eec3_jump:
		xor    %ch,%ch
		mov    %ch,_0bf2fe_data

	_05eecb_jump:
		mov    $0x000001,%al
		mov    $0xfffffffe,%edx
		mov    %al,_0c338f_data
		mov    %al,_0c3390_data
		mov    %edx,_0c1088_data
		xor    %dl,%dl
		mov    _0bf300_data,%eax
		mov    %dl,_0c33e4_data
		mov    %dl,_0c3391_data
		mov    %eax,_0bf308_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ef00_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %dx,_0c3156_data
		mov    %bx,_0c3146_data
		pop    %edx
		pop    %ebx
		ret    



_05ef1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0c0eb0_data,%eax
		mov    %eax,_0c0ea4_data
		mov    _0c0eac_data,%eax
		mov    %eax,_0c0e98_data
		mov    _0c0ebc_data,%eax
		mov    %eax,_0c0e94_data
		mov    _0c0eb4_data,%eax
		mov    %eax,_0c0e90_data
		cmpb   $0x000000,_0c33cb_data
		jne    _05f00f_jump
		call   _0215b0_func
		cwtl   
		mov    _0c31b4_data,%bl
		cmp    $0xfffffffe,%eax
		setne  %al
		shl    $0x000004,%bl
		xor    %ah,%ah
		shr    $0x000007,%bl
		mov    %ax,_0c30d4_data
		xor    %bh,%bh
		mov    %bx,_0c30d6_data
		test   %ax,%ax
		jne    _05ef91_jump
		cmpb   $0x000000,_0c33d6_data
		jne    _05ef91_jump
		mov    $0x000001,%al
		jmp    _05ef93_jump

	_05ef91_jump:
		xor    %al,%al

	_05ef93_jump:
		mov    %al,%bl
		test   %al,%al
		je     _05ef9e_jump
		call   _074e80_func

	_05ef9e_jump:
		call   _075478_func
		call   _07550c_func
		xor    %eax,%eax
		xor    %bh,%bh
		mov    %dl,%al
		mov    %bh,_0c2f46_data
		call   _05eb04_func
		test   %bl,%bl
		je     _05efc9_jump
		mov    $_0c115c_data,%edx
		xor    %eax,%eax
		call   _074e8c_func

	_05efc9_jump:
		mov    _0c33d6_data,%cl
		test   %cl,%cl
		je     _05efda_jump
		call   _01d828_func
		jmp    _05efe0_jump

	_05efda_jump:
		mov    %cl,_0c33ac_data

	_05efe0_jump:
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _05de04_func
		xor    %eax,%eax
		xor    %edx,%edx
		call   _05df64_func
		mov    $0x000010,%al
		mov    %dx,_0c3146_data
		mov    %bx,_0c3130_data
		mov    %al,_0c33b9_data
		call   _05ca6c_func

	_05f00f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f014_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0b9410_data,%esi
		xor    %edx,%edx
		mov    _0b9414_data,%ax
		mov    %edx,(%esp)
		mov    %eax,0x000004(%esp)
		test   %ax,%ax
		jle    _05f120_jump

	_05f03a_jump:
		mov    0x000064(%esi),%ax
		cmp    $0x0000a4,%ax
		je     _05f054_jump
		cmp    $0x00004c,%ax
		je     _05f054_jump
		cmp    $0x000113,%ax
		jne    _05f106_jump

	_05f054_jump:
		testb  $0x000004,0x000085(%esi)
		je     _05f0a9_jump
		mov    _0c1d74_data,%ebx
		mov    0x000052(%esi),%ax

	_05f067_jump:
		mov    %eax,%edx
		cwtl   
		mov    0x000052(%esi),%di
		mov    (%ebx,%eax,2),%ax
		cmp    %di,%ax
		jne    _05f067_jump
		mov    0x000032(%esi),%ecx
		sar    $0x000010,%ecx
		mov    %di,(%ebx,%ecx,2)
		movswl %dx,%eax
		mov    0x000034(%esi),%dx
		mov    %dx,(%ebx,%eax,2)
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ebx
		movl   $0x000001,0x000020(%esi)
		movl   $0x000001,0x000020(%ebx,%eax,1)
		jmp    _05f106_jump

	_05f0a9_jump:
		mov    0x000034(%esi),%dx
		movswl %dx,%eax
		mov    _0c11dc_data(,%eax,2),%ax
		cmp    %ax,%dx
		je     _05f106_jump

	_05f0bd_jump:
		movswl %dx,%ebx
		mov    _0c1d74_data,%edi
		mov    _0c11dc_data(,%ebx,2),%ax
		mov    %ax,(%edi,%ebx,2)
		imul   $0x000088,%ebx,%ebx
		cmp    %ax,%dx
		je     _05f0ed_jump
		mov    _0b9410_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _05f0fb_jump

	_05f0ed_jump:
		mov    _0b9410_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_05f0fb_jump:
		mov    0x000034(%esi),%cx
		mov    %eax,%edx
		cmp    %cx,%ax
		jne    _05f0bd_jump

	_05f106_jump:
		mov    (%esp),%ecx
		mov    0x000004(%esp),%edi
		inc    %ecx
		add    $0x000088,%esi
		mov    %ecx,(%esp)
		cmp    %di,%cx
		jl     _05f03a_jump

	_05f120_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f12c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0b9410_data,%esi
		xor    %edx,%edx
		mov    _0b9414_data,%ax
		mov    %edx,(%esp)
		mov    %eax,0x000004(%esp)
		test   %ax,%ax
		jle    _05f238_jump

	_05f152_jump:
		mov    0x000064(%esi),%ax
		cmp    $0x000116,%ax
		je     _05f166_jump
		cmp    $0x000117,%ax
		jne    _05f21e_jump

	_05f166_jump:
		mov    0x000032(%esi),%eax
		sar    $0x000010,%eax
		call   _0755a0_func
		test   %al,%al
		jne    _05f1c1_jump
		mov    _0c1d74_data,%ebx
		mov    0x000052(%esi),%ax

	_05f17f_jump:
		mov    %eax,%edx
		cwtl   
		mov    0x000052(%esi),%cx
		mov    (%ebx,%eax,2),%ax
		cmp    %cx,%ax
		jne    _05f17f_jump
		mov    0x000032(%esi),%ecx
		sar    $0x000010,%ecx
		mov    %ax,(%ebx,%ecx,2)
		movswl %dx,%eax
		mov    0x000034(%esi),%dx
		mov    %dx,(%ebx,%eax,2)
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ebx
		movl   $0x000001,0x000020(%esi)
		movl   $0x000001,0x000020(%ebx,%eax,1)
		jmp    _05f21e_jump

	_05f1c1_jump:
		mov    0x000034(%esi),%dx
		movswl %dx,%eax
		mov    _0c11dc_data(,%eax,2),%ax
		cmp    %ax,%dx
		je     _05f21e_jump

	_05f1d5_jump:
		movswl %dx,%ebx
		mov    _0c1d74_data,%edi
		mov    _0c11dc_data(,%ebx,2),%ax
		mov    %ax,(%edi,%ebx,2)
		imul   $0x000088,%ebx,%ebx
		cmp    %ax,%dx
		je     _05f205_jump
		mov    _0b9410_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _05f213_jump

	_05f205_jump:
		mov    _0b9410_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_05f213_jump:
		mov    0x000034(%esi),%bx
		mov    %eax,%edx
		cmp    %bx,%ax
		jne    _05f1d5_jump

	_05f21e_jump:
		mov    (%esp),%ecx
		mov    0x000004(%esp),%edi
		inc    %ecx
		add    $0x000088,%esi
		mov    %ecx,(%esp)
		cmp    %di,%cx
		jl     _05f152_jump

	_05f238_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f244_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _05f014_func
		call   _05f12c_func
		cmpw   $0x000000,_0c30d4_data
		jne    _05f26b_jump
		cmpb   $0x000000,_0c33d6_data
		jne    _05f26b_jump
		call   _074e80_func

	_05f26b_jump:
		mov    _0c3156_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05f2ed_jump
		cmpw   $0x000000,_0c3146_data
		jne    _05f28c_jump
		cmpw   $0x000000,_0c3156_data
		je     _05f2ed_jump

	_05f28c_jump:
		mov    $0x000022,%ecx
		mov    $_0b9640_data,%edi
		mov    $_0b92f8_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000022,%ecx
		mov    $_0b92f8_data,%edi
		mov    $_0b95b8_data,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _05e224_func
		mov    _0b96ba_data,%al
		mov    %al,_0b9372_data
		mov    _0b96bb_data,%al
		xor    %ebx,%ebx
		mov    %al,_0b9373_data
		mov    _0b96bd_data,%al
		xor    %edx,%edx
		mov    %al,_0b9375_data
		mov    $_0b92f8_data,%eax
		xor    %esi,%esi
		call   _01dea8_func
		mov    %si,_0c3130_data

	_05f2ed_jump:
		cmpb   $0x000000,_0c33c3_data
		je     _05f2fb_jump
		call   _020020_func

	_05f2fb_jump:
		mov    $_0c0ff8_data,%eax
		call   _085244_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f30c_func:
		push   %edx
		cmpb   $0x000000,_0c33cf_data
		jne    _05f329_jump
		call   _05f014_func
		xor    %eax,%eax
		call   _05eb04_func
		xor    %eax,%eax
		call   _05de04_func

	_05f329_jump:
		cmpw   $0x000000,_0c30d4_data
		jne    _05f350_jump
		cmpb   $0x000000,_0c33d6_data
		jne    _05f350_jump
		mov    $_0c1768_data,%edx
		xor    %eax,%eax
		call   _074e8c_func
		xor    %dh,%dh
		mov    %dh,_0c33e4_data

	_05f350_jump:
		call   _03b93c_func
		call   _072c38_func
		call   _05f12c_func
		mov    $0x000001,%eax
		call   _05df64_func
		pop    %edx
		ret    



_05f36c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0c33d9_data
		je     _05f42c_jump
		mov    _0c3156_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05f411_jump
		mov    $0x000022,%ecx
		mov    $_0b95b8_data,%edi
		mov    $_0b92f8_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%esi
		shl    $0x000004,%eax
		mov    $0x000022,%ecx
		add    %esi,%eax
		mov    _0b9410_data,%esi
		shl    $0x000003,%eax
		mov    $_0b92f8_data,%edi
		add    %eax,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _05e224_func
		mov    _0b9632_data,%al
		mov    %al,_0b9372_data
		mov    _0b9633_data,%al
		mov    $0x000006,%edx
		mov    %al,_0b9373_data
		mov    _0b9635_data,%al
		xor    %ebx,%ebx
		mov    %al,_0b9375_data
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		mov    $0x000002,%edx
		xor    %bl,%bl
		mov    %dx,_0c3130_data
		mov    %bl,_0c33d9_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f411_jump:
		cmpb   $0x000000,_0c339b_data
		je     _05f42c_jump
		mov    $0x000001,%eax
		xor    %dh,%dh
		call   _05e224_func
		mov    %dh,_0c33d9_data

	_05f42c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f434_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0bf2fd_data,%ah
		test   %ah,%ah
		je     _05f4e3_jump
		cmp    $0x000005,%ah
		je     _05f450_jump
		cmp    $0x000006,%ah
		jne    _05f47f_jump

	_05f450_jump:
		cmpb   $0x000005,_0bf2fd_data
		jne    _05f472_jump
		xor    %edx,%edx
		mov    _0c33a0_data,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		cmp    _0c1084_data,%eax
		jl     _05f47f_jump

	_05f472_jump:
		cmpb   $0x000006,_0bf2fd_data
		jne    _05f4e3_jump

	_05f47f_jump:
		mov    $0x000201,%edx
		sub    %eax,%eax
		in     (%dx),%al
		test   $0x000010,%al
		je     _05f4ac_jump
		test   $0x000020,%al
		je     _05f4ac_jump
		test   $0x000040,%al
		je     _05f4ac_jump
		test   $0x000080,%al
		je     _05f4ac_jump
		mov    _0bf2fd_data,%cl
		cmp    $0x000003,%cl
		je     _05f4ac_jump
		cmp    $0x000004,%cl
		je     _05f4ac_jump
		cmp    $0x000006,%cl
		jne    _05f4e3_jump

	_05f4ac_jump:
		call   _03ead0_func
		mov    _0bf2fd_data,%ah
		cmp    $0x000006,%ah
		je     _05f4c1_jump
		cmp    $0x000005,%ah
		jne    _05f4d3_jump

	_05f4c1_jump:
		movb   $0x000007,_0bf2fd_data
		movw   $0x000001,_0c3146_data
		jmp    _05f4e3_jump

	_05f4d3_jump:
		movw   $0x000001,_0c3156_data
		movb   $0x000002,_0bf2fd_data

	_05f4e3_jump:
		call   _026d40_func
		mov    $0x000001,%eax
		call   _05a0ec_func
		call   _0215b8_func
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    %ax,_0c3176_data
		xor    %eax,%eax
		mov    _0b9368_data,%al
		mov    %ax,_0c317c_data
		mov    _0c3162_data,%ax
		mov    %ax,_0c3170_data
		mov    _0c3166_data,%ax
		mov    _0a7c9c_data,%bh
		mov    %ax,_0c316c_data
		cmp    $0x000001,%bh
		jne    _05f569_jump
		xor    %eax,%eax
		mov    _0c3162_data,%dx
		mov    _0b9364_data,%al
		add    $0x000140,%edx
		sub    %eax,%edx
		sub    $0x000024,%edx
		mov    %dx,_0c302e_data
		mov    _0c3162_data,%dx
		add    $0x000014,%edx
		sub    %eax,%edx
		mov    %dx,_0c3028_data
		jmp    _05f5a7_jump

	_05f569_jump:
		mov    _0c3162_data,%ax
		xor    %edx,%edx
		mov    _0c0eac_data,%cx
		mov    _0b9364_data,%dl
		add    %ecx,%eax
		sub    %edx,%eax
		sub    $0x000024,%eax
		mov    _0c0eb0_data,%si
		mov    %ax,_0c302e_data
		mov    _0c3162_data,%ax
		add    %esi,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    %ax,_0c3028_data

	_05f5a7_jump:
		mov    _0b9340_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05f5d2_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    _0dda34_data,%al
		mov    %al,0x000082(%edx)

	_05f5d2_jump:
		testb  $0x000004,_0c3348_data
		je     _05f5e0_jump
		call   _04e8b0_func

	_05f5e0_jump:
		mov    _0c313a_data,%ax
		mov    %ax,_0c3138_data
		call   _05cebc_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f5f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _021cc0_func
		call   _021f34_func
		call   _05ce48_func
		testb  $0x000004,_0b937d_data
		je     _05f8d7_jump
		cmpb   $0x000040,_0c33cf_data
		je     _05f62b_jump
		movw   $0x00ffff,_0b9342_data

	_05f62b_jump:
		mov    _0c3130_data,%ax
		cmp    $0x000002,%ax
		jb     _05f641_jump
		jbe    _05f64e_jump
		cmp    $0x000004,%ax
		jbe    _05f66f_jump
		jmp    _05f676_jump

	_05f641_jump:
		cmp    $0x000001,%ax
		jne    _05f676_jump
		call   _06ff04_func
		jmp    _05f67b_jump

	_05f64e_jump:
		cmpb   $0x000006,_0b9369_data
		je     _05f668_jump
		mov    $0x000006,%edx
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		call   _01dea8_func

	_05f668_jump:
		call   _06fb3c_func
		jmp    _05f67b_jump

	_05f66f_jump:
		call   _06f624_func
		jmp    _05f67b_jump

	_05f676_jump:
		call   _05e708_func

	_05f67b_jump:
		cmpw   $0x000000,_0c312e_data
		jle    _05f696_jump
		cmpw   $0x000000,_0c3130_data
		jle    _05f696_jump
		call   _05e840_func
		jmp    _05f6a9_jump

	_05f696_jump:
		mov    $0xffffffff,%edi
		mov    %di,_0c3178_data
		mov    %di,_0c317a_data

	_05f6a9_jump:
		call   _05d00c_func
		mov    $_0b92f8_data,%eax
		call   _01e53c_func
		mov    _0c3178_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05f6d9_jump
		cmpw   $0x0000ff,_0c314e_data
		jne    _05f6d9_jump
		xor    %ebx,%ebx
		mov    %bx,_0c314e_data

	_05f6d9_jump:
		cmpw   $0x000000,_0c3130_data
		jle    _05f6f5_jump
		mov    _0c309c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05f6f5_jump
		call   _05d688_func

	_05f6f5_jump:
		cmpw   $0x000002,_0c3130_data
		jne    _05f885_jump
		mov    _0c3176_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05f747_jump
		mov    _0b9338_data,%ax
		mov    %ax,_0c3178_data
		mov    _0c3148_data,%ax
		mov    %ax,_0b9338_data
		test   %ax,%ax
		jle    _05f734_jump
		call   _05db30_func
		jmp    _05f73b_jump

	_05f734_jump:
		jge    _05f73b_jump
		call   _05dbb4_func

	_05f73b_jump:
		mov    _0c3178_data,%ax
		mov    %ax,_0b9338_data

	_05f747_jump:
		mov    _0b9368_data,%cl
		cmp    $0x00000e,%cl
		je     _05f85e_jump
		mov    %cl,%al
		cmp    $0x000001,%cl
		jb     _05f76d_jump
		jbe    _05f7b3_jump
		cmp    $0x000005,%cl
		je     _05f82b_jump
		jmp    _05f852_jump

	_05f76d_jump:
		test   %cl,%cl
		jne    _05f852_jump
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05f783_jump
		neg    %eax

	_05f783_jump:
		cmp    $0x000001,%eax
		jg     _05f79f_jump
		mov    _0c3146_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05f796_jump
		neg    %eax

	_05f796_jump:
		cmp    $0x000001,%eax
		jle    _05f852_jump

	_05f79f_jump:
		mov    $0x000006,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		jmp    _05f852_jump

	_05f7b3_jump:
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05f7c1_jump
		neg    %eax

	_05f7c1_jump:
		cmp    $0x000001,%eax
		jg     _05f7ea_jump
		mov    _0c3146_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05f7d4_jump
		neg    %eax

	_05f7d4_jump:
		cmp    $0x000001,%eax
		jg     _05f7ea_jump
		mov    $0x000007,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		jmp    _05f852_jump

	_05f7ea_jump:
		mov    _0c3146_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05f7f8_jump
		neg    %eax

	_05f7f8_jump:
		cmp    $0x000004,%eax
		jle    _05f852_jump
		mov    _0c313a_data,%eax
		mov    _0c3160_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000064,%eax
		cmp    %eax,%edx
		jge    _05f852_jump
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		call   _01d724_func
		jmp    _05f852_jump

	_05f82b_jump:
		mov    _0c3146_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05f839_jump
		neg    %eax

	_05f839_jump:
		cmp    $0x000004,%eax
		jg     _05f852_jump
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		call   _01d724_func

	_05f852_jump:
		mov    _0c3162_data,%ax
		mov    %ax,_0c3116_data

	_05f85e_jump:
		mov    _0c3146_data,%edx
		mov    _0c1144_data,%eax
		sar    $0x000010,%edx
		mov    0x000028(%eax),%ebx
		add    %edx,%ebx
		mov    _0c314c_data,%edx
		mov    0x00002c(%eax),%ecx
		sar    $0x000010,%edx
		mov    %ebx,0x000028(%eax)
		add    %edx,%ecx
		mov    %ecx,0x00002c(%eax)

	_05f885_jump:
		mov    $_0c314e_data,%edx
		mov    $_0c3148_data,%eax
		call   _05a288_func
		call   _05ca6c_func
		call   _05d068_func
		mov    _0b9340_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05f901_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		mov    0x000082(%eax),%dl
		mov    %dl,_0dda34_data
		cmp    $0x000003,%dl
		jbe    _05f901_jump
		movb   $0x000003,0x000082(%eax)
		jmp    _05f901_jump

	_05f8d7_jump:
		mov    $0xffffffff,%edx
		call   _05d00c_func
		mov    %dx,_0c317a_data
		call   _05ca6c_func
		mov    _0c33cf_data,%dl
		test   %dl,%dl
		je     _05f901_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0c33cf_data

	_05f901_jump:
		call   _05dc30_func
		call   _07dc0c_func
		testb  $0x000002,_0c3348_data
		je     _05f9fe_jump
		xor    %eax,%eax
		call   _01dd10_func
		testb  $0x000080,_0c3348_data
		je     _05f948_jump
		mov    _0b9352_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05f95a_jump
		mov    _0b9356_data,%dx
		cmp    $0x000100,%dx
		je     _05f948_jump
		test   %dx,%dx
		jne    _05f95a_jump

	_05f948_jump:
		movw   $0x000100,_0b9356_data
		movb   $0x0000c8,_0c33e0_data
		jmp    _05f9a4_jump

	_05f95a_jump:
		testb  $0x000080,_0c3348_data
		je     _05f9a4_jump
		cmpb   $0x000005,_0b9369_data
		setne  %al
		and    $0x0000ff,%eax
		je     _05f9a4_jump
		mov    _0c33e0_data,%bl
		test   %bl,%bl
		jne    _05f99a_jump
		mov    _0b9354_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		sub    $0x000005,%ebx
		cmp    %ebx,%eax
		jge    _05f992_jump
		mov    %ebx,%eax

	_05f992_jump:
		mov    %ax,_0b9356_data
		jmp    _05f9a4_jump

	_05f99a_jump:
		mov    %bl,%bh
		dec    %bh
		mov    %bh,_0c33e0_data

	_05f9a4_jump:
		testb  $0x000008,_0b937d_data
		je     _05f9d5_jump
		xor    %eax,%eax
		mov    _0b9330_data,%dx
		mov    _0b9365_data,%al
		add    %edx,%eax
		mov    _0b932e_data,%bx
		movswl %ax,%edx
		xor    %eax,%eax
		sub    $0x000008,%ebx
		mov    _0b9364_data,%al
		add    %ebx,%eax
		jmp    _05f9f8_jump

	_05f9d5_jump:
		xor    %eax,%eax
		mov    _0b9330_data,%si
		mov    _0b9365_data,%al
		add    %esi,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0b932e_data,%di
		mov    _0b9364_data,%al
		add    %edi,%eax

	_05f9f8_jump:
		cwtl   
		call   _01dc20_func

	_05f9fe_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05fa04_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c113c_data,%edx
		mov    _0c1140_data,%ebx
		mov    _0c3348_data,%al
		and    $0x00009f,%al
		testb  $0x000060,_0c3348_data
		jne    _05fa68_jump
		or     $0x000020,%al
		mov    %al,_0c3348_data
		test   %ebx,%ebx
		je     _05fa4b_jump
		movl   $0x000001,0x000024(%ebx)
		mov    0x000085(%ebx),%cl
		movb   $0x000003,0x000082(%ebx)
		or     $0x000004,%cl
		mov    %cl,0x000085(%ebx)

	_05fa4b_jump:
		test   %edx,%edx
		je     _05faaf_jump
		movl   $0x000001,0x000024(%edx)
		mov    0x000085(%edx),%ch
		movb   $0x000001,0x000082(%edx)
		or     $0x000004,%ch
		jmp    _05faa9_jump

	_05fa68_jump:
		mov    %al,_0c3348_data
		test   %ebx,%ebx
		je     _05fa8e_jump
		movl   $0x000000,0x000024(%ebx)
		mov    0x000085(%ebx),%cl
		movb   $0x000003,0x000082(%ebx)
		and    $0x0000fb,%cl
		mov    %cl,0x000085(%ebx)

	_05fa8e_jump:
		test   %edx,%edx
		je     _05faaf_jump
		movl   $0x000000,0x000024(%edx)
		mov    0x000085(%edx),%ch
		movb   $0x000003,0x000082(%edx)
		and    $0x0000fb,%ch

	_05faa9_jump:
		mov    %ch,0x000085(%edx)

	_05faaf_jump:
		mov    %ebx,_0c1140_data
		mov    %edx,_0c113c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05fac0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c3348_data,%ah
		test   $0x000002,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000fd,%dl
		add    %al,%al
		mov    %dl,_0c3348_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0c3348_data
		test   $0x000002,%dh
		je     _05fb3d_jump
		mov    $0x000022,%ecx
		mov    $_0b95b8_data,%edi
		mov    $_0b92f8_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0c314a_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000004,%eax
		mov    $0x000022,%ecx
		add    %esi,%eax
		mov    _0b9410_data,%esi
		shl    $0x000003,%eax
		mov    $_0b92f8_data,%edi
		add    %eax,%esi
		mov    _0b95bc_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0xffffffff,%edx
		mov    %eax,_0b92fc_data
		mov    $0x0000ce,%eax
		jmp    _05fb7a_jump

	_05fb3d_jump:
		mov    $0x000022,%ecx
		mov    $_0b9640_data,%edi
		mov    $_0b95b8_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000022,%ecx
		mov    $_0b95b8_data,%edi
		mov    $_0b92f8_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000022,%ecx
		mov    $_0b92f8_data,%edi
		mov    $_0b9640_data,%esi
		mov    $0xffffffff,%edx
		mov    $0x0000cf,%eax
		rep movsl %ds:(%esi),%es:(%edi)

	_05fb7a_jump:
		call   _071068_func
		mov    _0b95ee_data,%ax
		mov    %ax,_0b932e_data
		mov    _0b95f0_data,%ax
		mov    %ax,_0b9330_data
		mov    _0b95f8_data,%ax
		mov    %ax,_0b9338_data
		mov    _0b95fa_data,%ax
		mov    %ax,_0b933a_data
		mov    _0b95e0_data,%eax
		mov    %eax,_0b9320_data
		mov    _0b95e4_data,%eax
		mov    %eax,_0b9324_data
		mov    _0b9624_data,%al
		mov    %al,_0b9364_data
		mov    _0b9625_data,%al
		mov    %al,_0b9365_data
		mov    _0b9630_data,%al
		mov    %al,_0b9370_data
		mov    _0b9626_data,%al
		mov    _0b937d_data,%bh
		mov    %al,_0b9366_data
		mov    _0b9627_data,%al
		and    $0x0000f7,%bh
		mov    %al,_0b9367_data
		mov    _0b963d_data,%al
		mov    %bh,%cl
		and    $0x000008,%al
		or     %al,%cl
		mov    _0b9608_data,%ax
		mov    %ax,_0b9348_data
		mov    _0b9629_data,%al
		mov    %al,_0b9369_data
		mov    _0b9628_data,%al
		mov    $0x000017,%edx
		mov    %al,_0b9368_data
		mov    _0b9602_data,%ax
		mov    %dx,_0b935c_data
		mov    %ax,_0b9342_data
		mov    _0b960a_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0b934a_data
		mov    _0b9614_data,%ax
		mov    %bh,_0b937d_data
		mov    %ax,_0b9354_data
		mov    _0b9639_data,%al
		mov    %edx,_0b931c_data
		mov    %al,_0b9379_data
		mov    _0b963b_data,%al
		mov    $0x000002,%edx
		mov    %al,_0b937b_data
		mov    _0b9632_data,%al
		mov    %cl,_0b937d_data
		mov    %al,_0b9372_data
		mov    _0b9633_data,%al
		mov    %cl,%ch
		mov    %al,_0b9373_data
		mov    _0b9635_data,%al
		or     $0x000004,%ch
		mov    %al,_0b9375_data
		mov    $_0b92f8_data,%eax
		mov    %ch,_0b937d_data
		call   _0230e0_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		je     _05fcdb_jump
		mov    $0x00000f,%ebx
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		call   _01dea8_func

	_05fcdb_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05fce4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c3348_data,%dl
		mov    _0c3348_data,%al
		shl    $0x000006,%dl
		mov    %al,%ah
		shr    $0x000007,%dl
		shr    $0x000007,%ah
		cmp    %ah,%dl
		jne    _05ffe2_jump
		mov    _0c314a_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05ffe2_jump
		test   $0x000080,%al
		sete   %al
		and    $0x000001,%al
		mov    _0c3348_data,%ah
		and    $0x00007f,%ah
		mov    %ah,_0c3348_data
		shl    $0x000007,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,%al
		mov    %dl,%ah
		shr    $0x000007,%ah
		and    $0x000001,%ah
		mov    %dl,_0c3348_data
		and    $0x0000fd,%al
		mov    %al,_0c3348_data
		mov    %ah,%al
		mov    _0c3348_data,%dh
		add    %ah,%al
		or     %al,%dh
		mov    %dh,_0c3348_data
		test   $0x000080,%dh
		je     _05fe14_jump
		mov    $0x000022,%ecx
		mov    _0c314a_data,%edx
		mov    $_0b95b8_data,%edi
		sar    $0x000010,%edx
		mov    $_0b92f8_data,%esi
		mov    %edx,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		shl    $0x000004,%eax
		mov    $0x000022,%ecx
		add    %edx,%eax
		mov    _0b9410_data,%esi
		shl    $0x000003,%eax
		mov    $_0b92f8_data,%edi
		add    %eax,%esi
		mov    _0b95bc_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,_0b92fc_data
		mov    _0b95c0_data,%eax
		mov    %eax,_0b9300_data
		mov    _0b95b8_data,%eax
		mov    $_0c3344_data,%edi
		mov    %eax,_0b92f8_data
		mov    _0c3348_data,%al
		mov    $_0c3347_data,%esi
		and    $0x000006,%al
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %al,_0c3348_data
		mov    %al,%ah
		or     $0x000080,%ah
		mov    %ah,_0c3348_data
		mov    %ah,%al
		shr    $0x000007,%ah
		and    $0x000001,%ah
		and    $0x0000fd,%al
		mov    _0c3347_data,%ch
		mov    %al,_0c3348_data
		mov    %ah,%al
		mov    _0c3348_data,%dl
		add    %ah,%al
		and    $0x000041,%ch
		or     %al,%dl
		mov    %ch,_0c3347_data
		mov    %dl,_0c3348_data
		jmp    _05fe86_jump

	_05fe14_jump:
		mov    $0x000022,%ecx
		mov    $_0b9640_data,%edi
		mov    $_0b95b8_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000022,%ecx
		mov    $_0b95b8_data,%edi
		mov    $_0b92f8_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000022,%ecx
		mov    $_0b92f8_data,%edi
		mov    $_0b9640_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $_0c3347_data,%edi
		mov    $_0c3344_data,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _0c3348_data,%bh
		and    $0x00007f,%bh
		mov    %bh,%al
		mov    %bh,%ah
		shr    $0x000007,%ah
		and    $0x000001,%ah
		mov    %bh,_0c3348_data
		and    $0x0000fd,%al
		mov    %al,_0c3348_data
		mov    %ah,%al
		mov    _0c3348_data,%cl
		add    %ah,%al
		or     %al,%cl
		mov    %cl,_0c3348_data

	_05fe86_jump:
		mov    _0b95ee_data,%ax
		mov    %ax,_0b932e_data
		mov    _0b95f0_data,%ax
		mov    %ax,_0b9330_data
		mov    _0b95f8_data,%ax
		mov    %ax,_0b9338_data
		mov    _0b95fa_data,%ax
		mov    %ax,_0b933a_data
		mov    _0b95e0_data,%eax
		mov    %eax,_0b9320_data
		mov    _0b95e4_data,%eax
		mov    %eax,_0b9324_data
		mov    _0b9624_data,%al
		mov    %al,_0b9364_data
		mov    _0b9625_data,%al
		mov    $0x000017,%edx
		mov    %al,_0b9365_data
		mov    _0b9630_data,%al
		mov    %dx,_0b935c_data
		mov    %al,_0b9370_data
		mov    _0b9626_data,%al
		mov    _0b937d_data,%dh
		mov    %al,_0b9366_data
		mov    _0b9627_data,%al
		and    $0x0000f7,%dh
		mov    %al,_0b9367_data
		mov    _0b963d_data,%al
		mov    %dh,%bl
		and    $0x000008,%al
		or     %al,%bl
		mov    _0b9608_data,%ax
		mov    %ax,_0b9348_data
		mov    _0b9629_data,%al
		mov    %al,_0b9369_data
		mov    _0b9628_data,%al
		mov    %al,_0b9368_data
		mov    _0b9602_data,%ax
		mov    %ax,_0b9342_data
		mov    _0b960a_data,%ax
		mov    %dh,_0b937d_data
		mov    %ax,_0b934a_data
		mov    _0b9614_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0b9354_data
		mov    _0b9639_data,%al
		mov    %edx,_0b931c_data
		mov    %al,_0b9379_data
		mov    _0b963b_data,%al
		mov    $0x000002,%edx
		mov    %al,_0b937b_data
		mov    _0b9632_data,%al
		mov    %bl,_0b937d_data
		mov    %al,_0b9372_data
		mov    _0b9633_data,%al
		mov    %bl,%bh
		mov    %al,_0b9373_data
		mov    _0b9635_data,%al
		or     $0x000004,%bh
		mov    %al,_0b9375_data
		mov    $_0b92f8_data,%eax
		mov    %bh,_0b937d_data
		call   _0230e0_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		je     _05ffe2_jump
		mov    $0x00000f,%ebx
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		call   _01dea8_func

	_05ffe2_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ffe8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c33b4_data,%ah
		cmp    $0x000003,%ah
		je     _0600cf_jump
		cmp    $0x000002,%ah
		jne    _060029_jump
		mov    $0x000001,%eax
		call   _05a0ec_func
		call   _067584_func
		xor    %edx,%edx
		mov    $_0b92f8_data,%eax
		mov    %dx,_0c3148_data
		mov    %dx,_0c314e_data
		call   _05b0d8_func

	_060029_jump:
		mov    _0c2f48_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		mov    _0c3012_data,%cx
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _0600cf_jump

	_060056_jump:
		xor    %eax,%eax
		mov    0x000064(%edx),%ax
		testb  $0x000008,_0a52a0_data(,%eax,4)
		jne    _06009a_jump
		cmp    $0x0000a1,%ax
		jne    _060072_jump
		cmpb   $0x000017,0x000070(%edx)
		je     _06009a_jump

	_060072_jump:
		cmpw   $0x00010b,0x000064(%edx)
		jne    _060080_jump
		cmpb   $0x000017,0x000070(%edx)
		je     _06009a_jump

	_060080_jump:
		cmpw   $0x000053,0x000064(%edx)
		jne    _06008d_jump
		cmpb   $0x000001,0x000070(%edx)
		je     _06009a_jump

	_06008d_jump:
		cmpw   $0x000021,0x000064(%edx)
		jne    _0600a8_jump
		cmpb   $0x000023,0x000070(%edx)
		je     _0600a8_jump

	_06009a_jump:
		mov    %edx,%eax
		call   _05b0d8_func
		mov    %edx,%eax
		call   _01f028_func

	_0600a8_jump:
		inc    %ebx
		movswl %bx,%edx
		mov    _0c2f48_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000088,%edx,%edx
		mov    _0b9410_data,%eax
		mov    _0c3012_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jl     _060056_jump

	_0600cf_jump:
		call   _05ca6c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0600dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c101c_data,%eax
		call   _084dd8_func
		call   _03fa5c_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0c30ce_data
		mov    %ah,_0c339c_data
		mov    %ah,_0c339d_data
		mov    %ah,_0c33b4_data
		call   _04250c_func
		mov    $0x000003,%eax
		call   _042168_func
		mov    $0x00fa40,%eax
		call   _085294_func
		mov    %eax,_0c0f50_data
		mov    $0x01f400,%eax
		call   _085294_func
		mov    _0c0f50_data,%edx
		mov    %eax,_0c0f44_data
		test   %edx,%edx
		je     _060146_jump
		test   %eax,%eax
		jne    _060150_jump

	_060146_jump:
		mov    $_0a29ac_data,%eax
		call   _020150_func

	_060150_jump:
		call   _043964_func
		mov    _0a7cde_data,%bl
		cmp    $0x000046,%bl
		je     _060169_jump
		movb   $0x00003c,_0c33a0_data
		jmp    _06016f_jump

	_060169_jump:
		mov    %bl,_0c33a0_data

	_06016f_jump:
		xor    %eax,%eax
		mov    _0c33a0_data,%al
		mov    $0x000001,%ch
		call   _03fa6c_func
		mov    %ch,_0c33a2_data
		call   _018b1f_func
		call   _060aac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060194_func:
		push   %edx
		cmpb   $0x000000,_0c33cb_data
		jne    _0601c0_jump
		mov    $0xffffffff,%edx
		movb   $0x0000ff,(%eax)
		mov    %dx,_0c309e_data
		mov    %dx,_0c30a6_data
		mov    %dx,_0c30a4_data
		call   _042170_func

	_0601c0_jump:
		pop    %edx
		ret    



_0601c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %ah,%ah
		mov    _0c3152_data,%dx
		mov    %ah,_0a7c9d_data
		cmp    _0c3104_data,%dx
		je     _0601ff_jump
		xor    %esi,%esi
		mov    $0x000001,%edi
		mov    %si,_0c3142_data
		mov    %di,_0c3156_data
		mov    %di,_0c3146_data
		jmp    _060214_jump

	_0601ff_jump:
		xor    %ebx,%ebx
		mov    $0x000001,%ecx
		mov    %bx,_0c3156_data
		mov    %cx,_0c3146_data

	_060214_jump:
		cmpb   $0x000001,_0c3396_data
		jne    _060241_jump
		xor    %edx,%edx
		mov    _0bf3a5_data,%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000002,_0bf3b7_data(%eax)
		jne    _060241_jump
		call   _02f654_func
		jmp    _0602a5_jump

	_060241_jump:
		cmpb   $0x000000,_0c33cb_data
		jne    _0602a5_jump
		call   _0606d8_func
		cmpw   $0x000000,_0c3156_data
		je     _0602a0_jump
		mov    $_0c102c_data,%eax
		call   _085230_func
		mov    $_0c1010_data,%eax
		mov    $_0c1010_data,%edx
		call   _085218_func
		mov    _0c3102_data,%ebx
		mov    $_0c102c_data,%eax
		sar    $0x000010,%ebx
		call   _04c41c_func
		mov    $_0c1010_data,%eax
		mov    $0x000001,%ebx
		call   _085200_func
		mov    %bx,_0c30a0_data
		call   _05ef00_func

	_0602a0_jump:
		call   _060824_func

	_0602a5_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0602ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		mov    $0x000002,%ecx
		mov    _0bf2f4_data,%eax
		mov    $0x0000c6,%ebx
		mov    $0x0000a0,%edx
		mov    0x00011c(%eax),%eax
		call   _01b0f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0602d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00012c,%esp
		mov    $0x000001,%ebx
		mov    _0c3104_data,%ax
		xor    %edx,%edx
		mov    %ax,_0c3152_data
		mov    _0c30f8_data,%ax
		mov    %dx,_0c3156_data
		mov    %ax,_0c3142_data
		mov    _0c33cb_data,%ah
		mov    %bx,_0c3146_data
		test   %ah,%ah
		jne    _06049e_jump
		mov    $_0b4028_data,%edx
		mov    $0x000002,%eax
		call   _03e70c_func
		mov    _0c0f78_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _0602ac_func
		call   _018aff_func
		call   _018b0f_func
		call   _03ba10_func
		cmpw   $0x000000,_0c317e_data
		je     _060380_jump
		mov    $_0b3d28_data,%ebx
		mov    $_0b4028_data,%edi

	_060363_jump:
		call   _018b0f_func
		call   _018aff_func
		mov    %ebx,%edx
		mov    %edi,%eax
		call   _03e78c_func
		cmpw   $0x000000,_0c317e_data
		jne    _060363_jump

	_060380_jump:
		mov    $_0c0ff8_data,%eax
		call   _085244_func
		mov    $_0c1010_data,%eax
		mov    $_0c1010_data,%edx
		call   _085224_func
		mov    _0c3140_data,%ebx
		mov    $_0c0ff8_data,%eax
		sar    $0x000010,%ebx
		mov    $0x000001,%edi
		call   _04905c_func
		mov    $_0c0ff8_data,%eax
		mov    $0xfffffffe,%edx
		call   _040a90_func
		call   _04ef70_func
		xor    %ebx,%ebx
		mov    %di,_0c30a0_data
		call   _07333c_func
		call   _040ac4_func
		mov    %edx,_0c1080_data
		mov    _0c33df_data,%dl
		mov    %ebx,_0c107c_data
		test   %dl,%dl
		je     _0603fd_jump
		mov    _0c30f6_data,%eax
		sar    $0x000010,%eax
		call   _0218bc_func
		jmp    _06040a_jump

	_0603fd_jump:
		mov    _0c30f6_data,%eax
		sar    $0x000010,%eax
		call   _021a84_func

	_06040a_jump:
		mov    _0c1074_data,%ecx
		test   %ecx,%ecx
		jle    _060454_jump
		mov    $0x00003c,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000e10,%ebx
		push   %edx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		push   %eax
		mov    _0bf2f4_data,%eax
		mov    0x00024c(%eax),%esi
		push   %esi
		lea    0x00000c(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x000010,%esp
		jmp    _060459_jump

	_060454_jump:
		xor    %dh,%dh
		mov    %dh,(%esp)

	_060459_jump:
		mov    %esp,%eax
		mov    $0x000001,%edx
		call   _040b7c_func
		xor    %bl,%bl
		xor    %cl,%cl
		mov    %bl,_0c33aa_data
		mov    %bl,_0c33a8_data
		mov    %cl,_0c339c_data
		mov    %dx,_0a7cd8_data
		xor    %eax,%eax
		mov    $0xffffffff,%ebx
		xor    %ch,%ch
		mov    %ax,_0c30ce_data
		mov    %ch,_0a7c8e_data
		mov    %bx,_0a7c90_data

	_06049e_jump:
		add    $0x00012c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0604ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000001,%edx
		mov    $0x000005,%ecx
		mov    $0x000002,%ah
		xor    %bl,%bl
		mov    %dx,_0c3146_data
		mov    %dx,_0c3156_data
		mov    %ah,_0b9372_data
		mov    _0b937d_data,%dl
		mov    %bl,_0c33cb_data
		and    $0x0000fe,%dl
		mov    $0x000420,%ebx
		mov    %dl,_0b937d_data
		mov    $0x000001,%dh
		mov    $_0ae238_data,%eax
		mov    %dh,_0c1154_data
		xor    %edx,%edx
		mov    %cx,_0c2f40_data
		call   _085360_func
		mov    $0x000058,%ebx
		mov    $_0b6d58_data,%eax
		xor    %edx,%edx
		call   _085360_func
		call   _05e1e0_func
		mov    _0c3072_data,%eax
		sar    $0x000010,%eax
		dec    %eax
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    $0x000003,%bh
		xor    %cl,%cl
		mov    %bh,_0c2f22_data(,%edx,2)
		mov    %cl,_0c2f23_data(,%edx,2)
		mov    $0x000005,%al
		mov    %cl,_0c2f24_data(,%edx,2)
		mov    %al,_0c2f26_data(,%edx,2)
		xor    %ah,%ah
		mov    %cl,_0c2f27_data(,%edx,2)
		xor    %al,%al

	_06055b_jump:
		movswl %ax,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,_0b7fd0_data(%edx)
		cmp    $0x000017,%ax
		jl     _06055b_jump
		call   _01fffc_func
		call   _08220c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06057c_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		xor    %ah,%ah
		mov    _0c33ab_data,%dl
		mov    %ah,_0c33dd_data
		cmp    $0x000001,%dl
		jne    _0605a6_jump
		mov    $_0c3347_data,%edi
		mov    $_0c3344_data,%esi
		mov    %ah,_0c33ab_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

	_0605a6_jump:
		mov    _0c3349_data,%bl
		and    $0x0000fe,%bl
		mov    _0a525a_data,%dx
		mov    %bl,_0c3349_data
		cmp    $0x000002,%dx
		je     _0605cb_jump
		xor    %ebx,%ebx
		mov    %bx,_0a525a_data

	_0605cb_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		nop

	_0605d0_jump:
		ret    



_0605d4_func:
		cmpb   $0x000000,_0c33cb_data
		je     _0605d0_jump
		call   _074e80_func
		mov    $_0c102c_data,%eax
		call   _085230_func
		mov    $_0c1010_data,%eax
		jmp    _085218_func



_0605f8_func:
		testb  $0x000002,_0c3348_data
		jne    _05fac0_func
		ret    



_060608_func:
		jmp    _073390_jump



_060610_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpl   $0x000000,_0bf2f0_data
		je     _060653_jump
		mov    _0bf2f0_data,%ebx
		xor    %edx,%edx
		test   %ebx,%ebx
		jbe    _060649_jump
		xor    %ebx,%ebx

	_06062a_jump:
		mov    _0bf2f4_data,%eax
		add    %ebx,%eax
		cmpl   $0x000000,(%eax)
		je     _06063b_jump
		call   _0852ac_func

	_06063b_jump:
		mov    _0bf2f0_data,%ecx
		inc    %edx
		add    $0x000004,%ebx
		cmp    %ecx,%edx
		jb     _06062a_jump

	_060649_jump:
		mov    $_0bf2f4_data,%eax
		call   _0852ac_func

	_060653_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		mov    %eax,%eax



_060658_func:
		ret    



_06065c_func:
		call   _03fa5c_func
		cmpb   $0x000000,_0c33cb_data
		je     _0606c9_jump
		mov    $_0c0ff8_data,%eax
		call   _085140_func
		mov    $_0c102c_data,%eax
		call   _085140_func
		mov    $_0c1010_data,%eax
		call   _085140_func
		mov    $_0c1020_data,%eax
		call   _085140_func
		mov    $_0c1004_data,%eax
		call   _085140_func
		mov    $_0c1054_data,%eax
		call   _085140_func
		mov    $_0c1044_data,%eax
		call   _085140_func
		mov    $_0c0f50_data,%eax
		call   _0852ac_func
		mov    $_0c0f44_data,%eax
		call   _0852ac_func
		call   _0727a4_func

	_0606c9_jump:
		call   _084db0_func
		xor    %eax,%eax
		jmp    _085464_func



_0606d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0bf2fd_data,%ah
		xor    %edx,%edx
		cmp    $0x000001,%ah
		je     _060716_jump
		xor    %ebx,%ebx
		mov    _0bf3a5_data,%bl
		mov    %ebx,%eax
		shl    $0x000005,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		cmpb   $0x000000,_0bf3be_data(%eax)
		je     _060742_jump
		add    $_0bf3ac_data,%eax
		lea    0x000012(%eax),%edx
		mov    $_0c0ff8_data,%eax
		jmp    _060738_jump

	_060716_jump:
		mov    _0bf2fe_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0bf314_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    $_0c0ff8_data,%eax
		add    $0x000003,%edx

	_060738_jump:
		call   _03fcac_func
		mov    $0x000001,%edx

	_060742_jump:
		test   %edx,%edx
		je     _06081d_jump
		mov    $0x000300,%ecx
		mov    $_0b3d28_data,%esi
		mov    $_0b30c8_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0b4028_data,%esi
		mov    $_0b3d28_data,%edi
		mov    $_0b4028_data,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%eax
		call   _03e70c_func
		call   _018aff_func
		call   _018b0f_func
		call   _03ba10_func
		call   _03ede8_jump
		call   _0602ac_func
		mov    $0x000064,%edx
		mov    _0c0f50_data,%ebx
		mov    $0x000009,%eax
		mov    %ebx,%ecx
		call   _037e58_func
		test   %al,%al
		je     _0607df_jump
		call   _037ea8_func
		call   _037ee0_func
		call   _03ede8_jump
		call   _0602ac_func

	_0607df_jump:
		call   _018b0f_func
		call   _018aff_func
		call   _03ba10_func
		cmpw   $0x000000,_0c317e_data
		je     _06081d_jump
		mov    $_0b4028_data,%ebx

	_0607fd_jump:
		call   _018b0f_func
		call   _018aff_func
		mov    $_0b3d28_data,%edx
		mov    %ebx,%eax
		call   _03e78c_func
		cmpw   $0x000000,_0c317e_data
		jne    _0607fd_jump

	_06081d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060824_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    _0bf3a5_data,%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0bf3be_data(%eax)
		je     _06089d_jump
		mov    $0x000064,%edx
		mov    $0x000009,%eax
		mov    _0c0f50_data,%ecx
		mov    _0c0f9c_data,%ebx
		call   _037e70_func
		test   %al,%al
		je     _06086f_jump
		call   _037ea8_func
		call   _037ee0_func

	_06086f_jump:
		mov    $_0b4028_data,%edx
		mov    $0x000002,%eax
		mov    $0x000300,%ecx
		mov    $_0b30c8_data,%esi
		mov    $_0b3d28_data,%edi
		call   _03e87c_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_06089d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0608a4_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _085b78_func
		cli    
		mov    _0dda28_data,%edx
		inc    %edx
		mov    $0x00000a,%ebx
		mov    %edx,_0dda28_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _0609c5_jump
		mov    _0dda20_data,%eax
		mov    _0dda24_data,%ebx
		add    %eax,%ebx
		mov    %ebx,_0dda24_data
		cmp    $0x000080,%ebx
		jl     _060907_jump
		mov    %eax,%ebx
		mov    $0x000080,%edx
		neg    %ebx
		mov    %edx,_0dda24_data
		mov    %ebx,_0dda20_data
		jmp    _06091e_jump

	_060907_jump:
		cmp    $0x000020,%ebx
		jg     _06091e_jump
		mov    $0x000020,%edi
		neg    %eax
		mov    %edi,_0dda24_data
		mov    %eax,_0dda20_data

	_06091e_jump:
		mov    $0x000003,%edx
		mov    $0x00003f,%ecx

	_060928_jump:
		xor    %eax,%eax
		mov    _0b4028_data(%edx),%al
		mov    _0dda24_data,%esi
		mov    %eax,%ebx
		imul   %esi,%ebx
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		cmp    %ebx,%eax
		jle    _060946_jump
		mov    %ebx,%eax

	_060946_jump:
		mov    %al,_0b3d28_data(%edx)
		xor    %eax,%eax
		mov    _0b4029_data(%edx),%al
		mov    _0dda24_data,%edi
		mov    %eax,%ebx
		imul   %edi,%ebx
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		cmp    %ebx,%eax
		jle    _06096a_jump
		mov    %ebx,%eax

	_06096a_jump:
		xor    %ebx,%ebx
		mov    %al,_0b3d29_data(%edx)
		mov    _0dda24_data,%eax
		mov    _0b402a_data(%edx),%bl
		imul   %eax,%ebx
		sar    $0x000006,%ebx
		mov    %ecx,%eax
		add    $0x000003,%edx
		cmp    %ebx,%eax
		jle    _06098e_jump
		mov    %ebx,%eax

	_06098e_jump:
		mov    %al,_0b3d27_data(%edx)
		cmp    $0x00001b,%edx
		jne    _060928_jump
		call   _018aff_func
		mov    $_0b3d28_data,%esi
		mov    $0x000008,%ecx
		mov    $0x000001,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_0609c5_jump:
		mov    _0dda30_data,%dx
		mov    _0dda2c_data,%eax
		call   _08b9e4_func
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_060a48_func:
		push   %edx
		sub    $0x00012c,%esp
		call   _0424f0_func
		call   _018b5f_func
		cmpb   $0x0000ff,_0a7c9c_data
		je     _060a67_jump
		call   _03fa5c_func

	_060a67_jump:
		cmpb   $0x000000,_0bf2cc_data
		je     _060aa3_jump
		mov    _0bf2f4_data,%eax
		push   $_0a29cc_data
		mov    0x0000f8(%eax),%edx
		push   %edx
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %esp,%eax
		push   %eax
		push   $_0a29dc_data
		call   _085441_func
		add    $0x000008,%esp
		call   _060610_func

	_060aa3_jump:
		add    $0x00012c,%esp
		pop    %edx
		ret    



_060aac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    $0x000fa0,%eax
		call   _084f3c_func
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _060bcc_jump
		mov    (%esp),%esi
		xor    %edx,%edx

	_060ad1_jump:
		xor    %eax,%eax

	_060ad3_jump:
		inc    %eax
		cmp    $0x0001f4,%ax
		jl     _060ad3_jump
		movswl %dx,%ebx
		shl    $0x000002,%ebx
		add    %esi,%ebx
		call   _018b72_func
		inc    %edx
		mov    %eax,(%ebx)
		cmp    $0x0003e8,%dx
		jl     _060ad1_jump
		mov    $0x000f9c,%eax
		call   _084f3c_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _060bc4_jump
		movb   $0x000001,0x000008(%esp)
		xor    %eax,%eax

	_060b0c_jump:
		movswl %ax,%ebx
		mov    (%esp),%ecx
		shl    $0x000002,%ebx
		mov    0x000004(%ecx,%ebx,1),%edx
		mov    (%ecx,%ebx,1),%esi
		mov    %edx,%ecx
		lea    (%ebx,%ebp,1),%edx
		sub    %esi,%ecx
		mov    %ecx,(%edx)
		test   %ecx,%ecx
		jg     _060b31_jump
		xor    %dl,%dl
		mov    %dl,0x000008(%esp)
		jmp    _060b3a_jump

	_060b31_jump:
		inc    %eax
		add    %ecx,%edi
		cmp    $0x0003e7,%ax
		jl     _060b0c_jump

	_060b3a_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _060bae_jump
		mov    $0x0003e7,%ebx
		mov    %edi,%edx
		mov    %edi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edi
		lea    0x000000(,%eax,4),%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edi,%edx
		shl    $0x000002,%edx
		sub    %edi,%edx
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		xor    %esi,%esi
		mov    %eax,%edx

	_060b80_jump:
		mov    0x000004(%esp),%ecx
		movswl %si,%eax
		mov    %edx,%ebx
		mov    0x000000(%ebp,%eax,4),%eax
		cmp    %ebx,%eax
		jl     _060b9c_jump
		cmp    %ecx,%eax
		jg     _060b9c_jump
		mov    $0x000001,%eax
		jmp    _060b9e_jump

	_060b9c_jump:
		xor    %eax,%eax

	_060b9e_jump:
		test   %eax,%eax
		jne    _060ba6_jump
		incb   0x000008(%esp)

	_060ba6_jump:
		inc    %esi
		cmp    $0x0003e7,%si
		jl     _060b80_jump

	_060bae_jump:
		mov    0x000008(%esp),%bh
		cmp    $0x00000a,%bh
		setb   %al
		mov    %al,_0c339f_data
		mov    %ebp,%eax
		call   _0850d4_func

	_060bc4_jump:
		mov    (%esp),%eax
		call   _0850d4_func

	_060bcc_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060bd8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0c339f_data
		je     _060c85_jump
		call   _018b0f_func
		call   _018b72_func
		lea    0x000bb8(%eax),%ebx
		call   _018bd2_func
		call   _018aff_func
		call   _018b72_func
		xor    %esi,%esi
		mov    %eax,%edi
		jmp    _060c2a_jump

	_060c0f_jump:
		call   _018b0f_func
		call   _018b72_func
		lea    0x000bb8(%eax),%ebx
		call   _018bd2_func
		call   _018aff_func
		inc    %esi

	_060c2a_jump:
		xor    %edx,%edx
		mov    _0c33a0_data,%dl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %si,%edx
		cmp    %eax,%edx
		jl     _060c0f_jump
		call   _018b72_func
		movswl %si,%ebx
		sub    %edi,%eax
		xor    %edx,%edx
		div    %ebx
		xor    %edx,%edx
		mov    %ax,%dx
		mov    %ax,_0c30be_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shr    $0x000005,%eax
		mov    %ax,_0c30bc_data
		mov    %edx,%eax
		mov    _0c30b8_data,%dx
		imul   %eax,%edx
		mov    _0c30bc_data,%ax
		add    %edx,%eax
		mov    %ax,_0c30b6_data

	_060c85_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060c8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,(%esp)
		mov    %ah,0x000004(%esp)
		xor    %dh,%dh
		cli    
		mov    %dx,_0c30b8_data
		call   _018bed_func
		call   _060aac_func
		cmpb   $0x000000,_0c339f_data
		je     _060d69_jump

	_060cbe_jump:
		cmpb   $0x000000,(%esp)
		jne    _060d69_jump
		call   _060bd8_func
		call   _018b0f_func
		call   _018b72_func
		lea    0x000bb8(%eax),%ebx
		call   _018bd2_func
		call   _018aff_func
		xor    %ebx,%ebx
		call   _018b72_func
		mov    _0c30bc_data,%bx
		add    %eax,%ebx
		mov    %eax,%edx
		call   _018bd2_func
		call   _018aff_func
		call   _018b72_func
		sub    %edx,%eax
		imul   $0x000064,%eax,%eax
		xor    %ebx,%ebx
		mov    _0c30be_data,%bx
		imul   $0x000066,%ebx,%ecx
		imul   $0x000062,%ebx,%ebx
		cmp    %ebx,%eax
		jl     _060d2b_jump
		cmp    %ecx,%eax
		jg     _060d2b_jump
		mov    $0x000001,%eax
		jmp    _060d2d_jump

	_060d2b_jump:
		xor    %eax,%eax

	_060d2d_jump:
		test   %eax,%eax
		je     _060d37_jump
		movb   $0x000001,(%esp)
		jmp    _060d3b_jump

	_060d37_jump:
		incb   0x000004(%esp)

	_060d3b_jump:
		cmpb   $0x000002,0x000004(%esp)
		jbe    _060cbe_jump
		call   _0556c8_func
		cmp    $0x0000be,%ax
		setle  %al
		xor    %ah,%ah
		mov    %ax,_0c30b8_data
		mov    %ah,_0c339f_data
		movb   $0x000001,(%esp)
		jmp    _060cbe_jump

	_060d69_jump:
		sti    
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060d80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %dl,%dl
		mov    $0xffffffff,%edi
		mov    $0xffffffff,%esi
		xor    %ecx,%ecx

	_060d93_jump:
		xor    %eax,%eax
		mov    %dl,%al
		lea    0x000000(,%eax,2),%ebx
		mov    %cl,_0ddcda_data(%eax)
		mov    %cl,_0ddcd4_data(%eax)
		cmp    $0x000003,%dl
		jb     _060db8_jump
		jbe    _060dd0_jump
		cmp    $0x000005,%dl
		je     _060de3_jump
		jmp    _060dec_jump

	_060db8_jump:
		cmp    $0x000001,%dl
		jne    _060dec_jump
		mov    $_0a29e4_data,%eax
		call   _072ffc_func
		mov    %ax,_0ddcc8_data(%ebx)
		jmp    _060df8_jump

	_060dd0_jump:
		mov    $_0a29e8_data,%eax
		call   _072ffc_func
		mov    %ax,_0ddcc8_data(%ebx)
		jmp    _060df8_jump

	_060de3_jump:
		mov    %si,_0ddcc8_data(%ebx)
		jmp    _060df8_jump

	_060dec_jump:
		xor    %eax,%eax
		mov    %dl,%al
		mov    %di,_0ddcc8_data(,%eax,2)

	_060df8_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		add    %ebx,%ebx
		mov    _0ddcc6_data(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _060e23_jump
		call   _07382c_func
		test   %eax,%eax
		jne    _060e23_jump
		mov    _0ddcc6_data(%ebx),%eax
		sar    $0x000010,%eax
		call   _0730b8_func

	_060e23_jump:
		inc    %dl
		cmp    $0x000006,%dl
		jb     _060d93_jump
		mov    _0b9410_data,%edx
		mov    _0b9414_data,%cx
		xor    %ebx,%ebx
		test   %cx,%cx
		jle    _060e77_jump

	_060e42_jump:
		cmpw   $0x00010b,0x000064(%edx)
		jne    _060e6b_jump
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _0754d4_func
		test   %al,%al
		jne    _060e6b_jump
		andb   $0x0000f7,0x000085(%edx)
		xor    %eax,%eax
		mov    0x00007a(%edx),%al
		incb   _0ddcda_data(%eax)

	_060e6b_jump:
		inc    %ebx
		add    $0x000088,%edx
		cmp    %cx,%bx
		jl     _060e42_jump

	_060e77_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060e80_func:
		push   %edx
		mov    %eax,%edx
		call   _062870_func
		mov    %al,0x000082(%edx)
		pop    %edx
		ret    



_060e90_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0b9410_data,%edx
		mov    _0b9414_data,%cx
		xor    %ebx,%ebx
		test   %cx,%cx
		jle    _060ed8_jump

	_060ea7_jump:
		cmpw   $0x00010a,0x000064(%edx)
		jne    _060ecc_jump
		mov    %edx,%eax
		call   _060fe4_func
		mov    0x000085(%edx),%ah
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000085(%edx)

	_060ecc_jump:
		inc    %ebx
		add    $0x000088,%edx
		cmp    %cx,%bx
		jl     _060ea7_jump

	_060ed8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060edc_func:
		mov    0x00007a(%eax),%al
		and    $0x0000ff,%eax
		mov    _0ddcda_data(%eax),%al
		ret    



_060eec_func:
		movsbl %al,%eax
		cmp    $0xffffffff,%eax
		jne    _060f00_jump
		mov    _0c33ad_data,%al
		sub    _0c2f46_data,%al
		ret    

	_060f00_jump:
		mov    _0ddcda_data(%eax),%al
		ret    



_060f08_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00007a(%ecx),%al
		call   _040e48_func
		cmpb   $0x000001,0x000070(%ecx)
		je     _060fdd_jump
		xor    %eax,%eax
		mov    0x00007a(%ecx),%al
		cmpb   $0x000000,_0ddcd4_data(%eax)
		jne    _060fdd_jump
		mov    0x000032(%ecx),%edx
		mov    $0x00000e,%eax
		sar    $0x000010,%edx
		call   _071068_func
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01de98_func
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		call   _07549c_func
		mov    0x000038(%ecx),%ax
		add    $0x00000a,%eax
		movswl %ax,%edx
		mov    0x000036(%ecx),%ax
		xor    %ebx,%ebx
		add    $0x00000a,%eax
		mov    0x00007a(%ecx),%bl
		cwtl   
		call   _07db00_func
		mov    %ecx,%eax
		call   _060edc_func
		test   %al,%al
		jbe    _060fdd_jump
		xor    %eax,%eax
		mov    0x00007a(%ecx),%al
		decb   _0ddcda_data(%eax)
		mov    %ecx,%eax
		call   _060edc_func
		test   %al,%al
		jne    _060fdd_jump
		xor    %eax,%eax
		mov    0x00007a(%ecx),%al
		mov    _0ddcc6_data(,%eax,2),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _060fcc_jump
		call   _07382c_func
		test   %eax,%eax
		je     _060fcc_jump
		xor    %eax,%eax
		mov    0x00007a(%ecx),%al
		mov    _0ddcc6_data(,%eax,2),%eax
		sar    $0x000010,%eax
		call   _0733d4_func

	_060fcc_jump:
		xor    %eax,%eax
		mov    0x00007a(%ecx),%al
		movb   $0x000001,_0ddcd4_data(%eax)
		call   _060e90_func

	_060fdd_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060fe4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpw   $0x000001,_0c309e_data
		jne    _061002_jump
		call   _062870_func
		mov    %al,0x000082(%ebx)
		jmp    _061009_jump

	_061002_jump:
		movb   $0x000000,0x000082(%eax)

	_061009_jump:
		mov    0x000034(%ebx),%di
		mov    _0c1d74_data,%eax
		movswl %di,%ecx
		mov    (%eax,%ecx,2),%cx
		movswl %cx,%eax
		cmp    $0xffffffff,%eax
		je     _061148_jump

	_061025_jump:
		cmp    %cx,%di
		je     _061123_jump
		cmp    _0b9414_data,%cx
		jl     _061038_jump
		int3   

	_061038_jump:
		movswl %cx,%edx
		imul   $0x000088,%edx,%edx
		mov    _0b9410_data,%eax
		add    %eax,%edx
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _0754d4_func
		test   %al,%al
		je     _061083_jump
		cmpb   $0x000003,0x000072(%ebx)
		jne    _06110b_jump
		movl   $0x000000,0x000024(%edx)
		mov    0x000085(%edx),%ah
		movb   $0x000000,0x000082(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000085(%edx)
		jmp    _06110b_jump

	_061083_jump:
		cmpb   $0x000003,0x000072(%ebx)
		sete   %al
		movzbl %al,%esi
		mov    %ebx,%eax
		call   _060edc_func
		test   %al,%al
		setne  %al
		and    $0x0000ff,%eax
		xor    %esi,%eax
		je     _0610e0_jump
		testb  $0x000004,0x000085(%edx)
		je     _0610c1_jump
		mov    %edx,%eax
		call   _07d3c4_func
		cmpw   $0x000114,0x000064(%edx)
		jne    _0610c1_jump
		mov    %edx,%eax
		call   _0736a0_func

	_0610c1_jump:
		movl   $0x000000,0x000024(%edx)
		mov    0x000085(%edx),%ah
		movb   $0x000000,0x000082(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000085(%edx)
		jmp    _06110b_jump

	_0610e0_jump:
		testb  $0x000004,0x000085(%edx)
		jne    _0610f0_jump
		mov    %edx,%eax
		call   _07d3c4_func

	_0610f0_jump:
		orb    $0x000004,0x000085(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _062870_func
		mov    %al,0x000082(%edx)

	_06110b_jump:
		movswl %cx,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0c1d74_data,%eax
		mov    (%edx,%eax,1),%cx
		jmp    _061025_jump

	_061123_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _0754d4_func
		test   %al,%al
		jne    _061148_jump
		mov    %ebx,%eax
		call   _060edc_func
		test   %al,%al
		jne    _061148_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _07549c_func

	_061148_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061150_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %edx,%esi
		lea    0x000010(%eax),%edi
		xor    %edx,%edx
		xor    %ecx,%ecx

	_061163_jump:
		mov    (%esp),%eax

	_061166_jump:
		xor    %ebx,%ebx
		mov    %si,%bx
		imul   %ecx,%ebx
		mov    (%ebx,%eax,1),%bl
		test   %bl,%bl
		jne    _061176_jump
		inc    %edx

	_061176_jump:
		inc    %eax
		cmp    %edi,%eax
		jne    _061166_jump
		inc    %ecx
		cmp    $0x000010,%ecx
		jb     _061163_jump
		mov    %edx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06118c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,(%esp)
		mov    %edx,%esi
		mov    %ebx,0x000004(%esp)
		xor    %edi,%edi
		jmp    _0611f1_jump

	_06119f_jump:
		xor    %ebx,%ebx
		jmp    _0611e5_jump

	_0611a3_jump:
		test   %ebx,%ebx
		jne    _0611ae_jump
		test   %edi,%edi
		jne    _0611ae_jump
		add    $0x000010,%ebx

	_0611ae_jump:
		xor    %eax,%eax
		mov    %edi,%ebp
		mov    %si,%ax
		imul   %eax,%ebp
		mov    (%esp),%eax
		xor    %edx,%edx
		add    %ebx,%eax
		mov    %si,%dx
		add    %ebp,%eax
		call   _061150_func
		cmp    $0x000100,%eax
		jne    _0611d4_jump
		incl   (%ecx)
		jmp    _0611e2_jump

	_0611d4_jump:
		test   %eax,%eax
		jne    _0611dc_jump
		incl   (%ecx)
		jmp    _0611e2_jump

	_0611dc_jump:
		mov    0x000018(%esp),%eax
		incl   (%eax)

	_0611e2_jump:
		add    $0x000010,%ebx

	_0611e5_jump:
		xor    %eax,%eax
		mov    %si,%ax
		cmp    %eax,%ebx
		jb     _0611a3_jump
		add    $0x000010,%edi

	_0611f1_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%ax
		cmp    %eax,%edi
		jb     _06119f_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_061208_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00005c,%esp
		mov    %eax,%ebp
		mov    %edx,0x000030(%esp)
		mov    %ebx,0x000058(%esp)
		mov    $0x000001,%edi
		xor    %edx,%edx
		mov    %edi,_0c0e68_data
		xor    %edi,%edi
		mov    %edx,0x000044(%esp)
		mov    0x000058(%esp),%di
		mov    %edx,0x000014(%esp)
		mov    %edi,%edx
		mov    %edi,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		xor    %ebx,%ebx
		mov    %cx,%bx
		mov    %eax,0x00002c(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %eax,(%esp)
		lea    0x000014(%esp),%eax
		mov    $_0c0e68_data,%ecx
		push   %eax
		mov    %edi,%edx
		mov    0x000034(%esp),%eax
		call   _06118c_func
		mov    0x000014(%esp),%edx
		mov    _0c0e68_data,%eax
		add    %edx,%eax
		mov    _0c0e68_data,%edx
		lea    0x000000(,%edx,8),%ebx
		add    %edx,%ebx
		mov    0x000014(%esp),%edx
		mov    %eax,_0c0e6c_data
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		shl    $0x000005,%ebx
		shl    $0x000005,%eax
		lea    0x000020(%ebx,%eax,1),%edx
		mov    %ebp,%eax
		call   _084bac_func
		mov    _0c0e68_data,%ebx
		mov    %eax,%edx
		mov    %eax,0x000028(%esp)
		mov    %eax,0x00003c(%esp)
		lea    0x000000(,%ebx,8),%eax
		add    %ebx,%eax
		mov    (%esp),%ecx
		shl    $0x000005,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		mov    %ebx,0x000024(%esp)
		mov    %edx,0x000038(%esp)
		test   %ecx,%ecx
		jbe    _0614c3_jump
		mov    0x00002c(%esp),%eax
		shl    $0x000002,%eax
		mov    0x00002c(%esp),%ebx
		mov    %eax,0x00001c(%esp)
		imul   $0x000000,%ebx,%eax
		mov    %eax,0x000020(%esp)
		mov    0x000030(%esp),%eax
		add    $0x000010,%eax
		mov    %eax,0x000018(%esp)

	_061302_jump:
		mov    0x000044(%esp),%eax
		cmp    _0c0e6c_data,%eax
		ja     _0614c3_jump
		xor    %edi,%edi
		mov    0x00002c(%esp),%ebp
		mov    %edi,0x000048(%esp)
		test   %ebp,%ebp
		jbe    _0614a1_jump
		mov    0x000024(%esp),%eax
		shl    $0x000004,%eax
		mov    %eax,0x000034(%esp)
		mov    0x000018(%esp),%eax
		mov    0x000020(%esp),%ebp
		mov    %eax,0x000040(%esp)

	_06133b_jump:
		mov    0x000044(%esp),%edi
		inc    %edi
		mov    _0c0e6c_data,%edx
		mov    %edi,0x000044(%esp)
		cmp    %edx,%edi
		ja     _0614a1_jump
		xor    %edx,%edx
		mov    0x000034(%esp),%ebx
		mov    0x000058(%esp),%dx
		imul   %edx,%ebx
		mov    0x000048(%esp),%eax
		mov    0x000030(%esp),%ecx
		shl    $0x000004,%eax
		add    %ecx,%eax
		add    %ebx,%eax
		call   _061150_func
		mov    %eax,%edi
		test   %eax,%eax
		je     _061381_jump
		cmp    $0x000100,%eax
		jne    _061397_jump

	_061381_jump:
		mov    0x00003c(%esp),%ebx
		lea    0x000120(%ebx),%eax
		mov    %eax,0x00003c(%esp)
		lea    0x000100(%ebx),%eax
		jmp    _0613b1_jump

	_061397_jump:
		mov    0x000038(%esp),%ebx
		lea    0x000220(%ebx),%esi
		mov    %esi,0x000038(%esp)
		lea    0x000100(%ebx),%esi
		lea    0x000200(%ebx),%eax

	_0613b1_jump:
		mov    %eax,0x000004(%esp)
		mov    0x000028(%esp),%edx
		mov    %ebx,%eax
		sub    %edx,%eax
		xor    %ecx,%ecx
		mov    %eax,_0b1e08_data(%ebp)
		mov    0x000048(%esp),%eax
		mov    0x000030(%esp),%edx
		shl    $0x000004,%eax
		mov    %ecx,0x000054(%esp)
		add    %eax,%edx
		mov    0x000034(%esp),%eax
		mov    %ecx,0x000050(%esp)
		mov    %eax,0x00004c(%esp)
		mov    0x000040(%esp),%eax
		mov    %edx,0x000008(%esp)
		mov    %eax,0x00000c(%esp)

	_0613ee_jump:
		mov    0x00004c(%esp),%edx
		xor    %al,%al
		mov    %edx,0x000010(%esp)
		mov    0x000008(%esp),%edx

	_0613fc_jump:
		xor    %ecx,%ecx
		mov    0x000058(%esp),%cx
		imul   0x000010(%esp),%ecx
		mov    (%ecx,%edx,1),%ah
		mov    %ah,(%ebx)
		cmp    $0x000100,%edi
		jae    _06142a_jump
		test   %edi,%edi
		je     _06142a_jump
		test   %ah,%ah
		jne    _061422_jump
		movb   $0x0000ff,(%esi)
		jmp    _061427_jump

	_061422_jump:
		inc    %al
		movb   $0x000000,(%esi)

	_061427_jump:
		inc    %esi
		jmp    _061430_jump

	_06142a_jump:
		test   %ah,%ah
		je     _061430_jump
		inc    %al

	_061430_jump:
		mov    0x00000c(%esp),%ecx
		inc    %edx
		inc    %ebx
		cmp    %ecx,%edx
		jne    _0613fc_jump
		test   %al,%al
		jne    _061444_jump
		incl   0x000054(%esp)
		jmp    _06144d_jump

	_061444_jump:
		cmp    $0x000010,%al
		jne    _06144d_jump
		addl   $0x000002,0x000054(%esp)

	_06144d_jump:
		cmpl   $0x00000f,0x000050(%esp)
		jge    _061459_jump
		shll   $0x000002,0x000054(%esp)

	_061459_jump:
		mov    0x00004c(%esp),%edx
		mov    0x000050(%esp),%ecx
		inc    %edx
		inc    %ecx
		mov    %edx,0x00004c(%esp)
		mov    %ecx,0x000050(%esp)
		cmp    $0x000010,%ecx
		jl     _0613ee_jump
		mov    0x000054(%esp),%eax
		mov    0x000004(%esp),%edx
		mov    0x00002c(%esp),%ebx
		add    $0x000004,%ebp
		mov    %eax,(%edx)
		mov    0x000040(%esp),%eax
		mov    0x000048(%esp),%edx
		add    $0x000010,%eax
		inc    %edx
		mov    %eax,0x000040(%esp)
		mov    %edx,0x000048(%esp)
		cmp    %ebx,%edx
		jb     _06133b_jump

	_0614a1_jump:
		mov    0x00001c(%esp),%eax
		mov    0x000020(%esp),%edi
		mov    0x000024(%esp),%ebp
		mov    (%esp),%edx
		add    %eax,%edi
		inc    %ebp
		mov    %edi,0x000020(%esp)
		mov    %ebp,0x000024(%esp)
		cmp    %edx,%ebp
		jb     _061302_jump

	_0614c3_jump:
		mov    0x000028(%esp),%eax
		add    $0x00005c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0614d0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    _0c112c_data,%eax
		mov    %ebx,0x00000c(%edx)
		mov    %eax,(%edx)
		mov    _0c1128_data,%edx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _084bac_func
		mov    $0x00000c,%edx
		mov    %eax,0x000004(%ecx)
		mov    %esi,%eax
		call   _084bac_func
		mov    _0c1128_data,%edx
		xor    %esi,%esi
		mov    %eax,0x000008(%ecx)
		test   %edx,%edx
		jbe    _0615fb_jump
		xor    %eax,%eax
		xor    %edx,%edx

	_061518_jump:
		mov    (%ecx),%ebx
		mov    (%edx,%ebx,1),%bx
		cmp    $0x0004b0,%bx
		jb     _061584_jump
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %esi,%edx
		mov    %eax,%edi
		xor    %eax,%eax
		movzwl _0c1124_data,%ebp
		mov    _0c1126_data,%ax
		sar    $0x00001f,%edx
		push   %eax
		mov    %esi,%eax
		idiv   %ebp
		push   %eax
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		push   %ebp
		push   %edx
		mov    _0c1128_data,%eax
		push   %eax
		xor    %eax,%eax
		push   %esi
		mov    %bx,%ax
		push   %eax
		push   $_0a29f0_data
		push   %edi
		call   _0852d9_func
		add    $0x000024,%esp
		mov    %edi,%eax
		call   _020150_func
		mov    %edi,%eax
		call   _0850d4_func
		jmp    _0615fb_jump

	_061584_jump:
		and    $0x00ffff,%ebx
		mov    0x000004(%ecx),%ebp
		mov    0x00000c(%ecx),%edi
		mov    _0b1e08_data(,%ebx,4),%ebx
		add    %eax,%ebp
		add    %ebx,%edi
		mov    %edi,0x000000(%ebp)
		imul   $0x000120,_0c0e68_data,%edi
		cmp    %edi,%ebx
		ja     _0615ba_jump
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000100(%ebx),%ebx
		jmp    _0615c6_jump

	_0615ba_jump:
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000200(%ebx),%ebx

	_0615c6_jump:
		cmp    $0xaaaaaaaa,%ebx
		jne    _0615d2_jump
		mov    $0x000001,%bl
		jmp    _0615e0_jump

	_0615d2_jump:
		cmp    $0x55555555,%ebx
		jne    _0615de_jump
		xor    %bl,%bl
		jmp    _0615e0_jump

	_0615de_jump:
		mov    $0x000002,%bl

	_0615e0_jump:
		mov    (%ecx),%edi
		add    $0x000004,%eax
		inc    %esi
		mov    %bl,0x000004(%edx,%edi,1)
		mov    _0c1128_data,%ebx
		add    $0x000006,%edx
		cmp    %ebx,%esi
		jb     _061518_jump

	_0615fb_jump:
		xor    %eax,%eax

	_0615fd_jump:
		mov    _0b2f88_data(%eax),%edx
		mov    0x00000c(%ecx),%ebx
		add    $0x000004,%eax
		add    %ebx,%edx
		mov    %edx,_0b9274_data(%eax)
		cmp    $0x000040,%eax
		jne    _0615fd_jump

	_061616_jump:
		mov    _0b2fe8_data(%eax),%edx
		mov    0x00000c(%ecx),%ebx
		add    $0x000004,%eax
		add    %ebx,%edx
		mov    %edx,_0b9274_data(%eax)
		cmp    $0x000080,%eax
		jne    _061616_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_061638_func:
		mov    _0c1124_data,%dx
		mov    %dx,0x000016(%eax)
		mov    _0c1126_data,%dx
		mov    %dx,0x000018(%eax)
		mov    %eax,%eax



_061650_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0c3160_data,%ebx
		mov    _0c0eb0_data,%ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		lea    -0x000008(%ebx),%ecx
		mov    _0c3164_data,%ebx
		mov    _0c0ebc_data,%esi
		sar    $0x000010,%ebx
		add    %esi,%ebx
		mov    0x000014(%edx),%edx
		mov    %ebx,%esi
		sar    $0x000010,%edx
		sar    $0x000004,%esi
		imul   %esi,%edx
		mov    0x000008(%eax),%eax
		mov    %ecx,%esi
		xor    %ch,%ch
		sar    $0x000004,%esi
		and    $0x00000f,%cl
		add    %edx,%esi
		mov    _0c0eb0_data,%dx
		xor    %bh,%bh
		sub    %ecx,%edx
		and    $0x00000f,%bl
		mov    %dx,(%eax)
		mov    _0c0ebc_data,%dx
		sub    %ebx,%edx
		movswl (%eax),%ebx
		mov    %dx,0x000002(%eax)
		mov    _0c0eac_data,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    (%eax),%edx
		mov    _0c0eb4_data,%ecx
		sar    $0x000010,%edx
		sub    %edx,%ecx
		mov    %esi,0x000008(%eax)
		mov    %ecx,%edx
		test   $0x00000f,%bl
		setne  %cl
		and    $0x0000ff,%ecx
		sar    $0x000004,%ebx
		add    %ecx,%ebx
		mov    %bl,0x000004(%eax)
		test   $0x00000f,%dl
		setne  %bl
		and    $0x0000ff,%ebx
		sar    $0x000004,%edx
		add    %ebx,%edx
		mov    %dl,0x000005(%eax)
		mov    (%eax),%ax
		xor    %ah,%ah
		and    $0x000003,%al
		mov    $0x000004,%ebx
		cwtl   
		mov    _0c0f5c_data,%edx
		sub    %eax,%ebx
		add    %ebx,%edx
		mov    %ebx,_0c0f48_data
		mov    %edx,_0c0f50_data
		mov    %edx,_0c0f78_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06172c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x0000c8,%ebx
		mov    $0x000004,%ecx
		xor    %edx,%edx
		mov    $0x000140,%esi
		mov    %edx,_0c0ebc_data
		mov    %ebx,_0c0eb4_data
		mov    %ecx,_0c0eb0_data
		mov    %esi,_0c0eac_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061760_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c1124_data,%cx
		shl    $0x000004,%ecx
		mov    _0c0eac_data,%dx
		mov    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0c1126_data,%ax
		mov    _0c0eb4_data,%bx
		shl    $0x000004,%eax
		sub    $0x000140,%ecx
		mov    %eax,%esi
		mov    %cx,_0c302c_data
		sub    %ebx,%esi
		sub    $0x0000c8,%eax
		mov    %esi,%ebx
		mov    %ax,_0c3034_data
		test   %dx,%dx
		jge    _0617b1_jump
		xor    %edx,%edx

	_0617b1_jump:
		test   %bx,%bx
		jge    _0617b8_jump
		xor    %ebx,%ebx

	_0617b8_jump:
		mov    _0c0eb0_data,%ax
		neg    %eax
		add    $0x000008,%eax
		mov    %ax,_0c3116_data
		mov    %edx,%eax
		add    $0x000008,%eax
		mov    %ax,_0c3124_data
		mov    _0c0ebc_data,%ax
		mov    %eax,%ecx
		mov    %ax,_0c3118_data
		neg    %ecx
		mov    %bx,_0c3122_data
		mov    %cx,_0c3118_data
		mov    %bx,_0c314a_data
		mov    %dx,_0c313c_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06180c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c3162_data,%bx
		mov    _0c3166_data,%cx
		mov    _0c0eb0_data,%eax
		movswl %bx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _061835_jump
		mov    _0c0eb0_data,%bx
		neg    %ebx

	_061835_jump:
		mov    _0c313c_data,%dx
		cmp    %dx,%bx
		jle    _061843_jump
		mov    %edx,%ebx

	_061843_jump:
		mov    _0c0ebc_data,%eax
		movswl %cx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _06185a_jump
		mov    _0c0ebc_data,%cx
		neg    %ecx

	_06185a_jump:
		mov    _0c314a_data,%si
		cmp    %si,%cx
		jle    _061868_jump
		mov    %esi,%ecx

	_061868_jump:
		mov    %cx,_0c3166_data
		mov    %bx,_0c3162_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061aa0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0b9320_data,%ecx
		mov    _0c3160_data,%eax
		mov    _0c0eb0_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0b9364_data,%dl
		add    %eax,%ebx
		add    %edx,%ecx
		add    $0x000010,%ebx
		cmp    %ebx,%ecx
		jg     _061af5_jump
		mov    _0c0eb0_data,%ebx
		sub    %edx,%ebx
		lea    0x000010(%ebx),%edx
		add    %eax,%edx
		mov    %edx,_0b9320_data
		mov    _0b9320_data,%ax
		sub    _0c3116_data,%ax
		add    $0x000008,%eax
		mov    %ax,_0b932e_data

	_061af5_jump:
		mov    _0b9320_data,%ebx
		mov    _0c3160_data,%eax
		mov    _0c0eac_data,%ecx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0b9364_data,%dl
		add    %ecx,%eax
		add    %edx,%ebx
		sub    $0x000018,%eax
		cmp    %eax,%ebx
		jle    _061b40_jump
		sub    %edx,%eax
		sub    $0x000008,%eax
		mov    %eax,_0b9320_data
		mov    _0c3162_data,%bx
		mov    _0b9320_data,%ax
		sub    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,_0b932e_data

	_061b40_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061b44_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    _0c0eb0_data,%di
		sub    %edi,%eax
		mov    %eax,0x000004(%esp)
		mov    _0c0eac_data,%ax
		sub    %edx,%eax
		mov    _0c0ebc_data,%di
		mov    %eax,(%esp)
		mov    %ebx,%eax
		sub    %edi,%eax
		mov    %eax,0x000008(%esp)
		movswl %bx,%eax
		mov    %eax,_0c0ebc_data
		movswl %cx,%eax
		mov    _0c0eb4_data,%di
		mov    %eax,_0c0eb4_data
		movswl %si,%eax
		sub    %ecx,%edi
		mov    %eax,_0c0eb0_data
		movswl %dx,%eax
		mov    _0c0eb4_data,%edx
		mov    %eax,_0c0eac_data
		cmp    $0x0000c8,%edx
		jle    _061bb3_jump
		movl   $0x0000c8,_0c0eb4_data

	_061bb3_jump:
		cmpl   $0x000000,_0c0ebc_data
		jge    _061bc4_jump
		xor    %esi,%esi
		mov    %esi,_0c0ebc_data

	_061bc4_jump:
		cmpl   $0x000140,_0c0eac_data
		jle    _061bda_jump
		movl   $0x000140,_0c0eac_data

	_061bda_jump:
		cmpl   $0x000004,_0c0eb0_data
		jge    _061bed_jump
		movl   $0x000004,_0c0eb0_data

	_061bed_jump:
		cmpl   $0x000004,_0c0eb0_data
		jl     _061c96_jump
		mov    0x000004(%esp),%eax
		mov    _0c3116_data,%dx
		mov    _0c3124_data,%bx
		sub    %eax,%edx
		add    (%esp),%ebx
		mov    %dx,_0c3116_data
		mov    %bx,_0c3124_data
		cmp    $0x00000c,%dx
		jle    _061c2e_jump
		movw   $0x00000c,_0c3116_data

	_061c2e_jump:
		mov    _0c302a_data,%eax
		mov    _0c3122_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    $0x000008,%eax
		cmp    %eax,%ebx
		jge    _061c57_jump
		mov    _0c302c_data,%ax
		add    $0x000008,%eax
		mov    %ax,_0c3124_data

	_061c57_jump:
		mov    (%esp),%eax
		mov    _0c313c_data,%dx
		add    %eax,%edx
		mov    _0c302c_data,%bx
		mov    %dx,_0c313c_data
		cmp    %bx,%dx
		jge    _061c7d_jump
		mov    %bx,_0c313c_data

	_061c7d_jump:
		mov    _0c313c_data,%ax
		mov    _0c3162_data,%cx
		cmp    %cx,%ax
		jge    _061c96_jump
		mov    %cx,_0c313c_data

	_061c96_jump:
		cmpl   $0x000000,_0c0ebc_data
		jl     _061d28_jump
		mov    0x000008(%esp),%eax
		mov    _0c3118_data,%si
		sub    %eax,%esi
		mov    _0c3122_data,%ax
		add    %edi,%eax
		mov    %si,_0c3118_data
		mov    %ax,_0c3122_data
		test   %si,%si
		jle    _061cd3_jump
		xor    %ebx,%ebx
		mov    %bx,_0c3118_data

	_061cd3_jump:
		mov    _0c3122_data,%ax
		mov    _0c3034_data,%cx
		cmp    %cx,%ax
		jge    _061cec_jump
		mov    %cx,_0c3122_data

	_061cec_jump:
		mov    _0c314a_data,%si
		add    %edi,%esi
		mov    _0c3034_data,%di
		mov    %si,_0c314a_data
		cmp    %di,%si
		jge    _061d0f_jump
		mov    %di,_0c314a_data

	_061d0f_jump:
		mov    _0c314a_data,%ax
		mov    _0c3166_data,%dx
		cmp    %dx,%ax
		jge    _061d28_jump
		mov    %dx,_0c314a_data

	_061d28_jump:
		cmpw   $0x000000,_0c311c_data
		je     _061d4a_jump
		mov    _0c3116_data,%ax
		mov    %ax,_0c311c_data
		mov    _0c3124_data,%ax
		mov    %ax,_0c311e_data

	_061d4a_jump:
		cmpw   $0x000014,_0c1124_data
		ja     _061d6f_jump
		cmpl   $0x000004,_0c0eb0_data
		jne    _061d6f_jump
		mov    _0c3124_data,%ax
		mov    %ax,_0c3116_data
		mov    %ax,_0c3162_data

	_061d6f_jump:
		call   _06180c_func
		cmpb   $0x000000,_0c33ba_data
		je     _061db0_jump
		cmpw   $0x000003,_0c3152_data
		jne    _061d91_jump
		cmpw   $0x00000a,_0c3142_data
		je     _061d98_jump

	_061d91_jump:
		mov    $0x000001,%eax
		jmp    _061d9a_jump

	_061d98_jump:
		xor    %eax,%eax

	_061d9a_jump:
		test   %eax,%eax
		je     _061db0_jump
		mov    _0c3162_data,%ax
		mov    %ax,_0c3124_data
		mov    %ax,_0c3116_data

	_061db0_jump:
		mov    _0c0eac_data,%ax
		mov    _0c313a_data,%ebx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    %ax,%cx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    _0c1124_data,%bx
		shl    $0x000004,%ebx
		mov    _0c0eb4_data,%dx
		cmp    %ebx,%ecx
		jle    _061df0_jump
		mov    _0c1124_data,%bx
		shl    $0x000004,%ebx
		sub    %eax,%ebx
		mov    %bx,_0c313c_data

	_061df0_jump:
		mov    _0c3148_data,%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    %dx,%ax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1126_data,%ax
		shl    $0x000004,%eax
		cmp    %eax,%ebx
		jle    _061e20_jump
		mov    _0c1126_data,%ax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %ax,_0c314a_data

	_061e20_jump:
		mov    _0c0eb0_data,%eax
		mov    %eax,_0c0ea4_data
		mov    _0c0eac_data,%eax
		mov    %eax,_0c0e98_data
		mov    _0c0ebc_data,%eax
		mov    %eax,_0c0e94_data
		mov    _0c0eb4_data,%eax
		mov    _0a7cd3_data,%dl
		mov    %eax,_0c0e90_data
		test   %dl,%dl
		je     _061e57_jump
		call   _061aa0_func

	_061e57_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    



_061e60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%edx
		mov    $0x00000c,%ebx
		mov    _0c1120_data,%eax
		mov    $0x000004,%ebp
		mov    %edx,0x000008(%esp)
		mov    0x000044(%eax),%ax
		mov    %ebx,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _061f2c_jump

	_061e96_jump:
		mov    _0c1120_data,%esi
		mov    0x000004(%esp),%edi
		mov    (%esi),%esi
		add    %edi,%esi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000006(%esi),%dl
		mov    0x000005(%esi),%al
		mov    %dx,0x000010(%esp)
		test   $0x000001,%al
		je     _061ebc_jump
		and    $0x010000,%eax

	_061ebc_jump:
		mov    0x00000e(%esp),%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    (%esp),%eax
		call   _084bac_func
		mov    %eax,_0ae688_data(%ebp)
		mov    _0c1120_data,%eax
		mov    0x000008(%eax),%ebx
		mov    (%esi),%eax
		xor    %edi,%edi
		add    %eax,%ebx
		mov    _0ae688_data(%ebp),%eax
		jmp    _061f0a_jump

	_061eeb_jump:
		xor    %edx,%edx
		jmp    _061f00_jump

	_061eef_jump:
		mov    (%ebx),%cl
		test   %cl,%cl
		jne    _061efa_jump
		movb   $0x0000ff,(%eax)
		jmp    _061efd_jump

	_061efa_jump:
		movb   $0x000000,(%eax)

	_061efd_jump:
		inc    %ebx
		inc    %eax
		inc    %edx

	_061f00_jump:
		xor    %ecx,%ecx
		mov    0x000005(%esi),%cl
		cmp    %ecx,%edx
		jb     _061eef_jump
		inc    %edi

	_061f0a_jump:
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%edi
		jb     _061eeb_jump
		mov    0x000004(%esp),%edx
		mov    0x000008(%esp),%ebx
		add    $0x000004,%ebp
		add    $0x00000c,%edx
		inc    %ebx
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)

	_061f2c_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000008(%esp),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		ja     _061e96_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061f50_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		mov    0x000008(%edx),%eax
		mov    0x000005(%eax),%dl
		mov    %eax,0x000014(%esp)
		cmp    $0x000001,%dl
		jbe    _0622ca_jump
		cmpb   $0x000001,0x000004(%eax)
		jbe    _0622ca_jump
		mov    (%eax),%eax
		mov    0x000014(%esp),%ebx
		sar    $0x000010,%eax
		movswl (%ebx),%ebx
		mov    %eax,%edx
		add    %ebx,%ebp
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		add    %edx,%ebp
		add    %eax,%ebp
		mov    0x000014(%esp),%eax
		mov    0x000008(%eax),%eax
		mov    %eax,0x000020(%esp)
		mov    0x000014(%esp),%eax
		mov    (%eax),%ax
		mov    %ax,0x000040(%esp)
		mov    %eax,%edx
		mov    0x000014(%esp),%eax
		mov    0x000002(%eax),%ax
		xor    %ebx,%ebx
		mov    %eax,0x000034(%esp)
		mov    %ax,0x00003c(%esp)
		mov    0x000020(%esp),%eax
		mov    %ebx,0x00002c(%esp)
		mov    %eax,0x00000c(%esp)
		mov    %eax,%ebx
		shl    $0x000002,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    %eax,0x00001c(%esp)
		mov    %ebx,%eax
		shl    $0x000002,%eax
		mov    %ebp,0x000008(%esp)
		mov    %eax,0x000024(%esp)
		jmp    _06206d_jump

	_061fea_jump:
		cmpl   $0x000000,0x000020(%esp)
		jl     _06203f_jump
		mov    0x00001c(%esp),%ebx
		mov    (%ecx),%eax
		add    %ebx,%eax
		mov    0x000004(%eax),%bl
		test   %bl,%bl
		je     _06203f_jump
		cmp    $0x000001,%bl
		jne    _062023_jump
		mov    0x00003a(%esp),%ebx
		mov    0x000024(%esp),%edi
		mov    0x000004(%ecx),%esi
		movswl %dx,%eax
		add    %edi,%esi
		sar    $0x000010,%ebx
		mov    %ebp,%edi
		mov    (%esi),%esi
		call   _01723f_func
		jmp    _06203f_jump

	_062023_jump:
		mov    0x00003a(%esp),%ebx
		mov    0x000024(%esp),%edi
		mov    0x000004(%ecx),%esi
		movswl %dx,%eax
		add    %edi,%esi
		sar    $0x000010,%ebx
		mov    %ebp,%edi
		mov    (%esi),%esi
		call   _0170a7_func

	_06203f_jump:
		mov    0x00001c(%esp),%eax
		mov    0x000024(%esp),%ebx
		mov    0x000020(%esp),%esi
		mov    0x00002c(%esp),%edi
		add    $0x000010,%ebp
		add    $0x000010,%edx
		add    $0x000006,%eax
		add    $0x000004,%ebx
		inc    %esi
		inc    %edi
		mov    %eax,0x00001c(%esp)
		mov    %ebx,0x000024(%esp)
		mov    %esi,0x000020(%esp)
		mov    %edi,0x00002c(%esp)

	_06206d_jump:
		mov    0x000014(%esp),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esp),%esi
		mov    0x000004(%ebx),%al
		cmp    %esi,%eax
		jg     _061fea_jump
		mov    0x000008(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000014(%ecx),%eax
		mov    $0x000001,%edi
		sar    $0x000010,%eax
		add    $0x001400,%edx
		add    %eax,%ebx
		mov    %edi,0x000010(%esp)
		jmp    _0621e2_jump

	_0620a6_jump:
		mov    0x000028(%esp),%eax
		mov    %eax,0x000004(%esp)
		imul   $0x000006,%eax,%eax
		mov    (%ecx),%esi
		add    %eax,%esi
		mov    0x000004(%esi),%al
		mov    %edx,(%esp)
		test   %al,%al
		je     _0620f3_jump
		cmp    $0x000001,%al
		jne    _0620dc_jump
		mov    0x00003e(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _01723f_func
		jmp    _0620f3_jump

	_0620dc_jump:
		mov    0x00003e(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _0170a7_func

	_0620f3_jump:
		mov    $0x000001,%edi
		mov    0x000028(%esp),%ebp
		add    %edi,%ebp
		add    $0x000010,%edx
		mov    %ebp,0x000028(%esp)
		lea    0x000000(,%ebp,4),%ebx
		mov    %edi,0x00002c(%esp)
		imul   $0x000006,%ebp,%ebp
		jmp    _06215b_jump

	_062115_jump:
		mov    (%ecx),%esi
		add    %ebp,%esi
		mov    0x000004(%esi),%al
		test   %al,%al
		je     _062140_jump
		cmp    $0x000001,%al
		jne    _062133_jump
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _016d22_func
		jmp    _062140_jump

	_062133_jump:
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _016b45_func

	_062140_jump:
		mov    0x000028(%esp),%eax
		mov    0x00002c(%esp),%esi
		add    $0x000010,%edx
		add    $0x000004,%ebx
		add    $0x000006,%ebp
		inc    %eax
		inc    %esi
		mov    %eax,0x000028(%esp)
		mov    %esi,0x00002c(%esp)

	_06215b_jump:
		mov    0x000014(%esp),%esi
		movzbl 0x000004(%esi),%esi
		mov    0x00002c(%esp),%edi
		dec    %esi
		cmp    %edi,%esi
		jg     _062115_jump
		mov    (%ecx),%eax
		add    %eax,%ebp
		cmpb   $0x000000,0x000004(%ebp)
		je     _0621c4_jump
		mov    0x000010(%esp),%esi
		mov    0x000034(%esp),%eax
		mov    0x00002c(%esp),%edi
		shl    $0x000004,%esi
		shl    $0x000004,%edi
		add    %eax,%esi
		add    0x000040(%esp),%edi
		cmpb   $0x000001,0x000004(%ebp)
		jne    _0621ad_jump
		movswl %si,%esi
		mov    0x000004(%ecx),%ebp
		movswl %di,%eax
		mov    %edx,%edi
		mov    (%ebx,%ebp,1),%ebp
		mov    %esi,%ebx
		mov    %ebp,%esi
		call   _01723f_func
		jmp    _0621c4_jump

	_0621ad_jump:
		movswl %si,%esi
		mov    0x000004(%ecx),%ebp
		movswl %di,%eax
		mov    %edx,%edi
		mov    (%ebx,%ebp,1),%ebp
		mov    %esi,%ebx
		mov    %ebp,%esi
		call   _0170a7_func

	_0621c4_jump:
		mov    (%esp),%edx
		mov    0x000004(%esp),%ebx
		mov    0x000010(%esp),%ebp
		mov    0x000014(%ecx),%eax
		add    $0x001400,%edx
		sar    $0x000010,%eax
		inc    %ebp
		add    %eax,%ebx
		mov    %ebp,0x000010(%esp)

	_0621e2_jump:
		mov    %ebx,0x000028(%esp)
		mov    0x000014(%esp),%ebx
		xor    %eax,%eax
		mov    0x000034(%esp),%esi
		mov    0x000005(%ebx),%al
		mov    0x000010(%esp),%ebx
		mov    0x000028(%esp),%ebp
		shl    $0x000004,%ebx
		dec    %eax
		add    %esi,%ebx
		mov    0x000010(%esp),%esi
		shl    $0x000002,%ebp
		cmp    %esi,%eax
		jg     _0620a6_jump
		mov    0x000040(%esp),%eax
		mov    %bx,0x000038(%esp)
		mov    0x000028(%esp),%ebx
		mov    %ax,0x000030(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		xor    %edi,%edi
		add    %eax,%eax
		mov    %edi,0x00002c(%esp)
		mov    %eax,0x000018(%esp)
		jmp    _0622b7_jump

	_06223c_jump:
		mov    0x000018(%esp),%esi
		mov    (%ecx),%eax
		add    %esi,%eax
		mov    0x000004(%eax),%bl
		test   %bl,%bl
		je     _062288_jump
		cmp    $0x000001,%bl
		jne    _06226d_jump
		mov    0x000036(%esp),%ebx
		mov    0x00002e(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _01723f_func
		jmp    _062288_jump

	_06226d_jump:
		mov    0x000036(%esp),%ebx
		mov    0x00002e(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _0170a7_func

	_062288_jump:
		mov    0x000030(%esp),%edi
		mov    0x000028(%esp),%eax
		mov    0x00002c(%esp),%ebx
		add    $0x000010,%edx
		add    $0x000004,%ebp
		add    $0x000010,%edi
		inc    %eax
		inc    %ebx
		mov    %di,0x000030(%esp)
		mov    0x000018(%esp),%edi
		mov    %eax,0x000028(%esp)
		add    $0x000006,%edi
		mov    %ebx,0x00002c(%esp)
		mov    %edi,0x000018(%esp)

	_0622b7_jump:
		mov    0x000014(%esp),%ebx
		xor    %eax,%eax
		mov    0x000004(%ebx),%al
		cmp    0x00002c(%esp),%eax
		jg     _06223c_jump

	_0622ca_jump:
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0622d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    _0c0eb4_data,%edx
		mov    _0c0ebc_data,%ecx
		mov    _0c0eac_data,%ebx
		mov    _0c0eb0_data,%eax
		call   _017eca_func
		mov    _0c0f50_data,%eax
		mov    $_0169db_func,%edx
		mov    %eax,_0c0f5c_data
		mov    %edx,_0c0f58_data
		lea    0x000004(%eax),%ebx
		mov    _0c0fd4_data,%edx
		mov    $_0ae6d8_data,%eax
		mov    %ebx,_0c0f50_data
		call   _061638_func
		mov    $0x00fa00,%ebx
		mov    _0a7c98_data,%eax
		xor    %edx,%edx
		call   _085360_func
		mov    _0c0f50_data,%edi
		call   _01696f_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062344_func:
		mov    _0c0f5c_data,%eax
		mov    %eax,_0c0f50_data
		mov    %eax,_0c0f78_data
		ret    



_062354_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000048,%esp
		mov    %eax,%ebp
		mov    %edx,0x000014(%esp)
		mov    0x000008(%edx),%eax
		mov    0x000005(%eax),%dl
		mov    %eax,0x000020(%esp)
		cmp    $0x000001,%dl
		jbe    _0625ee_jump
		cmpb   $0x000001,0x000004(%eax)
		jbe    _0625ee_jump
		mov    (%eax),%eax
		mov    0x000020(%esp),%edx
		sar    $0x000010,%eax
		movswl (%edx),%edx
		mov    %eax,%ebx
		add    %edx,%ebp
		shl    $0x000008,%ebx
		shl    $0x000006,%eax
		add    %ebx,%ebp
		add    %eax,%ebp
		mov    0x000020(%esp),%eax
		mov    (%eax),%ax
		mov    0x000020(%esp),%edx
		mov    %ax,0x000024(%esp)
		mov    %ax,0x000038(%esp)
		mov    0x000020(%esp),%eax
		mov    0x000008(%edx),%edx
		mov    0x000002(%eax),%ax
		mov    %edx,0x00000c(%esp)
		mov    %eax,0x000028(%esp)
		mov    %ax,0x000030(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		xor    %ecx,%ecx
		add    %eax,%eax
		mov    %ebp,(%esp)
		mov    %eax,0x00001c(%esp)
		jmp    _062434_jump

	_0623dc_jump:
		test   %edx,%edx
		jl     _062418_jump
		mov    0x000014(%esp),%eax
		mov    0x00001c(%esp),%esi
		mov    (%eax),%eax
		add    %esi,%eax
		mov    0x000002(%eax),%al
		mov    %al,0x00003c(%esp)
		test   %al,%al
		je     _062418_jump
		mov    0x00002e(%esp),%ebx
		mov    0x000036(%esp),%eax
		movzbl 0x00003c(%esp),%esi
		mov    %ebp,%edi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    _0b9278_data(,%esi,4),%esi
		call   _01723f_func

	_062418_jump:
		mov    0x000038(%esp),%ebx
		mov    0x00001c(%esp),%edi
		add    $0x000010,%ebp
		inc    %edx
		inc    %ecx
		add    $0x000010,%ebx
		add    $0x000006,%edi
		mov    %bx,0x000038(%esp)
		mov    %edi,0x00001c(%esp)

	_062434_jump:
		mov    0x000020(%esp),%ebx
		xor    %eax,%eax
		mov    0x000004(%ebx),%al
		cmp    %eax,%ecx
		jl     _0623dc_jump
		mov    (%esp),%edx
		mov    0x000014(%esp),%ebp
		mov    0x00000c(%esp),%ebx
		mov    $0x000001,%ecx
		mov    0x000014(%ebp),%ebp
		add    $0x001400,%edx
		sar    $0x000010,%ebp
		mov    %ecx,0x000010(%esp)
		add    %ebx,%ebp
		jmp    _062549_jump

	_062468_jump:
		mov    %ebp,0x000008(%esp)
		imul   $0x000006,%ebp,%eax
		mov    0x000014(%esp),%ebx
		mov    (%ebx),%ebx
		mov    0x000002(%ebx,%eax,1),%al
		mov    %edx,0x000004(%esp)
		test   %al,%al
		je     _0624a0_jump
		movswl %cx,%ebx
		mov    0x000022(%esp),%ecx
		sar    $0x000010,%ecx
		and    $0x0000ff,%eax
		mov    %edx,%edi
		mov    _0b9278_data(,%eax,4),%esi
		mov    %ecx,%eax
		call   _01723f_func

	_0624a0_jump:
		mov    $0x000001,%ecx
		add    %ecx,%ebp
		add    $0x000010,%edx
		imul   $0x000006,%ebp,%ebx
		jmp    _0624d6_jump

	_0624af_jump:
		mov    0x000014(%esp),%eax
		mov    (%eax),%eax
		mov    0x000002(%ebx,%eax,1),%al
		test   %al,%al
		je     _0624ce_jump
		movzbl %al,%esi
		mov    %edx,%edi
		mov    _0b9278_data(,%esi,4),%esi
		call   _016d22_func

	_0624ce_jump:
		add    $0x000010,%edx
		add    $0x000006,%ebx
		inc    %ebp
		inc    %ecx

	_0624d6_jump:
		mov    0x000020(%esp),%esi
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		dec    %eax
		cmp    %eax,%ecx
		jl     _0624af_jump
		mov    0x000014(%esp),%eax
		mov    (%eax),%eax
		mov    0x000002(%ebx,%eax,1),%al
		mov    %al,0x000044(%esp)
		test   %al,%al
		je     _062526_jump
		mov    0x000010(%esp),%eax
		mov    0x000028(%esp),%ebx
		mov    0x000024(%esp),%esi
		shl    $0x000004,%eax
		shl    $0x000004,%ecx
		add    %ebx,%eax
		add    %esi,%ecx
		movswl %ax,%ebx
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    0x000044(%esp),%cl
		mov    %edx,%edi
		mov    _0b9278_data(,%ecx,4),%esi
		call   _01723f_func

	_062526_jump:
		mov    0x000004(%esp),%edx
		mov    0x000014(%esp),%ebp
		mov    0x000008(%esp),%eax
		mov    0x000010(%esp),%ebx
		add    $0x001400,%edx
		mov    0x000014(%ebp),%ebp
		inc    %ebx
		sar    $0x000010,%ebp
		mov    %ebx,0x000010(%esp)
		add    %eax,%ebp

	_062549_jump:
		mov    0x000020(%esp),%ebx
		mov    0x000010(%esp),%ecx
		mov    0x000028(%esp),%esi
		xor    %eax,%eax
		shl    $0x000004,%ecx
		mov    0x000005(%ebx),%al
		mov    0x000010(%esp),%ebx
		dec    %eax
		add    %esi,%ecx
		cmp    %ebx,%eax
		jg     _062468_jump
		mov    0x000024(%esp),%eax
		mov    %ax,0x000034(%esp)
		lea    0x000000(,%ebp,4),%eax
		sub    %ebp,%eax
		mov    %cx,0x00002c(%esp)
		add    %eax,%eax
		xor    %ecx,%ecx
		mov    %eax,0x000018(%esp)
		jmp    _0625e1_jump

	_06258d_jump:
		mov    0x000014(%esp),%eax
		mov    0x000018(%esp),%esi
		mov    (%eax),%eax
		add    %esi,%eax
		mov    0x000002(%eax),%al
		mov    %al,0x000040(%esp)
		test   %al,%al
		je     _0625c5_jump
		mov    0x00002a(%esp),%ebx
		mov    0x000032(%esp),%eax
		movzbl 0x000040(%esp),%esi
		mov    %edx,%edi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    _0b9278_data(,%esi,4),%esi
		call   _01723f_func

	_0625c5_jump:
		mov    0x000034(%esp),%edi
		add    $0x000010,%edi
		add    $0x000010,%edx
		mov    %di,0x000034(%esp)
		mov    0x000018(%esp),%edi
		inc    %ebp
		add    $0x000006,%edi
		inc    %ecx
		mov    %edi,0x000018(%esp)

	_0625e1_jump:
		mov    0x000020(%esp),%ebx
		xor    %eax,%eax
		mov    0x000004(%ebx),%al
		cmp    %eax,%ecx
		jl     _06258d_jump

	_0625ee_jump:
		add    $0x000048,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_062634_func:
		push   %esi
		push   %edi
		mov    %ecx,%esi
		mov    (%eax),%eax
		mov    $0x00000f,%ecx
		and    $0x0000ff,%edx
		sub    %edx,%ecx
		lea    (%ecx,%ecx,1),%edx
		mov    $0x000003,%edi
		mov    %dl,%cl
		shl    %cl,%edi
		and    %edi,%eax
		sar    %cl,%eax
		mov    %eax,%edx
		and    $0x000002,%edx
		sar    %edx
		and    $0x000001,%eax
		mov    %edx,(%ebx)
		mov    %eax,(%esi)
		pop    %edi
		pop    %esi
		ret    

	_062668_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dl,%cl
		mov    %dx,%bx
		and    $0x000007,%cl
		sar    $0x000003,%ebx
		mov    $0x000001,%dl
		movswl %bx,%ebx
		shl    %cl,%dl
		or     %dl,(%ebx,%eax,1)
		pop    %ecx
		pop    %ebx
		ret    

	_0626a8_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dx,%bx
		sar    $0x000003,%ebx
		mov    %dl,%cl
		movswl %bx,%ebx
		and    $0x000007,%cl
		add    %eax,%ebx
		mov    $0x000001,%al
		shl    %cl,%al
		and    (%ebx),%al
		pop    %ecx
		pop    %ebx
		ret    



_0626d0_func:
		add    $0x000080,%eax
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _0626f5_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _0626eb_jump
		neg    %eax

	_0626eb_jump:
		cwtl   
		mov    _0aa9d8_data(,%eax,2),%ax
		ret    

	_0626f5_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _062702_jump
		neg    %eax

	_062702_jump:
		cwtl   
		mov    _0aa9d8_data(,%eax,2),%ax
		neg    %eax
		ret    



_062710_func:
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _062730_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _062726_jump
		neg    %eax

	_062726_jump:
		cwtl   
		mov    _0aa9d8_data(,%eax,2),%ax
		ret    

	_062730_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _06273d_jump
		neg    %eax

	_06273d_jump:
		cwtl   
		mov    _0aa9d8_data(,%eax,2),%ax
		neg    %eax
		ret    



_06274c_func:
		push   %ecx
		push   %esi
		push   %edi
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _0627aa_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _06277c_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _0aa9d8_data(,%esi,2),%cx
		mov    %cx,(%ebx)
		jmp    _062798_jump

	_06277c_jump:
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _0aa9d8_data(,%esi,2),%cx
		mov    %ecx,%edi
		mov    %cx,(%ebx)
		neg    %edi
		mov    %di,(%ebx)

	_062798_jump:
		movswl %ax,%ebx
		mov    _0aa9d8_data(,%ebx,2),%ax
		mov    %ax,(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0627aa_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _0627d0_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _0aa9d8_data(,%esi,2),%cx
		mov    %cx,(%ebx)
		neg    %ecx
		jmp    _0627e2_jump

	_0627d0_jump:
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _0aa9d8_data(,%esi,2),%cx

	_0627e2_jump:
		mov    %cx,(%ebx)
		movswl %ax,%ebx
		mov    _0aa9d8_data(,%ebx,2),%ax
		mov    %eax,%esi
		mov    %ax,(%edx)
		neg    %esi
		mov    %si,(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_06281c_func:
		add    $0x000080,%eax
		xor    %ah,%ah
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _062830_jump
		neg    %eax

	_062830_jump:
		cwtl   
		mov    _0aa9d8_data(,%eax,2),%ax
		ret    



_06283c_func:
		push   %ecx
		xor    %ah,%ah
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _06284c_jump
		neg    %eax

	_06284c_jump:
		cwtl   
		mov    _0aa9d8_data(,%eax,2),%cx
		mov    %cx,(%edx)
		mov    $0x000080,%edx
		sub    %eax,%edx
		mov    _0aa9d8_data(,%edx,2),%ax
		mov    %ax,(%ebx)
		pop    %ecx
		ret    



_062870_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000064(%eax),%ax
		cmp    $0x00006e,%ax
		jb     _062a26_jump
		jbe    _062bb1_jump
		cmp    $0x0000a1,%ax
		jb     _062967_jump
		jbe    _062bb1_jump
		cmp    $0x0000f5,%ax
		jb     _062907_jump
		jbe    _062b95_jump
		cmp    $0x000107,%ax
		jb     _0628df_jump
		jbe    _062bb9_jump
		cmp    $0x00010d,%ax
		jb     _0628d7_jump
		cmp    $0x00010e,%ax
		jbe    _062bb1_jump
		cmp    $0x000116,%ax
		jb     _062bc5_jump
		cmp    $0x000117,%ax
		jbe    _062b9d_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_0628d7_jump:
		cmp    $0x000108,%ax
		mov    $0x000004,%al
		pop    %edx
		ret    

	_0628df_jump:
		cmp    $0x0000fd,%ax
		jb     _0628f9_jump
		jbe    _062bb9_jump
		cmp    $0x000106,%ax
		je     _062bbd_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_0628f9_jump:
		cmp    $0x0000f6,%ax
		je     _062bbd_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062907_jump:
		cmp    $0x0000cc,%ax
		jb     _062945_jump
		jbe    _062b95_jump
		cmp    $0x0000ea,%ax
		jb     _06292d_jump
		jbe    _062bb1_jump
		cmp    $0x0000ec,%ax
		je     _062b95_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_06292d_jump:
		cmp    $0x0000dc,%ax
		jb     _062bc5_jump
		cmp    $0x0000dd,%ax
		jbe    _062bb1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062945_jump:
		cmp    $0x0000a8,%ax
		jb     _062959_jump
		jbe    _062bb1_jump
		cmp    $0x0000c4,%ax
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062959_jump:
		cmp    $0x0000a4,%ax
		je     _062b9d_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062967_jump:
		cmp    $0x00008e,%ax
		jb     _0629ca_jump
		jbe    _062bc1_jump
		cmp    $0x000094,%ax
		jb     _0629ab_jump
		jbe    _062bc1_jump
		cmp    $0x00009a,%ax
		jb     _06299d_jump
		cmp    $0x00009b,%ax
		jbe    _062bb5_jump
		cmp    $0x00009d,%ax
		je     _062b99_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_06299d_jump:
		cmp    $0x000095,%ax
		je     _062b99_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_0629ab_jump:
		cmp    $0x000092,%ax
		jb     _0629bc_jump
		jbe    _062bb1_jump
		jmp    _062bab_jump

	_0629bc_jump:
		cmp    $0x00008f,%ax
		je     _062bb1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_0629ca_jump:
		cmp    $0x00007b,%ax
		jb     _0629fe_jump
		jbe    _062bb1_jump
		cmp    $0x000089,%ax
		jb     _0629f0_jump
		jbe    _062bc1_jump
		cmp    $0x00008a,%ax
		je     _062bb5_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_0629f0_jump:
		cmp    $0x000085,%ax
		je     _062bb5_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_0629fe_jump:
		cmp    $0x000077,%ax
		jb     _062a18_jump
		jbe    _062bb5_jump
		cmp    $0x000079,%ax
		je     _062bb1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062a18_jump:
		cmp    $0x00006f,%ax
		je     _062bbd_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062a26_jump:
		cmp    $0x000030,%ax
		jb     _062afb_jump
		jbe    _062bb1_jump
		cmp    $0x000053,%ax
		jb     _062a9f_jump
		jbe    _062bb1_jump
		cmp    $0x00005f,%ax
		jb     _062a76_jump
		jbe    _062bc1_jump
		cmp    $0x000066,%ax
		jb     _062a68_jump
		jbe    _062bb1_jump
		cmp    $0x00006d,%ax
		je     _062bbd_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062a68_jump:
		cmp    $0x000063,%ax
		je     _062b95_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062a76_jump:
		cmp    $0x000058,%ax
		jb     _062a91_jump
		jbe    _062bb9_jump
		cmp    $0x00005a,%ax
		jb     _062bc5_jump
		jmp    _062bb1_jump

	_062a91_jump:
		cmp    $0x000056,%ax
		je     _062bb5_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062a9f_jump:
		cmp    $0x00004b,%ax
		jb     _062ad3_jump
		jbe    _062bb1_jump
		cmp    $0x00004f,%ax
		jb     _062ac5_jump
		jbe    _062bb1_jump
		cmp    $0x000052,%ax
		je     _062bc1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062ac5_jump:
		cmp    $0x00004c,%ax
		je     _062b9d_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062ad3_jump:
		cmp    $0x000039,%ax
		jb     _062aed_jump
		jbe    _062bb1_jump
		cmp    $0x000042,%ax
		je     _062bb5_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062aed_jump:
		cmp    $0x000037,%ax
		je     _062bc1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062afb_jump:
		cmp    $0x000015,%ax
		jb     _062b63_jump
		jbe    _062bb1_jump
		cmp    $0x000029,%ax
		jb     _062b3b_jump
		jbe    _062bb1_jump
		cmp    $0x00002c,%ax
		jb     _062b2d_jump
		jbe    _062bb5_jump
		cmp    $0x00002d,%ax
		je     _062bb1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062b2d_jump:
		cmp    $0x00002a,%ax
		je     _062bb9_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062b3b_jump:
		cmp    $0x00001f,%ax
		jb     _062b55_jump
		jbe    _062bc1_jump
		cmp    $0x000027,%ax
		je     _062bbd_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062b55_jump:
		cmp    $0x00001c,%ax
		je     _062bb5_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062b63_jump:
		cmp    $0x000007,%ax
		jb     _062b83_jump
		jbe    _062bbd_jump
		cmp    $0x000013,%ax
		jb     _062b79_jump
		jbe    _062bb1_jump
		jmp    _062bbd_jump

	_062b79_jump:
		cmp    $0x00000b,%ax
		je     _062bb1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062b83_jump:
		cmp    $0x000002,%ax
		jb     _062bc5_jump
		jbe    _062bc1_jump
		cmp    $0x000004,%ax
		je     _062bb9_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_062b95_jump:
		xor    %al,%al
		pop    %edx
		ret    

	_062b99_jump:
		mov    $0x000001,%al
		pop    %edx
		ret    

	_062b9d_jump:
		cmpw   $0x000001,_0c309e_data
		jne    _062b95_jump
		mov    $0x000002,%al
		pop    %edx
		ret    

	_062bab_jump:
		cmpb   $0x000000,0x00007a(%edx)
		jne    _062b95_jump

	_062bb1_jump:
		mov    $0x000002,%al
		pop    %edx
		ret    

	_062bb5_jump:
		mov    $0x000003,%al
		pop    %edx
		ret    

	_062bb9_jump:
		mov    $0x000007,%al
		pop    %edx
		ret    

	_062bbd_jump:
		mov    $0x000005,%al
		pop    %edx
		ret    

	_062bc1_jump:
		mov    $0x000006,%al
		pop    %edx
		ret    

	_062bc5_jump:
		mov    $0x000004,%al
		pop    %edx
		ret    



_062bcc_func:
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000064(%edx),%ax
		testb  $0x000001,_0a529d_data(,%eax,4)
		jne    _062bf0_jump
		test   %ax,%ax
		je     _062bea_jump
		cmp    $0x000009,%ax
		jne    _062bfe_jump

	_062bea_jump:
		cmpl   $0x000000,0x000028(%edx)
		jge    _062bfe_jump

	_062bf0_jump:
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_062bfe_jump:
		movw   $0x000000,0x00005e(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    0x000071(%edx),%al
		mov    %al,0x000073(%edx)
		mov    0x000070(%edx),%al
		mov    %al,0x000072(%edx)
		mov    0x00007a(%edx),%al
		mov    %al,0x00007b(%edx)
		mov    0x000064(%edx),%ax
		movl   $0x000001,0x000030(%edx)
		cmp    $0x000051,%ax
		jb     _062d1a_jump
		jbe    _062e4c_jump
		cmp    $0x0000ae,%ax
		jb     _062cac_jump
		jbe    _062e1c_jump
		cmp    $0x0000e1,%ax
		jb     _062c82_jump
		jbe    _062e1c_jump
		cmp    $0x0000e3,%ax
		jb     _062e28_jump
		jbe    _062e04_jump
		cmp    $0x00010d,%ax
		jb     _062e66_jump
		cmp    $0x00010e,%ax
		jbe    _062df8_jump
		jmp    _062e66_jump

	_062c82_jump:
		cmp    $0x0000d4,%ax
		jb     _062c9d_jump
		jbe    _062e1c_jump
		cmp    $0x0000d9,%ax
		je     _062dfe_jump
		jmp    _062e66_jump

	_062c9d_jump:
		cmp    $0x0000b8,%ax
		je     _062e28_jump
		jmp    _062e66_jump

	_062cac_jump:
		cmp    $0x000074,%ax
		jb     _062cf4_jump
		jbe    _062e34_jump
		cmp    $0x0000a8,%ax
		jb     _062cde_jump
		cmp    $0x0000a9,%ax
		jbe    _062e4c_jump
		cmp    $0x0000ac,%ax
		je     _062e0a_jump
		movb   $0x000028,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062cde_jump:
		cmp    $0x00007a,%ax
		je     _062e10_jump
		movb   $0x000028,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062cf4_jump:
		cmp    $0x000064,%ax
		jb     _062e66_jump
		jbe    _062e0a_jump
		cmp    $0x000071,%ax
		je     _062e58_jump
		movb   $0x000028,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062d1a_jump:
		cmp    $0x000032,%ax
		jb     _062da6_jump
		jbe    _062e04_jump
		cmp    $0x00003c,%ax
		jb     _062d6e_jump
		jbe    _062e0a_jump
		cmp    $0x000041,%ax
		jb     _062d58_jump
		jbe    _062e04_jump
		cmp    $0x000046,%ax
		je     _062dfe_jump
		movb   $0x000028,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062d58_jump:
		cmp    $0x00003d,%ax
		je     _062e1c_jump
		movb   $0x000028,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062d6e_jump:
		cmp    $0x000038,%ax
		jb     _062d90_jump
		jbe    _062e0a_jump
		cmp    $0x000039,%ax
		je     _062e40_jump
		movb   $0x000028,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062d90_jump:
		cmp    $0x000037,%ax
		je     _062e10_jump
		movb   $0x000028,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062da6_jump:
		cmp    $0x000014,%ax
		jb     _062dda_jump
		jbe    _062e0a_jump
		cmp    $0x000028,%ax
		jb     _062dc8_jump
		jbe    _062e10_jump
		cmp    $0x00002b,%ax
		je     _062e10_jump
		movb   $0x000028,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062dc8_jump:
		cmp    $0x000023,%ax
		je     _062e10_jump
		movb   $0x000028,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062dda_jump:
		cmp    $0x00000c,%ax
		jb     _062e66_jump
		jbe    _062e0a_jump
		cmp    $0x00000e,%ax
		je     _062e0a_jump
		movb   $0x000028,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062df8_jump:
		movb   $0x0000ff,0x00007e(%edx)
		jmp    _062e6a_jump

	_062dfe_jump:
		movb   $0x0000a0,0x00007e(%edx)
		jmp    _062e6a_jump

	_062e04_jump:
		movb   $0x00003c,0x00007e(%edx)
		jmp    _062e6a_jump

	_062e0a_jump:
		movb   $0x0000dc,0x00007e(%edx)
		jmp    _062e6a_jump

	_062e10_jump:
		movb   $0x000064,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062e1c_jump:
		movb   $0x000096,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062e28_jump:
		movb   $0x000032,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062e34_jump:
		movb   $0x0000c8,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062e40_jump:
		movb   $0x0000fa,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062e4c_jump:
		movb   $0x000000,0x00007e(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062e58_jump:
		movw   $0x000000,0x000050(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_062e66_jump:
		movb   $0x000028,0x00007e(%edx)

	_062e6a_jump:
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

_062e74_switch:
		.long   _063325_case
		.long   _063336_case
		.long   _063347_case
		.long   _063358_case
		.long   _063369_case
		.long   _063380_case
		.long   _063391_case




_062e90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movw   $0x000000,0x000048(%eax)
		movl   $0x000000,0x000024(%eax)
		call   _062870_func
		mov    %al,0x000082(%ecx)
		xor    %eax,%eax
		mov    0x000064(%ecx),%ax
		mov    _0a619e_data(,%eax,2),%ax
		mov    0x000064(%ecx),%dx
		mov    %ax,0x000060(%ecx)
		cmp    $0x0000a3,%dx
		je     _062ed8_jump
		mov    0x000073(%ecx),%al
		mov    %al,0x000071(%ecx)
		mov    0x000072(%ecx),%al
		mov    %al,0x000070(%ecx)

	_062ed8_jump:
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		movw   $0x000000,0x000040(%ecx)
		add    %eax,%edx
		movw   $0x000000,0x000042(%ecx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%ecx),%al
		mov    0x000002(%edx,%eax,8),%al
		movb   $0x000000,0x00006f(%ecx)
		movb   $0x000000,0x000077(%ecx)
		movb   $0x000000,0x000075(%ecx)
		movb   $0x000000,0x000076(%ecx)
		movw   $0x00ffff,0x00005c(%ecx)
		movw   $0x00ffff,0x00004a(%ecx)
		movb   $0x000000,0x00007f(%ecx)
		mov    %al,0x00006e(%ecx)
		mov    0x000085(%ecx),%ah
		movw   $0x00ffff,0x000046(%ecx)
		and    $0x0000f7,%ah
		mov    0x000010(%ecx),%ebx
		mov    %ah,0x000085(%ecx)
		lea    0x000085(%ecx),%eax
		test   %ebx,%ebx
		setne  %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		mov    %dh,(%eax)
		shl    $0x000004,%dl
		mov    %dh,%bl
		or     %dl,%bl
		xor    %edx,%edx
		mov    %bl,(%eax)
		mov    $0x000005,%ebx
		lea    0x000066(%ecx),%eax
		call   _085360_func
		mov    %ecx,%eax
		call   _0652ec_func
		movl   $0x000000,0x000058(%ecx)
		movb   $0x0000ff,0x000080(%ecx)
		movl   $0x000001,0x000030(%ecx)
		mov    0x00007b(%ecx),%al
		movb   $0x000000,0x000083(%ecx)
		mov    %al,0x00007a(%ecx)
		mov    0x000086(%ecx),%al
		movb   $0x000000,0x000081(%ecx)
		and    $0x0000fe,%al
		mov    0x000085(%ecx),%bh
		mov    %al,0x000086(%ecx)
		and    $0x00003f,%bh
		mov    0x000064(%ecx),%ax
		mov    %bh,0x000085(%ecx)
		cmp    $0x0000af,%ax
		jb     _0630f5_jump
		cmp    $0x0000af,%ax
		jbe    _06325b_jump
		cmp    $0x0000e5,%ax
		jb     _063071_jump
		cmp    $0x0000e6,%ax
		jbe    _06325b_jump
		cmp    $0x0000f3,%ax
		jb     _063035_jump
		jbe    _06343c_jump
		cmp    $0x000107,%ax
		jb     _063026_jump
		jbe    _063215_jump
		cmp    $0x00010a,%ax
		jb     _0634fd_jump
		jbe    _063215_jump
		cmp    $0x00010c,%ax
		je     _063215_jump
		jmp    _0634fd_jump

	_063026_jump:
		cmp    $0x0000fa,%ax
		je     _06325b_jump
		jmp    _0634fd_jump

	_063035_jump:
		cmp    $0x0000ed,%ax
		jb     _063061_jump
		jbe    _06343c_jump
		cmp    $0x0000f0,%ax
		jb     _0634fd_jump
		jbe    _063222_jump
		cmp    $0x0000f1,%ax
		je     _063466_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063061_jump:
		cmp    $0x0000eb,%ax
		je     _06324f_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063071_jump:
		cmp    $0x0000ca,%ax
		jb     _0630b9_jump
		jbe    _0634c7_jump
		cmp    $0x0000d9,%ax
		jb     _0630a9_jump
		jbe    _0634a7_jump
		cmp    $0x0000e2,%ax
		jb     _0634fd_jump
		jbe    _06348e_jump
		cmp    $0x0000e3,%ax
		je     _063296_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0630a9_jump:
		cmp    $0x0000d4,%ax
		je     _06349b_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0630b9_jump:
		cmp    $0x0000b2,%ax
		jb     _0630e5_jump
		jbe    _063466_jump
		cmp    $0x0000b8,%ax
		jb     _0634fd_jump
		jbe    _06348e_jump
		cmp    $0x0000bf,%ax
		je     _06324f_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0630e5_jump:
		cmp    $0x0000b0,%ax
		je     _063222_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0630f5_jump:
		cmp    $0x000033,%ax
		jb     _06318b_jump
		jbe    _063282_jump
		cmp    $0x000074,%ax
		jb     _06315b_jump
		cmp    $0x000076,%ax
		jbe    _06345f_jump
		cmp    $0x000091,%ax
		jb     _06314b_jump
		jbe    _0633a2_jump
		cmp    $0x000098,%ax
		jb     _0634fd_jump
		jbe    _06343c_jump
		cmp    $0x0000a8,%ax
		jb     _0634fd_jump
		cmp    $0x0000a9,%ax
		jbe    _063466_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06314b_jump:
		cmp    $0x00007b,%ax
		je     _06330b_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06315b_jump:
		cmp    $0x000035,%ax
		jb     _06328c_jump
		jbe    _063282_jump
		cmp    $0x000044,%ax
		jb     _0634fd_jump
		jbe    _06320e_jump
		cmp    $0x00004b,%ax
		je     _063472_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06318b_jump:
		cmp    $0x00001a,%ax
		jb     _0631d3_jump
		jbe    _0633cf_jump
		cmp    $0x00001d,%ax
		jb     _0631c3_jump
		jbe    _06343c_jump
		cmp    $0x000022,%ax
		jb     _0634fd_jump
		jbe    _06343c_jump
		cmp    $0x000032,%ax
		je     _06329f_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0631c3_jump:
		cmp    $0x00001c,%ax
		je     _0633b4_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0631d3_jump:
		cmp    $0x000007,%ax
		jb     _0631ff_jump
		jbe    _0633c2_jump
		cmp    $0x000015,%ax
		jb     _0634fd_jump
		jbe    _0633c2_jump
		cmp    $0x000019,%ax
		je     _063419_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0631ff_jump:
		test   %ax,%ax
		je     _0632f2_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06320e_jump:
		int3   
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063215_jump:
		movb   $0x000000,0x000082(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063222_jump:
		xor    %edx,%edx
		mov    0x00006e(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ecx),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		dec    %eax
		cwtl   
		call   _06a9a0_func
		mov    %al,0x00006f(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06324f_jump:
		mov    0x00007a(%ecx),%al
		mov    %al,0x00006f(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06325b_jump:
		mov    0x00007a(%ecx),%al
		mov    0x000085(%ecx),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000085(%ecx)
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,0x000085(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063282_jump:
		movb   $0x000005,0x000076(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06328c_jump:
		movb   $0x00000a,0x000076(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063296_jump:
		movb   $0x000002,_0c33c0_data
		jmp    _0632a7_jump

	_06329f_jump:
		xor    %bh,%bh
		mov    %bh,_0c33c0_data

	_0632a7_jump:
		mov    $0x004000,%esi
		mov    $0x0000ff,%dl
		mov    %ecx,%eax
		movw   $0x0000ff,0x00005e(%ecx)
		call   _018ffc_func
		xor    %edi,%edi
		mov    %esi,_0c1094_data
		mov    %edi,_0c1090_data
		mov    %dl,_0c33bb_data
		xor    %al,%al
		movb   $0x000064,0x000083(%ecx)
		mov    %al,_0c33de_data
		mov    %al,_0c33ba_data
		mov    %al,_0c33c1_data
		mov    %al,_0c33be_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0632f2_jump:
		mov    0x000085(%ecx),%bl
		movb   $0x00001e,0x000078(%ecx)
		and    $0x0000df,%bl
		mov    %bl,0x000085(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06330b_jump:
		mov    0x000079(%ecx),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _0634fd_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_062e74_switch(,%eax,4)

	_063325_case:
		movb   $0x000002,0x000081(%ecx)
		movb   $0x000000,0x00007e(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063336_case:
		movb   $0x000008,0x000081(%ecx)
		movb   $0x00003c,0x00007e(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063347_case:
		movb   $0x000018,0x000081(%ecx)
		movb   $0x0000aa,0x00007e(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063358_case:
		movb   $0x00000a,0x000081(%ecx)
		movb   $0x000064,0x00007e(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063369_case:
		movw   $0x000000,0x00004a(%ecx)
		movb   $0x000001,0x000081(%ecx)
		movb   $0x000000,0x00007e(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063380_case:
		movb   $0x000004,0x000081(%ecx)
		movb   $0x00003c,0x00007e(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063391_case:
		movb   $0x000024,0x000081(%ecx)
		movb   $0x000078,0x00007e(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0633a2_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000028,0x00005c(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0633b4_jump:
		movw   $0x000064,0x00004a(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x00005c(%ecx)

	_0633c2_jump:
		orb    $0x000004,0x000085(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0633cf_jump:
		cmpw   $0x000001,_0c3152_data
		je     _0633f2_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01dd88_func
		sub    $0x000002,%eax
		mov    %ax,0x000050(%ecx)
		mov    %ax,0x00005c(%ecx)
		jmp    _0633fe_jump

	_0633f2_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000014,0x00005c(%ecx)

	_0633fe_jump:
		mov    0x000085(%ecx),%ah
		movw   $0x000014,0x000052(%ecx)
		or     $0x000024,%ah
		mov    %ah,0x000085(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063419_jump:
		movw   $0x00000f,0x00004a(%ecx)
		mov    0x000085(%ecx),%dl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%dl
		mov    %ax,0x00005c(%ecx)
		mov    %dl,0x000085(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06343c_jump:
		movw   $0x000001,0x00004a(%ecx)
		mov    0x000085(%ecx),%bh
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%bh
		mov    %ax,0x00005c(%ecx)
		mov    %bh,0x000085(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06345f_jump:
		movb   $0x000000,0x000081(%ecx)

	_063466_jump:
		movw   $0x000000,0x000052(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063472_jump:
		mov    0x000085(%ecx),%bl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000085(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06348e_jump:
		orb    $0x000008,0x000085(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06349b_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0634a7_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000007(%eax)
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000017(%eax)
		movw   $0x000000,0x00004a(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0634c7_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _0634db_jump
		cmpb   $0x000039,0x000070(%ecx)
		jne    _0634db_jump
		mov    %ecx,_0c1140_data
		jmp    _0634e1_jump

	_0634db_jump:
		mov    %ecx,_0c113c_data

	_0634e1_jump:
		movb   $0x000003,0x000082(%ecx)
		mov    0x000085(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000085(%ecx)

	_0634fd_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063504_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    _0b9414_data,%cx
		mov    %dx,_0b940c_data
		mov    %dx,_0b941c_data
		test   %cx,%cx
		jle    _06354d_jump
		xor    %ebx,%ebx

	_063529_jump:
		mov    _0b9408_data,%ecx
		movswl %dx,%eax
		mov    %bx,(%ecx,%eax,2)
		mov    _0b9418_data,%ecx
		mov    _0b9414_data,%si
		inc    %edx
		mov    %bx,(%ecx,%eax,2)
		cmp    %si,%dx
		jl     _063529_jump

	_06354d_jump:
		mov    _0b9410_data,%edx
		mov    _0b9414_data,%ax
		xor    %ebx,%ebx
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _063616_jump

	_063567_jump:
		cmpw   $0x000000,_0c30d4_data
		jne    _063594_jump
		xor    %eax,%eax
		mov    0x000064(%edx),%ax
		testb  $0x000002,_0a529e_data(,%eax,4)
		je     _063594_jump
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _0754d4_func
		test   %al,%al
		jne    _063603_jump

	_063594_jump:
		xor    %eax,%eax
		mov    0x000064(%edx),%ax
		testb  $0x000001,_0a529d_data(,%eax,4)
		je     _0635d2_jump
		mov    _0b940c_data,%ax
		movswl %ax,%ecx
		lea    0x000000(,%ecx,2),%esi
		inc    %eax
		mov    _0b9408_data,%ecx
		mov    %ax,_0b940c_data
		mov    %bx,(%ecx,%esi,1)
		cmp    $0x0002bc,%ax
		jl     _063603_jump
		mov    $_0a2a34_data,%eax
		jmp    _0635fe_jump

	_0635d2_jump:
		mov    _0b941c_data,%ax
		movswl %ax,%ecx
		lea    0x000000(,%ecx,2),%esi
		inc    %eax
		mov    _0b9418_data,%ecx
		mov    %ax,_0b941c_data
		mov    %bx,(%ecx,%esi,1)
		cmp    $0x0002bc,%ax
		jl     _063603_jump
		mov    $_0a2a78_data,%eax

	_0635fe_jump:
		call   _020150_func

	_063603_jump:
		mov    (%esp),%eax
		inc    %ebx
		add    $0x000088,%edx
		cmp    %ax,%bx
		jl     _063567_jump

	_063616_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063620_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    $0xffffffff,%edx
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,_0c33ab_data
		mov    %ah,_0c33d2_data
		mov    %ah,_0c33de_data
		mov    %dx,_0c315a_data
		mov    %bx,_0c312e_data
		mov    %dx,_0c3158_data
		mov    %edx,%esi
		mov    %dx,_0c314c_data
		mov    %dx,_0c30f6_data
		mov    %dx,_0c310c_data
		mov    %dx,_0c3136_data
		mov    %dx,_0c3126_data
		mov    %dx,_0c3180_data
		mov    %dx,_0c3154_data
		mov    %dx,_0c3190_data
		mov    %dx,_0c3194_data
		mov    %dx,_0c318a_data
		mov    %dx,_0c3192_data
		mov    %dx,_0c318e_data
		mov    _0b9410_data,%eax
		mov    %edx,%ebx
		xor    %edx,%esi
		mov    %eax,%ecx
		xor    %dl,%bl
		mov    _0b9414_data,%dx
		mov    %bl,_0c33ad_data
		mov    %edx,(%esp)
		test   %dx,%dx
		jle    _063f00_jump
		lea    0x000085(%eax),%edi

	_0636df_jump:
		mov    0x000004(%esp),%al
		mov    %si,0x000034(%ecx)
		test   %al,%al
		je     _0636f2_jump
		mov    %ecx,%eax
		call   _062bcc_func

	_0636f2_jump:
		mov    0x000064(%ecx),%dx
		movw   $0x000000,0x000062(%ecx)
		cmp    $0x0000a3,%dx
		jne    _063713_jump
		mov    0x000073(%ecx),%al
		mov    %al,0x000071(%ecx)
		mov    0x000072(%ecx),%al
		mov    %al,0x000070(%ecx)
		andb   $0x000001,0x000078(%ecx)

	_063713_jump:
		mov    %ecx,%eax
		call   _062e90_func
		xor    %eax,%eax
		mov    0x000064(%ecx),%ax
		testb  $0x000001,_0a529d_data(,%eax,4)
		je     _063749_jump
		movl   $0xffff8300,0x000028(%ecx)
		mov    0x000085(%ecx),%bl
		movl   $0xffff8300,0x00002c(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000085(%ecx)
		jmp    _063750_jump

	_063749_jump:
		orb    $0x000004,0x000085(%ecx)

	_063750_jump:
		mov    0x000064(%ecx),%ax
		cmp    $0x00006d,%ax
		jb     _0638f0_jump
		jbe    _063e4b_jump
		cmp    $0x00009d,%ax
		jb     _063836_jump
		jbe    _063e99_jump
		cmp    $0x0000ce,%ax
		jb     _0637e0_jump
		jbe    _063de2_jump
		cmp    $0x0000ea,%ax
		jb     _0637b6_jump
		jbe    _063afb_jump
		cmp    $0x0000f6,%ax
		jb     _0637a7_jump
		jbe    _063aec_jump
		cmp    $0x00010b,%ax
		je     _063e4b_jump
		jmp    _063e99_jump

	_0637a7_jump:
		cmp    $0x0000f2,%ax
		je     _063b6d_jump
		jmp    _063e99_jump

	_0637b6_jump:
		cmp    $0x0000db,%ax
		jb     _0637d1_jump
		jbe    _063b1c_jump
		cmp    $0x0000dc,%ax
		je     _063b0a_jump
		jmp    _063e99_jump

	_0637d1_jump:
		cmp    $0x0000d7,%ax
		je     _063de2_jump
		jmp    _063e99_jump

	_0637e0_jump:
		cmp    $0x0000ba,%ax
		jb     _06380c_jump
		jbe    _063de2_jump
		cmp    $0x0000cc,%ax
		jb     _0637fd_jump
		jbe    _063e01_jump
		jmp    _063d2a_jump

	_0637fd_jump:
		cmp    $0x0000c4,%ax
		je     _063de2_jump
		jmp    _063e99_jump

	_06380c_jump:
		cmp    $0x0000a5,%ax
		jb     _063827_jump
		jbe    _063ce4_jump
		cmp    $0x0000b3,%ax
		je     _063b6d_jump
		jmp    _063e99_jump

	_063827_jump:
		cmp    $0x0000a1,%ax
		je     _063e93_jump
		jmp    _063e99_jump

	_063836_jump:
		cmp    $0x000088,%ax
		jb     _063897_jump
		jbe    _063c2e_jump
		cmp    $0x000091,%ax
		jb     _06386d_jump
		jbe    _063daa_jump
		cmp    $0x000093,%ax
		jb     _063de2_jump
		jbe    _063bb1_jump
		cmp    $0x000094,%ax
		je     _063e4b_jump
		jmp    _063e99_jump

	_06386d_jump:
		cmp    $0x00008e,%ax
		jb     _063888_jump
		jbe    _063e4b_jump
		cmp    $0x00008f,%ax
		je     _063de2_jump
		jmp    _063e99_jump

	_063888_jump:
		cmp    $0x00008b,%ax
		je     _063de2_jump
		jmp    _063e99_jump

	_063897_jump:
		cmp    $0x000077,%ax
		jb     _0638d7_jump
		jbe    _063de2_jump
		cmp    $0x000082,%ax
		jb     _0638be_jump
		jbe    _063de2_jump
		cmp    $0x000085,%ax
		je     _063ad3_jump
		jmp    _063e99_jump

	_0638be_jump:
		cmp    $0x000079,%ax
		jb     _063e99_jump
		cmp    $0x00007a,%ax
		jbe    _063de2_jump
		jmp    _063e99_jump

	_0638d7_jump:
		cmp    $0x00006e,%ax
		jbe    _063de2_jump
		cmp    $0x00006f,%ax
		je     _063e32_jump
		jmp    _063e99_jump

	_0638f0_jump:
		cmp    $0x00002c,%ax
		jb     _0639cf_jump
		jbe    _063de2_jump
		cmp    $0x00004f,%ax
		jb     _063970_jump
		jbe    _063de2_jump
		cmp    $0x00005a,%ax
		jb     _063946_jump
		cmp    $0x00005d,%ax
		jbe    _063de2_jump
		cmp    $0x000063,%ax
		jb     _063937_jump
		jbe    _063c50_jump
		cmp    $0x000066,%ax
		je     _063de2_jump
		jmp    _063e99_jump

	_063937_jump:
		cmp    $0x00005e,%ax
		je     _063d48_jump
		jmp    _063e99_jump

	_063946_jump:
		cmp    $0x000052,%ax
		jb     _063961_jump
		jbe    _063e4b_jump
		cmp    $0x000053,%ax
		je     _063de2_jump
		jmp    _063e99_jump

	_063961_jump:
		cmp    $0x000051,%ax
		je     _063cf3_jump
		jmp    _063e99_jump

	_063970_jump:
		cmp    $0x000040,%ax
		jb     _06399b_jump
		jbe    _063c99_jump
		cmp    $0x000042,%ax
		jb     _063dc7_jump
		jbe    _063de2_jump
		cmp    $0x000047,%ax
		je     _063de2_jump
		jmp    _063e99_jump

	_06399b_jump:
		cmp    $0x000037,%ax
		jb     _0639b6_jump
		jbe    _063e51_jump
		cmp    $0x00003e,%ax
		je     _063de2_jump
		jmp    _063e99_jump

	_0639b6_jump:
		cmp    $0x000033,%ax
		jb     _063e99_jump
		cmp    $0x000034,%ax
		jbe    _063de2_jump
		jmp    _063e99_jump

	_0639cf_jump:
		cmp    $0x000014,%ax
		jb     _063a30_jump
		jbe    _063dd2_jump
		cmp    $0x000024,%ax
		jb     _063a06_jump
		jbe    _063de2_jump
		cmp    $0x000026,%ax
		jb     _063b8f_jump
		jbe    _063dbb_jump
		cmp    $0x000027,%ax
		je     _063db5_jump
		jmp    _063e99_jump

	_063a06_jump:
		cmp    $0x000017,%ax
		jb     _063a21_jump
		jbe    _063d10_jump
		cmp    $0x00001f,%ax
		je     _063e7e_jump
		jmp    _063e99_jump

	_063a21_jump:
		cmp    $0x000015,%ax
		je     _063dd6_jump
		jmp    _063e99_jump

	_063a30_jump:
		cmp    $0x00000b,%ax
		jb     _063a66_jump
		jbe    _063d8b_jump
		cmp    $0x00000f,%ax
		jb     _063a57_jump
		jbe    _063de2_jump
		cmp    $0x000013,%ax
		je     _063cd8_jump
		jmp    _063e99_jump

	_063a57_jump:
		cmp    $0x00000d,%ax
		je     _063de2_jump
		jmp    _063e99_jump

	_063a66_jump:
		cmp    $0x000009,%ax
		jb     _063e99_jump
		jbe    _063ce4_jump
		cmp    $0x000001,%si
		jl     _063e99_jump
		movswl %si,%eax
		dec    %eax
		imul   $0x000088,%eax,%eax
		mov    0x000085(%ecx),%bl
		mov    _0b9410_data,%edx
		or     $0x000004,%bl
		add    %edx,%eax
		mov    %bl,0x000085(%ecx)
		cmpw   $0x00000a,0x000064(%eax)
		jne    _063e99_jump
		mov    0x000028(%eax),%eax
		cmp    0x000028(%ecx),%eax
		jne    _063e99_jump
		mov    0x000085(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %bh,0x000085(%ecx)
		jmp    _063e99_jump

	_063ad3_jump:
		testb  $0x000008,_0c3347_data
		jne    _063dbb_jump
		orb    $0x000004,0x000085(%ecx)
		jmp    _063e99_jump

	_063aec_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c318e_data
		jmp    _063e99_jump

	_063afb_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c3190_data
		jmp    _063e99_jump

	_063b0a_jump:
		mov    %si,_0c3154_data
		movw   $0x000000,0x00005c(%ecx)
		jmp    _063e99_jump

	_063b1c_jump:
		xor    %eax,%eax
		mov    0x00007b(%ecx),%al
		sar    $0x000002,%eax
		mov    %al,0x00007a(%ecx)
		mov    _0c3152_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _063e99_jump
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		add    %edx,%eax
		mov    0x000028(%ecx),%edx
		cmp    0x000028(%eax),%edx
		jge    _063b56_jump
		mov    0x00002c(%eax),%eax
		add    $0x000070,%eax
		jmp    _063b5c_jump

	_063b56_jump:
		mov    0x00002c(%eax),%eax
		add    $0x000078,%eax

	_063b5c_jump:
		mov    %eax,0x00002c(%ecx)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _063e99_jump

	_063b6d_jump:
		mov    0x00001c(%ecx),%ebp
		test   %ebp,%ebp
		jne    _063e99_jump
		mov    0x000085(%ecx),%ah
		mov    %ebp,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000085(%ecx)
		jmp    _063e99_jump

	_063b8f_jump:
		testb  $0x000040,_0c3347_data
		sete   %dl
		and    $0x000001,%dl
		mov    (%edi),%dh
		and    $0x0000fb,%dh
		mov    %dh,(%edi)
		shl    $0x000002,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%edi)
		jmp    _063e99_jump

	_063bb1_jump:
		cmpb   $0x000000,0x00007a(%ecx)
		jne    _063e99_jump
		mov    _0b9320_data,%ax
		sub    $0x0000c8,%eax
		mov    %ax,0x00003c(%ecx)
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0b9324_data,%eax
		mov    $0x000009,%ebx
		sub    $0x000032,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01dea8_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movl   $0x000001,0x000024(%ecx)
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    0x000085(%ecx),%bl
		movb   $0x000000,0x000083(%ecx)
		or     $0x000008,%bl
		mov    %si,_0c3126_data
		mov    %bl,0x000085(%ecx)
		jmp    _063e99_jump

	_063c2e_jump:
		mov    0x000085(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %si,_0c314c_data
		mov    %bh,0x000085(%ecx)
		jmp    _063e99_jump

	_063c50_jump:
		cmpb   $0x000000,_0c1765_data
		je     _063c6a_jump
		cmpw   $0x000000,_0c30d4_data
		jne    _063c6a_jump
		andb   $0x0000fb,0x000085(%ecx)

	_063c6a_jump:
		mov    0x000071(%ecx),%al
		test   %al,%al
		jbe    _063c7a_jump
		cmp    $0x000005,%al
		je     _063c8d_jump
		jmp    _063e99_jump

	_063c7a_jump:
		movb   $0x000000,0x000083(%ecx)
		movl   $0x000000,0x000024(%ecx)
		jmp    _063e99_jump

	_063c8d_jump:
		movb   $0x00001e,0x000083(%ecx)
		jmp    _063e99_jump

	_063c99_jump:
		mov    _0c312c_data,%eax
		sar    $0x000010,%eax
		mov    %si,_0c10ac_data(,%eax,2)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0c312e_data,%ax
		inc    %eax
		mov    %ax,_0c312e_data
		cmp    $0x000032,%ax
		jl     _063cd8_jump
		mov    $_0a2abc_data,%eax
		call   _020150_func

	_063cd8_jump:
		andb   $0x0000fb,0x000085(%ecx)
		jmp    _063e99_jump

	_063ce4_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000008(%eax),%eax
		movb   $0x000000,0x000016(%eax)
		jmp    _063e99_jump

	_063cf3_jump:
		mov    _0c33d2_data,%al
		and    $0x0000ff,%eax
		mov    %si,_0c1110_data(,%eax,2)
		incb   _0c33d2_data
		jmp    _063e99_jump

	_063d10_jump:
		mov    0x000085(%ecx),%al
		and    $0x0000fb,%al
		mov    %si,_0c3158_data
		mov    %al,0x000085(%ecx)
		jmp    _063e99_jump

	_063d2a_jump:
		mov    0x000085(%ecx),%bh
		mov    0x000034(%ecx),%ax
		and    $0x0000fb,%bh
		mov    %ax,_0c3182_data
		mov    %bh,0x000085(%ecx)
		jmp    _063e99_jump

	_063d48_jump:
		mov    _0c1154_data,%al
		mov    %al,0x000072(%ecx)
		mov    %si,_0c3150_data
		mov    %al,0x000070(%ecx)
		mov    _0c314e_data,%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%edx
		mov    _0b9410_data,%eax
		add    %edx,%eax
		mov    %eax,_0c1144_data
		mov    0x000085(%ecx),%al
		movb   $0x000007,0x00007c(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000085(%ecx)
		jmp    _063e99_jump

	_063d8b_jump:
		mov    0x000085(%ecx),%dh
		movb   $0x000007,0x00007c(%ecx)
		and    $0x0000fb,%dh
		mov    %si,_0c3144_data
		mov    %dh,0x000085(%ecx)
		jmp    _063e99_jump

	_063daa_jump:
		movw   $0x000028,0x00005c(%ecx)
		jmp    _063e99_jump

	_063db5_jump:
		movw   $0x000000,0x00005c(%ecx)

	_063dbb_jump:
		andb   $0x0000fb,0x000085(%ecx)
		jmp    _063e99_jump

	_063dc7_jump:
		movw   $0x000000,0x000052(%ecx)
		jmp    _063e99_jump

	_063dd2_jump:
		movb   $0x000007,0x00007c(%ecx)

	_063dd6_jump:
		movb   $0x000000,0x000083(%ecx)
		jmp    _063e99_jump

	_063de2_jump:
		movl   $0x000000,0x000024(%ecx)
		mov    0x000085(%ecx),%dl
		movb   $0x000007,0x00007c(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000085(%ecx)
		jmp    _063e99_jump

	_063e01_jump:
		mov    _0b92fc_data,%eax
		movl   $0x000000,0x000024(%ecx)
		mov    %eax,0x000004(%ecx)
		mov    0x000085(%ecx),%al
		movb   $0x000007,0x00007c(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000085(%ecx)
		mov    0x000034(%ecx),%ax
		movb   $0x000000,0x00007a(%ecx)
		mov    %ax,_0c3180_data
		jmp    _063e99_jump

	_063e32_jump:
		testb  $0x000004,_0c30db_data
		je     _063e4b_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01de98_func
		movb   $0x00000a,0x000072(%ecx)

	_063e4b_jump:
		movb   $0x000007,0x00007c(%ecx)
		jmp    _063e99_jump

	_063e51_jump:
		mov    _0c30db_data,%dh
		mov    0x000034(%ecx),%ax
		movb   $0x000007,0x00007c(%ecx)
		mov    %ax,_0c315a_data
		test   $0x000004,%dh
		je     _063e99_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movb   $0x000004,0x000072(%ecx)
		call   _01dea8_func
		jmp    _063e99_jump

	_063e7e_jump:
		mov    0x000085(%ecx),%bh
		movb   $0x000007,0x00007c(%ecx)
		and    $0x0000fb,%bh
		mov    %bh,0x000085(%ecx)
		jmp    _063e99_jump

	_063e93_jump:
		incb   _0c33ad_data

	_063e99_jump:
		cmpw   $0x000000,_0c30d4_data
		jne    _063ee7_jump
		xor    %eax,%eax
		mov    0x000064(%ecx),%ax
		testb  $0x000002,_0a529e_data(,%eax,4)
		je     _063ec2_jump
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		call   _0754d4_func
		test   %al,%al
		jne    _063ed1_jump

	_063ec2_jump:
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		call   _0755a0_func
		test   %al,%al
		je     _063ee7_jump

	_063ed1_jump:
		mov    0x000085(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000085(%ecx)

	_063ee7_jump:
		mov    (%esp),%eax
		add    $0x000088,%edi
		inc    %esi
		add    $0x000088,%ecx
		cmp    %ax,%si
		jl     _0636df_jump

	_063f00_jump:
		mov    _0c2f46_data,%al
		cmp    _0c33ad_data,%al
		jae    _063f51_jump
		mov    _0b9410_data,%eax
		mov    _0b9414_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _063f51_jump

	_063f20_jump:
		mov    0x000064(%eax),%cx
		cmp    $0x00007c,%cx
		je     _063f30_jump
		cmp    $0x00002a,%cx
		jne    _063f46_jump

	_063f30_jump:
		mov    0x000085(%eax),%cl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%cl
		mov    %cl,0x000085(%eax)

	_063f46_jump:
		inc    %edx
		add    $0x000088,%eax
		cmp    %bx,%dx
		jl     _063f20_jump

	_063f51_jump:
		cmpw   $0x000000,_0c30d4_data
		je     _063f79_jump
		cmpw   $0x000000,_0c30d6_data
		jne    _063f79_jump
		xor    %eax,%eax
		mov    _0c2f46_data,%al
		xor    %ch,%ch
		mov    %eax,_0c1078_data
		mov    %ch,_0c2f46_data

	_063f79_jump:
		call   _063504_func
		call   _060d80_func
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063f90_func:
		push   %edx
		mov    %eax,%edx
		call   _062e90_func
		orb    $0x000004,0x000085(%edx)
		mov    %edx,%eax
		movl   $0x000002,0x000030(%edx)
		call   _01e53c_func
		cmpl   $0x000000,0x000020(%edx)
		je     _063fb7_jump
		xor    %eax,%eax
		jmp    _063fbc_jump

	_063fb7_jump:
		mov    $0x000078,%eax

	_063fbc_jump:
		movl   $0x000000,0x000024(%edx)
		mov    %ax,0x000062(%edx)
		pop    %edx
		ret    



_063fcc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c3142_data,%si
		mov    $0xffffff88,%edi
		xor    %eax,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx

	_063fe3_jump:
		test   %eax,%eax
		jne    _063fff_jump
		cmp    $0x000003,%si
		jne    _063ff6_jump
		mov    %di,_0a56fe_data(%edx)
		jmp    _063fff_jump

	_063ff6_jump:
		xor    %ecx,%ecx
		mov    %cx,_0a56fe_data(%edx)

	_063fff_jump:
		cmp    $0x000011,%eax
		je     _06400e_jump
		cmp    $0x000010,%eax
		je     _06400e_jump
		cmp    $0x000018,%eax
		jne    _064015_jump

	_06400e_jump:
		andb   $0x0000f7,_0a529e_data(%ebx)

	_064015_jump:
		add    $0x000002,%edx
		inc    %eax
		add    $0x000004,%ebx
		cmp    $0x000118,%eax
		jl     _063fe3_jump
		mov    %si,_0c3142_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064030_func:
		push   %edx
		sub    $0x000004,%esp
		mov    0x00000c(%esp),%dl
		xor    %eax,%eax
		test   %dl,%dl
		je     _064050_jump
		lea    0x000014(%esp),%eax
		mov    %esp,%edx
		mov    %eax,(%esp)
		mov    0x000010(%esp),%eax
		call   _086bed_func

	_064050_jump:
		add    $0x000004,%esp
		pop    %edx
		ret    

_064080_switch:
		.long   _06429f_case
		.long   _06427a_case
		.long   _06425c_case
		.long   _064265_case
		.long   _064274_case
		.long   _064283_case
		.long   _064292_case
		.long   _0642a8_case
		.long   _0642e0_case
		.long   _06430a_case
		.long   _064334_case
		.long   _06436c_case
		.long   _064390_case
		.long   _0643bf_case
		.long   _0643f0_case




_0640bc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%ebx
		mov    _0ddce0_data,%edx
		mov    0x000034(%edx),%ecx
		call   _011c5b_func
		test   %bx,%bx
		jl     _0640ed_jump
		mov    $0x000001,%eax
		movswl %bx,%ebx
		cmp    %ebx,%eax
		jge    _0640e9_jump
		mov    %ebx,%eax

	_0640e9_jump:
		neg    %eax
		jmp    _0640fd_jump

	_0640ed_jump:
		movswl %bx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0640fd_jump
		mov    %ebx,%eax

	_0640fd_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000004(%edx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _064111_jump
		mov    %ebx,%eax

	_064111_jump:
		mov    $0x00000f,%ebx
		cmp    %ebx,%eax
		jle    _06411c_jump
		mov    %ebx,%eax

	_06411c_jump:
		mov    %al,0x00001d(%edx)
		movl   $0x000000,0x000014(%ecx)
		movl   $0x000000,0x000054(%ecx)
		movl   $0x00013f,0x00003c(%ecx)
		movl   $0x0000c7,0x000068(%ecx)
		movl   $0x0000a0,0x000064(%ecx)
		movl   $0x000000,0x00006c(%ecx)
		mov    0x000014(%ecx),%eax
		mov    %eax,(%ecx)
		mov    0x000054(%ecx),%eax
		mov    %eax,0x000040(%ecx)
		mov    %eax,0x000004(%ecx)
		mov    0x00003c(%ecx),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000068(%ecx),%eax
		mov    %eax,0x00002c(%ecx)
		mov    %eax,0x000018(%ecx)
		mov    0x000064(%ecx),%eax
		mov    %eax,0x000050(%ecx)
		mov    0x00006c(%ecx),%eax
		mov    %eax,0x000058(%ecx)
		mov    %eax,0x000044(%ecx)
		mov    %eax,0x000030(%ecx)
		mov    %eax,0x00001c(%ecx)
		mov    %eax,0x000008(%ecx)
		mov    0x000030(%edx),%ecx
		mov    0x000028(%edx),%eax
		movb   $0x000000,0x000026(%ecx)
		movb   $0x00009f,0x00002a(%ecx)
		movb   $0x000000,0x00002b(%ecx)
		movb   $0x0000c7,0x000029(%ecx)
		mov    %eax,(%ecx)
		mov    0x000026(%ecx),%al
		mov    %al,0x000024(%ecx)
		mov    0x00002a(%ecx),%al
		mov    %al,0x000028(%ecx)
		mov    0x00002b(%ecx),%al
		mov    %al,0x000025(%ecx)
		mov    0x000029(%ecx),%al
		mov    %al,0x000027(%ecx)
		mov    0x000030(%edx),%ecx
		add    $0x00002c,%ecx
		mov    0x00002c(%edx),%eax
		movb   $0x000000,0x000026(%ecx)
		mov    %eax,(%ecx)
		mov    0x000026(%ecx),%al
		mov    %al,0x000024(%ecx)
		movb   $0x00009f,0x00002a(%ecx)
		movb   $0x000000,0x00002b(%ecx)
		movb   $0x0000c7,0x000029(%ecx)
		mov    0x00002a(%ecx),%al
		mov    %al,0x000028(%ecx)
		mov    0x00002b(%ecx),%al
		mov    %al,0x000025(%ecx)
		mov    0x000029(%ecx),%al
		mov    %al,0x000027(%ecx)
		movw   $0x000000,(%edx)
		movw   $0x000200,0x000002(%edx)
		movw   $0x000000,0x00000a(%edx)
		movw   $0x000000,0x000010(%edx)
		movw   $0x000000,0x000016(%edx)
		movw   $0x0000a0,0x000018(%edx)
		mov    0x00000a(%edx),%ax
		mov    %ax,0x000008(%edx)
		mov    %ax,0x000006(%edx)
		mov    0x000010(%edx),%ax
		mov    %ax,0x00000e(%edx)
		mov    %ax,0x00000c(%edx)
		mov    0x000016(%edx),%ax
		mov    %ax,0x000014(%edx)
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x000064,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000000,0x00001c(%edx)
		test   %eax,%eax
		jge    _06423e_jump
		neg    %eax

	_06423e_jump:
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    0x00001d(%edx),%al
		dec    %al
		cmp    $0x00000e,%al
		ja     _064411_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_064080_switch(,%eax,4)

	_06425c_case:
		mov    %cx,0x000016(%edx)
		jmp    _064411_jump

	_064265_case:
		mov    %cx,0x000014(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _064411_jump

	_064274_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx

	_06427a_case:
		mov    %cx,0x000014(%edx)
		jmp    _064411_jump

	_064283_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _064411_jump

	_064292_case:
		mov    %cx,0x000016(%edx)
		imul   $0x000003,%ecx,%eax
		add    %ecx,%ecx
		mov    %ax,0x000014(%edx)

	_06429f_case:
		mov    %cx,0x000012(%edx)
		jmp    _064411_jump

	_0642a8_case:
		movw   $0x000200,0x000006(%edx)
		movw   $0x0000c9,0x00001a(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%edi
		mov    %ax,0x000012(%edx)
		neg    %edi
		mov    0x000004(%edx),%ax
		mov    %di,0x000012(%edx)
		test   %ax,%ax
		jg     _064411_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _064411_jump

	_0642e0_case:
		movw   $0x0000c9,0x00001a(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%si
		mov    %ax,0x000012(%edx)
		test   %si,%si
		jg     _064411_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _064411_jump

	_06430a_case:
		movw   $0x00fffe,0x00001a(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000012(%edx)
		test   %cx,%cx
		jg     _064411_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _064411_jump

	_064334_case:
		movw   $0x000200,0x000006(%edx)
		movw   $0x00fffe,0x00001a(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%edi
		mov    %ax,0x000012(%edx)
		neg    %edi
		mov    0x000004(%edx),%ax
		mov    %di,0x000012(%edx)
		test   %ax,%ax
		jg     _064411_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _064411_jump

	_06436c_case:
		movw   $0x00fffe,0x000018(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%si
		mov    %ax,0x000014(%edx)
		test   %si,%si
		jg     _064411_jump
		jmp    _06440b_jump

	_064390_case:
		movw   $0x000200,0x000008(%edx)
		movw   $0x00fffe,0x000018(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %ax,0x000014(%edx)
		neg    %eax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000014(%edx)
		test   %cx,%cx
		jg     _064411_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _064411_jump

	_0643bf_case:
		movw   $0x000200,0x000008(%edx)
		movw   $0x000141,0x000018(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%esi
		mov    %ax,0x000014(%edx)
		neg    %esi
		mov    0x000004(%edx),%di
		mov    %si,0x000014(%edx)
		test   %di,%di
		jg     _064411_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _064411_jump

	_0643f0_case:
		movw   $0x000141,0x000018(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000014(%edx)
		test   %cx,%cx
		jg     _064411_jump

	_06440b_jump:
		movw   $0x000080,0x000008(%edx)

	_064411_jump:
		cmpb   $0x000001,0x00001c(%edx)
		jne    _064421_jump
		add    $0x000080,%ebx
		mov    %bx,0x000002(%edx)

	_064421_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_06442c_case:
		push   %edx
		mov    _0ddce0_data,%edx
		test   %edx,%edx
		je     _064466_jump
		cmpl   $0x000000,0x000030(%edx)
		je     _064445_jump
		lea    0x000030(%edx),%eax
		call   _0852ac_func

	_064445_jump:
		cmpl   $0x000000,0x000034(%edx)
		je     _064453_jump
		lea    0x000034(%edx),%eax
		call   _0852ac_func

	_064453_jump:
		cmpl   $0x000000,_0ddce0_data
		je     _064466_jump
		mov    $_0ddce0_data,%eax
		call   _0852ac_func

	_064466_jump:
		pop    %edx
		ret    



_064468_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ecx,%edi
		xor    %cl,%cl
		test   %ebx,%ebx
		je     _0644d3_jump
		test   %edi,%edi
		je     _0644d3_jump
		mov    $0x000038,%eax
		call   _085294_func
		mov    %eax,%edx
		mov    %eax,_0ddce0_data
		test   %eax,%eax
		je     _0644d3_jump
		mov    %ebx,0x000020(%eax)
		mov    %eax,%esi
		mov    %edi,0x000024(%eax)
		mov    $0x000058,%eax
		call   _085294_func
		mov    %eax,0x000030(%edx)
		test   %eax,%eax
		je     _0644d3_jump
		mov    $0x000078,%eax
		call   _085294_func
		mov    %eax,0x000034(%edx)
		test   %eax,%eax
		je     _0644d3_jump
		mov    _0c0f44_data,%eax
		mov    %eax,0x000028(%edx)
		lea    0x00c800(%eax),%ebx
		mov    $0x000001,%cl
		mov    %ebx,0x00002c(%edx)

	_0644d3_jump:
		test   %cl,%cl
		je     _064510_jump
		mov    $0x0000a0,%ebx
		mov    0x000028(%esi),%edx
		mov    0x000020(%esi),%eax
		call   _080240_func
		mov    $0x0000a0,%ebx
		mov    0x000020(%esi),%eax
		mov    0x00002c(%esi),%edx
		add    $0x0000a0,%eax
		call   _080240_func
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000004(%esp),%al
		sar    $0x000010,%edx
		call   _0640bc_func
		jmp    _064515_jump

	_064510_jump:
		call   _06442c_case

	_064515_jump:
		mov    %cl,%al
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_064520_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0ddce0_data,%ecx
		mov    0x00001c(%ecx),%ah
		mov    0x000034(%ecx),%edi
		test   %ah,%ah
		jne    _064564_jump
		cmpw   $0x000000,0x000004(%ecx)
		jl     _064545_jump
		mov    (%ecx),%ax
		jmp    _06454e_jump

	_064545_jump:
		mov    0x000002(%ecx),%ax
		mov    (%ecx),%si
		sub    %esi,%eax

	_06454e_jump:
		mov    %ax,0x00002c(%esp)
		mov    0x00002c(%esp),%eax
		shl    $0x000002,%eax
		add    $0x000002,%ah
		mov    %ax,0x00002c(%esp)
		jmp    _06456b_jump

	_064564_jump:
		movw   $0x000200,0x00002c(%esp)

	_06456b_jump:
		lea    0x000028(%esp),%ebx
		mov    0x000004(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		call   _06274c_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000028(%esp),%ebx
		mov    %eax,0x000014(%esp)
		mov    0x000006(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%ebp
		call   _06274c_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00001c(%esp)
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000028(%esp),%ebx
		mov    %eax,0x000018(%esp)
		mov    0x000008(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		call   _06274c_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000010,%ebp
		mov    %eax,0x000020(%esp)
		mov    0x000026(%esp),%eax
		xor    %dl,%dl
		sar    $0x000010,%eax
		mov    %dl,0x000030(%esp)
		mov    %eax,0x000010(%esp)

	_0645e8_jump:
		mov    0x000016(%ecx),%eax
		mov    (%edi),%edx
		sar    $0x000010,%eax
		mov    0x000018(%ecx),%esi
		sub    %eax,%edx
		sar    $0x000010,%esi
		mov    %edx,%eax
		mov    0x000004(%edi),%edx
		sub    %esi,%edx
		mov    %edx,%esi
		mov    0x00000a(%ecx),%dx
		mov    0x000008(%edi),%ebx
		test   %dx,%dx
		je     _064643_jump
		mov    0x000010(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000020(%esp),%edx
		imul   %esi,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		sub    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000020(%esp),%eax
		imul   0x000010(%esp),%esi
		add    %eax,%esi
		mov    (%esp),%eax
		sar    $0x000009,%esi
		sar    $0x000009,%eax

	_064643_jump:
		cmpw   $0x000000,0x000008(%ecx)
		je     _064680_jump
		mov    0x00001c(%esp),%edx
		imul   %ebx,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000018(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		add    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000018(%esp),%ebx
		imul   0x00001c(%esp),%eax
		sub    %eax,%ebx
		mov    (%esp),%eax
		sar    $0x000009,%ebx
		sar    $0x000009,%eax

	_064680_jump:
		cmpw   $0x000000,0x000006(%ecx)
		je     _0646c5_jump
		mov    0x000014(%esp),%edx
		imul   %ebx,%edx
		imul   %ebp,%ebx
		mov    %edx,0x000004(%esp)
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    %ebx,0x00000c(%esp)
		mov    0x000014(%esp),%ebx
		imul   %esi,%ebx
		mov    %edx,0x000008(%esp)
		mov    0x000004(%esp),%edx
		add    0x000008(%esp),%edx
		mov    %edx,(%esp)
		mov    0x00000c(%esp),%edx
		sub    %ebx,%edx
		mov    (%esp),%esi
		mov    %edx,%ebx
		sar    $0x000009,%esi
		sar    $0x000009,%ebx

	_0646c5_jump:
		mov    0x00002a(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%eax
		add    %edx,%ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000016(%ecx),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,0x00000c(%edi)
		mov    %esi,%edx
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000018(%ecx),%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x000030(%esp),%dh
		add    $0x000014,%edi
		inc    %dh
		mov    %eax,-0x000004(%edi)
		mov    %dh,0x000030(%esp)
		cmp    $0x000006,%dh
		jb     _0645e8_jump
		mov    0x000012(%ecx),%ax
		mov    0x000006(%ecx),%di
		mov    0x000008(%ecx),%dx
		mov    0x00000a(%ecx),%bx
		add    %eax,%edi
		mov    0x000014(%ecx),%ax
		mov    %di,0x000006(%ecx)
		add    %eax,%edx
		mov    0x000016(%ecx),%ax
		mov    %dx,0x000008(%ecx)
		add    %eax,%ebx
		mov    %bx,0x00000a(%ecx)
		mov    0x000034(%ecx),%edx
		mov    0x000030(%ecx),%eax
		mov    0x00000c(%edx),%ebx
		mov    %ebx,0x000004(%eax)
		mov    0x000010(%edx),%ebx
		mov    %ebx,0x000008(%eax)
		mov    0x000020(%edx),%ebx
		mov    %ebx,0x00000c(%eax)
		mov    0x000024(%edx),%ebx
		mov    %ebx,0x000010(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000014(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x000018(%eax)
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x00001c(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000020(%eax)
		mov    0x000030(%ecx),%eax
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x000030(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000034(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000038(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x00003c(%eax)
		mov    0x000034(%edx),%ebx
		mov    %ebx,0x000040(%eax)
		mov    0x000038(%edx),%ebx
		mov    %ebx,0x000044(%eax)
		mov    0x000048(%edx),%ebx
		mov    %ebx,0x000048(%eax)
		add    $0x00002c,%eax
		mov    0x00004c(%edx),%edx
		mov    %edx,0x000020(%eax)
		mov    0x000002(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0647b2_jump
		neg    %eax

	_0647b2_jump:
		mov    (%ecx),%si
		add    %eax,%esi
		mov    0x000002(%ecx),%di
		mov    %si,(%ecx)
		cmp    %di,%si
		jbe    _0647c8_jump
		movw   $0x000000,(%ecx)

	_0647c8_jump:
		mov    (%ecx),%ax
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0647d8_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    _0ddce0_data,%ebx
		mov    0x000030(%ebx),%edx
		mov    0x000024(%ebx),%eax
		mov    %edx,%esi
		call   _011c90_func
		lea    0x00002c(%edx),%esi
		mov    0x000024(%ebx),%eax
		call   _011c90_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_064c00_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000080(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		decb   0x000080(%eax)
		pop    %edx
		ret    



_064c1c_func:
		push   %edx
		cmp    $0x00007f,%al
		jbe    _064c30_jump
		mov    $0x000100,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		neg    %eax
		pop    %edx
		ret    

	_064c30_jump:
		xor    %ah,%ah
		pop    %edx
		ret    

	_064c34_jump:
		xor    %al,%al
		ret    



_064c38_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_064c58_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		cmp    $0x000004,%dx
		ja     _064c8c_jump
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000050(%eax)

	_064c8c_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_064c94_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _064c1c_func
		mov    0x000046(%edx),%cx
		mov    %ax,0x000048(%edx)
		inc    %ecx
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%ebx
		mov    0x000010(%edx),%eax
		sar    $0x000010,%ebx
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _064c1c_func
		mov    %ax,0x000052(%edx)
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064ce0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		mov    0x000046(%edx),%cx
		xor    %ah,%ah
		inc    %ecx
		mov    %ax,0x000048(%edx)
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _064c1c_func
		mov    0x000046(%edx),%si
		mov    %ax,0x00005c(%edx)
		inc    %esi
		mov    %si,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _064c1c_func
		mov    %ax,0x00004a(%edx)
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064d4c_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _065294_func
		mov    $0x000001,%al
		ret    

	_064d5c_jump:
		incw   0x000046(%eax)
		xor    %al,%al
		ret    



_064d64_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		cmp    $0x000004,%dl
		ja     _064d7f_jump
		incw   0x000046(%eax)

	_064d7f_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_064d84_jump:
		addw   $0x000002,0x000046(%eax)
		xor    %al,%al
		ret    



_064d8c_func:
		addw   $0x000003,0x000046(%eax)
		lea    0x000000(%eax),%eax

	_064d94_jump:
		xor    %al,%al
		ret    



_064d98_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _0652c0_func
		nop



_064da4_func:
		mov    $0x000001,%al
		ret    



_064da8_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movb   $0x000001,0x000077(%eax)
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		movb   $0x000002,0x000074(%eax)
		call   _01dd88_func
		dec    %eax
		mov    %ax,0x000048(%ebx)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_064dc8_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000001,%edx
		call   _065334_func
		mov    0x000046(%ebx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    0x000014(%ebx),%eax
		mov    (%edx,%eax,1),%ax
		mov    %ax,0x000046(%ebx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_064df4_func:
		push   %ebx
		push   %edx
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_064e14_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000085(%eax)
		je     _064e37_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_064e37_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_064e3c_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000085(%eax)
		jne    _064e5f_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_064e5f_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_064e64_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000085(%eax)
		je     _064e87_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_064e87_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_064e8c_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000085(%eax)
		jne    _064eaf_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_064eaf_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_064eb4_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x000028(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_064ee0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_064f0c_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _065368_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_064f24_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01dea0_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_064f44_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01de98_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_064f64_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000048(%eax),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _064f81_jump

	_064f74_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _0652c0_func
		cmp    %cx,%dx
		jl     _064f74_jump

	_064f81_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064f88_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _065334_func
		mov    $0x000001,%al
		pop    %edx
		ret    



_064f98_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		mov    $0x000001,%ebx
		call   _065334_func
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000048(%ecx),%dl
		call   _065368_func
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064fc0_func:
		call   _064c00_func
		mov    $0x000001,%al
		ret    



_064fc8_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x000080(%eax),%dl
		mov    0x00001a(%eax,%edx,4),%bx
		dec    %ebx
		mov    %bx,0x00001a(%eax,%edx,4)
		test   %bx,%bx
		jle    _064ff8_jump
		xor    %edx,%edx
		mov    0x000080(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_064ff8_jump:
		decb   0x000080(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_065004_func:
		movw   $0x00ffff,0x000046(%eax)
		mov    $0x000001,%al
		ret    



_065010_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000085(%eax)
		je     _06502f_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _065368_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_06502f_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_065034_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000085(%eax)
		jne    _065053_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _065368_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_065053_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_065058_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000085(%eax)
		je     _06507e_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _06507e_jump

	_065071_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _0652c0_func
		cmp    %cx,%dx
		jl     _065071_jump

	_06507e_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065084_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000085(%eax)
		jne    _0650aa_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _0650aa_jump

	_06509d_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _0652c0_func
		cmp    %cx,%dx
		jl     _06509d_jump

	_0650aa_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0650b0_func:
		push   %ebx
		push   %edx
		mov    0x000048(%eax),%dl
		and    $0x000001,%dl
		mov    0x000085(%eax),%dh
		and    $0x0000fd,%dh
		mov    %dh,0x000085(%eax)
		add    %dl,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x000085(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_0650d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ax
		cmp    $0x000003,%ax
		jb     _065119_jump
		jbe    _06524e_jump
		cmp    $0x000046,%ax
		jb     _06510a_jump
		jbe    _065138_jump
		cmp    $0x000047,%ax
		jbe    _065154_jump
		cmp    $0x000048,%ax
		je     _065180_jump
		jmp    _06528b_jump

	_06510a_jump:
		cmp    $0x000004,%ax
		je     _065269_jump
		jmp    _06528b_jump

	_065119_jump:
		cmp    $0x000001,%ax
		jb     _06512a_jump
		jbe    _0651d1_jump
		jmp    _0651f2_jump

	_06512a_jump:
		test   %ax,%ax
		je     _0651ad_jump
		jmp    _06528b_jump

	_065138_jump:
		mov    %edx,%eax
		call   _01e500_func
		test   %ax,%ax
		je     _065284_jump
		orb    $0x000002,0x000085(%edx)
		jmp    _06528b_jump

	_065154_jump:
		mov    0x000085(%edx),%cl
		test   $0x000001,%cl
		je     _06516f_jump
		mov    %cl,%al
		or     $0x000002,%al
		mov    %al,0x000085(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06516f_jump:
		mov    %cl,%ch
		and    $0x0000fd,%ch
		mov    %ch,0x000085(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065180_jump:
		mov    0x000085(%edx),%ah
		test   $0x000010,%ah
		jne    _06519c_jump
		mov    %ah,%bh
		or     $0x000002,%bh
		mov    %bh,0x000085(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06519c_jump:
		mov    %ah,%bl
		and    $0x0000fd,%bl
		mov    %bl,0x000085(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0651ad_jump:
		mov    0x000085(%edx),%al
		shl    $0x000004,%al
		mov    0x000050(%edx),%cl
		shr    $0x000007,%al
		cmp    %cl,%al
		jne    _065284_jump
		orb    $0x000002,0x000085(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0651d1_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		call   _06a9a0_func
		test   %ax,%ax
		jne    _065284_jump
		orb    $0x000002,0x000085(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0651f2_jump:
		mov    %edx,%eax
		mov    0x000085(%edx),%bl
		call   _01e4c4_func
		mov    0x000085(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		shl    $0x000004,%bl
		mov    0x000050(%edx),%ah
		shr    $0x000007,%bl
		cmp    %ah,%al
		jne    _065221_jump
		orb    $0x000002,0x000085(%edx)
		jmp    _065228_jump

	_065221_jump:
		andb   $0x0000fd,0x000085(%edx)

	_065228_jump:
		mov    %bl,%al
		mov    0x000085(%edx),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		mov    %ch,%ah
		mov    %ch,0x000085(%edx)
		or     %al,%ah
		mov    %ah,0x000085(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06524e_jump:
		xor    %eax,%eax
		mov    0x000050(%edx),%cx
		mov    0x000071(%edx),%al
		cmp    %cx,%ax
		jne    _065284_jump
		orb    $0x000002,0x000085(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065269_jump:
		xor    %eax,%eax
		mov    0x000050(%edx),%bx
		mov    0x000070(%edx),%al
		cmp    %bx,%ax
		jne    _065284_jump
		orb    $0x000002,0x000085(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065284_jump:
		andb   $0x0000fd,0x000085(%edx)

	_06528b_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065294_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000074(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_0aaadc_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_0652c0_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000074(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_0aaae0_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_0652ec_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		cmpl   $0x000000,0x000010(%eax)
		je     _06532d_jump
		testb  $0x000010,0x000085(%eax)
		je     _065331_jump
		mov    0x000048(%edx),%ax
		mov    %eax,%ebx
		dec    %ebx
		mov    %bx,0x000048(%edx)
		test   %ax,%ax
		jne    _065331_jump

	_06530f_jump:
		mov    %edx,%eax
		call   _065294_func
		xor    %eax,%eax
		mov    0x000074(%edx),%al
		imul   $0x00000c,%eax,%ebx
		mov    %edx,%eax
		call   *_0aaae4_data(%ebx)
		test   %al,%al
		jne    _06530f_jump
		pop    %edx
		pop    %ebx
		ret    

	_06532d_jump:
		movb   $0x00001e,0x000074(%eax)

	_065331_jump:
		pop    %edx
		pop    %ebx
		ret    



_065334_func:
		push   %ebx
		push   %ecx
		mov    0x000080(%eax),%dh
		xor    %ebx,%ebx
		inc    %dh
		mov    %dh,%bl
		shl    $0x000002,%ebx
		mov    %dh,0x000080(%eax)
		lea    (%eax,%ebx,1),%ecx
		mov    0x000046(%eax),%bx
		mov    %bx,0x000018(%ecx)
		xor    %ebx,%ebx
		mov    0x000080(%eax),%bl
		xor    %dh,%dh
		mov    %dx,0x00001a(%eax,%ebx,4)
		pop    %ecx
		pop    %ebx
		ret    



_065368_func:
		push   %ecx
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    %dl,0x000008(%esp)
		mov    %bl,(%esp)
		mov    0x000046(%eax),%bx
		mov    0x000085(%eax),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		mov    %al,0x000004(%esp)

	_065389_jump:
		mov    %ecx,%eax
		call   _0652c0_func
		cmp    0x000046(%ecx),%bx
		je     _0653ae_jump
		cmpb   $0x00000b,0x000074(%ecx)
		jne    _065389_jump
		mov    0x000044(%ecx),%eax
		mov    0x000010(%ecx),%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,1),%al
		cmp    0x000008(%esp),%al
		jne    _065389_jump

	_0653ae_jump:
		cmpb   $0x000000,(%esp)
		je     _0653fd_jump
		cmp    0x000046(%ecx),%bx
		je     _065401_jump
		mov    0x000085(%ecx),%bl
		movw   $0x000000,0x000048(%ecx)
		or     $0x000010,%bl
		mov    %ecx,%eax
		mov    %bl,0x000085(%ecx)
		call   _0652ec_func
		mov    0x000004(%esp),%al
		mov    0x000085(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000ef,%bh
		shl    $0x000004,%al
		mov    %bh,%ah
		mov    %bh,0x000085(%ecx)
		or     %al,%ah
		mov    %ah,0x000085(%ecx)
		add    $0x00000c,%esp
		pop    %ecx
		ret    

	_0653fd_jump:
		movb   $0x00001e,0x000074(%ecx)

	_065401_jump:
		add    $0x00000c,%esp
		pop    %ecx
		ret    



_065408_func:
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %dl,(%esp)
		mov    $0x000001,%edx
		call   _065334_func
		and    $0x0000ff,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		call   _065368_func
		add    $0x000004,%esp
		pop    %ecx
		ret    



_065440_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $_0ddce4_data,%edi
		mov    $_0a2adc_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065466_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06547e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065466_jump

	_06547e_jump:
		pop    %edi
		mov    $_0c214e_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_06548d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0654a5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06548d_jump

	_0654a5_jump:
		pop    %edi
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _065506_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0654c9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0654e1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0654c9_jump

	_0654e1_jump:
		pop    %edi
		mov    %edx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0654ed_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065505_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0654ed_jump

	_065505_jump:
		pop    %edi

	_065506_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_065510_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $_0ddce4_data,%edi
		mov    $_0a2adc_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    %eax,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _065583_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065546_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06555e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065546_jump

	_06555e_jump:
		pop    %edi
		mov    %edx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_06556a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065582_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06556a_jump

	_065582_jump:
		pop    %edi

	_065583_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_065590_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _0655bc_jump
		push   %edx
		push   %esi
		push   %ebx
		push   $_0a2ae8_data
		push   $_0ddce4_data
		call   _0852d9_func
		add    $0x000014,%esp
		jmp    _0655d0_jump

	_0655bc_jump:
		push   %edx
		push   %esi
		push   $_0a2af4_data
		push   $_0ddce4_data
		call   _0852d9_func
		add    $0x000010,%esp

	_0655d0_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0655dc_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %ax,(%esp)
		mov    %ecx,%esi
		mov    %ecx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _065644_jump
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _065626_jump
		push   %ebx
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		push   %ebx
		push   %edx
		push   %esi
		push   $_0a2afc_data
		push   $_0ddce4_data
		call   _0852d9_func
		add    $0x000018,%esp
		jmp    _065696_jump

	_065626_jump:
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		push   %ebx
		push   %edx
		push   %esi
		push   $_0a2b0c_data
		push   $_0ddce4_data
		call   _0852d9_func
		add    $0x000014,%esp
		jmp    _065696_jump

	_065644_jump:
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _06567b_jump
		push   %ebx
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		push   %ebx
		push   %edx
		push   $_0a2b18_data
		push   $_0ddce4_data
		call   _0852d9_func
		add    $0x000014,%esp
		mov    $_0ddce4_data,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    

	_06567b_jump:
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		push   %ebx
		push   %edx
		push   $_0a2b24_data
		push   $_0ddce4_data
		call   _0852d9_func
		add    $0x000010,%esp

	_065696_jump:
		mov    $_0ddce4_data,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    



_0656a4_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000080,%esp
		mov    %esp,%edi
		mov    $_0a2b34_data,%edx
		mov    $_0a2b2c_data,%esi
		mov    %eax,%ebx
		mov    %esp,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _065590_func
		add    $0x000080,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_0656d4_func:
		push   %ebx
		push   %ecx
		sub    $0x000080,%esp
		mov    %al,%bl
		push   $_0c214e_data
		push   $_0a2b38_data
		push   $_0a2b3c_data
		lea    0x00000c(%esp),%eax
		push   %eax
		mov    %edx,%ecx
		lea    0x000010(%esp),%edx
		call   _0852d9_func
		xor    %eax,%eax
		add    $0x000010,%esp
		mov    %bl,%al
		mov    $_0a2b44_data,%ebx
		call   _0655dc_func
		add    $0x000080,%esp
		pop    %ecx
		pop    %ebx
		ret    



_065798_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $_0ddce4_data,%edi
		mov    $_0a2b50_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %eax,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _06580c_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0657cf_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0657e7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0657cf_jump

	_0657e7_jump:
		pop    %edi
		mov    %edx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0657f3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06580b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0657f3_jump

	_06580b_jump:
		pop    %edi

	_06580c_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_065818_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $_0ddce4_data,%edi
		mov    $_0a2b48_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %eax,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _06588c_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_06584f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065867_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06584f_jump

	_065867_jump:
		pop    %edi
		mov    %edx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065873_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06588b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065873_jump

	_06588b_jump:
		pop    %edi

	_06588c_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_065918_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $_0ddce4_data,%edi
		mov    $_0a2b64_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %eax,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _06598b_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_06594e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065966_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06594e_jump

	_065966_jump:
		pop    %edi
		mov    %edx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065972_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06598a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065972_jump

	_06598a_jump:
		pop    %edi

	_06598b_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_065998_func:
		cmpb   $0x000000,_0c33df_data
		jne    _0659af_jump
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0ddd64_data(%eax)
		je     _0659b2_jump

	_0659af_jump:
		mov    $0x000001,%al
		ret    

	_0659b2_jump:
		xor    %al,%al
		ret    



_0659b8_func:
		and    $0x0000ff,%eax
		mov    %dl,_0ddd64_data(%eax)
		ret    



_0659c4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %al,%bl
		mov    %dl,0x000008(%esp)
		mov    $_0c2d96_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi

	_0659dc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0659f4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0659dc_jump

	_0659f4_jump:
		pop    %edi
		test   %bl,%bl
		jbe    _065ab8_jump
		mov    $_0a2ae4_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065a0b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065a23_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065a0b_jump

	_065a23_jump:
		pop    %edi
		mov    $_0a2b70_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065a32_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065a4a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065a32_jump

	_065a4a_jump:
		pop    %edi
		xor    %eax,%eax
		mov    %bl,%al
		call   _065998_func
		test   %al,%al
		je     _065a7f_jump
		mov    $_0a2b74_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065a66_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065a7e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065a66_jump

	_065a7e_jump:
		pop    %edi

	_065a7f_jump:
		mov    %esp,%edx
		xor    %eax,%eax
		mov    %esp,%esi
		mov    %bl,%al
		mov    $0x00000a,%ebx
		mov    $_0ddce4_data,%edi
		call   _08b918_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065a9f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065ab7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065a9f_jump

	_065ab7_jump:
		pop    %edi

	_065ab8_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _065b12_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065ad2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065aea_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065ad2_jump

	_065aea_jump:
		pop    %edi
		mov    $_0a2b78_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065af9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065b11_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065af9_jump

	_065b11_jump:
		pop    %edi

	_065b12_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_065b1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %ebx,%edi
		call   _0659c4_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _065b8c_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065b4f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065b67_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065b4f_jump

	_065b67_jump:
		pop    %edi
		mov    %ebx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065b73_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065b8b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065b73_jump

	_065b8b_jump:
		pop    %edi

	_065b8c_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065b98_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    %dl,%al
		xor    %edx,%edx
		mov    %ebx,%edi
		call   _0659c4_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _065c09_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065bcc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065be4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065bcc_jump

	_065be4_jump:
		pop    %edi
		mov    %ebx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065bf0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065c08_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065bf0_jump

	_065c08_jump:
		pop    %edi

	_065c09_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_065c14_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    %dl,%al
		xor    %edx,%edx
		mov    %ebx,%edi
		call   _0659c4_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _065c85_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065c48_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065c60_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065c48_jump

	_065c60_jump:
		pop    %edi
		mov    %ebx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065c6c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065c84_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065c6c_jump

	_065c84_jump:
		pop    %edi

	_065c85_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_065c90_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    %dl,%al
		xor    %edx,%edx
		mov    %ebx,%edi
		call   _0659c4_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _065d01_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065cc4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065cdc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065cc4_jump

	_065cdc_jump:
		pop    %edi
		mov    %ebx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065ce8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065d00_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065ce8_jump

	_065d00_jump:
		pop    %edi

	_065d01_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_065d0c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    %dl,%al
		xor    %edx,%edx
		mov    %ebx,%edi
		call   _0659c4_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _065d7d_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065d40_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065d58_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065d40_jump

	_065d58_jump:
		pop    %edi
		mov    %ebx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065d64_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065d7c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065d64_jump

	_065d7c_jump:
		pop    %edi

	_065d7d_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_065d88_func:
		call   _065b1c_func
		mov    $_0ddce4_data,%eax
		ret    



_065e64_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    %dl,%al
		xor    %edx,%edx
		mov    %ebx,%edi
		call   _0659c4_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _065ed5_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065e98_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065eb0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065e98_jump

	_065eb0_jump:
		pop    %edi
		mov    %ebx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065ebc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065ed4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065ebc_jump

	_065ed4_jump:
		pop    %edi

	_065ed5_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_065ee0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    %dl,%al
		xor    %edx,%edx
		mov    %ebx,%edi
		call   _0659c4_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _065f51_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065f14_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065f2c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065f14_jump

	_065f2c_jump:
		pop    %edi
		mov    %ebx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065f38_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065f50_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065f38_jump

	_065f50_jump:
		pop    %edi

	_065f51_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_066004_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %ebx,%edi
		call   _0659c4_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _066074_jump
		mov    $_0a2ae4_data,%esi
		mov    $_0ddce4_data,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_066037_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06604f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _066037_jump

	_06604f_jump:
		pop    %edi
		mov    %ebx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_06605b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _066073_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06605b_jump

	_066073_jump:
		pop    %edi

	_066074_jump:
		mov    $_0ddce4_data,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066490_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000085(%edx),%bl
		add    $0x000085,%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		or     %dl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066964_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _02bfdc_func
		mov    0x000071(%esi),%ah
		test   %ah,%ah
		jne    _066a33_jump
		cmpb   $0x000004,0x000070(%esi)
		jne    _066a33_jump
		mov    $0x000001,%dh
		mov    _0b9410_data,%ecx
		mov    %dh,_0c3394_data
		mov    _0b9414_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jle    _066a33_jump

	_0669a4_jump:
		cmpw   $0x000026,0x000064(%ecx)
		jne    _066a23_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _066a23_jump
		mov    0x000085(%ecx),%bl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000085(%ecx)
		call   _020064_func
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01dea8_func
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x00006c(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		add    $0x000032,%eax
		movw   $0x00fffe,0x000042(%ecx)
		mov    $0x000003,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		movw   $0x000001,0x000040(%ecx)
		call   _01e53c_func
		mov    %esi,%eax
		call   _01de98_func
		movw   $0x00fff8,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066a23_jump:
		inc    %eax
		add    $0x000088,%ecx
		cmp    %dx,%ax
		jl     _0669a4_jump

	_066a33_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066a38_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		movb   $0x000000,0x000074(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_066a50_func:
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %ebx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _066b58_jump

	_066a75_jump:
		cmpw   $0x000000,0x000064(%ecx)
		jne    _066a82_jump
		cmp    $0x000001,%dx
		je     _066a97_jump

	_066a82_jump:
		cmpw   $0x000009,0x000064(%ecx)
		jne    _066b48_jump
		cmp    $0x000002,%dx
		jne    _066b48_jump

	_066a97_jump:
		cmpw   $0x000000,0x00003c(%ecx)
		jg     _066b48_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _066b48_jump
		andb   $0x0000bb,0x000085(%ecx)
		mov    $0x000002,%ebx
		mov    0x000085(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000085(%ecx)
		mov    %ebx,%edx
		movw   $0x000000,0x000062(%ecx)
		call   _01dea8_func
		movl   $0x000001,0x000030(%ecx)
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0x000028(%ecx)
		mov    0x00006d(%ecx),%al
		mov    0x00002c(%esi),%esi
		sar    $0x000002,%eax
		sub    %eax,%esi
		mov    %ecx,%eax
		mov    %esi,0x00002c(%ecx)
		call   _01e4c4_func
		mov    (%esp),%eax
		mov    0x000085(%ecx),%dh
		mov    %ax,0x000042(%ecx)
		test   $0x000008,%dh
		je     _066b27_jump
		mov    0x000004(%esp),%eax
		jmp    _066b31_jump

	_066b27_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,0x000040(%ecx)
		neg    %eax

	_066b31_jump:
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01e53c_func
		andb   $0x0000ef,0x000085(%ecx)
		add    $0x000008,%esp
		pop    %esi
		ret    

	_066b48_jump:
		inc    %eax
		add    $0x000088,%ecx
		cmp    %bx,%ax
		jl     _066a75_jump

	_066b58_jump:
		add    $0x000008,%esp
		pop    %esi
		ret    



_066b60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _066c22_jump

	_066b7e_jump:
		cmpw   $0x000008,0x000064(%ecx)
		jne    _066c12_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _066c12_jump
		andb   $0x0000bb,0x000085(%ecx)
		mov    $0x000002,%ebx
		mov    0x000085(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000085(%ecx)
		mov    %ebx,%edx
		movw   $0x000000,0x000062(%ecx)
		call   _01dea8_func
		movl   $0x000001,0x000030(%ecx)
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0x000028(%ecx)
		mov    0x00006d(%ecx),%al
		mov    0x00002c(%esi),%esi
		sub    %eax,%esi
		mov    %ecx,%eax
		mov    %esi,0x00002c(%ecx)
		call   _01e4c4_func
		movw   $0x000002,0x000042(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		call   _01e53c_func
		andb   $0x0000ef,0x000085(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066c12_jump:
		inc    %eax
		add    $0x000088,%ecx
		cmp    %dx,%ax
		jl     _066b7e_jump

	_066c22_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066c28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		call   _02bfdc_func
		cmpb   $0x000000,_0c1156_data
		jne    _066c4c_jump
		cmpb   $0x000000,_0c1158_data
		je     _066d27_jump

	_066c4c_jump:
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		mov    %esp,%edx
		mov    %esi,%eax
		call   _07da20_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _066c6a_jump
		neg    %eax

	_066c6a_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _066d19_jump
		cmpw   $0x00000f,0x000008(%esp)
		jge    _066d19_jump
		cmpb   $0x000000,0x000071(%esi)
		jne    _066c91_jump
		cmpb   $0x000000,0x000070(%esi)
		je     _066ca7_jump

	_066c91_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _066c9d_jump
		cmpb   $0x000002,0x000070(%esi)
		je     _066ca7_jump

	_066c9d_jump:
		cmpb   $0x000001,0x000071(%esi)
		jne    _066d3f_jump

	_066ca7_jump:
		mov    _0c1144_data,%eax
		mov    0x000085(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    0x000085(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%ah
		je     _066d3f_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x000040(%esi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%esi)
		call   _01dea8_func
		andb   $0x0000ef,0x000085(%esi)
		mov    0x000085(%esi),%cl
		mov    $0x000001,%ebx
		test   $0x000008,%cl
		setne  %al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		add    $0x000002,%eax
		mov    %al,%dl
		mov    %esi,%eax
		call   _065368_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066d19_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _066d3f_jump
		cmpb   $0x000010,0x000070(%esi)
		jne    _066d3f_jump
		jmp    _066d33_jump

	_066d27_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _066d3f_jump
		cmpb   $0x000010,0x000070(%esi)
		jne    _066d3f_jump

	_066d33_jump:
		mov    $0x000011,%edx
		mov    %esi,%eax
		call   _01de98_func

	_066d3f_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		mov    %eax,%eax
		ret    



_066d4c_func:
		push   %edx
		mov    0x00007a(%eax),%dl
		cmp    $0x000002,%dl
		ja     _066d5c_jump
		dec    %dl
		mov    %dl,0x00006f(%eax)
		pop    %edx
		ret    

	_066d5c_jump:
		sub    $0x000003,%dl
		mov    %dl,0x00006f(%eax)
		pop    %edx
		ret    



_066d64_func:
		mov    0x00007a(%eax),%dl
		cmp    $0x000002,%dl
		je     _066d71_jump
		cmp    $0x000004,%dl
		jne    _066d74_jump

	_066d71_jump:
		decb   0x00007a(%eax)

	_066d74_jump:
		ret    



_066d78_func:
		push   %edx
		mov    %eax,%edx
		call   _02bfdc_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		pop    %edx
		ret    



_066d90_func:
		push   %ebx
		mov    %eax,%ebx
		testb  $0x000080,_0c3347_data
		je     _066dc3_jump
		cmpw   $0x000003,_0c3130_data
		je     _066dc3_jump
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _071068_func
		mov    _0c1144_data,%eax
		mov    0x000034(%ebx),%dx
		mov    %dx,0x00004a(%eax)

	_066dc3_jump:
		pop    %ebx
		ret    



_066dc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		call   _07d3c4_func
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _071068_func
		mov    _0c30f4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _066e14_jump
		call   _05cd2c_func
		mov    _0c30f4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		andb   $0x0000fb,0x000085(%edx,%eax,1)

	_066e14_jump:
		movw   $0x00012c,_0a7cda_data
		call   _07d5f4_func
		mov    %ax,_0c30f6_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _066e33_jump
		call   _05cd2c_func

	_066e33_jump:
		mov    0x000085(%ebx),%ch
		mov    0x000032(%ebx),%eax
		and    $0x0000fb,%ch
		sar    $0x000010,%eax
		mov    %ch,0x000085(%ebx)
		call   _07549c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066e54_func:
		push   %ebx
		cmp    $0x000004,%dx
		jne    _066e93_jump
		cmpb   $0x000005,0x000070(%eax)
		jne    _066e93_jump
		mov    _0c1144_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jl     _066e89_jump
		jle    _066e79_jump
		mov    $0x000009,%edx
		jmp    _066e8e_jump

	_066e79_jump:
		testb  $0x000008,0x000085(%edx)
		je     _066e89_jump
		mov    $0x000009,%edx
		jmp    _066e8e_jump

	_066e89_jump:
		mov    $0x000006,%edx

	_066e8e_jump:
		call   _01de98_func

	_066e93_jump:
		pop    %ebx
		ret    



_066e98_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _07d3c4_func
		mov    _0c3347_data,%ah
		mov    0x000085(%edx),%bl
		or     $0x000080,%ah
		and    $0x0000fb,%bl
		mov    %ah,_0c3347_data
		mov    %bl,0x000085(%edx)
		pop    %edx
		pop    %ebx
		ret    

_066ec4_switch:
		.long   _066f7f_case
		.long   _066f95_case
		.long   _066f85_case
		.long   _066f95_case
		.long   _066f85_case
		.long   _066f95_case
		.long   _066f95_case
		.long   _066f8b_case
		.long   _066f95_case
		.long   _066f91_case
		.long   _066f95_case
		.long   _066f91_case




_066ef4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000007,0x000070(%eax)
		jne    _066f48_jump
		testb  $0x000001,_0c3347_data
		jne    _066f16_jump
		mov    _0c1144_data,%eax
		movb   $0x000008,0x000072(%eax)
		jmp    _066f95_case

	_066f16_jump:
		mov    _0c1144_data,%ebx
		mov    0x000072(%ebx),%al
		cmp    $0x000003,%al
		jb     _066f2e_jump
		jbe    _066f3c_jump
		cmp    $0x000005,%al
		je     _066f42_jump
		jmp    _066f95_case

	_066f2e_jump:
		cmp    $0x000001,%al
		jne    _066f95_case
		movb   $0x000008,0x000072(%ebx)
		jmp    _066f95_case

	_066f3c_jump:
		movb   $0x00000a,0x000072(%ebx)
		jmp    _066f95_case

	_066f42_jump:
		movb   $0x00000c,0x000072(%ebx)
		jmp    _066f95_case

	_066f48_jump:
		cmpb   $0x00000e,0x000070(%edx)
		jne    _066f95_case
		testb  $0x000001,_0c3347_data
		jne    _066f62_jump
		mov    _0c1144_data,%eax
		movb   $0x000001,0x000072(%eax)
		jmp    _066f95_case

	_066f62_jump:
		mov    _0c1144_data,%eax
		mov    0x000072(%eax),%bl
		dec    %bl
		cmp    $0x00000b,%bl
		ja     _066f95_case
		and    $0x0000ff,%ebx
		jmp    *%cs:_066ec4_switch(,%ebx,4)

	_066f7f_case:
		movb   $0x000003,0x000072(%eax)
		jmp    _066f95_case

	_066f85_case:
		movb   $0x000005,0x000072(%eax)
		jmp    _066f95_case

	_066f8b_case:
		movb   $0x00000a,0x000072(%eax)
		jmp    _066f95_case

	_066f91_case:
		movb   $0x00000c,0x000072(%eax)

	_066f95_case:
		mov    %edx,%eax
		call   _07d3c4_func
		mov    _0c3347_data,%al
		mov    0x000085(%edx),%ch
		or     $0x000001,%al
		and    $0x0000fb,%ch
		mov    %al,_0c3347_data
		mov    _0c1144_data,%eax
		mov    %ch,0x000085(%edx)
		mov    0x000072(%eax),%bl
		mov    %bl,0x000070(%eax)
		mov    %bl,_0c1154_data
		mov    0x000032(%edx),%edx
		mov    $0x00000b,%eax
		sar    $0x000010,%edx
		mov    %bl,_0c175f_data
		call   _071068_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066fe4_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _07d3c4_func
		mov    0x00007a(%edx),%al
		mov    _0b9372_data,%ah
		add    %al,%ah
		mov    _0c2f49_data,%bl
		mov    %ah,_0b9372_data
		cmp    %bl,%ah
		jbe    _06700e_jump
		mov    %bl,_0b9372_data

	_06700e_jump:
		andb   $0x0000fb,0x000085(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x000008,%eax
		sar    $0x000010,%edx
		call   _071068_func
		pop    %edx
		pop    %ebx
		ret    



_067028_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x0000d5,%eax
		sar    $0x000010,%edx
		call   _071068_func
		mov    %ebx,%eax
		call   _07d3c4_func
		mov    _0c3347_data,%ah
		mov    0x000085(%ebx),%dl
		or     $0x000008,%ah
		and    $0x0000fb,%dl
		mov    %ah,_0c3347_data
		mov    %dl,0x000085(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_067064_func:
		push   %edx
		orb    $0x000040,_0c3347_data
		mov    0x000085(%eax),%dh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dh
		mov    %dh,0x000085(%eax)
		mov    0x000032(%eax),%edx
		mov    $0x00000a,%eax
		sar    $0x000010,%edx
		call   _071068_func
		pop    %edx
		ret    



_067094_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    0x000032(%eax),%edx
		mov    $0x00000e,%eax
		sar    $0x000010,%edx
		call   _071068_func
		mov    $0x000017,%edx
		mov    %ebp,%eax
		call   _01de98_func
		cmpw   $0x000000,_0c30d4_data
		je     _067109_jump
		cmpw   $0x000000,_0c30d6_data
		jne    _067109_jump
		mov    _0c33ad_data,%dh
		mov    _0c33ac_data,%bl
		dec    %dh
		inc    %bl
		mov    %dh,_0c33ad_data
		mov    %bl,_0c33ac_data
		mov    %bl,_0c2f46_data
		test   %dh,%dh
		jne    _0671a0_jump
		movw   $0x00ffe0,_0c30d8_data
		call   _03eaa8_func
		jmp    _0671a0_jump

	_067109_jump:
		mov    _0c2f46_data,%ah
		inc    %ah
		mov    _0c33ad_data,%dl
		mov    %ah,_0c2f46_data
		cmp    %dl,%ah
		jb     _0671a0_jump
		mov    _0b9410_data,%edx
		mov    _0b9414_data,%di
		xor    %ecx,%ecx
		test   %di,%di
		jle    _0671a0_jump

	_067139_jump:
		mov    0x000064(%edx),%si
		cmp    $0x00007c,%si
		je     _067149_jump
		cmp    $0x00002a,%si
		jne    _067194_jump

	_067149_jump:
		mov    $_0a2bbc_data,%eax
		call   _072ffc_func
		movswl %ax,%ebx
		mov    %eax,%esi
		mov    %ebx,%eax
		call   _07382c_func
		test   %eax,%eax
		jne    _06716a_jump
		mov    %ebx,%eax
		call   _0730b8_func

	_06716a_jump:
		movswl %si,%ebx
		mov    %ebx,%eax
		call   _07382c_func
		test   %eax,%eax
		je     _06717f_jump
		mov    %ebx,%eax
		call   _0733d4_func

	_06717f_jump:
		orb    $0x000004,0x000085(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _07d3c4_func

	_067194_jump:
		inc    %ecx
		add    $0x000088,%edx
		cmp    %di,%cx
		jl     _067139_jump

	_0671a0_jump:
		cmpb   $0x000064,_0c2f46_data
		jbe    _0671fa_jump
		mov    %ebp,%eax
		call   _07d3c4_func
		cmpw   $0x000000,_0c30d4_data
		je     _0671cf_jump
		cmpw   $0x000000,_0c30d6_data
		jne    _0671cf_jump
		movw   $0x00ffff,_0c30f6_data
		jmp    _0671da_jump

	_0671cf_jump:
		call   _07d5f4_func
		mov    %ax,_0c30f6_data

	_0671da_jump:
		mov    _0c30f4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0671ec_jump
		call   _05cd2c_func

	_0671ec_jump:
		movb   $0x000001,_0c33e4_data
		subb   $0x000065,_0c2f46_data

	_0671fa_jump:
		mov    0x000038(%ebp),%ax
		add    $0x00000a,%eax
		movswl %ax,%edx
		mov    0x000036(%ebp),%ax
		add    $0x00000a,%eax
		xor    %ebx,%ebx
		cwtl   
		call   _07db00_func
		mov    0x000032(%ebp),%eax
		sar    $0x000010,%eax
		call   _07549c_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06722c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _07d3c4_func
		mov    _0c310a_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _067269_jump
		mov    $0x000004,%ah
		mov    %ah,_0b9372_data
		mov    %ah,_0c2f49_data
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		mov    _0b9410_data,%eax
		shl    $0x000003,%ebx
		andb   $0x0000fb,0x000085(%ebx,%eax,1)

	_067269_jump:
		movw   $0x00012c,_0a7cda_data
		call   _07d5f4_func
		mov    %ax,_0c310c_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _06728f_jump
		mov    $0x000004,%al
		mov    %al,_0b9372_data
		mov    %al,_0c2f49_data

	_06728f_jump:
		andb   $0x0000fb,0x000085(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x00000c,%eax
		sar    $0x000010,%edx
		call   _071068_func
		mov    _0c3130_data,%cx
		cmp    $0x000003,%cx
		je     _0672c7_jump
		cmp    $0x000004,%cx
		je     _0672c7_jump
		mov    $0x000004,%bh
		mov    %bh,_0b9372_data
		mov    %bh,_0c2f49_data

	_0672c7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0672cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,_0a7c8d_data
		jne    _067317_jump
		mov    $_0a2bc4_data,%eax
		call   _072ffc_func
		movswl %ax,%ebx
		mov    %eax,%ecx
		mov    %ebx,%eax
		call   _07382c_func
		test   %eax,%eax
		jne    _0672fb_jump
		mov    %ebx,%eax
		call   _0730b8_func

	_0672fb_jump:
		movswl %cx,%ebx
		mov    %ebx,%eax
		call   _07382c_func
		test   %eax,%eax
		je     _067310_jump
		mov    %ebx,%eax
		call   _0733d4_func

	_067310_jump:
		movb   $0x00003c,_0a7c8d_data

	_067317_jump:
		mov    0x000085(%edx),%bh
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bh
		mov    %edx,%eax
		mov    %bh,0x000085(%edx)
		call   _02b160_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067338_func:
		push   %ebx
		push   %edx
		mov    0x000085(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000085(%eax)
		call   _02b1f4_func
		test   %al,%al
		jne    _06739f_jump
		cmpb   $0x000000,_0a7c8d_data
		jne    _06739f_jump
		mov    $_0a2bcc_data,%eax
		call   _072ffc_func
		movswl %ax,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _07382c_func
		test   %eax,%eax
		jne    _067383_jump
		mov    %edx,%eax
		call   _0730b8_func

	_067383_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		call   _07382c_func
		test   %eax,%eax
		je     _067398_jump
		mov    %edx,%eax
		call   _0733d4_func

	_067398_jump:
		movb   $0x00003c,_0a7c8d_data

	_06739f_jump:
		pop    %edx
		pop    %ebx
		ret    



_0673a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,_0a7c8d_data
		jne    _0673ef_jump
		mov    $_0a2bc4_data,%eax
		call   _072ffc_func
		movswl %ax,%ebx
		mov    %eax,%ecx
		mov    %ebx,%eax
		call   _07382c_func
		test   %eax,%eax
		jne    _0673d3_jump
		mov    %ebx,%eax
		call   _0730b8_func

	_0673d3_jump:
		movswl %cx,%ebx
		mov    %ebx,%eax
		call   _07382c_func
		test   %eax,%eax
		je     _0673e8_jump
		mov    %ebx,%eax
		call   _0733d4_func

	_0673e8_jump:
		movb   $0x00003c,_0a7c8d_data

	_0673ef_jump:
		mov    %edx,%eax
		call   _02b274_func
		movl   $0x000000,0x000024(%edx)
		mov    0x000085(%edx),%bh
		mov    0x000032(%edx),%eax
		and    $0x0000fb,%bh
		sar    $0x000010,%eax
		mov    %bh,0x000085(%edx)
		call   _075530_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06741c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _02b2e8_func
		mov    %al,%bl
		andb   $0x0000fb,0x000085(%edx)
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%edx)
		call   _075530_func
		test   %bl,%bl
		jne    _06748a_jump
		cmpb   $0x000000,_0a7c8d_data
		jne    _06748a_jump
		mov    $_0a2bcc_data,%eax
		call   _072ffc_func
		movswl %ax,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _07382c_func
		test   %eax,%eax
		jne    _06746e_jump
		mov    %edx,%eax
		call   _0730b8_func

	_06746e_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		call   _07382c_func
		test   %eax,%eax
		je     _067483_jump
		mov    %edx,%eax
		call   _0733d4_func

	_067483_jump:
		movb   $0x00003c,_0a7c8d_data

	_06748a_jump:
		pop    %edx
		pop    %ebx
		ret    



_067490_func:
		push   %ebx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x0000cc,%eax
		sar    $0x000010,%edx
		call   _071068_func
		andb   $0x0000fb,0x000085(%ebx)
		mov    %ebx,%eax
		movl   $0x000000,0x000024(%ebx)
		call   _02b160_func
		pop    %ebx
		ret    



_0674bc_func:
		push   %ebx
		push   %edx
		mov    $_0a2bd4_data,%eax
		call   _072ffc_func
		movswl %ax,%edx
		mov    %eax,%ebx
		cmp    $0xffffffff,%edx
		je     _0674e4_jump
		mov    %edx,%eax
		call   _07382c_func
		test   %eax,%eax
		jne    _0674e4_jump
		mov    %edx,%eax
		call   _0730b8_func

	_0674e4_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		call   _07382c_func
		test   %eax,%eax
		je     _0674f9_jump
		mov    %edx,%eax
		call   _0733d4_func

	_0674f9_jump:
		pop    %edx
		pop    %ebx
		ret    



_0674fc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _0674bc_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		pop    %ecx
		pop    %ebx
		ret    



_067518_func:
		push   %ebx
		push   %edx
		mov    0x00007a(%eax),%dl
		cmp    0x00007b(%eax),%dl
		jae    _067534_jump
		mov    %dl,%bl
		dec    %bl
		mov    %bl,0x00007a(%eax)
		cmp    $0x000001,%bl
		jae    _067534_jump
		mov    0x00007b(%eax),%dl
		mov    %dl,0x00007a(%eax)

	_067534_jump:
		pop    %edx
		pop    %ebx
		ret    



_067538_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0c314a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _067571_jump
		mov    0x00007a(%edx),%al
		cmp    0x00007b(%edx),%al
		jne    _067571_jump
		mov    %edx,%eax
		call   _07d3c4_func
		movw   $0x000000,0x000040(%edx)
		mov    0x00007a(%edx),%bl
		movw   $0x000000,0x000042(%edx)
		dec    %bl
		mov    %bl,0x00007a(%edx)
		call   _05fac0_func

	_067571_jump:
		pop    %edx
		pop    %ebx
		ret    



_067574_func:
		call   _067584_func
		xor    %ah,%ah
		mov    %ah,_0c33e4_data
		ret    



_067584_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000002,_0b9369_data
		jne    _067602_jump
		cmpb   $0x000008,_0b9368_data
		setne  %al
		and    $0x0000ff,%eax
		je     _067602_jump
		cmpw   $0x000000,_0b9338_data
		je     _0675ce_jump
		cmpw   $0x000000,_0c3112_data
		jne    _0675ce_jump
		mov    _0b9336_data,%eax
		mov    _0b9320_data,%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    %ecx,_0b9320_data

	_0675ce_jump:
		mov    $0x000001,%cl
		mov    _0b933a_data,%dx
		xor    %edi,%edi
		mov    %cl,_0c33ca_data
		mov    %di,_0b9338_data
		mov    %di,_0c3112_data
		test   %dx,%dx
		jge    _067984_jump
		mov    %di,_0b933a_data
		jmp    _067984_jump

	_067602_jump:
		mov    _0b9369_data,%dh
		test   %dh,%dh
		je     _067615_jump
		cmp    $0x000001,%dh
		jne    _067797_jump

	_067615_jump:
		mov    _0b9352_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _067797_jump
		cmpb   $0x000000,_0c33b4_data
		jne    _067797_jump
		call   _070a20_func
		call   _021b40_func
		mov    _0c107c_data,%eax
		test   %eax,%eax
		jle    _06766a_jump
		mov    _0c1074_data,%edx
		test   %edx,%edx
		jle    _06766a_jump
		cmp    %edx,%eax
		jge    _06766a_jump
		mov    $0x000007,%ebx
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		jmp    _067686_jump

	_06766a_jump:
		mov    $0x000017,%ebx
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax
		xor    %cl,%cl
		call   _01dea8_func
		mov    %cl,_0b9367_data

	_067686_jump:
		cmpb   $0x000000,_0c1156_data
		je     _0676af_jump
		mov    _0c1144_data,%eax
		andb   $0x0000fb,0x000085(%eax)
		xor    %dh,%dh
		mov    %dh,_0c1156_data
		call   _07d3c4_func
		xor    %eax,%eax
		call   _069ca4_func

	_0676af_jump:
		call   _07e0dc_func
		cmpb   $0x000001,_0c33ab_data
		jne    _0676ec_jump
		mov    $_0c3347_data,%edi
		mov    $_0c3344_data,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		xor    %esi,%esi
		xor    %eax,%eax
		mov    %si,_0c3112_data
		call   _06b680_func
		mov    $0x000001,%eax
		xor    %bh,%bh
		call   _06b680_func
		mov    %bh,_0c33ab_data

	_0676ec_jump:
		mov    _0c30f4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _067725_jump
		movw   $0x00ffff,_0c30f6_data
		call   _05cd2c_func
		mov    _0c30f4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		andb   $0x0000fb,0x000085(%edx,%eax,8)

	_067725_jump:
		mov    _0c310a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _067761_jump
		mov    $0xffffffff,%eax
		mov    $0x000004,%ch
		mov    %ax,_0c310c_data
		mov    _0b9410_data,%eax
		mov    %ch,_0b9372_data
		mov    -0x000003(%eax),%dl
		sub    $0x000088,%eax
		and    $0x0000fb,%dl
		mov    %ch,_0c2f49_data
		mov    %dl,0x000085(%eax)

	_067761_jump:
		xor    %edx,%edx
		mov    %dx,_0c3112_data
		mov    %dx,_0b9338_data
		cmpb   $0x000000,_0c33c7_data
		jne    _067984_jump
		cmpb   $0x000000,_0c33ab_data
		jne    _067984_jump
		movb   $0x000002,_0c33b4_data
		jmp    _067984_jump

	_067797_jump:
		cmpb   $0x000003,_0b9369_data
		jne    _0677a9_jump
		cmpb   $0x000017,_0b9368_data
		je     _0677c3_jump

	_0677a9_jump:
		cmpb   $0x000003,_0b9369_data
		jne    _06790a_jump
		cmpb   $0x000007,_0b9368_data
		jne    _06790a_jump

	_0677c3_jump:
		mov    $_0b92f8_data,%eax
		call   _01d740_func
		test   %al,%al
		je     _06787f_jump
		call   _03ead0_func
		mov    $0x000001,%al
		mov    _0c1074_data,%edx
		mov    %al,_0c33a7_data
		cmp    $0xffffffff,%edx
		jne    _067812_jump
		mov    _0c107c_data,%eax
		mov    %eax,_0c1074_data
		mov    _0c33df_data,%ah
		mov    %edx,_0c107c_data
		test   %ah,%ah
		je     _06780d_jump
		call   _0217f0_func
		jmp    _067812_jump

	_06780d_jump:
		call   _0219a4_func

	_067812_jump:
		mov    _0c107c_data,%ecx
		test   %ecx,%ecx
		jle    _06784f_jump
		mov    _0c1074_data,%esi
		cmp    %esi,%ecx
		jge    _06784f_jump
		jge    _06784f_jump
		mov    $0xffffffff,%ebp
		mov    _0c33df_data,%dl
		mov    %ecx,_0c1074_data
		mov    %ebp,_0c107c_data
		test   %dl,%dl
		je     _06784a_jump
		call   _0217f0_func
		jmp    _06784f_jump

	_06784a_jump:
		call   _0219a4_func

	_06784f_jump:
		cmpb   $0x000000,_0bf2fd_data
		je     _067861_jump
		movb   $0x000007,_0bf2fd_data
		jmp    _067866_jump

	_067861_jump:
		call   _07caac_func

	_067866_jump:
		mov    $0x000001,%ecx
		xor    %bh,%bh
		mov    %cx,_0c3146_data
		mov    %bh,_0c33b4_data
		jmp    _067984_jump

	_06787f_jump:
		xor    %edi,%edi
		xor    %ah,%ah
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %di,_0b9338_data
		mov    %dx,_0c3112_data
		mov    _0b9340_data,%edx
		mov    %ax,_0b933a_data
		sar    $0x000010,%edx
		mov    %bx,_0c312e_data
		cmp    $0xffffffff,%edx
		je     _067984_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		mov    %bx,0x000042(%edx,%eax,8)
		mov    _0b9340_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9340_data,%ebx
		sar    $0x000010,%ebx
		mov    %di,0x000040(%edx,%eax,8)
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9340_data,%ebx
		sar    $0x000010,%ebx
		movb   $0x000000,0x000075(%edx,%eax,8)
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		movb   $0x000000,0x000076(%edx,%eax,8)
		jmp    _067984_jump

	_06790a_jump:
		cmpb   $0x000006,_0b9369_data
		jne    _067984_jump
		cmpb   $0x00000e,_0b9368_data
		je     _067933_jump
		mov    $0x00000e,%edx
		mov    $_0b92f8_data,%eax
		xor    %bl,%bl
		call   _01de98_func
		mov    %bl,_0b9367_data

	_067933_jump:
		mov    $0x000002,%bh
		mov    _0b9368_data,%cl
		xor    %edx,%edx
		mov    %bh,_0c33b4_data
		mov    %dx,_0c3112_data
		mov    %dx,_0b9338_data
		mov    %dx,_0b933a_data
		cmp    $0x00000e,%cl
		jne    _067984_jump
		mov    $_0b92f8_data,%eax
		call   _01d740_func
		test   %al,%al
		je     _067984_jump
		call   _07caac_func
		mov    $0x000001,%esi
		xor    %ch,%ch
		mov    %si,_0c3146_data
		mov    %ch,_0c33b4_data

	_067984_jump:
		cmpb   $0x000000,_0c33b4_data
		je     _0679b5_jump
		xor    %ecx,%ecx
		mov    _0c3170_data,%ax
		mov    %cx,_0c3148_data
		mov    %ax,_0c3162_data
		mov    _0c316c_data,%ax
		mov    %cx,_0c314e_data
		mov    %ax,_0c3166_data

	_0679b5_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0679bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpw   $0x000000,_0c30d4_data
		je     _0679f0_jump
		mov    _0c1078_data,%al
		xor    %edx,%edx
		mov    %al,_0c2f46_data
		mov    %edx,_0c1078_data
		call   _07ca74_func
		call   _070a20_func
		call   _03ead0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0679f0_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _067a02_jump
		cmpb   $0x000008,_0b9368_data
		je     _067a62_jump

	_067a02_jump:
		cmpb   $0x0000ff,_0b9372_data
		je     _067a62_jump
		cmpb   $0x000000,_0c33b4_data
		jne    _067a62_jump
		call   _070a20_func
		call   _03ead0_func
		mov    $_0c1768_data,%eax
		mov    $0x000001,%ebx
		call   _0750c4_func
		mov    %bx,_0c3156_data
		cmpb   $0x000000,_0c33e4_data
		je     _067a62_jump
		decw   _0c2f40_data
		mov    _0c2f3e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _067a5a_jump
		xor    %esi,%esi
		mov    %si,_0c2f40_data

	_067a5a_jump:
		xor    %cl,%cl
		mov    %cl,_0c33e4_data

	_067a62_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067a68_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x000071(%eax)
		jne    _067abe_jump
		mov    0x000070(%eax),%dh
		cmp    $0x000004,%dh
		jne    _067abe_jump
		call   _01d740_func
		test   %al,%al
		je     _067abe_jump
		mov    _0c30db_data,%bl
		test   %dh,%bl
		jne    _067abe_jump
		mov    %bl,%bh
		or     %dh,%bh
		mov    _0c3158_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		mov    $0x000001,%cl
		add    %edx,%eax
		mov    %bh,_0c30db_data
		call   _07df70_func
		mov    %cl,_0c3394_data

	_067abe_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067ac4_func:
		push   %edx
		cmpb   $0x000001,0x000070(%eax)
		jne    _067ad5_jump
		mov    $0x000005,%edx
		call   _01de98_func

	_067ad5_jump:
		pop    %edx
		ret    



_067ad8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000074(%eax)
		jne    _067af1_jump
		andb   $0x0000f7,0x000085(%esi)
		jmp    _067afe_jump

	_067af1_jump:
		cmpb   $0x000001,0x000074(%esi)
		jne    _067afe_jump
		orb    $0x000008,0x000085(%esi)

	_067afe_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _067bcb_jump
		cmpb   $0x00000b,0x000070(%esi)
		jne    _067bcb_jump
		cmpb   $0x000005,0x00006f(%esi)
		jb     _067bb1_jump
		cmpb   $0x000000,0x000083(%esi)
		jne    _067bb1_jump
		mov    0x000083(%esi),%dh
		mov    0x000081(%esi),%bl
		inc    %dh
		inc    %bl
		mov    %dh,0x000083(%esi)
		mov    %bl,0x000081(%esi)
		cmp    $0x000002,%bl
		jbe    _067b51_jump
		movb   $0x000001,0x000081(%esi)

	_067b51_jump:
		cmpb   $0x000001,0x00007a(%esi)
		je     _067b7c_jump
		mov    $0xffffffff,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _066a50_func
		mov    %esi,%eax
		call   _066b60_func
		jmp    _067d16_jump

	_067b7c_jump:
		mov    $0xfffffffe,%ecx
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _066a50_func
		mov    $0xffffffff,%ecx
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _066a50_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067bb1_jump:
		cmpb   $0x000002,0x00006f(%esi)
		jae    _067d16_jump
		movb   $0x000000,0x000083(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067bcb_jump:
		mov    0x000071(%esi),%ch
		test   %ch,%ch
		jne    _067c6f_jump
		cmpb   $0x000015,0x000070(%esi)
		jne    _067c6f_jump
		cmpb   $0x000005,0x00006f(%esi)
		jb     _067c55_jump
		cmpb   $0x000000,0x000083(%esi)
		jne    _067c55_jump
		mov    %ch,(%esp)
		mov    0x000083(%esi),%ch
		inc    %ch
		mov    $0xfffffffc,%edi
		mov    %ch,0x000083(%esi)

	_067c05_jump:
		xor    %edx,%edx
		mov    (%esp),%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edx
		xor    %dh,%dh
		mov    $0x000003,%eax
		mov    %edx,%ebx
		sub    %edx,%eax
		neg    %ebx
		movswl %ax,%edx
		movswl %bx,%ecx
		mov    %esi,%eax
		movswl %di,%ebx
		inc    %edi
		call   _066a50_func
		movswl %di,%edx
		cmp    $0xfffffffe,%edx
		jne    _067c42_jump
		mov    $0x000003,%edi

	_067c42_jump:
		mov    (%esp),%ch
		inc    %ch
		mov    %ch,(%esp)
		cmp    $0x000004,%ch
		jae    _067d16_jump
		jmp    _067c05_jump

	_067c55_jump:
		cmpb   $0x000002,0x00006f(%esi)
		jae    _067d16_jump
		movb   $0x000000,0x000083(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067c6f_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _067cdb_jump
		mov    0x000070(%esi),%dl
		cmp    $0x000003,%dl
		jne    _067cdb_jump
		mov    0x000083(%esi),%cl
		inc    %cl
		mov    %cl,0x000083(%esi)
		cmp    0x000081(%esi),%dl
		je     _067ca5_jump
		cmp    $0x0000fd,%cl
		jb     _067ca5_jump
		mov    %esi,%eax
		call   _07ccf8_func
		mov    %dl,0x000081(%esi)

	_067ca5_jump:
		movw   $0x000000,0x000040(%esi)
		mov    0x00006f(%esi),%ah
		movw   $0x000000,0x000042(%esi)
		cmp    $0x00000c,%ah
		jbe    _067cc6_jump
		movb   $0x000003,0x00006f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067cc6_jump:
		cmp    $0x000001,%ah
		ja     _067d16_jump
		movb   $0x000000,0x000083(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067cdb_jump:
		cmpb   $0x000001,0x000071(%esi)
		jne    _067d16_jump
		cmpw   $0x000000,0x000052(%esi)
		je     _067cee_jump
		incb   0x000083(%esi)

	_067cee_jump:
		cmpb   $0x0000fe,0x000083(%esi)
		jb     _067d08_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _065368_func

	_067d08_jump:
		mov    %esi,%eax
		call   _05a530_func
		mov    %esi,%eax
		call   _023aac_func

	_067d16_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067d20_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		test   %dx,%dx
		jne    _067d6f_jump
		cmpb   $0x000000,0x000071(%eax)
		jne    _067d35_jump
		cmpb   $0x000001,0x000070(%ecx)
		je     _067d3c_jump

	_067d35_jump:
		mov    $0x000001,%eax
		jmp    _067d3e_jump

	_067d3c_jump:
		xor    %eax,%eax

	_067d3e_jump:
		test   %eax,%eax
		je     _067d6f_jump
		mov    $0x000001,%dh
		mov    %ecx,%eax
		mov    %dh,_0c1157_data
		call   _01f090_func
		cmpb   $0x000000,0x00007a(%ecx)
		je     _067d63_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _067d79_jump

	_067d63_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		jmp    _067d79_jump

	_067d6f_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_067d79_jump:
		mov    %ecx,%eax
		call   _065368_func
		pop    %ecx
		pop    %ebx
		ret    



_067d84_func:
		movw   $0x000001,0x000052(%eax)
		ret    



_067d8c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x0000ff,%dx
		je     _067db6_jump
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x000070(%ecx),%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _067e82_jump

	_067db6_jump:
		mov    %ecx,%eax
		call   _01f090_func
		cmpb   $0x000000,0x00007a(%ecx)
		jne    _067dfd_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _065368_func
		mov    0x00002c(%ecx),%ebx
		mov    0x000085(%ecx),%dh
		sub    $0x000002,%ebx
		and    $0x0000ef,%dh
		mov    %ebx,0x00002c(%ecx)
		mov    %dh,0x000085(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_067dfd_jump:
		mov    _0c1144_data,%eax
		testb  $0x000008,0x000085(%eax)
		je     _067e26_jump
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _067e22_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _067e48_jump

	_067e22_jump:
		jge    _067e4f_jump
		jmp    _067e3e_jump

	_067e26_jump:
		mov    0x000040(%eax),%dx
		cmp    $0x000001,%dx
		jle    _067e3c_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _067e48_jump

	_067e3c_jump:
		jge    _067e4f_jump

	_067e3e_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_067e48_jump:
		mov    %ecx,%eax
		call   _065368_func

	_067e4f_jump:
		mov    $0x000002,%ebx
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%ecx)
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		movw   $0x00fffc,0x000042(%ecx)
		call   _01dea8_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _071068_func

	_067e82_jump:
		pop    %ecx
		pop    %ebx
		ret    



_067e88_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000001,0x000071(%eax)
		jne    _067ea9_jump
		cmpb   $0x00000b,0x000070(%ecx)
		jne    _067ea9_jump
		mov    $0x00000e,%edx
		mov    %ecx,%eax
		call   _01de98_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067ea9_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _067eb5_jump
		cmpb   $0x000000,0x000070(%ecx)
		je     _067ec1_jump

	_067eb5_jump:
		cmpb   $0x000001,0x000071(%ecx)
		jne    _067f02_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _067f02_jump

	_067ec1_jump:
		mov    $0x00000b,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01dea8_func
		mov    0x000085(%ecx),%ah
		and    $0x0000ef,%ah
		mov    $0x000001,%ebx
		mov    %ah,0x000085(%ecx)
		test   $0x000008,%ah
		setne  %dl
		and    $0x0000ff,%edx
		add    $0x000002,%edx
		and    $0x0000ff,%edx
		mov    %ecx,%eax
		call   _065368_func

	_067f02_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067f08_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01f090_func
		mov    _0c1144_data,%ebx
		mov    0x000040(%ebx),%dx
		test   %dx,%dx
		jle    _067f2c_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _067f38_jump

	_067f2c_jump:
		jge    _067f3f_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_067f38_jump:
		mov    %ecx,%eax
		call   _065368_func

	_067f3f_jump:
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%ecx)
		sub    $0x000002,%edx
		mov    0x00007a(%ecx),%ah
		mov    %edx,0x00002c(%ecx)
		test   %ah,%ah
		je     _067fab_jump
		xor    %edx,%edx
		mov    0x000071(%ecx),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%ecx),%edx
		add    %ebx,%edx
		movw   $0x00fffc,0x000042(%ecx)
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x000070(%ecx),%bl
		testb  $0x000040,0x000007(%edx,%ebx,8)
		je     _067f81_jump
		mov    $0x00000a,%ebx
		jmp    _067f86_jump

	_067f81_jump:
		mov    $0x000002,%ebx

	_067f86_jump:
		mov    $0x000002,%edx
		and    $0x0000ff,%ebx
		mov    %ecx,%eax
		call   _01dea8_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _071068_func
		pop    %ecx
		pop    %ebx
		ret    

	_067fab_jump:
		xor    %edx,%edx
		mov    0x000071(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000070(%ecx),%dl
		movw   $0x00fff8,0x000042(%ecx)
		lea    0x000000(,%edx,8),%eax
		mov    (%ebx),%edx
		testb  $0x000040,0x000007(%edx,%eax,1)
		je     _067fda_jump
		mov    $0x000006,%ebx
		jmp    _067fdf_jump

	_067fda_jump:
		mov    $0x000003,%ebx

	_067fdf_jump:
		and    $0x0000ff,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		pop    %ecx
		pop    %ebx
		ret    



_067ff4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000085(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    _0b937d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %ah,%al
		je     _068082_jump
		cmpb   $0x000001,0x000071(%ecx)
		jne    _068024_jump
		cmpb   $0x000000,0x000070(%ecx)
		je     _068030_jump

	_068024_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _068082_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _068082_jump

	_068030_jump:
		cmpb   $0x000000,_0b9369_data
		jne    _068082_jump
		cmpb   $0x000012,_0b9368_data
		jne    _068082_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01dea8_func
		testb  $0x000008,0x000085(%ecx)
		je     _068071_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		jmp    _06807b_jump

	_068071_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx

	_06807b_jump:
		mov    %ecx,%eax
		call   _065368_func

	_068082_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068088_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000074(%eax),%al
		cmp    $0x000002,%al
		jb     _0680f4_jump
		jbe    _06809e_jump
		cmp    $0x00001e,%al
		jne    _068116_jump

	_06809e_jump:
		mov    %edx,%eax
		call   _05a530_func
		mov    %edx,%eax
		call   _023aac_func
		cmpb   $0x000000,0x000071(%edx)
		jne    _068116_jump
		cmpb   $0x000002,0x000070(%edx)
		jne    _068116_jump
		mov    0x000085(%edx),%al
		shl    $0x000004,%al
		mov    0x00007a(%edx),%bh
		shr    $0x000007,%al
		cmp    %bh,%al
		je     _068116_jump
		lea    0x000085(%edx),%eax
		test   $0x000001,%bh
		setne  %dl
		and    $0x0000ff,%edx
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		mov    %dh,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0680f4_jump:
		test   %al,%al
		jne    _068101_jump
		andb   $0x0000f7,0x000085(%edx)
		jmp    _068108_jump

	_068101_jump:
		orb    $0x000008,0x000085(%edx)

	_068108_jump:
		mov    %edx,%eax
		call   _05a530_func
		mov    %edx,%eax
		call   _023aac_func

	_068116_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06811c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _06812c_jump
		cmpb   $0x000002,0x000070(%ecx)
		je     _068175_jump

	_06812c_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01dea8_func
		mov    0x000085(%ecx),%dh
		test   $0x000008,%dh
		jne    _068159_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000003,%edx
		mov    %bh,0x000085(%ecx)
		jmp    _06816b_jump

	_068159_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		and    $0x0000f7,%bl
		mov    $0x000002,%edx
		mov    %bl,0x000085(%ecx)

	_06816b_jump:
		mov    $0x000001,%ebx
		call   _065368_func

	_068175_jump:
		pop    %ecx
		pop    %ebx
		ret    



_068178_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _0681bd_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _0681bd_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		testb  $0x000008,0x000085(%ecx)
		je     _0681ac_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _0681b6_jump

	_0681ac_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_0681b6_jump:
		mov    %ecx,%eax
		call   _065368_func

	_0681bd_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0681c4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000004,0x000070(%eax)
		jne    _0681db_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		call   _065368_func

	_0681db_jump:
		pop    %edx
		pop    %ebx
		ret    



_0681e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x00006c(%edx),%al
		add    %ebx,%eax
		sub    $0x00000c,%eax
		cwtl   
		call   _07deb8_func
		mov    0x00005a(%edx),%ebx
		cwtl   
		sar    $0x000010,%ebx
		sub    $0x00002b,%eax
		add    %ebx,%eax
		mov    0x000034(%edx),%cx
		mov    %eax,0x00002c(%edx)
		cmp    _0b9342_data,%cx
		jne    _06821e_jump
		movw   $0x00000d,0x000050(%edx)
		jmp    _068224_jump

	_06821e_jump:
		movw   $0x000000,0x000050(%edx)

	_068224_jump:
		mov    0x00005c(%edx),%ax
		mov    0x000050(%edx),%si
		cmp    %si,%ax
		jge    _06823d_jump
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,0x00005c(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06823d_jump:
		jle    _068244_jump
		dec    %eax
		mov    %ax,0x00005c(%edx)

	_068244_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06824c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		call   _02bfdc_func
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		cmpb   $0x000004,0x00006e(%esi)
		jne    _0682a0_jump
		cmpb   $0x00000a,0x00006f(%esi)
		jne    _0682a0_jump
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0c334a_data(%eax)
		jne    _0682a0_jump
		mov    0x000032(%esi),%edx
		mov    $0x000028,%eax
		sar    $0x000010,%edx
		call   _071068_func

	_0682a0_jump:
		mov    0x000070(%esi),%bl
		cmp    $0x000001,%bl
		jne    _0682c7_jump
		mov    0x000083(%esi),%dh
		add    %bl,%dh
		mov    %dh,0x000083(%esi)
		jne    _068400_jump
		mov    %bl,0x000083(%esi)
		jmp    _068400_jump

	_0682c7_jump:
		cmpb   $0x000000,0x000083(%esi)
		je     _068321_jump
		mov    $0x000001,%ecx
		mov    $0x000001,%ebx
		mov    $_0c115c_data,%edx
		xor    %edi,%edi
		mov    %cx,_0c3016_data
		mov    %di,_0c3014_data
		mov    %ebx,_0b931c_data
		call   _05f014_func
		call   _05f12c_func
		mov    %esi,%eax
		call   _074e8c_func
		mov    %ebx,%eax
		call   _05de04_func
		mov    %ebx,%eax
		call   _05df64_func
		movb   $0x000000,0x000083(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068321_jump:
		testb  $0x000002,_0c3348_data
		jne    _068400_jump
		testb  $0x000001,0x000085(%esi)
		jne    _068400_jump
		mov    %esi,%eax
		call   _01e500_func
		test   %ax,%ax
		je     _068400_jump
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _068400_jump
		cmpw   $0x000000,_0c3112_data
		jne    _068400_jump
		cmpb   $0x000000,_0b9369_data
		jne    _068400_jump
		cmpb   $0x000000,_0b9368_data
		jne    _068400_jump
		mov    _0c313c_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0c312a_data,%edx
		mov    $0x00000f,%ecx
		sar    $0x000010,%edx
		mov    0x000028(%esi),%ax
		push   %edx
		mov    _0c3128_data,%edx
		mov    0x00002c(%esi),%bx
		sar    $0x000010,%edx
		add    $0x00002a,%eax
		push   %edx
		mov    _0c3126_data,%edx
		add    $0x000030,%ebx
		sar    $0x000010,%edx
		cwtl   
		push   %edx
		movswl %bx,%edx
		mov    $0x000005,%ebx
		call   _027cc0_func
		test   %ax,%ax
		je     _068400_jump
		mov    %esi,%eax
		mov    0x000085(%esi),%dl
		xor    %ebx,%ebx
		or     $0x000001,%dl
		mov    %bx,_0b9338_data
		mov    %dl,0x000085(%esi)
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %edx,_0b931c_data
		call   _065368_func

	_068400_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068408_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000077(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0x000000,%eax
		je     _068425_jump
		mov    $0x000001,%eax
		jg     _068425_jump
		neg    %eax

	_068425_jump:
		mov    %ax,0x000004(%esp)
		mov    0x000034(%esi),%dx
		cmp    _0b9342_data,%dx
		je     _06845f_jump
		cmpb   $0x000000,_0c3354_data
		jne    _0684f2_jump
		mov    0x00007a(%esi),%bl
		test   %bl,%bl
		je     _0684f2_jump
		mov    0x000004(%esp),%al
		mov    %bl,%bh
		sub    %al,%bh
		mov    %bh,0x00007a(%esi)
		jmp    _0684f2_jump

	_06845f_jump:
		cmpb   $0x000000,_0c3352_data
		jne    _0684f2_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000078(%esi),%al
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0b9364_data,%dl
		mov    %ebx,0x00000c(%esp)
		add    _0b9320_data,%edx
		mov    0x00000e(%esp),%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		sub    %eax,%edx
		mov    $0x000003,%cl
		mov    %edx,%eax
		mov    %edx,(%esp)
		test   %ax,%ax
		js     _0684ca_jump
		sar    %cl,%ax
		jmp    _0684d3_jump

	_0684ca_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0684d3_jump:
		sub    %al,0x00007a(%esi)
		mov    0x000077(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _0684e2_jump
		neg    %eax

	_0684e2_jump:
		cmp    $0x000010,%eax
		jl     _0684f2_jump
		mov    0x000004(%esp),%al
		mov    $0x00000f,%ah
		mul    %ah
		mov    %al,0x00007a(%esi)

	_0684f2_jump:
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0684fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpw   $0x000001,_0c309e_data
		jne    _068580_jump
		mov    0x000034(%eax),%di
		mov    _0c1d74_data,%ecx
		movswl %di,%eax
		mov    (%ecx,%eax,2),%bx
		cmp    %bx,%di
		je     _068585_jump

	_068527_jump:
		movswl %bx,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ecx
		add    %ecx,%eax
		cmpw   $0x000108,0x000064(%eax)
		jne    _06856d_jump
		xor    %ecx,%ecx
		mov    0x000028(%edx),%esi
		mov    0x00006c(%edx),%cl
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x00006c(%eax),%cl
		sub    %ecx,%esi
		mov    %esi,0x000028(%eax)
		mov    %si,0x00003c(%eax)
		movzbl 0x00006d(%edx),%esi
		add    0x00002c(%edx),%esi
		xor    %ecx,%ecx
		mov    0x00006d(%eax),%cl
		sub    %ecx,%esi
		mov    %esi,0x00002c(%eax)
		mov    %si,0x00003e(%eax)

	_06856d_jump:
		mov    _0c1d74_data,%eax
		movswl %bx,%ecx
		mov    (%eax,%ecx,2),%bx
		cmp    %bx,%di
		jne    _068527_jump
		jmp    _068585_jump

	_068580_jump:
		call   _02bfdc_func

	_068585_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06858c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		cmpb   $0x000001,0x000078(%eax)
		jne    _0685b9_jump
		cmpb   $0x000000,_0c334f_data
		jne    _0685c0_jump
		xor    %edx,%edx
		mov    0x00007a(%ebx),%dl
		inc    %edx
		mov    $0x000006,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,0x00007a(%ebx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0685b9_jump:
		mov    %ebx,%eax
		call   _02bfdc_func

	_0685c0_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0685c4_func:
		push   %ebx
		push   %edx
		mov    0x00007a(%eax),%dl
		and    $0x000001,%dl
		mov    $0x000001,%dh
		sub    %dl,%dh
		mov    %dh,%dl
		and    $0x000001,%dl
		mov    0x000085(%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,0x000085(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x000085(%eax)
		pop    %edx
		pop    %ebx
		ret    



_068600_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		call   _01deb4_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    %edi,%eax
		call   _01df9c_func
		movswl %dx,%edx
		mov    %eax,%ecx
		movswl %ax,%ebx
		mov    %edi,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _0686f6_jump
		mov    0x000070(%edi),%ah
		cmp    $0x00000d,%ah
		je     _068650_jump
		cmp    $0x00001c,%ah
		je     _068650_jump
		cmp    $0x00000e,%ah
		je     _068650_jump
		cmp    $0x00001d,%ah
		je     _068650_jump
		mov    $0x000001,%edx
		jmp    _068652_jump

	_068650_jump:
		xor    %edx,%edx

	_068652_jump:
		test   %edx,%edx
		je     _0686f6_jump
		mov    0x000042(%edi),%dx
		test   %dx,%dx
		jle    _068699_jump
		mov    %edx,%eax
		dec    %eax
		mov    0x000064(%edi),%dx
		mov    %ax,0x000042(%edi)
		cmp    $0x0000ae,%dx
		je     _06867c_jump
		cmp    $0x0000e1,%dx
		jne    _068684_jump

	_06867c_jump:
		movw   $0x00ffdc,0x000040(%edi)
		jmp    _06868a_jump

	_068684_jump:
		movw   $0x000024,0x000040(%edi)

	_06868a_jump:
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %edi,%eax
		call   _02bb40_func
		jmp    _0686f6_jump

	_068699_jump:
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %edi,%eax
		call   _02bb40_func
		test   %ax,%ax
		je     _0686f6_jump
		mov    0x000064(%edi),%bx
		movw   $0x00ffff,0x000042(%edi)
		cmp    $0x0000ae,%bx
		je     _0686c3_jump
		cmp    $0x0000e1,%bx
		jne    _0686cb_jump

	_0686c3_jump:
		movw   $0x00fff0,0x000040(%edi)
		jmp    _0686d1_jump

	_0686cb_jump:
		movw   $0x000010,0x000040(%edi)

	_0686d1_jump:
		mov    0x000070(%edi),%bh
		cmp    $0x000006,%bh
		jne    _0686e0_jump
		mov    $0x000007,%ebx
		jmp    _0686ea_jump

	_0686e0_jump:
		cmp    $0x000015,%bh
		jne    _0686f6_jump
		mov    $0x000016,%ebx

	_0686ea_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01dea8_func

	_0686f6_jump:
		mov    0x000070(%edi),%ch
		cmp    $0x00000d,%ch
		je     _068707_jump
		cmp    $0x00001c,%ch
		jne    _068840_jump

	_068707_jump:
		cmpb   $0x000006,0x00006f(%edi)
		jne    _068840_jump
		cmpb   $0x000000,_0c334c_data
		je     _068840_jump
		mov    _0b9410_data,%esi
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0688c6_jump

	_068736_jump:
		cmpw   $0x0000ba,0x000064(%esi)
		jne    _068827_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _068827_jump
		lea    0x000004(%esp),%edx
		lea    0x00000c(%esp),%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01e1b8_func
		testb  $0x000008,0x000085(%edi)
		je     _0687aa_jump
		mov    -0x000002(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006c(%esi),%dl
		sub    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %ebx,%edx
		movw   $0x00000d,0x000040(%esi)
		add    $0x00000d,%edx
		mov    0x000085(%esi),%bh
		mov    %edx,0x000028(%esi)
		or     $0x000008,%bh
		mov    %dx,0x00003c(%esi)
		mov    %bh,0x000085(%esi)
		jmp    _0687d3_jump

	_0687aa_jump:
		mov    -0x000002(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006c(%esi),%dl
		sub    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %ebx,%edx
		movw   $0x00fff3,0x000040(%esi)
		sub    $0x00000d,%edx
		mov    %edx,0x000028(%esi)
		mov    %dx,0x00003c(%esi)

	_0687d3_jump:
		mov    0x00000a(%esp),%ebx
		mov    0x000085(%esi),%cl
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006d(%esi),%dl
		or     $0x000004,%cl
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		movw   $0x000002,0x000042(%esi)
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%esi)
		add    %ebx,%edx
		mov    %cl,0x000085(%esi)
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		mov    %esi,%eax
		mov    %dx,0x00003e(%esi)
		call   _020064_func
		andb   $0x0000ef,0x000085(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068827_jump:
		inc    %eax
		add    $0x000088,%esi
		cmp    %dx,%ax
		jl     _068736_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068840_jump:
		mov    0x000070(%edi),%dh
		cmp    $0x00000e,%dh
		je     _06884d_jump
		cmp    $0x00001d,%dh
		jne    _068871_jump

	_06884d_jump:
		movw   $0x00fff8,0x000042(%edi)
		mov    0x000085(%edi),%dh
		movw   $0x000000,0x000040(%edi)
		and    $0x0000ef,%dh
		mov    %dh,0x000085(%edi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068871_jump:
		mov    0x000040(%edi),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _0688c6_jump
		mov    0x000070(%edi),%bh
		cmp    $0x000006,%bh
		jne    _06888b_jump
		mov    $0x000007,%ebx
		jmp    _0688ba_jump

	_06888b_jump:
		cmp    $0x000015,%bh
		jne    _068897_jump
		mov    $0x000016,%ebx
		jmp    _0688ba_jump

	_068897_jump:
		cmp    $0x00000b,%bh
		jne    _0688a9_jump
		cmpb   $0x000036,0x00006f(%edi)
		jne    _0688a9_jump
		mov    $0x000002,%ebx
		jmp    _0688ba_jump

	_0688a9_jump:
		cmpb   $0x00001a,0x000070(%edi)
		jne    _0688c6_jump
		cmpb   $0x000036,0x00006f(%edi)
		jne    _0688c6_jump
		mov    $0x000013,%ebx

	_0688ba_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01dea8_func

	_0688c6_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0688d0_func:
		push   %ebx
		push   %ecx
		mov    0x000070(%eax),%dl
		test   %dl,%dl
		je     _0688de_jump
		cmp    $0x000001,%dl
		jne    _0688fc_jump

	_0688de_jump:
		mov    0x00007a(%eax),%bl
		dec    %bl
		mov    %bl,0x00007a(%eax)
		jne    _0688f2_jump
		mov    $0x00000d,%ebx
		jmp    _068a00_jump

	_0688f2_jump:
		mov    $0x00000a,%ebx
		jmp    _068a00_jump

	_0688fc_jump:
		cmp    $0x000007,%dl
		je     _068910_jump
		cmp    $0x000002,%dl
		je     _068910_jump
		cmp    $0x000003,%dl
		je     _068910_jump
		cmp    $0x000004,%dl
		jne    _068938_jump

	_068910_jump:
		mov    0x00007a(%eax),%dl
		dec    %dl
		mov    %dl,0x00007a(%eax)
		jne    _068929_jump
		mov    $0x00000d,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		pop    %ecx
		pop    %ebx
		ret    

	_068929_jump:
		mov    $0x00000c,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		pop    %ecx
		pop    %ebx
		ret    

	_068938_jump:
		cmp    $0x000005,%dl
		je     _068942_jump
		cmp    $0x000006,%dl
		jne    _06896a_jump

	_068942_jump:
		mov    0x00007a(%eax),%cl
		dec    %cl
		mov    %cl,0x00007a(%eax)
		jne    _06895b_jump
		mov    $0x00000d,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		pop    %ecx
		pop    %ebx
		ret    

	_06895b_jump:
		mov    $0x00000b,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		pop    %ecx
		pop    %ebx
		ret    

	_06896a_jump:
		cmp    $0x00000f,%dl
		je     _068974_jump
		cmp    $0x000010,%dl
		jne    _06899c_jump

	_068974_jump:
		mov    0x00007a(%eax),%bl
		dec    %bl
		mov    %bl,0x00007a(%eax)
		jne    _06898d_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		pop    %ecx
		pop    %ebx
		ret    

	_06898d_jump:
		mov    $0x000019,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		pop    %ecx
		pop    %ebx
		ret    

	_06899c_jump:
		cmp    $0x000016,%dl
		je     _0689b0_jump
		cmp    $0x000011,%dl
		je     _0689b0_jump
		cmp    $0x000012,%dl
		je     _0689b0_jump
		cmp    $0x000013,%dl
		jne    _0689d8_jump

	_0689b0_jump:
		mov    0x00007a(%eax),%dl
		dec    %dl
		mov    %dl,0x00007a(%eax)
		jne    _0689c9_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		pop    %ecx
		pop    %ebx
		ret    

	_0689c9_jump:
		mov    $0x00001b,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		pop    %ecx
		pop    %ebx
		ret    

	_0689d8_jump:
		cmp    $0x000014,%dl
		je     _0689e2_jump
		cmp    $0x000015,%dl
		jne    _068a07_jump

	_0689e2_jump:
		mov    0x00007a(%eax),%cl
		dec    %cl
		mov    %cl,0x00007a(%eax)
		jne    _0689fb_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		pop    %ecx
		pop    %ebx
		ret    

	_0689fb_jump:
		mov    $0x00001a,%ebx

	_068a00_jump:
		xor    %edx,%edx
		call   _01dea8_func

	_068a07_jump:
		pop    %ecx
		pop    %ebx
		ret    



_068a0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _068ab8_jump
		mov    0x000070(%ecx),%dl
		test   %dl,%dl
		je     _068a37_jump
		cmp    $0x000001,%dl
		je     _068a37_jump
		cmp    $0x00000f,%dl
		je     _068a37_jump
		cmp    $0x000010,%dl
		jne    _068ab8_jump

	_068a37_jump:
		mov    0x000070(%ecx),%al
		test   %al,%al
		je     _068a42_jump
		cmp    $0x000001,%al
		jne    _068a49_jump

	_068a42_jump:
		mov    $0x000005,%ebx
		jmp    _068a56_jump

	_068a49_jump:
		cmp    $0x00000f,%al
		je     _068a51_jump
		cmp    $0x000010,%al
		jne    _068a62_jump

	_068a51_jump:
		mov    $0x000014,%ebx

	_068a56_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01dea8_func

	_068a62_jump:
		mov    0x000064(%ecx),%dx
		cmp    $0x0000ae,%dx
		je     _068a74_jump
		cmp    $0x0000b8,%dx
		jne    _068a95_jump

	_068a74_jump:
		mov    0x000064(%ecx),%di
		movw   $0x000003,0x000042(%ecx)
		cmp    $0x0000ae,%di
		jne    _068a8d_jump
		movw   $0x00ffe8,0x000040(%ecx)
		jmp    _068ab8_jump

	_068a8d_jump:
		movw   $0x000018,0x000040(%ecx)
		jmp    _068ab8_jump

	_068a95_jump:
		mov    0x000064(%ecx),%si
		movw   $0x000002,0x000042(%ecx)
		cmp    $0x0000e1,%si
		jne    _068ab2_jump
		movw   $0x00ffdc,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068ab2_jump:
		movw   $0x000024,0x000040(%ecx)

	_068ab8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068ac0_func:
		push   %ebx
		push   %edx
		mov    $_0a2bdc_data,%eax
		call   _072ffc_func
		movswl %ax,%edx
		mov    %eax,%ebx
		cmp    $0xffffffff,%edx
		je     _068ae8_jump
		mov    %edx,%eax
		call   _07382c_func
		test   %eax,%eax
		jne    _068ae8_jump
		mov    %edx,%eax
		call   _0730b8_func

	_068ae8_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		call   _07382c_func
		test   %eax,%eax
		je     _068afd_jump
		mov    %edx,%eax
		call   _0733d4_func

	_068afd_jump:
		pop    %edx
		pop    %ebx
		ret    



_068b00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		testb  $0x000002,_0c3348_data
		je     _068b1b_jump
		mov    $0x000100,%edx
		jmp    _068b20_jump

	_068b1b_jump:
		mov    $0x000200,%edx

	_068b20_jump:
		mov    _0c3110_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _068b31_jump
		neg    %eax

	_068b31_jump:
		cmp    %edx,%eax
		setg   %cl
		mov    0x000064(%esi),%ax
		cmp    $0x000022,%ax
		jb     _068b90_jump
		cmp    $0x000022,%ax
		jbe    _068c3c_jump
		cmp    $0x0000ed,%ax
		jb     _068b71_jump
		jbe    _068c3c_jump
		cmp    $0x0000f3,%ax
		jb     _0694d0_jump
		jbe    _068c3c_jump
		cmp    $0x000115,%ax
		je     _068bca_jump
		jmp    _0694d0_jump

	_068b71_jump:
		cmp    $0x000044,%ax
		jb     _0694d0_jump
		jbe    _06905b_jump
		cmp    $0x000098,%ax
		je     _068c3c_jump
		jmp    _0694d0_jump

	_068b90_jump:
		cmp    $0x00001b,%ax
		jb     _068bb5_jump
		jbe    _069251_jump
		cmp    $0x00001c,%ax
		jbe    _069451_jump
		cmp    $0x00001d,%ax
		je     _068c3c_jump
		jmp    _0694d0_jump

	_068bb5_jump:
		cmp    $0x000019,%ax
		jb     _0694d0_jump
		jbe    _068dc3_jump
		jmp    _068e58_jump

	_068bca_jump:
		mov    0x000070(%esi),%dl
		test   %dl,%dl
		je     _068bdb_jump
		cmp    $0x000001,%dl
		je     _068bdb_jump
		cmp    $0x000005,%dl
		jne    _068bec_jump

	_068bdb_jump:
		andb   $0x0000df,0x000085(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068bec_jump:
		mov    0x000085(%esi),%bh
		or     $0x000020,%bh
		mov    0x000070(%esi),%cl
		mov    %bh,0x000085(%esi)
		cmp    $0x000006,%cl
		je     _068c21_jump
		cmp    $0x000003,%cl
		je     _068c11_jump
		cmp    $0x000004,%cl
		jne    _0694d0_jump

	_068c11_jump:
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		je     _0694d0_jump

	_068c21_jump:
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _01de98_func
		call   _068ac0_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068c3c_jump:
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _068db1_jump
		mov    0x00005c(%esi),%bx
		test   %bx,%bx
		je     _068c5c_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x00005c(%esi)

	_068c5c_jump:
		cmpw   $0x000000,0x00005c(%esi)
		jne    _0694d0_jump
		movb   $0x000001,_0c33ce_data
		cmpb   $0x000000,_0b9369_data
		jne    _068c89_jump
		mov    _0b9368_data,%al
		cmp    $0x00000b,%al
		je     _068c84_jump
		cmp    $0x00000c,%al
		jne    _068c89_jump

	_068c84_jump:
		call   _06981c_func

	_068c89_jump:
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		call   _06b944_func
		movl   $0x002710,0x000054(%esi)
		mov    $0x00000c,%eax
		mov    _0b933a_data,%dx
		mov    0x000064(%esi),%bx
		sub    $0x000003,%edx
		mov    %ax,_0c3140_data
		mov    %dx,_0b933a_data
		cmp    $0x0000f3,%bx
		jne    _068cdd_jump
		mov    $0x000011,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		jmp    _068d47_jump

	_068cdd_jump:
		cmp    $0x000098,%bx
		jne    _068d1c_jump
		cmpb   $0x000000,0x000071(%esi)
		jne    _068cf0_jump
		cmpb   $0x000002,0x000070(%esi)
		je     _068d0c_jump

	_068cf0_jump:
		cmpb   $0x000000,0x000071(%esi)
		jne    _068cfc_jump
		cmpb   $0x000003,0x000070(%esi)
		je     _068d0c_jump

	_068cfc_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		jmp    _068d47_jump

	_068d0c_jump:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		jmp    _068d47_jump

	_068d1c_jump:
		cmp    $0x0000ed,%bx
		jne    _068d47_jump
		cmpb   $0x000000,0x000071(%esi)
		jne    _068d47_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _068d47_jump
		mov    $_0b92f8_data,%eax
		mov    $0x000001,%ebx
		call   _07e020_func
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _065368_func

	_068d47_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		mov    0x00000a(%esp),%eax
		xor    %edx,%edx
		mov    _0b9320_data,%ecx
		mov    _0b9364_data,%dl
		sar    $0x000010,%eax
		add    %ecx,%edx
		sub    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _068d9e_jump
		movw   $0x00fe00,_0c3112_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068d9e_jump:
		movw   $0x000200,_0c3112_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068db1_jump:
		mov    0x00004a(%esi),%ax
		mov    %ax,0x00005c(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068dc3_jump:
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _068db1_jump
		mov    0x00005c(%esi),%cx
		test   %cx,%cx
		je     _068ddf_jump
		mov    %ecx,%edi
		dec    %edi
		mov    %di,0x00005c(%esi)

	_068ddf_jump:
		cmpw   $0x000000,0x00005c(%esi)
		jne    _0694d0_jump
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		xor    %edx,%edx
		xor    %eax,%eax
		call   _02a364_func
		xor    %edx,%edx
		mov    _0b9320_data,%eax
		mov    _0b9364_data,%dl
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _068e47_jump
		orb    $0x000008,_0b937d_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068e47_jump:
		andb   $0x0000f7,_0b937d_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068e58_jump:
		mov    0x000052(%esi),%di
		test   %di,%di
		je     _068e9d_jump
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		je     _068e77_jump
		cmp    $0x000014,%di
		je     _0694d0_jump

	_068e77_jump:
		mov    0x000052(%esi),%ax
		dec    %ax
		mov    %ax,0x000052(%esi)
		jne    _0694d0_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01de98_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068e9d_jump:
		mov    0x000050(%esi),%ax
		test   %ax,%ax
		je     _068f45_jump
		mov    %eax,%edi
		dec    %edi
		mov    _0c3152_data,%ax
		mov    %di,0x000050(%esi)
		cmp    $0x000001,%ax
		jne    _068ed6_jump
		cmpb   $0x000000,_0c334c_data
		je     _068ecf_jump
		movb   $0x000000,0x000082(%esi)
		jmp    _068ed6_jump

	_068ecf_jump:
		movb   $0x000004,0x000082(%esi)

	_068ed6_jump:
		mov    0x000050(%esi),%ax
		cmp    0x00005c(%esi),%ax
		jg     _0694d0_jump
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _068f34_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		mov    %di,_0b9342_data
		call   _01dea8_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _06b680_func
		xor    %eax,%eax
		mov    %ax,_0b934a_data
		movl   $0x002710,0x000054(%esi)
		mov    %ax,_0c3140_data
		mov    %ax,_0b933a_data

	_068f34_jump:
		andb   $0x0000df,0x000085(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068f45_jump:
		cmpw   $0x000001,_0c3152_data
		je     _068fd8_jump
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _068fa5_jump
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ax,_0b9342_data
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _06b680_func
		mov    %dx,_0c3140_data
		mov    %dx,_0b934a_data
		mov    %dx,_0b933a_data
		movl   $0x002710,0x000054(%esi)

	_068fa5_jump:
		cmpb   $0x000006,0x000070(%esi)
		jne    _068fbd_jump
		mov    %esi,%eax
		call   _01d740_func
		test   %al,%al
		je     _068fbd_jump
		mov    %esi,%eax
		call   _062e90_func

	_068fbd_jump:
		cmpb   $0x000014,0x000070(%esi)
		jne    _0694d0_jump
		orb    $0x000020,0x000085(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068fd8_jump:
		movl   $0x000000,0x000024(%esi)
		movl   $0x000004,0x000030(%esi)
		mov    0x000085(%esi),%ch
		movb   $0x000004,0x000082(%esi)
		or     $0x000020,%ch
		mov    %ch,0x000085(%esi)
		mov    0x000034(%esi),%bx
		cmp    _0b9342_data,%bx
		jne    _0694d0_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		mov    %di,_0b9342_data
		call   _01dea8_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _06b680_func
		xor    %eax,%eax
		mov    %ax,_0c3140_data
		mov    %ax,_0b934a_data
		mov    %ax,_0b933a_data
		movl   $0x002710,0x000054(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06905b_jump:
		mov    _0b9342_data,%ax
		mov    0x000034(%esi),%bx
		xor    %cl,%cl
		cmp    %bx,%ax
		jne    _0690ca_jump
		cmpb   $0x000002,0x000071(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _0690b7_jump
		cmpw   $0x000000,0x00004a(%esi)
		je     _0690b7_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01dea8_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000075(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000076(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x00005c(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _0690ca_jump

	_0690b7_jump:
		mov    0x000048(%esi),%eax
		mov    0x00005a(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _0690ca_jump
		mov    $0x000001,%cl

	_0690ca_jump:
		cmpb   $0x000002,0x000071(%esi)
		jne    _0694d0_jump
		mov    0x00005a(%esi),%eax
		mov    0x000040(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _069191_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		movw   $0x000000,0x00005c(%esi)
		mov    0x00003c(%esi),%eax
		movw   $0x000000,0x000042(%esi)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000034(%esi),%di
		cmp    _0b9342_data,%di
		jne    _0694d0_jump
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%eax
		mov    _0b9324_data,%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0b9368_data,%al
		add    %edx,%eax
		mov    %ebx,_0b9324_data
		cmp    $0x00000b,%eax
		jb     _06915b_jump
		cmp    $0x00000c,%eax
		ja     _06915b_jump
		call   _06981c_func

	_06915b_jump:
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		movb   $0x000001,_0c33ce_data
		call   _06b944_func
		mov    $0x00000c,%eax
		movl   $0x002710,0x000054(%esi)
		mov    %ax,_0c3140_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069191_jump:
		test   %cl,%cl
		jne    _0694d0_jump
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0694d0_jump
		xor    %edx,%edx
		mov    _0c33ce_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _0694d0_jump
		call   *_0af028_data
		test   %ax,%ax
		je     _0694d0_jump
		call   _06b944_func
		cmpb   $0x000002,_0b9369_data
		jne    _0691ea_jump
		movl   $0x002710,0x000054(%esi)

	_0691ea_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _069209_jump
		cmp    %ecx,%eax
		jg     _069209_jump
		mov    $0x000001,%eax
		jmp    _06920b_jump

	_069209_jump:
		xor    %eax,%eax

	_06920b_jump:
		test   %eax,%eax
		je     _069221_jump
		subw   $0x000002,_0b933a_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069221_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _0694d0_jump
		mov    0x000042(%esi),%ax
		mov    _0b933a_data,%bx
		sub    $0x000002,%eax
		add    %eax,%ebx
		mov    %bx,_0b933a_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069251_jump:
		mov    _0b9342_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _0692c0_jump
		cmpb   $0x000002,0x000071(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _0692ad_jump
		cmpw   $0x000000,0x00004a(%esi)
		je     _0692ad_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01dea8_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000075(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000076(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x00005c(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _0692c0_jump

	_0692ad_jump:
		mov    0x000048(%esi),%eax
		mov    0x00005a(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _0692c0_jump
		mov    $0x000001,%cl

	_0692c0_jump:
		cmpb   $0x000002,0x000071(%esi)
		jne    _0694d0_jump
		mov    0x00005a(%esi),%eax
		mov    0x000040(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _069383_jump
		mov    $0x000018,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		movw   $0x000000,0x00005c(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0b9342_data,%dx
		jne    _069370_jump
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%edi
		sar    $0x000010,%eax
		mov    _0b9324_data,%ebp
		sub    %edi,%eax
		add    %eax,%ebp
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0b9369_data,%al
		mov    _0b9368_data,%dl
		shl    $0x000008,%eax
		add    %edx,%eax
		mov    %ebp,_0b9324_data
		cmp    $0x00000b,%eax
		jb     _069343_jump
		cmp    $0x00000c,%eax
		ja     _069343_jump
		call   _06981c_func

	_069343_jump:
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		movb   $0x000001,_0c33ce_data
		call   _06b944_func
		mov    $0x00000c,%ebx
		movl   $0x002710,0x000054(%esi)
		mov    %bx,_0c3140_data

	_069370_jump:
		mov    0x00003c(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069383_jump:
		test   %cl,%cl
		jne    _0694d0_jump
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0694d0_jump
		xor    %edx,%edx
		mov    _0c33ce_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _0694d0_jump
		call   *_0af028_data
		test   %ax,%ax
		je     _0694d0_jump
		call   _06b944_func
		cmpb   $0x000002,_0b9369_data
		jne    _0693dc_jump
		movl   $0x002710,0x000054(%esi)

	_0693dc_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0693fb_jump
		cmp    %ecx,%eax
		jg     _0693fb_jump
		mov    $0x000001,%eax
		jmp    _0693fd_jump

	_0693fb_jump:
		xor    %eax,%eax

	_0693fd_jump:
		test   %eax,%eax
		je     _069413_jump
		subw   $0x000002,_0b933a_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069413_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _0694d0_jump
		mov    0x000042(%esi),%ax
		add    %ax,_0b933a_data
		mov    _0b9338_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff9,%eax
		jge    _0694d0_jump
		movw   $0x00fff9,_0b933a_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069451_jump:
		cmpb   $0x000014,0x000070(%esi)
		jne    _06947d_jump
		mov    0x00005c(%esi),%bx
		test   %bx,%bx
		jne    _069476_jump
		mov    0x00004a(%esi),%ax
		mov    $0x000007,%edx
		mov    %ax,0x00005c(%esi)
		mov    %esi,%eax
		call   _01de98_func
		jmp    _06947d_jump

	_069476_jump:
		mov    %ebx,%edi
		dec    %edi
		mov    %di,0x00005c(%esi)

	_06947d_jump:
		cmpb   $0x000014,0x000070(%esi)
		je     _0694d0_jump
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0694c9_jump
		movw   $0x00ffff,_0b9342_data
		mov    $0x000002,%ebx
		mov    $_0b92f8_data,%eax
		mov    %ebx,%edx
		call   _01dea8_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %ecx,%ecx
		call   _06b680_func
		mov    %cx,_0c3140_data
		mov    %cx,_0b934a_data
		mov    %cx,_0b933a_data

	_0694c9_jump:
		movl   $0x0003e8,0x000054(%esi)

	_0694d0_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0694dc_func:
		push   %ebx
		xor    %ebx,%ebx
		mov    0x00007d(%eax),%bl
		cmp    %bx,%dx
		jne    _069509_jump
		mov    _0c1144_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jle    _0694fd_jump
		mov    $0x000019,%edx
		jmp    _069504_jump

	_0694fd_jump:
		jge    _069509_jump
		mov    $0x00001a,%edx

	_069504_jump:
		call   _01de98_func

	_069509_jump:
		pop    %ebx
		ret    



_0695a8_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %al,%cl
		mov    %edx,%esi
		mov    $0x00001c,%ebx
		mov    $_0dddb0_data,%eax
		xor    %edx,%edx
		call   _085360_func
		mov    $0x00000c,%ebx
		mov    $_0dde00_data,%eax
		xor    %edx,%edx
		call   _085360_func
		mov    $0x000034,%ebx
		mov    $_0dddcc_data,%eax
		xor    %edx,%edx
		call   _085360_func
		xor    %eax,%eax
		mov    (%esi),%ax
		mov    %eax,_0ddde8_data
		xor    %eax,%eax
		mov    0x000002(%esi),%ax
		mov    %eax,_0ddddc_data
		xor    %eax,%eax
		mov    0x000004(%esi),%ax
		mov    %eax,_0ddde4_data
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		mov    %eax,_0ddde0_data
		xor    %eax,%eax
		mov    0x000008(%esi),%ax
		mov    %eax,_0dddd0_data
		xor    %eax,%eax
		mov    0x00000a(%esi),%ax
		mov    $0x000300,%edx
		mov    %eax,_0dddcc_data
		mov    0x00000c(%esi),%ax
		mov    %cl,_0dddb4_data
		mov    %ax,_0dddec_data
		mov    0x00000e(%esi),%ax
		xor    %ebx,%ebx
		mov    %ax,_0dddf8_data
		mov    0x000010(%esi),%ax
		mov    $_0dde00_data,%ecx
		mov    %ax,_0dddf0_data
		mov    0x000012(%esi),%ax
		mov    %dx,_0dddb0_data
		mov    %ax,_0dddee_data
		mov    0x000014(%esi),%ax
		mov    %bx,_0dddb8_data
		mov    %ax,_0dddfc_data
		xor    %ah,%ah
		mov    %ds,%edx
		mov    %ah,_0dddb5_data
		mov    $_0dddcc_data,%eax
		mov    $_0dddb0_data,%ebx
		mov    %dx,_0dde00_data
		mov    $_0dddcc_data,%edx
		mov    $0x000031,%eax
		mov    %edx,_0dddc4_data
		mov    %ebx,%edx
		call   _08b9fd_func
		mov    _0ddde8_data,%ax
		mov    %ax,(%esi)
		mov    _0ddddc_data,%ax
		mov    %ax,0x000002(%esi)
		mov    _0ddde4_data,%ax
		mov    %ax,0x000004(%esi)
		mov    _0ddde0_data,%ax
		mov    %ax,0x000006(%esi)
		mov    _0dddd0_data,%ax
		mov    %ax,0x000008(%esi)
		mov    _0dddcc_data,%ax
		mov    %ax,0x00000a(%esi)
		mov    _0dddec_data,%ax
		mov    %ax,0x00000c(%esi)
		mov    _0dddf8_data,%ax
		mov    %ax,0x00000e(%esi)
		mov    _0dddf0_data,%ax
		mov    %ax,0x000010(%esi)
		mov    _0dddee_data,%ax
		mov    %ax,0x000012(%esi)
		mov    _0dddfc_data,%ax
		mov    %ax,0x000014(%esi)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_069720_switch:
		.long   _069771_case
		.long   _06979e_case
		.long   _069778_case
		.long   _06979e_case
		.long   _06977f_case
		.long   _06979e_case
		.long   _06979e_case
		.long   _069786_case
		.long   _06979e_case
		.long   _06978d_case
		.long   _06979e_case
		.long   _069794_case




_069750_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		mov    _0c1144_data,%eax
		mov    0x000070(%eax),%dl
		dec    %dl
		cmp    $0x00000b,%dl
		ja     _06979e_case
		and    $0x0000ff,%edx
		jmp    *%cs:_069720_switch(,%edx,4)

	_069771_case:
		mov    $0x000002,%edx
		jmp    _069799_jump

	_069778_case:
		mov    $0x000004,%edx
		jmp    _069799_jump

	_06977f_case:
		mov    $0x000006,%edx
		jmp    _069799_jump

	_069786_case:
		mov    $0x000009,%edx
		jmp    _069799_jump

	_06978d_case:
		mov    $0x00000b,%edx
		jmp    _069799_jump

	_069794_case:
		mov    $0x00000d,%edx

	_069799_jump:
		call   _01de98_func

	_06979e_case:
		test   %bl,%bl
		je     _0697ab_jump
		mov    _0c1144_data,%eax
		movb   $0x000007,0x00006f(%eax)

	_0697ab_jump:
		pop    %edx
		pop    %ebx
		ret    



_0697b0_func:
		push   %ebx
		push   %edx
		mov    _0c1148_data,%eax
		mov    _0c3164_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		cwtl   
		sub    %edx,%eax
		mov    _0c1144_data,%edx
		mov    %ax,0x000038(%edx)
		mov    _0c3162_data,%bx
		mov    0x000028(%edx),%ax
		sub    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,0x000036(%edx)
		pop    %edx
		pop    %ebx
		ret    

_0697ec_switch:
		.long   _069a4a_case
		.long   _069a53_case
		.long   _069a38_case
		.long   _069a53_case
		.long   _069a26_case
		.long   _069a53_case
		.long   _069a53_case
		.long   _069a43_case
		.long   _069a53_case
		.long   _069a31_case
		.long   _069a53_case
		.long   _069a1f_case




_06981c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0b9369_data
		jne    _069840_jump
		mov    _0b9368_data,%dl
		cmp    $0x000019,%dl
		je     _069839_jump
		cmp    $0x00001a,%dl
		jne    _069840_jump

	_069839_jump:
		mov    $0x00001d,%edx
		jmp    _06987f_jump

	_069840_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _069860_jump
		mov    _0b9368_data,%bh
		cmp    $0x00001b,%bh
		je     _069859_jump
		cmp    $0x00001c,%bh
		jne    _069860_jump

	_069859_jump:
		mov    $0x00001e,%edx
		jmp    _06987f_jump

	_069860_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _06987a_jump
		mov    _0b9368_data,%al
		cmp    $0x000011,%al
		je     _069889_jump
		cmp    $0x000012,%al
		je     _069889_jump
		cmp    $0x000013,%al
		je     _069889_jump

	_06987a_jump:
		mov    $0x00000d,%edx

	_06987f_jump:
		mov    $_0b92f8_data,%eax
		call   _01de98_func

	_069889_jump:
		cmpb   $0x000000,_0b9369_data
		jne    _0698ed_jump
		testb  $0x000008,_0b937d_data
		je     _0698c2_jump
		mov    _0c114e_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0c3110_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		jmp    _0698e7_jump

	_0698c2_jump:
		mov    _0c114e_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0c3110_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax

	_0698e7_jump:
		mov    %ax,_0c3112_data

	_0698ed_jump:
		mov    _0c1144_data,%eax
		mov    _0b937d_data,%dl
		xor    %bh,%bh
		and    $0x000008,%dl
		mov    %bh,_0c1158_data
		mov    0x000085(%eax),%dh
		mov    %bh,_0c1159_data
		and    $0x0000f7,%dh
		mov    %bh,_0c1155_data
		mov    %dh,%bl
		mov    %dh,0x000085(%eax)
		or     %dl,%bl
		mov    %bl,0x000085(%eax)
		mov    0x000085(%eax),%bh
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%bh
		mov    %bh,0x000085(%eax)
		mov    _0c314e_data,%eax
		mov    $0x000001,%cl
		sar    $0x000010,%eax
		mov    %cl,_0c1156_data
		call   _0200e0_func
		mov    _0c1144_data,%eax
		call   _020064_func
		mov    _0c1144_data,%eax
		xor    %ch,%ch
		movw   $0x000000,0x000042(%eax)
		xor    %ebx,%ebx
		movw   $0x00ffff,0x00004a(%eax)
		xor    %edx,%edx
		mov    0x000072(%eax),%bl
		mov    0x000073(%eax),%dl
		mov    %ch,0x00006f(%eax)
		call   _01dea8_func
		mov    _0c1144_data,%eax
		xor    %edx,%edx
		mov    0x000071(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x000070(%eax),%dl
		mov    0x000002(%ebx,%edx,8),%dl
		mov    %dl,0x00006e(%eax)
		mov    _0c312a_data,%edx
		mov    _0c3126_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%eax)
		mov    _0b937d_data,%cl
		lea    0x000028(%eax),%edx
		test   $0x000008,%cl
		je     _0699d7_jump
		mov    $0xfffffffb,%eax
		jmp    _0699dc_jump

	_0699d7_jump:
		mov    $0x000005,%eax

	_0699dc_jump:
		mov    (%edx),%ebx
		mov    $0x000004,%cl
		add    %eax,%ebx
		mov    _0c1150_data,%ax
		mov    %ebx,(%edx)
		test   %ax,%ax
		js     _0699f4_jump
		sar    %cl,%ax
		jmp    _0699fd_jump

	_0699f4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0699fd_jump:
		inc    %al
		mov    %al,_0c1157_data
		mov    _0c1144_data,%eax
		mov    0x000072(%eax),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _069a53_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0697ec_switch(,%eax,4)

	_069a1f_case:
		addb   $0x000002,_0c1157_data

	_069a26_case:
		movw   $0x00000b,_0c114e_data
		jmp    _069a53_case

	_069a31_case:
		addb   $0x000002,_0c1157_data

	_069a38_case:
		movw   $0x000008,_0c114e_data
		jmp    _069a53_case

	_069a43_case:
		addb   $0x000002,_0c1157_data

	_069a4a_case:
		movw   $0x000005,_0c114e_data

	_069a53_case:
		testb  $0x000008,_0b937d_data
		je     _069a66_jump
		cmpw   $0x000000,_0c3112_data
		jg     _069a79_jump

	_069a66_jump:
		testb  $0x000008,_0b937d_data
		jne    _069a99_jump
		cmpw   $0x000000,_0c3112_data
		jge    _069a99_jump

	_069a79_jump:
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		test   %eax,%eax
		jge    _069a89_jump
		neg    %eax

	_069a89_jump:
		sub    $0x000005,%eax
		cmp    %ebx,%eax
		jge    _069a92_jump
		mov    %ebx,%eax

	_069a92_jump:
		add    %ax,_0c114e_data

	_069a99_jump:
		mov    _0c114c_data,%eax
		mov    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _069aac_jump
		mov    %ebx,%eax

	_069aac_jump:
		mov    %eax,%edx
		mov    %ax,_0c114e_data
		mov    _0c1144_data,%eax
		testb  $0x000008,0x000085(%eax)
		je     _069ad1_jump
		mov    0x000028(%eax),%esi
		mov    %dx,0x000040(%eax)
		add    $0x00000b,%esi
		mov    %esi,0x000028(%eax)
		jmp    _069ae0_jump

	_069ad1_jump:
		mov    0x000028(%eax),%ecx
		neg    %edx
		sub    $0x00000b,%ecx
		mov    %dx,0x000040(%eax)
		mov    %ecx,0x000028(%eax)

	_069ae0_jump:
		mov    _0c114e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000006,%eax
		add    %eax,%edx
		add    %edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    _0c114c_data,%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    $0x000028,%ebx
		sub    %edx,%eax
		mov    $0x000008,%cl
		sub    %eax,%ebx
		mov    _0c1150_data,%ax
		mov    %bx,_0c1152_data
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0c114c_data
		mov    %ax,_0c1150_data
		mov    _0c114c_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    _0c1150_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,_0c1152_data
		mov    _0c1144_data,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%dl
		mov    0x000078(%eax),%bl
		lea    (%edx,%ebx,1),%ecx
		mov    _0c313c_data,%edx
		mov    _0c3128_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    %ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    %edx,0x00002c(%eax)
		mov    $0x000004,%cl
		mov    0x00002c(%eax),%ax
		cwtl   
		shl    %cl,%eax
		mov    %eax,_0c1148_data
		call   _0697b0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069ba0_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0b9369_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0b9304_data,%eax
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0b9368_data,%dl
		testb  $0x000002,0x000007(%ebx,%edx,8)
		je     _069c78_jump
		cmpb   $0x000002,_0b9369_data
		jne    _069c48_jump
		cmpw   $0x000000,_0b933a_data
		jle    _069bfe_jump
		mov    0x000008(%eax),%eax
		mov    0x00006d(%eax),%bh
		mov    0x000015(%eax),%dl
		and    $0x00000f,%bh
		and    $0x0000f0,%dl
		mov    %bh,%cl
		mov    %bh,0x00006d(%eax)
		or     %dl,%cl
		mov    %cl,0x00006d(%eax)
		jmp    _069c17_jump

	_069bfe_jump:
		mov    0x000008(%eax),%eax
		mov    0x000005(%eax),%dl
		and    $0x0000f0,%dl
		mov    0x00006d(%eax),%dh
		and    $0x00000f,%dh
		mov    %dh,%bl
		mov    %dh,0x00006d(%eax)
		or     %dl,%bl
		mov    %bl,0x00006d(%eax)

	_069c17_jump:
		mov    $0x000020,%esi
		mov    $0xffffffff,%edi
		mov    %si,_0c1150_data
		call   _06981c_func
		mov    _0c3347_data,%ch
		mov    %di,_0c315c_data
		test   $0x000008,%ch
		je     _069c78_jump
		xor    %al,%al
		mov    %al,_0c33ce_data
		jmp    _069c78_jump

	_069c48_jump:
		call   _06c290_func
		mov    $0x00000b,%edx
		mov    $_0b92f8_data,%eax
		mov    $0x000005,%ebx
		call   _01de98_func
		mov    $0x000001,%al
		mov    %bx,_0c1150_data
		xor    %edx,%edx
		mov    %al,_0c1158_data
		mov    %dx,_0c303e_data

	_069c78_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069c80_func:
		push   %edx
		mov    _0c1150_data,%dx
		inc    %edx
		mov    %dx,_0c1150_data
		cmp    $0x000040,%dx
		jl     _069c9f_jump
		movw   $0x00003f,_0c1150_data

	_069c9f_jump:
		pop    %edx
		ret    



_069ca4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%dl
		mov    _0c1144_data,%ebx
		mov    0x000048(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _069d4b_jump
		mov    %eax,%ecx
		shl    $0x000004,%eax
		add    %ecx,%eax
		mov    _0b9410_data,%ecx
		shl    $0x000003,%eax
		add    %ecx,%eax
		movw   $0x000000,0x000040(%eax)
		movw   $0x000000,0x000042(%eax)
		movw   $0x00ffff,0x00004a(%ebx)
		test   %dl,%dl
		jne    _069cef_jump
		testb  $0x000004,0x000085(%ebx)
		jne    _069d35_jump

	_069cef_jump:
		mov    _0b9320_data,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0b9364_data,%bl
		mov    0x00006c(%eax),%cl
		add    %edx,%ebx
		sub    %ecx,%ebx
		xor    %ecx,%ecx
		mov    %ebx,0x000028(%eax)
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%cl
		mov    0x000078(%eax),%bl
		lea    (%ebx,%ecx,1),%edx
		mov    _0c313c_data,%ebx
		mov    _0c3128_data,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		sar    %ebx
		add    %ecx,%ebx
		sar    %edx
		sub    $0x000005,%ebx
		sub    %edx,%ebx
		jmp    _069d48_jump

	_069d35_jump:
		test   %dl,%dl
		jne    _069d4b_jump
		mov    0x00003a(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x000028(%eax)
		mov    0x00003c(%eax),%ebx
		sar    $0x000010,%ebx

	_069d48_jump:
		mov    %ebx,0x00002c(%eax)

	_069d4b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069d50_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9410_data,%ebx
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000040(%edx),%bx
		mov    %bx,0x000040(%eax)
		mov    0x000042(%edx),%dx
		mov    %dx,0x000042(%eax)
		mov    _0b9352_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _069d90_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _069d97_jump

	_069d90_jump:
		xor    %eax,%eax
		call   _069ca4_func

	_069d97_jump:
		pop    %edx
		pop    %ebx
		ret    



_069d9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069dad_jump
		neg    %eax

	_069dad_jump:
		cmp    $0x00000b,%eax
		jl     _069db6_jump
		mov    $0x000002,%al
		jmp    _069dda_jump

	_069db6_jump:
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069dc2_jump
		neg    %eax

	_069dc2_jump:
		cmp    $0x000008,%eax
		jl     _069dcb_jump
		mov    $0x000001,%al
		jmp    _069dda_jump

	_069dcb_jump:
		cmpb   $0x000000,_0c334c_data
		je     _069dd8_jump
		mov    $0x000001,%al
		jmp    _069dda_jump

	_069dd8_jump:
		xor    %al,%al

	_069dda_jump:
		testb  $0x000008,0x000085(%edx)
		je     _069df3_jump
		mov    0x000040(%edx),%cx
		xor    %ah,%ah
		sub    %eax,%ecx
		mov    %cx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069df3_jump:
		mov    0x000040(%edx),%bx
		xor    %ah,%ah
		add    %eax,%ebx
		mov    %bx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069e04_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    %ah,_0c1156_data
		mov    %ah,_0c1159_data
		mov    %ah,_0c1155_data
		mov    _0c1144_data,%eax
		mov    $0x000005,%edx
		movl   $0x000000,0x000024(%eax)
		mov    %dx,_0c1150_data
		mov    0x000085(%eax),%bl
		mov    0x000072(%eax),%dl
		and    $0x0000fb,%bl
		mov    %dl,0x000070(%eax)
		mov    %bl,0x000085(%eax)
		xor    %eax,%eax
		call   _069ca4_func
		pop    %edx
		pop    %ebx
		ret    



_069e54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		cmpb   $0x000000,_0c1156_data
		je     _06a09e_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _06a03b_jump
		call   _0697b0_func
		mov    _0c1148_data,%eax
		sar    $0x000004,%eax
		mov    _0c1150_data,%di
		mov    %eax,0x00002c(%esi)
		test   %di,%di
		jle    _069ec9_jump
		mov    _0c1152_data,%cx
		cmp    %cx,%di
		jge    _069ea6_jump
		xor    %eax,%eax
		mov    %ax,_0c1150_data
		jmp    _069eaf_jump

	_069ea6_jump:
		sub    %ecx,%edi
		mov    %di,_0c1150_data

	_069eaf_jump:
		cmpw   $0x000000,_0c1150_data
		jne    _06a022_jump
		xor    %eax,%eax
		call   _069750_func
		jmp    _06a022_jump

	_069ec9_jump:
		mov    _0c1155_data,%cl
		test   %cl,%cl
		jne    _069edf_jump
		mov    %esi,%eax
		call   _069d9c_func
		jmp    _06a022_jump

	_069edf_jump:
		cmp    $0x000001,%cl
		jne    _06a022_jump
		mov    0x00003e(%esi),%eax
		mov    _0c114c_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		test   %eax,%eax
		jge    _069efd_jump
		neg    %eax

	_069efd_jump:
		cmp    %edx,%eax
		jge    _069f08_jump
		mov    %esi,%eax
		call   _069d9c_func

	_069f08_jump:
		mov    _0c312a_data,%eax
		mov    _0c3126_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		testb  $0x000008,0x000085(%esi)
		je     _069f34_jump
		add    $0x00000b,%eax
		jmp    _069f37_jump

	_069f34_jump:
		sub    $0x00000b,%eax

	_069f37_jump:
		cmpb   $0x000004,_0b9369_data
		jne    _069f51_jump
		testb  $0x000008,0x000085(%esi)
		je     _069f4e_jump
		add    $0x00000b,%eax
		jmp    _069f51_jump

	_069f4e_jump:
		sub    $0x00000b,%eax

	_069f51_jump:
		mov    _0c313c_data,%ecx
		mov    _0c3128_data,%edi
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		mov    0x00006d(%esi),%bl
		mov    0x000078(%esi),%dl
		sar    $0x000010,%edi
		add    %edx,%ebx
		sar    %ecx
		sar    %ebx
		add    %ecx,%edi
		sub    %ebx,%edi
		mov    0x000085(%esi),%bh
		shl    $0x000004,%edi
		test   $0x000008,%bh
		je     _069f8a_jump
		cmp    0x000028(%esi),%eax
		jge    _069f98_jump

	_069f8a_jump:
		testb  $0x000008,0x000085(%esi)
		jne    _069fa2_jump
		cmp    0x000028(%esi),%eax
		jg     _069fa2_jump

	_069f98_jump:
		call   _069e04_func
		jmp    _06a022_jump

	_069fa2_jump:
		mov    _0c1148_data,%ecx
		mov    %edi,%ebx
		mov    0x000028(%esi),%dx
		sub    %ecx,%ebx
		sub    %dx,%ax
		je     _069fc3_jump
		movswl %ax,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ebx

	_069fc3_jump:
		mov    0x000040(%esi),%ax
		imul   %eax,%ebx
		mov    _0c1148_data,%ebp
		mov    %ebp,%eax
		mov    %bx,0x000042(%esi)
		mov    %edi,%ebx
		mov    0x000040(%esi),%edx
		cmp    %ebx,%eax
		jge    _069fe1_jump
		mov    %ebx,%eax

	_069fe1_jump:
		mov    %eax,%ecx
		mov    %edi,%ebx
		mov    _0c1148_data,%eax
		sar    $0x000010,%edx
		cmp    %ebx,%eax
		jle    _069ff3_jump
		mov    %ebx,%eax

	_069ff3_jump:
		add    %ebp,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _06a008_jump
		cmp    %ecx,%eax
		jg     _06a008_jump
		mov    $0x000001,%eax
		jmp    _06a00a_jump

	_06a008_jump:
		xor    %eax,%eax

	_06a00a_jump:
		test   %eax,%eax
		je     _06a015_jump
		sarw   $0x000004,0x000042(%esi)
		jmp    _06a022_jump

	_06a015_jump:
		sub    _0c1148_data,%edi
		sar    $0x000004,%edi
		mov    %di,0x000042(%esi)

	_06a022_jump:
		cmpb   $0x000000,_0c1159_data
		jne    _06a08c_jump
		cmpb   $0x000000,_0c1156_data
		je     _06a08c_jump
		call   _029d88_func
		jmp    _06a08c_jump

	_06a03b_jump:
		cmpb   $0x000000,_0c1159_data
		je     _06a072_jump
		cmpb   $0x000000,_0c1155_data
		jne    _06a072_jump
		mov    $0x000001,%eax
		call   _069750_func
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%esi),%al
		mov    0x000002(%edx,%eax,8),%al
		mov    %al,0x00006e(%esi)

	_06a072_jump:
		movb   $0x000001,_0c1155_data
		testb  $0x000008,0x000085(%esi)
		je     _06a088_jump
		decw   0x000040(%esi)
		jmp    _06a08c_jump

	_06a088_jump:
		incw   0x000040(%esi)

	_06a08c_jump:
		mov    0x000048(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06a09e_jump
		mov    %esi,%eax
		call   _069d50_func

	_06a09e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a0a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    _0b9410_data,%esi
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _06a19f_jump

	_06a0c7_jump:
		cmpw   $0x00000b,0x000064(%esi)
		jne    _06a18f_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _06a18f_jump
		mov    %esi,%eax
		call   _020064_func
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    _0c1144_data,%eax
		call   _01e1b8_func
		lea    0x000018(%esp),%eax
		lea    0x00001c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		movb   $0x000000,0x00006f(%esi)
		xor    %eax,%eax
		mov    0x000012(%esp),%edx
		mov    0x00006c(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    _0c1144_data,%eax
		mov    %edx,0x000028(%esi)
		cmpw   $0x000000,0x000040(%eax)
		jle    _06a145_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ecx
		mov    %ecx,0x000028(%esi)

	_06a145_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006d(%esi),%dl
		mov    0x000078(%esi),%al
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    %eax
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %esi,%eax
		mov    %edx,0x00002c(%esi)
		call   _01e53c_func
		mov    0x000085(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000085(%esi)
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a18f_jump:
		inc    %eax
		add    $0x000088,%esi
		cmp    %dx,%ax
		jl     _06a0c7_jump

	_06a19f_jump:
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a1b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02bfdc_func
		testb  $0x000008,0x000085(%ecx)
		jne    _06a207_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _06a207_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02bb40_func
		test   %ax,%ax
		jne    _06a25c_jump

	_06a207_jump:
		testb  $0x000008,0x000085(%ecx)
		je     _06a297_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _06a297_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02bb40_func
		test   %ax,%ax
		je     _06a297_jump

	_06a25c_jump:
		mov    0x000085(%ecx),%dh
		test   $0x000008,%dh
		je     _06a27b_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		mov    $0x000007,%edx
		mov    %bh,0x000085(%ecx)
		jmp    _06a28d_jump

	_06a27b_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		or     $0x000008,%bl
		mov    $0x000008,%edx
		mov    %bl,0x000085(%ecx)

	_06a28d_jump:
		mov    $0x000001,%ebx
		call   _065368_func

	_06a297_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _02b74c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a2a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02bfdc_func
		testb  $0x000008,0x000085(%ecx)
		jne    _06a2ff_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _06a2ff_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02bb40_func
		test   %ax,%ax
		jne    _06a354_jump

	_06a2ff_jump:
		testb  $0x000008,0x000085(%ecx)
		je     _06a398_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _06a398_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02bb40_func
		test   %ax,%ax
		je     _06a398_jump

	_06a354_jump:
		mov    0x000085(%ecx),%dh
		test   $0x000008,%dh
		je     _06a373_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		mov    $0x00000d,%edx
		mov    %bh,0x000085(%ecx)
		jmp    _06a385_jump

	_06a373_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		or     $0x000008,%bl
		mov    $0x00000e,%edx
		mov    %bl,0x000085(%ecx)

	_06a385_jump:
		mov    $0x000001,%ebx
		call   _065368_func
		mov    0x00003c(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%ecx)

	_06a398_jump:
		cmpb   $0x000002,0x000071(%ecx)
		jne    _06a3e0_jump
		cmpb   $0x000011,0x000070(%ecx)
		jne    _06a3e0_jump
		mov    0x00003c(%ecx),%edx
		mov    0x00002c(%ecx),%ebx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jg     _06a3e0_jump
		testb  $0x000008,0x000085(%ecx)
		je     _06a3c6_jump
		mov    $0x000001,%ebx
		mov    $0x00000a,%edx
		jmp    _06a3d0_jump

	_06a3c6_jump:
		mov    $0x000001,%ebx
		mov    $0x000009,%edx

	_06a3d0_jump:
		mov    %ecx,%eax
		call   _065368_func
		mov    0x00003c(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%ecx)

	_06a3e0_jump:
		cmpb   $0x000002,0x000071(%ecx)
		jne    _06a42d_jump
		cmpb   $0x000012,0x000070(%ecx)
		jne    _06a42d_jump
		mov    %ecx,%eax
		call   _01d740_func
		test   %al,%al
		je     _06a42d_jump
		cmpw   $0x000005,0x000042(%ecx)
		jne    _06a410_jump
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000000,0x000082(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a410_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000005,0x000042(%ecx)
		call   _065368_func

	_06a42d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a434_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x000071(%eax)
		jne    _06a444_jump
		cmpb   $0x000012,0x000070(%ecx)
		je     _06a465_jump

	_06a444_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _065368_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movb   $0x000000,0x00007a(%ecx)

	_06a465_jump:
		pop    %ecx
		pop    %ebx
		ret    



_06a468_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0b9414_data,%cx
		xor    %edx,%edx
		mov    %ah,(%esp)
		mov    _0b9410_data,%eax
		test   %cx,%cx
		jle    _06a4bb_jump

	_06a489_jump:
		cmpw   $0x00000a,0x000064(%eax)
		jne    _06a4b0_jump
		mov    0x00003c(%eax),%bx
		cmp    0x00003c(%esi),%bx
		jne    _06a4b0_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _06a4b0_jump
		cmpb   $0x000064,0x000083(%eax)
		jae    _06a4b0_jump
		xor    %bh,%bh
		mov    %bh,(%esp)
		jmp    _06a4bb_jump

	_06a4b0_jump:
		inc    %edx
		add    $0x000088,%eax
		cmp    %cx,%dx
		jl     _06a489_jump

	_06a4bb_jump:
		mov    (%esp),%al
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a4c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000032(%eax),%eax
		mov    _0c1d74_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9410_data,%ebx
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%ecx
		cmp    0x00002c(%eax),%ecx
		jne    _06a523_jump
		mov    _0c3164_data,%ebx
		sar    $0x000010,%ebx
		add    $0x0000c8,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x000085(%eax),%bl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bl
		mov    %bl,0x000085(%eax)

	_06a523_jump:
		mov    0x000032(%eax),%eax
		mov    _0c1d74_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9410_data,%ebx
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		cmp    0x00002c(%eax),%esi
		jne    _06a578_jump
		movl   $0x000000,0x000024(%eax)
		mov    _0c3164_data,%edx
		mov    0x000085(%eax),%bh
		sar    $0x000010,%edx
		and    $0x0000fb,%bh
		add    $0x0000c8,%edx
		mov    %bh,0x000085(%eax)
		mov    %edx,0x00002c(%eax)

	_06a578_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a580_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		call   _02bfdc_func
		xor    %al,%al
		cmpb   $0x000000,0x000071(%edx)
		jne    _06a6ac_jump
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x00006d(%edx),%bl
		add    %ecx,%ebx
		mov    _0c3164_data,%ecx
		sar    $0x000010,%ecx
		add    $0x000014,%ebx
		add    $0x0000c8,%ecx
		cmp    %ecx,%ebx
		jge    _06a5be_jump
		incb   0x000083(%edx)

	_06a5be_jump:
		mov    0x000070(%edx),%bh
		cmp    $0x000003,%bh
		jne    _06a5d1_jump
		movw   $0x000000,0x000042(%edx)
		jmp    _06a6ac_jump

	_06a5d1_jump:
		cmp    $0x000009,%bh
		jne    _06a66f_jump
		mov    _0c3164_data,%ecx
		mov    0x00002c(%edx),%edi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000078(%edx),%bl
		add    $0x0000c8,%ecx
		add    %edi,%ebx
		movw   $0x000006,0x000042(%edx)
		cmp    %ecx,%ebx
		jg     _06a61b_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%bl
		mov    _0c1126_data,%cx
		add    %edi,%ebx
		shl    $0x000004,%ecx
		add    $0x00000e,%ebx
		cmp    %ecx,%ebx
		jle    _06a6ac_jump

	_06a61b_jump:
		xor    %eax,%eax
		mov    0x00002c(%edx),%ebx
		mov    0x00006d(%edx),%al
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0c1126_data,%bx
		add    $0x00000e,%eax
		shl    $0x000004,%ebx
		cmp    %ebx,%eax
		jle    _06a63f_jump
		mov    %edx,%eax
		call   _07cbf8_func

	_06a63f_jump:
		mov    _0c3164_data,%eax
		sar    $0x000010,%eax
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000085(%edx),%al
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%al
		mov    %al,0x000085(%edx)
		mov    %edx,%eax
		movb   $0x000000,0x000083(%edx)
		jmp    _06a6a7_jump

	_06a66f_jump:
		mov    _0c3164_data,%ecx
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%esi
		mov    0x00006d(%edx),%bl
		sar    $0x000010,%ecx
		add    %esi,%ebx
		cmp    %ecx,%ebx
		jge    _06a6ac_jump
		add    $0x0000c8,%ecx
		mov    %ecx,0x00002c(%edx)
		mov    0x000085(%edx),%ch
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ch
		mov    %edx,%eax
		mov    %ch,0x000085(%edx)

	_06a6a7_jump:
		call   _06a468_func

	_06a6ac_jump:
		cmpb   $0x000064,0x000083(%edx)
		jne    _06a6bc_jump
		mov    %edx,%eax
		call   _06a468_func

	_06a6bc_jump:
		test   %al,%al
		je     _06a7aa_jump
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _06a7aa_jump

	_06a6dc_jump:
		cmpw   $0x00000a,0x000064(%ecx)
		jne    _06a79a_jump
		mov    0x00003c(%ecx),%bx
		cmp    0x00003c(%edx),%bx
		jne    _06a79a_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _06a79a_jump
		movl   $0x000001,0x000024(%ecx)
		mov    _0c3164_data,%eax
		mov    0x000085(%ecx),%bl
		sar    $0x000010,%eax
		or     $0x000004,%bl
		add    $0x0000c8,%eax
		mov    %bl,0x000085(%ecx)
		mov    %eax,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    0x00003a(%edx),%eax
		mov    _0c1126_data,%bx
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%esi
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		shl    $0x000004,%ebx
		mov    0x00006d(%ecx),%al
		sub    $0x000010,%ebx
		add    %eax,%esi
		cmp    %ebx,%esi
		jle    _06a757_jump
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x00002c(%ecx)
		call   _07cbf8_func

	_06a757_jump:
		mov    0x000073(%edx),%al
		mov    %al,0x000071(%ecx)
		mov    0x000072(%edx),%al
		mov    %al,0x000070(%ecx)
		mov    0x000085(%ecx),%bh
		mov    0x00007b(%edx),%al
		movb   $0x000000,0x000083(%ecx)
		or     $0x000010,%bh
		mov    %al,0x00007a(%ecx)
		mov    %bh,0x000085(%ecx)
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01e53c_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _065368_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a79a_jump:
		inc    %eax
		add    $0x000088,%ecx
		cmp    %si,%ax
		jl     _06a6dc_jump

	_06a7aa_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a7b0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01f090_func
		cmpb   $0x000000,0x00007a(%ecx)
		je     _06a7d6_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _06a7df_jump

	_06a7d6_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_06a7df_jump:
		call   _01dea8_func
		mov    %ecx,%eax
		call   _06a4c8_func
		mov    0x000085(%ecx),%dl
		test   $0x000008,%dl
		setne  %al
		mov    %al,0x000074(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_06a800_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000002,0x000071(%eax)
		jne    _06a813_jump
		cmpb   $0x000010,0x000070(%ecx)
		je     _06a81a_jump

	_06a813_jump:
		mov    $0x000001,%eax
		jmp    _06a81c_jump

	_06a81a_jump:
		xor    %eax,%eax

	_06a81c_jump:
		test   %eax,%eax
		je     _06a910_jump
		cmpb   $0x000002,0x000071(%ecx)
		jne    _06a830_jump
		cmpb   $0x000011,0x000070(%ecx)
		je     _06a837_jump

	_06a830_jump:
		mov    $0x000001,%eax
		jmp    _06a839_jump

	_06a837_jump:
		xor    %eax,%eax

	_06a839_jump:
		test   %eax,%eax
		je     _06a910_jump
		cmpb   $0x000002,0x000071(%ecx)
		jne    _06a84d_jump
		cmpb   $0x000012,0x000070(%ecx)
		je     _06a854_jump

	_06a84d_jump:
		mov    $0x000001,%eax
		jmp    _06a856_jump

	_06a854_jump:
		xor    %eax,%eax

	_06a856_jump:
		test   %eax,%eax
		je     _06a910_jump
		xor    %eax,%eax
		mov    _0b9320_data,%edx
		mov    _0b9364_data,%al
		mov    0x000028(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x00006c(%ecx),%dl
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _06a887_jump
		mov    $0x000001,%eax
		jg     _06a887_jump
		neg    %eax

	_06a887_jump:
		test   %eax,%eax
		jl     _06a894_jump
		testb  $0x000008,0x000085(%ecx)
		jne    _06a8ca_jump

	_06a894_jump:
		mov    _0b9320_data,%esi
		xor    %eax,%eax
		mov    0x000028(%ecx),%edi
		mov    _0b9364_data,%al
		xor    %edx,%edx
		add    %esi,%eax
		mov    0x00006c(%ecx),%dl
		sub    %edi,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _06a8bd_jump
		mov    $0x000001,%eax
		jg     _06a8bd_jump
		neg    %eax

	_06a8bd_jump:
		test   %eax,%eax
		jge    _06a910_jump
		testb  $0x000008,0x000085(%ecx)
		jne    _06a910_jump

	_06a8ca_jump:
		testb  $0x000008,0x000085(%ecx)
		je     _06a8db_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _06a8e1_jump

	_06a8db_jump:
		movw   $0x00fffd,0x000040(%ecx)

	_06a8e1_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movw   $0x00fffb,0x000042(%ecx)
		call   _01dea0_func
		mov    $0x000010,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01de98_func
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _065368_func

	_06a910_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a960_func:
		push   %edx
		cmpb   $0x000000,_0c337c_data
		je     _06a994_jump
		call   _0250e4_func
		add    $0x000041,%al
		mov    %al,_0c337a_data
		mov    _0c320f_data,%al
		cmp    _0c337a_data,%al
		jne    _06a98c_jump
		movb   $0x000001,_0c337d_data
		pop    %edx
		ret    

	_06a98c_jump:
		xor    %dh,%dh
		mov    %dh,_0c337d_data

	_06a994_jump:
		pop    %edx
		lea    0x000000(%eax),%eax
		ret    



_06a9a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0dde0c_data,%ebx
		inc    %ebx
		cmp    $0x000100,%ebx
		jl     _06a9b4_jump
		xor    %ebx,%ebx

	_06a9b4_jump:
		mov    _0aac72_data(,%ebx,2),%edx
		cwtl   
		sar    $0x000010,%edx
		lea    0x000001(%eax),%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %edx,%eax
		mov    %ebx,_0dde0c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a9d8_func:
		push   %edx
		test   %eax,%eax
		je     _06a9e9_jump
		xor    %eax,%eax
		call   _08ba16_func
		call   _087587_func

	_06a9e9_jump:
		xor    %edx,%edx

	_06a9eb_jump:
		add    $0x000002,%edx
		call   _087563_func
		mov    %ax,_0aac72_data(%edx)
		cmp    $0x000200,%edx
		jne    _06a9eb_jump
		xor    %edx,%edx
		mov    %edx,_0dde0c_data
		pop    %edx
		ret    



_06aa10_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0c33ca_data
		jne    _06aa3f_jump
		mov    $_0b92f8_data,%eax
		call   _07d038_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _06aa3f_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		mov    %ecx,%eax
		call   _01e53c_func

	_06aa3f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06aa44_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x00000c,_0c33cd_data
		jne    _06aa62_jump
		xor    %eax,%eax
		mov    _0b9320_data,%cx
		mov    _0b9364_data,%al
		add    %ecx,%eax
		jmp    _06aaae_jump

	_06aa62_jump:
		mov    _0c33d0_data,%dh
		cmp    $0x00000c,%dh
		jne    _06aa88_jump
		xor    %eax,%eax
		mov    _0b9320_data,%bx
		mov    _0b9364_data,%al
		add    %ebx,%eax
		sub    $0x00000f,%eax
		mov    %dh,_0c33cd_data
		jmp    _06aaae_jump

	_06aa88_jump:
		mov    _0c33d1_data,%bl
		cmp    $0x00000c,%bl
		jne    _06aab0_jump
		xor    %eax,%eax
		mov    _0b9320_data,%dx
		mov    _0b9364_data,%al
		add    %edx,%eax
		add    $0x00000f,%eax
		mov    %bl,_0c33cd_data

	_06aaae_jump:
		and    $0x0000f0,%al

	_06aab0_jump:
		xor    %edx,%edx
		cwtl   
		mov    _0b9364_data,%dl
		add    $0x000008,%eax
		sub    %edx,%eax
		mov    %eax,_0b9320_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06aac8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    _0b9370_data,%al
		add    $0x000016,%al
		mov    _0b933a_data,%ah
		movzbw _0b9364_data,%si
		add    %al,%ah
		mov    _0b9320_data,%dx
		mov    %ah,-0x000004(%ebp)
		mov    _0c3348_data,%ah
		add    %edx,%esi
		test   $0x000002,%ah
		je     _06ab1a_jump
		xor    %eax,%eax
		mov    $0x000050,%edx
		mov    -0x000004(%ebp),%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    $0x000050,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dl,-0x000004(%ebp)

	_06ab1a_jump:
		cmpw   $0x000000,_0c30ce_data
		je     _06ab90_jump
		xor    %eax,%eax
		mov    _0b9324_data,%edx
		mov    -0x000004(%ebp),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		push   $0x000010
		shl    $0x000004,%eax
		push   $0x000010
		cwtl   
		mov    _0b937d_data,%dl
		push   %eax
		test   $0x000008,%dl
		je     _06ab4f_jump
		mov    $0xfffffff8,%eax
		jmp    _06ab54_jump

	_06ab4f_jump:
		mov    $0x000008,%eax

	_06ab54_jump:
		movswl %si,%ebx
		mov    %ebx,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x000004,%eax
		shl    $0x000004,%eax
		cwtl   
		push   %eax
		xor    %eax,%eax
		mov    _0b9324_data,%ecx
		mov    -0x000004(%ebp),%al
		add    %ecx,%eax
		sar    $0x000004,%eax
		shl    $0x000004,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    $0x000010,%ecx
		shl    $0x000004,%eax
		mov    %ecx,%ebx
		cwtl   
		call   _027cc0_func

	_06ab90_jump:
		xor    %eax,%eax
		mov    _0b9324_data,%cx
		mov    -0x000004(%ebp),%al
		add    %ecx,%eax
		cwtl   
		sar    $0x000004,%eax
		movswl %si,%ecx
		movswl %ax,%ebx
		mov    %ecx,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01ea94_func
		mov    %al,_0c33cd_data
		cmp    $0x00000c,%al
		je     _06abe6_jump
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01ea94_func
		mov    %al,_0c33d0_data
		lea    0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01ea94_func
		mov    %al,_0c33d1_data
		jmp    _06abf4_jump

	_06abe6_jump:
		mov    $0x00000f,%dh
		mov    %dh,_0c33d1_data
		mov    %dh,_0c33d0_data

	_06abf4_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06abfc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000002,_0b9369_data
		jne    _06ac17_jump
		mov    _0b937b_data,%dl
		test   %dl,%dl
		jne    _06acda_jump

	_06ac17_jump:
		xor    %ebx,%ebx
		mov    _0b933a_data,%dx
		mov    %bx,_0b933a_data
		call   _06aac8_func
		mov    _0c3140_data,%cx
		mov    %dx,_0b933a_data
		cmp    $0x00000a,%cx
		jle    _06ace6_jump
		cmpb   $0x00000c,_0c33cd_data
		je     _06ac5f_jump
		cmpb   $0x00000c,_0c33d0_data
		je     _06ac5f_jump
		cmpb   $0x00000c,_0c33d1_data
		jne    _06acce_jump

	_06ac5f_jump:
		testb  $0x000018,_0c3348_data
		jne    _06acce_jump
		cmpb   $0x000002,_0b9369_data
		jne    _06ac83_jump
		cmpb   $0x000008,_0b9368_data
		jne    _06ac83_jump
		movw   $0x00005a,_0b9354_data

	_06ac83_jump:
		call   _06aa44_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		xor    %edi,%edi
		mov    $0xffffffff,%edx
		mov    $0x000009,%eax
		mov    %di,_0b9338_data
		mov    %di,_0b933a_data
		mov    %di,_0b934a_data
		mov    %di,_0c3112_data
		call   _071068_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06acce_jump:
		mov    %dx,_0b933a_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06acda_jump:
		je     _06ace6_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0b937b_data

	_06ace6_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06acec_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    %dx,0x000014(%esp)
		testb  $0x000002,_0c3348_data
		je     _06ad0c_jump
		mov    $0x000008,%esi
		jmp    _06ad11_jump

	_06ad0c_jump:
		mov    $0x000004,%esi

	_06ad11_jump:
		movw   $0x00ffff,_0b9342_data
		mov    _0c2f48_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		mov    _0b9410_data,%ebp
		add    %edx,%eax
		mov    _0c3012_data,%bx
		shl    $0x000003,%eax
		xor    %ecx,%ecx
		add    %eax,%ebp
		test   %bx,%bx
		jle    _06b5a6_jump

	_06ad47_jump:
		testb  $0x000020,0x000085(%ebp)
		je     _06b57a_jump
		mov    0x000014(%esp),%edx
		cmp    0x000034(%ebp),%dx
		je     _06b57a_jump
		xor    %eax,%eax
		mov    0x000064(%ebp),%ax
		testb  $0x000020,_0a529e_data(,%eax,4)
		je     _06ad81_jump
		mov    0x000040(%ebp),%eax
		sar    $0x000010,%eax
		call   _05a4ac_func
		mov    %eax,%ebx
		jmp    _06ad85_jump

	_06ad81_jump:
		mov    0x000042(%ebp),%bx

	_06ad85_jump:
		mov    _0b933a_data,%di
		mov    0x00004c(%ebp),%ax
		sub    %edi,%eax
		add    %eax,%ebx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _06ad9d_jump
		neg    %eax

	_06ad9d_jump:
		mov    %eax,%ebx
		add    $0x000002,%ebx
		movswl %si,%eax
		movswl %bx,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jge    _06adb2_jump
		mov    %ebx,%eax

	_06adb2_jump:
		mov    %eax,%ebx
		mov    0x000064(%ebp),%ax
		cmp    $0x00006d,%ax
		je     _06adca_jump
		cmp    $0x0000f1,%ax
		je     _06adca_jump
		cmp    $0x0000b3,%ax
		jne    _06adcd_jump

	_06adca_jump:
		add    $0x000008,%ebx

	_06adcd_jump:
		mov    0x000054(%ebp),%eax
		movswl %bx,%edx
		test   %eax,%eax
		jge    _06add9_jump
		neg    %eax

	_06add9_jump:
		cmp    %edx,%eax
		jge    _06b57a_jump
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _0230e0_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		jne    _06b57a_jump
		movswl %cx,%eax
		mov    _0c2f4a_data(,%eax,2),%ax
		mov    _0c1080_data,%edx
		mov    %ax,_0b9342_data
		cmp    $0xfffffffe,%edx
		jne    _06ae42_jump
		mov    _0c1084_data,%eax
		mov    %eax,%edx
		mov    $0x000002,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _06ae42_jump
		call   _03b930_func
		test   %al,%al
		jne    _06ae42_jump
		incl   _0c1084_data

	_06ae42_jump:
		mov    $0xffffffff,%eax
		mov    $0x000001,%bh
		mov    _0b9369_data,%cl
		mov    %ax,_0b9348_data
		mov    %bh,_0c33c4_data
		cmp    $0x000002,%cl
		jne    _06afbd_jump
		mov    0x000064(%ebp),%ax
		cmp    $0x000056,%ax
		jb     _06aecd_jump
		cmp    $0x000058,%ax
		jbe    _06afbd_jump
		cmp    $0x0000b2,%ax
		jb     _06aeb2_jump
		cmp    $0x0000b3,%ax
		jbe    _06afbd_jump
		cmp    $0x0000f3,%ax
		jb     _06aea3_jump
		jbe    _06afa2_jump
		cmp    $0x000115,%ax
		je     _06af80_jump
		jmp    _06afae_jump

	_06aea3_jump:
		cmp    $0x0000ed,%ax
		je     _06af96_jump
		jmp    _06afae_jump

	_06aeb2_jump:
		cmp    $0x00009f,%ax
		jb     _06afae_jump
		jbe    _06afbd_jump
		cmp    $0x0000a0,%ax
		je     _06af2e_jump
		jmp    _06afae_jump

	_06aecd_jump:
		cmp    $0x000016,%ax
		jb     _06af0d_jump
		jbe    _06af80_jump
		cmp    $0x00003f,%ax
		jb     _06aef4_jump
		jbe    _06af80_jump
		cmp    $0x000054,%ax
		je     _06afbd_jump
		jmp    _06afae_jump

	_06aef4_jump:
		cmp    $0x00001a,%ax
		jb     _06afae_jump
		cmp    $0x00001c,%ax
		jbe    _06af80_jump
		jmp    _06afae_jump

	_06af0d_jump:
		cmp    $0x000001,%ax
		jb     _06afae_jump
		jbe    _06af3e_jump
		cmp    $0x000010,%ax
		jb     _06afae_jump
		cmp    $0x000011,%ax
		jbe    _06af61_jump
		jmp    _06afae_jump

	_06af2e_jump:
		mov    0x000032(%ebp),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		jmp    _06afb8_jump

	_06af3e_jump:
		mov    _0c3152_data,%si
		cmp    $0x000001,%si
		je     _06afae_jump
		cmp    $0x000004,%si
		je     _06afae_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06afb8_jump

	_06af61_jump:
		mov    _0c3152_data,%bx
		cmp    $0x000004,%bx
		je     _06afae_jump
		cmp    $0x000005,%bx
		je     _06afae_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06afb8_jump

	_06af80_jump:
		cmpw   $0x000004,_0c3152_data
		je     _06afae_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06afb8_jump

	_06af96_jump:
		mov    $0xffffffff,%edx
		mov    $0x0000f8,%eax
		jmp    _06afb8_jump

	_06afa2_jump:
		mov    $0xffffffff,%edx
		mov    $0x000034,%eax
		jmp    _06afb8_jump

	_06afae_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax

	_06afb8_jump:
		call   _071068_func

	_06afbd_jump:
		mov    0x000064(%ebp),%ax
		cmp    $0x000083,%ax
		jb     _06b06b_jump
		jbe    _06b12f_jump
		cmp    $0x0000a7,%ax
		jb     _06b027_jump
		jbe    _06b108_jump
		cmp    $0x0000cf,%ax
		jb     _06b008_jump
		jbe    _06b326_jump
		cmp    $0x0000d6,%ax
		jb     _06b40e_jump
		jbe    _06b3bd_jump
		cmp    $0x000115,%ax
		je     _06b3d7_jump
		jmp    _06b40e_jump

	_06b008_jump:
		cmp    $0x0000a9,%ax
		jb     _06b40e_jump
		jbe    _06b214_jump
		cmp    $0x0000bd,%ax
		je     _06b2f3_jump
		jmp    _06b40e_jump

	_06b027_jump:
		cmp    $0x00009a,%ax
		jb     _06b04c_jump
		jbe    _06b25b_jump
		cmp    $0x00009b,%ax
		jbe    _06b282_jump
		cmp    $0x0000a2,%ax
		je     _06b31a_jump
		jmp    _06b40e_jump

	_06b04c_jump:
		cmp    $0x000086,%ax
		jb     _06b40e_jump
		jbe    _06b108_jump
		cmp    $0x00008a,%ax
		je     _06b234_jump
		jmp    _06b40e_jump

	_06b06b_jump:
		cmp    $0x000043,%ax
		jb     _06b0b1_jump
		jbe    _06b39b_jump
		cmp    $0x000056,%ax
		jb     _06b09c_jump
		jbe    _06b14c_jump
		cmp    $0x000057,%ax
		jbe    _06b179_jump
		cmp    $0x000058,%ax
		je     _06b1e7_jump
		jmp    _06b40e_jump

	_06b09c_jump:
		cmp    $0x000044,%ax
		jbe    _06b3f1_jump
		cmp    $0x000051,%ax
		je     _06b0fd_jump
		jmp    _06b40e_jump

	_06b0b1_jump:
		cmp    $0x00001b,%ax
		jb     _06b0dc_jump
		jbe    _06b3f1_jump
		cmp    $0x000031,%ax
		jb     _06b40e_jump
		jbe    _06b2a9_jump
		cmp    $0x00003f,%ax
		je     _06b2d0_jump
		jmp    _06b40e_jump

	_06b0dc_jump:
		cmp    $0x000008,%ax
		jb     _06b40e_jump
		jbe    _06b108_jump
		cmp    $0x000010,%ax
		jb     _06b40e_jump
		cmp    $0x000011,%ax
		jbe    _06b139_jump
		jmp    _06b40e_jump

	_06b0fd_jump:
		movw   $0x000000,0x000052(%ebp)
		jmp    _06b40e_jump

	_06b108_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b40e_jump
		cmpb   $0x00000d,0x000070(%ebp)
		jne    _06b40e_jump
		mov    $0x00000f,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _01dea8_func
		jmp    _06b40e_jump

	_06b12f_jump:
		cmpb   $0x000003,0x000070(%ebp)
		jne    _06b40e_jump

	_06b139_jump:
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _065368_func
		jmp    _06b40e_jump

	_06b14c_jump:
		cmpb   $0x000004,0x000070(%ebp)
		jne    _06b40e_jump
		cmpb   $0x000000,0x00007a(%ebp)
		jne    _06b16d_jump
		mov    $0x000005,%edx
		mov    %ebp,%eax
		call   _01de98_func
		jmp    _06b40e_jump

	_06b16d_jump:
		mov    %ebp,%eax
		call   _07d12c_func
		jmp    _06b40e_jump

	_06b179_jump:
		mov    0x000071(%ebp),%dh
		movb   $0x000010,0x000081(%ebp)
		test   %dh,%dh
		jne    _06b1b0_jump
		cmpb   $0x000007,0x000070(%ebp)
		jne    _06b1b0_jump
		mov    $0x000002,%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		mov    0x000032(%ebp),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		call   _071068_func
		jmp    _06b40e_jump

	_06b1b0_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b40e_jump
		cmpb   $0x000009,0x000070(%ebp)
		jne    _06b40e_jump
		mov    $0x000002,%ebx
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _01dea8_func
		mov    0x000032(%ebp),%edx
		mov    $0x000070,%eax
		sar    $0x000010,%edx
		call   _071068_func
		jmp    _06b40e_jump

	_06b1e7_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ebp,%eax
		movb   $0x000010,0x000081(%ebp)
		call   _01dea8_func
		mov    0x000032(%ebp),%edx
		mov    $0x00006f,%eax
		sar    $0x000010,%edx
		call   _071068_func
		jmp    _06b40e_jump

	_06b214_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b40e_jump
		cmpb   $0x00000d,0x000070(%ebp)
		jne    _06b40e_jump
		mov    %ebp,%eax
		call   _07dd08_func
		jmp    _06b40e_jump

	_06b234_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b40e_jump
		cmpb   $0x00000a,0x000070(%ebp)
		jne    _06b40e_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _065368_func
		jmp    _06b40e_jump

	_06b25b_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b40e_jump
		cmpb   $0x00000d,0x000070(%ebp)
		jne    _06b40e_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _065368_func
		jmp    _06b40e_jump

	_06b282_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b40e_jump
		cmpb   $0x00000f,0x000070(%ebp)
		jne    _06b40e_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _065368_func
		jmp    _06b40e_jump

	_06b2a9_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b40e_jump
		cmpb   $0x000000,0x000070(%ebp)
		jne    _06b40e_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _065368_func
		jmp    _06b40e_jump

	_06b2d0_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b2e0_jump
		cmpb   $0x00000a,0x000070(%ebp)
		je     _06b40e_jump

	_06b2e0_jump:
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _065368_func
		jmp    _06b40e_jump

	_06b2f3_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b40e_jump
		cmpb   $0x00000b,0x000070(%ebp)
		jne    _06b40e_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _065368_func
		jmp    _06b40e_jump

	_06b31a_jump:
		mov    %ebp,%eax
		call   _080bf8_func
		jmp    _06b40e_jump

	_06b326_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b336_jump
		cmpb   $0x000001,0x000070(%ebp)
		je     _06b40e_jump

	_06b336_jump:
		mov    $0x000001,%ebx
		mov    $0x000001,%cl
		mov    $_0c3344_data,%edi
		mov    %ebp,%eax
		xor    %edx,%edx
		mov    $_0c3347_data,%esi
		call   _01dea8_func
		mov    $0xffffffff,%eax
		mov    0x000085(%ebp),%bh
		mov    $0x000001,%edx
		and    $0x0000df,%bh
		mov    %cl,_0c33ab_data
		mov    %bh,0x000085(%ebp)
		mov    $0x000003,%ebx
		mov    %ax,_0b9342_data
		mov    %dx,_0b9338_data
		mov    $_0c3347_data,%eax
		xor    %edx,%edx
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _085360_func
		or     %cl,_0c3347_data
		jmp    _06b40e_jump

	_06b39b_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b40e_jump
		cmpb   $0x000002,0x000070(%ebp)
		jne    _06b40e_jump
		mov    $0x000009,%edx
		mov    %ebp,%eax
		call   _01de98_func
		jmp    _06b40e_jump

	_06b3bd_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b40e_jump
		cmpb   $0x000000,0x000070(%ebp)
		jne    _06b40e_jump
		mov    $0x000001,%edx
		mov    %ebp,%eax
		call   _01de98_func
		jmp    _06b40e_jump

	_06b3d7_jump:
		cmpb   $0x000000,0x000071(%ebp)
		jne    _06b40e_jump
		cmpb   $0x000002,0x000070(%ebp)
		jne    _06b40e_jump
		mov    $0x000003,%edx
		mov    %ebp,%eax
		call   _01de98_func
		jmp    _06b40e_jump

	_06b3f1_jump:
		cmpw   $0x000001,_0b933a_data
		jle    _06b405_jump
		mov    _0b9338_data,%eax
		sar    $0x000010,%eax
		jmp    _06b40a_jump

	_06b405_jump:
		mov    $0x000002,%eax

	_06b40a_jump:
		mov    %ax,0x00004a(%ebp)

	_06b40e_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _06b49e_jump
		mov    _0b9304_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _06b434_jump
		sar    %cl,%ax
		jmp    _06b43d_jump

	_06b434_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06b43d_jump:
		movswl %ax,%edx
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06b44e_jump
		neg    %eax

	_06b44e_jump:
		cmp    %edx,%eax
		jl     _06b473_jump
		mov    _0c3348_data,%al
		and    $0x000001,%al
		cmp    $0x000001,%al
		jne    _06b473_jump
		mov    $0x000003,%ebx
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		jmp    _06b49e_jump

	_06b473_jump:
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		call   _01dea0_func
		mov    $0x000008,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		cmpw   $0x0000c8,_0b934a_data
		jle    _06b49e_jump
		call   _06aa10_func

	_06b49e_jump:
		mov    _0b9324_data,%ax
		lea    0x000008(%esp),%ecx
		mov    %eax,0x000008(%esp)
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%ebp),%dl
		mov    %ebp,%eax
		call   _01e1b8_func
		mov    0x000008(%esp),%edx
		mov    _0b9324_data,%ax
		sub    %eax,%edx
		mov    %dx,_0b933a_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0b9365_data,%al
		mov    0x000078(%ebp),%dl
		mov    _0b933a_data,%si
		sub    %eax,%edx
		add    %edx,%esi
		mov    0x000064(%ebp),%di
		mov    %si,_0b933a_data
		cmp    $0x0000fe,%di
		jne    _06b55f_jump
		mov    0x00000e(%esp),%eax
		mov    0x000002(%esp),%edx
		xor    %ebx,%ebx
		mov    _0b9320_data,%ecx
		mov    _0b9364_data,%bl
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %ecx,%ebx
		add    %edx,%eax
		sub    %eax,%ebx
		mov    %ebx,0x00000c(%esp)
		movsbw 0x00007a(%ebp),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _06b53e_jump
		sar    %cl,%ax
		jmp    _06b547_jump

	_06b53e_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06b547_jump:
		mov    _0b933a_data,%bx
		xor    %dl,%dl
		sub    %eax,%ebx
		mov    %dl,_0c33c4_data
		mov    %bx,_0b933a_data

	_06b55f_jump:
		mov    (%esp),%eax
		mov    $0xffffffff,%ecx
		movb   $0x000000,(%eax)
		mov    %cx,_0c315c_data
		mov    %cx,_0b934a_data
		jmp    _06b5a6_jump

	_06b57a_jump:
		inc    %ecx
		movswl %cx,%eax
		mov    _0c2f48_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%ebp
		mov    _0c3012_data,%di
		add    %eax,%ebp
		cmp    %di,%cx
		jl     _06ad47_jump

	_06b5a6_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06b5cb_jump
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06b5cb_jump
		mov    0x000014(%esp),%eax
		mov    %ax,_0b9342_data
		jmp    _06b5ee_jump

	_06b5cb_jump:
		mov    _0b9340_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _06b5ee_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		movl   $0x000000,0x000054(%edx,%eax,8)

	_06b5ee_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06b5f8_func:
		push   %esi
		push   %edi
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%esi
		mov    _0b9304_data,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    %dl,%al
		shl    $0x000003,%eax
		mov    (%esi),%edx
		add    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _06b621_jump
		neg    %eax

	_06b621_jump:
		sar    $0x000004,%eax
		mov    $0x000070,%ebx
		movsbl %al,%eax
		lea    0x000001(%edx),%esi
		cmp    %ebx,%eax
		jle    _06b635_jump
		mov    %ebx,%eax

	_06b635_jump:
		mov    %al,%bl
		mov    _0b9338_data,%di
		neg    %bl
		test   %di,%di
		jle    _06b65a_jump
		movsbl %al,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		movb   $0x0000f0,(%esi)
		cmp    %ebx,%eax
		jge    _06b655_jump
		mov    %ebx,%eax

	_06b655_jump:
		mov    %al,(%edx)
		pop    %edi
		pop    %esi
		ret    

	_06b65a_jump:
		jge    _06b673_jump
		xor    %eax,%eax
		mov    %cl,%al
		movsbl %bl,%ebx
		neg    %eax
		cmp    %ebx,%eax
		jle    _06b66b_jump
		mov    %ebx,%eax

	_06b66b_jump:
		mov    %al,(%esi)
		movb   $0x000010,(%edx)
		pop    %edi
		pop    %esi
		ret    

	_06b673_jump:
		mov    %cl,%ah
		mov    %cl,(%esi)
		neg    %ah
		mov    %ah,(%esi)
		mov    %cl,(%edx)
		pop    %edi
		pop    %esi
		ret    



_06b680_func:
		push   %ebx
		push   %ecx
		push   %edx
		test   %al,%al
		je     _06b748_jump
		mov    $0x000030,%ecx
		mov    $0x000011,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000030,%ecx
		mov    $0x000012,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000030,%ecx
		mov    $0x000013,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000030,%ecx
		mov    $0x000003,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000030,%ecx
		mov    $0x000005,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000030,%ecx
		mov    $0x000004,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000030,%ecx
		mov    $0x000020,%edx
		jmp    _06b851_jump

	_06b748_jump:
		mov    $0x000020,%ecx
		mov    $0x000002,%eax
		mov    _0c3110_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000020,%ecx
		mov    $0x000001,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000020,%ecx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		call   _06b5f8_func
		mov    $0x000020,%ecx
		mov    $0x000018,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000020,%ecx
		mov    $0x00000b,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000020,%ecx
		mov    $0x00000c,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000020,%ecx
		mov    $0x00000d,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000020,%ecx
		mov    $0x000003,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000020,%ecx
		mov    $0x000005,%edx
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		mov    $0x000020,%ecx
		mov    $0x000004,%edx

	_06b851_jump:
		mov    _0c3110_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06b5f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b868_func:
		push   %edx
		mov    _0c3138_data,%dx
		test   %dx,%dx
		je     _06b880_jump
		movw   $0x000001,_0b9340_data
		pop    %edx
		ret    

	_06b880_jump:
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06b8bc_jump
		mov    _0c33c4_data,%al
		test   %al,%al
		jbe    _06b89c_jump
		cmp    $0x000001,%al
		jne    _06b8c3_jump
		jmp    _06b8bc_jump

	_06b89c_jump:
		mov    _0c3110_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06b8aa_jump
		neg    %eax

	_06b8aa_jump:
		cmp    $0x000100,%eax
		jle    _06b8bc_jump
		movw   $0x000001,_0b9340_data
		pop    %edx
		ret    

	_06b8bc_jump:
		mov    %dx,_0b9340_data

	_06b8c3_jump:
		pop    %edx
		ret    

_06b8c8_switch:
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba25_case
		.long   _06ba36_case
		.long   _06ba4c_case
		.long   _06ba4c_case
		.long   _06ba5f_case
		.long   _06ba5f_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba25_case
		.long   _06ba36_case
		.long   _06ba4c_case
		.long   _06ba4c_case
		.long   _06ba5f_case
		.long   _06ba5f_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case
		.long   _06ba8b_case




_06b944_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0b9368_data,%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _06bbc8_jump
		xor    %edx,%edx
		mov    _0c33ce_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _06bbc8_jump
		mov    _0b9369_data,%bh
		cmp    $0x000007,%bh
		jne    _06b9bb_jump
		mov    _0b9338_data,%ax
		mov    %bh,%cl
		cwtl   
		shl    %cl,%eax
		mov    _0b933a_data,%cx
		sub    $0x000002,%ecx
		mov    %ax,_0c3112_data
		mov    %cx,_0b933a_data
		jmp    _06b9d4_jump

	_06b9bb_jump:
		cmp    $0x000004,%bh
		jne    _06b9cb_jump
		movw   $0x00fffd,_0b933a_data
		jmp    _06b9d4_jump

	_06b9cb_jump:
		movw   $0x00fffb,_0b933a_data

	_06b9d4_jump:
		mov    _0b9340_data,%ebx
		sar    $0x000010,%ebx
		mov    _0b933a_data,%ax
		cmp    $0xffffffff,%ebx
		je     _06ba08_jump
		mov    %ebx,%edx
		shl    $0x000004,%edx
		add    %ebx,%edx
		mov    _0b9410_data,%ebx
		mov    0x00004a(%ebx,%edx,8),%ebx
		cwtl   
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _06ba03_jump
		mov    %ebx,%eax

	_06ba03_jump:
		jmp    _06ba8b_case

	_06ba08_jump:
		mov    _0b935e_data,%dl
		cmp    $0x00001e,%dl
		ja     _06ba8b_case
		and    $0x0000ff,%edx
		jmp    *%cs:_06b8c8_switch(,%edx,4)

	_06ba25_case:
		mov    _0b9338_data,%di
		cmp    $0x000005,%di
		jle    _06ba8b_case
		mov    %edi,%eax
		jmp    _06ba88_jump

	_06ba36_case:
		mov    _0b9336_data,%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffb,%edx
		jge    _06ba8b_case
		mov    _0b9338_data,%ax
		jmp    _06ba8a_jump

	_06ba4c_case:
		mov    _0b9338_data,%si
		cmp    $0x00000a,%si
		jle    _06ba8b_case
		mov    $0x000001,%cl
		mov    %esi,%eax
		jmp    _06ba75_jump

	_06ba5f_case:
		mov    _0b9336_data,%edx
		sar    $0x000010,%edx
		cmp    $0xfffffff6,%edx
		jge    _06ba8b_case
		mov    $0x000001,%cl
		mov    _0b9338_data,%ax

	_06ba75_jump:
		test   %ax,%ax
		js     _06ba7f_jump
		sar    %cl,%ax
		jmp    _06ba88_jump

	_06ba7f_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06ba88_jump:
		neg    %eax

	_06ba8a_jump:
		dec    %eax

	_06ba8b_case:
		mov    %ax,_0b933a_data
		call   _06b868_func
		testb  $0x000002,_0c3348_data
		je     _06baa6_jump
		mov    $0x000100,%edx
		jmp    _06baab_jump

	_06baa6_jump:
		mov    $0x000200,%edx

	_06baab_jump:
		cmpb   $0x000000,_0c33ab_data
		je     _06baef_jump
		xor    %eax,%eax
		call   _06b680_func
		cmpb   $0x000000,_0b9369_data
		jne    _06bade_jump
		cmpb   $0x000028,_0b9368_data
		jne    _06bade_jump
		mov    $0x000019,%ebx
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		jmp    _06bb2f_jump

	_06bade_jump:
		mov    $0x00001b,%ebx
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		jmp    _06bb2f_jump

	_06baef_jump:
		mov    _0c3110_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _06bb00_jump
		neg    %eax

	_06bb00_jump:
		cmp    %edx,%eax
		setg   %dl
		xor    %eax,%eax
		mov    %dl,%al
		call   _06b680_func
		test   %dl,%dl
		je     _06bb23_jump
		mov    $0x000011,%ebx
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		jmp    _06bb2f_jump

	_06bb23_jump:
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx

	_06bb2f_jump:
		call   _01dea8_func
		mov    $0xffffffff,%ebx
		mov    $0xffffffff,%ecx
		xor    %eax,%eax
		xor    %dh,%dh
		mov    %ax,_0c303e_data
		mov    %dh,_0c33da_data
		mov    %bx,_0c315c_data
		mov    %cx,_0b9342_data
		mov    _0b9320_data,%ax
		xor    %dl,%dl
		xor    %bl,%bl
		xor    %cl,%cl
		mov    %dx,_0c3140_data
		mov    %bl,_0b936d_data
		mov    %cl,_0c33ce_data
		mov    %ax,_0c3160_data
		mov    _0b9324_data,%ax
		xor    %bh,%bh
		xor    %ch,%ch
		mov    %bh,_0b936e_data
		mov    %ax,_0c315e_data
		mov    _0c3348_data,%al
		mov    %ch,_0c1158_data
		test   $0x000002,%al
		je     _06bbc8_jump
		mov    $0x000001,%cl
		mov    _0b933a_data,%ax
		test   %ax,%ax
		js     _06bbb8_jump
		sar    %cl,%ax
		jmp    _06bbc1_jump

	_06bbb8_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06bbc1_jump:
		dec    %eax
		mov    %ax,_0b933a_data

	_06bbc8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06bbd0_func:
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    _0c3112_data,%di
		mov    %al,0x000010(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %ecx,%esi
		test   %al,%al
		jne    _06bbf4_jump
		mov    %ebx,%edi
		xor    %ebx,%ebx
		jmp    _06bd54_jump

	_06bbf4_jump:
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%eax
		mov    0x000010(%esp),%bl
		sar    $0x000010,%eax
		imul   %ebx,%eax
		mov    $0x000008,%cl
		test   %eax,%eax
		js     _06bc0e_jump
		sar    %cl,%eax
		jmp    _06bc14_jump

	_06bc0e_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_06bc14_jump:
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    $0x000003,%cl
		mov    %bl,%al
		test   %ax,%ax
		js     _06bc28_jump
		sar    %cl,%ax
		jmp    _06bc31_jump

	_06bc28_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06bc31_jump:
		test   %ax,%ax
		je     _06bc3b_jump
		movswl %ax,%ebx
		jmp    _06bc40_jump

	_06bc3b_jump:
		mov    $0x000001,%ebx

	_06bc40_jump:
		mov    $0x000002,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    $0x000003,%cl
		mov    %eax,(%esp)
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    0x000004(%esp),%ecx
		add    (%esp),%ecx
		add    %eax,%ecx
		mov    %ecx,0x000008(%esp)
		test   %cx,%cx
		jle    _06bcc3_jump
		cmpw   $0x000000,(%esp)
		jle    _06bc82_jump
		mov    %edx,%eax
		mov    $0x000008,%cl
		add    $0x000006,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _06bc84_jump

	_06bc82_jump:
		xor    %eax,%eax

	_06bc84_jump:
		mov    0x000004(%esp),%edx
		mov    _0c3112_data,%di
		test   %dx,%dx
		jle    _06bc9d_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		jmp    _06bc9f_jump

	_06bc9d_jump:
		xor    %edx,%edx

	_06bc9f_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		mov    %di,_0c3112_data
		cwtl   
		shl    %cl,%eax
		mov    _0c3112_data,%di
		add    %edx,%eax
		cmp    %ax,%di
		jle    _06bd26_jump
		jmp    _06bd24_jump

	_06bcc3_jump:
		mov    _0c3112_data,%di
		jge    _06bd24_jump
		cmpw   $0x000000,(%esp)
		jge    _06bce9_jump
		mov    %edx,%eax
		mov    $0x000008,%cl
		sub    $0x000006,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _06bceb_jump

	_06bce9_jump:
		xor    %eax,%eax

	_06bceb_jump:
		mov    0x000004(%esp),%edx
		mov    _0c3112_data,%di
		test   %dx,%dx
		jge    _06bd04_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		jmp    _06bd06_jump

	_06bd04_jump:
		xor    %edx,%edx

	_06bd06_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		mov    %di,_0c3112_data
		cwtl   
		shl    %cl,%eax
		mov    _0c3112_data,%di
		add    %edx,%eax
		cmp    %ax,%di
		jge    _06bd26_jump

	_06bd24_jump:
		mov    %edi,%eax

	_06bd26_jump:
		mov    0x000008(%esp),%ecx
		test   %cx,%cx
		je     _06bd54_jump
		mov    %ecx,%edx
		add    %edi,%edx
		test   %ax,%ax
		jle    _06bd46_jump
		cmp    %ax,%di
		jge    _06bd3f_jump
		mov    %edx,%edi

	_06bd3f_jump:
		cmp    %ax,%di
		jle    _06bd54_jump
		jmp    _06bd52_jump

	_06bd46_jump:
		cmp    %ax,%di
		jle    _06bd4d_jump
		mov    %edx,%edi

	_06bd4d_jump:
		cmp    %ax,%di
		jge    _06bd54_jump

	_06bd52_jump:
		mov    %eax,%edi

	_06bd54_jump:
		test   %di,%di
		je     _06bdbf_jump
		mov    $0x000004,%cl
		mov    %edi,%eax
		mov    %di,_0c3112_data
		test   %ax,%ax
		js     _06bd6e_jump
		sar    %cl,%ax
		jmp    _06bd77_jump

	_06bd6e_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06bd77_jump:
		cwtl   
		xor    %edx,%edx
		call   _05a4ac_func
		mov    %ax,_0b9338_data
		mov    $_0b92f8_data,%eax
		call   _02346c_func
		mov    _0c3112_data,%di
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		je     _06bdc6_jump
		cmpb   $0x000002,_0b9369_data
		je     _06bdc6_jump
		xor    %edi,%edi
		mov    %di,_0b9338_data
		mov    %di,_0b9340_data
		jmp    _06bdc6_jump

	_06bdbf_jump:
		mov    %di,_0b9338_data

	_06bdc6_jump:
		mov    _0b9369_data,%cl
		mov    %di,_0c3112_data
		test   %cl,%cl
		je     _06bde1_jump
		cmp    $0x000001,%cl
		je     _06bde1_jump
		cmp    $0x000003,%cl
		jne    _06bdf8_jump

	_06bde1_jump:
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06bdf8_jump
		mov    $_0b92f8_data,%eax
		call   _023aac_func

	_06bdf8_jump:
		mov    _0b9369_data,%ah
		mov    _0c3112_data,%di
		cmp    $0x000002,%ah
		jne    _06be16_jump
		cmpb   $0x00000f,_0b9368_data
		jne    _06be16_jump
		add    $0x000002,%ebx

	_06be16_jump:
		cmp    %bx,%di
		jl     _06be1f_jump
		sub    %ebx,%edi
		jmp    _06be3c_jump

	_06be1f_jump:
		movswl %bx,%edx
		movswl %di,%eax
		neg    %edx
		cmp    %edx,%eax
		jg     _06be3a_jump
		add    %ebx,%edi
		mov    %di,_0c3112_data
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		ret    

	_06be3a_jump:
		xor    %edi,%edi

	_06be3c_jump:
		mov    %di,_0c3112_data
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		ret    

_06be4c_switch:
		.long   _06c1cd_case
		.long   _06c1d6_case
		.long   _06c197_case
		.long   _06c197_case
		.long   _06c1a3_case
		.long   _06c1a3_case




_06be64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0b9340_data,%edx
		mov    $0x000010,%bh
		sar    $0x000010,%edx
		xor    %esi,%esi
		cmp    $0xffffffff,%edx
		je     _06bfcf_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%ecx
		shl    $0x000003,%eax
		add    %eax,%ecx
		testb  $0x000020,0x000085(%ecx)
		jne    _06bea6_jump
		movw   $0x00ffff,_0b9342_data

	_06bea6_jump:
		mov    0x000054(%ecx),%eax
		test   %eax,%eax
		jge    _06beaf_jump
		neg    %eax

	_06beaf_jump:
		cmp    $0x000008,%eax
		jg     _06becb_jump
		cmpl   $0x000000,0x000054(%ecx)
		jl     _06becb_jump
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06bfcf_jump

	_06becb_jump:
		mov    _0b9340_data,%edx
		mov    %esp,%eax
		sar    $0x000010,%edx
		call   _06acec_func
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06bfcf_jump
		mov    0x000054(%ecx),%eax
		test   %eax,%eax
		jge    _06bef5_jump
		neg    %eax

	_06bef5_jump:
		cmp    $0x000008,%eax
		jle    _06bfcf_jump
		mov    $0xffffffff,%edi
		mov    0x000064(%ecx),%ax
		mov    %di,_0b9342_data
		cmp    $0x0000fe,%ax
		jne    _06bf1d_jump
		movw   $0x000001,_0b9340_data

	_06bf1d_jump:
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		mov    _0b9369_data,%cl
		call   _01dea0_func
		cmpb   $0x000000,_0c33ab_data
		je     _06bf59_jump
		test   %cl,%cl
		jne    _06bf52_jump
		cmpb   $0x000028,_0b9368_data
		jne    _06bf52_jump
		mov    $0x00001a,%edx
		jmp    _06bfb5_jump

	_06bf52_jump:
		mov    $0x00001c,%edx
		jmp    _06bfb5_jump

	_06bf59_jump:
		cmp    $0x000001,%cl
		jne    _06bf94_jump
		mov    _0b9368_data,%dh
		cmp    $0x000009,%dh
		je     _06bf6e_jump
		cmp    $0x00000b,%dh
		jne    _06bf94_jump

	_06bf6e_jump:
		mov    _0b937d_data,%ah
		test   $0x000008,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,_0b937d_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0b937d_data

	_06bf94_jump:
		cmp    $0x000001,%cl
		jne    _06bfb0_jump
		cmpb   $0x000003,_0b9368_data
		jne    _06bfa9_jump
		mov    $0x000020,%edx
		jmp    _06bfb5_jump

	_06bfa9_jump:
		mov    $0x000018,%edx
		jmp    _06bfb5_jump

	_06bfb0_jump:
		mov    $0x000001,%edx

	_06bfb5_jump:
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		xor    %ecx,%ecx
		mov    %cx,_0b934a_data
		mov    %cx,_0c3140_data

	_06bfcf_jump:
		cmpb   $0x000000,_0c33c8_data
		jne    _06bfe2_jump
		mov    $_0b92f8_data,%eax
		call   _05a530_func

	_06bfe2_jump:
		cmpb   $0x000001,_0b9369_data
		jne    _06c007_jump
		mov    _0b9368_data,%dl
		cmp    $0x000009,%dl
		je     _06c000_jump
		cmp    $0x000030,%dl
		je     _06c000_jump
		cmp    $0x00000b,%dl
		jne    _06c007_jump

	_06c000_jump:
		negw   _0b9338_data

	_06c007_jump:
		mov    $0x000004,%cl
		mov    _0b9338_data,%ax
		cwtl   
		shl    %cl,%eax
		mov    _0b9338_data,%dx
		mov    %eax,%edi
		test   %dx,%dx
		je     _06c056_jump
		cwtl   
		test   %eax,%eax
		jge    _06c027_jump
		neg    %eax

	_06c027_jump:
		cmp    $0x000100,%eax
		jg     _06c032_jump
		mov    $0x0000ff,%al
		jmp    _06c034_jump

	_06c032_jump:
		xor    %al,%al

	_06c034_jump:
		mov    _0c3138_data,%cx
		test   %cx,%cx
		jle    _06c04a_jump
		addw   $0x00000a,_0b9338_data
		jmp    _06c058_jump

	_06c04a_jump:
		jge    _06c058_jump
		subw   $0x00000a,_0b9338_data
		jmp    _06c058_jump

	_06c056_jump:
		xor    %al,%al

	_06c058_jump:
		mov    _0b9369_data,%ch
		cmp    $0x000002,%ch
		jne    _06c0b1_jump
		cmpb   $0x00000f,_0b9368_data
		je     _06c076_jump
		cmpw   $0x000000,_0b9340_data
		je     _06c0aa_jump

	_06c076_jump:
		testb  $0x000008,_0b937d_data
		je     _06c089_jump
		cmpw   $0x000000,_0c3112_data
		jg     _06c09c_jump

	_06c089_jump:
		testb  $0x000008,_0b937d_data
		jne    _06c0a3_jump
		cmpw   $0x000000,_0c3112_data
		jge    _06c0a3_jump

	_06c09c_jump:
		mov    $0x00000c,%bl
		jmp    _06c22c_jump

	_06c0a3_jump:
		mov    $0x000008,%bl
		jmp    _06c22c_jump

	_06c0aa_jump:
		mov    %al,%bl
		jmp    _06c22c_jump

	_06c0b1_jump:
		test   %ch,%ch
		je     _06c0c3_jump
		cmp    $0x000001,%ch
		je     _06c0c3_jump
		cmp    $0x000003,%ch
		jne    _06c22e_jump

	_06c0c3_jump:
		mov    _0b9340_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		je     _06c132_jump
		mov    %esi,%eax
		shl    $0x000004,%eax
		add    %esi,%eax
		mov    _0b9410_data,%esi
		shl    $0x000003,%eax
		add    %eax,%esi
		cmpw   $0x0000fe,0x000064(%esi)
		jne    _06c12b_jump
		mov    0x000077(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _06c0f7_jump
		neg    %eax

	_06c0f7_jump:
		lea    0x000001(%eax),%ecx
		mov    $0x0000ff,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000001,%cl
		mov    %al,%bl
		movsbw 0x00007a(%esi),%ax
		test   %ax,%ax
		js     _06c119_jump
		sar    %cl,%ax
		jmp    _06c122_jump

	_06c119_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06c122_jump:
		mov    %eax,%esi
		neg    %esi
		jmp    _06c22e_jump

	_06c12b_jump:
		xor    %bl,%bl
		jmp    _06c22c_jump

	_06c132_jump:
		mov    _0b935e_data,%bl
		cmp    $0x000010,%bl
		jb     _06c167_jump
		jbe    _06c1df_jump
		cmp    $0x000014,%bl
		jb     _06c157_jump
		cmp    $0x000015,%bl
		jbe    _06c197_case
		cmp    $0x000018,%bl
		jb     _06c1a3_case
		jmp    _06c1df_jump

	_06c157_jump:
		cmp    $0x000012,%bl
		jb     _06c1df_jump
		jbe    _06c1cd_case
		jmp    _06c1d6_case

	_06c167_jump:
		cmp    $0x000008,%bl
		jb     _06c18d_jump
		cmp    $0x000009,%bl
		jbe    _06c1df_jump
		cmp    $0x00000e,%bl
		jb     _06c182_jump
		jbe    _06c22a_jump
		jmp    _06c1af_jump

	_06c182_jump:
		cmp    $0x00000c,%bl
		je     _06c22a_jump
		jmp    _06c1df_jump

	_06c18d_jump:
		cmp    $0x000001,%bl
		jbe    _06c1df_jump
		jmp    _06c22a_jump

	_06c197_case:
		mov    $0xfffffffc,%esi
		mov    %bh,%bl
		jmp    _06c22e_jump

	_06c1a3_case:
		mov    $0x000004,%esi
		mov    %bh,%bl
		jmp    _06c22e_jump

	_06c1af_jump:
		mov    _0b9361_data,%ah
		sub    $0x000012,%ah
		cmp    $0x000005,%ah
		ja     _06c22a_jump
		xor    %edx,%edx
		mov    %ah,%dl
		jmp    *%cs:_06be4c_switch(,%edx,4)

	_06c1cd_case:
		mov    $0xfffffffa,%esi
		mov    %bh,%bl
		jmp    _06c22e_jump

	_06c1d6_case:
		mov    $0x000006,%esi
		mov    %bh,%bl
		jmp    _06c22e_jump

	_06c1df_jump:
		xor    %edx,%edx
		mov    _0b935e_data,%dl
		testb  $0x000001,_0a525d_data(%edx)
		jne    _06c208_jump
		xor    %edx,%edx
		mov    _0b9362_data,%dl
		mov    _0a525d_data(%edx),%cl
		test   $0x000008,%cl
		jne    _06c208_jump
		test   $0x000002,%cl
		jne    _06c22a_jump

	_06c208_jump:
		cmpw   $0x000000,_0b9338_data
		jne    _06c226_jump
		cmpw   $0x000000,_0c3112_data
		jne    _06c226_jump
		cmpw   $0x000000,_0c3138_data
		je     _06c22a_jump

	_06c226_jump:
		mov    %bh,%bl
		jmp    _06c22c_jump

	_06c22a_jump:
		mov    %al,%bl

	_06c22c_jump:
		xor    %esi,%esi

	_06c22e_jump:
		cmpb   $0x000001,_0c33ab_data
		jne    _06c239_jump
		shr    %bl

	_06c239_jump:
		mov    _0c3136_data,%ecx
		movswl %di,%eax
		movswl %si,%edx
		sar    $0x000010,%ecx
		movzbl %bl,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _06bbd0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06c260_switch:
		.long   _06c2e7_case
		.long   _06c2f5_case
		.long   _06c2f5_case
		.long   _06c2e7_case
		.long   _06c2e7_case
		.long   _06c2e7_case
		.long   _06c2f5_case
		.long   _06c2e7_case
		.long   _06c2cf_case
		.long   _06c2db_case
		.long   _06c2cf_case
		.long   _06c2db_case




_06c290_func:
		push   %ebx
		push   %edx
		cmpb   $0x000001,_0b9369_data
		je     _06c2a8_jump
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06c312_jump

	_06c2a8_jump:
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0b9368_data,%al
		add    %edx,%eax
		sub    $0x000100,%eax
		cmp    $0x00000b,%eax
		ja     _06c2f5_case
		jmp    *%cs:_06c260_switch(,%eax,4)

	_06c2cf_case:
		mov    $0x00002f,%ebx
		mov    $_0b92f8_data,%eax
		jmp    _06c2ee_jump

	_06c2db_case:
		mov    $0x000030,%ebx
		mov    $_0b92f8_data,%eax
		jmp    _06c2ee_jump

	_06c2e7_case:
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx

	_06c2ee_jump:
		xor    %edx,%edx
		call   _01dea8_func

	_06c2f5_case:
		mov    _0c3112_data,%bx
		test   %bx,%bx
		jne    _06c33a_jump
		mov    %bx,_0b933a_data
		mov    %bx,_0b9338_data
		pop    %edx
		pop    %ebx
		ret    

	_06c312_jump:
		cmpb   $0x000004,_0b9369_data
		jne    _06c33a_jump
		mov    _0c1158_data,%dh
		test   %dh,%dh
		jne    _06c33a_jump
		xor    %dl,%dl
		mov    $_0b92f8_data,%eax
		mov    %dx,_0b933a_data
		xor    %edx,%edx
		call   _01de98_func

	_06c33a_jump:
		pop    %edx
		pop    %ebx
		ret    



_06c340_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0b9368_data,%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _06c46d_jump
		cmpb   $0x000001,_0c33ce_data
		jne    _06c46d_jump
		call   *_0af028_data
		test   %ax,%ax
		je     _06c46d_jump
		testb  $0x000008,_0c3347_data
		je     _06c424_jump
		testb  $0x000018,_0c3348_data
		jne    _06c424_jump
		mov    $0x000002,%al
		mov    $0x00000e,%edx
		mov    %al,_0c33ce_data
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0b9369_data,%al
		mov    _0b9368_data,%dl
		mov    (%ebx,%eax,4),%eax
		mov    0x000005(%eax,%edx,8),%cl
		and    $0x00000f,%cl
		mov    %cl,0x000005(%eax,%edx,8)
		mov    %cl,%ch
		or     $0x000030,%ch
		mov    %ch,0x000005(%eax,%edx,8)
		mov    0x000008(%ebx),%eax
		mov    $0xffffffff,%esi
		mov    0x00007d(%eax),%dl
		mov    %si,_0c315c_data
		and    $0x00000f,%dl
		xor    %cl,%cl
		mov    %dl,0x00007d(%eax)
		mov    %dl,%dh
		mov    %cl,_0c33c6_data
		or     $0x000020,%dh
		mov    %cl,_0c33b3_data
		mov    %dh,0x00007d(%eax)
		xor    %al,%al
		mov    %si,_0b934a_data
		xor    %ah,%ah
		mov    %cl,_0b937b_data
		mov    %ax,_0c3108_data
		jmp    _06c46d_jump

	_06c424_jump:
		testb  $0x000004,_0c3347_data
		je     _06c46d_jump
		testb  $0x000018,_0c3348_data
		jne    _06c46d_jump
		mov    $0x000002,%cl
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax
		mov    %cl,_0c33ce_data
		call   _01de98_func
		xor    %ch,%ch
		mov    $0x000032,%edx
		mov    %ch,_0b9367_data
		mov    $0xffffffff,%ecx
		mov    %dx,_0c315c_data
		mov    %cx,_0b934a_data

	_06c46d_jump:
		cmpb   $0x00000f,_0b9368_data
		jne    _06c4b8_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0b9368_data,%dl
		mov    _0b9369_data,%al
		shl    $0x000003,%edx
		mov    (%ebx,%eax,4),%eax
		add    %edx,%eax
		mov    0x000005(%eax),%dl
		and    $0x0000f0,%dl
		cmp    $0x000020,%dl
		jne    _06c4b8_jump
		mov    0x000005(%eax),%dl
		and    $0x00000f,%dl
		mov    %dl,0x000005(%eax)
		mov    %dl,%dh
		or     $0x0000a0,%dh
		xor    %cl,%cl
		mov    %dh,0x000005(%eax)
		mov    %cl,_0b936d_data
		movb   $0x000014,_0b936e_data

	_06c4b8_jump:
		cmpb   $0x000003,_0c33ce_data
		jne    _06c4cc_jump
		call   *_0af028_data
		test   %ax,%ax
		jne    _06c4da_jump

	_06c4cc_jump:
		cmpw   $0x000000,_0c315c_data
		jne    _06c687_jump

	_06c4da_jump:
		testb  $0x000008,_0c3347_data
		je     _06c651_jump
		testb  $0x000018,_0c3348_data
		jne    _06c651_jump
		mov    _0b9368_data,%cl
		cmp    $0x00000f,%cl
		jne    _06c687_jump
		cmpw   $0x000000,_0c315c_data
		je     _06c687_jump
		movb   $0x000002,_0c33ce_data
		movb   $0x000001,_0c33c6_data
		xor    %eax,%eax
		mov    _0b9369_data,%al
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %ch,%ch
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %cl,%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %ch,_0b936d_data
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x0000a0,%bh
		mov    $0x000014,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %cl,_0b936e_data
		mov    _0c33b3_data,%ch
		mov    $0xffffffff,%eax
		inc    %ch
		mov    %ax,_0b933a_data
		mov    %ch,_0c33b3_data
		cmp    $0x000002,%ch
		jb     _06c643_jump
		cmpw   $0x000000,_0c310e_data
		jl     _06c62a_jump
		testb  $0x000008,_0b937d_data
		jne    _06c5b1_jump
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jg     _06c5b1_jump
		call   _041d14_func
		test   %ax,%ax
		je     _06c5b1_jump
		movw   $0x00ffd0,_0b9338_data
		jmp    _06c5ec_jump

	_06c5b1_jump:
		testb  $0x000008,_0b937d_data
		je     _06c5d9_jump
		cmpw   $0x000002,_0b9338_data
		jl     _06c5d9_jump
		call   _041d78_func
		test   %ax,%ax
		je     _06c5d9_jump
		movw   $0x000030,_0b9338_data
		jmp    _06c5ec_jump

	_06c5d9_jump:
		cmpw   $0x000000,_0b9338_data
		jne    _06c5ec_jump
		movw   $0x00fffe,_0b933a_data

	_06c5ec_jump:
		mov    $0x000046,%ecx
		mov    _0b9338_data,%ax
		xor    %bl,%bl
		xor    %edx,%edx
		mov    %cx,_0c315c_data
		mov    %bl,_0c33b3_data
		mov    $0x000004,%cl
		mov    _0c3136_data,%ebx
		cwtl   
		shl    %cl,%eax
		sar    $0x000010,%ebx
		cwtl   
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x0000ff,%eax
		call   _06bbd0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c62a_jump:
		mov    $0x000001,%ah
		mov    $0x000014,%ecx
		mov    %ah,_0c33b3_data
		mov    %cx,_0c310e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c643_jump:
		movw   $0x000014,_0c310e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c651_jump:
		mov    _0c315c_data,%bx
		test   %bx,%bx
		jne    _06c687_jump
		mov    $0x000004,%dh
		mov    $_0b92f8_data,%eax
		mov    %dh,_0c33ce_data
		mov    $0x000005,%edx
		mov    $0xffffffff,%ecx
		call   _01de98_func
		mov    %cx,_0c315c_data
		mov    %bx,_0b934a_data

	_06c687_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c68c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%ecx
		cmpb   $0x000002,_0b9369_data
		jne    _06c6af_jump
		cmpb   $0x000008,_0b9368_data
		jne    _06c6af_jump
		movw   $0x00005a,_0b9354_data

	_06c6af_jump:
		mov    $0x000005,%edx
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		mov    _0b9354_data,%eax
		mov    $0x000020,%edx
		sar    $0x000010,%eax
		call   _01dc70_func
		testb  $0x000002,_0c3348_data
		je     _06c6e2_jump
		mov    $0x000003,%edx
		jmp    _06c6e7_jump

	_06c6e2_jump:
		mov    $0x000007,%edx

	_06c6e7_jump:
		testb  $0x000008,_0b937d_data
		je     _06c701_jump
		mov    $0x000010,%ebx
		and    $0x0000ff,%edx
		sub    %edx,%ebx
		mov    %ebx,%edx
		jmp    _06c707_jump

	_06c701_jump:
		and    $0x0000ff,%edx

	_06c707_jump:
		mov    %edx,%ebx
		testb  $0x000002,_0c3348_data
		je     _06c717_jump
		add    $0x000025,%eax

	_06c717_jump:
		movswl %cx,%edx
		sar    $0x000004,%edx
		cwtl   
		shl    $0x000004,%edx
		mov    $0xffffffff,%edi
		sub    %eax,%edx
		mov    %di,_0b9342_data
		mov    %edx,_0b9324_data
		movswl %si,%edx
		xor    %eax,%eax
		sar    $0x000004,%edx
		mov    _0b9364_data,%al
		shl    $0x000004,%edx
		xor    %ecx,%ecx
		sub    %eax,%edx
		movswl %bx,%eax
		dec    %edx
		mov    %cx,_0c3112_data
		add    %eax,%edx
		xor    %ebx,%ebx
		mov    %edx,_0b9320_data
		mov    %bx,_0b933a_data
		mov    %bx,_0b9338_data
		mov    %bx,_0b934a_data
		xor    %dh,%dh
		xor    %bl,%bl
		mov    %dh,_0b936d_data
		xor    %dl,%dl
		mov    %bl,_0b936e_data
		mov    %dx,_0c3140_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06c794_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c112c_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_0a525d_data(%edx)
		jne    _06c7be_jump
		cmp    $0x00000a,%al
		je     _06c7be_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_06c7be_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_06c7c4_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c112c_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_0a525d_data(%edx)
		jne    _06c7e7_jump
		cmp    $0x00000a,%al
		jne    _06c7ee_jump

	_06c7e7_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_06c7ee_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_06c7f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		testb  $0x000002,_0c3347_data
		je     _06ca9a_jump
		testb  $0x000018,_0c3348_data
		jne    _06ca9a_jump
		xor    %eax,%eax
		mov    _0b9320_data,%dx
		mov    _0b9364_data,%al
		add    %eax,%edx
		mov    %dx,0x000018(%esp)
		mov    0x000016(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		mov    $0x000001,%ebx
		sar    $0x000004,%eax
		xor    %ecx,%ecx
		mov    %ax,0x000010(%esp)
		mov    _0c1124_data,%cx
		mov    0x00000e(%esp),%eax
		sub    $0x000002,%ecx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06c864_jump
		cmp    %ecx,%eax
		jg     _06c864_jump
		mov    $0x000001,%eax
		jmp    _06c866_jump

	_06c864_jump:
		xor    %eax,%eax

	_06c866_jump:
		test   %eax,%eax
		je     _06ca9a_jump
		xor    %eax,%eax
		mov    _0b9324_data,%dx
		mov    _0b9370_data,%al
		add    %edx,%eax
		add    $0x000020,%eax
		mov    _0b9356_data,%bx
		mov    %ax,0x000014(%esp)
		test   %bx,%bx
		je     _06c8c0_jump
		xor    %eax,%eax
		mov    _0b9365_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01dc20_func
		mov    0x000012(%esp),%edx
		mov    _0b9354_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01dcd4_func
		mov    %ax,0x000014(%esp)

	_06c8c0_jump:
		testb  $0x000008,_0b937d_data
		je     _06c8d0_jump
		mov    $0x000001,%eax
		jmp    _06c8d5_jump

	_06c8d0_jump:
		mov    $0xffffffff,%eax

	_06c8d5_jump:
		mov    %ax,0x00000c(%esp)
		mov    0x000012(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0c1124_data,%dx
		sar    $0x000004,%eax
		imul   %edx,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    %ebx,%ecx
		sar    $0x000010,%eax
		sub    %edx,%ecx
		add    %eax,%ecx
		mov    %ecx,0x000008(%esp)
		test   %ecx,%ecx
		jl     _06ca9a_jump
		lea    (%ebx,%edx,1),%esi
		lea    (%esi,%edx,1),%ecx
		lea    (%ecx,%edx,1),%ebp
		lea    (%ecx,%eax,1),%edx
		lea    (%ebx,%eax,1),%edi
		mov    %edx,0x000004(%esp)
		lea    (%esi,%eax,1),%edx
		mov    _0b9356_data,%ax
		mov    %edx,(%esp)
		test   %ax,%ax
		je     _06c938_jump
		mov    %ecx,%ebp

	_06c938_jump:
		mov    %edi,%eax
		call   _06c7c4_func
		test   %ax,%ax
		jne    _06c963_jump
		mov    (%esp),%eax
		call   _06c7c4_func
		test   %ax,%ax
		jne    _06c963_jump
		mov    0x000004(%esp),%eax
		call   _06c7c4_func
		test   %ax,%ax
		je     _06ca9a_jump

	_06c963_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _06ca9a_jump
		cmpw   $0x000008,_0c3140_data
		jle    _06ca9a_jump
		mov    %ebx,%eax
		call   _06c794_func
		test   %ax,%ax
		je     _06c9db_jump
		mov    %ecx,%eax
		call   _06c794_func
		test   %ax,%ax
		je     _06c9db_jump
		mov    %esi,%eax
		call   _06c794_func
		test   %ax,%ax
		je     _06c9db_jump
		mov    0x000008(%esp),%eax
		call   _06c794_func
		test   %ax,%ax
		je     _06c9db_jump
		mov    %ebp,%eax
		call   _06c794_func
		test   %ax,%ax
		je     _06c9db_jump
		mov    %edi,%eax
		call   _06c7c4_func
		test   %ax,%ax
		je     _06c9db_jump
		mov    0x000012(%esp),%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		jmp    _06ca95_jump

	_06c9db_jump:
		cmpw   $0x000000,_0b9356_data
		jne    _06ca9a_jump
		cmpw   $0x000002,0x000010(%esp)
		jge    _06c9fe_jump
		testb  $0x000008,_0b937d_data
		jne    _06ca9a_jump

	_06c9fe_jump:
		xor    %eax,%eax
		mov    0x00000e(%esp),%edx
		mov    _0c1124_data,%ax
		sar    $0x000010,%edx
		sub    $0x000003,%eax
		cmp    %eax,%edx
		jle    _06ca21_jump
		testb  $0x000008,_0b937d_data
		je     _06ca9a_jump

	_06ca21_jump:
		mov    0x00000a(%esp),%edx
		mov    %ebx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		call   _06c794_func
		test   %ax,%ax
		je     _06ca9a_jump
		mov    %ecx,%eax
		sub    %edx,%eax
		call   _06c794_func
		test   %ax,%ax
		je     _06ca9a_jump
		mov    %esi,%eax
		sub    %edx,%eax
		call   _06c794_func
		test   %ax,%ax
		je     _06ca9a_jump
		mov    0x000008(%esp),%eax
		sub    %edx,%eax
		call   _06c794_func
		test   %ax,%ax
		je     _06ca9a_jump
		mov    %ebp,%eax
		sub    %edx,%eax
		call   _06c794_func
		test   %ax,%ax
		je     _06ca9a_jump
		mov    %edi,%eax
		sub    %edx,%eax
		call   _06c7c4_func
		test   %ax,%ax
		je     _06ca9a_jump
		mov    0x00000c(%esp),%eax
		mov    0x000018(%esp),%ebx
		shl    $0x000004,%eax
		mov    0x000012(%esp),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax

	_06ca95_jump:
		call   _06c68c_func

	_06ca9a_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06caa4_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0c33ab_data
		je     _06cad6_jump
		cmpb   $0x000000,_0b9369_data
		jne    _06cacc_jump
		cmpb   $0x000028,_0b9368_data
		jne    _06cacc_jump
		mov    $0x00001a,%ebx
		jmp    _06cb3f_jump

	_06cacc_jump:
		mov    $0x00001c,%ebx
		jmp    _06cb3f_jump

	_06cad6_jump:
		mov    _0b9369_data,%dl
		cmp    $0x000001,%dl
		jne    _06cb10_jump
		cmpb   $0x00000b,_0b9368_data
		jne    _06cb10_jump
		mov    _0b937d_data,%bl
		test   $0x000008,%bl
		sete   %al
		mov    %bl,%bh
		and    %dl,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%cl
		mov    %bh,_0b937d_data
		or     %al,%cl
		mov    %cl,_0b937d_data

	_06cb10_jump:
		cmpb   $0x000005,_0b9369_data
		jne    _06cb20_jump
		mov    $0x000001,%ebx
		jmp    _06cb3f_jump

	_06cb20_jump:
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06cb2e_jump
		neg    %eax

	_06cb2e_jump:
		cmp    $0x000002,%eax
		jg     _06cb3a_jump
		mov    $0x000018,%ebx
		jmp    _06cb3f_jump

	_06cb3a_jump:
		mov    $0x000020,%ebx

	_06cb3f_jump:
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		xor    %edx,%edx
		mov    $0xffffffff,%ebx
		mov    %dx,_0c3140_data
		mov    %bx,_0c315c_data
		xor    %dl,%dl
		mov    %bx,_0b9342_data
		mov    %dl,_0b936d_data
		mov    %dl,_0b936e_data
		mov    %dl,_0c33ce_data
		mov    %dl,_0c1158_data
		call   _06b868_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06cb90_switch:
		.long   _06cc61_case
		.long   _06cded_case
		.long   _06ced2_case
		.long   _06ced2_case
		.long   _06cbcb_case
		.long   _06ce88_case
		.long   _06ce9a_case




_06cbac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0b9369_data,%al
		cmp    $0x000006,%al
		ja     _06ced2_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06cb90_switch(,%eax,4)

	_06cbcb_case:
		mov    _0b9368_data,%dh
		cmp    $0x00000b,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06cc52_jump
		cmp    $0x00000c,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06cc52_jump
		mov    $0x000001,%edi
		mov    _0b9356_data,%ax
		mov    %di,_0b933a_data
		test   %ax,%ax
		je     _06cc19_jump
		cmpb   $0x000000,_0c334c_data
		je     _06cc19_jump
		mov    $_0b92f8_data,%eax
		call   _05b0d8_func

	_06cc19_jump:
		call   _06aac8_func
		cmpb   $0x00000c,_0c33cd_data
		je     _06cc31_jump
		call   _06caa4_func
		jmp    _06ced2_case

	_06cc31_jump:
		cmpb   $0x000003,_0b9368_data
		je     _06ced2_case
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		jmp    _06ced2_case

	_06cc52_jump:
		xor    %esi,%esi
		mov    %si,_0b933a_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06cc61_case:
		mov    _0b9368_data,%ah
		test   %ah,%ah
		je     _06cce2_jump
		cmp    $0x000001,%ah
		je     _06cce2_jump
		cmp    $0x000002,%ah
		je     _06cce2_jump
		cmp    $0x000003,%ah
		je     _06cce2_jump
		cmp    $0x000031,%ah
		je     _06cce2_jump
		cmp    $0x000008,%ah
		je     _06cce2_jump
		cmp    $0x00002b,%ah
		je     _06cce2_jump
		cmp    $0x000024,%ah
		je     _06cce2_jump
		cmp    $0x000025,%ah
		je     _06cce2_jump
		cmp    $0x000026,%ah
		je     _06cce2_jump
		cmp    $0x000027,%ah
		je     _06cce2_jump
		cmp    $0x000028,%ah
		je     _06cce2_jump
		cmp    $0x000029,%ah
		je     _06cce2_jump
		cmp    $0x00002a,%ah
		je     _06cce2_jump
		cmp    $0x00000d,%ah
		je     _06cce2_jump
		cmp    $0x00003b,%ah
		je     _06cce2_jump
		cmp    $0x00003e,%ah
		je     _06cce2_jump
		cmp    $0x00003f,%ah
		je     _06cce2_jump
		cmp    $0x000040,%ah
		je     _06cce2_jump
		cmp    $0x000041,%ah
		jne    _06ccfe_jump

	_06cce2_jump:
		cmpl   $0x000000,_0a7d34_data
		jne    _06cde2_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		jmp    _06cdd8_jump

	_06ccfe_jump:
		cmp    $0x000014,%ah
		jne    _06cd82_jump
		mov    $_0b92f8_data,%eax
		call   _01d740_func
		test   %al,%al
		je     _06cd82_jump
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0b9368_data,%al
		mov    (%ebx),%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		mov    0x000007(%ebx),%dh
		lea    0x000007(%ebx),%eax
		test   $0x000010,%dh
		sete   %dl
		mov    (%eax),%cl
		and    $0x000001,%dl
		and    $0x0000ef,%cl
		shl    $0x000004,%dl
		mov    %cl,(%eax)
		mov    %cl,%ch
		or     %dl,%ch
		mov    $0x000001,%edx
		mov    %ch,(%eax)
		mov    $_0b92f8_data,%eax
		call   _05b060_func
		lea    0x000007(%ebx),%eax
		testb  $0x000010,0x000007(%ebx)
		sete   %bl
		mov    (%eax),%dh
		and    $0x000001,%bl
		and    $0x0000ef,%dh
		shl    $0x000004,%bl
		mov    %dh,%bh
		mov    %dh,(%eax)
		or     %bl,%bh
		mov    %bh,(%eax)
		jmp    _06cde2_jump

	_06cd82_jump:
		call   *_0af028_data
		test   %ax,%ax
		je     _06cde2_jump
		cmpb   $0x000000,_0c33ab_data
		jne    _06cde2_jump
		cmpb   $0x000000,_0c1156_data
		jne    _06cdce_jump
		mov    _0b9368_data,%al
		cmp    $0x00000b,%al
		je     _06cdac_jump
		cmp    $0x00000c,%al
		jne    _06cdce_jump

	_06cdac_jump:
		xor    %dl,%dl
		mov    $0x000006,%ebx
		mov    %dl,_0c1158_data
		xor    %dh,%dh
		mov    $_0b92f8_data,%eax
		mov    %dx,_0c1150_data
		mov    $0x000003,%edx
		jmp    _06cddd_jump

	_06cdce_jump:
		mov    $0x000008,%ebx
		mov    $0x000001,%edx

	_06cdd8_jump:
		mov    $_0b92f8_data,%eax

	_06cddd_jump:
		call   _01dea8_func

	_06cde2_jump:
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06cded_case:
		cmpb   $0x000000,_0b9368_data
		jne    _06ce23_jump
		call   *_0af028_data
		test   %ax,%ax
		je     _06ce23_jump
		cmpb   $0x000000,_0c33ab_data
		jne    _06ce23_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		jmp    _06ce7d_jump

	_06ce23_jump:
		mov    _0b9368_data,%dl
		cmp    $0x000008,%dl
		je     _06ce3d_jump
		cmp    $0x00000a,%dl
		je     _06ce3d_jump
		cmp    $0x000009,%dl
		je     _06ce3d_jump
		cmp    $0x00000b,%dl
		jne    _06ce6f_jump

	_06ce3d_jump:
		call   *_0af028_data
		test   %ax,%ax
		je     _06ce51_jump
		cmpb   $0x000000,_0c33ab_data
		je     _06ce7d_jump

	_06ce51_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _06ce6f_jump
		call   *_0af028_data
		test   %ax,%ax
		je     _06ce6f_jump
		cmpb   $0x000000,_0c33ab_data
		je     _06ce7d_jump

	_06ce6f_jump:
		testb  $0x000018,_0c3348_data
		jne    _06ce7d_jump
		call   _06c290_func

	_06ce7d_jump:
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ce88_case:
		addl   $0x00000e,_0b9324_data
		call   _06caa4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ce9a_case:
		mov    _0b937d_data,%ah
		mov    _0b933a_data,%bx
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    %dx,_0c3112_data
		mov    %ah,_0b937d_data
		cmp    $0x000003,%bx
		jge    _06ced2_case
		cmpb   $0x000000,_0b936d_data
		jne    _06ced2_case
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,_0b933a_data

	_06ced2_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06ced8_switch:
		.long   _06cff1_case
		.long   _06cfcc_case
		.long   _06d0ab_case
		.long   _06d0ab_case
		.long   _06cf12_case
		.long   _06cfe3_case
		.long   _06d07e_case




_06cef4_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    _0b9369_data,%al
		cmp    $0x000006,%al
		ja     _06d0ab_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06ced8_switch(,%eax,4)

	_06cf12_case:
		mov    _0b9368_data,%dh
		cmp    $0x00000b,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06cfbe_jump
		cmp    $0x00000c,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06cfbe_jump
		call   _06aac8_func
		mov    _0c33cd_data,%bh
		test   %bh,%bh
		jne    _06cf63_jump
		call   _06caa4_func
		mov    $0x00000a,%al
		mov    $0x000001,%ebx
		mov    %al,_0b937b_data
		mov    %bx,_0b933a_data
		jmp    _06cf9d_jump

	_06cf63_jump:
		cmp    $0x00000c,%bh
		je     _06cf73_jump
		xor    %edx,%edx
		mov    %dx,_0b933a_data
		jmp    _06cf9d_jump

	_06cf73_jump:
		mov    $0xffffffff,%edi
		mov    _0b9356_data,%ax
		mov    %di,_0b933a_data
		test   %ax,%ax
		je     _06cf9d_jump
		cmpb   $0x000000,_0c334c_data
		je     _06cf9d_jump
		mov    $_0b92f8_data,%eax
		call   _05b0d8_func

	_06cf9d_jump:
		cmpb   $0x000002,_0b9368_data
		je     _06d0ab_case
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06cfbe_jump:
		xor    %esi,%esi
		mov    %si,_0b933a_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06cfcc_case:
		testb  $0x000018,_0c3348_data
		jne    _06d0ab_case
		call   _06c290_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06cfe3_case:
		movw   $0x0000ff,_0c314e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06cff1_case:
		cmpb   $0x000025,_0b9368_data
		jne    _06d01e_jump
		mov    _0c3110_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06d008_jump
		neg    %eax

	_06d008_jump:
		cmp    $0x000080,%eax
		jg     _06d01e_jump
		mov    $0x000026,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func

	_06d01e_jump:
		call   _06be64_func
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06d039_jump
		movw   $0x0000ff,_0c314e_data

	_06d039_jump:
		cmpb   $0x000000,_0b9369_data
		jne    _06d0ab_case
		cmpb   $0x00000f,_0b9368_data
		jne    _06d0ab_case
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _0230e0_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		jne    _06d0ab_case
		mov    $0x00003c,%ebx
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		call   _01dea8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06d07e_case:
		orb    $0x000008,_0b937d_data
		mov    _0b9338_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %dx,_0c3112_data
		cmp    $0xfffffffd,%eax
		jle    _06d0ab_case
		cmpb   $0x000000,_0b936d_data
		jne    _06d0ab_case
		decw   _0b933a_data

	_06d0ab_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_06d0b0_switch:
		.long   _06d271_case
		.long   _06d0ec_case
		.long   _06d442_case
		.long   _06d69f_case
		.long   _06d4ac_case
		.long   _06d61c_case
		.long   _06d644_case




_06d0cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0b9369_data,%al
		cmp    $0x000006,%al
		ja     _06d69f_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_06d0b0_switch(,%edx,4)

	_06d0ec_case:
		mov    _0a56fd_data,%bh
		inc    %bh
		mov    _0b9368_data,%al
		mov    %bh,_0a56fd_data
		cmp    $0x000008,%al
		je     _06d107_jump
		cmp    $0x00000a,%al
		jne    _06d143_jump

	_06d107_jump:
		call   *_0af028_data
		test   %ax,%ax
		je     _06d125_jump
		cmpb   $0x000000,_0c33ab_data
		jne    _06d125_jump
		call   _041ddc_func
		test   %ax,%ax
		jne    _06d12c_jump

	_06d125_jump:
		mov    $0x000001,%edx
		jmp    _06d12e_jump

	_06d12c_jump:
		xor    %edx,%edx

	_06d12e_jump:
		test   %edx,%edx
		je     _06d143_jump
		mov    $0x00002f,%ebx
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		jmp    _06d1c2_jump

	_06d143_jump:
		mov    _0b9368_data,%dh
		cmp    $0x000009,%dh
		je     _06d153_jump
		cmp    $0x00000b,%dh
		jne    _06d18c_jump

	_06d153_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _06d171_jump
		call   *_0af028_data
		test   %ax,%ax
		je     _06d171_jump
		cmpb   $0x000000,_0c33ab_data
		je     _06d178_jump

	_06d171_jump:
		mov    $0x000001,%edx
		jmp    _06d17a_jump

	_06d178_jump:
		xor    %edx,%edx

	_06d17a_jump:
		test   %edx,%edx
		je     _06d18c_jump
		mov    $0x000030,%ebx
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		jmp    _06d1c2_jump

	_06d18c_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _06d1c7_jump
		call   *_0af028_data
		test   %ax,%ax
		je     _06d1c7_jump
		cmpb   $0x000000,_0c33ab_data
		jne    _06d1c7_jump
		cmpb   $0x000000,_0b9368_data
		jne    _06d1c7_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax

	_06d1c2_jump:
		call   _01dea8_func

	_06d1c7_jump:
		mov    _0b937d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06d227_jump
		mov    _0b9368_data,%bl
		cmp    $0x000008,%bl
		je     _06d1e6_jump
		cmp    $0x00000a,%bl
		jne    _06d1f9_jump

	_06d1e6_jump:
		mov    $0x000032,%ebx
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		call   _01dea8_func
		jmp    _06d246_jump

	_06d1f9_jump:
		cmp    $0x00000b,%bl
		je     _06d246_jump
		cmp    $0x000032,%bl
		je     _06d246_jump
		cmp    $0x000033,%bl
		je     _06d246_jump
		cmpb   $0x000001,_0c33c4_data
		je     _06d246_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		jmp    _06d246_jump

	_06d227_jump:
		mov    _0b9368_data,%dl
		cmp    $0x000009,%dl
		je     _06d237_jump
		cmp    $0x00000b,%dl
		jne    _06d246_jump

	_06d237_jump:
		mov    $0x00000a,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func

	_06d246_jump:
		mov    _0b937d_data,%bl
		mov    %cl,%al
		and    $0x0000f7,%bl
		and    $0x000001,%al
		mov    %bl,_0b937d_data
		shl    $0x000003,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,_0b937d_data
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d271_case:
		incb   _0a56fd_data
		mov    _0b9368_data,%ah
		cmp    $0x00000f,%ah
		je     _06d290_jump
		cmp    $0x00002f,%ah
		je     _06d290_jump
		cmp    $0x000030,%ah
		jne    _06d30c_jump

	_06d290_jump:
		call   *_0af028_data
		test   %ax,%ax
		je     _06d30c_jump
		cmpb   $0x000000,_0c33ab_data
		jne    _06d30c_jump
		call   _041ddc_func
		test   %ax,%ax
		je     _06d30c_jump
		mov    _0b937d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		jne    _06d2d6_jump
		mov    $0x000008,%ebx
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		jmp    _06d437_jump

	_06d2d6_jump:
		mov    %cl,%al
		and    $0x000001,%al
		mov    _0b937d_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0b937d_data
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0x000033,%ebx
		or     %al,%dl
		mov    $_0b92f8_data,%eax
		mov    %dl,_0b937d_data
		xor    %edx,%edx
		call   _01dea8_func
		jmp    _06d437_jump

	_06d30c_jump:
		cmpb   $0x00000f,_0b9368_data
		jne    _06d357_jump
		call   _041ddc_func
		test   %ax,%ax
		jne    _06d357_jump
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _0230e0_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000010,_0a525d_data(%edx)
		jne    _06d357_jump
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d357_jump:
		mov    _0b9368_data,%ah
		cmp    $0x00000c,%ah
		je     _06d437_jump
		cmp    $0x00000b,%ah
		je     _06d437_jump
		cmp    $0x000012,%ah
		je     _06d437_jump
		cmp    $0x000014,%ah
		je     _06d437_jump
		cmp    $0x00000f,%ah
		je     _06d437_jump
		cmp    $0x00002f,%ah
		je     _06d437_jump
		cmp    $0x000030,%ah
		je     _06d437_jump
		cmp    $0x000032,%ah
		je     _06d437_jump
		cmp    $0x000033,%ah
		je     _06d437_jump
		cmp    $0x00003d,%ah
		je     _06d437_jump
		mov    _0b937d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06d41c_jump
		cmpb   $0x000001,_0c33c4_data
		je     _06d3e0_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		jmp    _06d3ec_jump

	_06d3e0_jump:
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx

	_06d3ec_jump:
		call   _01dea8_func
		mov    %cl,%al
		mov    _0b937d_data,%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,_0b937d_data
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,_0b937d_data
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d41c_jump:
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea0_func
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		call   _01de98_func

	_06d437_jump:
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d442_case:
		mov    _0a56fd_data,%bh
		mov    _0b9368_data,%ah
		inc    %bh
		xor    %edx,%edx
		mov    %bh,_0a56fd_data
		cmp    $0x00000f,%ah
		setne  %dl
		test   %edx,%edx
		je     _06d473_jump
		mov    _0b9340_data,%ax
		test   %ax,%ax
		jne    _06d473_jump
		mov    %ax,_0c3112_data

	_06d473_jump:
		call   _06be64_func
		cmpb   $0x000000,_0c33ab_data
		jne    _06d4a1_jump
		mov    %cl,%al
		mov    _0b937d_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0b937d_data
		or     %al,%bl
		mov    %bl,_0b937d_data

	_06d4a1_jump:
		call   _06c7f4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d4ac_case:
		mov    _0a56fd_data,%bh
		inc    %bh
		mov    _0b9368_data,%al
		mov    %bh,_0a56fd_data
		cmp    $0x000002,%al
		jne    _06d4cd_jump
		call   _041e40_func
		test   %ax,%ax
		jne    _06d4e0_jump

	_06d4cd_jump:
		cmpb   $0x000003,_0b9368_data
		jne    _06d521_jump
		call   _041ddc_func
		test   %ax,%ax
		je     _06d521_jump

	_06d4e0_jump:
		call   _06aac8_func
		mov    _0c33cd_data,%bl
		test   %bl,%bl
		jne    _06d51a_jump
		cmpb   $0x000002,_0b9368_data
		jne    _06d513_jump
		call   _06caa4_func
		mov    $0x00000a,%ah
		mov    $0x000001,%esi
		mov    %ah,_0b937b_data
		mov    %si,_0b933a_data
		jmp    _06d536_jump

	_06d513_jump:
		call   _06caa4_func
		jmp    _06d536_jump

	_06d51a_jump:
		cmp    $0x00000c,%bl
		je     _06d536_jump
		jmp    _06d531_jump

	_06d521_jump:
		mov    _0b9368_data,%dl
		cmp    $0x000002,%dl
		je     _06d531_jump
		cmp    $0x000003,%dl
		jne    _06d536_jump

	_06d531_jump:
		call   _06c290_func

	_06d536_jump:
		call   *_0af028_data
		test   %ax,%ax
		je     _06d5a7_jump
		xor    %edx,%edx
		mov    _0c33ce_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _06d5a7_jump
		cmpb   $0x00000b,_0b9368_data
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06d5a7_jump
		cmpb   $0x00000c,_0b9368_data
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06d5a7_jump
		mov    _0b9368_data,%bl
		xor    %edx,%edx
		cmp    $0x00000d,%bl
		setne  %dl
		test   %edx,%edx
		je     _06d5a7_jump
		mov    $0x000100,%edi
		call   _06b944_func
		mov    %di,_0c3112_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d5a7_jump:
		cmpb   $0x00000d,_0b9368_data
		jne    _06d5ce_jump
		mov    _0b937d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06d5ce_jump
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func

	_06d5ce_jump:
		mov    _0b9368_data,%ah
		xor    %edx,%edx
		cmp    $0x00000b,%ah
		setne  %dl
		test   %edx,%edx
		je     _06d69f_case
		cmp    $0x00000c,%ah
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06d69f_case
		mov    %cl,%al
		mov    _0b937d_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0b937d_data
		or     %al,%bl
		mov    %bl,_0b937d_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d61c_case:
		mov    _0b937d_data,%al
		mov    _0a56fd_data,%bl
		shl    $0x000004,%al
		inc    %bl
		shr    $0x000007,%al
		mov    %bl,_0a56fd_data
		cmp    %cl,%al
		je     _06d69f_case
		call   _06caa4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d644_case:
		xor    %edx,%edx
		mov    _0b937d_data,%ah
		mov    %dx,_0c3112_data
		mov    _0a56fd_data,%dl
		or     $0x000008,%ah
		inc    %dl
		mov    %ah,_0b937d_data
		mov    %dl,_0a56fd_data
		test   %cx,%cx
		je     _06d674_jump
		movswl %cx,%edx
		jmp    _06d679_jump

	_06d674_jump:
		mov    $0xffffffff,%edx

	_06d679_jump:
		mov    _0b9336_data,%ebx
		mov    %edx,%ecx
		sar    $0x000010,%ebx
		movswl %dx,%edx
		imul   %ebx,%edx
		cmp    $0x000003,%edx
		jge    _06d69f_case
		cmpb   $0x000000,_0b936d_data
		jne    _06d69f_case
		add    %cx,_0b9338_data

	_06d69f_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06d6a8_switch:
		.long   _06d78a_case
		.long   _06d6e3_case
		.long   _06db52_case
		.long   _06dc39_case
		.long   _06db23_case
		.long   _06dc39_case
		.long   _06dbbe_case




_06d6c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0b9369_data,%al
		cmp    $0x000006,%al
		ja     _06dc39_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06d6a8_switch(,%eax,4)

	_06d6e3_case:
		mov    _0b9368_data,%al
		cmp    $0x000004,%al
		je     _06d77f_jump
		cmp    $0x000005,%al
		je     _06d77f_jump
		testb  $0x000018,_0c3348_data
		jne    _06d77f_jump
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		call   _01dea0_func
		mov    _0b9368_data,%dh
		cmp    $0x000008,%dh
		je     _06d721_jump
		cmp    $0x00000a,%dh
		jne    _06d72d_jump

	_06d721_jump:
		mov    $0x00002f,%edx
		mov    $_0b92f8_data,%eax
		jmp    _06d77a_jump

	_06d72d_jump:
		cmp    $0x000009,%dh
		je     _06d737_jump
		cmp    $0x00000b,%dh
		jne    _06d750_jump

	_06d737_jump:
		mov    $0x000030,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		call   _06be64_func
		jmp    _06dc39_case

	_06d750_jump:
		cmp    $0x000003,%dh
		je     _06d75a_jump
		cmp    $0x000007,%dh
		jne    _06d773_jump

	_06d75a_jump:
		mov    $0x000024,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		call   _06be64_func
		jmp    _06dc39_case

	_06d773_jump:
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx

	_06d77a_jump:
		call   _01de98_func

	_06d77f_jump:
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d78a_case:
		mov    _0b9346_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    %cx,_0b9338_data
		cmp    $0xffffffff,%eax
		je     _06d7c9_jump
		cmpb   $0x000000,_0b9368_data
		jne    _06d7c9_jump
		cmpw   $0x000001,_0b9348_data
		jne    _06d7ba_jump
		mov    $0x000031,%edx
		jmp    _06d7bf_jump

	_06d7ba_jump:
		mov    $0x000003,%edx

	_06d7bf_jump:
		mov    $_0b92f8_data,%eax
		call   _01de98_func

	_06d7c9_jump:
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    _0b9368_data,%al
		testb  $0x000040,0x000007(%ebx,%eax,8)
		je     _06d8bf_jump
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _0230e0_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		jne    _06d838_jump
		cmpb   $0x000000,_0b9369_data
		jne    _06d822_jump
		cmpb   $0x00003c,_0b9368_data
		je     _06db18_jump

	_06d822_jump:
		mov    $0x00003c,%ebx
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		call   _01dea8_func
		jmp    _06db18_jump

	_06d838_jump:
		cmpb   $0x000000,_0b9369_data
		jne    _06d84a_jump
		cmpb   $0x00000f,_0b9368_data
		je     _06d851_jump

	_06d84a_jump:
		mov    $0x000001,%eax
		jmp    _06d853_jump

	_06d851_jump:
		xor    %eax,%eax

	_06d853_jump:
		test   %eax,%eax
		je     _06db18_jump
		cmpb   $0x000000,_0b9369_data
		jne    _06d86d_jump
		cmpb   $0x00003d,_0b9368_data
		je     _06d874_jump

	_06d86d_jump:
		mov    $0x000001,%eax
		jmp    _06d876_jump

	_06d874_jump:
		xor    %eax,%eax

	_06d876_jump:
		test   %eax,%eax
		je     _06db18_jump
		xor    %ebx,%ebx
		mov    _0b9366_data,%bl
		lea    0x000000(,%ebx,4),%ecx
		mov    _0b92fc_data,%eax
		sub    %ebx,%ecx
		xor    %edx,%edx
		shl    $0x000002,%ecx
		mov    $0x00000f,%ebx
		add    %eax,%ecx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		mov    0x00000a(%ecx),%al
		dec    %al
		mov    %al,_0b9367_data
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d8bf_jump:
		cmp    $0x000025,%al
		jne    _06d8f2_jump
		mov    _0c3110_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06d8d1_jump
		neg    %eax

	_06d8d1_jump:
		cmp    $0x000080,%eax
		jg     _06d8f2_jump
		mov    $0x000026,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d8f2_jump:
		cmpb   $0x000014,_0b9368_data
		jne    _06d9a9_jump
		mov    $_0b92f8_data,%eax
		call   _01d740_func
		test   %al,%al
		je     _06d9a9_jump
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _0230e0_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		je     _06db18_jump
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0b9368_data,%bl
		mov    (%eax),%eax
		shl    $0x000003,%ebx
		add    %eax,%ebx
		mov    0x000007(%ebx),%ch
		lea    0x000007(%ebx),%eax
		test   $0x000010,%ch
		sete   %cl
		mov    (%eax),%dl
		and    $0x000001,%cl
		and    $0x0000ef,%dl
		shl    $0x000004,%cl
		mov    %dl,(%eax)
		mov    %dl,%dh
		or     %cl,%dh
		mov    %dh,(%eax)
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		call   _05b060_func
		lea    0x000007(%ebx),%eax
		testb  $0x000010,0x000007(%ebx)
		sete   %bl
		mov    (%eax),%ch
		and    $0x000001,%bl
		and    $0x0000ef,%ch
		shl    $0x000004,%bl
		mov    %ch,%dl
		mov    %ch,(%eax)
		or     %bl,%dl
		mov    %dl,(%eax)
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d9a9_jump:
		mov    _0b9368_data,%bh
		cmp    $0x00003b,%bh
		je     _06d9c8_jump
		cmp    $0x00003e,%bh
		je     _06d9c8_jump
		cmp    $0x00003f,%bh
		je     _06d9c8_jump
		cmp    $0x000040,%bh
		je     _06d9c8_jump
		cmp    $0x000041,%bh
		jne    _06d9f9_jump

	_06d9c8_jump:
		mov    $_0b92f8_data,%eax
		call   _01d740_func
		test   %al,%al
		je     _06db18_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,_0c303e_data
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d9f9_jump:
		call   _03b930_func
		test   %al,%al
		jne    _06db18_jump
		mov    _0b9368_data,%dl
		test   %dl,%dl
		je     _06da1e_jump
		cmp    $0x000001,%dl
		je     _06da1e_jump
		cmp    $0x000002,%dl
		jne    _06db18_jump

	_06da1e_jump:
		mov    _0c303e_data,%di
		inc    %edi
		mov    %di,_0c303e_data
		cmp    $0x0001f4,%di
		jl     _06db18_jump
		mov    %edi,%edx
		sub    $0x000064,%edx
		mov    _0c3048_data,%bx
		mov    %dx,_0c303e_data
		test   %bx,%bx
		jne    _06da76_jump
		mov    $0x00003b,%edx
		mov    $_0b92f8_data,%eax
		mov    $0x000001,%edi
		call   _01de98_func
		mov    %di,_0c3048_data
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06da76_jump:
		cmp    $0x000001,%bx
		jne    _06daa2_jump
		mov    $0x000040,%edx
		mov    $_0b92f8_data,%eax
		mov    $0x000002,%esi
		call   _01de98_func
		mov    %si,_0c3048_data
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06daa2_jump:
		cmp    $0x000002,%bx
		jne    _06dace_jump
		mov    $0x00003e,%edx
		mov    $_0b92f8_data,%eax
		mov    $0x000003,%ecx
		call   _01de98_func
		mov    %cx,_0c3048_data
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06dace_jump:
		cmp    $0x000003,%bx
		jne    _06dafa_jump
		mov    $0x00003f,%edx
		mov    $_0b92f8_data,%eax
		mov    $0x000004,%ebx
		call   _01de98_func
		mov    %bx,_0c3048_data
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06dafa_jump:
		cmp    $0x000004,%bx
		jne    _06db18_jump
		mov    $0x000041,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		xor    %edx,%edx
		mov    %dx,_0c3048_data

	_06db18_jump:
		call   _06be64_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06db23_case:
		mov    _0b9368_data,%bl
		cmp    $0x000002,%bl
		je     _06db37_jump
		cmp    $0x000003,%bl
		jne    _06dc39_case

	_06db37_jump:
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		xor    %esi,%esi
		call   _01de98_func
		mov    %si,_0b933a_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06db52_case:
		xor    %edi,%edi
		mov    _0b9368_data,%cl
		mov    %di,_0c303e_data
		mov    %di,_0c3048_data
		cmp    $0x000008,%cl
		je     _06db74_jump
		mov    %di,_0b9338_data

	_06db74_jump:
		cmpb   $0x00000f,_0b9368_data
		je     _06db87_jump
		cmpw   $0x000000,_0b9340_data
		je     _06dba4_jump

	_06db87_jump:
		mov    $0x000008,%eax
		mov    _0c3136_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		call   _06bbd0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06dba4_jump:
		mov    _0c3136_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		call   _06bbd0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06dbbe_case:
		xor    %edx,%edx
		mov    %dx,_0c3112_data
		mov    _0a56fd_data,%dl
		mov    _0b937d_data,%ah
		inc    %dl
		or     $0x000008,%ah
		mov    %dl,_0a56fd_data
		mov    _0b936d_data,%dh
		mov    %ah,_0b937d_data
		test   %dh,%dh
		jne    _06dc39_case
		mov    _0b9338_data,%bx
		test   %bx,%bx
		jle    _06dc06_jump
		mov    %ebx,%edi
		dec    %edi
		mov    %di,_0b9338_data
		jmp    _06dc12_jump

	_06dc06_jump:
		jge    _06dc12_jump
		mov    %ebx,%esi
		inc    %esi
		mov    %si,_0b9338_data

	_06dc12_jump:
		mov    _0b933a_data,%ax
		test   %ax,%ax
		jle    _06dc2d_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0b933a_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06dc2d_jump:
		jge    _06dc39_case
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,_0b933a_data

	_06dc39_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		mov    %eax,%eax
		ret    



_06dc44_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0b9369_data,%ah
		cmp    $0x000002,%ah
		je     _06dd58_jump
		cmp    $0x000001,%ah
		je     _06dd2d_jump
		call   _06c290_func
		cmpb   $0x000000,_0b9369_data
		jne    _06dd58_jump
		mov    _0b9368_data,%bl
		test   %bl,%bl
		je     _06dca2_jump
		cmp    $0x000001,%bl
		je     _06dca2_jump
		cmp    $0x000002,%bl
		je     _06dca2_jump
		cmp    $0x00003f,%bl
		je     _06dca2_jump
		cmp    $0x00003e,%bl
		je     _06dca2_jump
		cmp    $0x00003b,%bl
		je     _06dca2_jump
		cmp    $0x000003,%bl
		je     _06dca2_jump
		cmp    $0x000008,%bl
		jne    _06dd58_jump

	_06dca2_jump:
		testb  $0x000040,_0c3347_data
		je     _06dce4_jump
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06dd58_jump
		mov    $0x000010,%ebx
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		xor    %edx,%edx
		mov    %dx,_0b9338_data
		mov    %dx,_0b933a_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06dce4_jump:
		cmpb   $0x000000,_0c33ab_data
		jne    _06dd58_jump
		mov    _0b9368_data,%cl
		cmp    $0x000012,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06dd58_jump
		mov    _0c3348_data,%ch
		test   $0x000018,%ch
		jne    _06dd58_jump
		test   $0x000001,%ch
		jne    _06dd58_jump
		cmp    $0x000008,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06dd58_jump
		test   $0x000080,%ch
		jne    _06dd58_jump
		mov    $0x000012,%edx
		jmp    _06dd4e_jump

	_06dd2d_jump:
		cmp    %ah,%ah
		jne    _06dd58_jump
		mov    _0c3348_data,%bl
		test   $0x000018,%bl
		jne    _06dd58_jump
		test   %ah,%bl
		je     _06dd58_jump
		cmpb   $0x000000,_0b9368_data
		jne    _06dd58_jump
		mov    $0x000003,%edx

	_06dd4e_jump:
		mov    $_0b92f8_data,%eax
		call   _01de98_func

	_06dd58_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx

	_06dd5b_jump:
		ret    



_06dd5c_func:
		cmpb   $0x000000,_0c1156_data
		jne    _06dd5b_jump
		testb  $0x000001,_0c3347_data
		je     _06dd5b_jump
		testb  $0x000018,_0c3348_data
		jne    _06dd5b_jump
		jmp    _069ba0_jump

_06dd7c_switch:
		.long   _06ddcf_case
		.long   _06ddbc_case
		.long   _06ddcf_case
		.long   _06ddde_case
		.long   _06ddde_case
		.long   _06ddcf_case
		.long   _06ddde_case
		.long   _06ddcf_case




_06dd9c_func:
		push   %edx
		cmpb   $0x000000,_0c33c7_data
		jne    _06ddde_case
		mov    _0b9369_data,%al
		cmp    $0x000007,%al
		ja     _06ddde_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06dd7c_switch(,%eax,4)

	_06ddbc_case:
		call   _041ddc_func
		test   %ax,%ax
		je     _06ddcf_case
		cmpb   $0x000003,_0b9368_data
		jne    _06ddd6_jump

	_06ddcf_case:
		call   _06b944_func
		pop    %edx
		ret    

	_06ddd6_jump:
		xor    %dh,%dh
		mov    %dh,_0c33ce_data

	_06ddde_case:
		pop    %edx
		ret    



_06dde0_func:
		push   %edx
		test   %ax,%ax
		jne    _06ddeb_jump
		mov    $0x000001,%eax

	_06ddeb_jump:
		cwtl   
		dec    %eax
		sar    $0x000003,%eax
		cmp    $0x00001f,%ax
		jg     _06de0d_jump
		testb  $0x000008,_0b937d_data
		jne    _06de06_jump
		add    $0x00001f,%eax
		pop    %edx
		ret    

	_06de06_jump:
		mov    $0x000020,%edx
		jmp    _06de20_jump

	_06de0d_jump:
		testb  $0x000008,_0b937d_data
		jne    _06de1b_jump
		sub    $0x00001f,%eax
		pop    %edx
		ret    

	_06de1b_jump:
		mov    $0x00005f,%edx

	_06de20_jump:
		cwtl   
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _06de2b_jump
		neg    %eax

	_06de2b_jump:
		pop    %edx
		ret    



_06de30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000002,_0b9369_data
		jne    _06de50_jump
		cmpb   $0x000008,_0b9368_data
		jne    _06de50_jump
		movw   $0x00005a,_0b9354_data

	_06de50_jump:
		mov    $0x000007,%edx
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		mov    $0xffffffff,%esi
		call   _01dea8_func
		xor    %ecx,%ecx
		xor    %edi,%edi
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		call   _071068_func
		mov    %bx,_0b934a_data
		mov    %bx,_0c303e_data
		mov    %si,_0b9342_data
		mov    %di,_0c3112_data
		mov    %cx,_0b933a_data
		xor    %bl,%bl
		xor    %dh,%dh
		mov    %bl,_0b936e_data
		mov    $0x000001,%bh
		mov    %dh,_0b936d_data
		mov    %bh,_0c33ce_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06debc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    _0b9320_data,%dx
		mov    _0b9364_data,%al
		mov    0x000028(%esi),%bx
		mov    %eax,%ecx
		xor    %eax,%eax
		add    %edx,%ecx
		mov    0x00006c(%esi),%al
		sub    %ebx,%ecx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0b9324_data,%di
		mov    _0b9365_data,%al
		mov    0x00002c(%esi),%dx
		add    %eax,%edi
		sub    %edx,%edi
		movswl %cx,%edx
		imul   %edx,%edx
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		sub    %eax,%edi
		movswl %di,%eax
		imul   %eax,%eax
		add    %eax,%edx
		mov    _0b9368_data,%ah
		test   %ah,%ah
		jne    _06e090_jump
		cmp    $0x0011a0,%edx
		jbe    _06e003_jump
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		movb   $0x000000,0x000083(%esi)
		xor    %eax,%eax
		mov    %ax,_0b933a_data
		mov    %ax,_0b9338_data
		mov    %ax,_0c3112_data
		mov    %esi,%eax
		call   _07d20c_func
		mov    %eax,%edx
		mov    %ax,0x00004e(%esi)
		cmp    $0x000100,%ax
		jg     _06df72_jump
		jne    _06df7a_jump
		testb  $0x000008,_0b937d_data
		jne    _06df7a_jump

	_06df72_jump:
		movw   $0x00ffff,0x000052(%esi)
		jmp    _06df80_jump

	_06df7a_jump:
		movw   $0x000001,0x000052(%esi)

	_06df80_jump:
		test   %cx,%cx
		jge    _06df87_jump
		neg    %ecx

	_06df87_jump:
		test   %di,%di
		jge    _06df8e_jump
		neg    %edi

	_06df8e_jump:
		mov    %edx,%eax
		lea    0x000004(%esp),%ebx
		add    $0x000080,%eax
		mov    %esp,%edx
		cwtl   
		call   _06283c_func
		cmpw   $0x000002,(%esp)
		jle    _06dfe2_jump
		cmpw   $0x000002,0x000004(%esp)
		jle    _06dfe2_jump
		movswl %cx,%eax
		mov    $0x000009,%cl
		shl    %cl,%eax
		mov    0x000002(%esp),%ebx
		mov    %eax,%edx
		sar    $0x000010,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000009,%cl
		mov    %eax,%ebx
		movswl %di,%eax
		shl    %cl,%eax
		mov    -0x000002(%esp),%ecx
		mov    %eax,%edx
		sar    $0x000010,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		sar    %eax
		jmp    _06dff6_jump

	_06dfe2_jump:
		cmpw   $0x000002,(%esp)
		jg     _06dff4_jump
		mov    %ecx,%eax
		mov    %ax,0x00004c(%esi)
		jmp    _06e090_jump

	_06dff4_jump:
		mov    %edi,%eax

	_06dff6_jump:
		mov    %ax,0x00004c(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e003_jump:
		ja     _06e055_jump
		mov    _0b936d_data,%dh
		xor    %al,%al
		inc    %dh
		mov    %ax,_0b9338_data
		mov    %dh,_0b936d_data
		mov    0x000042(%esi),%ax
		mov    _0b933a_data,%dx
		sub    %eax,%edx
		mov    _0b936d_data,%bl
		mov    %dx,_0b933a_data
		cmp    $0x000003,%bl
		jb     _06e090_jump
		xor    %bh,%bh
		mov    %bh,_0b936d_data
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,_0b933a_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e055_jump:
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		xor    %ebx,%ebx
		mov    $0x000001,%dl
		mov    %bx,_0b933a_data
		mov    %bx,_0b9338_data
		mov    %bx,_0c3112_data
		movb   $0x000000,0x000083(%esi)
		mov    %dl,_0c33ce_data
		movw   $0x00005f,0x00004c(%esi)

	_06e090_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06e09c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0b9304_data,%eax
		mov    %eax,(%esp)
		mov    _0c3108_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000004,%ecx
		mov    $0x000080,%edi
		add    %eax,%ecx
		mov    _0b9410_data,%eax
		shl    $0x000003,%ecx
		mov    $0x000180,%edx
		add    %eax,%ecx
		mov    %edx,0x000008(%esp)
		mov    _0b9368_data,%ah
		mov    0x00004e(%ecx),%si
		test   %ah,%ah
		jne    _06e0ee_jump
		mov    %ecx,%eax
		call   _06debc_func
		jmp    _06e227_jump

	_06e0ee_jump:
		cmp    $0x000001,%ah
		jne    _06e227_jump
		mov    0x000083(%ecx),%dh
		test   %dh,%dh
		jne    _06e206_jump
		mov    0x00004c(%ecx),%dx
		cmp    $0x000064,%dx
		jle    _06e118_jump
		sub    $0x000002,%edx
		mov    %dx,0x00004c(%ecx)
		jmp    _06e125_jump

	_06e118_jump:
		cmp    $0x00005f,%dx
		jge    _06e125_jump
		mov    %edx,%eax
		inc    %eax
		mov    %ax,0x00004c(%ecx)

	_06e125_jump:
		mov    %esi,%eax
		lea    0x000010(%esp),%ebx
		add    $0x000080,%eax
		lea    0x00000c(%esp),%edx
		cwtl   
		call   _06274c_func
		cmp    0x000008(%esp),%si
		jl     _06e157_jump
		cmpw   $0x000000,0x000052(%ecx)
		jle    _06e14f_jump
		movb   $0x000005,0x000083(%ecx)

	_06e14f_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _06e170_jump

	_06e157_jump:
		cmp    %di,%si
		jg     _06e170_jump
		cmpw   $0x000000,0x000052(%ecx)
		jge    _06e16a_jump
		movb   $0x000005,0x000083(%ecx)

	_06e16a_jump:
		movw   $0x000001,0x000052(%ecx)

	_06e170_jump:
		movswl %si,%eax
		call   _06281c_func
		cwtl   
		sar    $0x000007,%eax
		mov    0x000052(%ecx),%dx
		inc    %eax
		test   %dx,%dx
		jge    _06e188_jump
		neg    %eax

	_06e188_jump:
		add    %ax,0x00004e(%ecx)
		mov    0x000028(%ecx),%edx
		mov    _0b9324_data,%ax
		xor    %ebx,%ebx
		mov    %eax,0x000004(%esp)
		mov    0x00006c(%ecx),%bl
		mov    0x00004a(%ecx),%eax
		add    %edx,%ebx
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		sar    $0x000009,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0b9364_data,%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebp
		mov    0x00006d(%ecx),%dl
		add    %edx,%ebp
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		imul   %eax,%edx
		sar    $0x000009,%edx
		mov    %ebp,%eax
		sub    %edx,%eax
		mov    _0b9320_data,%di
		mov    %eax,%edx
		xor    %eax,%eax
		sub    %edi,%ebx
		mov    _0b9365_data,%al
		mov    0x000004(%esp),%edi
		sub    %eax,%edx
		mov    %bx,_0b9338_data
		sub    %edi,%edx
		mov    %dx,_0b933a_data
		jmp    _06e227_jump

	_06e206_jump:
		mov    %dh,%bl
		sub    %ah,%bl
		mov    %bl,0x000083(%ecx)
		xor    %ebx,%ebx
		mov    %bx,_0b9338_data
		mov    %bx,_0b933a_data
		mov    %bx,_0c3112_data

	_06e227_jump:
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0b9368_data,%al
		mov    0x000002(%edx,%eax,8),%al
		mov    %al,_0b9366_data
		movswl %si,%eax
		call   _06dde0_func
		mov    _0b9338_data,%dx
		mov    %al,_0b9367_data
		mov    0x000040(%ecx),%ax
		mov    _0b933a_data,%bx
		add    %eax,%edx
		add    0x000042(%ecx),%bx
		xor    %eax,%eax
		mov    _0b935e_data,%al
		mov    %bx,_0b933a_data
		mov    _0a525d_data(%eax),%bh
		mov    %dx,_0b9338_data
		test   $0x000002,%bh
		je     _06e346_jump
		testb  $0x000008,_0b937d_data
		jne    _06e2aa_jump
		xor    %eax,%eax
		mov    _0b935f_data,%al
		testb  $0x000002,_0a525d_data(%eax)
		jne    _06e2cb_jump

	_06e2aa_jump:
		testb  $0x000008,_0b937d_data
		je     _06e346_jump
		xor    %eax,%eax
		mov    _0b9360_data,%al
		testb  $0x000002,_0a525d_data(%eax)
		je     _06e346_jump

	_06e2cb_jump:
		cmpw   $0x000000,_0b933a_data
		jg     _06e2dc_jump
		cmpw   $0x000000,0x000042(%ecx)
		jle    _06e346_jump

	_06e2dc_jump:
		mov    $_0b92f8_data,%eax
		mov    $0xffffffff,%edx
		call   _023dbc_func
		xor    %ch,%ch
		mov    _0b9338_data,%eax
		mov    _0b9324_data,%ebx
		sar    $0x000010,%eax
		mov    %dx,_0c315c_data
		add    %eax,%ebx
		xor    %edx,%edx
		mov    %ebx,_0b9324_data
		xor    %eax,%eax
		mov    $0x000008,%ebx
		mov    %ax,_0b933a_data
		mov    $_0b92f8_data,%eax
		mov    %ch,_0b937b_data
		call   _01dea8_func
		mov    $0xffffffff,%ebx
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		mov    %bx,_0b934a_data
		call   _071068_func
		jmp    _06e36b_jump

	_06e346_jump:
		xor    %eax,%eax
		mov    _0b9360_data,%al
		testb  $0x000010,_0a525d_data(%eax)
		jne    _06e366_jump
		xor    %eax,%eax
		mov    _0b935f_data,%al
		testb  $0x000010,_0a525d_data(%eax)
		je     _06e36b_jump

	_06e366_jump:
		call   _06e378_func

	_06e36b_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06e378_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c3108_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		cmpw   $0x000100,0x00004e(%edx,%eax,8)
		setl   %al
		and    $0x0000ff,%eax
		and    $0x000001,%al
		mov    _0b937d_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0b937d_data
		shl    $0x000003,%al
		mov    $0x000002,%ebx
		mov    %ah,%dl
		mov    $0xffffffff,%esi
		or     %al,%dl
		mov    $_0b92f8_data,%eax
		mov    %dl,_0b937d_data
		mov    %ebx,%edx
		xor    %ecx,%ecx
		call   _01dea8_func
		mov    _0b9336_data,%eax
		xor    %dh,%dh
		mov    %cx,_0b933a_data
		mov    %dh,_0b936d_data
		mov    %dh,_0b936e_data
		sar    $0x000010,%eax
		mov    _0b9320_data,%edx
		mov    %si,_0c315c_data
		sub    %eax,%edx
		mov    %si,_0b934a_data
		mov    %edx,_0b9320_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06e418_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0b9320_data,%dx
		mov    _0b9324_data,%di
		mov    _0c3112_data,%ax
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0b9364_data,%bl
		mov    _0b9370_data,%cl
		add    %edx,%ebx
		add    %edi,%ecx
		mov    %bl,%dl
		mov    %ebx,%esi
		and    $0x00000f,%dl
		test   %ax,%ax
		jg     _06e45c_jump
		jne    _06e46a_jump
		testb  $0x000008,_0b937d_data
		je     _06e46a_jump

	_06e45c_jump:
		mov    $0x000010,%eax
		cmp    $0x00000d,%dl
		jbe    _06e477_jump
		add    %eax,%ebx
		jmp    _06e477_jump

	_06e46a_jump:
		mov    $0xfffffff0,%eax
		cmp    $0x000004,%dl
		jae    _06e477_jump
		sub    $0x000010,%ebx

	_06e477_jump:
		add    %eax,%ebx
		cmpw   $0x000000,_0c3112_data
		je     _06e4e2_jump
		mov    %ecx,%eax
		add    $0x000010,%eax
		movswl %ax,%edx
		movswl %bx,%eax
		call   _022fd0_func
		test   %ax,%ax
		je     _06e4a3_jump
		testb  $0x000002,_0c3348_data
		je     _06e4d2_jump

	_06e4a3_jump:
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %bx,%ebx
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _022fd0_func
		test   %ax,%ax
		jne    _06e4d2_jump
		mov    %ecx,%eax
		add    $0x000030,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _022fd0_func
		test   %ax,%ax
		je     _06e4e2_jump

	_06e4d2_jump:
		xor    %edx,%edx
		mov    %dx,_0b9338_data
		mov    %dx,_0c3112_data

	_06e4e2_jump:
		cmpw   $0x000000,_0b933a_data
		jge    _06e510_jump
		testb  $0x000002,_0c3348_data
		jne    _06e510_jump
		add    $0x000010,%ecx
		movswl %si,%eax
		movswl %cx,%edx
		call   _022fd0_func
		test   %ax,%ax
		je     _06e510_jump
		xor    %eax,%eax
		mov    %ax,_0b933a_data

	_06e510_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06e518_func:
		push   %ebx
		push   %edx
		mov    _0b9320_data,%ax
		sub    _0c3132_data,%ax
		cmp    $0x000001,%ax
		jle    _06e54e_jump
		mov    _0b937d_data,%dl
		and    $0x0000f7,%dl
		mov    $_0b92f8_data,%eax
		mov    %dl,_0b937d_data
		mov    $0x000015,%edx
		call   _01de98_func
		pop    %edx
		pop    %ebx
		ret    

	_06e54e_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		jge    _06e575_jump
		mov    _0b937d_data,%ah
		or     $0x000008,%ah
		mov    $0x000015,%edx
		mov    %ah,_0b937d_data
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		pop    %edx
		pop    %ebx
		ret    

	_06e575_jump:
		mov    $0x000014,%edx
		xor    %ebx,%ebx
		mov    $_0b92f8_data,%eax
		mov    %bx,_0b9338_data
		call   _01de98_func
		mov    _0b9320_data,%ax
		mov    %ax,_0c3132_data
		pop    %edx
		pop    %ebx
		ret    



_06e59c_func:
		push   %ecx
		push   %edx
		cmpw   $0x000003,_0c3130_data
		je     _06e5fc_jump
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		je     _06e5fc_jump
		mov    _0b9368_data,%dh
		cmp    $0x000007,%dh
		je     _06e5fc_jump
		cmp    $0x000009,%dh
		je     _06e5fc_jump
		cmpw   $0x000000,_0b933a_data
		jg     _06e5fc_jump
		cmp    $0x000008,%dh
		je     _06e5ec_jump
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		xor    %cl,%cl
		call   _01de98_func
		mov    %cl,_0c33ce_data

	_06e5ec_jump:
		xor    %ecx,%ecx
		mov    %cx,_0b934a_data
		mov    %cx,_0b933a_data

	_06e5fc_jump:
		pop    %edx
		pop    %ecx
		ret    



_06e600_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c3138_data,%dx
		mov    _0b9304_data,%esi
		test   %dx,%dx
		je     _06e623_jump
		movw   $0x000001,_0b9340_data

	_06e623_jump:
		mov    $0x000012,%ebx
		mov    $_0c1098_data,%edx
		mov    $_0c109a_data,%eax
		call   _08ba45_func
		mov    _0b9320_data,%ax
		mov    %ax,_0c1098_data
		cmpb   $0x000007,_0b9368_data
		jne    _06e655_jump
		movw   $0x00ffff,_0b9342_data

	_06e655_jump:
		mov    _0c315a_data,%eax
		mov    $0x000001,%dl
		sar    $0x000010,%eax
		mov    %dl,(%esp)
		cmp    $0xffffffff,%eax
		je     _06e66e_jump
		decw   _0c315c_data

	_06e66e_jump:
		mov    _0c310c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06e682_jump
		decw   _0c310e_data

	_06e682_jump:
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%edx
		shl    $0x000002,%eax
		mov    _0c3140_data,%bx
		add    %eax,%edx
		inc    %ebx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0b9368_data,%al
		mov    %bx,_0c3140_data
		mov    0x000005(%edx,%eax,8),%al
		xor    %ebx,%ebx
		shr    $0x000004,%al
		mov    %al,%bl
		cmp    $0x00000b,%bx
		je     _06e6f6_jump
		cmp    $0x00000a,%bx
		je     _06e6f6_jump
		mov    _0b936d_data,%dh
		inc    %dh
		mov    %dh,_0b936d_data
		cmp    $0x000003,%dh
		jb     _06e6de_jump
		xor    %ch,%ch
		mov    %ch,_0b936d_data

	_06e6de_jump:
		mov    _0b936e_data,%al
		inc    %al
		mov    %al,_0b936e_data
		cmp    $0x000004,%al
		jb     _06e6f6_jump
		xor    %dl,%dl
		mov    %dl,_0b936e_data

	_06e6f6_jump:
		cmpw   $0x000017,_0c3140_data
		jne    _06e707_jump
		incw   _0b933a_data

	_06e707_jump:
		call   *_0af028_data
		test   %ax,%ax
		je     _06e737_jump
		cmpw   $0x00000c,_0c3140_data
		jg     _06e737_jump
		cmpb   $0x000000,_0c33da_data
		jne    _06e737_jump
		cmpb   $0x000000,_0b937b_data
		jne    _06e737_jump
		cmpb   $0x000002,_0b9368_data
		jne    _06e76a_jump

	_06e737_jump:
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		call   _05aef8_func
		mov    _0c33ce_data,%dl
		mov    $0x000002,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    _06e76a_jump
		call   *_0af028_data
		test   %ax,%ax
		jne    _06e76a_jump
		incb   _0c33ce_data

	_06e76a_jump:
		cmpw   $0x000006,_0c3140_data
		jne    _06e79f_jump
		mov    _0b9368_data,%ah
		cmp    $0x000018,%ah
		je     _06e784_jump
		cmp    $0x000021,%ah
		jne    _06e78b_jump

	_06e784_jump:
		mov    $0x000002,%edx
		jmp    _06e795_jump

	_06e78b_jump:
		cmp    $0x000020,%ah
		jne    _06e79f_jump
		mov    $0x000011,%edx

	_06e795_jump:
		mov    $_0b92f8_data,%eax
		call   _01de98_func

	_06e79f_jump:
		mov    _0b9348_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06e7b9_jump
		mov    _0b933a_data,%ax
		add    %ax,_0b934a_data

	_06e7b9_jump:
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _0230e0_func
		mov    _0b9368_data,%cl
		mov    %al,%dl
		cmp    $0x000008,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06e7fd_jump
		cmp    $0x00001f,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06e7fd_jump
		call   _06c340_func
		cmpb   $0x00000f,_0b9368_data
		jne    _06e7fd_jump
		call   _06e418_func

	_06e7fd_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _06e59c_func
		mov    _0b9338_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _06e856_jump
		cmpb   $0x00000f,_0b9368_data
		jne    _06e856_jump
		cmp    $0x00000b,%bx
		jne    _06e856_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0b9369_data,%al
		mov    _0b9368_data,%dl
		mov    (%esi,%eax,4),%eax
		mov    0x000005(%eax,%edx,8),%bl
		and    $0x00000f,%bl
		mov    %bl,0x000005(%eax,%edx,8)
		mov    %bl,%bh
		or     $0x000010,%bh
		xor    %cl,%cl
		mov    %bh,0x000005(%eax,%edx,8)
		mov    %cl,_0b936d_data
		mov    %cl,_0b936e_data

	_06e856_jump:
		cmpw   $0x000000,_0b933a_data
		jl     _06e8a2_jump
		mov    _0b9368_data,%al
		test   %al,%al
		jne    _06e882_jump
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		call   _01de98_func
		xor    %eax,%eax
		mov    %ax,_0b934a_data
		jmp    _06e8a2_jump

	_06e882_jump:
		cmp    $0x000011,%al
		je     _06e88a_jump
		cmp    $0x000012,%al
		jne    _06e8a2_jump

	_06e88a_jump:
		mov    $0x000013,%edx
		mov    $_0b92f8_data,%eax
		xor    %edi,%edi
		call   _01de98_func
		mov    %di,_0b934a_data

	_06e8a2_jump:
		mov    _0b9368_data,%dh
		cmp    $0x000011,%dh
		je     _06eb86_jump
		test   %dh,%dh
		je     _06eb86_jump
		cmp    $0x000009,%dh
		je     _06eb86_jump
		cmp    $0x00001f,%dh
		je     _06eb86_jump
		cmp    $0x00000d,%dh
		jne    _06e8de_jump
		cmpw   $0x000000,_0b933a_data
		jl     _06eb86_jump

	_06e8de_jump:
		cmpw   $0x000003,_0c3140_data
		jl     _06eb86_jump
		cmpw   $0x000003,_0c3130_data
		je     _06eb86_jump
		xor    %eax,%eax
		mov    _0b935e_data,%al
		mov    _0a525d_data(%eax),%dl
		test   $0x000002,%dl
		je     _06eb37_jump
		test   $0x000040,%dl
		je     _06e93a_jump
		mov    _0b933a_data,%dx
		mov    _0a525d_data(%eax),%bl
		shl    $0x000004,%edx
		test   $0x000080,%bl
		je     _06e933_jump
		add    %dx,_0c3112_data
		jmp    _06e93a_jump

	_06e933_jump:
		sub    %dx,_0c3112_data

	_06e93a_jump:
		mov    $_0b92f8_data,%eax
		call   _023dbc_func
		xor    %ecx,%ecx
		xor    %bh,%bh
		mov    _0b9338_data,%eax
		mov    _0b9324_data,%edx
		mov    %bh,_0b937b_data
		mov    %bh,_0c33da_data
		sar    $0x000010,%eax
		mov    %cx,_0b933a_data
		add    %eax,%edx
		mov    $_0b92f8_data,%eax
		mov    %edx,_0b9324_data
		call   _023960_func
		test   %al,%al
		jne    _06e9ae_jump
		cmpw   $0x000006,_0c3152_data
		jne    _06e99f_jump
		cmpw   $0x000001,_0c3142_data
		jne    _06e99f_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06e9a9_jump

	_06e99f_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax

	_06e9a9_jump:
		call   _071068_func

	_06e9ae_jump:
		cmpw   $0x000000,_0b9340_data
		jne    _06ea36_jump
		mov    $0x000001,%al

	_06e9be_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0c1096_data(,%edx,2),%bx
		cmp    _0c1098_data(,%edx,2),%bx
		jne    _06e9da_jump
		inc    %al
		cmp    $0x00000a,%al
		jb     _06e9be_jump

	_06e9da_jump:
		cmp    $0x00000a,%al
		je     _06ea2d_jump
		and    $0x0000ff,%eax
		mov    _0c1096_data(,%eax,2),%dx
		cmp    _0c1098_data(,%eax,2),%dx
		jge    _06ea11_jump
		mov    _0c3110_data,%ebx
		mov    $0xffffff00,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _06ea09_jump
		mov    %ebx,%eax

	_06ea09_jump:
		mov    %ax,_0c3112_data
		jmp    _06ea36_jump

	_06ea11_jump:
		mov    _0c3110_data,%ebx
		mov    $0x000100,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _06ea25_jump
		mov    %ebx,%eax

	_06ea25_jump:
		mov    %ax,_0c3112_data
		jmp    _06ea36_jump

	_06ea2d_jump:
		xor    %esi,%esi
		mov    %si,_0c3112_data

	_06ea36_jump:
		mov    $0xffffffff,%eax
		mov    _0b9368_data,%ch
		mov    %ax,_0c315c_data
		cmp    $0x000003,%ch
		jne    _06ea5e_jump
		cmpb   $0x000000,_0b9367_data
		jne    _06ea7c_jump
		movb   $0x000001,_0c33ce_data
		jmp    _06ea7c_jump

	_06ea5e_jump:
		cmp    $0x000008,%ch
		jne    _06ea7c_jump
		mov    _0b9352_data,%eax
		mov    $0x00005a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _06ea76_jump
		mov    %ebx,%eax

	_06ea76_jump:
		mov    %ax,_0b9354_data

	_06ea7c_jump:
		mov    _0b9368_data,%dh
		cmp    $0x000011,%dh
		je     _06ea91_jump
		cmp    $0x000012,%dh
		je     _06ea91_jump
		cmp    $0x000013,%dh
		jne    _06eae9_jump

	_06ea91_jump:
		testb  $0x000001,_0c3348_data
		je     _06eae2_jump
		mov    _0b9304_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _06eab3_jump
		sar    %cl,%ax
		jmp    _06eabc_jump

	_06eab3_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06eabc_jump:
		movswl %ax,%edx
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06eacd_jump
		neg    %eax

	_06eacd_jump:
		cmp    %edx,%eax
		jl     _06eae2_jump
		mov    $0x000007,%ebx
		mov    $0x000001,%edx
		mov    $_0b92f8_data,%eax
		jmp    _06eb17_jump

	_06eae2_jump:
		mov    $0x00002b,%ebx
		jmp    _06eb10_jump

	_06eae9_jump:
		cmp    $0x000019,%dh
		je     _06eaf3_jump
		cmp    $0x00001a,%dh
		jne    _06eafa_jump

	_06eaf3_jump:
		mov    $0x000034,%ebx
		jmp    _06eb10_jump

	_06eafa_jump:
		cmp    $0x00001b,%dh
		je     _06eb04_jump
		cmp    $0x00001c,%dh
		jne    _06eb0b_jump

	_06eb04_jump:
		mov    $0x000035,%ebx
		jmp    _06eb10_jump

	_06eb0b_jump:
		mov    $0x000008,%ebx

	_06eb10_jump:
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx

	_06eb17_jump:
		call   _01dea8_func
		cmpw   $0x0000c8,_0b934a_data
		jl     _06eb2c_jump
		call   _06aa10_func

	_06eb2c_jump:
		movw   $0x00ffff,_0b934a_data
		jmp    _06eb86_jump

	_06eb37_jump:
		mov    _0b9368_data,%dh
		cmp    $0x000007,%dh
		je     _06eb86_jump
		cmp    $0x000008,%dh
		jne    _06eb7a_jump
		cmpw   $0x000000,_0b933a_data
		jl     _06eb5d_jump
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _06acec_func

	_06eb5d_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _06eb6f_jump
		cmpb   $0x000008,_0b9368_data
		je     _06eb86_jump

	_06eb6f_jump:
		movw   $0x00005a,_0b9354_data
		jmp    _06eb86_jump

	_06eb7a_jump:
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _06acec_func

	_06eb86_jump:
		cmpw   $0x000003,_0c3130_data
		je     _06ebb4_jump
		cmpb   $0x000002,_0b9369_data
		jne    _06ebb4_jump
		cmpb   $0x00001f,_0b9368_data
		setne  %al
		and    $0x0000ff,%eax
		je     _06ebb4_jump
		call   _06abfc_func
		call   _06c7f4_func

	_06ebb4_jump:
		cmpb   $0x000001,(%esp)
		jne    _06ebe3_jump
		cmpw   $0x000004,_0b933a_data
		jle    _06ebcd_jump
		movw   $0x000004,_0b933a_data

	_06ebcd_jump:
		mov    _0b9338_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _06ebe3_jump
		movw   $0x00fff6,_0b933a_data

	_06ebe3_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_06ebeb_jump:
		ret    



_06ebec_func:
		cmpb   $0x000000,_0c1156_data
		je     _06ebeb_jump
		mov    _0c1144_data,%eax
		call   _07d3c4_func
		jmp    _069e04_func



_06ec04_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0c2f40_data,%bx
		dec    %ebx
		mov    _0c33cc_data,%ah
		mov    %bx,_0c2f40_data
		test   %ah,%ah
		jne    _06ec56_jump
		cmpb   $0x000003,_0b9369_data
		jne    _06ec34_jump
		cmpb   $0x000020,_0b9368_data
		je     _06ec3b_jump

	_06ec34_jump:
		mov    $0x000001,%eax
		jmp    _06ec3d_jump

	_06ec3b_jump:
		xor    %eax,%eax

	_06ec3d_jump:
		test   %eax,%eax
		je     _06ec56_jump
		movb   $0x000005,_0c33b2_data
		mov    $0x000001,%ch
		mov    %edx,_0c108c_data
		mov    %ch,_0c33c2_data

	_06ec56_jump:
		call   _06ebec_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ec60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000016,%ebx
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		xor    %ah,%ah
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ah,_0b9367_data
		mov    _0c3348_data,%al
		mov    %dx,_0b933a_data
		and    $0x000018,%al
		mov    %bx,_0b9338_data
		test   %al,%al
		jbe    _06eca5_jump
		andb   $0x0000e7,_0c3348_data

	_06eca5_jump:
		xor    %ecx,%ecx
		mov    _0c33ab_data,%dh
		mov    %cx,_0c3112_data
		test   %dh,%dh
		je     _06ecce_jump
		mov    _0c3146_data,%eax
		mov    _0b9320_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,_0b9320_data

	_06ecce_jump:
		mov    $0x000001,%bl
		mov    $0x000078,%edi
		xor    %esi,%esi
		mov    $_0b92f8_data,%eax
		mov    %si,_0c3148_data
		mov    %bl,_0c33cf_data
		mov    %di,_0b9354_data
		mov    %bl,_0c33cc_data
		call   _07cbf8_func
		call   _06ebec_func
		call   _070a20_func
		call   _01d728_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ed10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c3026_data,%eax
		sar    $0x000010,%eax
		mov    _0b9320_data,%edx
		sub    $0x00000a,%eax
		cmp    %edx,%eax
		jg     _06ed63_jump
		xor    %eax,%eax
		mov    _0b932e_data,%edx
		mov    _0b9365_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0xffffffec,%eax
		jge    _06ed4e_jump
		mov    _0c3178_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06ed63_jump

	_06ed4e_jump:
		mov    _0c302c_data,%eax
		sar    $0x000010,%eax
		mov    _0b9320_data,%ebx
		add    $0x00000a,%eax
		cmp    %ebx,%eax
		jge    _06ed9b_jump

	_06ed63_jump:
		cmpb   $0x000003,_0b9369_data
		jne    _06ed75_jump
		cmpb   $0x000016,_0b9368_data
		je     _06ed7c_jump

	_06ed75_jump:
		mov    $0x000001,%eax
		jmp    _06ed7e_jump

	_06ed7c_jump:
		xor    %eax,%eax

	_06ed7e_jump:
		test   %eax,%eax
		je     _06ed9b_jump
		xor    %dh,%dh
		mov    $0x000001,%eax
		mov    %dh,_0b9372_data
		xor    %edx,%edx
		call   _02a364_func
		jmp    _06ef8a_jump

	_06ed9b_jump:
		cmpw   $0x0000b4,_0b9330_data
		jle    _06edde_jump
		cmpb   $0x000003,_0b9369_data
		jne    _06edb8_jump
		cmpb   $0x000016,_0b9368_data
		je     _06edbf_jump

	_06edb8_jump:
		mov    $0x000001,%eax
		jmp    _06edc1_jump

	_06edbf_jump:
		xor    %eax,%eax

	_06edc1_jump:
		test   %eax,%eax
		je     _06edde_jump
		xor    %dl,%dl
		mov    $0x000001,%eax
		mov    %dl,_0b9372_data
		xor    %edx,%edx
		call   _02a364_func
		jmp    _06ef8a_jump

	_06edde_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _06edf0_jump
		cmpb   $0x000009,_0b9368_data
		je     _06edf7_jump

	_06edf0_jump:
		mov    $0x000001,%eax
		jmp    _06edf9_jump

	_06edf7_jump:
		xor    %eax,%eax

	_06edf9_jump:
		test   %eax,%eax
		je     _06eea7_jump
		cmpb   $0x000003,_0b9369_data
		jne    _06ee13_jump
		cmpb   $0x000016,_0b9368_data
		je     _06ee1a_jump

	_06ee13_jump:
		mov    $0x000001,%eax
		jmp    _06ee1c_jump

	_06ee1a_jump:
		xor    %eax,%eax

	_06ee1c_jump:
		test   %eax,%eax
		je     _06eea7_jump
		testb  $0x000004,_0b937d_data
		je     _06eea7_jump
		mov    _0b935e_data,%dl
		cmp    $0x00000a,%dl
		je     _06ee41_jump
		cmp    $0x00000d,%dl
		jne    _06ee5e_jump

	_06ee41_jump:
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06ee5e_jump
		cmpb   $0x000006,_0b9369_data
		je     _06ee5e_jump
		call   _06ec60_func
		jmp    _06eea7_jump

	_06ee5e_jump:
		mov    _0b9324_data,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c1126_data,%dx
		mov    _0b9365_data,%al
		shl    $0x000004,%edx
		add    %ecx,%eax
		add    $0x000010,%edx
		cmp    %edx,%eax
		jle    _06eea7_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		cmpw   $0x000000,_0b933a_data
		jge    _06eea7_jump
		xor    %ecx,%ecx
		mov    %cx,_0b933a_data

	_06eea7_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _06eeb9_jump
		cmpb   $0x000009,_0b9368_data
		je     _06eee9_jump

	_06eeb9_jump:
		cmpb   $0x000003,_0b9369_data
		jne    _06ef8a_jump
		mov    _0b9368_data,%al
		cmp    $0x000016,%al
		je     _06eed7_jump
		cmp    $0x000020,%al
		jne    _06ef8a_jump

	_06eed7_jump:
		mov    $_0b92f8_data,%eax
		call   _01d740_func
		test   %al,%al
		je     _06ef8a_jump

	_06eee9_jump:
		mov    _0c33cf_data,%dl
		dec    %dl
		mov    %dl,_0c33cf_data
		jne    _06ef81_jump
		cmpb   $0x000000,_0c33cb_data
		jne    _06ef81_jump
		mov    $0x000002,%bh
		mov    _0b931c_data,%esi
		mov    %bh,_0b9372_data
		test   %esi,%esi
		je     _06ef69_jump
		mov    _0b937d_data,%cl
		mov    $_0b92f8_data,%eax
		and    $0x0000fb,%cl
		xor    %edi,%edi
		mov    %cl,_0b937d_data
		mov    $0x000040,%ch
		mov    %edi,_0b931c_data
		mov    %ch,_0c33cf_data
		call   _06ec04_func
		cmpw   $0x000000,_0c2f40_data
		jge    _06ef64_jump
		movb   $0x000001,_0c33cb_data
		xor    %eax,%eax
		mov    %dl,_0b9372_data
		mov    %ax,_0c2f40_data

	_06ef64_jump:
		call   _021b40_func

	_06ef69_jump:
		mov    _0b9372_data,%al
		mov    $0x00005a,%edx
		mov    %al,_0c2f49_data
		mov    %dx,_0b9354_data
		jmp    _06ef8a_jump

	_06ef81_jump:
		movw   $0x00ffff,_0b9342_data

	_06ef8a_jump:
		cmpl   $0x000000,_0b931c_data
		je     _06efb3_jump
		testb  $0x000004,_0b937d_data
		je     _06efb3_jump
		mov    _0c3130_data,%bx
		cmp    $0x000003,%bx
		je     _06efb3_jump
		cmp    $0x000004,%bx
		je     _06efb3_jump
		mov    $0x000001,%al
		jmp    _06efb5_jump

	_06efb3_jump:
		xor    %al,%al

	_06efb5_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06efbc_func:
		push   %edx
		push   %esi
		call   _07e0dc_func
		mov    _0b9372_data,%dl
		mov    _0b9352_data,%eax
		dec    %dl
		sar    $0x000010,%eax
		mov    %dl,_0b9372_data
		cmp    $0xffffffff,%eax
		jne    _06f031_jump
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0b9368_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _06f028_jump
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _0230e0_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0a525d_data(%eax)
		je     _06f028_jump
		movw   $0x00003c,_0b9354_data
		jmp    _06f031_jump

	_06f028_jump:
		movw   $0x000078,_0b9354_data

	_06f031_jump:
		cmpb   $0x0000ff,_0b9372_data
		jne    _06f065_jump
		cmpw   $0x000002,_0c3130_data
		sete   %al
		xor    %ah,%ah
		add    $0x000003,%eax
		xor    %esi,%esi
		mov    %ax,_0c3130_data
		call   _070a20_func
		call   _01d728_func
		mov    %si,_0c3140_data

	_06f065_jump:
		pop    %esi
		pop    %edx
		ret    



_06f068_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		mov    _0c3152_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000004,%ecx
		add    %eax,%ecx
		mov    _0b9410_data,%eax
		shl    $0x000003,%ecx
		add    %eax,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		je     _06f147_jump
		mov    0x000028(%ecx),%eax
		mov    _0b9320_data,%ebx
		sub    $0x000052,%eax
		cmp    %ebx,%eax
		jge    _06f12c_jump
		mov    0x000028(%ecx),%eax
		add    $0x000096,%eax
		cmp    %ebx,%eax
		jle    _06f12c_jump
		mov    0x00002c(%ecx),%eax
		mov    _0b9324_data,%edi
		add    $0x000060,%eax
		cmp    %edi,%eax
		jle    _06f12c_jump
		mov    %eax,_0b9324_data
		cmpb   $0x000002,_0b9369_data
		je     _06f122_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		mov    0x000040(%ecx),%eax
		mov    $0xffffffff,%ebx
		sar    $0x000010,%eax
		xor    %edx,%edx
		call   _05a4ac_func
		mov    %ax,_0b933a_data
		mov    %dx,_0c3140_data
		xor    %dl,%dl
		mov    %bx,_0c315c_data
		mov    %dl,_0b936d_data
		mov    %dl,_0b936e_data
		mov    %dl,_0c33ce_data
		jmp    _06f12c_jump

	_06f122_jump:
		mov    0x000042(%ecx),%ax
		mov    %ax,_0b933a_data

	_06f12c_jump:
		mov    _0c3164_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%ebp
		add    $0x0000a8,%eax
		cmp    %ebp,%eax
		jge    _06f147_jump
		andb   $0x0000fb,0x000085(%ecx)

	_06f147_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f150_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		xor    %edx,%edx
		mov    _0b9338_data,%bx
		mov    %edx,0x000004(%esp)
		test   %bx,%bx
		je     _06f493_jump
		jle    _06f17a_jump
		mov    _0c312a_data,%eax
		sar    $0x000010,%eax
		jmp    _06f17c_jump

	_06f17a_jump:
		xor    %eax,%eax

	_06f17c_jump:
		mov    _0c3126_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    _0c313c_data,%eax
		sar    $0x000010,%eax
		mov    _0c2f48_data,%edx
		sar    $0x000002,%eax
		sar    $0x000010,%edx
		mov    %eax,0x000028(%esp)
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%esi
		shl    $0x000003,%eax
		add    %eax,%esi
		mov    _0c3012_data,%ax
		xor    %edi,%edi
		test   %ax,%ax
		jle    _06f493_jump

	_06f1c7_jump:
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		testb  $0x000004,_0a529f_data(,%eax,4)
		je     _06f467_jump
		lea    0x000024(%esp),%eax
		lea    0x000010(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000012(%esp),%eax
		mov    %edx,%ebx
		sar    $0x000010,%eax
		sar    $0x000003,%ebx
		add    %ebx,%eax
		mov    %ax,0x000014(%esp)
		mov    %edx,%eax
		sar    $0x000002,%eax
		sub    %eax,%edx
		mov    %dx,0x000010(%esp)
		testb  $0x000020,0x000085(%esi)
		je     _06f265_jump
		lea    0x000018(%esp),%eax
		lea    0x000020(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01e1b8_func
		mov    _0b9342_data,%ax
		cmp    0x000034(%esi),%ax
		sete   %al
		xor    %ebx,%ebx
		mov    0x00001e(%esp),%edx
		mov    %al,%bl
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000078(%esi),%al
		add    %edx,%eax
		add    %ebx,%eax
		mov    %ax,(%esp)
		jmp    _06f274_jump

	_06f265_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000078(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)

	_06f274_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x00006d(%esi),%al
		mov    (%esp),%edx
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %ax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000064(%esi),%ax
		testb  $0x000010,_0a52a0_data(,%eax,4)
		je     _06f2ba_jump
		mov    0x000014(%esp),%ecx
		mov    %edx,%ebx
		mov    0x000010(%esp),%esi
		add    $0x000002,%ebx
		add    $0x000006,%ecx
		sub    $0x00000c,%esi
		mov    %bx,(%esp)
		mov    %cx,0x000014(%esp)
		mov    %si,0x000010(%esp)

	_06f2ba_jump:
		mov    0x000014(%esp),%esi
		mov    0x000010(%esp),%eax
		mov    _0b9338_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jle    _06f303_jump
		mov    _0b9336_data,%ebx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		lea    (%eax,%ebx,1),%ecx
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06f2fd_jump
		cmp    %ecx,%eax
		jg     _06f2fd_jump
		mov    $0x000001,%eax
		jmp    _06f2ff_jump

	_06f2fd_jump:
		xor    %eax,%eax

	_06f2ff_jump:
		test   %eax,%eax
		jne    _06f336_jump

	_06f303_jump:
		mov    _0b9336_data,%edx
		movswl %si,%eax
		sar    $0x000010,%edx
		mov    %eax,%ecx
		lea    (%eax,%edx,1),%ebx
		mov    0x00000a(%esp),%eax
		sub    %edx,%ecx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06f32c_jump
		cmp    %ecx,%eax
		jg     _06f32c_jump
		mov    $0x000001,%eax
		jmp    _06f32e_jump

	_06f32c_jump:
		xor    %eax,%eax

	_06f32e_jump:
		test   %eax,%eax
		je     _06f467_jump

	_06f336_jump:
		cmpw   $0x000000,_0c30ce_data
		je     _06f385_jump
		mov    _0c313c_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c312a_data,%eax
		sar    $0x000010,%eax
		mov    0x000026(%esp),%ecx
		push   %eax
		mov    _0c3128_data,%eax
		mov    0x000016(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000006(%esp),%edx
		push   %eax
		mov    _0c3126_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _027cc0_func

	_06f385_jump:
		mov    (%esp),%eax
		mov    0x000024(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    _0c312a_data,%si
		add    %ecx,%eax
		sar    $0x000010,%ebx
		movswl %ax,%edx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _06f3b3_jump
		cmp    %ecx,%eax
		jg     _06f3b3_jump
		mov    $0x000001,%eax
		jmp    _06f3b5_jump

	_06f3b3_jump:
		xor    %eax,%eax

	_06f3b5_jump:
		test   %eax,%eax
		jne    _06f45d_jump
		mov    0x000028(%esp),%eax
		mov    -0x000002(%esp),%ebx
		mov    %edx,%ecx
		add    %eax,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		cmp    %ebx,%eax
		jl     _06f3de_jump
		cmp    %ecx,%eax
		jg     _06f3de_jump
		mov    $0x000001,%eax
		jmp    _06f3e0_jump

	_06f3de_jump:
		xor    %eax,%eax

	_06f3e0_jump:
		test   %eax,%eax
		jne    _06f45d_jump
		mov    0x000028(%esp),%ebx
		mov    %edx,%ecx
		add    %ebx,%esi
		mov    -0x000002(%esp),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jl     _06f409_jump
		cmp    %ecx,%eax
		jg     _06f409_jump
		mov    $0x000001,%eax
		jmp    _06f40b_jump

	_06f409_jump:
		xor    %eax,%eax

	_06f40b_jump:
		test   %eax,%eax
		jne    _06f45d_jump
		mov    0x000028(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		add    %ecx,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _06f430_jump
		cmp    %ecx,%eax
		jg     _06f430_jump
		mov    $0x000001,%eax
		jmp    _06f432_jump

	_06f430_jump:
		xor    %eax,%eax

	_06f432_jump:
		test   %eax,%eax
		jne    _06f45d_jump
		mov    0x000028(%esp),%eax
		mov    -0x000002(%esp),%ebx
		mov    %edx,%ecx
		add    %eax,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		cmp    %ebx,%eax
		jl     _06f457_jump
		cmp    %ecx,%eax
		jg     _06f457_jump
		mov    $0x000001,%eax
		jmp    _06f459_jump

	_06f457_jump:
		xor    %eax,%eax

	_06f459_jump:
		test   %eax,%eax
		je     _06f467_jump

	_06f45d_jump:
		movl   $0x000001,0x000004(%esp)
		jmp    _06f493_jump

	_06f467_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0c2f48_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%esi
		mov    _0c3012_data,%dx
		add    %eax,%esi
		cmp    %dx,%di
		jl     _06f1c7_jump

	_06f493_jump:
		mov    0x000004(%esp),%eax
		add    $0x00002c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f4a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06f4db_jump
		mov    %eax,%edx
		shl    $0x000004,%eax
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		mov    0x000064(%eax),%dx
		cmp    $0x0000a0,%dx
		je     _06f5c2_jump
		cmp    $0x00009f,%dx
		je     _06f5c2_jump

	_06f4db_jump:
		cmpb   $0x000000,_0b9369_data
		jne    _06f5c2_jump
		mov    _0b9368_data,%dl
		cmp    $0x00000d,%dl
		je     _06f5c2_jump
		cmp    $0x00000b,%dl
		je     _06f5c2_jump
		cmp    $0x00000c,%dl
		je     _06f5c2_jump
		cmp    $0x000012,%dl
		je     _06f5c2_jump
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06f520_jump
		neg    %eax

	_06f520_jump:
		cmp    $0x000003,%eax
		jle    _06f571_jump
		mov    _0b9368_data,%cl
		cmp    $0x000028,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06f571_jump
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    %cl,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _06f5c2_jump
		cmp    $0x000008,%cl
		je     _06f5c2_jump
		cmp    $0x000034,%cl
		je     _06f5c2_jump
		cmp    $0x000035,%cl
		je     _06f5c2_jump
		mov    $0x000029,%ebx
		jmp    _06f5b6_jump

	_06f571_jump:
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06f57f_jump
		neg    %eax

	_06f57f_jump:
		cmp    $0x000002,%eax
		jg     _06f5c2_jump
		mov    _0b9368_data,%ch
		cmp    $0x000028,%ch
		jne    _06f5c2_jump
		xor    %eax,%eax
		mov    _0b9369_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0b9304_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %ch,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _06f5c2_jump
		mov    $0x00002a,%ebx

	_06f5b6_jump:
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		call   _01dea8_func

	_06f5c2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f5c8_func:
		push   %edx
		cmpb   $0x000000,_0b9369_data
		jne    _06f61f_jump
		cmpb   $0x000028,_0b9368_data
		jne    _06f61f_jump
		testb  $0x000008,_0b937d_data
		je     _06f5eb_jump
		mov    $0x000001,%eax
		jmp    _06f5f0_jump

	_06f5eb_jump:
		mov    $0xffffffff,%eax

	_06f5f0_jump:
		mov    %eax,%edx
		mov    _0b9336_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		cmp    $0x000000,%eax
		je     _06f60b_jump
		mov    $0x000001,%eax
		jg     _06f60b_jump
		neg    %eax

	_06f60b_jump:
		cmp    %edx,%eax
		jne    _06f618_jump
		movb   $0x00004f,_0b9366_data
		pop    %edx
		ret    

	_06f618_jump:
		movb   $0x000050,_0b9366_data

	_06f61f_jump:
		pop    %edx
		ret    



_06f624_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%edx
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0b9354_data
		mov    %bx,_0c314e_data
		mov    %bx,_0c3148_data
		call   _01e53c_func
		mov    $_0b92f8_data,%eax
		call   _01ec9c_func
		call   _06e600_func
		call   _06be64_func
		call   _05e584_func
		mov    _0b933a_data,%si
		test   %si,%si
		jle    _06f67b_jump
		call   _05d5e0_func
		jmp    _06f682_jump

	_06f67b_jump:
		jge    _06f682_jump
		call   _05d500_func

	_06f682_jump:
		mov    _0b9338_data,%ax
		test   %ax,%ax
		jge    _06f694_jump
		call   _05dbb4_func
		jmp    _06f69b_jump

	_06f694_jump:
		jle    _06f69b_jump
		call   _05db30_func

	_06f69b_jump:
		xor    %eax,%eax
		call   _069ca4_func
		cmpb   $0x000001,_0c33ab_data
		jne    _06f6c0_jump
		mov    $_0c3347_data,%edi
		xor    %dl,%dl
		mov    $_0c3344_data,%esi
		mov    %dl,_0c33ab_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

	_06f6c0_jump:
		mov    $_0b92f8_data,%eax
		call   _01d740_func
		test   %al,%al
		jne    _06f6ed_jump
		cmpb   $0x000002,_0b9369_data
		jne    _06f6e0_jump
		cmpb   $0x000008,_0b9368_data
		je     _06f6e7_jump

	_06f6e0_jump:
		mov    $0x000001,%eax
		jmp    _06f6e9_jump

	_06f6e7_jump:
		xor    %eax,%eax

	_06f6e9_jump:
		test   %eax,%eax
		je     _06f74f_jump

	_06f6ed_jump:
		mov    $_0b92f8_data,%eax
		mov    $0x000080,%cl
		call   _06ec04_func
		mov    _0b937d_data,%bh
		mov    %cl,_0c33cf_data
		and    $0x0000fb,%bh
		mov    $0x000001,%ch
		mov    %bh,_0b937d_data
		mov    _0c2f40_data,%bx
		mov    %ch,_0c33c2_data
		test   %bx,%bx
		jl     _06f732_jump
		mov    $0x000002,%dl
		mov    %dl,_0b9372_data
		mov    %dl,_0c2f49_data
		jmp    _06f74a_jump

	_06f732_jump:
		xor    %al,%al
		xor    %ecx,%ecx
		mov    %al,_0b9372_data
		mov    $0x000001,%ah
		mov    %cx,_0c2f40_data
		mov    %ah,_0c33cb_data

	_06f74a_jump:
		call   _021b40_func

	_06f74f_jump:
		mov    $_0b92f8_data,%eax
		call   _05b0d8_func
		call   _020660_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f764_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_0b92f8_data,%eax
		xor    %edx,%edx
		call   _02346c_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _06f78c_jump
		xor    %edx,%edx
		mov    %dx,_0b9338_data

	_06f78c_jump:
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0b9368_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _06f7b3_jump
		xor    %al,%al
		jmp    _06f7b5_jump

	_06f7b3_jump:
		mov    $0x000002,%al

	_06f7b5_jump:
		cmpw   $0x000000,_0b933a_data
		jle    _06f817_jump
		mov    _0b9338_data,%eax
		mov    _0b9324_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0b9365_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		mov    %edx,_0b9324_data
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0b9320_data,%ecx
		mov    _0b9364_data,%al
		add    %ecx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		mov    _0b9338_data,%edx
		mov    _0b9324_data,%esi
		sar    $0x000010,%edx
		add    %edx,%esi
		xor    %ah,%ah
		mov    %esi,_0b9324_data
		jmp    _06f827_jump

	_06f817_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_0b92f8_data,%eax
		call   _0230e0_func
		xor    %ah,%ah

	_06f827_jump:
		cwtl   
		testb  $0x000002,_0a525d_data(%eax)
		je     _06f895_jump
		mov    _0b9338_data,%eax
		mov    _0b9324_data,%edi
		sar    $0x000010,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    _0b9362_data,%al
		mov    _0a525d_data(%eax),%cl
		mov    %edi,_0b9324_data
		test   $0x000002,%cl
		jne    _06f877_jump
		cmpw   $0x000000,_0b933a_data
		jge    _06f877_jump
		xor    %esi,%esi
		lea    0x000004(%edi),%ebp
		mov    %si,_0b933a_data
		mov    %ebp,_0b9324_data
		jmp    _06f881_jump

	_06f877_jump:
		mov    $_0b92f8_data,%eax
		call   _023dbc_func

	_06f881_jump:
		xor    %edi,%edi
		mov    $0xffffffff,%eax
		mov    %di,_0b9338_data
		mov    %ax,_0b9342_data

	_06f895_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_06f89c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000064(%edx),%ax
		testb  $0x000010,_0a529e_data(,%eax,4)
		je     _06f8da_jump
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		call   _05a4ac_func
		mov    %eax,%ebx
		jmp    _06f8de_jump

	_06f8da_jump:
		mov    0x000040(%edx),%bx

	_06f8de_jump:
		xor    %eax,%eax
		mov    0x000064(%edx),%ax
		testb  $0x000020,_0a529e_data(,%eax,4)
		je     _06f8fb_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _05a4ac_func
		jmp    _06f8ff_jump

	_06f8fb_jump:
		mov    0x000042(%edx),%ax

	_06f8ff_jump:
		mov    _0b9338_data,%cx
		add    %ebx,%ecx
		mov    %ecx,%esi
		mov    0x00004e(%edx),%bx
		mov    _0b933a_data,%di
		add    %ebx,%esi
		add    0x00004c(%edx),%di
		mov    %cx,_0b9338_data
		mov    %edi,%ebx
		mov    %di,_0b933a_data
		add    %eax,%ebx
		mov    %si,_0b9338_data
		mov    %bx,_0b933a_data
		call   _06f764_func
		cmpl   $0x000000,0x000024(%edx)
		jne    _06f94f_jump
		movw   $0x00ffff,_0b9342_data

	_06f94f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f958_func:
		push   %ecx
		push   %edx
		cmpb   $0x000001,_0c33ab_data
		jne    _06fa02_jump
		cmpw   $0x000000,_0c3112_data
		jne    _06f9aa_jump
		cmpw   $0x000000,_0b933a_data
		jne    _06f9aa_jump
		call   _041d78_func
		test   %ax,%ax
		je     _06f995_jump
		testb  $0x000008,_0b937d_data
		jne    _06f995_jump
		mov    $0x000001,%eax
		jmp    _06f9d9_jump

	_06f995_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _06f9de_jump
		testb  $0x000008,_0b937d_data
		je     _06f9de_jump
		jmp    _06f9d7_jump

	_06f9aa_jump:
		cmpw   $0x000000,_0c3112_data
		jle    _06f9c4_jump
		testb  $0x000008,_0b937d_data
		jne    _06f9c4_jump
		mov    $0x000001,%eax
		jmp    _06f9d9_jump

	_06f9c4_jump:
		cmpw   $0x000000,_0c3112_data
		jge    _06f9de_jump
		testb  $0x000008,_0b937d_data
		je     _06f9de_jump

	_06f9d7_jump:
		xor    %eax,%eax

	_06f9d9_jump:
		call   _06d0cc_func

	_06f9de_jump:
		cmpb   $0x000000,_0a56fd_data
		jne    _06f9ef_jump
		call   _06d6c4_func
		pop    %edx
		pop    %ecx
		ret    

	_06f9ef_jump:
		xor    %ecx,%ecx
		mov    %cx,_0c303e_data
		mov    %cx,_0c3048_data
		pop    %edx
		pop    %ecx
		ret    

	_06fa02_jump:
		testb  $0x000060,_0c3348_data
		jne    _06fab6_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _06fa22_jump
		testb  $0x000018,_0c3348_data
		je     _06fa2c_jump

	_06fa22_jump:
		mov    $0x000001,%eax
		call   _06d0cc_func

	_06fa2c_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _06fa46_jump
		testb  $0x000018,_0c3348_data
		jne    _06fa46_jump
		xor    %eax,%eax
		call   _06d0cc_func

	_06fa46_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _06fa6d_jump
		cmpb   $0x000000,_0a56fd_data
		jne    _06fa6d_jump
		testb  $0x000018,_0c3348_data
		jne    _06fa6d_jump
		call   _06cbac_func
		incb   _0a56fd_data

	_06fa6d_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _06fa94_jump
		cmpb   $0x000000,_0a56fd_data
		jne    _06fa94_jump
		testb  $0x000018,_0c3348_data
		jne    _06fa94_jump
		call   _06cef4_func
		incb   _0a56fd_data

	_06fa94_jump:
		cmpb   $0x000000,_0a56fd_data
		jne    _06f9ef_jump
		testb  $0x000018,_0c3348_data
		jne    _06f9ef_jump
		call   _06d6c4_func
		pop    %edx
		pop    %ecx
		ret    

	_06fab6_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _06fac7_jump
		xor    %eax,%eax
		call   _06d0cc_func

	_06fac7_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _06fadb_jump
		mov    $0x000001,%eax
		call   _06d0cc_func

	_06fadb_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _06faf9_jump
		cmpb   $0x000000,_0a56fd_data
		jne    _06faf9_jump
		call   _06cbac_func
		incb   _0a56fd_data

	_06faf9_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _06fb17_jump
		cmpb   $0x000000,_0a56fd_data
		jne    _06fb17_jump
		call   _06cef4_func
		incb   _0a56fd_data

	_06fb17_jump:
		cmpb   $0x000000,_0a56fd_data
		jne    _06fb28_jump
		call   _06d6c4_func
		pop    %edx
		pop    %ecx
		ret    

	_06fb28_jump:
		xor    %edx,%edx
		mov    %dx,_0c303e_data
		mov    %dx,_0c3048_data
		pop    %edx
		pop    %ecx
		ret    



_06fb3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    %dx,_0c314e_data
		mov    %dx,_0c3148_data
		call   _06ed10_func
		test   %al,%al
		je     _06fe7b_jump
		mov    _0b936d_data,%ah
		inc    %ah
		mov    %ah,_0b936d_data
		cmp    $0x000003,%ah
		jbe    _06fb78_jump
		xor    %dh,%dh
		mov    %dh,_0b936d_data

	_06fb78_jump:
		xor    %eax,%eax
		mov    _0b9320_data,%bx
		mov    _0b9364_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0b9324_data,%cx
		mov    _0b9365_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		xor    %eax,%eax
		sar    $0x000004,%edx
		mov    _0c1124_data,%ax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    _0b932c_data,%edx
		mov    %eax,_0b934c_data
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0b9364_data,%al
		add    %edx,%eax
		add    $0x00001e,%eax
		test   %eax,%eax
		jl     _06fbfe_jump
		xor    %edx,%edx
		mov    _0b932e_data,%eax
		mov    _0b9365_data,%dl
		sar    $0x000010,%eax
		add    %edx,%eax
		add    $0x000014,%eax
		test   %eax,%eax
		jl     _06fbfe_jump
		cmpw   $0x000122,_0b932e_data
		jg     _06fbfe_jump
		cmpw   $0x0000c8,_0b9330_data
		jle    _06fc0b_jump

	_06fbfe_jump:
		xor    %bl,%bl
		mov    %bl,_0b9372_data
		call   _06efbc_func

	_06fc0b_jump:
		mov    _0b9352_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06fc54_jump
		xor    %eax,%eax
		mov    _0b9369_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0b9304_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0b9368_data,%dl
		testb  $0x000008,0x000007(%eax,%edx,8)
		je     _06fc54_jump
		call   _02a0a0_func
		test   %ax,%ax
		je     _06fc54_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02a364_func

	_06fc54_jump:
		xor    %cl,%cl
		mov    $_0b92f8_data,%eax
		mov    %cl,_0a56fd_data
		call   _01e53c_func
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06fc7d_jump
		mov    $_0b92f8_data,%eax
		call   _01ec9c_func

	_06fc7d_jump:
		mov    _0b9369_data,%ch
		cmp    $0x000003,%ch
		je     _06fdfe_jump
		cmp    $0x000006,%ch
		jne    _06fc9a_jump
		cmpb   $0x00000e,_0b9368_data
		je     _06fca1_jump

	_06fc9a_jump:
		mov    $0x000001,%eax
		jmp    _06fca3_jump

	_06fca1_jump:
		xor    %eax,%eax

	_06fca3_jump:
		test   %eax,%eax
		je     _06fdfe_jump
		call   *_0af02c_data
		test   %ax,%ax
		je     _06fcda_jump
		mov    _0b9368_data,%dl
		cmp    $0x000004,%dl
		je     _06fcda_jump
		cmp    $0x000002,%dl
		je     _06fcda_jump
		cmp    $0x000008,%dl
		je     _06fcda_jump
		cmp    $0x000005,%dl
		je     _06fcda_jump
		cmp    $0x000003,%dl
		je     _06fcda_jump
		call   _06dd5c_func

	_06fcda_jump:
		call   *_0af034_data
		test   %ax,%ax
		je     _06fcea_jump
		call   _06dc44_func

	_06fcea_jump:
		call   *_0af030_data
		test   %ax,%ax
		cmpb   $0x000000,_0c1158_data
		je     _06fd1a_jump
		cmpb   $0x00000c,_0b9368_data
		jne    _06fd0a_jump
		call   _069c80_func

	_06fd0a_jump:
		call   *_0af02c_data
		test   %ax,%ax
		jne    _06fd1a_jump
		call   _06981c_func

	_06fd1a_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _06fd2e_jump
		mov    $0x000001,%eax
		call   _06d0cc_func

	_06fd2e_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _06fd3f_jump
		xor    %eax,%eax
		call   _06d0cc_func

	_06fd3f_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _06fd54_jump
		call   _06cbac_func
		incb   _0a56fd_data

	_06fd54_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _06fd69_jump
		call   _06cef4_func
		incb   _0a56fd_data

	_06fd69_jump:
		cmpb   $0x000000,_0a56fd_data
		jne    _06fd77_jump
		call   _06d6c4_func

	_06fd77_jump:
		mov    _0b932c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _06fd97_jump
		cmpw   $0x000000,_0b9338_data
		jge    _06fd97_jump
		xor    %edx,%edx
		mov    %dx,_0b9338_data

	_06fd97_jump:
		cmpw   $0x0000d2,_0b932e_data
		jle    _06fdb5_jump
		cmpw   $0x000000,_0b9338_data
		jle    _06fdb5_jump
		xor    %esi,%esi
		mov    %si,_0b9338_data

	_06fdb5_jump:
		cmpw   $0x000003,_0b9330_data
		jge    _06fdd2_jump
		cmpw   $0x000000,_0b933a_data
		jge    _06fdd2_jump
		xor    %edx,%edx
		mov    %dx,_0b933a_data

	_06fdd2_jump:
		xor    %edx,%edx
		mov    _0b932e_data,%eax
		mov    _0b9365_data,%dl
		sar    $0x000010,%eax
		add    %edx,%eax
		cmp    $0x0000be,%eax
		jle    _06fdfe_jump
		cmpw   $0x000000,_0b933a_data
		jle    _06fdfe_jump
		xor    %ecx,%ecx
		mov    %cx,_0b933a_data

	_06fdfe_jump:
		mov    _0b933a_data,%si
		test   %si,%si
		jle    _06fe11_jump
		call   _05d5e0_func
		jmp    _06fe18_jump

	_06fe11_jump:
		jge    _06fe18_jump
		call   _05d500_func

	_06fe18_jump:
		mov    _0b9338_data,%ax
		test   %ax,%ax
		jge    _06fe2a_jump
		call   _05dbb4_func
		jmp    _06fe31_jump

	_06fe2a_jump:
		jle    _06fe31_jump
		call   _05db30_func

	_06fe31_jump:
		testb  $0x000004,_0b937d_data
		je     _06fe44_jump
		mov    $_0b92f8_data,%eax
		call   _05b0d8_func

	_06fe44_jump:
		cmpw   $0x000000,_0c3156_data
		jne    _06fe7b_jump
		cmpw   $0x000000,_0c3146_data
		jne    _06fe7b_jump
		push   $_0c313e_data
		mov    $_0c312c_data,%ecx
		mov    $_0c312a_data,%ebx
		mov    $_0c3128_data,%edx
		mov    $_0b92f8_data,%eax
		call   _01e300_func
		call   _02b42c_func

	_06fe7b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06fe80_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %dx,(%esp)
		mov    _0b9410_data,%edx
		mov    _0b9414_data,%si
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,0x000004(%esp)
		test   %si,%si
		jle    _06fef7_jump

	_06fea7_jump:
		cmpw   $0x000027,0x000064(%edx)
		jne    _06feeb_jump
		testb  $0x000004,0x000085(%edx)
		je     _06feeb_jump
		xor    %eax,%eax
		mov    0x000028(%edx),%ecx
		mov    0x00006c(%edx),%al
		add    %eax,%ecx
		movswl %di,%eax
		cmp    %ecx,%eax
		jne    _06feeb_jump
		xor    %ecx,%eax
		mov    0x00006d(%edx),%al
		add    0x00002c(%edx),%eax
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _06fee1_jump
		neg    %eax

	_06fee1_jump:
		cmp    $0x000010,%eax
		jge    _06feeb_jump
		movb   $0x000001,0x000004(%esp)

	_06feeb_jump:
		inc    %ebx
		add    $0x000088,%edx
		cmp    %si,%bx
		jl     _06fea7_jump

	_06fef7_jump:
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06ff04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		xor    %edx,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0c314e_data
		mov    %dx,_0c3148_data
		xor    %edx,%edx
		call   _071800_func
		call   _06ed10_func
		test   %al,%al
		je     _07059e_jump
		xor    %eax,%eax
		mov    _0b9320_data,%bx
		mov    _0b9364_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0b9324_data,%cx
		mov    _0b9365_data,%al
		add    %ecx,%eax
		xor    %edx,%edx
		cwtl   
		mov    _0c1124_data,%dx
		sar    $0x000004,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    %eax,_0b934c_data
		call   _02a220_func
		mov    _0c3178_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06ffa3_jump
		xor    %eax,%eax
		mov    _0b932e_data,%edx
		mov    _0b9365_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		test   %eax,%eax
		jge    _06ffa3_jump
		xor    %esi,%esi
		mov    %si,_0b933a_data

	_06ffa3_jump:
		mov    _0b9352_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06ffe8_jump
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0b9368_data,%al
		testb  $0x000008,0x000007(%edx,%eax,8)
		je     _06ffe8_jump
		call   _02a0a0_func
		test   %ax,%ax
		je     _06ffe8_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02a364_func

	_06ffe8_jump:
		testb  $0x000080,_0c3348_data
		je     _07000d_jump
		mov    _0b9352_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _07000d_jump
		cmpw   $0x000000,_0b9356_data
		jne    _07000d_jump
		call   _05fce4_func

	_07000d_jump:
		xor    %cl,%cl
		mov    $_0b92f8_data,%eax
		mov    %cl,_0a56fd_data
		call   _01e53c_func
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _070038_jump
		mov    $_0b92f8_data,%eax
		call   _01ec9c_func
		jmp    _070046_jump

	_070038_jump:
		xor    %eax,%eax
		mov    %ax,_0b933a_data
		mov    %ax,_0b9338_data

	_070046_jump:
		mov    _0c3130_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _07012a_jump
		xor    %eax,%eax
		mov    _0b9369_data,%al
		mov    _0b9304_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0b9368_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _07012a_jump
		cmpb   $0x000000,_0b9369_data
		jne    _0700b9_jump
		mov    _0b9368_data,%ah
		cmp    $0x000004,%ah
		je     _0700b3_jump
		cmp    $0x000005,%ah
		je     _0700b3_jump
		cmp    $0x000006,%ah
		je     _0700b3_jump
		cmp    $0x000007,%ah
		je     _0700b3_jump
		cmp    $0x000009,%ah
		je     _0700b3_jump
		cmp    $0x00000a,%ah
		je     _0700b3_jump
		mov    $0x000001,%eax
		jmp    _0700b5_jump

	_0700b3_jump:
		xor    %eax,%eax

	_0700b5_jump:
		test   %eax,%eax
		jne    _070105_jump

	_0700b9_jump:
		mov    _0b9369_data,%ch
		cmp    $0x000001,%ch
		jne    _0700d4_jump
		cmp    _0b9368_data,%ch
		setne  %al
		and    $0x0000ff,%eax
		jne    _070105_jump

	_0700d4_jump:
		mov    _0b9369_data,%dl
		cmp    $0x000003,%dl
		jne    _07012a_jump
		mov    _0b9368_data,%dh
		cmp    $0x000001,%dh
		je     _0700ff_jump
		cmp    %dl,%dh
		je     _0700ff_jump
		cmp    $0x000002,%dh
		je     _0700ff_jump
		cmp    $0x000004,%dh
		je     _0700ff_jump
		mov    $0x000001,%eax
		jmp    _070101_jump

	_0700ff_jump:
		xor    %eax,%eax

	_070101_jump:
		test   %eax,%eax
		je     _07012a_jump

	_070105_jump:
		cmpw   $0x000000,_0c3132_data
		je     _070116_jump
		mov    $0x000015,%ebx
		jmp    _07011b_jump

	_070116_jump:
		mov    $0x000014,%ebx

	_07011b_jump:
		mov    $0x000003,%edx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func

	_07012a_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _07013c_jump
		cmpb   $0x000008,_0b9368_data
		je     _07014e_jump

	_07013c_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _070158_jump
		cmpb   $0x00001f,_0b9368_data
		jne    _070158_jump

	_07014e_jump:
		call   _06e600_func
		jmp    _070331_jump

	_070158_jump:
		cmpb   $0x000003,_0b9369_data
		jne    _07029c_jump
		mov    _0b9368_data,%ah
		cmp    $0x000010,%ah
		jne    _07024a_jump
		mov    _0b9320_data,%cx
		xor    %ebx,%ebx
		movzbw _0b9365_data,%si
		mov    _0b9364_data,%bl
		mov    _0b9324_data,%di
		add    %ecx,%ebx
		mov    _0c3349_data,%cl
		add    %edi,%esi
		test   $0x000001,%cl
		jne    _07021b_jump
		movswl %si,%eax
		sub    $0x000008,%eax
		sar    $0x000004,%eax
		movswl %bx,%edi
		movswl %ax,%ecx
		mov    %edi,%eax
		sar    $0x000004,%eax
		mov    %ecx,%edx
		cwtl   
		call   _01ea94_func
		cmp    $0x000010,%al
		jne    _070226_jump
		lea    -0x000010(%edi),%eax
		sar    $0x000004,%eax
		mov    %ecx,%edx
		cwtl   
		call   _01ea94_func
		mov    %ebx,%edx
		and    $0x0000f0,%dl
		mov    %edx,0x000010(%esp)
		cmp    $0x000010,%al
		jne    _0701e7_jump
		mov    %edx,%ebx
		add    $0x000003,%ebx
		jmp    _070202_jump

	_0701e7_jump:
		add    $0x000010,%edi
		sar    $0x000004,%edi
		mov    %ecx,%edx
		movswl %di,%eax
		call   _01ea94_func
		cmp    $0x000010,%al
		jne    _070202_jump
		mov    0x000010(%esp),%ebx
		add    $0x000013,%ebx

	_070202_jump:
		movswl %si,%ecx
		movswl %bx,%ebx
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   _06fe80_func
		test   %al,%al
		jne    _070226_jump
		mov    %ecx,%edx
		mov    %ebx,%eax
		jmp    _070221_jump

	_07021b_jump:
		movswl %si,%edx
		movswl %bx,%eax

	_070221_jump:
		call   _07ce88_func

	_070226_jump:
		mov    _0c3134_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _070259_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		movw   $0x000001,0x00005c(%edx,%eax,8)
		jmp    _070259_jump

	_07024a_jump:
		cmp    $0x000015,%ah
		je     _070254_jump
		cmp    $0x000014,%ah
		jne    _070259_jump

	_070254_jump:
		call   _06e518_func

	_070259_jump:
		mov    _0b9368_data,%ch
		cmp    $0x000016,%ch
		setne  %al
		and    $0x0000ff,%eax
		je     _070331_jump
		cmp    $0x000017,%ch
		setne  %al
		and    $0x0000ff,%eax
		je     _070331_jump
		cmp    $0x000020,%ch
		setne  %al
		and    $0x0000ff,%eax
		je     _070331_jump
		call   _06be64_func
		jmp    _070331_jump

	_07029c_jump:
		call   *_0af028_data
		test   %ax,%ax
		je     _0702ac_jump
		call   _06dd9c_func

	_0702ac_jump:
		call   *_0af02c_data
		test   %ax,%ax
		je     _0702bc_jump
		call   _06dd5c_func

	_0702bc_jump:
		call   *_0af034_data
		test   %ax,%ax
		je     _0702cc_jump
		call   _06dc44_func

	_0702cc_jump:
		call   *_0af030_data
		test   %ax,%ax
		cmpb   $0x000000,_0c1158_data
		je     _0702fc_jump
		cmpb   $0x00000c,_0b9368_data
		jne    _0702ec_jump
		call   _069c80_func

	_0702ec_jump:
		call   *_0af02c_data
		test   %ax,%ax
		jne    _0702fc_jump
		call   _06981c_func

	_0702fc_jump:
		mov    _0b9369_data,%cl
		cmp    $0x000007,%cl
		jne    _07030e_jump
		call   _06e09c_func
		jmp    _07032c_jump

	_07030e_jump:
		cmp    $0x000002,%cl
		jne    _07031a_jump
		call   _06e600_func
		jmp    _07032c_jump

	_07031a_jump:
		call   *_0af028_data
		test   %ax,%ax
		jne    _07032c_jump
		movb   $0x000001,_0c33ce_data

	_07032c_jump:
		call   _06f958_func

	_070331_jump:
		mov    _0c3348_data,%dh
		test   $0x000060,%dh
		je     _0703c7_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0b92f8_data,%eax
		call   _01e1b8_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		lea    (%edx,%eax,1),%ebx
		mov    _0c113c_data,%eax
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		sub    %edx,%ebx
		mov    _0c1140_data,%ecx
		mov    %ebx,0x000028(%eax)
		mov    %ebx,%edx
		mov    %ebx,0x000028(%ecx)
		xor    %ebx,%edx
		mov    0x00000a(%esp),%ebx
		mov    0x000078(%eax),%dl
		sar    $0x000010,%ebx
		sub    %edx,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x000024(%ecx),%edx
		mov    %ebx,0x00002c(%ecx)
		test   %edx,%edx
		jne    _0703ae_jump
		mov    %ecx,%eax
		call   _020064_func

	_0703ae_jump:
		mov    _0c113c_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _07047b_jump
		call   _020064_func
		jmp    _07047b_jump

	_0703c7_jump:
		test   $0x000018,%dh
		je     _07047b_jump
		mov    %dh,%al
		and    $0x000018,%al
		cmp    $0x000008,%al
		jne    _070411_jump
		mov    %dh,%bl
		and    $0x0000e6,%bl
		mov    %bl,_0c3348_data
		mov    %bl,%bh
		mov    $_0b92f8_data,%eax
		or     $0x000011,%bh
		mov    $0x000001,%edx
		mov    %bh,_0c3348_data
		call   _07d3c4_func
		mov    $0x000003,%ebx
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		jmp    _07047b_jump

	_070411_jump:
		cmpb   $0x000001,_0b9369_data
		jne    _07042a_jump
		mov    _0b9368_data,%cl
		cmp    $0x000003,%cl
		je     _070458_jump
		cmp    $0x000007,%cl
		je     _070458_jump

	_07042a_jump:
		cmpb   $0x000002,_0b9369_data
		je     _070458_jump
		mov    _0c3348_data,%ah
		mov    $0x000003,%ebx
		or     $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ah,_0c3348_data
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		jmp    _07047b_jump

	_070458_jump:
		mov    _0c3348_data,%al
		and    $0x000018,%al
		cmp    $0x000018,%al
		jne    _07047b_jump
		cmpb   $0x000002,_0b9369_data
		setne  %al
		and    $0x0000ff,%eax
		je     _07047b_jump
		andb   $0x0000e7,_0c3348_data

	_07047b_jump:
		mov    _0b9340_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07048d_jump
		call   _06f89c_func

	_07048d_jump:
		call   _06f150_func
		test   %ax,%ax
		je     _0704b9_jump
		cmpb   $0x000007,_0b9369_data
		jne    _0704a5_jump
		call   _06e378_func

	_0704a5_jump:
		xor    %eax,%eax
		mov    %ax,_0b9338_data
		mov    %ax,_0c3112_data
		mov    %ax,_0b9340_data

	_0704b9_jump:
		mov    _0c3152_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0704cb_jump
		call   _06f068_func

	_0704cb_jump:
		call   _06f4a0_func
		call   _05e584_func
		mov    _0b933a_data,%cx
		test   %cx,%cx
		jle    _0704e8_jump
		call   _05d5e0_func
		jmp    _0704ef_jump

	_0704e8_jump:
		jge    _0704ef_jump
		call   _05d500_func

	_0704ef_jump:
		mov    _0b9338_data,%di
		test   %di,%di
		jge    _070502_jump
		call   _05dbb4_func
		jmp    _070509_jump

	_070502_jump:
		jle    _070509_jump
		call   _05db30_func

	_070509_jump:
		testb  $0x000004,_0b937d_data
		je     _070532_jump
		cmpb   $0x000007,_0b9369_data
		setne  %al
		and    $0x0000ff,%eax
		je     _070532_jump
		mov    $_0b92f8_data,%eax
		call   _05b0d8_func
		call   _06f5c8_func

	_070532_jump:
		push   $_0c313e_data
		mov    $_0c312c_data,%ecx
		mov    $_0c312a_data,%ebx
		mov    $_0c3128_data,%edx
		mov    $_0b92f8_data,%eax
		call   _01e300_func
		call   _02b42c_func
		xor    %eax,%eax
		mov    _0b9324_data,%ecx
		mov    _0b9365_data,%al
		add    %ecx,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0b9320_data,%esi
		mov    _0b9364_data,%al
		add    %esi,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01ea94_func
		cmp    $0x00000b,%al
		jne    _070590_jump
		movb   $0x000001,_0c33c7_data

	_070590_jump:
		cmpb   $0x000000,_0c33c7_data
		je     _07059e_jump
		call   _067584_func

	_07059e_jump:
		call   _020660_func
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0705b0_func:
		push   %edx
		mov    $0x01f400,%edx
		mov    $_0c1068_data,%eax
		call   _084e40_func
		pop    %edx
		ret    



_0705c4_func:
		mov    $_0c1068_data,%eax
		jmp    _085140_func



_0705d0_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,0x000004(%esp)
		mov    %bx,(%esp)
		mov    %cx,0x000008(%esp)
		call   _03ba10_func
		mov    $_0b3428_data,%edx
		mov    $0x000002,%eax
		mov    $0x00fa00,%ecx
		call   _03e70c_func
		call   _018aff_func
		mov    _0c0f50_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0c0f9c_data,%edi
		mov    _0c0f50_data,%esi
		xor    %ebx,%ebx
		call   _0167a0_func
		mov    $_0b3d28_data,%edi
		mov    $_0b3428_data,%esi

	_070635_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07066a_jump
		call   _018b0f_func
		call   _018aff_func
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03e78c_func
		inc    %ebx
		mov    0x000004(%esp),%edx
		cmp    %dx,%bx
		jne    _070635_jump
		mov    (%esp),%ecx
		dec    %ecx
		xor    %edx,%ebx
		mov    %cx,(%esp)
		jmp    _070635_jump

	_07066a_jump:
		call   _042170_func
		xor    %ebx,%ebx
		mov    $_0b3428_data,%edi
		mov    $0x000039,%esi
		xor    %ecx,%ecx

	_07067d_jump:
		mov    %esi,%eax
		call   _041ce0_func
		test   %al,%al
		jne    _0706d9_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _0706d9_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _0706d9_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0706d9_jump
		call   _018b0f_func
		call   _018aff_func
		mov    $_0b3d28_data,%edx
		mov    %edi,%eax
		call   _03e78c_func
		call   _042170_func
		inc    %ebx
		cmp    0x000004(%esp),%bx
		jne    _07067d_jump
		mov    0x000008(%esp),%edx
		dec    %edx
		mov    %ecx,%ebx
		mov    %dx,0x000008(%esp)
		jmp    _07067d_jump

	_0706d9_jump:
		mov    $_0b3428_data,%edx
		mov    $0x000002,%eax
		call   _03e87c_func
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    



_0706f0_func:
		push   %edx
		mov    $_0c216f_data,%edx
		mov    $_0c1068_data,%eax
		call   _0488b0_func
		mov    $_0c2166_data,%edx
		mov    $_0c1068_data,%eax
		call   _03fcac_func
		pop    %edx
		ret    



_070714_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _0705b0_func
		mov    $0x000008,%ecx
		xor    %ah,%ah
		mov    $0xffffffff,%ebx
		mov    %ah,_0c33d3_data
		call   _0706f0_func
		xor    %eax,%eax
		mov    $0x00003c,%edx
		mov    _0c33a0_data,%al
	_070743_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $_0b4028_data,%esi
		call   _03fa6c_func
		call   _03ea80_func
		mov    _0c0fcc_data,%eax
		mov    $_0b3428_data,%edi
		call   _0705d0_func
		mov    $0x000300,%ecx
		mov    $0xffffffff,%ebx
		mov    $0x00003c,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000008,%ecx
		mov    _0c0fd0_data,%eax
		call   _0705d0_func
		call   _0705c4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

.data

_0707a0_data:
		.ascii   "(.37<@CFHJMPSVY[]_`behkmoqsuxz|}"
		.ascii  "\x7f\x81\x83\x85\x87\x89\x8a\x8c"
		.ascii  "\x8e\x90\x91\x93\x95\x96\x98\x99"
		.ascii  "\x9b\x9c\x9e\xa0\xa1\xa3\xa4\xa6"
		.ascii  "\xa7\xa8\xaa\xab\xad\xae\xb0\xb1"
		.ascii  "\xb2\xb4\xb5\xb6\xb8\xb9\xba\xbb"
		.ascii  "\xbd\xbe\xbf\xc1\xc2\xc3\xc4\xc6"
		.ascii  "\xc7\xc8\xc9\xca\xcb\xcd"

.text

	_070831_jump:
		xchg   %eax,%ebp
		add    %al,(%eax)
		add    %al,(%eax)
		sub    %edx,%eax

	_070838_jump:
		mov    _0ddf80_data(,%eax,4),%dx
		mov    %edx,%eax
		pop    %edx
		ret    



_070880_func:
		push   %ebx
		test   %ax,%ax
		jl     _0708a2_jump
		cmp    $0x000020,%ax
		jge    _0708a2_jump
		movswl %ax,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    %dx,_0ddf80_data(,%eax,4)
		pop    %ebx
		ret    

	_0708a2_jump:
		int3   
		pop    %ebx
		ret    



_0708a8_func:
		push   %ebx
		test   %ax,%ax
		jl     _0708ca_jump
		cmp    $0x000020,%ax
		jge    _0708ca_jump
		movswl %ax,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    %dx,_0ddf86_data(,%eax,4)
		pop    %ebx
		ret    

	_0708ca_jump:
		int3   
		pop    %ebx
		ret    



_0708d0_func:
		push   %ecx
		mov    %ebx,%ecx
		movswl %ax,%ebx
		movswl %dx,%edx
		mov    %ebx,%eax
		call   _070880_func
		movswl %cx,%edx
		mov    %ebx,%eax
		call   _0708a8_func
		pop    %ecx
		ret    



_0708ec_func:
		push   %ebx
		push   %edx
		mov    $0xffffffff,%ebx
		mov    $0xfffffffe,%edx
		cwtl   
		call   _0708d0_func
		pop    %edx
		pop    %ebx
		ret    



_070904_func:
		push   %edx
		xor    %edx,%edx

	_070907_jump:
		movswl %dx,%eax
		inc    %edx
		call   _0708ec_func
		cmp    $0x000020,%dx
		jl     _070907_jump
		pop    %edx
		ret    



_070918_func:
		push   %edx
		test   %ax,%ax
		jl     _070931_jump
		cmp    $0x000020,%ax
		jge    _070931_jump
		cwtl   
		mov    _0dde10_data(,%eax,2),%dx
		mov    %edx,%eax
		pop    %edx
		ret    

	_070931_jump:
		int3   
		mov    $0xfffffffe,%edx
		mov    %edx,%eax
		pop    %edx
		ret    



_07093c_func:
		push   %edx
		test   %ax,%ax
		jl     _070955_jump
		cmp    $0x000020,%ax
		jge    _070955_jump
		cwtl   
		mov    _0dde50_data(,%eax,2),%dx
		mov    %edx,%eax
		pop    %edx
		ret    

	_070955_jump:
		int3   
		xor    %edx,%edx
		mov    %edx,%eax
		pop    %edx
		ret    



_07095c_func:
		test   %ax,%ax
		jl     _070971_jump
		cmp    $0x000020,%ax
		jge    _070971_jump
		cwtl   
		mov    %dx,_0dde10_data(,%eax,2)
		ret    

	_070971_jump:
		int3   
		ret    



_070974_func:
		test   %ax,%ax
		jl     _070989_jump
		cmp    $0x000020,%ax
		jge    _070989_jump
		cwtl   
		mov    %dx,_0dde50_data(,%eax,2)
		ret    

	_070989_jump:
		int3   
		ret    



_07098c_func:
		push   %ecx
		mov    %ebx,%ecx
		movswl %ax,%ebx
		movswl %dx,%edx
		mov    %ebx,%eax
		call   _07095c_func
		movswl %cx,%edx
		mov    %ebx,%eax
		call   _070974_func
		pop    %ecx
		ret    



_0709a8_func:
		push   %ebx
		push   %edx
		mov    $0xfffffffe,%edx
		cwtl   
		xor    %ebx,%ebx
		call   _07098c_func
		pop    %edx
		pop    %ebx
		ret    



_0709bc_func:
		push   %edx
		xor    %edx,%edx

	_0709bf_jump:
		movswl %dx,%eax
		inc    %edx
		call   _0709a8_func
		cmp    $0x000020,%dx
		jl     _0709bf_jump
		pop    %edx
		ret    



_0709d0_func:
		push   %ebx
		push   %edx
		mov    $0x000020,%ebx
		xor    %edx,%edx
		mov    $_0de100_data,%eax
		mov    %dx,_0de126_data
		xor    %edx,%edx
		call   _085360_func
		call   _0709bc_func
		call   _070904_func
		pop    %edx
		pop    %ebx
		ret    



_0709fc_func:
		mov    %ax,_0ab874_data
		ret    



_070a0c_func:
		mov    %ax,_0ab876_data
		ret    



_070a14_func:
		mov    _0ab876_data,%ax
		mov    %eax,%eax
		ret    



_070a20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0c3372_data
		je     _070a4d_jump
		xor    %esi,%esi
		xor    %edi,%edi

	_070a32_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _0406d8_func
		cmp    $0x000020,%si
		jl     _070a32_jump
		call   _0709d0_func

	_070a4d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070aa8_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    0x000036(%eax),%ax
		add    %edx,%eax
		movswl %ax,%edx
		cmp    $0xffffffa0,%edx
		jge    _070ac0_jump
		xor    %eax,%eax
		pop    %edx
		ret    

	_070ac0_jump:
		cmp    $0x0001a0,%ax
		jg     _070ad2_jump
		lea    0x000060(%edx),%eax
		sar    $0x000002,%eax
		cmp    $0x00007f,%ax
		jle    _070ad7_jump

	_070ad2_jump:
		mov    $0x00007f,%eax

	_070ad7_jump:
		pop    %edx
		ret    



_070adc_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x000010(%esp),%ebx
		lea    0x000008(%esp),%edx
		call   _01ddf8_func
		xor    %edx,%edx
		mov    _0b9320_data,%ebx
		mov    _0b9364_data,%dl
		add    %ebx,%edx
		mov    -0x000002(%esp),%ebx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		sub    %edx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		mov    0x000006(%esp),%ecx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0b9324_data,%edx
		mov    _0b9365_data,%al
		sar    $0x000010,%ecx
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    %ecx
		sar    $0x000010,%eax
		add    %eax,%ecx
		lea    -0x000028(%edx),%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		movswl %bx,%edx
		cwtl   
		add    %edx,%eax
		mov    $0x00007f,%edx
		sar    $0x000002,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %dx,%dx
		jge    _070b67_jump
		xor    %edx,%eax

	_070b67_jump:
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070b70_func:
		push   %ebx
		push   %edx
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _0709fc_func
		pop    %edx
		pop    %ebx
		ret    



_070b94_func:
		push   %ebx
		push   %edx
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _070a0c_func
		pop    %edx
		pop    %ebx



_070bb4_func:
		ret    



_070bb8_func:
		test   %ax,%ax
		ret    



_070bbc_func:
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0c3372_data
		je     _070c0f_jump
		call   _0709d0_func
		mov    _0af040_data,%eax
		sar    $0x000010,%eax
		call   _070b70_func
		mov    _0af044_data,%eax
		sar    $0x000010,%eax
		call   _070b94_func
		mov    _0af042_data,%eax
		mov    $0x000002,%ecx
		sar    $0x000010,%eax
		xor    %edx,%edx
		call   _070bb8_func
		mov    %dx,_0de12a_data
		mov    %dx,_0de120_data
		mov    %cx,_0de124_data

	_070c0f_jump:
		pop    %edx
		pop    %ecx
		lea    0x000000(%eax),%eax
		ret    



_070c18_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx

	_070c1e_jump:
		movswl %dx,%eax
		call   _070918_func
		cmp    %bx,%ax
		je     _070c32_jump
		inc    %edx
		cmp    $0x000020,%dx
		jne    _070c1e_jump

	_070c32_jump:
		cmp    $0x000020,%dx
		jne    _070c55_jump

	_070c38_jump:
		dec    %edx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _070c4b_jump
		call   _07093c_func
		test   %ax,%ax
		jne    _070c38_jump

	_070c4b_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		jne    _070c55_jump
		xor    %edx,%edx

	_070c55_jump:
		movswl %dx,%eax
		mov    _0dde50_data(,%eax,2),%dx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		jne    _070c69_jump
		int3   

	_070c69_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_070c70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0de126_data,%cx
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		test   %cx,%cx
		je     _070cb7_jump
		mov    $_0dde90_data,%edx
		mov    _0dde90_data,%si
		xor    %eax,%eax
		cmp    %si,%bx
		je     _070cad_jump

	_070c9b_jump:
		cmp    %cx,%ax
		jge    _070cad_jump
		inc    %eax
		mov    0x000018(%edx),%di
		add    $0x000018,%edx
		cmp    %di,%bx
		jne    _070c9b_jump

	_070cad_jump:
		cmp    %cx,%ax
		jne    _070cb7_jump
		mov    $0xffffffff,%eax

	_070cb7_jump:
		mov    %cx,_0de126_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070cc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    $_0ddf80_data,%edx
		mov    _0ddf80_data,%cx
		xor    %eax,%eax
		cmp    %cx,%bx
		je     _070cf0_jump

	_070cdd_jump:
		cmp    $0x000020,%ax
		jge    _070cf0_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%bx
		jne    _070cdd_jump

	_070cf0_jump:
		cmp    $0x000020,%ax
		jne    _070cfb_jump
		mov    $0xffffffff,%eax

	_070cfb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070d3c_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    $_0ddf86_data,%edx
		mov    $_0ddf80_data,%ebx
		xor    %eax,%eax

	_070d4f_jump:
		cmp    (%edx),%si
		jne    _070d59_jump
		cmp    (%ebx),%cx
		je     _070d68_jump

	_070d59_jump:
		cmp    $0x000020,%ax
		jge    _070d68_jump
		inc    %eax
		add    $0x00000c,%edx
		add    $0x00000c,%ebx
		jmp    _070d4f_jump

	_070d68_jump:
		cmp    $0x000020,%ax
		jne    _070d73_jump
		mov    $0xffffffff,%eax

	_070d73_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_070d78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0de126_data,%si
		cwtl   
		call   _070c70_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _070e5b_jump
		mov    _0de126_data,%si
		mov    %eax,%ebx
		cmp    %si,%ax
		jge    _070e47_jump

	_070da7_jump:
		movswl %bx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0dde90_data(%edx),%cx
		mov    %cx,_0dde90_data(%eax)
		mov    _0dde92_data(%edx),%cx
		mov    %cx,_0dde92_data(%eax)
		mov    _0dde94_data(%edx),%cx
		mov    %cx,_0dde94_data(%eax)
		mov    _0dde96_data(%edx),%cx
		mov    %cx,_0dde96_data(%eax)
		mov    _0dde98_data(%edx),%cx
		mov    %cx,_0dde98_data(%eax)
		mov    _0dde9a_data(%edx),%cx
		mov    %cx,_0dde9a_data(%eax)
		mov    _0dde9c_data(%edx),%cx
		mov    %cx,_0dde9c_data(%eax)
		mov    _0dde9e_data(%edx),%cx
		mov    %cx,_0dde9e_data(%eax)
		mov    _0ddea0_data(%edx),%ecx
		mov    %ecx,_0ddea0_data(%eax)
		mov    _0ddea4_data(%edx),%dx
		inc    %ebx
		mov    %dx,_0ddea4_data(%eax)
		cmp    %si,%bx
		jl     _070da7_jump

	_070e47_jump:
		mov    %si,_0de126_data
		test   %si,%si
		jle    _070e5b_jump
		dec    %esi
		mov    %si,_0de126_data

	_070e5b_jump:
		mov    _0de126_data,%si
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070e68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0de126_data,%si
		mov    _0c1084_data,%ebp
		xor    %ebx,%ebx
		test   %si,%si
		jle    _070f5f_jump

	_070e86_jump:
		movswl %bx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0ddea0_data(%eax),%edx
		cmp    %ebp,%edx
		jae    _070f55_jump
		test   %edx,%edx
		je     _070f55_jump
		mov    %ebx,%ecx
		cmp    %si,%bx
		jge    _070f4d_jump

	_070ead_jump:
		movswl %cx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0dde90_data(%edx),%di
		mov    %di,_0dde90_data(%eax)
		mov    _0dde92_data(%edx),%di
		mov    %di,_0dde92_data(%eax)
		mov    _0dde94_data(%edx),%di
		mov    %di,_0dde94_data(%eax)
		mov    _0dde96_data(%edx),%di
		mov    %di,_0dde96_data(%eax)
		mov    _0dde98_data(%edx),%di
		mov    %di,_0dde98_data(%eax)
		mov    _0dde9a_data(%edx),%di
		mov    %di,_0dde9a_data(%eax)
		mov    _0dde9c_data(%edx),%di
		mov    %di,_0dde9c_data(%eax)
		mov    _0dde9e_data(%edx),%di
		mov    %di,_0dde9e_data(%eax)
		mov    _0ddea0_data(%edx),%edi
		mov    %edi,_0ddea0_data(%eax)
		mov    _0ddea4_data(%edx),%dx
		inc    %ecx
		mov    %dx,_0ddea4_data(%eax)
		cmp    %si,%cx
		jl     _070ead_jump

	_070f4d_jump:
		test   %si,%si
		jle    _070f56_jump
		dec    %esi
		jmp    _070f56_jump

	_070f55_jump:
		inc    %ebx

	_070f56_jump:
		cmp    %si,%bx
		jl     _070e86_jump

	_070f5f_jump:
		mov    %ebp,_0c1084_data
		mov    %si,_0de126_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070f74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    $_0ddf80_data,%edx
		mov    _0ddf80_data,%cx
		xor    %eax,%eax
		cmp    %cx,%bx
		je     _070fa0_jump

	_070f8d_jump:
		cmp    $0x000020,%ax
		jge    _070fa0_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%bx
		jne    _070f8d_jump

	_070fa0_jump:
		cmp    $0x000020,%ax
		je     _070fac_jump
		cwtl   
		call   _0708ec_func

	_070fac_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071008_func:
		movswl %dx,%edx
		mov    _0707a0_data(%edx),%dl
		and    $0x0000ff,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		ret    



_071020_func:
		push   %ebx
		mov    $0x00007f,%ebx
		movswl %dx,%edx
		sub    %edx,%ebx
		mov    _0707a0_data(%ebx),%dl
		and    $0x0000ff,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		pop    %ebx
		ret    



_071040_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx

	_071046_jump:
		movswl %dx,%eax
		call   _070918_func
		cmp    %bx,%ax
		jne    _071058_jump
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_071058_jump:
		inc    %edx
		cmp    $0x000020,%dx
		jl     _071046_jump
		mov    $0x000020,%eax
		pop    %edx
		pop    %ebx
		ret    



_071068_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		cmpb   $0x000000,_0c3372_data
		je     _071749_jump
		cmpw   $0x000000,_0b9356_data
		je     _071094_jump
		cmp    _0c314c_data,%di
		je     _07109d_jump

	_071094_jump:
		cmp    _0c3158_data,%di
		jne    _0710a2_jump

	_07109d_jump:
		mov    $0xffffffff,%edi

	_0710a2_jump:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		jne    _0710b8_jump
		cmp    $0x00000f,%si
		je     _0710b8_jump
		xor    %eax,%eax
		mov    %ax,_0de120_data

	_0710b8_jump:
		movswl %di,%eax
		call   _070c18_func
		mov    %ax,0x00001c(%esp)
		cmp    %ax,%si
		je     _07115b_jump
		movswl %ax,%edx
		testb  $0x000008,_0aae74_data(%edx)
		je     _07115b_jump
		test   %ax,%ax
		jne    _0710e4_jump
		int3   

	_0710e4_jump:
		movswl %di,%ebx
		mov    %ebx,%eax
		mov    0x00001a(%esp),%edx
		call   _070d78_func
		sar    $0x000010,%edx
		mov    %ebx,%eax
		call   _070d3c_func
		movswl %ax,%ebp
		cmp    $0xffffffff,%ebp
		je     _07115b_jump
		lea    0x000000(,%ebp,4),%eax
		sub    %ebp,%eax
		mov    _0ddf84_data(,%eax,4),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		xor    %ecx,%ecx
		mov    _0ab374_data(,%edx,4),%bl
		mov    _0ab376_data(,%edx,4),%cl
		mov    _0ab375_data(,%edx,4),%al
		push   %ebx
		mov    %eax,%ebx
		mov    _0ab774_data(%edx),%dl
		and    $0x0000ff,%ebx
		and    $0x0000ff,%edx
		mov    %ebp,%eax
		call   _0406d8_func
		mov    %ebp,%eax
		xor    %bh,%bh
		call   _0708ec_func
		mov    %bh,_0de100_data(%ebp)

	_07115b_jump:
		cmpb   $0x000000,_0c33a9_data
		jne    _0716bd_jump
		test   %si,%si
		je     _0716bd_jump
		mov    0x00001c(%esp),%edx
		cmp    %dx,%si
		jne    _07118a_jump
		movswl %dx,%eax
		testb  $0x000004,_0aae74_data(%eax)
		je     _0716bd_jump

	_07118a_jump:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _0711a8_jump
		cmp    _0c3158_data,%di
		jne    _0711be_jump
		mov    _0c3156_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0711be_jump

	_0711a8_jump:
		mov    $_0b92f8_data,%eax
		mov    $0x00007f,%cl
		call   _070aa8_func
		mov    %al,0x000024(%esp)
		mov    %cl,0x000020(%esp)
		jmp    _0711fe_jump

	_0711be_jump:
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		call   _070aa8_func
		mov    %al,0x000024(%esp)
		movswl %si,%eax
		testb  $0x000001,_0aae74_data(%eax)
		jne    _0711ee_jump
		movb   $0x00007f,0x000020(%esp)
		jmp    _0711fe_jump

	_0711ee_jump:
		mov    _0b9410_data,%eax
		add    %edx,%eax
		call   _070adc_func
		mov    %al,0x000020(%esp)

	_0711fe_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0ab375_data,%bl
		mov    _0ab376_data,%cl
		cmp    $0x000037,%si
		jb     _071266_jump
		jbe    _071438_jump
		cmp    $0x000067,%si
		jb     _071247_jump
		jbe    _071438_jump
		cmp    $0x0000a9,%si
		jb     _07143f_jump
		jbe    _071310_jump
		cmp    $0x0000f5,%si
		je     _07141f_jump
		jmp    _07143f_jump

	_071247_jump:
		cmp    $0x000039,%si
		jb     _07143f_jump
		jbe    _071438_jump
		cmp    $0x000050,%si
		je     _071381_jump
		jmp    _07143f_jump

	_071266_jump:
		cmp    $0x000013,%si
		jb     _071289_jump
		jbe    _071406_jump
		cmp    $0x00002f,%si
		jb     _07143f_jump
		jbe    _0712e9_jump
		cmp    $0x000035,%si
		je     _0712a8_jump
		jmp    _07143f_jump

	_071289_jump:
		cmp    $0x00000e,%si
		jb     _07143f_jump
		jbe    _0713c4_jump
		cmp    $0x00000f,%si
		je     _071337_jump
		jmp    _07143f_jump

	_0712a8_jump:
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		cmpw   $0x0000ee,0x000064(%edx,%eax,8)
		je     _0712dd_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _0ab449_data,%bl
		mov    _0ab448_data,%al
		mov    _0ab44a_data,%cl
		jmp    _07145d_jump

	_0712dd_jump:
		xor    %eax,%eax
		mov    _0ab374_data,%al
		jmp    _07145d_jump

	_0712e9_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0ab430_data,%al
		mov    _0ab431_data,%bl
		mov    %ax,0x000018(%esp)
		mov    $0x00007f,%ah
		mov    _0ab432_data,%cl
		mov    %ah,0x000020(%esp)
		jmp    _071462_jump

	_071310_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0ab618_data,%al
		mov    _0ab619_data,%bl
		mov    %ax,0x000018(%esp)
		mov    $0x00007f,%al
		mov    _0ab61a_data,%cl
		mov    %al,0x000020(%esp)
		jmp    _071462_jump

	_071337_jump:
		mov    _0de120_data,%ax
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0de120_data
		cmp    $0x000002,%ax
		jle    _071372_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ab3b1_data,%bl
		mov    _0ab3b2_data,%cl
		mov    _0ab3b0_data,%al
		mov    %dx,_0de120_data
		mov    %ax,0x000018(%esp)

	_071372_jump:
		mov    $0xffffffff,%eax
		call   _070d78_func
		jmp    _071462_jump

	_071381_jump:
		mov    _0de124_data,%ax
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0de124_data
		cmp    $0x000001,%ax
		jle    _071462_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0ab4b4_data,%al
		mov    _0ab4b5_data,%bl
		mov    %ax,0x000018(%esp)
		xor    %eax,%eax
		mov    _0ab4b6_data,%cl
		mov    %ax,_0de124_data
		jmp    _071462_jump

	_0713c4_jump:
		movswl %di,%edx
		mov    %edx,%eax
		xor    %ebx,%ebx
		shl    $0x000004,%eax
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    _0b9410_data,%edx
		mov    _0ab3ad_data,%bl
		mov    _0ab3ae_data,%cl
		mov    0x000070(%edx,%eax,8),%al
		and    $0x0000ff,%eax
		mov    _0ab868_data(%eax),%al
		xor    %edx,%edx
		mov    _0ab3ac_data,%dl
		xor    %ah,%ah
		add    %eax,%edx
		mov    %dx,0x000018(%esp)
		jmp    _071462_jump

	_071406_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _0ab3c1_data,%bl
		mov    _0ab3c0_data,%al
		mov    _0ab3c2_data,%cl
		jmp    _07145d_jump

	_07141f_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _0ab749_data,%bl
		mov    _0ab748_data,%al
		mov    _0ab74a_data,%cl
		jmp    _07145d_jump

	_071438_jump:
		mov    $0xffffffff,%ebx
		jmp    _071462_jump

	_07143f_jump:
		movswl %si,%eax
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0ab375_data(,%eax,4),%bl
		mov    _0ab376_data(,%eax,4),%cl
		mov    _0ab374_data(,%eax,4),%al
		xor    %ah,%ah

	_07145d_jump:
		mov    %ax,0x000018(%esp)

	_071462_jump:
		movswl %bx,%eax
		mov    %eax,(%esp)
		cmp    $0xffffffff,%eax
		je     _071685_jump
		cmp    $0x0000ff,%bx
		je     _071685_jump
		movswl %di,%eax
		mov    %eax,0x000010(%esp)
		call   _070d78_func
		xor    %eax,%eax
		mov    0x000024(%esp),%al
		movswl %si,%ebp
		mov    %eax,0x000014(%esp)
		lea    0x000000(,%ebp,4),%eax
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%edx
		xor    %eax,%eax
		mov    _0ab377_data(%edx),%al
		mov    %eax,0x00000c(%esp)
		xor    %edx,%edx
		mov    _0ab872_data,%eax
		mov    0x000020(%esp),%dl
		sar    $0x000010,%eax
		imul   %edx,%eax
		mov    %edx,0x000008(%esp)
		imul   0x00000c(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000014(%esp),%edx
		cwtl   
		call   _071020_func
		mov    0x000004(%esp),%edx
		xor    %eax,%eax
		mov    _0ab377_data(%edx),%al
		mov    %eax,0x00000c(%esp)
		mov    _0ab872_data,%eax
		mov    0x000008(%esp),%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		imul   0x00000c(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000014(%esp),%edx
		cwtl   
		call   _071008_func
		cmpb   $0x000000,_0aaf74_data(%ebp)
		jne    _0715c1_jump
		mov    0x000014(%esp),%eax
		push   %eax
		mov    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    _0ab377_data(%eax),%dl
		mov    _0ab872_data,%eax
		mov    0x00000c(%esp),%ebx
		sar    $0x000010,%eax
		imul   %ebx,%eax
		imul   %edx,%eax
		movswl %cx,%ebx
		sar    $0x00000e,%eax
		mov    0x00001a(%esp),%edx
		cwtl   
		sar    $0x000010,%edx
		push   %eax
		mov    %edx,%ecx
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    _0ab774_data(%ebp),%al
		call   _040588_func
		movswl %ax,%ebx
		cmp    $0xffffffff,%ebx
		je     _071685_jump
		mov    0x000010(%esp),%eax
		call   _070f74_func
		mov    %ebx,%edx
		lea    0x000000(,%ebx,4),%eax
		xor    %ebx,%edx
		sub    %ebx,%eax
		mov    0x000020(%esp),%dl
		mov    %dx,_0ddf82_data(,%eax,4)
		xor    %edx,%edx
		mov    %di,_0ddf80_data(,%eax,4)
		mov    0x000024(%esp),%dl
		mov    %dx,_0ddf84_data(,%eax,4)
		mov    _0aae74_data(%ebp),%dh
		mov    %si,_0ddf86_data(,%eax,4)
		test   $0x000010,%dh
		je     _071685_jump
		movb   $0x000001,_0de100_data(%ebx)
		jmp    _071685_jump

	_0715c1_jump:
		call   _070e68_func
		mov    0x000010(%esp),%eax
		call   _070d78_func
		mov    _0de124_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00000c(%esp)
		mov    0x00000c(%esp),%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    0x000018(%esp),%edx
		mov    %bx,_0dde94_data(,%eax,8)
		mov    0x000004(%esp),%ebx
		mov    %dx,_0dde98_data(,%eax,8)
		xor    %edx,%edx
		mov    _0ab377_data(%ebx),%dl
		mov    %dx,_0dde9a_data(,%eax,8)
		xor    %edx,%edx
		mov    %di,_0dde90_data(,%eax,8)
		mov    0x000020(%esp),%dl
		mov    %dx,_0dde9c_data(,%eax,8)
		xor    %edx,%edx
		mov    %si,_0dde92_data(,%eax,8)
		mov    0x000024(%esp),%dl
		mov    %dx,_0dde9e_data(,%eax,8)
		xor    %edx,%edx
		mov    _0c1084_data,%ebx
		mov    _0aaf74_data(%ebp),%dl
		mov    %cx,_0dde96_data(,%eax,8)
		add    %ebx,%edx
		mov    _0ab174_data(,%ebp,2),%bx
		mov    %edx,_0ddea0_data(,%eax,8)
		test   %bx,%bx
		setne  %dl
		xor    %dh,%dh
		mov    _0de126_data,%cx
		mov    %dx,_0ddea4_data(,%eax,8)
		cmp    $0x000009,%cx
		jge    _071685_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_0de126_data

	_071685_jump:
		cmp    $0x0000cb,%si
		je     _0716a8_jump
		cmp    $0x0000ed,%si
		je     _0716a8_jump
		cmp    $0x0000d1,%si
		je     _0716a8_jump
		cmp    $0x0000e1,%si
		je     _0716a8_jump
		cmp    $0x0000ec,%si
		jne    _0716bd_jump

	_0716a8_jump:
		mov    _0c33cf_data,%ch
		cmp    $0x000040,%ch
		je     _0716b8_jump
		cmp    $0x000080,%ch
		jne    _0716bd_jump

	_0716b8_jump:
		call   _01d724_func

	_0716bd_jump:
		movswl %di,%eax
		call   _071040_func
		mov    %eax,%edx
		cmp    $0x000020,%ax
		jne    _0716e4_jump
		xor    %eax,%edx

	_0716cf_jump:
		movswl %dx,%eax
		call   _070918_func
		cwtl   
		cmp    $0xfffffffe,%eax
		je     _0716e4_jump
		inc    %edx
		cmp    $0x000020,%dx
		jne    _0716cf_jump

	_0716e4_jump:
		cmp    $0x000020,%dx
		jne    _07171d_jump
		test   %si,%si
		je     _071749_jump

	_0716ef_jump:
		dec    %edx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _071710_jump
		call   _070918_func
		cwtl   
		imul   $0x000088,%eax,%ebx
		mov    _0b9410_data,%eax
		cmpl   $0x000000,0x000024(%ebx,%eax,1)
		jne    _0716ef_jump

	_071710_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		jne    _071737_jump
		int3   
		xor    %edx,%edx
		jmp    _071737_jump

	_07171d_jump:
		test   %si,%si
		je     _07172f_jump
		movswl %si,%ebx
		movswl %di,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		jmp    _071744_jump

	_07172f_jump:
		cmpw   $0x000000,0x00001c(%esp)
		je     _071749_jump

	_071737_jump:
		movswl %si,%ebx
		movswl %di,%eax
		movswl %dx,%ebp
		mov    %eax,%edx
		mov    %ebp,%eax

	_071744_jump:
		call   _07098c_func

	_071749_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_071754_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0c3372_data
		je     _0717fb_jump
		movswl %ax,%esi
		lea    0x000000(,%esi,4),%eax
		cmpb   $0x0000ff,_0ab375_data(%eax)
		je     _0717fb_jump
		mov    _0ab872_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    _0ab377_data(%eax),%dl
		imul   %ebx,%edx
		push   $0x000040
		xor    %ecx,%ecx
		sar    $0x000007,%edx
		mov    _0ab374_data(%eax),%cl
		movswl %dx,%edx
		xor    %ebx,%ebx
		push   %edx
		xor    %edx,%edx
		mov    _0ab376_data(%eax),%bl
		mov    _0ab375_data(%eax),%dl
		xor    %eax,%eax
		mov    _0ab774_data(%esi),%al
		call   _040588_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _0717fb_jump
		mov    %edx,%eax
		call   _0708ec_func
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $0x000040,%ebx
		mov    %bx,_0ddf82_data(,%eax,4)
		mov    %bx,_0ddf84_data(,%eax,4)
		testb  $0x000010,_0aae74_data(%esi)
		je     _0717fb_jump
		movb   $0x000001,_0de100_data(%edx)

	_0717fb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071800_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    _0de126_data,%di
		mov    %ax,0x00000c(%esp)
		cmpb   $0x000000,_0c3372_data
		je     _071c38_jump
		cmpw   $0x000000,_0b9356_data
		je     _071838_jump
		mov    0x00000c(%esp),%eax
		cmp    _0c314c_data,%ax
		je     _071845_jump

	_071838_jump:
		mov    0x00000c(%esp),%eax
		cmp    _0c3158_data,%ax
		jne    _07184c_jump

	_071845_jump:
		movw   $0x00ffff,0x00000c(%esp)

	_07184c_jump:
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		call   _070c70_func
		mov    %ax,0x000008(%esp)
		cwtl   
		cmp    $0xffffffff,%eax
		je     _071b63_jump
		mov    _0de126_data,%di
		cmp    $0xffffffff,%edx
		jne    _071879_jump
		mov    $0x00007f,%al
		jmp    _0718b5_jump

	_071879_jump:
		mov    %eax,%ebx
		shl    $0x000002,%eax
		sub    %ebx,%eax
		mov    _0dde90_data(,%eax,8),%eax
		sar    $0x000010,%eax
		mov    _0aae74_data(%eax),%bl
		test   $0x000001,%bl
		je     _07189a_jump
		test   $0x000002,%bl
		jne    _07189e_jump

	_07189a_jump:
		mov    $0x00007f,%al
		jmp    _0718b5_jump

	_07189e_jump:
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		call   _070adc_func

	_0718b5_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,0x000004(%esp)
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%esi
		sub    %edx,%esi
		shl    $0x000003,%esi
		mov    0x000004(%esp),%edx
		mov    %dx,_0dde9c_data(%esi)
		mov    _0c1084_data,%ebp
		cmp    _0ddea0_data(%esi),%ebp
		jne    _071b63_jump
		mov    _0dde9c_data(%esi),%edx
		sar    $0x000010,%edx
		mov    _0ab872_data,%ebx
		push   %edx
		mov    _0dde98_data(%esi),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		imul   %ebx,%eax
		imul   %eax,%edx
		sar    $0x00000e,%edx
		movswl %dx,%eax
		push   %eax
		mov    _0dde92_data(%esi),%eax
		mov    _0dde96_data(%esi),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    %eax,0x000008(%esp)
		mov    _0dde90_data(%esi),%eax
		mov    _0dde94_data(%esi),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    _0ab774_data(%eax),%al
		mov    0x000008(%esp),%edx
		and    $0x0000ff,%eax
		call   _040588_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _0719c3_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		call   _070f74_func
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x00000c(%esp),%ebx
		mov    %bx,_0ddf80_data(,%eax,4)
		mov    0x000004(%esp),%ebx
		mov    %bx,_0ddf82_data(,%eax,4)
		mov    _0dde9e_data(%esi),%bx
		mov    %bx,_0ddf84_data(,%eax,4)
		mov    _0dde92_data(%esi),%bx
		mov    %bx,_0ddf86_data(,%eax,4)
		mov    _0dde90_data(%esi),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_0aae74_data(%eax)
		je     _0719c3_jump
		movb   $0x000001,_0de100_data(%edx)

	_0719c3_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		shl    $0x000003,%ebx
		mov    _0ddea4_data(%ebx),%ax
		mov    _0de126_data,%di
		test   %ax,%ax
		je     _071aa2_jump
		mov    _0dde90_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _0ab074_data(%eax),%al
		and    $0x0000ff,%eax
		add    %ebp,%eax
		mov    %eax,_0ddea0_data(%ebx)
		mov    _0dde90_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _0ab174_data(,%eax,2),%ax
		mov    %ax,_0dde92_data(%ebx)
		mov    _0dde90_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _0ab375_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0dde94_data(%ebx)
		mov    _0dde90_data(%ebx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		movswl %di,%edx
		mov    _0ab376_data(,%eax,4),%cl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %cx,_0dde96_data(,%eax,8)
		mov    _0dde90_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _0ab374_data(,%edx,4),%dl
		xor    %dh,%dh
		mov    %dx,_0dde98_data(,%eax,8)
		mov    _0dde90_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _0ab377_data(,%edx,4),%dl
		xor    %dh,%dh
		xor    %ecx,%ecx
		mov    %dx,_0dde9a_data(,%eax,8)
		mov    %cx,_0ddea4_data(%ebx)
		jmp    _071b63_jump

	_071aa2_jump:
		mov    0x000008(%esp),%ebx
		cmp    %bx,%di
		jle    _071b4f_jump

	_071aaf_jump:
		movswl %bx,%edx
		lea    0x000001(%edx),%eax
		imul   $0x000018,%eax,%eax
		imul   $0x000018,%edx,%edx
		mov    _0dde90_data(%eax),%cx
		mov    %cx,_0dde90_data(%edx)
		mov    _0dde92_data(%eax),%cx
		mov    %cx,_0dde92_data(%edx)
		mov    _0dde94_data(%eax),%cx
		mov    %cx,_0dde94_data(%edx)
		mov    _0dde96_data(%eax),%cx
		mov    %cx,_0dde96_data(%edx)
		mov    _0dde98_data(%eax),%cx
		mov    %cx,_0dde98_data(%edx)
		mov    _0dde9a_data(%eax),%cx
		mov    %cx,_0dde9a_data(%edx)
		mov    _0dde9c_data(%eax),%cx
		mov    %cx,_0dde9c_data(%edx)
		mov    _0dde9e_data(%eax),%cx
		mov    %cx,_0dde9e_data(%edx)
		mov    _0ddea0_data(%eax),%ecx
		mov    %ecx,_0ddea0_data(%edx)
		mov    _0ddea4_data(%eax),%ax
		inc    %ebx
		mov    %ax,_0ddea4_data(%edx)
		cmp    %di,%bx
		jl     _071aaf_jump

	_071b4f_jump:
		mov    %di,_0de126_data
		test   %di,%di
		jle    _071b63_jump
		dec    %edi
		mov    %di,_0de126_data

	_071b63_jump:
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		call   _070cc4_func
		mov    %eax,%ecx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _071c38_jump
		mov    _0de126_data,%di
		cmp    $0xffffffff,%edx
		jne    _071b8d_jump
		mov    $0x00007f,%dl
		jmp    _071bd7_jump

	_071b8d_jump:
		mov    %eax,%ebx
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		cmpw   $0x0000cc,_0ddf86_data(%eax)
		je     _071bbb_jump
		mov    _0ddf84_data(%eax),%eax
		sar    $0x000010,%eax
		mov    _0aae74_data(%eax),%bl
		test   $0x000001,%bl
		je     _071bbb_jump
		test   $0x000002,%bl
		jne    _071bbf_jump

	_071bbb_jump:
		mov    $0x00007f,%dl
		jmp    _071bd7_jump

	_071bbf_jump:
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		call   _070adc_func
		mov    %al,%dl

	_071bd7_jump:
		movswl %cx,%ecx
		mov    %ecx,%ebx
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		xor    %ecx,%ebx
		shl    $0x000002,%eax
		mov    %dl,%bl
		mov    _0ddf84_data(%eax),%si
		mov    _0de100_data(%ecx),%dh
		mov    %bx,_0ddf82_data(%eax)
		test   %dh,%dh
		je     _071c38_jump
		mov    _0ddf84_data(%eax),%eax
		movswl %si,%ebx
		sar    $0x000010,%eax
		mov    _0ab872_data,%esi
		movzbl _0ab377_data(,%eax,4),%ebp
		xor    %eax,%eax
		sar    $0x000010,%esi
		mov    %dl,%al
		imul   %esi,%eax
		imul   %ebp,%eax
		sar    $0x00000e,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _0406e8_func

	_071c38_jump:
		mov    _0de126_data,%di
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_071c48_func:
		push   %ebx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0c3372_data
		je     _071d09_jump
		cmpw   $0x000000,_0b9356_data
		je     _071c6d_jump
		cmp    _0c314c_data,%bx
		je     _071c76_jump

	_071c6d_jump:
		cmp    _0c3158_data,%bx
		jne    _071c7b_jump

	_071c76_jump:
		mov    $0xffffffff,%ebx

	_071c7b_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		call   _070cc4_func
		mov    %eax,%esi
		movswl %ax,%edi
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		shl    $0x000003,%eax
		cmp    $0xffffffff,%edi
		je     _071cce_jump
		cmp    $0xffffffff,%edx
		jne    _071ca5_jump
		mov    $_0b92f8_data,%eax
		jmp    _071cad_jump

	_071ca5_jump:
		mov    _0b9410_data,%edx
		add    %edx,%eax

	_071cad_jump:
		call   _070aa8_func
		xor    %ebx,%ebx
		movswl %si,%edx
		mov    %al,%bl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bx,_0ddf84_data(,%eax,4)
		pop    %edi
		pop    %esi
		pop    %ebx
		ret    

	_071cce_jump:
		cmp    %edi,%edx
		jne    _071cd9_jump
		mov    $_0b92f8_data,%eax
		jmp    _071ce1_jump

	_071cd9_jump:
		mov    _0b9410_data,%edx
		add    %edx,%eax

	_071ce1_jump:
		call   _070aa8_func
		mov    %al,%dl
		movswl %bx,%eax
		call   _070c70_func
		cwtl   
		cmp    $0xffffffff,%eax
		je     _071d09_jump
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    %bx,_0dde9e_data(,%eax,8)

	_071d09_jump:
		pop    %edi
		pop    %esi
		pop    %ebx
		ret    



_071d10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		cmpb   $0x000000,_0c3372_data
		je     _071e9e_jump
		mov    $_0ddf86_data,%ebp
		xor    %edi,%edi
		mov    $_0ddf80_data,%esi
		mov    %edi,0x000004(%esp)

	_071d36_jump:
		mov    (%esi),%dx
		test   %dx,%dx
		jl     _071d54_jump
		movswl %dx,%eax
		imul   $0x000088,%eax,%eax
		mov    _0b9410_data,%edx
		cmpl   $0x000000,0x000024(%edx,%eax,1)
		je     _071d75_jump

	_071d54_jump:
		movswl (%esi),%eax
		cmp    $0xfffffffe,%eax
		jne    _071d65_jump
		movswl 0x000000(%ebp),%eax
		cmp    $0xffffffff,%eax
		jne    _071d75_jump

	_071d65_jump:
		mov    _0b9414_data,%bx
		cmp    (%esi),%bx
		jg     _071dfc_jump

	_071d75_jump:
		mov    0x000004(%esp),%eax
		mov    _0ddf84_data(%eax),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_0aae74_data(%eax)
		je     _071dd2_jump
		movswl 0x000000(%ebp),%edx
		xor    %ecx,%ecx
		mov    _0ab374_data(,%edx,4),%cl
		push   %ecx
		xor    %ecx,%ecx
		mov    _0ab375_data(,%edx,4),%al
		mov    _0ab376_data(,%edx,4),%cl
		and    $0x0000ff,%eax
		mov    _0ab774_data(%edx),%dl
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%ebx
		and    $0x0000ff,%edx
		movswl %di,%eax
		call   _0406d8_func
		xor    %dh,%dh
		mov    %dh,_0de100_data(%edi)

	_071dd2_jump:
		xor    %edx,%edx

	_071dd4_jump:
		movswl %dx,%eax
		call   _070918_func
		cmp    (%esi),%ax
		je     _071de7_jump
		inc    %edx
		cmp    $0x000020,%edx
		jne    _071dd4_jump

	_071de7_jump:
		cmp    $0x000020,%edx
		jge    _071df4_jump
		movswl %dx,%eax
		call   _0709a8_func

	_071df4_jump:
		movswl %di,%eax
		call   _0708ec_func

	_071dfc_jump:
		mov    (%esi),%ax
		test   %ax,%ax
		jl     _071e29_jump
		cwtl   
		imul   $0x000088,%eax,%edx
		mov    _0b9410_data,%ecx
		cmpl   $0x000000,0x000024(%ecx,%edx,1)
		je     _071e29_jump
		xor    %edx,%edx
		call   _071800_func
		movswl (%esi),%eax
		xor    %edx,%edx
		call   _071c48_func

	_071e29_jump:
		mov    0x000004(%esp),%ecx
		inc    %edi
		add    $0x00000c,%ebp
		add    $0x00000c,%ecx
		add    $0x00000c,%esi
		mov    %ecx,0x000004(%esp)
		cmp    $0x000020,%edi
		jl     _071d36_jump
		xor    %edi,%edi
		xor    %esi,%esi
		xor    %ebp,%ebp
		jmp    _071e92_jump

	_071e4c_jump:
		mov    _0b9414_data,%dx
		cmp    _0dde90_data(%esi),%dx
		jle    _071e8e_jump
		mov    _0dde8e_data(%esi),%eax
		sar    $0x000010,%eax
		imul   $0x000088,%eax,%edx
		mov    _0b9410_data,%ecx
		cmp    0x000024(%ecx,%edx,1),%ebp
		je     _071e8e_jump
		mov    %ebp,%edx
		call   _071800_func
		mov    _0dde8e_data(%esi),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		call   _071c48_func

	_071e8e_jump:
		add    $0x000018,%esi
		inc    %edi

	_071e92_jump:
		mov    _0de124_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jl     _071e4c_jump

	_071e9e_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071f04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0c3372_data
		je     _071f28_jump
		xor    %ecx,%ecx
		xor    %esi,%esi

	_071f15_jump:
		movswl %cx,%eax
		mov    %esi,%ebx
		mov    %esi,%edx
		inc    %ecx
		call   _0406e8_func
		cmp    $0x000020,%cx
		jl     _071f15_jump

	_071f28_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071f30_func:
		push   %edx
		mov    $0x000001,%edx
		call   _071f04_func
		mov    %dx,_0ab888_data
		pop    %edx
		ret    



_071f44_func:
		push   %edx
		xor    %edx,%edx
		mov    %dx,_0ab888_data
		pop    %edx
		ret    



_071f50_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		cmpb   $0x000000,_0c3372_data
		je     _071f6c_jump
		call   _070a14_func
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _040958_func

	_071f6c_jump:
		pop    %edx
		pop    %ebx

	_071f6e_jump:
		ret    



_071f70_func:
		cmpb   $0x000000,_0c3372_data
		je     _071f6e_jump
		jmp    _0409c0_jump



_071f80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0de130_data,%ebp
		movw   $0x000000,0x000000(%ebp)
		test   %ax,%ax
		jl     _071fac_jump
		movswl %ax,%ebx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _071fa8_jump
		mov    %ebx,%eax

	_071fa8_jump:
		neg    %eax
		jmp    _071fbc_jump

	_071fac_jump:
		movswl %ax,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _071fbc_jump
		mov    %ebx,%eax

	_071fbc_jump:
		mov    %ax,0x000002(%ebp)
		test   %ax,%ax
		jle    _071fc9_jump
		xor    %eax,%eax
		jmp    _071fce_jump

	_071fc9_jump:
		mov    $0x000003,%eax

	_071fce_jump:
		mov    %al,0x000018(%ebp)
		mov    0x00001c(%ebp),%ax
		mov    %eax,%ebx
		mov    %ax,0x000008(%esp)
		neg    %ebx
		movb   $0x000000,0x000019(%ebp)
		mov    %bx,0x000008(%esp)
		jmp    _07203e_jump

	_071fe9_jump:
		xor    %eax,%eax
		mov    0x00001c(%ebp),%ax
		call   _0854a5_func
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x000006(%esp),%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    %edi,%ecx
		call   _085498_func
		call   _0867d0_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _08baa4_func
		call   _085695_func
		call   _0864a4_func
		mov    0x000004(%esp),%edx
		add    (%esp),%edx
		mov    0x000008(%esp),%ecx
		lea    0x000000(,%edx,4),%esi
		inc    %ecx
		mov    0x000024(%ebp),%edx
		mov    %cx,0x000008(%esp)
		mov    %eax,(%edx,%esi,1)

	_07203e_jump:
		xor    %eax,%eax
		mov    0x00001c(%ebp),%ax
		mov    %eax,0x000004(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000004(%esp),%edx
		mov    %eax,(%esp)
		cmp    %edx,%eax
		jl     _071fe9_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_072063_jump:
		ret    

	_072064_case:
		mov    _0de130_data,%eax
		test   %eax,%eax
		je     _072063_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _07207b_jump
		add    $0x000024,%eax
		call   _0852ac_func

	_07207b_jump:
		cmpl   $0x000000,_0de130_data
		je     _072063_jump
		mov    $_0de130_data,%eax
		jmp    _0852ac_func



_072090_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x000008(%esp)
		test   %ebx,%ebx
		je     _07218e_jump
		test   %ecx,%ecx
		je     _07218e_jump
		mov    $0x000030,%eax
		call   _085294_func
		mov    %eax,%ebp
		mov    %eax,_0de130_data
		test   %eax,%eax
		je     _07218e_jump
		xor    %eax,%eax
		mov    $0x000028,%ebx
		mov    %di,%ax
		cmp    %ebx,%eax
		jle    _0720e1_jump
		mov    %ebx,%eax

	_0720e1_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _0720ee_jump
		mov    %ebx,%eax

	_0720ee_jump:
		mov    %ax,0x00001c(%ebp)
		add    %eax,%eax
		mov    %ax,0x00001e(%ebp)
		xor    %eax,%eax
		mov    $0x400921fb,%ecx
		mov    0x00001c(%ebp),%ax
		mov    $0x54442eea,%ebx
		call   _0854a5_func
		call   _085695_func
		call   _0864a8_func
		mov    %ax,0x000020(%ebp)
		xor    %eax,%eax
		mov    $0x54442eea,%ebx
		mov    0x00001c(%ebp),%ax
		mov    $0x400921fb,%ecx
		call   _0854a5_func
		call   _085695_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _085695_func
		call   _0864a8_func
		mov    $0x00fa00,%ecx
		mov    _0c0f44_data,%edi
		mov    %ax,0x000022(%ebp)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07215f_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07215f_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0c0f44_data,%eax
		mov    %eax,0x000028(%ebp)
		mov    (%esp),%eax
		mov    %eax,0x00002c(%ebp)
		xor    %eax,%eax
		mov    0x00001e(%ebp),%ax
		shl    $0x000002,%eax
		call   _085294_func
		mov    %eax,0x000024(%ebp)
		test   %eax,%eax
		je     _07218e_jump
		movb   $0x000001,0x000008(%esp)

	_07218e_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _0721a3_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _071f80_func
		jmp    _0721a8_jump

	_0721a3_jump:
		call   _072064_case

	_0721a8_jump:
		mov    0x000008(%esp),%al
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0721b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0de130_data,%esi
		mov    0x000018(%esi),%al
		cmp    $0x000001,%al
		jb     _0721dd_jump
		jbe    _072273_jump
		cmp    $0x000002,%al
		je     _072333_jump
		jmp    _072394_jump

	_0721dd_jump:
		test   %al,%al
		jne    _072394_jump
		cmpb   $0x000000,0x000019(%esi)
		jne    _072222_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _072211_jump
		movl   $0x00013f,0x000004(%esi)
		mov    0x000004(%esi),%eax
		mov    %eax,0x000014(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000008(%esi)
		jmp    _07221e_jump

	_072211_jump:
		mov    0x000014(%esi),%eax
		movl   $0x00013f,0x000004(%esi)
		mov    %eax,0x000008(%esi)

	_07221e_jump:
		movb   $0x000001,0x000019(%esi)

	_072222_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _085498_func
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %edx,%ebx
		call   _0854a5_func
		mov    %eax,%ebp
		mov    %edx,%edi
		mov    %ecx,%eax
		mov    %ebx,%edx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _0867d0_func
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _086762_func
		call   _085695_func
		call   _0864a4_func
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		sub    %edx,%eax
		jmp    _072391_jump

	_072273_jump:
		cmpb   $0x000000,0x000019(%esi)
		jne    _0722ab_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _072291_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,0x000008(%esi)
		jmp    _0722a7_jump

	_072291_jump:
		mov    0x000014(%esi),%eax
		mov    %eax,0x000008(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000004(%esi)

	_0722a7_jump:
		movb   $0x000001,0x000019(%esi)

	_0722ab_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _085498_func
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    0x000020(%esi),%ax
		mov    %edx,0x000004(%esp)
		call   _0854a5_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		call   _08bb2c_func
		jg     _072311_jump
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		call   _0854a5_func
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _0867d0_func
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _086789_func
		call   _085695_func
		call   _0864a4_func
		mov    %eax,0x00000c(%esi)
		jmp    _072321_jump

	_072311_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%ebp
		mov    %eax,0x00000c(%esi)
		neg    %ebp
		mov    %ebp,0x00000c(%esi)

	_072321_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		mov    $0x00013f,%edx
		sub    %eax,%edx
		mov    %edx,0x000010(%esi)
		jmp    _072394_jump

	_072333_jump:
		cmpb   $0x000000,0x000019(%esi)
		jne    _072379_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _072358_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%ebx
		mov    %eax,0x000008(%esi)
		neg    %ebx
		mov    %ebx,0x000008(%esi)
		jmp    _072375_jump

	_072358_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		dec    %eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%edx
		mov    %eax,0x000014(%esi)
		neg    %edx
		mov    %edx,0x000014(%esi)
		mov    %edx,0x000008(%esi)

	_072375_jump:
		movb   $0x000001,0x000019(%esi)

	_072379_jump:
		mov    0x000014(%esi),%eax
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    %eax,%ecx
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		neg    %ecx
		add    %edx,%eax
		mov    %ecx,0x00000c(%esi)

	_072391_jump:
		mov    %eax,0x000010(%esi)

	_072394_jump:
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07239f_jump
		neg    %eax

	_07239f_jump:
		mov    (%esi),%di
		add    %eax,%edi
		mov    0x000002(%esi),%ax
		mov    %di,(%esi)
		test   %ax,%ax
		jle    _0723b8_jump
		cmpb   $0x000004,0x000018(%esi)
		jne    _0723c8_jump
		jmp    _0723c3_jump

	_0723b8_jump:
		mov    0x000015(%esi),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _0723c8_jump

	_0723c3_jump:
		movw   $0x000000,(%esi)

	_0723c8_jump:
		mov    (%esi),%ax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0723d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0de130_data,%edx
		cmpb   $0x000003,0x000018(%edx)
		jne    _072419_jump
		mov    $0x003e80,%ecx
		mov    0x00002c(%edx),%edi
		cld    
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		cmpw   $0x000000,0x000002(%edx)
		jle    _072408_jump
		mov    0x000018(%edx),%al
		inc    %al
		jmp    _07240d_jump

	_072408_jump:
		mov    0x000018(%edx),%al
		dec    %al

	_07240d_jump:
		movb   $0x000000,0x000019(%edx)
		mov    %al,0x000018(%edx)
		jmp    _072710_jump

	_072419_jump:
		mov    0x000028(%edx),%eax
		mov    %eax,0x000010(%esp)
		mov    0x000018(%edx),%al
		mov    0x00002c(%edx),%ebp
		cmp    $0x000001,%al
		jb     _07243d_jump
		jbe    _072528_jump
		cmp    $0x000002,%al
		je     _072627_jump
		jmp    _0726ce_jump

	_07243d_jump:
		test   %al,%al
		jne    _0726ce_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _072464_jump
		cmpb   $0x000001,0x000019(%edx)
		jne    _072464_jump
		mov    $0x003e80,%ecx
		mov    0x000010(%esp),%esi
		mov    %ebp,%edi
		cld    
		rep movsl %ds:(%esi),%es:(%edi)
		movb   $0x000002,0x000019(%edx)

	_072464_jump:
		xor    %esi,%esi
		mov    %esi,0x000008(%esp)
		mov    $0x000140,%edi

	_07246f_jump:
		mov    0x00000c(%edx),%esi
		xor    %ecx,%ecx
		test   %esi,%esi
		jle    _0724a5_jump

	_072478_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		sub    %ecx,%eax
		mov    0x000024(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x000010(%edx),%eax
		mov    0x000014(%edx),%ebx
		add    (%esi),%eax
		mov    0x000010(%esp),%esi
		add    %ecx,%ebx
		add    %eax,%esi
		lea    (%ebx,%ebp,1),%eax
		mov    (%esi),%bl
		mov    %bl,(%eax)
		inc    %ecx
		cmp    0x00000c(%edx),%ecx
		jl     _072478_jump

	_0724a5_jump:
		cmpw   $0x000000,0x000002(%edx)
		jle    _0724d6_jump
		mov    0x00000c(%edx),%ecx
		jmp    _0724c2_jump

	_0724b1_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		cmp    $0x000140,%eax
		jge    _0724c1_jump
		movb   $0x000000,(%eax,%ebp,1)

	_0724c1_jump:
		inc    %ecx

	_0724c2_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0724cd_jump
		neg    %eax

	_0724cd_jump:
		add    0x00000c(%edx),%eax
		cmp    %eax,%ecx
		jge    _0724ff_jump
		jmp    _0724b1_jump

	_0724d6_jump:
		mov    $0xffffffff,%ecx
		mov    0x000010(%esp),%ebx
		jmp    _0724ef_jump

	_0724e1_jump:
		mov    0x000014(%edx),%eax
		sub    %ecx,%eax
		lea    (%eax,%ebp,1),%esi
		mov    (%ebx,%eax,1),%al
		inc    %ecx
		mov    %al,(%esi)

	_0724ef_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0724fa_jump
		neg    %eax

	_0724fa_jump:
		dec    %eax
		cmp    %eax,%ecx
		jl     _0724e1_jump

	_0724ff_jump:
		mov    0x000010(%esp),%esi
		mov    0x000008(%esp),%eax
		add    $0x000140,%ebp
		add    %edi,%esi
		inc    %eax
		mov    %esi,0x000010(%esp)
		mov    %eax,0x000008(%esp)
		cmp    $0x0000c8,%eax
		jge    _0726ce_jump
		jmp    _07246f_jump

	_072528_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x000004(%esp)
		mov    0x00000c(%edx),%ecx
		jmp    _072589_jump

	_072533_jump:
		add    %ecx,%eax
		mov    0x000024(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		mov    (%ebx),%edi
		lea    (%eax,%edi,1),%ebx
		mov    0x000014(%edx),%esi
		mov    $0x00013f,%eax
		mov    0x000010(%esp),%edi
		cmp    %ebx,%eax
		jle    _072557_jump
		mov    %ebx,%eax

	_072557_jump:
		add    %eax,%edi
		mov    (%edi),%bl
		add    %ecx,%esi
		test   %bl,%bl
		jne    _07257f_jump
		test   %ecx,%ecx
		jg     _072569_jump
		mov    %esi,%eax
		jmp    _07257f_jump

	_072569_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		add    %ecx,%eax
		mov    0x000024(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		sub    (%ebx),%eax
		dec    %eax

	_07257f_jump:
		add    0x000010(%esp),%eax
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%esi,%ebp,1)

	_072589_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		cmp    %eax,%ecx
		jl     _072533_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _0725c1_jump
		mov    %eax,%ecx
		jmp    _0725a8_jump

	_07259e_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		inc    %ecx
		movb   $0x000000,(%eax,%ebp,1)

	_0725a8_jump:
		mov    (%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%bx
		test   %eax,%eax
		jge    _0725b9_jump
		neg    %eax

	_0725b9_jump:
		add    %ebx,%eax
		cmp    %eax,%ecx
		jge    _0725f7_jump
		jmp    _07259e_jump

	_0725c1_jump:
		cmp    0x000014(%edx),%eax
		jge    _0725f7_jump
		mov    %eax,%ebx
		mov    (%edx),%eax
		sar    $0x000010,%eax
		neg    %ebx
		test   %eax,%eax
		jge    _0725d5_jump
		neg    %eax

	_0725d5_jump:
		sub    %eax,%ebx
		mov    0x00000c(%edx),%esi
		mov    %ebx,%eax
		cmp    %esi,%ebx
		jge    _0725f7_jump

	_0725e0_jump:
		mov    0x000014(%edx),%ebx
		add    %eax,%ebx
		mov    0x000010(%esp),%ecx
		lea    (%ebx,%ebp,1),%esi
		mov    (%ecx,%ebx,1),%bl
		mov    %bl,(%esi)
		inc    %eax
		cmp    0x00000c(%edx),%eax
		jl     _0725e0_jump

	_0725f7_jump:
		mov    0x000010(%esp),%edi
		mov    0x000004(%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%edi
		inc    %eax
		mov    %edi,0x000010(%esp)
		mov    %eax,0x000004(%esp)
		cmp    $0x0000c8,%eax
		jge    _0726ce_jump
		mov    0x00000c(%edx),%ecx
		jmp    _072589_jump

	_072627_jump:
		xor    %ebx,%ebx
		mov    %ebx,(%esp)

	_07262c_jump:
		mov    0x00000c(%edx),%ecx
		jmp    _072672_jump

	_072631_jump:
		add    %ecx,%eax
		mov    0x000024(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x000014(%edx),%ebx
		mov    0x000010(%edx),%eax
		mov    (%esi),%edi
		add    %ecx,%ebx
		add    %edi,%eax
		mov    0x000010(%esp),%edi
		mov    %ebx,0x00000c(%esp)
		cmpb   $0x000000,(%edi,%eax,1)
		jne    _072664_jump
		test   %ecx,%ecx
		jge    _07265f_jump
		mov    0x00000c(%esp),%eax
		jmp    _072664_jump

	_07265f_jump:
		mov    0x000010(%edx),%eax
		sub    (%esi),%eax

	_072664_jump:
		add    0x000010(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%ebx,%ebp,1)

	_072672_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		cmp    %eax,%ecx
		jl     _072631_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _0726a8_jump
		mov    %eax,%ecx
		jmp    _072691_jump

	_072687_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		inc    %ecx
		movb   $0x000000,(%eax,%ebp,1)

	_072691_jump:
		mov    (%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%bx
		test   %eax,%eax
		jge    _0726a2_jump
		neg    %eax

	_0726a2_jump:
		add    %ebx,%eax
		cmp    %eax,%ecx
		jl     _072687_jump

	_0726a8_jump:
		mov    0x000010(%esp),%edi
		mov    (%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%edi
		inc    %eax
		mov    %edi,0x000010(%esp)
		mov    %eax,(%esp)
		cmp    $0x0000c8,%eax
		jl     _07262c_jump

	_0726ce_jump:
		mov    (%edx),%eax
		mov    0x000014(%edx),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    0x000002(%edx),%bx
		mov    %ecx,0x000014(%edx)
		test   %bx,%bx
		jle    _0726ff_jump
		cmp    0x000008(%edx),%ecx
		jge    _072710_jump
		mov    0x000018(%edx),%cl
		movb   $0x000000,0x000019(%edx)
		inc    %cl
		mov    %cl,0x000018(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0726ff_jump:
		cmp    0x000004(%edx),%ecx
		jle    _072710_jump
		mov    0x000018(%edx),%bh
		movb   $0x000000,0x000019(%edx)
		dec    %bh
		mov    %bh,0x000018(%edx)

	_072710_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072720_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    _0c1dbd_data,%dl
		shl    $0x000005,%edx
		mov    _0c1f62_data(%edx),%edx
		mov    $_0de138_data,%eax
		shl    $0x00000a,%edx
		call   _084e40_func
		cmpw   $0x000000,_0ab898_data
		jne    _072793_jump
		movswl %cx,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    %eax,%edx
		mov    $_0de138_data,%eax
		call   _084bac_func
		mov    %eax,_0ab894_data
		test   %eax,%eax
		je     _07279d_jump
		mov    _0de138_data,%edx
		mov    %edx,_0ab89c_data
		xor    %edx,%edx
		mov    %cx,_0ab898_data
		call   _085360_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072793_jump:
		mov    $_0a2be8_data,%eax
		call   _020150_func

	_07279d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0727a4_func:
		push   %edx
		mov    $_0de138_data,%eax
		xor    %edx,%edx
		call   _085140_func
		mov    %edx,_0ab894_data
		xor    %edx,%edx
		mov    %dx,_0ab898_data
		pop    %edx
		ret    



_0727c4_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,(%esp)
		cmpl   $0x000000,_0ab894_data
		je     _0728a5_jump
		cmp    _0ab898_data,%ax
		jge    _072873_jump
		movswl %ax,%ebx
		lea    0x000000(,%ebx,8),%ecx
		sub    %ebx,%ecx
		shl    $0x000002,%ecx
		mov    _0ab894_data,%eax
		sub    %ebx,%ecx
		add    %ecx,%eax
		mov    $_0a2c14_data,%edx
		add    $0x000012,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _072843_jump
		mov    _0ab894_data,%eax
		mov    $0x000008,%ebx
		add    %ecx,%eax
		mov    %esi,%edx
		add    $0x000012,%eax
		call   _085378_func
		mov    _0ab894_data,%eax
		add    %eax,%ecx
		movb   $0x000000,0x000008(%esi)
		mov    (%esp),%eax
		movw   $0x000000,0x000008(%ecx)
		mov    %ax,0x00000a(%ecx)
		jmp    _0728af_jump

	_072843_jump:
		mov    $0x000064,%eax
		call   _084f3c_func
		push   %ebx
		push   %esi
		push   $_0a2c18_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    

	_072873_jump:
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%edx
		movswl %di,%eax
		push   %eax
		push   $_0a2c78_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    

	_0728a5_jump:
		mov    $_0a2ce0_data,%eax
		call   _020150_func

	_0728af_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    



_0728b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000098,%esp
		call   _08bb64_func
		mov    _0ab894_data,%edx
		mov    %eax,%ebp
		test   %edx,%edx
		je     _072c1e_jump
		mov    _0ab898_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _072905_jump

	_0728e7_jump:
		movswl %ax,%edx
		imul   $0x00001b,%edx,%ebx
		mov    _0ab894_data,%edx
		inc    %eax
		movl   $0x000000,0x00000c(%edx,%ebx,1)
		cmp    _0ab898_data,%ax
		jl     _0728e7_jump

	_072905_jump:
		mov    $_0a2d24_data,%eax
		mov    %esp,%edi
		call   _065440_func
		mov    %eax,%esi
		mov    $_0a2d30_data,%edx
		push   %edi

	_072919_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _072931_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _072919_jump

	_072931_jump:
		pop    %edi
		mov    %esp,%eax
		mov    $0x000009,%ebx
		call   _04ddc8_func
		mov    $_0a2d34_data,%edx
		mov    %eax,%esi
		call   _04e0c0_func
		lea    0x00008a(%esp),%eax
		xor    %edx,%edx
		xor    %edi,%edi
		call   _085360_func

	_07295a_jump:
		mov    $_0a2d40_data,%edx
		lea    0x00008a(%esp),%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _072bac_jump
		cmp    _0ab898_data,%di
		jge    _072bac_jump
		mov    $0x000001,%ebx
		mov    $0x000013,%edx
		lea    0x000080(%esp),%eax
		mov    %esi,%ecx
		call   _086255_func
		test   %eax,%eax
		je     _07295a_jump
		xor    %ebx,%ebx

	_07299e_jump:
		movswl %bx,%edx
		mov    0x000080(%esp),%al
		mov    0x00008a(%esp,%edx,1),%ah
		xor    %al,%ah
		inc    %ebx
		mov    %ah,0x00008a(%esp,%edx,1)
		cmp    $0x000009,%bx
		jl     _07299e_jump
		lea    0x00008a(%esp),%eax
		mov    $_0a2d40_data,%edx
		call   _085309_func
		lea    0x00008a(%esp),%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _07295a_jump
		xor    %eax,%eax
		mov    _0ab898_data,%dx
		mov    %ax,0x000094(%esp)
		test   %dx,%dx
		jle    _07295a_jump

	_0729fe_jump:
		mov    0x000092(%esp),%ebx
		sar    $0x000010,%ebx
		imul   $0x00001b,%ebx,%ebx
		mov    _0ab894_data,%eax
		add    %ebx,%eax
		lea    0x00008a(%esp),%edx
		add    $0x000012,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _072b87_jump
		mov    _0ab894_data,%edx
		mov    0x000082(%esp),%eax
		mov    %eax,0x00000c(%edx,%ebx,1)
		mov    0x000086(%esp),%eax
		mov    %eax,0x000004(%edx,%ebx,1)
		mov    0x000081(%esp),%al
		mov    %al,0x000010(%edx,%ebx,1)
		mov    0x000080(%esp),%al
		inc    %edi
		mov    %al,0x000011(%edx,%ebx,1)
		mov    _0ab898_data,%ax
		cmp    %ax,%di
		jl     _072a69_jump
		mov    %eax,%edi

	_072a69_jump:
		movswl %di,%edx
		imul   $0x000028,%edx,%edx
		lea    0x00008a(%esp),%eax
		push   %eax
		push   $_0ab8a0_data
		call   _085441_func
		mov    _0ab896_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000008,%esp
		mov    %eax,%ecx
		xor    %ebx,%ebx

	_072a98_jump:
		mov    _0ab9c2_data,%eax
		sub    _0ab9b2_data,%eax
		cmp    %cx,%bx
		jle    _072aeb_jump
		mov    _0ab9bb_data,%dl
		test   $0x000004,%dl
		jne    _072ab8_jump
		cmp    $0x000001,%eax
		ja     _072acc_jump

	_072ab8_jump:
		mov    $_0ab9ae_data,%edx
		mov    $0x00002e,%eax
		call   _086b49_func
		jmp    _072b4e_jump

	_072acc_jump:
		mov    _0ab9ae_data,%eax
		movb   $0x00002e,(%eax)
		mov    (%eax),%al
		cmp    $0x00000a,%al
		jne    _072b2b_jump
		mov    $_0ab9ae_data,%edx
		mov    $0x00000a,%eax
		call   _086b49_func
		jmp    _072b4e_jump

	_072aeb_jump:
		mov    _0ab9bb_data,%dl
		test   $0x000004,%dl
		jne    _072afb_jump
		cmp    $0x000001,%eax
		ja     _072b0c_jump

	_072afb_jump:
		mov    $_0ab9ae_data,%edx
		mov    $0x0000fe,%eax
		call   _086b49_func
		jmp    _072b4e_jump

	_072b0c_jump:
		mov    _0ab9ae_data,%eax
		movb   $0x0000fe,(%eax)
		mov    (%eax),%al
		cmp    $0x00000a,%al
		jne    _072b2b_jump
		mov    $_0ab9ae_data,%edx
		mov    $0x00000a,%eax
		call   _086b49_func
		jmp    _072b4e_jump

	_072b2b_jump:
		mov    %dl,%dh
		or     $0x000010,%dh
		mov    _0ab9b2_data,%eax
		mov    %dh,_0ab9bb_data
		mov    _0ab9ae_data,%edx
		inc    %eax
		inc    %edx
		mov    %eax,_0ab9b2_data
		mov    %edx,_0ab9ae_data

	_072b4e_jump:
		inc    %ebx
		cmp    $0x000028,%bx
		jl     _072a98_jump
		movswl %di,%edx
		imul   $0x000064,%edx,%edx
		mov    _0ab896_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		push   %eax
		push   $_0a2d48_data
		call   _085441_func
		add    $0x000008,%esp
		mov    $_0ab9ae_data,%eax
		call   _08b88b_func

	_072b87_jump:
		mov    0x000094(%esp),%ebx
		inc    %ebx
		mov    _0ab898_data,%cx
		mov    %bx,0x000094(%esp)
		cmp    %cx,%bx
		jge    _07295a_jump
		jmp    _0729fe_jump

	_072bac_jump:
		push   $_0a2d50_data
		call   _085441_func
		add    $0x000004,%esp
		mov    %esi,%eax
		call   _086112_func
		mov    _0ab898_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _072bfc_jump

	_072bce_jump:
		movswl %bx,%eax
		imul   $0x00001b,%eax,%edx
		mov    _0ab894_data,%esi
		cmpl   $0x000000,0x00000c(%edx,%esi,1)
		jne    _072bef_jump
		push   %eax
		push   $_0a2d54_data
		call   _085441_func
		add    $0x000008,%esp

	_072bef_jump:
		mov    _0ab898_data,%di
		inc    %ebx
		cmp    %di,%bx
		jl     _072bce_jump

	_072bfc_jump:
		call   _08bb64_func
		sub    %ebp,%eax
		push   %eax
		push   $_0a2d7c_data
		call   _085441_func
		add    $0x000008,%esp
		add    $0x000098,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072c1e_jump:
		mov    $_0a2d98_data,%eax
		call   _020150_func
		add    $0x000098,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072c38_func:
		push   %ebx
		push   %edx
		cmpl   $0x000000,_0ab894_data
		je     _072c70_jump
		mov    _0ab898_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _072c7a_jump

	_072c51_jump:
		movswl %ax,%edx
		imul   $0x00001b,%edx,%edx
		mov    _0ab894_data,%ebx
		inc    %eax
		movw   $0x000000,0x000008(%edx,%ebx,1)
		cmp    _0ab898_data,%ax
		jge    _072c7a_jump
		jmp    _072c51_jump

	_072c70_jump:
		mov    $_0a2dcc_data,%eax
		call   _020150_func

	_072c7a_jump:
		pop    %edx
		pop    %ebx
		ret    



_072c80_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000098,%esp
		mov    %ax,0x000088(%esp)
		mov    %dl,0x000090(%esp)
		cmpl   $0x000000,_0ab894_data
		je     _072fe6_jump
		cmp    _0ab898_data,%ax
		jge    _072fa7_jump
		mov    $_0a2d24_data,%eax
		mov    %esp,%edi
		call   _065440_func
		mov    %eax,%esi
		mov    $_0a2d30_data,%edx
		push   %edi

	_072cc8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _072ce0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _072cc8_jump

	_072ce0_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    0x000086(%esp),%edx
		sar    $0x000010,%edx
		mov    %eax,%esi
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0ab894_data,%edx
		mov    0x00000c(%edx,%eax,1),%ebx
		test   %ebx,%ebx
		jne    _072db2_jump
		xor    %ecx,%ecx
		jmp    _072d37_jump

	_072d18_jump:
		imul   $0x00001b,%eax,%edx
		mov    _0ab894_data,%eax
		add    %eax,%edx
		add    %ecx,%eax
		add    $0x000012,%edx
		add    $0x000012,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _072d45_jump
		add    $0x00001b,%ecx
		inc    %ebx

	_072d37_jump:
		mov    0x000086(%esp),%eax
		sar    $0x000010,%eax
		cmp    %eax,%ebx
		jl     _072d18_jump

	_072d45_jump:
		mov    0x000086(%esp),%ecx
		sar    $0x000010,%ecx
		lea    0x000000(,%ecx,8),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		sub    %ecx,%edx
		cmp    %ecx,%ebx
		je     _072d93_jump
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		mov    _0ab894_data,%ebx
		add    %ebx,%eax
		add    %ebx,%edx
		mov    0x00000c(%eax),%ebx
		mov    %ebx,0x00000c(%edx)
		mov    0x000004(%eax),%ebx
		mov    %ebx,0x000004(%edx)
		mov    0x000010(%eax),%bl
		mov    %bl,0x000010(%edx)
		mov    0x000011(%eax),%al
		mov    %al,0x000011(%edx)
		jmp    _072db2_jump

	_072d93_jump:
		mov    _0ab894_data,%eax
		add    %edx,%eax
		lea    0x000011(%eax),%edx
		push   %edx
		lea    0x000010(%eax),%edx
		lea    0x000004(%eax),%ecx
		lea    0x00000c(%eax),%ebx
		push   %edx
		lea    0x000012(%eax),%edx
		mov    %esi,%eax
		call   _04dc38_func

	_072db2_jump:
		mov    0x000086(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%ecx
		sub    %edx,%ecx
		shl    $0x000002,%ecx
		sub    %edx,%ecx
		mov    _0ab894_data,%edx
		mov    0x00000c(%ecx,%edx,1),%eax
		mov    %eax,0x000084(%esp)
		mov    0x000010(%ecx,%edx,1),%al
		mov    0x000004(%ecx,%edx,1),%edi
		mov    %al,0x000094(%esp)
		mov    0x000011(%ecx,%edx,1),%al
		mov    %al,0x00008c(%esp)
		cmpb   $0x000000,0x000090(%esp)
		je     _072f94_jump
		mov    0x000084(%esp),%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _085e56_func
		cmpb   $0x000000,_0c3372_data
		je     _072f94_jump
		cmpb   $0x0000ff,_0a7c9d_data
		jne    _072e42_jump
		mov    _0ab894_data,%eax
		add    %ecx,%eax
		push   %edi
		add    $0x000012,%eax
		push   %eax
		push   $_0a2e04_data
		call   _085441_func
		add    $0x00000c,%esp

	_072e42_jump:
		mov    $_0de138_data,%eax
		mov    %edi,%edx
		call   _084bac_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _072f94_jump
		mov    0x000086(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    %eax,0x000080(%esp)
		mov    0x000080(%esp),%ecx
		mov    _0ab894_data,%eax
		add    %ecx,%eax
		add    $0x000012,%eax
		push   %eax
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000094(%esp),%al
		mov    %edi,%ebx
		push   %eax
		lea    0x0000a0(%esp),%eax
		mov    $0x000001,%edx
		push   %eax
		mov    %esi,%ecx
		mov    %ebp,%eax
		call   _04dd40_func
		mov    0x000080(%esp),%eax
		mov    _0ab894_data,%ecx
		mov    0x000084(%esp),%edx
		add    %eax,%ecx
		mov    %esi,%eax
		mov    %esp,%ebx
		call   _08a18e_func
		sub    %edx,%eax
		add    $0x000012,%ecx
		mov    %eax,%edx
		mov    %edi,%eax
		call   _04df9c_func
		mov    0x000080(%esp),%ebx
		mov    _0ab894_data,%eax
		add    %ebx,%eax
		lea    0x000012(%eax),%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x000094(%esp),%al
		mov    0x000080(%esp),%ecx
		call   _04df68_func
		mov    _0ab894_data,%ebx
		add    %ecx,%ebx
		movw   $0x000000,0x000008(%ebx)
		mov    0x00000a(%ebx),%cx
		mov    %ebp,(%ebx)
		cmp    $0x007d00,%cx
		jge    _072f57_jump
		mov    0x000008(%ebx),%eax
		sar    $0x000010,%eax
		sub    $0x000002,%eax
		imul   $0x10d2a4,%eax,%ecx
		lea    0x000000(,%edi,8),%eax
		sub    %edi,%eax
		shl    $0x000003,%eax
		sub    %edi,%eax
		lea    (%eax,%eax,1),%edx
		cmp    %edx,%ecx
		jge    _072f57_jump
		mov    $0x10d2a4,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x000002,%eax
		mov    %ax,0x00000a(%ebx)

	_072f57_jump:
		call   _073900_func
		add    %edi,%eax
		call   _0738f8_func
		call   _073900_func
		cmp    _0ab890_data,%eax
		jle    _072f94_jump
		call   _073900_func
		mov    %eax,_0ab890_data
		mov    _0c3140_data,%eax
		sar    $0x000010,%eax
		mov    %eax,_0de144_data
		mov    _0c3150_data,%eax
		sar    $0x000010,%eax
		mov    %eax,_0de134_data

	_072f94_jump:
		mov    %esi,%eax
		call   _086112_func
		add    $0x000098,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_072fa7_jump:
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    0x000086(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		push   $_0a2e20_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func
		add    $0x000098,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_072fe6_jump:
		mov    $_0a2e60_data,%eax
		call   _020150_func
		add    $0x000098,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_072ffc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0ab894_data,%edx
		mov    $0xffffffff,%esi
		test   %edx,%edx
		je     _07304d_jump
		mov    _0ab898_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jle    _07304d_jump

	_073020_jump:
		movswl %bx,%eax
		imul   $0x00001b,%eax,%eax
		mov    _0ab894_data,%edx
		add    %edx,%eax
		add    $0x000012,%eax
		mov    %ecx,%edx
		call   _0853a0_func
		test   %eax,%eax
		jne    _073040_jump
		mov    %ebx,%esi
		jmp    _07304d_jump

	_073040_jump:
		mov    _0ab898_data,%di
		inc    %ebx
		cmp    %di,%bx
		jl     _073020_jump

	_07304d_jump:
		mov    %esi,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0730b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    %eax,(%esp)
		test   %si,%si
		jge    _0730e3_jump
		int3   
		jmp    _0731e8_jump

	_0730e3_jump:
		cmpl   $0x000000,_0ab894_data
		je     _0731d6_jump
		cmp    _0ab898_data,%si
		jge    _0731c0_jump
		movswl %si,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0ab894_data,%edx
		cmpl   $0x000000,(%edx,%eax,1)
		jne    _07318f_jump
		mov    _0ab898_data,%cx
		xor    %ebx,%ebx
		test   %cx,%cx
		jle    _07317b_jump

	_07312c_jump:
		cmp    %si,%bx
		je     _07316e_jump
		movswl %si,%edi
		imul   $0x00001b,%edi,%edi
		movswl %bx,%ecx
		imul   $0x00001b,%ecx,%ecx
		mov    _0ab894_data,%eax
		lea    (%eax,%edi,1),%edx
		add    %ecx,%eax
		add    $0x000012,%edx
		add    $0x000012,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _07316e_jump
		mov    _0ab894_data,%eax
		add    %eax,%ecx
		mov    (%ecx),%ebp
		test   %ebp,%ebp
		je     _07316e_jump
		mov    $0x000001,%dl
		mov    %ebp,(%edi,%eax,1)
		mov    %dl,0x000004(%esp)
		jmp    _07317b_jump

	_07316e_jump:
		mov    _0ab898_data,%di
		inc    %ebx
		cmp    %di,%bx
		jl     _07312c_jump

	_07317b_jump:
		cmpb   $0x000000,0x000004(%esp)
		jne    _07318f_jump
		mov    $0x000001,%edx
		movswl %si,%eax
		call   _072c80_func

	_07318f_jump:
		movswl %si,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0ab894_data,%eax
		movw   $0x000000,0x000008(%edx,%eax,1)
		mov    (%esp),%eax
		call   _0850d4_func
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0731c0_jump:
		movswl %si,%eax
		push   %eax
		push   $_0a2ea0_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		jmp    _0731db_jump

	_0731d6_jump:
		mov    $_0a2ecc_data,%eax

	_0731db_jump:
		call   _020150_func
		mov    (%esp),%eax
		call   _0850d4_func

	_0731e8_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0731f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%edx
		mov    %eax,%edi
		test   %si,%si
		jge    _073214_jump
		int3   
		jmp    _073325_jump

	_073214_jump:
		cmpl   $0x000000,_0ab894_data
		je     _073314_jump
		cmp    _0ab898_data,%si
		jge    _0732ee_jump
		movswl %si,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0ab894_data,%edx
		cmpl   $0x000000,(%edx,%eax,1)
		je     _0732c2_jump
		mov    _0ab898_data,%cx
		xor    %ebx,%ebx
		test   %cx,%cx
		jle    _0732a4_jump

	_07325d_jump:
		cmp    %si,%bx
		je     _073298_jump
		movswl %si,%edx
		imul   $0x00001b,%edx,%edx
		movswl %bx,%ecx
		imul   $0x00001b,%ecx,%ecx
		mov    _0ab894_data,%eax
		add    %eax,%edx
		add    %ecx,%eax
		add    $0x000012,%edx
		add    $0x000012,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _073298_jump
		mov    _0ab894_data,%eax
		add    %eax,%ecx
		cmpl   $0x000000,(%ecx)
		je     _073298_jump
		movl   $0x000000,(%ecx)

	_073298_jump:
		mov    _0ab898_data,%ax
		inc    %ebx
		cmp    %ax,%bx
		jl     _07325d_jump

	_0732a4_jump:
		movswl %si,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0ab894_data,%edx
		movl   $0x000000,(%edx,%eax,1)

	_0732c2_jump:
		movswl %si,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0ab894_data,%eax
		movw   $0x000000,0x000008(%edx,%eax,1)
		mov    %edi,%eax
		call   _0850d4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0732ee_jump:
		movswl %si,%eax
		push   %eax
		push   $_0a2ef8_data
		push   %edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edi,%eax
		call   _0850d4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_073314_jump:
		mov    $_0a2f24_data,%eax
		call   _020150_func
		mov    %edi,%eax
		call   _0850d4_func

	_073325_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073334_func:
		mov    0x000050(%eax),%ax
		ret    



_07333c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ab89c_data,%eax
		call   _0738f8_func
		xor    %ebx,%ebx
		mov    _0b9414_data,%cx
		mov    _0b9410_data,%edx
		test   %cx,%cx
		jle    _07337e_jump

	_07335d_jump:
		cmpw   $0x000107,0x000064(%edx)
		jne    _073372_jump
		mov    %edx,%eax
		call   _073334_func
		cwtl   
		call   _0730b8_func

	_073372_jump:
		inc    %ebx
		add    $0x000088,%edx
		cmp    %cx,%bx
		jl     _07335d_jump

	_07337e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073384_func:
		mov    _0ab89c_data,%eax
		mov    %eax,_0de138_data
		ret    

	_073390_jump:
		push   %ebx
		push   %ecx
		push   %edx
		cmpl   $0x000000,_0ab894_data
		je     _0733c1_jump
		mov    _0ab898_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _0733cb_jump

	_0733aa_jump:
		movswl %dx,%eax
		call   _0731f4_func
		mov    _0ab898_data,%cx
		inc    %edx
		cmp    %cx,%dx
		jge    _0733cb_jump
		jmp    _0733aa_jump

	_0733c1_jump:
		mov    $_0a2f50_data,%eax
		call   _020150_func

	_0733cb_jump:
		call   _073384_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0733d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%ebx
		mov    %eax,%ecx
		test   %dx,%dx
		jge    _0733f3_jump
		int3   
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0733f3_jump:
		cmpl   $0x000000,_0ab894_data
		je     _073491_jump
		cmp    _0ab898_data,%dx
		jge    _07347b_jump
		movswl %dx,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		mov    _0ab894_data,%ebx
		add    %ebx,%eax
		mov    0x00000a(%eax),%bx
		mov    %bx,0x000008(%eax)
		cmp    $0x007d00,%bx
		jge    _073444_jump
		xor    %ebx,%ebx
		mov    0x000008(%eax),%si
		mov    _0c33a0_data,%bl
		imul   %ebx,%esi
		mov    %si,0x000008(%eax)

	_073444_jump:
		movswl %dx,%ebx
		lea    0x000000(,%ebx,8),%edx
		sub    %ebx,%edx
		shl    $0x000002,%edx
		mov    _0ab894_data,%eax
		sub    %ebx,%edx
		cmpl   $0x000000,(%edx,%eax,1)
		je     _07349b_jump
		call   _070a14_func
		movswl %ax,%ebx
		mov    _0ab894_data,%eax
		add    %edx,%eax
		mov    0x000004(%eax),%edx
		mov    (%eax),%eax
		call   _0408c0_func
		jmp    _07349b_jump

	_07347b_jump:
		movswl %dx,%eax
		push   %eax
		push   $_0a2f90_data
		push   %ebx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		jmp    _073496_jump

	_073491_jump:
		mov    $_0a2fbc_data,%eax

	_073496_jump:
		call   _020150_func

	_07349b_jump:
		mov    %ecx,%eax
		call   _0850d4_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0734a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000024,%esp
		mov    %eax,%esi
		mov    _0c309e_data,%dx
		movb   $0x000000,0x000082(%eax)
		cmp    $0x000001,%dx
		jne    _0734d2_jump
		movb   $0x000004,0x000082(%eax)
		jmp    _07367f_jump

	_0734d2_jump:
		call   _073334_func
		lea    0x00000c(%esp),%ecx
		mov    %eax,%edi
		mov    %ax,0x000014(%esp)
		lea    0x000020(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		mov    %esp,%eax
		lea    0x000004(%esp),%ecx
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%edx
		mov    $_0b92f8_data,%eax
		call   _01e300_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000022(%esp),%ecx
		push   %eax
		mov    0x00001e(%esp),%eax
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000016(%esp),%edx
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _027cc0_func
		mov    _0ab894_data,%edx
		mov    %eax,%ecx
		test   %edx,%edx
		je     _07367f_jump
		cmp    _0ab898_data,%di
		jge    _07367f_jump
		movswl %di,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    _0ab894_data,%ebx
		sub    %edx,%eax
		add    %ebx,%eax
		cmpl   $0x000000,(%eax)
		je     _07367f_jump
		mov    0x000008(%eax),%di
		test   %di,%di
		jle    _0735b3_jump
		cmp    $0x007d00,%di
		jge    _07367f_jump
		mov    %edi,%esi
		dec    %esi
		mov    %si,0x000008(%eax)
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0735b3_jump:
		test   %cx,%cx
		je     _07367f_jump
		mov    0x00000a(%eax),%bx
		mov    %bx,0x000008(%eax)
		cmp    $0x007d00,%bx
		jl     _073640_jump
		mov    %edx,%eax
		call   _0737ec_func
		mov    $_0a2fe8_data,%edx
		mov    %eax,%ebx
		call   _08b3bc_func
		test   %eax,%eax
		je     _073606_jump
		mov    $_0a2ff0_data,%edx
		mov    %ebx,%eax
		call   _08b3bc_func
		test   %eax,%eax
		je     _073606_jump
		mov    $_0a2ff8_data,%edx
		mov    %ebx,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _07364f_jump

	_073606_jump:
		mov    0x000085(%esi),%ah
		mov    0x000012(%esp),%ebx
		and    $0x0000fb,%ah
		sar    $0x000010,%ebx
		mov    %ah,0x000085(%esi)
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		mov    _0ab894_data,%edx
		sub    %ebx,%eax
		movl   $0x000000,0x000024(%esi)
		movw   $0x000000,0x000008(%edx,%eax,1)
		jmp    _07364f_jump

	_073640_jump:
		xor    %edx,%edx
		mov    _0c33a0_data,%dl
		imul   %edx,%ebx
		mov    %bx,0x000008(%eax)

	_07364f_jump:
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%edx
		call   _070a14_func
		sub    %ebx,%edx
		movswl %ax,%ecx
		shl    $0x000002,%edx
		mov    _0ab894_data,%eax
		sub    %ebx,%edx
		add    %edx,%eax
		mov    %ecx,%ebx
		mov    0x000004(%eax),%edx
		mov    (%eax),%eax
		call   _0408c0_func

	_07367f_jump:
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_073688_switch:
		.long   _0736c1_case
		.long   _0736ec_case
		.long   _073717_case
		.long   _073742_case
		.long   _073767_case
		.long   _07378c_case




_0736a0_func:
		push   %ebx
		push   %edx
		mov    _0c3152_data,%dx
		dec    %edx
		cmp    $0x000005,%dx
		ja     _0737b1_jump
		xor    %ebx,%ebx
		mov    %dx,%bx
		jmp    *%cs:_073688_switch(,%ebx,4)

	_0736c1_case:
		testb  $0x000020,0x000085(%eax)
		je     _0736db_jump
		mov    $_0a3000_data,%eax
		call   _072ffc_func
		mov    %eax,%edx
		jmp    _0737b6_jump

	_0736db_jump:
		mov    $_0a3008_data,%eax
		call   _072ffc_func
		mov    %eax,%edx
		jmp    _0737b6_jump

	_0736ec_case:
		testb  $0x000020,0x000085(%eax)
		je     _073706_jump
		mov    $_0a3010_data,%eax
		call   _072ffc_func
		mov    %eax,%edx
		jmp    _0737b6_jump

	_073706_jump:
		mov    $_0a301c_data,%eax
		call   _072ffc_func
		mov    %eax,%edx
		jmp    _0737b6_jump

	_073717_case:
		testb  $0x000020,0x000085(%eax)
		je     _073731_jump
		mov    $_0a3024_data,%eax
		call   _072ffc_func
		mov    %eax,%edx
		jmp    _0737b6_jump

	_073731_jump:
		mov    $_0a3030_data,%eax
		call   _072ffc_func
		mov    %eax,%edx
		jmp    _0737b6_jump

	_073742_case:
		testb  $0x000020,0x000085(%eax)
		je     _073759_jump
		mov    $_0a3038_data,%eax
		call   _072ffc_func
		mov    %eax,%edx
		jmp    _0737b6_jump

	_073759_jump:
		mov    $_0a3040_data,%eax
		call   _072ffc_func
		mov    %eax,%edx
		jmp    _0737b6_jump

	_073767_case:
		testb  $0x000020,0x000085(%eax)
		je     _07377e_jump
		mov    $_0a3048_data,%eax
		call   _072ffc_func
		mov    %eax,%edx
		jmp    _0737b6_jump

	_07377e_jump:
		mov    $_0a3054_data,%eax
		call   _072ffc_func
		mov    %eax,%edx
		jmp    _0737b6_jump

	_07378c_case:
		testb  $0x000020,0x000085(%eax)
		je     _0737a3_jump
		mov    $_0a3060_data,%eax
		call   _072ffc_func
		mov    %eax,%edx
		jmp    _0737b6_jump

	_0737a3_jump:
		mov    $_0a3068_data,%eax
		call   _072ffc_func
		mov    %eax,%edx
		jmp    _0737b6_jump

	_0737b1_jump:
		mov    $0xffffffff,%edx

	_0737b6_jump:
		movswl %dx,%ebx
		cmp    $0xffffffff,%ebx
		je     _0737e5_jump
		mov    %ebx,%eax
		call   _07382c_func
		test   %eax,%eax
		jne    _0737d0_jump
		mov    %ebx,%eax
		call   _0730b8_func

	_0737d0_jump:
		movswl %dx,%ebx
		mov    %ebx,%eax
		call   _07382c_func
		test   %eax,%eax
		je     _0737e5_jump
		mov    %ebx,%eax
		call   _0733d4_func

	_0737e5_jump:
		pop    %edx
		pop    %ebx
		nop
		ret    



_0737ec_func:
		push   %edx
		test   %ax,%ax
		jge    _0737f7_jump
		int3   
		xor    %eax,%eax
		pop    %edx
		ret    

	_0737f7_jump:
		cmpl   $0x000000,_0ab894_data
		je     _073828_jump
		cmp    _0ab898_data,%ax
		jge    _073828_jump
		movswl %ax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0ab894_data,%eax
		add    %edx,%eax
		add    $0x000012,%eax
		pop    %edx
		ret    

	_073828_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_07382c_func:
		push   %edx
		test   %ax,%ax
		jge    _073837_jump
		int3   
		xor    %eax,%eax
		pop    %edx
		ret    

	_073837_jump:
		cmpl   $0x000000,_0ab894_data
		je     _07386b_jump
		test   %ax,%ax
		jl     _07386b_jump
		cmp    _0ab898_data,%ax
		jge    _07386b_jump
		movswl %ax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0ab894_data,%eax
		mov    (%edx,%eax,1),%eax
		pop    %edx
		ret    

	_07386b_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_0738f8_func:
		mov    %eax,_0ab88c_data
		ret    



_073900_func:
		mov    _0ab88c_data,%eax
		ret    



_073970_func:
		push   %edx
		xor    %eax,%eax
		mov    $_0bf324_data,%edx
		mov    _0c306e_data,%al
		call   _0656d4_func
		call   _08bb69_func
		mov    _0c306c_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		xor    %dl,%dl
		mov    %dl,_0c2f25_data(,%eax,2)
		mov    %dl,_0c2f24_data(,%eax,2)
		pop    %edx
		ret    



_0739b0_func:
		push   %edx
		mov    $_0c218a_data,%edx
		call   _03fcac_func
		pop    %edx
		ret    



_0739c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x001000,%ebx
		mov    $0x000001,%esi
		mov    $0x000003,%edi
		mov    $0x000064,%ecx
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,_0c3398_data
		mov    %ah,_0c3397_data
		mov    %bx,_0c30a8_data
		mov    %bx,_0c30aa_data
		mov    %si,_0c30a2_data
		mov    %di,_0c304c_data
		mov    %si,_0c3074_data
		mov    %di,_0c3052_data
		mov    %cx,_0c3070_data
		xor    %dh,%dh
		mov    $0x000006,%edi
		mov    %dx,_0c30ac_data
		mov    %esi,%eax
		xor    %ebx,%ebx
		mov    $0x000001,%dh
		mov    %bx,_0c3066_data
		xor    %esi,%eax
		mov    %di,_0c305e_data
		mov    _0c338a_data,%al
		mov    %dh,_0c33ce_data
		add    %esi,%eax
		xor    %bl,%bl
		mov    %ax,_0c3050_data
		mov    _0dd9c4_data,%eax
		mov    %bl,_0c338c_data
		mov    $0x00000c,%esi
		mov    0x00002c(%eax),%ax
		mov    _0c338a_data,%bh
		mov    %ax,_0c304e_data
		xor    %eax,%eax
		mov    %si,_0c3078_data
		mov    %ax,_0c3056_data
		test   %bh,%bh
		je     _073aa5_jump
		xor    %dh,%dh
		jmp    _073a99_jump

	_073a8a_jump:
		mov    %dl,%al
		inc    %al
		and    $0x0000ff,%eax
		call   _075d5c_func
		inc    %edx

	_073a99_jump:
		xor    %eax,%eax
		mov    _0c338a_data,%al
		cmp    %ax,%dx
		jl     _073a8a_jump

	_073aa5_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073aac_func:
		push   %ecx
		push   %edx
		mov    $0x000001,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %dx,_0c305c_data
		mov    %dx,_0c3058_data
		mov    %dx,_0c306e_data
		mov    %dx,_0c304a_data
		mov    %dx,_0c3044_data
		mov    %dx,_0c3046_data
		mov    %dx,_0c3060_data
		mov    %dx,_0c3054_data
		xor    %dh,%ah
		mov    %cx,_0c3076_data
		mov    %ah,_0a7c93_data
		pop    %edx
		pop    %ecx
		ret    



_073b04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _041d78_func
		test   %ax,%ax
		je     _073b98_jump
		call   _041e40_func
		test   %ax,%ax
		jne    _073b98_jump
		call   _041ddc_func
		test   %ax,%ax
		jne    _073b98_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _073b64_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _073b98_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _073b98_jump

	_073b64_jump:
		mov    _0c3052_data,%bx
		cmp    $0x000003,%bx
		jne    _073b7c_jump
		movw   $0x000002,_0c3052_data
		jmp    _073b86_jump

	_073b7c_jump:
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,_0c3052_data

	_073b86_jump:
		xor    %edx,%edx
		mov    $0x000044,%eax
		mov    %edx,_0bf30c_data
		call   _071754_func

	_073b98_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _073c26_jump
		call   _041e40_func
		test   %ax,%ax
		jne    _073c26_jump
		call   _041ddc_func
		test   %ax,%ax
		jne    _073c26_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _073bf3_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _073c26_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _073c26_jump

	_073bf3_jump:
		mov    _0c3052_data,%ax
		cmp    $0x000002,%ax
		jne    _073c0a_jump
		movw   $0x000003,_0c3052_data
		jmp    _073c14_jump

	_073c0a_jump:
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0c3052_data

	_073c14_jump:
		xor    %ebx,%ebx
		mov    $0x000044,%eax
		mov    %ebx,_0bf30c_data
		call   _071754_func

	_073c26_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _073cbd_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _073cbd_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _073cbd_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _073c85_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _073cbd_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _073cbd_jump

	_073c85_jump:
		mov    _0c3074_data,%si
		cmp    $0x000001,%si
		jg     _073ca1_jump
		xor    %eax,%eax
		mov    _0c338a_data,%al
		mov    %ax,_0c3074_data
		jmp    _073cab_jump

	_073ca1_jump:
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0c3074_data

	_073cab_jump:
		xor    %ecx,%ecx
		mov    $0x000044,%eax
		mov    %ecx,_0bf30c_data
		call   _071754_func

	_073cbd_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _073d56_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _073d56_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _073d56_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _073d1c_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _073d56_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _073d56_jump

	_073d1c_jump:
		xor    %eax,%eax
		mov    _0c3074_data,%bx
		mov    _0c338a_data,%al
		cmp    %bx,%ax
		jne    _073d3a_jump
		movw   $0x000001,_0c3074_data
		jmp    _073d44_jump

	_073d3a_jump:
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,_0c3074_data

	_073d44_jump:
		xor    %esi,%esi
		mov    $0x000044,%eax
		mov    %esi,_0bf30c_data
		call   _071754_func

	_073d56_jump:
		call   _041d78_func
		test   %ax,%ax
		jne    _073d8e_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _073d8e_jump
		call   _041ddc_func
		test   %ax,%ax
		jne    _073d8e_jump
		call   _041e40_func
		test   %ax,%ax
		jne    _073d8e_jump
		mov    $0x000001,%cl
		mov    %ax,_0c3066_data
		mov    %cl,_0c33ce_data
		jmp    _073d96_jump

	_073d8e_jump:
		xor    %bh,%bh
		mov    %bh,_0c33ce_data

	_073d96_jump:
		call   _0427d4_func
		test   %al,%al
		je     _073db9_jump
		cmpb   $0x000000,_0c33ce_data
		je     _073db9_jump
		movb   $0x000001,_0c3393_data
		mov    $0x00004d,%eax
		call   _071754_func

	_073db9_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073dc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _05598c_func
		cmpw   $0x000001,_0c3052_data
		jne    _073e27_jump
		call   _0426b0_func
		test   %al,%al
		je     _073e27_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _073e11_jump
		mov    _0c3066_data,%dx
		cmp    _0c3078_data,%dx
		jle    _073e27_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _073e27_jump

	_073e11_jump:
		mov    $0x000001,%ecx
		mov    $0x000045,%eax
		mov    %cx,_0c304a_data
		call   _071754_func

	_073e27_jump:
		cmpw   $0x000002,_0c3052_data
		jne    _073e83_jump
		call   _0426b0_func
		test   %al,%al
		je     _073e83_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _073e70_jump
		mov    _0c3066_data,%dx
		cmp    _0c3078_data,%dx
		jle    _073e83_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _073e83_jump

	_073e70_jump:
		movw   $0x000002,_0c304a_data
		mov    $0x000045,%eax
		call   _071754_func

	_073e83_jump:
		cmpw   $0x000003,_0c3052_data
		jne    _073eec_jump
		call   _0426b0_func
		test   %al,%al
		je     _073eec_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _073ecc_jump
		mov    _0c3066_data,%dx
		cmp    _0c3078_data,%dx
		jle    _073eec_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _073eec_jump

	_073ecc_jump:
		mov    $0x000003,%ecx
		mov    $0x000045,%eax
		mov    %cx,_0c304a_data
		call   _071754_func
		mov    $0x000014,%eax
		call   _03fc90_func

	_073eec_jump:
		call   _0559d0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073ef8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    _0dd9c4_data,%eax
		mov    (%eax),%dx
		inc    %edx
		mov    %dx,_0c304c_data
		mov    0x00000c(%eax),%dl
		lea    0x000004(%esp),%ecx
		mov    0x000010(%eax),%dh
		lea    0x000008(%esp),%ebx
		mov    %dh,0x000010(%esp)
		movzbl %dl,%esi
		mov    0x000011(%eax),%al
		mov    %esp,%edx
		mov    %al,0x00000c(%esp)
		mov    %esi,%eax
		call   _01f3b8_func
		mov    %esi,%eax
		call   _01f350_func
		mov    %eax,%esi
		mov    _0dd9c4_data,%eax
		mov    $0xfffffff2,%ebx
		mov    0x00002a(%eax),%ax
		mov    $0x000054,%edx
		mov    %ax,_0c304e_data
		mov    $0x00000e,%eax
		call   _055854_func
		mov    0x000010(%esp),%al
		mov    %al,_0b826c_data
		mov    $0x000001,%ah
		add    $0x000006,%esi
		mov    %ah,_0b826e_data
		mov    _0c3090_data,%ax
		mov    %si,_0c308e_data
		mov    %ax,_0b826a_data
		mov    0x00000c(%esp),%al
		xor    %dl,%dl
		mov    %al,_0b826f_data
		mov    _0c3062_data,%ax
		mov    %dl,_0b826d_data
		mov    %ax,_0c308c_data
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073fac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _05598c_func
		cmpw   $0x000000,_0c3064_data
		jne    _074013_jump
		cmpw   $0x000001,_0c304a_data
		je     _074013_jump
		mov    _0c3072_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,8),%eax
		mov    $0x000008,%ebx
		add    %edx,%eax
		mov    $0x000061,%edx
		add    $_0c3317_data,%eax
		call   _085360_func
		mov    _0c3072_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		mov    $0x000001,%ecx
		mov    %edx,%eax
		xor    %bl,%bl
		mov    %cx,_0c3064_data
		mov    %bl,_0c331f_data(%edx,%eax,8)

	_074013_jump:
		cmpw   $0x000000,_0c3046_data
		je     _074026_jump
		movw   $0x000001,_0c3044_data

	_074026_jump:
		call   _0426b0_func
		test   %al,%al
		je     _0740f3_jump
		cmpb   $0x000000,_0c33ce_data
		je     _0740f3_jump
		mov    _0c3072_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		mov    _0c3074_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		cmpb   $0x00007e,_0c3316_data(%eax)
		jne    _074095_jump
		cmpw   $0x000001,_0c3076_data
		je     _0740cd_jump
		mov    _0c3076_data,%si
		mov    $0x000061,%ch
		dec    %esi
		mov    %ch,_0c3316_data(%eax)
		mov    $0x000044,%eax
		mov    %si,_0c3076_data
		call   _071754_func
		jmp    _0740cd_jump

	_074095_jump:
		mov    _0c3076_data,%ax
		cmp    $0x000008,%ax
		jge    _0740b7_jump
		mov    %eax,%ebx
		inc    %ebx
		mov    $0x000044,%eax
		mov    %bx,_0c3076_data
		call   _071754_func
		jmp    _0740cd_jump

	_0740b7_jump:
		mov    $0x000044,%eax
		mov    $0x000001,%edx
		call   _071754_func
		mov    %dx,_0c3046_data

	_0740cd_jump:
		mov    $0x001000,%eax
		xor    %edi,%edi
		mov    $0x000001,%ebx
		mov    %di,_0c30ac_data
		mov    %ax,_0c30a8_data
		mov    %ax,_0c30aa_data
		mov    %bx,_0c30a2_data

	_0740f3_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _0741cc_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _0741cc_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _0741cc_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _074143_jump
		mov    _0c3064_data,%edx
		sar    $0x000010,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0741cc_jump

	_074143_jump:
		mov    _0c3072_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		mov    _0c3074_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    _0c3316_data(%eax),%dl
		cmp    $0x00007a,%dl
		jne    _074175_jump
		movb   $0x000020,_0c3316_data(%eax)
		jmp    _07419b_jump

	_074175_jump:
		cmp    $0x000020,%dl
		jne    _074183_jump
		movb   $0x00007e,_0c3316_data(%eax)
		jmp    _07419b_jump

	_074183_jump:
		cmp    $0x00007e,%dl
		jne    _074191_jump
		movb   $0x000061,_0c3316_data(%eax)
		jmp    _07419b_jump

	_074191_jump:
		mov    %dl,%bh
		inc    %bh
		mov    %bh,_0c3316_data(%eax)

	_07419b_jump:
		mov    $0x001000,%esi
		xor    %ecx,%ecx
		mov    $0x000001,%eax
		mov    %cx,_0c30ac_data
		mov    %si,_0c30a8_data
		mov    %ax,_0c30a2_data
		mov    $0x000044,%eax
		mov    %si,_0c30aa_data
		call   _071754_func

	_0741cc_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _0742a6_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _0742a6_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _0742a6_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _07421c_jump
		mov    _0c3064_data,%edx
		sar    $0x000010,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0742a6_jump

	_07421c_jump:
		mov    _0c3072_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		mov    _0c3074_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    _0c3316_data(%eax),%bl
		cmp    $0x000061,%bl
		jne    _07424e_jump
		movb   $0x00007e,_0c3316_data(%eax)
		jmp    _074274_jump

	_07424e_jump:
		cmp    $0x00007e,%bl
		jne    _07425c_jump
		movb   $0x000020,_0c3316_data(%eax)
		jmp    _074274_jump

	_07425c_jump:
		cmp    $0x000020,%bl
		jne    _07426a_jump
		movb   $0x00007a,_0c3316_data(%eax)
		jmp    _074274_jump

	_07426a_jump:
		mov    %bl,%ch
		dec    %ch
		mov    %ch,_0c3316_data(%eax)

	_074274_jump:
		mov    $0x001000,%ebx
		mov    $0x000001,%esi
		xor    %edx,%edx
		mov    $0x000044,%eax
		mov    %dx,_0c30ac_data
		mov    %bx,_0c30a8_data
		mov    %bx,_0c30aa_data
		mov    %si,_0c30a2_data
		call   _071754_func

	_0742a6_jump:
		call   _041e40_func
		test   %ax,%ax
		jne    _0742eb_jump
		call   _041ddc_func
		test   %ax,%ax
		jne    _0742eb_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _0742eb_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _0742eb_jump
		cmpw   $0x000000,_0c3046_data
		jne    _0742eb_jump
		cmpw   $0x000000,_0c3044_data
		jne    _0742eb_jump
		movw   $0x000001,_0c3060_data

	_0742eb_jump:
		call   _0427d4_func
		test   %al,%al
		je     _074306_jump
		mov    $0x000001,%bh
		mov    $0x00004d,%eax
		mov    %bh,_0c3393_data
		call   _071754_func

	_074306_jump:
		call   _0559d0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074314_func:
		push   %edx
		push   %esi
		mov    _0c304a_data,%ax
		cmp    $0x000002,%ax
		jb     _074439_jump
		jbe    _074335_jump
		cmp    $0x000003,%ax
		je     _0743aa_jump
		pop    %esi
		pop    %edx
		ret    

	_074335_jump:
		mov    _0c3072_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		mov    $_0a30a4_data,%edx
		add    $_0c3317_data,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _074439_jump
		mov    $0x000001,%eax
		call   _055dd4_func
		test   %al,%al
		je     _07439e_jump
		mov    _0c3074_data,%ax
		mov    %ax,_0c306e_data
		call   _073970_func
		mov    _0c306c_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		mov    _0a30a4_data,%dl
		mov    %dl,_0c3317_data(%eax)

	_07439e_jump:
		movw   $0x000001,_0c3058_data
		pop    %esi
		pop    %edx
		ret    

	_0743aa_jump:
		mov    _0c3074_data,%ax
		mov    %ax,_0c306e_data
		mov    _0c306c_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		mov    $_0c3317_data,%edx
		add    %eax,%edx
		mov    $_0a30a4_data,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _074413_jump
		xor    %esi,%esi
		mov    $0x000001,%ah
		mov    %si,_0c3064_data
		mov    %ah,_0c338c_data
		call   _0604ac_func
		cmpb   $0x000001,_0c221e_data
		jbe    _074409_jump
		xor    %dh,%dh
		mov    %dh,_0c3398_data
		pop    %esi
		pop    %edx
		ret    

	_074409_jump:
		xor    %eax,%eax
		call   _0302b0_func
		pop    %esi
		pop    %edx
		ret    

	_074413_jump:
		xor    %eax,%eax
		mov    $0x000001,%edx
		mov    _0c306e_data,%al
		mov    %dx,_0c3064_data
		call   _075a80_func
		mov    %dx,_0c3056_data
		mov    %dx,_0c3156_data

	_074439_jump:
		pop    %esi
		pop    %edx
		ret    



_07443c_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		call   _042170_func
		mov    _0ab8b8_data,%al
		mov    %al,_0c33ce_data
		call   _073fac_func
		mov    _0c33ce_data,%al
		mov    %al,_0ab8b8_data
		cmpb   $0x000000,_0a7d23_data
		je     _07448f_jump
		xor    %dl,%dl
		mov    %dl,_0a7d23_data
		call   _018b0f_func
		call   _018aff_func
		mov    $0x000001,%eax
		call   _02211c_func
		call   _074734_func
		call   _03ba10_func
		jmp    _074494_jump

	_07448f_jump:
		call   _074734_func

	_074494_jump:
		call   _074734_func
		cmpw   $0x000003,_0c304a_data
		jne    _0744ac_jump
		movw   $0x000001,_0c3056_data

	_0744ac_jump:
		cmpw   $0x000000,_0c3044_data
		jne    _0744bf_jump
		cmpb   $0x000000,_0c3393_data
		je     _0744c6_jump

	_0744bf_jump:
		mov    $0x000001,%eax
		jmp    _0744c8_jump

	_0744c6_jump:
		xor    %eax,%eax

	_0744c8_jump:
		mov    _0c3393_data,%bl
		mov    %eax,%edx
		test   %bl,%bl
		je     _074533_jump
		cmpw   $0x000001,_0c304a_data
		jne    _07451a_jump
		mov    _0c306c_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edi
		lea    0x000000(,%edi,8),%eax
		add    %edi,%eax
		mov    $_0c3317_data,%edi
		mov    $_0c330e_data,%esi
		add    %eax,%edi
		push   %edi

	_0744ff_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074517_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0744ff_jump

	_074517_jump:
		pop    %edi
		jmp    _074533_jump

	_07451a_jump:
		mov    _0c306c_data,%edi
		sar    $0x000010,%edi
		dec    %edi
		mov    %edi,%eax
		mov    _0a30a4_data,%bl
		mov    %bl,_0c3317_data(%edi,%eax,8)

	_074533_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_07453c_func:
		push   %ebx
		push   %edx
		call   _042170_func
		mov    _0de149_data,%al
		mov    %al,_0c33ce_data
		call   _073b04_func
		mov    _0c33ce_data,%al
		mov    %al,_0de149_data
		cmpb   $0x000000,_0a7d23_data
		je     _07458d_jump
		xor    %dl,%dl
		mov    %dl,_0a7d23_data
		call   _018b0f_func
		call   _018aff_func
		mov    $0x000001,%eax
		call   _02211c_func
		call   _074734_func
		call   _03ba10_func
		jmp    _074592_jump

	_07458d_jump:
		call   _074734_func

	_074592_jump:
		call   _042170_func
		mov    _0de148_data,%al
		mov    %al,_0c33ce_data
		call   _073dc0_func
		mov    _0c33ce_data,%al
		mov    %al,_0de148_data
		call   _074314_func
		cmpw   $0x000001,_0c304a_data
		jne    _0745c9_jump
		cmpw   $0x000000,_0c306e_data
		jne    _0745e7_jump

	_0745c9_jump:
		cmpw   $0x000003,_0c304a_data
		jne    _074615_jump
		cmpw   $0x000000,_0c3064_data
		jne    _074615_jump
		cmpw   $0x000000,_0c306e_data
		je     _074615_jump

	_0745e7_jump:
		cmpw   $0x000000,_0c3044_data
		jne    _074600_jump
		call   _073ef8_func
		mov    $_07443c_func,%eax
		call   _03eb48_func

	_074600_jump:
		cmpb   $0x000000,_0c3393_data
		jne    _074615_jump
		xor    %eax,%eax
		mov    _0c306e_data,%al
		call   _0757a0_func

	_074615_jump:
		cmpw   $0x000000,_0c3058_data
		je     _074624_jump
		call   _073aac_func

	_074624_jump:
		xor    %ebx,%ebx
		mov    %bx,_0c304a_data
		cmpb   $0x000000,_0bf2fc_data
		je     _074665_jump
		mov    _0bf30c_data,%edx
		inc    %edx
		mov    _0bf308_data,%ebx
		mov    %edx,_0bf30c_data
		cmp    %ebx,%edx
		jb     _074665_jump
		cmpw   $0x000000,_0c3056_data
		jne    _074665_jump
		cmpb   $0x000000,_0c33cb_data
		jne    _074665_jump
		call   _030050_jump

	_074665_jump:
		cmpb   $0x000000,_0c33cb_data
		jne    _07468a_jump
		cmpw   $0x000000,_0c3056_data
		jne    _07468a_jump
		cmpb   $0x000000,_0bf2fd_data
		jne    _07468a_jump
		mov    _0c3393_data,%al
		test   %al,%al
		je     _074692_jump

	_07468a_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ebx
		ret    

	_074692_jump:
		xor    %ah,%ah
		pop    %edx
		pop    %ebx
		ret    



_074698_func:
		push   %ebx
		push   %edx
		movb   $0x000001,_0a7c92_data
		mov    $_0c0ff8_data,%eax
		call   _0739b0_func
		mov    $_0b4028_data,%eax
		xor    %edx,%edx
		call   _03ece4_func
		xor    %eax,%eax
		xor    %bl,%bl
		call   _02211c_func
		call   _03ea80_func
		call   _0739c0_func
		call   _073aac_func
		mov    %edx,_0bf30c_data
		call   _073ef8_func
		mov    $0x000001,%dl
		mov    $_07453c_func,%eax
		mov    %bl,_0ab8b8_data
		mov    $0x000064,%ebx
		mov    %dl,_0de149_data
		mov    %dl,_0de148_data
		xor    %edx,%edx
		mov    %bx,_0c3070_data
		mov    %dx,_0c3066_data
		mov    %dx,_0c30e0_data
		mov    %dx,_0c30de_data
		call   _03eb48_func
		call   _03ead0_func
		call   _03ed58_func
		mov    $_0c0ff8_data,%eax
		call   _085244_func
		pop    %edx
		pop    %ebx
		ret    



_074734_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0dd9c4_data,%eax
		lea    0x000028(%esp),%ecx
		mov    0x00000d(%eax),%dl
		lea    0x000014(%esp),%ebx
		mov    %dl,0x000030(%esp)
		mov    0x00000c(%eax),%al
		lea    0x000010(%esp),%edx
		movzbl %al,%esi
		mov    %al,0x00002c(%esp)
		mov    %esi,%eax
		call   _01f3b8_func
		mov    %esi,%eax
		call   _01f350_func
		mov    _0c3066_data,%ax
		mov    _0c3070_data,%dx
		mov    $0x00001e,%edi
		cmp    %dx,%ax
		jge    _074796_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _074796_jump
		incw   _0c3066_data
		jmp    _0747b7_jump

	_074796_jump:
		cmpb   $0x000000,_0c33ce_data
		jne    _0747ae_jump
		mov    _0c3078_data,%ax
		inc    %eax
		mov    %ax,_0c3066_data
		jmp    _0747b7_jump

	_0747ae_jump:
		xor    %ebx,%ebx
		mov    %bx,_0c3066_data

	_0747b7_jump:
		mov    _0c3054_data,%si
		cmp    %si,%di
		jle    _0747ce_jump
		mov    %esi,%eax
		inc    %eax
		mov    %ax,_0c3054_data
		jmp    _0747d7_jump

	_0747ce_jump:
		xor    %edi,%edi
		mov    %di,_0c3054_data

	_0747d7_jump:
		call   _03ede8_jump
		mov    _0dd9c4_data,%eax
		mov    _0c3080_data,%ebx
		mov    _0bf2f4_data,%esi
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x00000b(%eax),%dl
		mov    0x000008(%eax),%cl
		push   %edx
		mov    0x000002(%eax),%edx
		mov    (%eax),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    (%esi,%eax,4),%eax
		call   _01b0f8_func
		mov    _0dd9c4_data,%eax
		mov    _0c3052_data,%si
		mov    0x000018(%eax),%cx
		mov    0x000024(%eax),%bx
		mov    0x00001e(%eax),%dx
		mov    %bx,0x000018(%esp)
		sub    $0x000021,%ebx
		sub    $0x000021,%edx
		mov    %bx,0x000018(%esp)
		cmp    $0x000001,%si
		jne    _074871_jump
		mov    0x000010(%eax),%eax
		mov    _0bf2f4_data,%ebx
		sar    $0x000010,%eax
		mov    $_0b8198_data,%edi
		mov    (%ebx,%eax,4),%esi
		push   %edi

	_074851_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074869_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074851_jump

	_074869_jump:
		pop    %edi
		mov    %cx,_0b8268_data

	_074871_jump:
		cmpw   $0x000002,_0c3052_data
		jne    _0748b7_jump
		mov    _0dd9c4_data,%eax
		mov    0x000012(%eax),%eax
		mov    _0bf2f4_data,%ebx
		sar    $0x000010,%eax
		mov    $_0b8198_data,%edi
		mov    (%ebx,%eax,4),%esi
		push   %edi

	_074895_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0748ad_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074895_jump

	_0748ad_jump:
		pop    %edi
		mov    %dx,_0b8268_data
		jmp    _0748ec_jump

	_0748b7_jump:
		xor    %eax,%eax
		mov    _0c308e_data,%ebx
		mov    _0b826f_data,%al
		mov    _0bf2f4_data,%esi
		push   %eax
		mov    _0dd9c4_data,%eax
		movswl %dx,%edx
		xor    %ecx,%ecx
		mov    0x000012(%eax),%eax
		mov    _0b826c_data,%cl
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    (%esi,%eax,4),%eax
		call   _01b0f8_func

	_0748ec_jump:
		cmpw   $0x000003,_0c3052_data
		jne    _074935_jump
		mov    _0dd9c4_data,%eax
		mov    0x000014(%eax),%eax
		mov    _0bf2f4_data,%edx
		sar    $0x000010,%eax
		mov    $_0b8198_data,%edi
		mov    (%edx,%eax,4),%esi
		push   %edi

	_074910_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074928_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074910_jump

	_074928_jump:
		pop    %edi
		mov    0x000018(%esp),%eax
		mov    %ax,_0b8268_data
		jmp    _07496e_jump

	_074935_jump:
		mov    0x000016(%esp),%edx
		xor    %eax,%eax
		mov    _0c308e_data,%ebx
		mov    _0b826f_data,%al
		xor    %ecx,%ecx
		push   %eax
		mov    _0dd9c4_data,%eax
		mov    _0bf2f4_data,%esi
		mov    _0b826c_data,%cl
		mov    0x000014(%eax),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    (%esi,%eax,4),%eax
		call   _01b0f8_func

	_07496e_jump:
		mov    $_0b8198_data,%eax
		mov    $0x000001,%edx
		call   _01f8d4_func
		mov    $_0b8198_data,%eax
		call   _055a20_func
		xor    %edx,%edx
		mov    $_0a30a8_data,%ebp
		mov    %dx,0x000024(%esp)
		jmp    _074db3_jump

	_074998_jump:
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		lea    (%eax,%eax,8),%eax
		mov    $_0a30a4_data,%edx
		add    $_0c3317_data,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _074d5b_jump
		mov    $0x000001,%ebx
		xor    %ecx,%ecx
		mov    %bx,0x00001c(%esp)
		mov    %ecx,0x000020(%esp)
		jmp    _074d05_jump

	_0749ce_jump:
		mov    0x00001c(%esp),%ecx
		cmp    _0c3076_data,%cx
		jne    _0749f6_jump
		mov    _0c3072_data,%eax
		inc    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jne    _0749f6_jump
		cmpw   $0x000000,_0c3060_data
		jne    _074b71_jump

	_0749f6_jump:
		mov    0x000022(%esp),%esi
		mov    %esp,%edi
		sar    $0x000010,%esi
		mov    0x00001a(%esp),%edx
		lea    (%esi,%esi,8),%esi
		sar    $0x000010,%edx
		add    $_0c3317_data,%esi
		xor    %bl,%bl
		push   %edi

	_074a12_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074a2a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074a12_jump

	_074a2a_jump:
		pop    %edi
		mov    %bl,(%esp,%edx,1)
		mov    -0x000001(%esp,%edx,1),%bh
		cmp    $0x00007e,%bh
		jne    _074a9d_jump
		mov    _0c30a8_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c30a6_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c30aa_data,%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00003c(%esp),%al
		mov    0x00001c(%esp),%ebx
		push   %eax
		mov    _0c308c_data,%ax
		mov    0x000034(%esp),%esi
		add    %ebx,%eax
		imul   %esi,%eax
		add    _0c309c_data,%ax
		mov    _0c308e_data,%dx
		movswl %ax,%ebx
		mov    0x000030(%esp),%eax
		imul   %edx,%eax
		mov    _0c304e_data,%si
		xor    %ecx,%ecx
		add    %esi,%eax
		mov    0x00003c(%esp),%cl
		movswl %ax,%edx
		mov    %ebp,%eax
		jmp    _074ced_jump

	_074a9d_jump:
		cmp    $0x000020,%bh
		jne    _074b07_jump
		push   $_0a30ac_data
		lea    0x00000c(%esp),%eax
		push   %eax
		call   _0852d9_func
		xor    %eax,%eax
		add    $0x000008,%esp
		mov    _0c339a_data,%al
		mov    0x000010(%esp),%edx
		push   %eax
		mov    _0c308c_data,%ax
		mov    0x000028(%esp),%ebx
		add    %edx,%eax
		imul   %ebx,%eax
		add    _0c309c_data,%ax
		mov    _0c308e_data,%di
		movswl %ax,%ebx
		mov    0x000024(%esp),%eax
		imul   %edi,%eax
		mov    _0c304e_data,%dx
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    0x000030(%esp),%cl
		movswl %ax,%edx
		lea    0x00000c(%esp),%eax
		call   _01b0f8_func
		jmp    _074cf2_jump

	_074b07_jump:
		xor    %eax,%eax
		mov    %bh,%al
		push   %eax
		push   $_0a30b0_data
		lea    0x000010(%esp),%eax
		push   %eax
		call   _0852d9_func
		xor    %eax,%eax
		add    $0x00000c,%esp
		mov    _0c339a_data,%al
		mov    0x000010(%esp),%edi
		push   %eax
		mov    _0c308c_data,%ax
		mov    0x000028(%esp),%edx
		add    %edi,%eax
		imul   %edx,%eax
		add    _0c309c_data,%ax
		mov    _0c308e_data,%si
		movswl %ax,%ebx
		mov    0x000024(%esp),%eax
		imul   %esi,%eax
		mov    _0c304e_data,%di
		xor    %ecx,%ecx
		add    %edi,%eax
		mov    0x000030(%esp),%cl
		movswl %ax,%edx
		lea    0x00000c(%esp),%eax
		call   _01b0f8_func
		jmp    _074cf2_jump

	_074b71_jump:
		mov    %esp,%edi
		mov    %edx,%esi
		push   %edi

	_074b76_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074b8e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074b76_jump

	_074b8e_jump:
		pop    %edi
		mov    0x00001a(%esp),%eax
		xor    %ch,%ch
		sar    $0x000010,%eax
		mov    $0x001000,%edi
		mov    %ch,(%esp,%eax,1)
		mov    _0c30a2_data,%ax
		mov    %di,_0c30a8_data
		cmp    $0x000200,%ax
		jl     _074bbc_jump
		xor    %edx,%edx
		mov    %dx,_0c30a2_data

	_074bbc_jump:
		mov    _0c30a2_data,%ax
		inc    %ah
		cwtl   
		call   _0626d0_func
		cwtl   
		sar    $0x000007,%eax
		add    $0x000005,%eax
		mov    %eax,%edx
		mov    _0c30a0_data,%eax
		sar    $0x000010,%eax
		call   _0626d0_func
		shl    $0x000003,%eax
		mov    %ax,_0c30aa_data
		mov    0x00001a(%esp),%eax
		mov    _0c30a2_data,%bx
		sar    $0x000010,%eax
		add    %edx,%ebx
		mov    -0x000001(%esp,%eax,1),%dl
		mov    %bx,_0c30a2_data
		cmp    $0x00007e,%dl
		jne    _074c6f_jump
		mov    _0c30a8_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c30a6_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c30aa_data,%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00003c(%esp),%al
		mov    0x00001c(%esp),%edx
		push   %eax
		mov    _0c308c_data,%ax
		mov    0x000034(%esp),%ebx
		add    %edx,%eax
		imul   %ebx,%eax
		add    _0c309c_data,%ax
		mov    _0c308e_data,%di
		movswl %ax,%ebx
		mov    0x000030(%esp),%eax
		imul   %edi,%eax
		mov    _0c304e_data,%dx
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    0x00003c(%esp),%cl
		movswl %ax,%edx
		mov    %ebp,%eax
		jmp    _074ced_jump

	_074c6f_jump:
		mov    %dl,%al
		and    $0x0000ff,%eax
		push   %eax
		push   $_0a30b0_data
		lea    0x000010(%esp),%eax
		push   %eax
		call   _0852d9_func
		mov    _0c30a8_data,%eax
		add    $0x00000c,%esp
		sar    $0x000010,%eax
		push   %eax
		mov    _0c30a6_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c30aa_data,%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    _0c339a_data,%al
		mov    0x00001c(%esp),%esi
		push   %eax
		mov    _0c308c_data,%ax
		mov    0x000034(%esp),%edi
		add    %esi,%eax
		imul   %edi,%eax
		add    _0c309c_data,%ax
		inc    %eax
		mov    _0c308e_data,%si
		movswl %ax,%ebx
		mov    0x000030(%esp),%eax
		imul   %esi,%eax
		add    _0c304e_data,%ax
		xor    %ecx,%ecx
		inc    %eax
		mov    0x00003c(%esp),%cl
		movswl %ax,%edx
		lea    0x000018(%esp),%eax

	_074ced_jump:
		call   _01b368_func

	_074cf2_jump:
		mov    0x000020(%esp),%ebx
		mov    0x00001c(%esp),%ecx
		inc    %ebx
		inc    %ecx
		mov    %ebx,0x000020(%esp)
		mov    %cx,0x00001c(%esp)

	_074d05_jump:
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%ebx
		lea    (%ebx,%ebx,8),%edx
		add    $_0c3317_data,%edx
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jbe    _0749ce_jump
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		call   _01f350_func
		add    _0c308e_data,%ax
		mov    _0c304e_data,%di
		shl    $0x000003,%eax
		add    %edi,%eax
		sub    $0x00001e,%eax
		mov    %ebx,%edx
		cwtl   
		call   _074dd8_func
		jmp    _074dae_jump

	_074d5b_jump:
		mov    0x000030(%esp),%al
		mov    0x000010(%esp),%esi
		push   %eax
		mov    _0c308c_data,%ax
		add    %esi,%eax
		imul   %ebx,%eax
		movb   $0x000001,_0a7c92_data
		add    _0c309c_data,%ax
		movswl %ax,%ebx
		mov    _0dd9c4_data,%eax
		mov    0x00000c(%eax),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    0x000030(%esp),%cl
		lea    0x000000(,%eax,4),%esi
		mov    _0c304c_data,%edx
		mov    _0bf2f4_data,%eax
		sar    $0x000010,%edx
		mov    (%esi,%eax,1),%eax
		call   _01b0f8_func

	_074dae_jump:
		incw   0x000024(%esp)

	_074db3_jump:
		xor    %eax,%eax
		mov    0x000024(%esp),%ebx
		mov    _0c338a_data,%al
		cmp    %bx,%ax
		jg     _074998_jump
		call   _074e00_func
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074dd8_func:
		push   %ebx
		push   %ecx
		sub    $0x00000c,%esp
		mov    _0dd9c4_data,%eax
		mov    0x00000c(%eax),%al
		lea    0x000008(%esp),%ecx
		mov    %esp,%ebx
		lea    0x000004(%esp),%edx
		and    $0x0000ff,%eax
		call   _01f3b8_func
		add    $0x00000c,%esp
		pop    %ecx
		pop    %ebx
		ret    



_074e00_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		mov    _0dd9c4_data,%eax
		mov    0x00000c(%eax),%al
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		lea    0x000008(%esp),%edx
		and    $0x0000ff,%eax
		call   _01f3b8_func
		mov    0x000008(%esp),%edx
		mov    _0c308c_data,%ax
		add    %edx,%eax
		mov    _0c3074_data,%dx
		dec    %edx
		imul   %edx,%eax
		push   $0x000000
		mov    _0c309c_data,%bx
		mov    0x00000c(%esp),%ecx
		add    %ebx,%eax
		mov    $0x000002,%edx
		sub    %ecx,%eax
		mov    $0x000004,%ebx
		movswl %ax,%ecx
		mov    $_0b6e48_data,%eax
		call   _019d20_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074e70_func:
		push   %ecx

	_074e71_jump:
		inc    %eax
		mov    (%edx),%cl
		inc    %edx
		mov    %cl,-0x000001(%eax)
		dec    %ebx
		jne    _074e71_jump
		pop    %ecx
		ret    



_074e80_func:
		xor    %ah,%ah
		mov    %ah,_0c1765_data
		ret    



_074e8c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    _0c2f46_data,%al
		mov    %al,0x00060a(%edx)
		mov    _0c3162_data,%ax
		mov    %ax,0x00006c(%edx)
		mov    _0c3166_data,%ax
		mov    %ax,0x00006e(%edx)
		mov    _0b9320_data,%ax
		mov    %ax,0x000070(%edx)
		mov    _0b9324_data,%ax
		mov    %ax,0x000072(%edx)
		mov    _0b932e_data,%ax
		mov    %ax,0x000074(%edx)
		mov    _0b9330_data,%ax
		mov    %ax,0x000076(%edx)
		mov    _0b937d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000078(%edx)
		mov    _0c3348_data,%al
		add    %al,%al
		shr    $0x000006,%al
		mov    %al,0x000604(%edx)
		mov    _0c3347_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,0x000605(%edx)
		mov    _0c3347_data,%al
		and    $0x000001,%al
		mov    %al,0x000606(%edx)
		test   %ecx,%ecx
		je     _074f50_jump
		mov    0x000034(%ecx),%ax
		mov    %ax,0x00007e(%edx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00007a(%edx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00007c(%edx)
		mov    0x00007f(%ecx),%al
		mov    %al,0x0005f8(%edx)
		mov    0x000085(%ecx),%al
		and    $0x000001,%al
		mov    %al,0x0005f9(%edx)
		jmp    _074f56_jump

	_074f50_jump:
		movw   $0x00ffff,0x00007e(%edx)

	_074f56_jump:
		mov    _0b9412_data,%ecx
		mov    _0c1d74_data,%esi
		sar    $0x000010,%ecx
		lea    0x000080(%edx),%edi
		add    %ecx,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %al,%al

	_074f7f_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    _0b935e_data(%ecx),%ah
		mov    %ah,0x0005fa(%ecx,%edx,1)
		inc    %al
		cmp    $0x000005,%al
		jb     _074f7f_jump
		mov    _0b9366_data,%al
		mov    %al,0x0005ff(%edx)
		mov    _0b9367_data,%al
		mov    %al,0x000600(%edx)
		mov    _0b9369_data,%al
		mov    %al,0x000601(%edx)
		mov    _0b9368_data,%al
		mov    %al,0x000602(%edx)
		xor    %al,%al

	_074fc4_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    _0b6cf0_data(,%ecx,2),%bx
		inc    %al
		mov    %bx,0x000058(%edx,%ecx,2)
		cmp    $0x000008,%al
		jb     _074fc4_jump
		mov    _0c30ec_data,%ax
		mov    _0b9414_data,%cx
		mov    %ax,0x000068(%edx)
		mov    _0c30ea_data,%ax
		xor    %ebx,%ebx
		mov    %ax,0x00006a(%edx)
		mov    _0c1154_data,%al
		mov    %ecx,(%esp)
		mov    %al,0x000603(%edx)
		mov    _0b9410_data,%eax
		test   %cx,%cx
		jle    _07506f_jump

	_075010_jump:
		mov    0x000064(%eax),%di
		cmp    $0x0000a4,%di
		je     _07502f_jump
		cmp    $0x00004c,%di
		je     _07502f_jump
		cmp    $0x0000b3,%di
		je     _07502f_jump
		cmp    $0x0000f2,%di
		jne    _075061_jump

	_07502f_jump:
		mov    %ebx,%ecx
		xor    %bh,%ch
		and    $0x00001f,%cl
		mov    $0x000001,%esi
		movswl %cx,%ecx
		movswl %bx,%edi
		shl    %cl,%esi
		mov    0x000085(%eax),%cl
		sar    $0x000005,%edi
		test   $0x000004,%cl
		je     _075059_jump
		movswl %di,%ecx
		or     %esi,(%edx,%ecx,4)
		jmp    _075061_jump

	_075059_jump:
		movswl %di,%ecx
		not    %esi
		and    %esi,(%edx,%ecx,4)

	_075061_jump:
		mov    (%esp),%esi
		inc    %ebx
		add    $0x000088,%eax
		cmp    %si,%bx
		jl     _075010_jump

	_07506f_jump:
		mov    _0c33cf_data,%al
		movb   $0x000001,0x000609(%edx)
		mov    %al,0x000608(%edx)
		mov    _0c33d3_data,%al
		mov    %al,0x000607(%edx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_075094_switch:
		.long   _0752c6_case
		.long   _0752cd_case
		.long   _0752c6_case
		.long   _0752cd_case
		.long   _0752bd_case
		.long   _0752cd_case
		.long   _0752cd_case
		.long   _0752c6_case
		.long   _0752cd_case
		.long   _0752c6_case
		.long   _0752cd_case
		.long   _0752bd_case




_0750c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edx
		cmpb   $0x000000,0x000609(%eax)
		je     _075454_jump
		mov    _0c3348_data,%bl
		test   $0x000002,%bl
		je     _075102_jump
		mov    $0x000022,%ecx
		mov    $_0b92f8_data,%edi
		mov    %bl,%bh
		mov    $_0b95b8_data,%esi
		and    $0x0000fd,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,_0c3348_data

	_075102_jump:
		mov    0x00060a(%edx),%al
		mov    %al,_0c2f46_data
		cmp    $_0c1768_data,%edx
		je     _075129_jump
		mov    0x00006c(%edx),%ax
		mov    %ax,_0c3162_data
		mov    0x00006e(%edx),%ax
		mov    %ax,_0c3166_data

	_075129_jump:
		mov    0x00006e(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0b9320_data
		mov    0x000070(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0b9324_data
		mov    0x000074(%edx),%ax
		mov    _0b937d_data,%cl
		mov    %ax,_0b932e_data
		mov    0x000076(%edx),%ax
		and    $0x0000f7,%cl
		mov    %ax,_0b9330_data
		mov    0x000078(%edx),%al
		mov    %cl,_0b937d_data
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000003,%al
		or     %al,%ch
		mov    0x000605(%edx),%al
		and    $0x000001,%al
		mov    _0c3347_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0c3347_data
		shl    $0x000003,%al
		mov    %ah,%bl
		or     %al,%bl
		mov    0x00007c(%edx),%eax
		mov    %ch,_0b937d_data
		sar    $0x000010,%eax
		mov    %bl,_0c3347_data
		cmp    $0xffffffff,%eax
		je     _0751f2_jump
		mov    %eax,%ebx
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    _0b9410_data,%ebx
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000078(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x000028(%eax)
		mov    0x00007a(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x0005f8(%edx),%bl
		mov    %bl,0x00007f(%eax)
		mov    0x0005f9(%edx),%bl
		and    $0x000001,%bl
		mov    0x000085(%eax),%bh
		and    $0x0000fe,%bh
		mov    %bh,%cl
		mov    %bh,0x000085(%eax)
		or     %bl,%cl
		mov    %cl,0x000085(%eax)

	_0751f2_jump:
		cmp    $_0c115c_data,%edx
		jne    _075253_jump
		mov    _0b9414_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _075253_jump

	_075208_jump:
		movswl %ax,%ebx
		mov    _0c1d74_data,%edi
		mov    0x000080(%edx,%ebx,2),%si
		mov    %si,(%edi,%ebx,2)
		imul   $0x000088,%ebx,%ebx
		cmp    %ax,%si
		je     _075238_jump
		mov    _0b9410_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _075246_jump

	_075238_jump:
		mov    _0b9410_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_075246_jump:
		mov    _0b9414_data,%cx
		inc    %eax
		cmp    %cx,%ax
		jl     _075208_jump

	_075253_jump:
		xor    %eax,%eax
		jmp    _075268_jump

	_075257_jump:
		movswl %ax,%ebx
		mov    0x0005fa(%edx,%ebx,1),%cl
		inc    %eax
		mov    %cl,_0b935e_data(%ebx)

	_075268_jump:
		movswl %ax,%ebx
		cmp    $0x000005,%ebx
		jb     _075257_jump
		mov    0x0005ff(%edx),%al
		mov    %al,_0b9366_data
		mov    0x000600(%edx),%al
		mov    %al,_0b9367_data
		mov    0x000601(%edx),%al
		mov    %al,_0b9369_data
		mov    0x000602(%edx),%al
		mov    %al,_0b9368_data
		cmp    $_0c115c_data,%edx
		jne    _0752cd_case
		mov    0x000603(%edx),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _0752cd_case
		and    $0x0000ff,%eax
		jmp    *%cs:_075094_switch(,%eax,4)

	_0752bd_case:
		movb   $0x000003,0x000603(%edx)
		jmp    _0752cd_case

	_0752c6_case:
		movb   $0x000001,0x000603(%edx)

	_0752cd_case:
		mov    _0c1144_data,%ebx
		mov    0x000603(%edx),%al
		xor    %esi,%esi
		mov    %al,_0c1154_data
		mov    %al,0x000072(%ebx)
		mov    %si,_0c3112_data
		mov    0x000608(%edx),%al
		mov    %si,_0c3138_data
		mov    %al,_0c33cf_data
		xor    %eax,%eax

	_0752fe_jump:
		movswl %ax,%ebx
		mov    0x000058(%edx,%ebx,2),%cx
		inc    %eax
		mov    %cx,_0b6cf0_data(,%ebx,2)
		cmp    $0x000008,%ax
		jl     _0752fe_jump
		mov    $0xffffffff,%ecx
		mov    0x000068(%edx),%ax
		mov    $0x000001,%ebx
		mov    %ax,_0c30ec_data
		mov    %cx,_0b9354_data
		mov    %ebx,_0b931c_data
		mov    _0b937d_data,%ch
		mov    0x00006a(%edx),%ax
		xor    %ebx,%ebx
		or     $0x000004,%ch
		mov    %ax,_0c30ea_data
		mov    %ch,_0b937d_data
		xor    %eax,%eax
		mov    _0b9414_data,%cx
		mov    %ax,_0b9338_data
		mov    %ax,_0b933a_data
		mov    %ax,_0c3148_data
		mov    %ax,_0c314e_data
		mov    _0b9410_data,%eax
		mov    %ecx,(%esp)
		test   %cx,%cx
		jle    _075433_jump

	_075383_jump:
		mov    0x000064(%eax),%di
		cmp    $0x000003,%di
		je     _07541a_jump
		cmp    $0x00000d,%di
		je     _07541a_jump
		cmp    $0x00000f,%di
		je     _07541a_jump
		cmp    $0x000024,%di
		je     _07541a_jump
		cmp    $0x000042,%di
		je     _07541a_jump
		cmp    $0x00003e,%di
		je     _07541a_jump
		cmp    $0x000063,%di
		je     _07541a_jump
		cmp    $0x0000a4,%di
		je     _0753f2_jump
		cmp    $0x00004c,%di
		je     _0753f2_jump
		cmp    $0x0000b3,%di
		je     _0753e0_jump
		cmp    $0x0000f2,%di
		jne    _0753ec_jump

	_0753e0_jump:
		movl   $0x000001,0x00001c(%eax)
		mov    0x00001c(%eax),%ecx
		jmp    _0753ee_jump

	_0753ec_jump:
		xor    %ecx,%ecx

	_0753ee_jump:
		test   %ecx,%ecx
		je     _075421_jump

	_0753f2_jump:
		mov    %ebx,%ecx
		xor    %bh,%ch
		mov    $0x000001,%edi
		and    $0x00001f,%cl
		movswl %bx,%esi
		movswl %cx,%ecx
		sar    $0x000005,%esi
		shl    %cl,%edi
		movswl %si,%ecx
		test   %edi,(%edx,%ecx,4)
		je     _07541a_jump
		orb    $0x000004,0x000085(%eax)
		jmp    _075421_jump

	_07541a_jump:
		andb   $0x0000fb,0x000085(%eax)

	_075421_jump:
		mov    (%esp),%esi
		inc    %ebx
		add    $0x000088,%eax
		cmp    %si,%bx
		jl     _075383_jump

	_075433_jump:
		xor    %al,%al
		mov    %al,_0c33c2_data
		mov    0x000607(%edx),%al
		inc    %al
		mov    %al,_0c33d3_data
		xor    %eax,%eax
		mov    0x000607(%edx),%al
		call   _03e8b8_func

	_075454_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075460_func:
		push   %ecx
		mov    $0x000003,%cl
		test   %ax,%ax
		js     _07546d_jump
		sar    %cl,%ax
		jmp    _075476_jump

	_07546d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_075476_jump:
		pop    %ecx
		ret    



_075478_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax
		call   _075460_func
		mov    $0x000058,%ebx
		and    $0x00ffff,%eax
		xor    %edx,%edx
		add    $_0b6d58_data,%eax
		call   _085360_func
		pop    %edx
		pop    %ebx
		ret    



_07549c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _075460_func
		xor    %ebx,%ebx
		mov    %dl,%cl
		mov    %ax,%bx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _0754c0_jump
		sar    %cl,%ax
		jmp    _0754c9_jump

	_0754c0_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0754c9_jump:
		or     %al,_0b6d58_data(%ebx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0754d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _075460_func
		xor    %ebx,%ebx
		mov    %dl,%cl
		mov    %ax,%bx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _0754f8_jump
		sar    %cl,%ax
		jmp    _075501_jump

	_0754f8_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_075501_jump:
		and    _0b6d58_data(%ebx),%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07550c_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax
		call   _075460_func
		mov    $0x000058,%ebx
		and    $0x00ffff,%eax
		xor    %edx,%edx
		add    $_0b6d00_data,%eax
		call   _085360_func
		pop    %edx
		pop    %ebx
		ret    



_075530_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _075460_func
		xor    %ebx,%ebx
		mov    %dl,%cl
		mov    %ax,%bx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _075554_jump
		sar    %cl,%ax
		jmp    _07555d_jump

	_075554_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07555d_jump:
		or     %al,_0b6d00_data(%ebx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075568_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _075460_func
		xor    %ebx,%ebx
		mov    %dl,%cl
		mov    %ax,%bx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _07558c_jump
		sar    %cl,%ax
		jmp    _075595_jump

	_07558c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_075595_jump:
		xor    %al,_0b6d00_data(%ebx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0755a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _075460_func
		xor    %ebx,%ebx
		mov    %dl,%cl
		mov    %ax,%bx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _0755c4_jump
		sar    %cl,%ax
		jmp    _0755cd_jump

	_0755c4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0755cd_jump:
		and    _0b6d00_data(%ebx),%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0755d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    $_0ae238_data,%ebp
		mov    $_0bf3ac_data,%eax
		xor    %edx,%edx
		add    $0x000059,%eax
		add    $0x000003,%ebp
		mov    %eax,(%esp)

	_0755f6_jump:
		imul   $0x000021,%edx,%eax
		imul   $0x00007b,%edx,%ebx
		mov    _0bf3b4_data(%ebx),%cl
		and    $0x000001,%cl
		mov    _0ae238_data(%eax),%ch
		and    $0x0000fe,%ch
		mov    %ch,_0ae238_data(%eax)
		or     %cl,%ch
		mov    %ch,_0ae238_data(%eax)
		mov    _0bf3b4_data(%ebx),%cl
		shl    $0x000005,%cl
		shr    $0x000007,%cl
		and    $0x000001,%cl
		and    $0x0000fd,%ch
		mov    %ch,_0ae238_data(%eax)
		add    %cl,%cl
		or     %cl,%ch
		mov    %ch,_0ae238_data(%eax)
		testb  $0x000008,_0bf3b4_data(%ebx)
		je     _075655_jump
		mov    _0bf3b5_data(%ebx),%bl
		mov    %bl,_0ae239_data(%eax)
		jmp    _07565d_jump

	_075655_jump:
		xor    %ch,%ch
		mov    %ch,_0ae239_data(%eax)

	_07565d_jump:
		imul   $0x00007b,%edx,%eax
		imul   $0x000021,%edx,%ebx
		mov    $0x00001e,%ecx
		mov    (%esp),%esi
		mov    %ebp,%edi
		mov    _0bf404_data(%eax),%al
		add    $0x000021,%ebp
		mov    %al,_0ae23a_data(%ebx)
		mov    (%esp),%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x00007b,%ebx
		inc    %edx
		mov    %ebx,(%esp)
		cmp    $0x000020,%edx
		jl     _0755f6_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0756ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    $_0bf3ac_data,%ebp
		mov    $_0ae238_data,%eax
		xor    %edx,%edx
		add    $0x000003,%eax
		add    $0x000059,%ebp
		mov    %eax,(%esp)

	_0756ca_jump:
		imul   $0x00007b,%edx,%eax
		imul   $0x000021,%edx,%ebx
		mov    _0ae238_data(%ebx),%cl
		and    $0x000001,%cl
		mov    _0bf3b4_data(%eax),%ch
		and    $0x0000fe,%ch
		mov    %ch,_0bf3b4_data(%eax)
		or     %cl,%ch
		mov    %ch,_0bf3b4_data(%eax)
		mov    _0ae238_data(%ebx),%cl
		shl    $0x000006,%cl
		shr    $0x000007,%cl
		and    $0x000001,%cl
		and    $0x0000fb,%ch
		mov    (%esp),%esi
		mov    %ch,_0bf3b4_data(%eax)
		shl    $0x000002,%cl
		mov    %ebp,%edi
		or     %cl,%ch
		add    $0x00007b,%ebp
		mov    %ch,_0bf3b4_data(%eax)
		mov    _0ae239_data(%ebx),%cl
		mov    _0ae23a_data(%ebx),%bl
		mov    %cl,_0bf3b5_data(%eax)
		inc    %edx
		mov    %bl,_0bf404_data(%eax)
		mov    (%esp),%ebx
		mov    $0x00001e,%ecx
		add    $0x000021,%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebx,(%esp)
		cmp    $0x000020,%edx
		jl     _0756ca_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075768_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $_0a30b8_data,%edx
		call   _085d60_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _075799_jump
		mov    $0x000002,%ebx
		xor    %edx,%edx
		call   _085e56_func
		mov    %ecx,%eax
		call   _08a18e_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _086112_func
		mov    %edx,%eax

	_075799_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0757a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00010c,%esp
		mov    %al,0x000104(%esp)
		cmpb   $0x000000,_0c337f_data
		je     _0757c2_jump
		xor    %al,%al
		jmp    _075a72_jump

	_0757c2_jump:
		xor    %ebx,%ebx
		mov    0x000104(%esp),%bl
		mov    $_0bf324_data,%edx
		mov    %ebx,%eax
		mov    %esp,%edi
		call   _0656d4_func
		mov    %eax,%esi
		push   %edi

	_0757dc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0757f4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0757dc_jump

	_0757f4_jump:
		pop    %edi
		lea    0x0000f4(%esp),%eax
		mov    $_0bf324_data,%esi
		lea    0x000080(%esp),%edi
		call   _08b47e_func
		push   %edi

	_07580e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _075826_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07580e_jump

	_075826_jump:
		pop    %edi
		lea    0x0000f4(%esp),%esi
		lea    0x000080(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_07583e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _075856_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07583e_jump

	_075856_jump:
		pop    %edi
		push   $0x000180
		push   $0x000222
		lea    0x000088(%esp),%eax
		push   %eax
		call   _086d88_func
		mov    %eax,%esi
		cwtl   
		add    $0x00000c,%esp
		cmp    $0xffffffff,%eax
		je     _075a23_jump
		lea    -0x000001(%ebx),%eax
		lea    0x000000(,%eax,8),%ebx
		mov    $_0c3317_data,%edx
		add    %eax,%ebx
		mov    $_0de1d1_data,%eax
		add    %ebx,%edx
		mov    $0x000009,%ebx
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0a7c94_data,%edx
		mov    $_0de1da_data,%eax
		call   _074e70_func
		mov    $0x000005,%dh
		mov    $0x000420,%ebx
		mov    %dh,_0de1db_data
		call   _0755d8_func
		mov    $_0ae238_data,%edx
		mov    $_0de1dc_data,%eax
		call   _074e70_func
		mov    $0x000003,%ebx
		mov    $_0c3347_data,%edx
		mov    $_0de5fc_data,%eax
		call   _074e70_func
		mov    $0x000014,%ebx
		mov    $_0c1148_data,%edx
		mov    $_0de5ff_data,%eax
		call   _074e70_func
		mov    $0x00000a,%ebx
		mov    $_0c2f40_data,%edx
		mov    $_0de613_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0b9372_data,%edx
		mov    $_0de61d_data,%eax
		call   _074e70_func
		mov    $0x000058,%ebx
		mov    $_0b6d58_data,%edx
		mov    $_0de61e_data,%eax
		call   _074e70_func
		mov    $0x000018,%ebx
		mov    $_0b7fd0_data,%edx
		mov    $_0de676_data,%eax
		call   _074e70_func
		cmpb   $0x000000,_0c33a9_data
		je     _075969_jump
		mov    $0x000002,%ebx
		mov    $_0c3104_data,%edx
		mov    $_0de68e_data,%eax
		call   _074e70_func

	_075969_jump:
		mov    $0x000002,%ebx
		mov    $_0c3102_data,%edx
		mov    $_0de68e_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0c30da_data,%edx
		mov    $_0de690_data,%eax
		call   _074e70_func
		movswl %si,%esi
		mov    $0x0004c1,%ebx
		mov    $_0de1d1_data,%edx
		mov    %esi,%eax
		call   _08719c_func
		test   %eax,%eax
		jg     _0759b7_jump
		xor    %al,%al
		add    $0x00010c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0759b7_jump:
		mov    %esi,%eax
		mov    0x000104(%esp),%bh
		call   _08717c_func
		test   %bh,%bh
		jbe    _075a23_jump
		mov    $_0a30bc_data,%edx
		lea    0x000080(%esp),%eax
		call   _085d60_func
		mov    %eax,%ebx
		mov    %eax,%edi
		test   %eax,%eax
		je     _075a23_jump
		mov    $_0a30c0_data,%edx
		mov    %esp,%eax
		call   _085d60_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _075a12_jump
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _02dd18_func
		call   _02da10_func
		mov    %al,0x000108(%esp)
		mov    %esi,%eax
		call   _086112_func
		jmp    _075a1a_jump

	_075a12_jump:
		movb   $0x000001,0x000108(%esp)

	_075a1a_jump:
		mov    %edi,%eax
		call   _086112_func
		jmp    _075a2b_jump

	_075a23_jump:
		movb   $0x000001,0x000108(%esp)

	_075a2b_jump:
		mov    $_0a30c0_data,%edx
		lea    0x000080(%esp),%eax
		call   _085d60_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _075a5f_jump
		mov    $0x000001,%ebx
		mov    $0x0004c1,%edx
		mov    %eax,%ecx
		mov    $_0b92f8_data,%eax
		call   _085f52_func
		mov    %esi,%eax
		call   _086112_func

	_075a5f_jump:
		lea    0x000080(%esp),%eax
		call   _087491_func
		mov    0x000108(%esp),%al

	_075a72_jump:
		add    $0x00010c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075a80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000104,%esp
		mov    %al,0x0000fc(%esp)
		cmpb   $0x000000,_0c337f_data
		je     _075aa2_jump
		xor    %al,%al
		jmp    _075d4f_jump

	_075aa2_jump:
		xor    %eax,%eax
		mov    $_0bf324_data,%edx
		mov    0x0000fc(%esp),%al
		mov    %esp,%edi
		call   _0656d4_func
		mov    %eax,%esi
		push   %edi

	_075aba_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _075ad2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _075aba_jump

	_075ad2_jump:
		pop    %edi
		lea    0x0000ec(%esp),%eax
		mov    $_0bf324_data,%esi
		lea    0x000078(%esp),%edi
		call   _08b47e_func
		push   %edi

	_075ae9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _075b01_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _075ae9_jump

	_075b01_jump:
		pop    %edi
		lea    0x0000ec(%esp),%esi
		lea    0x000078(%esp),%edi
		mov    $_0a30bc_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_075b1b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _075b33_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _075b1b_jump

	_075b33_jump:
		pop    %edi
		mov    %esp,%eax
		call   _085d60_func
		mov    %eax,%esi
		mov    %eax,%edi
		test   %eax,%eax
		je     _075b86_jump
		mov    $_0a30c0_data,%edx
		lea    0x000078(%esp),%eax
		call   _085d60_func
		mov    %eax,%ebx
		test   %eax,%eax
		je     _075b75_jump
		mov    %eax,%edx
		mov    %esi,%eax
		call   _02def8_func
		call   _02da10_func
		mov    %al,0x000100(%esp)
		mov    %ebx,%eax
		call   _086112_func
		jmp    _075b7d_jump

	_075b75_jump:
		movb   $0x000001,0x000100(%esp)

	_075b7d_jump:
		mov    %edi,%eax
		call   _086112_func
		jmp    _075b8e_jump

	_075b86_jump:
		movb   $0x000001,0x000100(%esp)

	_075b8e_jump:
		cmpb   $0x000000,0x000100(%esp)
		jne    _075bb0_jump
		lea    0x000078(%esp),%eax
		call   _075768_func
		cmp    $0x0004c1,%eax
		je     _075bb0_jump
		movb   $0x000001,0x000100(%esp)

	_075bb0_jump:
		cmpb   $0x000000,0x000100(%esp)
		jne    _075d06_jump
		push   $0x000180
		push   $0x000200
		lea    0x000080(%esp),%eax
		push   %eax
		call   _086d88_func
		movswl %ax,%esi
		add    $0x00000c,%esp
		cmp    $0xffffffff,%esi
		je     _075d06_jump
		mov    $0x0004c1,%ebx
		mov    $_0de1d1_data,%edx
		mov    %esi,%eax
		call   _087081_func
		xor    %eax,%eax
		mov    0x0000fc(%esp),%al
		dec    %eax
		lea    0x000000(,%eax,8),%ebx
		add    %eax,%ebx
		mov    $_0c3317_data,%eax
		mov    $_0de1d1_data,%edx
		add    %ebx,%eax
		mov    $0x000009,%ebx
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0de1da_data,%edx
		mov    $_0a7c94_data,%eax
		call   _074e70_func
		mov    $0x000420,%ebx
		mov    $_0de1dc_data,%edx
		mov    $_0ae238_data,%eax
		call   _074e70_func
		mov    $0x000003,%ebx
		mov    $_0de5fc_data,%edx
		mov    $_0c3347_data,%eax
		call   _074e70_func
		mov    $0x000014,%ebx
		mov    $_0de5ff_data,%edx
		mov    $_0c1148_data,%eax
		call   _074e70_func
		mov    $0x00000a,%ebx
		mov    $_0de613_data,%edx
		mov    $_0c2f40_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0de61d_data,%edx
		mov    $_0b9372_data,%eax
		call   _074e70_func
		mov    $0x000058,%ebx
		mov    $_0de61e_data,%edx
		mov    $_0b6d58_data,%eax
		call   _074e70_func
		mov    $0x000018,%ebx
		mov    $_0de676_data,%edx
		mov    $_0b7fd0_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de68e_data,%edx
		mov    $_0c3102_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de690_data,%edx
		mov    $_0c30da_data,%eax
		call   _074e70_func
		mov    %esi,%eax
		call   _08717c_func
		call   _0756ac_func
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,_0c30e0_data
		mov    %bx,_0c30de_data
		jmp    _075d0e_jump

	_075d06_jump:
		movb   $0x000001,0x000100(%esp)

	_075d0e_jump:
		mov    $_0a30c0_data,%edx
		lea    0x000078(%esp),%eax
		call   _085d60_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _075d3f_jump
		mov    $0x000001,%ebx
		mov    $0x0004c1,%edx
		mov    %eax,%ecx
		mov    $_0b92f8_data,%eax
		call   _085f52_func
		mov    %esi,%eax
		call   _086112_func

	_075d3f_jump:
		lea    0x000078(%esp),%eax
		call   _087491_func
		mov    0x000100(%esp),%al

	_075d4f_jump:
		add    $0x000104,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075d5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000108,%esp
		mov    %al,0x000100(%esp)
		xor    %eax,%eax
		mov    $_0bf324_data,%edx
		mov    0x000100(%esp),%al
		mov    %esp,%edi
		call   _0656d4_func
		mov    %eax,%esi
		push   %edi

	_075d86_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _075d9e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _075d86_jump

	_075d9e_jump:
		pop    %edi
		lea    0x0000ec(%esp),%eax
		mov    $_0bf324_data,%esi
		lea    0x000078(%esp),%edi
		call   _08b47e_func
		push   %edi

	_075db5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _075dcd_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _075db5_jump

	_075dcd_jump:
		pop    %edi
		lea    0x0000ec(%esp),%esi
		lea    0x000078(%esp),%edi
		mov    $_0a30bc_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_075de7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _075dff_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _075de7_jump

	_075dff_jump:
		pop    %edi
		mov    %esp,%eax
		call   _085d60_func
		mov    %eax,%ecx
		mov    %eax,%esi
		test   %eax,%eax
		je     _075e52_jump
		mov    $_0a30c0_data,%edx
		lea    0x000078(%esp),%eax
		call   _085d60_func
		mov    %eax,%ebx
		test   %eax,%eax
		je     _075e41_jump
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _02def8_func
		call   _02da10_func
		mov    %al,0x0000fc(%esp)
		mov    %ebx,%eax
		call   _086112_func
		jmp    _075e49_jump

	_075e41_jump:
		movb   $0x000001,0x0000fc(%esp)

	_075e49_jump:
		mov    %esi,%eax
		call   _086112_func
		jmp    _075e5a_jump

	_075e52_jump:
		movb   $0x000001,0x0000fc(%esp)

	_075e5a_jump:
		cmpb   $0x000000,0x0000fc(%esp)
		jne    _075e7c_jump
		lea    0x000078(%esp),%eax
		call   _075768_func
		cmp    $0x0004c1,%eax
		je     _075e7c_jump
		movb   $0x000001,0x0000fc(%esp)

	_075e7c_jump:
		cmpb   $0x000000,0x0000fc(%esp)
		jne    _075fe4_jump
		push   $0x000180
		push   $0x000200
		lea    0x000080(%esp),%eax
		push   %eax
		call   _086d88_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		je     _075fe4_jump
		movzbl 0x000100(%esp),%esi
		dec    %esi
		lea    0x000000(,%esi,8),%eax
		mov    $_0c3317_data,%edx
		add    %esi,%eax
		mov    $0x000009,%ebx
		add    %eax,%edx
		mov    %ecx,%eax
		call   _087081_func
		mov    $0x000001,%ebx
		mov    $_0a7c94_data,%edx
		mov    %ecx,%eax
		call   _087081_func
		mov    $0x000001,%ebx
		lea    0x000104(%esp),%edx
		mov    %ecx,%eax
		call   _087081_func
		mov    $0x000420,%ebx
		mov    $_0ae238_data,%edx
		mov    %ecx,%eax
		call   _087081_func
		mov    $0x000003,%ebx
		mov    $_0c3347_data,%edx
		mov    %ecx,%eax
		call   _087081_func
		mov    $0x000014,%ebx
		mov    $_0c1148_data,%edx
		mov    %ecx,%eax
		call   _087081_func
		mov    $0x00000a,%ebx
		mov    $_0c2f40_data,%edx
		mov    %ecx,%eax
		call   _087081_func
		mov    %ecx,%eax
		call   _08717c_func
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		lea    (%eax,%eax,1),%edx
		xor    %ch,%ch
		mov    %ch,_0c2f24_data(%edx)
		mov    _0a7c94_data,%al
		mov    %ch,_0c2f25_data(%edx)
		mov    %al,_0c2f27_data(%edx)
		mov    0x000104(%esp),%al
		mov    %al,_0c2f26_data(%edx)
		xor    %eax,%eax

	_075f78_jump:
		xor    %edx,%edx
		mov    0x000100(%esp),%dl
		dec    %edx
		imul   $0x000006,%edx,%edx
		mov    _0ae239_data(%eax),%bl
		mov    _0c2f24_data(%edx),%bh
		add    %bl,%bh
		mov    %edx,%ecx
		mov    %bh,_0c2f24_data(%edx)
		lea    _0c2f25_data(%ecx),%ecx
		cmp    $0x000003,%bl
		sete   %bl
		movzbl %bl,%esi
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		add    %esi,%ebx
		add    $0x000021,%eax
		mov    %bl,(%ecx)
		cmp    $0x000420,%eax
		jne    _075f78_jump
		mov    _0c2f25_data(%edx),%al
		mov    $0x000003,%ah
		mul    %ah
		mov    %al,_0c2f25_data(%edx)
		mov    _0c2f40_data,%al
		mov    %al,_0c2f22_data(%edx)
		mov    _0c2f46_data,%al
		mov    %al,_0c2f23_data(%edx)
		jmp    _075fec_jump

	_075fe4_jump:
		movb   $0x000001,0x0000fc(%esp)

	_075fec_jump:
		mov    $_0a30c0_data,%edx
		lea    0x000078(%esp),%eax
		call   _085d60_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _07601d_jump
		mov    $0x000001,%ebx
		mov    $0x0004c1,%edx
		mov    %eax,%ecx
		mov    $_0b92f8_data,%eax
		call   _085f52_func
		mov    %esi,%eax
		call   _086112_func

	_07601d_jump:
		lea    0x000078(%esp),%eax
		call   _087491_func
		cmpb   $0x000000,_0c337f_data
		je     _076061_jump
		xor    %ebx,%ebx
		mov    0x000100(%esp),%bl
		dec    %ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		xor    %ch,%ch
		mov    %ch,_0c3317_data(%edx,%eax,8)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		xor    %bl,%dl
		mov    %dl,_0c2f25_data(,%eax,2)
		xor    %bh,%dh
		mov    %dh,_0c2f24_data(,%eax,2)

	_076061_jump:
		mov    0x0000fc(%esp),%al
		add    $0x000108,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076074_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00007c,%esp
		mov    _0a7cde_data,%al
		mov    %al,0x000078(%esp)
		mov    $_0bf324_data,%eax
		mov    %esp,%edi
		call   _0656a4_func
		mov    %eax,%esi
		push   %edi

	_076094_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0760ac_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _076094_jump

	_0760ac_jump:
		pop    %edi
		push   $0x000180
		push   $0x000222
		lea    0x000008(%esp),%eax
		push   %eax
		call   _086d88_func
		mov    %eax,%edi
		cwtl   
		add    $0x00000c,%esp
		cmp    $0xffffffff,%eax
		jne    _0760d3_jump
		xor    %al,%al
		jmp    _076427_jump

	_0760d3_jump:
		call   _040a5c_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    $_0de14c_data,%eax
		call   _074e70_func
		call   _040a64_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    $_0de150_data,%eax
		call   _074e70_func
		call   _040a6c_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    $_0de154_data,%eax
		call   _074e70_func
		call   _040a74_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    $_0de158_data,%eax
		call   _074e70_func
		call   _040a7c_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    $_0de15c_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0c3377_data,%edx
		mov    $_0de160_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0af038_data,%edx
		mov    $_0de161_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0af03a_data,%edx
		mov    $_0de163_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0af03c_data,%edx
		mov    $_0de165_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0af03e_data,%edx
		mov    $_0de167_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0af040_data,%edx
		mov    $_0de169_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0af042_data,%edx
		mov    $_0de16b_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0af044_data,%edx
		mov    $_0de16d_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0af046_data,%edx
		mov    $_0de16f_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0c3378_data,%edx
		mov    $_0de171_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0c3375_data,%edx
		mov    $_0de172_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0c301c_data,%edx
		mov    $_0de173_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0c3024_data,%edx
		mov    $_0de175_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0c301e_data,%edx
		mov    $_0de177_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0c3026_data,%edx
		mov    $_0de179_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0c3022_data,%edx
		mov    $_0de17b_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0c3020_data,%edx
		mov    $_0de17d_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0b5590_data,%edx
		mov    $_0de17f_data,%eax
		xor    %cl,%cl
		call   _074e70_func

	_0762ab_jump:
		xor    %eax,%eax
		mov    %cl,%al
		mov    $0x000001,%ebx
		mov    _0a7cb0_data(,%eax,4),%edx
		add    $_0de183_data,%eax
		inc    %cl
		call   _074e70_func
		cmp    $0x000007,%cl
		jb     _0762ab_jump
		mov    $0x000001,%ebx
		mov    $_0a7c9d_data,%edx
		mov    $_0de18a_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0c336e_data,%edx
		mov    $_0de18b_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0a7cdc_data,%edx
		mov    $_0de18c_data,%eax
		call   _074e70_func
		mov    0x000078(%esp),%ah
		cmp    $0x000001,%ah
		je     _076320_jump
		test   %ah,%ah
		je     _076320_jump
		cmp    $0x000002,%ah
		je     _076320_jump
		xor    %bl,%bl
		mov    %bl,0x000078(%esp)

	_076320_jump:
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%edx
		mov    $_0de18d_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0a7cd6_data,%edx
		mov    $_0de18e_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0a7cdf_data,%edx
		mov    $_0de18f_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0c336c_data,%edx
		mov    $_0de190_data,%eax
		call   _074e70_func
		mov    $0x000010,%ebx
		mov    $_0a7ce2_data,%edx
		mov    $_0de191_data,%eax
		call   _074e70_func
		mov    $0x000010,%ebx
		mov    $_0a7cf2_data,%edx
		mov    $_0de1a1_data,%eax
		call   _074e70_func
		mov    $0x000010,%ebx
		mov    $_0a7d02_data,%edx
		mov    $_0de1b1_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0a7d12_data,%edx
		mov    $_0de1c1_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0a7d16_data,%edx
		mov    $_0de1c5_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0a7d1a_data,%edx
		mov    $_0de1c9_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0a7d1e_data,%edx
		mov    $_0de1cd_data,%eax
		movswl %di,%ecx
		call   _074e70_func
		mov    $0x000085,%ebx
		mov    $_0de14c_data,%edx
		mov    %ecx,%eax
		call   _08719c_func
		test   %eax,%eax
		jg     _07641e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07641e_jump:
		mov    %ecx,%eax
		call   _08717c_func
		mov    $0x000001,%al

	_076427_jump:
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076430_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000078,%esp
		mov    $_0bf324_data,%eax
		mov    %esp,%edi
		call   _0656a4_func
		mov    %eax,%esi
		push   %edi

	_076447_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07645f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _076447_jump

	_07645f_jump:
		pop    %edi
		push   $0x000180
		push   $0x000200
		lea    0x000008(%esp),%eax
		push   %eax
		call   _086d88_func
		add    $0x00000c,%esp
		movswl %ax,%ecx
		mov    %eax,%edi
		cmp    $0xffffffff,%ecx
		jne    _076488_jump
		xor    %al,%al
		jmp    _0767e0_jump

	_076488_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _08744e_func
		cmp    $0x000085,%eax
		je     _0764a8_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0764a8_jump:
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _08744e_func
		mov    $0x000085,%ebx
		mov    $_0de14c_data,%edx
		mov    %ecx,%eax
		call   _087081_func
		mov    $0x000004,%ebx
		mov    $_0de14c_data,%edx
		mov    $_0c0e54_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0de150_data,%edx
		mov    $_0c0e5c_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0de154_data,%edx
		mov    $_0c0e64_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0de158_data,%edx
		mov    $_0c0e60_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0de15c_data,%edx
		mov    $_0c0e58_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0de160_data,%edx
		mov    $_0c3377_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de161_data,%edx
		mov    $_0af038_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de163_data,%edx
		mov    $_0af03a_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de165_data,%edx
		mov    $_0af03c_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de167_data,%edx
		mov    $_0af03e_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de169_data,%edx
		mov    $_0af040_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de16b_data,%edx
		mov    $_0af042_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de16d_data,%edx
		mov    $_0af044_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de16f_data,%edx
		mov    $_0af046_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0de171_data,%edx
		mov    $_0c3374_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0de172_data,%edx
		mov    $_0c3376_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de173_data,%edx
		mov    $_0c301c_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de175_data,%edx
		mov    $_0c3024_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de177_data,%edx
		mov    $_0c301e_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de179_data,%edx
		mov    $_0c3026_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de17b_data,%edx
		mov    $_0c3022_data,%eax
		call   _074e70_func
		mov    $0x000002,%ebx
		mov    $_0de17d_data,%edx
		mov    $_0c3020_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0de17f_data,%edx
		mov    $_0b5590_data,%eax
		xor    %cl,%cl
		call   _074e70_func

	_076692_jump:
		xor    %eax,%eax
		mov    $_0de183_data,%edx
		mov    %cl,%al
		mov    $0x000001,%ebx
		add    %eax,%edx
		mov    _0a7cb0_data(,%eax,4),%eax
		inc    %cl
		call   _074e70_func
		cmp    $0x000007,%cl
		jb     _076692_jump
		mov    $0x000001,%ebx
		mov    $_0de18a_data,%edx
		mov    $_0a7c9d_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0de18b_data,%edx
		mov    $_0c336e_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0de18c_data,%edx
		mov    $_0a7cdc_data,%eax
		call   _074e70_func
		cmpb   $0x000046,_0a7cde_data
		je     _07670e_jump
		mov    $0x000001,%ebx
		mov    $_0de18d_data,%edx
		mov    $_0a7cde_data,%eax
		call   _074e70_func

	_07670e_jump:
		mov    $0x000001,%ebx
		mov    $_0de18e_data,%edx
		mov    $_0a7cd6_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0de18f_data,%edx
		mov    $_0a7cdf_data,%eax
		call   _074e70_func
		mov    $0x000001,%ebx
		mov    $_0de190_data,%edx
		mov    $_0c336c_data,%eax
		call   _074e70_func
		mov    $0x000010,%ebx
		mov    $_0de191_data,%edx
		mov    $_0a7ce2_data,%eax
		call   _074e70_func
		mov    $0x000010,%ebx
		mov    $_0de1a1_data,%edx
		mov    $_0a7cf2_data,%eax
		call   _074e70_func
		mov    $0x000010,%ebx
		mov    $_0de1b1_data,%edx
		mov    $_0a7d02_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0de1c1_data,%edx
		mov    $_0a7d12_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0de1c5_data,%edx
		mov    $_0a7d16_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0de1c9_data,%edx
		mov    $_0a7d1a_data,%eax
		call   _074e70_func
		mov    $0x000004,%ebx
		mov    $_0de1cd_data,%edx
		mov    $_0a7d1e_data,%eax
		call   _074e70_func
		movswl %di,%eax
		call   _08717c_func
		mov    $0x000001,%al

	_0767e0_jump:
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07683c_func:
		push   %ebx
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %edx,(%esp)

	_076845_jump:
		mov    %ebx,%eax
		call   _07685c_func
		mov    %ebx,%eax
		call   *(%esp)
		test   %eax,%eax
		je     _076845_jump
		add    $0x000004,%esp
		pop    %ebx
		ret    



_07685c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		xor    %ah,%ah
		mov    %ah,_0decde_data
		mov    $_0decde_data,%ebp
		mov    %ebp,%edi

	_076873_jump:
		mov    $0x000136,%edx
		mov    %ecx,%ebx
		mov    %ebp,%eax
		call   _08bb6e_func
		xor    %dl,%dl
		mov    %ebp,%eax
		mov    %dl,_0dee13_data
		call   _0768d4_func
		cmpb   $0x000020,_0decde_data
		jne    _0768c1_jump

	_076899_jump:
		mov    $_0decdf_data,%esi
		push   %edi

	_07689f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0768b7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07689f_jump

	_0768b7_jump:
		pop    %edi
		cmpb   $0x000020,_0decde_data
		je     _076899_jump

	_0768c1_jump:
		cmpb   $0x000000,_0decde_data
		je     _076873_jump
		pop    %ebp

	_0768cb_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0768d4_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		call   _085309_func
		mov    (%esi),%dl
		mov    %esi,%eax
		test   %dl,%dl
		je     _076926_jump

	_0768e7_jump:
		mov    (%eax),%bh
		cmp    $0x000028,%bh
		je     _076907_jump
		cmp    $0x000029,%bh
		je     _076907_jump
		cmp    $0x00003d,%bh
		je     _076907_jump
		cmp    $0x00002c,%bh
		je     _076907_jump
		cmp    $0x00003b,%bh
		je     _076907_jump
		cmp    $0x00000d,%bh
		jne    _07690a_jump

	_076907_jump:
		movb   $0x000020,(%eax)

	_07690a_jump:
		mov    (%eax),%bh
		cmp    $0x00000a,%bh
		je     _07691b_jump
		cmp    $0x00002f,%bh
		jne    _07691e_jump
		cmp    0x000001(%eax),%bh
		jne    _07691e_jump

	_07691b_jump:
		movb   $0x000000,(%eax)

	_07691e_jump:
		mov    0x000001(%eax),%dh
		inc    %eax
		test   %dh,%dh
		jne    _0768e7_jump

	_076926_jump:
		mov    (%esi),%bl
		mov    %esi,%edx
		test   %bl,%bl
		je     _076961_jump

	_07692e_jump:
		mov    (%edx),%ah
		cmp    $0x000020,%ah
		jne    _07695b_jump
		cmp    0x000001(%edx),%ah
		jne    _07695b_jump
		lea    0x000001(%edx),%esi
		mov    %edx,%edi
		push   %edi

	_076940_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _076958_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _076940_jump

	_076958_jump:
		pop    %edi
		jmp    _07695c_jump

	_07695b_jump:
		inc    %edx

	_07695c_jump:
		cmpb   $0x000000,(%edx)
		jne    _07692e_jump

	_076961_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_076968_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x000020,%dl
		mov    %eax,%esi

	_076973_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _07698b_jump
		cmp    $0x000000,%al
		je     _076989_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _07698b_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _076973_jump

	_076989_jump:
		sub    %esi,%esi

	_07698b_jump:
		test   %esi,%esi
		je     _0769b0_jump
		mov    %ebx,%esi

	_076991_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _0769a9_jump
		cmp    $0x000000,%al
		je     _0769a7_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _0769a9_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _076991_jump

	_0769a7_jump:
		sub    %esi,%esi

	_0769a9_jump:
		movb   $0x000000,(%esi)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0769b0_jump:
		cmpb   $0x000000,(%ebx)
		jne    _0769bc_jump
		mov    %ecx,%eax
		call   _020150_func

	_0769bc_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0769c0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x000022,%dl
		mov    %eax,%esi

	_0769cc_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _0769e4_jump
		cmp    $0x000000,%al
		je     _0769e2_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _0769e4_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _0769cc_jump

	_0769e2_jump:
		sub    %esi,%esi

	_0769e4_jump:
		test   %esi,%esi
		je     _076a21_jump
		mov    %ebx,%esi

	_0769ea_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _076a02_jump
		cmp    $0x000000,%al
		je     _076a00_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _076a02_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _0769ea_jump

	_076a00_jump:
		sub    %esi,%esi

	_076a02_jump:
		mov    %ebx,%edi
		inc    %esi
		push   %edi

	_076a06_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _076a1e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _076a06_jump

	_076a1e_jump:
		pop    %edi
		jmp    _076a28_jump

	_076a21_jump:
		mov    %ecx,%eax
		call   _020150_func

	_076a28_jump:
		mov    $0x000022,%dl
		mov    %ebx,%esi

	_076a2c_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _076a44_jump
		cmp    $0x000000,%al
		je     _076a42_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _076a44_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _076a2c_jump

	_076a42_jump:
		sub    %esi,%esi

	_076a44_jump:
		test   %esi,%esi
		je     _076a6a_jump
		mov    %ebx,%esi

	_076a4a_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _076a62_jump
		cmp    $0x000000,%al
		je     _076a60_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _076a62_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _076a4a_jump

	_076a60_jump:
		sub    %esi,%esi

	_076a62_jump:
		movb   $0x000000,(%esi)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_076a6a_jump:
		mov    %ecx,%eax
		call   _020150_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_076a78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0decde_data,%ebx
		xor    %ah,%ah
		mov    _0decde_data,%dh
		mov    %ah,_0dee14_data
		mov    %ah,_0deba8_data
		cmp    $0x000020,%dh
		jne    _076aa4_jump

	_076a9b_jump:
		mov    0x000001(%ebx),%cl
		inc    %ebx
		cmp    $0x000020,%cl
		je     _076a9b_jump

	_076aa4_jump:
		mov    $_0dee14_data,%edi
		mov    %ebx,%esi
		mov    $0x000020,%dl
		push   %edi

	_076aae_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _076ac6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _076aae_jump

	_076ac6_jump:
		pop    %edi
		mov    %edi,%esi

	_076ac9_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _076ae1_jump
		cmp    $0x000000,%al
		je     _076adf_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _076ae1_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _076ac9_jump

	_076adf_jump:
		sub    %esi,%esi

	_076ae1_jump:
		test   %esi,%esi
		je     _076b02_jump
		mov    %edi,%esi

	_076ae7_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _076aff_jump
		cmp    $0x000000,%al
		je     _076afd_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _076aff_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _076ae7_jump

	_076afd_jump:
		sub    %esi,%esi

	_076aff_jump:
		movb   $0x000000,(%esi)

	_076b02_jump:
		mov    $_0dee14_data,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		add    %ecx,%ebx
		cmpb   $0x000020,(%ebx)
		jne    _076b20_jump

	_076b18_jump:
		mov    0x000001(%ebx),%al
		inc    %ebx
		cmp    $0x000020,%al
		je     _076b18_jump

	_076b20_jump:
		mov    $_0deba8_data,%edi
		mov    %ebx,%esi
		push   %edi

	_076b28_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _076b40_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _076b28_jump

	_076b40_jump:
		pop    %edi
		mov    %edi,%ebx

	_076b43_jump:
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmpb   $0x000020,_0deba7_data(%ecx)
		jne    _0768cb_jump
		mov    %ebx,%edi
		xor    %dl,%dl
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %dl,_0deba7_data(%ecx)
		jmp    _076b43_jump



_076c98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000098,%esp
		push   $_0a30f4_data
		call   _085441_func
		mov    $0x000001,%ah
		add    $0x000004,%esp
		mov    %ah,0x000088(%esp)
		mov    $_0a310c_data,%eax
		mov    %esp,%edi
		call   _065440_func
		mov    %eax,%esi
		mov    $_0a3118_data,%edx
		push   %edi

	_076cce_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _076ce6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _076cce_jump

	_076ce6_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%edi
		mov    %eax,%esi
		lea    0x000090(%esp),%eax
		lea    0x000080(%esp),%ecx
		push   %eax
		lea    0x000098(%esp),%eax
		lea    0x000088(%esp),%ebx
		push   %eax
		mov    $_0a311c_data,%edx
		mov    %edi,%eax
		call   _04dc38_func
		mov    0x000084(%esp),%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _085e56_func
		push   $_0a311c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		mov    %edi,%ecx
		push   %eax
		lea    0x0000a0(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    $0x000004,%edx
		mov    $_0bf320_data,%eax
		call   _04dd40_func
		push   $_0a311c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x0000a0(%esp),%eax
		mov    $0x00001b,%edx
		push   %eax
		mov    %edi,%ecx
		mov    $_0c31b5_data,%eax
		call   _04dd40_func
		push   $_0a311c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x0000a0(%esp),%eax
		mov    $0x000c3a,%edx
		push   %eax
		mov    %edi,%ecx
		mov    $_0c215c_data,%eax
		call   _04dd40_func
		push   $_0a311c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x0000a0(%esp),%eax
		mov    $0x00003f,%edx
		push   %eax
		mov    %edi,%ecx
		mov    $_0c31d0_data,%eax
		call   _04dd40_func
		push   $_0a311c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x0000a0(%esp),%eax
		mov    %edi,%ecx
		push   %eax
		mov    %ebx,%edx
		mov    $_0bf2fc_data,%eax
		call   _04dd40_func
		push   $_0a311c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x0000a0(%esp),%eax
		mov    $0x000004,%edx
		push   %eax
		mov    %edi,%ecx
		mov    $_0bf300_data,%eax
		call   _04dd40_func
		push   $_0a311c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x0000a0(%esp),%eax
		mov    $0x000004,%edx
		push   %eax
		mov    %edi,%ecx
		mov    $_0bf304_data,%eax
		call   _04dd40_func
		xor    %dl,%dl
		mov    %dl,_0bf2fd_data
		mov    %dl,_0bf2fe_data
		xor    %edx,%edx
		mov    _0bf2fc_data,%bl
		mov    %edx,_0bf30c_data
		test   %bl,%bl
		je     _076fa2_jump
		mov    $0x000018,%eax
		mov    %bl,%dl
		call   _08529c_func
		mov    _0bf2fc_data,%cl
		xor    %bh,%bh
		mov    %eax,_0bf314_data
		mov    %bh,_0def4a_data
		test   %cl,%cl
		jbe    _076fa2_jump

	_076ed2_jump:
		push   $_0a311c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		push   %eax
		lea    0x0000a0(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    _0def4a_data,%al
		imul   $0x000018,%eax,%eax
		mov    $0x000001,%ebx
		mov    _0bf314_data,%edx
		mov    %esi,%ecx
		add    %edx,%eax
		mov    $0x000018,%edx
		call   _04dd40_func
		xor    %eax,%eax
		mov    _0def4a_data,%al
		imul   $0x000018,%eax,%eax
		mov    _0bf314_data,%edx
		mov    0x000010(%edx,%eax,1),%edx
		mov    $0x000001,%eax
		call   _08529c_func
		xor    %edx,%edx
		mov    _0def4a_data,%dl
		imul   $0x000018,%edx,%edx
		mov    _0bf314_data,%ebx
		mov    %eax,0x000014(%edx,%ebx,1)
		lea    (%ebx,%edx,1),%eax
		cmpl   $0x000000,0x000014(%eax)
		jne    _076f58_jump
		xor    %dl,%dl
		mov    %dl,0x000088(%esp)
		jmp    _076fa2_jump

	_076f58_jump:
		push   $_0a311c_data
		lea    0x000004(%esp),%edx
		push   %edx
		xor    %edx,%edx
		mov    0x000098(%esp),%dl
		mov    %esi,%ecx
		push   %edx
		lea    0x0000a0(%esp),%edx
		mov    0x000010(%eax),%ebx
		push   %edx
		mov    0x000014(%eax),%eax
		mov    $0x000001,%edx
		call   _04dd40_func
		mov    _0def4a_data,%ch
		inc    %ch
		mov    _0bf2fc_data,%ah
		mov    %ch,_0def4a_data
		cmp    %ah,%ch
		jb     _076ed2_jump

	_076fa2_jump:
		cmpb   $0x000000,0x000088(%esp)
		je     _077158_jump
		push   $_0a311c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x0000a0(%esp),%eax
		mov    $0x000004,%edx
		push   %eax
		mov    %esi,%ecx
		mov    $_0deba4_data,%eax
		call   _04dd40_func
		mov    $0x000010,%eax
		mov    _0deba4_data,%edx
		call   _08529c_func
		mov    %eax,_0bf2f8_data
		test   %eax,%eax
		je     _07714f_jump
		xor    %ecx,%ecx
		mov    _0deba4_data,%edi
		mov    %ecx,_0deb98_data
		test   %edi,%edi
		jbe    _077158_jump

	_077015_jump:
		push   $_0a311c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		push   %eax
		lea    0x0000a0(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    _0deb98_data,%eax
		mov    _0bf2f8_data,%edx
		shl    $0x000004,%eax
		mov    %esi,%ecx
		add    %edx,%eax
		mov    $0x000010,%edx
		call   _04dd40_func
		push   $_0a311c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000098(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x0000a0(%esp),%eax
		mov    %esi,%ecx
		push   %eax
		mov    %ebx,%edx
		lea    0x00009c(%esp),%eax
		call   _04dd40_func
		mov    0x00008c(%esp),%bh
		test   %bh,%bh
		je     _07711d_jump
		xor    %edx,%edx
		mov    %bh,%dl
		mov    $0x000001,%eax
		inc    %edx
		call   _08529c_func
		mov    %eax,%edx
		mov    _0deb98_data,%eax
		mov    _0bf2f8_data,%ebx
		shl    $0x000004,%eax
		add    %ebx,%eax
		mov    %edx,%ebx
		mov    %edx,(%eax)
		test   %ebx,%ebx
		jne    _0770c9_jump
		xor    %cl,%cl
		mov    %cl,0x000088(%esp)
		jmp    _077158_jump

	_0770c9_jump:
		push   $_0a311c_data
		lea    0x000004(%esp),%edx
		push   %edx
		xor    %edx,%edx
		mov    %esi,%ecx
		mov    0x000098(%esp),%dl
		mov    (%eax),%eax
		push   %edx
		lea    0x0000a0(%esp),%edx
		xor    %ebx,%ebx
		push   %edx
		mov    0x00009c(%esp),%bl
		mov    $0x000001,%edx
		call   _04dd40_func
		mov    _0deb98_data,%edx
		mov    _0bf2f8_data,%eax
		shl    $0x000004,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00008c(%esp),%dl
		movb   $0x000000,(%edx,%eax,1)
		jmp    _077132_jump

	_07711d_jump:
		mov    _0deb98_data,%eax
		mov    _0bf2f8_data,%edx
		shl    $0x000004,%eax
		movl   $0x000000,(%edx,%eax,1)

	_077132_jump:
		mov    _0deb98_data,%ebp
		inc    %ebp
		mov    _0deba4_data,%edx
		mov    %ebp,_0deb98_data
		cmp    %edx,%ebp
		jb     _077015_jump
		jmp    _077158_jump

	_07714f_jump:
		xor    %bl,%bl
		mov    %bl,0x000088(%esp)

	_077158_jump:
		cmpb   $0x000000,0x000088(%esp)
		jne    _07716c_jump
		mov    $_0a3124_data,%eax
		call   _020150_func

	_07716c_jump:
		mov    %esi,%eax
		mov    %esp,%ebx
		call   _08a18e_func
		mov    0x000084(%esp),%ecx
		mov    %eax,%edx
		mov    0x000080(%esp),%eax
		sub    %ecx,%edx
		mov    $_0a311c_data,%ecx
		call   _04df9c_func
		mov    $_0a311c_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x000094(%esp),%al
		call   _04df68_func
		mov    %esi,%eax
		call   _086112_func
		mov    _0c21d2_data,%esi
		mov    $0x000001,%dl
		test   %esi,%esi
		jne    _0771c3_jump
		mov    $_0a3144_data,%eax
		call   _020150_func

	_0771c3_jump:
		mov    _0def4a_data,%al
		cmp    _0bf2fc_data,%al
		je     _0771d5_jump
		mov    %al,_0bf2fc_data

	_0771d5_jump:
		mov    %dl,%al
		add    $0x000098,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077a28_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000138,%esp
		call   _076a78_func
		mov    $_0a3560_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		xor    %ebx,%ebx
		test   %eax,%eax
		jne    _077a56_jump
		mov    $0x000001,%ebx
		jmp    _077ae9_jump

	_077a56_jump:
		mov    $_0a3564_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		je     _077ae9_jump
		mov    _0deb9c_data,%eax
		cmp    _0c21d2_data,%eax
		jl     _077a84_jump
		mov    $_0a3568_data,%eax
		call   _020150_func

	_077a84_jump:
		mov    $_0decde_data,%esi
		mov    %esp,%edi
		mov    $_0a3590_data,%edx
		push   %edi

	_077a91_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _077aa9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _077a91_jump

	_077aa9_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    _0deb9c_data,%edx
		lea    0x000000(,%edx,8),%eax
		mov    $_0c21d6_data,%edi
		add    %edx,%eax
		mov    %esp,%esi
		add    %eax,%edi
		push   %edi

	_077aca_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _077ae2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _077aca_jump

	_077ae2_jump:
		pop    %edi
		incl   _0deb9c_data

	_077ae9_jump:
		mov    %ebx,%eax
		add    $0x000138,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_077af8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000138,%esp
		call   _076a78_func
		mov    $_0a3560_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		xor    %ebp,%ebp
		test   %eax,%eax
		jne    _077b3b_jump
		mov    _0ab8c0_data,%eax
		push   %eax
		push   $_0a35a8_data
		mov    $0x000001,%ebp
		call   _085441_func
		add    $0x000008,%esp
		jmp    _077e56_jump

	_077b3b_jump:
		mov    $_0a3564_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _077b67_jump
		movl   $0x000010,_0ab8c0_data
		mov    %ebp,%eax
		add    $0x000138,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077b67_jump:
		mov    $_0a3564_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		je     _077e56_jump
		mov    _0deb98_data,%eax
		cmp    _0deba4_data,%eax
		jb     _077b95_jump
		mov    $_0a35d0_data,%eax
		call   _020150_func

	_077b95_jump:
		mov    $_0decde_data,%ebx
		mov    %esp,%edi
		mov    %ebx,%esi
		mov    $_0a35f0_data,%edx
		push   %edi

	_077ba4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _077bbc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _077ba4_jump

	_077bbc_jump:
		pop    %edi
		mov    %esp,%eax
		call   _0769c0_func
		cmpb   $0x000000,(%esp)
		je     _077c54_jump
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x000001,%eax
		lea    0x000001(%ecx),%edx
		call   _08529c_func
		mov    %eax,%edx
		mov    _0deb98_data,%eax
		mov    _0bf2f8_data,%ecx
		shl    $0x000004,%eax
		mov    %edx,%esi
		mov    %edx,(%ecx,%eax,1)
		test   %esi,%esi
		jne    _077c0a_jump
		mov    $_0a3604_data,%eax
		call   _020150_func

	_077c0a_jump:
		mov    _0deb98_data,%edx
		mov    _0bf2f8_data,%eax
		shl    $0x000004,%edx
		mov    %esp,%esi
		mov    (%edx,%eax,1),%edi
		push   %edi

	_077c1e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _077c36_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _077c1e_jump

	_077c36_jump:
		pop    %edi
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0ab8c0_data,%edi
		inc    %ecx
		add    %ecx,%edi
		mov    %edi,_0ab8c0_data
		jmp    _077c69_jump

	_077c54_jump:
		mov    _0deb98_data,%eax
		mov    _0bf2f8_data,%edx
		shl    $0x000004,%eax
		movl   $0x000000,(%edx,%eax,1)

	_077c69_jump:
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		add    $0x000003,%ecx
		add    %ecx,%ebx
		mov    %esp,%edi
		mov    %ebx,%esi
		mov    $_0a35f0_data,%edx
		push   %edi

	_077c84_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _077c9c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _077c84_jump

	_077c9c_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0deb98_data,%edx
		mov    _0bf2f8_data,%ecx
		shl    $0x000004,%edx
		mov    %esp,%edi
		mov    %ax,0x000004(%ecx,%edx,1)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebx
		mov    %esp,%edi
		mov    %ebx,%esi
		mov    $_0a35f0_data,%edx
		push   %edi

	_077cd8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _077cf0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _077cd8_jump

	_077cf0_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    %eax,%edi
		mov    _0deb98_data,%eax
		mov    _0bf2f8_data,%edx
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    %edi,%edx
		mov    %di,0x000008(%eax)
		test   %dx,%dx
		je     _077d2b_jump
		cmpl   $0x000000,(%eax)
		je     _077d2b_jump
		mov    $_0a3624_data,%eax
		call   _020150_func

	_077d2b_jump:
		mov    _0deb98_data,%edx
		mov    _0bf2f8_data,%eax
		shl    $0x000004,%edx
		add    %edx,%eax
		cmpl   $0x000000,(%eax)
		jne    _077d51_jump
		cmpw   $0x000000,0x000008(%eax)
		jne    _077d51_jump
		mov    $_0a3650_data,%eax
		call   _020150_func

	_077d51_jump:
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebx
		mov    %esp,%edi
		mov    %ebx,%esi
		mov    $_0a35f0_data,%edx
		push   %edi

	_077d6a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _077d82_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _077d6a_jump

	_077d82_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0deb98_data,%edx
		mov    _0bf2f8_data,%ecx
		shl    $0x000004,%edx
		mov    %esp,%edi
		mov    %al,0x00000a(%ecx,%edx,1)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebx
		mov    %esp,%edi
		mov    %ebx,%esi
		mov    $_0a35f0_data,%edx
		push   %edi

	_077dbd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _077dd5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _077dbd_jump

	_077dd5_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0deb98_data,%edx
		mov    _0bf2f8_data,%ecx
		shl    $0x000004,%edx
		mov    %esp,%edi
		mov    %al,0x00000b(%ecx,%edx,1)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    %esp,%edi
		lea    (%ebx,%ecx,1),%esi
		mov    $_0a35f0_data,%edx
		push   %edi

	_077e0f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _077e27_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _077e0f_jump

	_077e27_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0deb98_data,%edx
		mov    _0deb98_data,%esi
		mov    _0bf2f8_data,%ebx
		inc    %esi
		shl    $0x000004,%edx
		mov    %esi,_0deb98_data
		mov    %al,0x00000c(%edx,%ebx,1)

	_077e56_jump:
		mov    %ebp,%eax
		add    $0x000138,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077e68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000098,%esp
		mov    %eax,%ecx
		mov    $_0bf3ac_data,%edx
		xor    %ebx,%ebx
		add    $0x000077,%edx
		xor    %edi,%edi

	_077e82_jump:
		imul   $0x00007b,%ebx,%eax
		mov    _0bf423_data(%eax),%esi
		cmp    %esi,%edi
		je     _077ea7_jump
		mov    0x000014(%esi),%ebp
		mov    %esi,%eax
		cmp    %ebp,%edi
		je     _077ea0_jump
		lea    0x000014(%esi),%eax
		call   _0852ac_func

	_077ea0_jump:
		mov    %edx,%eax
		call   _0852ac_func

	_077ea7_jump:
		inc    %ebx
		add    $0x00007b,%edx
		cmp    $0x000020,%ebx
		jl     _077e82_jump
		movb   $0x000001,0x000090(%esp)
		mov    $_0a3684_data,%eax
		mov    %esp,%edi
		call   _065510_func
		mov    %eax,%esi
		mov    $_0a3118_data,%edx
		push   %edi

	_077ecc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _077ee4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _077ecc_jump

	_077ee4_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%esi
		mov    %eax,%edi
		lea    0x000094(%esp),%eax
		push   %eax
		lea    0x000090(%esp),%eax
		push   %eax
		movswl %cx,%eax
		mov    $_0a3690_data,%ecx
		mov    $_0a3694_data,%edx
		mov    %ecx,%ebx
		call   _0655dc_func
		lea    0x000088(%esp),%ecx
		lea    0x00008c(%esp),%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _04dc38_func
		mov    0x000084(%esp),%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _085e56_func
		push   $_0a3694_data
		lea    0x000004(%esp),%eax
		xor    %ebp,%ebp
		push   %eax
		xor    %eax,%eax
		mov    %esi,%ecx
		mov    0x00009c(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x000098(%esp),%eax
		mov    $0x001acc,%edx
		push   %eax
		mov    $_0bf388_data,%eax
		xor    %esi,%esi
		call   _04dd40_func
		jmp    _078074_jump

	_077f76_jump:
		push   $_0a3694_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00009c(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x000098(%esp),%eax
		mov    $0x000004,%edx
		push   %eax
		mov    %edi,%ecx
		lea    0x000098(%esp),%eax
		call   _04dd40_func
		cmpl   $0x000000,0x000088(%esp)
		jle    _078070_jump
		mov    $0x000001,%edx
		mov    $0x000018,%eax
		call   _08529c_func
		mov    %eax,_0bf423_data(%esi)
		test   %eax,%eax
		je     _078037_jump
		push   $_0a3694_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00009c(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x000098(%esp),%eax
		mov    $0x000018,%edx
		push   %eax
		mov    %edi,%ecx
		mov    _0bf423_data(%esi),%eax
		call   _04dd40_func
		mov    _0bf423_data(%esi),%edx
		mov    $0x000001,%eax
		mov    0x000010(%edx),%edx
		call   _08529c_func
		mov    _0bf423_data(%esi),%edx
		mov    %eax,0x000014(%edx)
		mov    _0bf423_data(%esi),%eax
		cmpl   $0x000000,0x000014(%eax)
		jne    _078042_jump
		xor    %dh,%dh
		mov    %dh,0x000090(%esp)
		jmp    _078083_jump

	_078037_jump:
		xor    %dl,%dl
		mov    %dl,0x000090(%esp)
		jmp    _078083_jump

	_078042_jump:
		push   $_0a3694_data
		lea    0x000004(%esp),%edx
		push   %edx
		xor    %edx,%edx
		mov    0x00009c(%esp),%dl
		mov    %edi,%ecx
		push   %edx
		lea    0x000098(%esp),%edx
		mov    0x000010(%eax),%ebx
		push   %edx
		mov    0x000014(%eax),%eax
		mov    $0x000001,%edx
		call   _04dd40_func

	_078070_jump:
		add    $0x00007b,%esi
		inc    %ebp

	_078074_jump:
		xor    %eax,%eax
		mov    _0bf388_data,%al
		cmp    %eax,%ebp
		jl     _077f76_jump

	_078083_jump:
		cmpb   $0x000000,0x000090(%esp)
		jne    _078097_jump
		mov    $_0a369c_data,%eax
		call   _020150_func

	_078097_jump:
		mov    %edi,%eax
		mov    %esp,%ebx
		call   _08a18e_func
		mov    0x000084(%esp),%ecx
		mov    %eax,%edx
		mov    0x000080(%esp),%eax
		sub    %ecx,%edx
		mov    $_0a3694_data,%ecx
		call   _04df9c_func
		mov    $_0a3694_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x00008c(%esp),%al
		call   _04df68_func
		mov    %edi,%eax
		call   _086112_func
		call   _041238_func
		mov    $0x000001,%al
		add    $0x000098,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078611_jump:
		mov    %ebp,%eax
		add    $0x000138,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078620_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000140,%esp
		call   _076a78_func
		xor    %edx,%edx
		mov    $_0dee14_data,%eax
		mov    %edx,0x000138(%esp)
		mov    $_0a3560_data,%edx
		call   _08b3bc_func
		test   %eax,%eax
		jne    _07865d_jump
		movl   $0x000001,0x000138(%esp)
		jmp    _078c63_jump

	_07865d_jump:
		mov    $_0a3564_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		je     _078c63_jump
		mov    $_0decde_data,%esi
		mov    %esp,%edi
		mov    $_0a3914_data,%edx
		push   %edi

	_078681_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078699_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _078681_jump

	_078699_jump:
		pop    %edi
		mov    %esp,%eax
		mov    $_0decde_data,%ebp
		call   _076968_func
		mov    %esp,%eax
		mov    %esp,%edi
		call   _0874cf_func
		mov    %eax,%ebx
		mov    %eax,0x00013c(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_0786cf_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0786e7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0786cf_jump

	_0786e7_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    %eax,%edx
		mov    %ebx,%eax
		shl    $0x000005,%ebx
		sub    %eax,%ebx
		shl    $0x000002,%ebx
		sub    %eax,%ebx
		mov    %esp,%edi
		mov    %dl,_0bf3b7_data(%ebx)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_078723_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07873b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _078723_jump

	_07873b_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    $_0a3928_data,%edx
		mov    %esp,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _07875d_jump
		xor    %ah,%ah
		mov    %ah,_0bf3be_data(%ebx)
		jmp    _078773_jump

	_07875d_jump:
		mov    $_0bf3ac_data,%eax
		mov    %esp,%edx
		add    %ebx,%eax
		mov    $0x000009,%ebx
		add    $0x000012,%eax
		call   _085378_func

	_078773_jump:
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_07878c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0787a4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07878c_jump

	_0787a4_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    %eax,%edx
		mov    0x00013c(%esp),%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		sub    %eax,%ebx
		shl    $0x000002,%ebx
		sub    %eax,%ebx
		mov    %esp,%edi
		mov    %dx,_0bf3ac_data(%ebx)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_0787e8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078800_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0787e8_jump

	_078800_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		mov    %esp,%edi
		call   _0874cf_func
		mov    %ax,_0bf3ae_data(%ebx)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_07882f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078847_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07882f_jump

	_078847_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		mov    %esp,%edi
		call   _0874cf_func
		mov    %al,_0bf3b0_data(%ebx)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_078875_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07888d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _078875_jump

	_07888d_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		mov    %esp,%edi
		call   _0874cf_func
		mov    %al,_0bf3b1_data(%ebx)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_0788bb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0788d3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0788bb_jump

	_0788d3_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		mov    %esp,%edi
		call   _0874cf_func
		mov    %al,_0bf3b2_data(%ebx)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		push   %edi

	_0788fc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078914_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0788fc_jump

	_078914_jump:
		pop    %edi
		mov    $_0a3914_data,%edx
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		mov    %esp,%edi
		call   _0874cf_func
		mov    %al,_0bf3b3_data(%ebx)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_078947_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07895f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _078947_jump

	_07895f_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0bf3b4_data(%ebx),%dl
		and    $0x0000fe,%dl
		and    $0x000001,%al
		mov    %dl,_0bf3b4_data(%ebx)
		mov    %dl,%dh
		or     %al,%dh
		mov    %esp,%edi
		mov    %dh,_0bf3b4_data(%ebx)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_0789a2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0789ba_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0789a2_jump

	_0789ba_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0bf3b4_data(%ebx),%cl
		and    $0x000001,%al
		and    $0x0000fd,%cl
		add    %al,%al
		mov    %cl,_0bf3b4_data(%ebx)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,_0bf3b4_data(%ebx)
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_0789ff_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078a17_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0789ff_jump

	_078a17_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		and    $0x000001,%al
		mov    _0bf3b4_data(%ebx),%ah
		and    $0x0000fb,%ah
		mov    %ah,_0bf3b4_data(%ebx)
		shl    $0x000002,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %esp,%edi
		mov    %dl,_0bf3b4_data(%ebx)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_078a5d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078a75_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _078a5d_jump

	_078a75_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		mov    %esp,%edi
		call   _0874cf_func
		mov    %al,_0bf3b8_data(%ebx)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_078aa3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078abb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _078aa3_jump

	_078abb_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    %ax,_0bf3ba_data(%ebx)
		xor    %eax,%eax
		mov    _0bf2f4_data,%edx
		mov    _0bf3ba_data(%ebx),%ax
		cmpl   $0x000000,(%edx,%eax,4)
		jne    _078af0_jump
		mov    $_0a3930_data,%eax
		call   _020150_func

	_078af0_jump:
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_078b09_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078b21_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _078b09_jump

	_078b21_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    %eax,%ecx
		mov    0x00013c(%esp),%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		sub    %eax,%ebx
		shl    $0x000002,%ebx
		sub    %eax,%ebx
		mov    %esp,%edi
		mov    %cl,_0bf3b9_data(%ebx)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_078b64_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078b7c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _078b64_jump

	_078b7c_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		xor    %edx,%edx
		call   _0874cf_func
		mov    %ax,%dx
		mov    %ax,_0bf3bc_data(%ebx)
		mov    _0bf2f4_data,%eax
		cmpl   $0x000000,(%eax,%edx,4)
		jne    _078bac_jump
		mov    $_0a3954_data,%eax
		call   _020150_func

	_078bac_jump:
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_078bc5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078bdd_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _078bc5_jump

	_078bdd_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    %eax,%ecx
		mov    0x00013c(%esp),%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		sub    %eax,%ebx
		shl    $0x000002,%ebx
		sub    %eax,%ebx
		mov    %esp,%edi
		mov    %cl,_0bf3b6_data(%ebx)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    %esp,%edi
		lea    (%ecx,%ebp,1),%esi
		mov    $_0a3914_data,%edx
		push   %edi

	_078c1f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078c37_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _078c1f_jump

	_078c37_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		lea    _0bf3b4_data(%ebx),%ebx
		test   %eax,%eax
		setne  %al
		mov    (%ebx),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%cl
		mov    %dh,(%ebx)
		or     %al,%cl
		mov    %cl,(%ebx)

	_078c63_jump:
		mov    0x000138(%esp),%eax
		add    $0x000140,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078c78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00013c,%esp
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    _0deb90_data,%ecx
		mov    %edx,0x000138(%esp)
		cmp    $0x000020,%ecx
		jl     _078ca4_jump
		mov    $_0a3978_data,%eax
		call   _020150_func

	_078ca4_jump:
		call   _076a78_func
		mov    $_0a3560_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _078ccc_jump
		movl   $0x000001,0x000138(%esp)
		jmp    _079079_jump

	_078ccc_jump:
		mov    $_0a3564_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		je     _079079_jump
		mov    $_0a3998_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _078d2e_jump
		mov    $_0deba8_data,%eax
		call   _0874cf_func
		mov    _0deb90_data,%ebx
		mov    %eax,%ecx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		mov    %cl,_0bf3c7_data(%eax)
		mov    0x000138(%esp),%eax
		add    $0x00013c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078d2e_jump:
		mov    $_0a39a0_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _078d86_jump
		mov    $_0deba8_data,%eax
		call   _0874cf_func
		xor    %edx,%edx
		xor    %ebp,%ebp
		mov    _0c221e_data,%dl
		mov    %eax,_0deb84_data
		mov    %ebp,_0deb8c_data
		cmp    %edx,%eax
		jl     _079079_jump
		mov    $_0a39ac_data,%eax
		call   _020150_func
		mov    0x000138(%esp),%eax
		add    $0x00013c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078d86_jump:
		mov    $_0a39f0_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _078f73_jump
		mov    $0x000001,%edx
		mov    $0x000018,%eax
		call   _08529c_func
		mov    _0deb90_data,%ecx
		mov    %eax,%edx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		sub    %ecx,%eax
		mov    %edx,%edi
		mov    %edx,_0bf423_data(%eax)
		test   %edi,%edi
		jne    _078dd6_jump
		mov    $_0a39fc_data,%eax
		call   _020150_func

	_078dd6_jump:
		mov    $_0deba8_data,%esi
		mov    _0ab8c4_data,%ebp
		mov    %esp,%edi
		add    $0x000018,%ebp
		mov    $_0a3a30_data,%edx
		mov    %ebp,_0ab8c4_data
		push   %edi

	_078df2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078e0a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _078df2_jump

	_078e0a_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0deb90_data,%ecx
		mov    %eax,%edx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		sub    %ecx,%eax
		mov    _0bf423_data(%eax),%eax
		mov    %esp,%edi
		mov    $_0deba8_data,%esi
		mov    %dl,0x00000c(%eax)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    %esp,%edi
		add    %ecx,%esi
		mov    $_0a3a4c_data,%edx
		push   %edi

	_078e52_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _078e6a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _078e52_jump

	_078e6a_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0deb90_data,%ecx
		mov    %eax,%edx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		sub    %ecx,%eax
		mov    _0bf423_data(%eax),%eax
		mov    %dl,0x00000d(%eax)
		xor    %eax,%eax
		mov    $_07928c_func,%edx
		mov    %eax,_0deba0_data
		mov    %ebx,%eax
		call   _07683c_func
		mov    _0deba0_data,%edx
		test   %edx,%edx
		je     _079079_jump
		mov    $0x000001,%eax
		call   _08529c_func
		mov    _0deb90_data,%ebx
		mov    %eax,%ecx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		mov    _0bf423_data(%eax),%edx
		mov    %ecx,0x000014(%edx)
		mov    _0bf423_data(%eax),%eax
		mov    0x000014(%eax),%ebx
		test   %ebx,%ebx
		je     _078f4a_jump
		mov    $_0de794_data,%esi
		mov    _0deba0_data,%ecx
		mov    %ebx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0deb90_data,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		mov    _0bf423_data(%eax),%ebx
		mov    _0deba0_data,%edx
		mov    %edx,0x000010(%ebx)
		mov    _0bf423_data(%eax),%eax
		mov    _0ab8c4_data,%esi
		mov    0x000010(%eax),%eax
		xor    %ecx,%ecx
		add    %eax,%esi
		mov    %ecx,_0deba0_data
		mov    %esi,_0ab8c4_data
		jmp    _078f54_jump

	_078f4a_jump:
		mov    $_0a3a68_data,%eax
		call   _020150_func

	_078f54_jump:
		mov    _0deba0_data,%eax
		add    %eax,_0ab8c4_data
		mov    0x000138(%esp),%eax
		add    $0x00013c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078f73_jump:
		mov    _0deb8c_data,%esi
		mov    $_0decde_data,%ebx
		cmp    $0x000005,%esi
		jl     _078f8d_jump
		mov    $_0a3a90_data,%eax
		call   _020150_func

	_078f8d_jump:
		xor    %ebp,%ebp
		mov    $0x000020,%dh
		mov    %dh,%dl
		jmp    _07901b_jump

	_078f98_jump:
		cmp    $0x000001,%ebp
		jl     _078fa7_jump
		mov    $_0a3ac4_data,%eax
		call   _020150_func

	_078fa7_jump:
		mov    %ebx,%eax
		call   _0874cf_func
		imul   $0x00007b,_0deb90_data,%esi
		imul   $0x00000c,_0deb84_data,%ecx
		add    %ecx,%esi
		mov    _0deb8c_data,%ecx
		add    %ecx,%ecx
		add    %esi,%ecx
		mov    %ebx,%esi
		mov    %al,_0bf3c8_data(%ecx,%ebp,1)

	_078fd1_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _078fe9_jump
		cmp    $0x000000,%al
		je     _078fe7_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _078fe9_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _078fd1_jump

	_078fe7_jump:
		sub    %esi,%esi

	_078fe9_jump:
		test   %esi,%esi
		je     _07900c_jump
		mov    %ebx,%esi

	_078fef_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _079007_jump
		cmp    $0x000000,%al
		je     _079005_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _079007_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _078fef_jump

	_079005_jump:
		sub    %esi,%esi

	_079007_jump:
		lea    0x000001(%esi),%ebx
		jmp    _07901a_jump

	_07900c_jump:
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		add    %ecx,%ebx

	_07901a_jump:
		inc    %ebp

	_07901b_jump:
		mov    %ebx,%eax
		call   _0874cf_func
		test   %eax,%eax
		jne    _078f98_jump
		mov    _0deb90_data,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		mov    _0deb84_data,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    _0deb8c_data,%edx
		add    %ebx,%eax
		add    %edx,%edx
		add    %eax,%edx
		mov    $0x0000ff,%bl
		mov    %bl,_0bf3c8_data(%edx,%ebp,1)
		mov    _0deb8c_data,%edx
		inc    %edx
		mov    %bl,_0bf3c8_data(%eax,%edx,2)
		mov    %edx,_0deb8c_data

	_079079_jump:
		mov    0x000138(%esp),%eax
		add    $0x00013c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079090_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00013c,%esp
		xor    %edx,%edx
		mov    _0deb94_data,%ebx
		mov    %edx,0x000138(%esp)
		cmp    $0x000020,%ebx
		jl     _0790ba_jump
		mov    $_0a3af4_data,%eax
		call   _020150_func

	_0790ba_jump:
		call   _076a78_func
		mov    $_0a3560_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _0790e2_jump
		movl   $0x000001,0x000138(%esp)
		jmp    _079277_jump

	_0790e2_jump:
		mov    $_0a3564_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		je     _079277_jump
		mov    $_0a39a0_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _079149_jump
		mov    $_0deba8_data,%eax
		xor    %edx,%edx
		call   _0874cf_func
		mov    _0c221e_data,%dl
		mov    %eax,_0deb88_data
		cmp    %edx,%eax
		jl     _079277_jump
		mov    $_0a3b14_data,%eax
		call   _020150_func
		mov    0x000138(%esp),%eax
		add    $0x00013c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079149_jump:
		mov    $_0decde_data,%ebp
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3b58_data,%edx
		push   %edi

	_079158_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _079170_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _079158_jump

	_079170_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    $_0a3b70_data,%edx
		mov    %esp,%eax
		call   _08b3bc_func
		mov    _0deb88_data,%edx
		lea    0x000000(,%edx,8),%edi
		add    %edx,%edi
		mov    _0deb94_data,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		add    %eax,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		add    %edi,%edi
		sub    %edx,%eax
		test   %ebx,%ebx
		jne    _0791be_jump
		xor    %dl,%dl
		mov    %dl,_0c0314_data(%edi,%eax,1)
		jmp    _0791d1_jump

	_0791be_jump:
		mov    $0x000009,%ebx
		add    $_0c0314_data,%eax
		mov    %esp,%edx
		add    %edi,%eax
		call   _085378_func

	_0791d1_jump:
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    %esp,%edi
		lea    (%ecx,%ebp,1),%esi
		mov    $_0a3b58_data,%edx
		push   %edi

	_0791e9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _079201_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0791e9_jump

	_079201_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    $_0a3b80_data,%edx
		mov    %esp,%eax
		call   _08b3bc_func
		mov    _0deb88_data,%edx
		lea    0x000000(,%edx,8),%edi
		add    %edx,%edi
		mov    _0deb94_data,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		add    %eax,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		add    %edi,%edi
		sub    %edx,%eax
		test   %ebx,%ebx
		jne    _079261_jump
		xor    %dh,%dh
		mov    %dh,_0c031d_data(%edi,%eax,1)
		mov    0x000138(%esp),%eax
		add    $0x00013c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079261_jump:
		add    $_0c0314_data,%eax
		mov    $0x000009,%ebx
		add    %edi,%eax
		mov    %esp,%edx
		add    $0x000009,%eax
		call   _085378_func

	_079277_jump:
		mov    0x000138(%esp),%eax
		add    $0x00013c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07928c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000138,%esp
		call   _076a78_func
		mov    $_0a3560_data,%edx
		mov    $_0dee14_data,%eax
		mov    $_0decde_data,%ebx
		call   _08b3bc_func
		xor    %ebp,%ebp
		test   %eax,%eax
		jne    _0792cb_jump
		mov    $0x000001,%ebp
		mov    %ebp,%eax
		add    $0x000138,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0792cb_jump:
		mov    $_0a3b90_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _07930f_jump
		mov    _0deb90_data,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		mov    $0x000001,%edx
		mov    _0bf423_data(%eax),%eax
		call   _079758_func
		mov    %ebp,%eax
		add    $0x000138,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07930f_jump:
		mov    $_0a3b9c_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _079350_jump
		mov    _0deb90_data,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		xor    %edx,%edx
		mov    _0bf423_data(%eax),%eax
		call   _079758_func
		mov    %ebp,%eax
		add    $0x000138,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079350_jump:
		mov    $_0a3564_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		je     _078611_jump

	_079367_jump:
		cmpb   $0x000000,(%ebx)
		je     _078611_jump
		mov    %esp,%edi
		mov    %ebx,%esi
		mov    $_0a3bac_data,%edx
		push   %edi

	_07937a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _079392_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07937a_jump

	_079392_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0deba0_data,%ecx
		inc    %ecx
		mov    %al,_0de793_data(%ecx)
		mov    %ecx,_0deba0_data
		cmp    $0x0003e8,%ecx
		jb     _0793c6_jump
		mov    $_0a3bcc_data,%eax
		call   _020150_func

	_0793c6_jump:
		mov    $0x000020,%dl
		mov    %ebx,%esi

	_0793ca_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _0793e2_jump
		cmp    $0x000000,%al
		je     _0793e0_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _0793e2_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _0793ca_jump

	_0793e0_jump:
		sub    %esi,%esi

	_0793e2_jump:
		test   %esi,%esi
		je     _079408_jump
		mov    %ebx,%esi

	_0793e8_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _079400_jump
		cmp    $0x000000,%al
		je     _0793fe_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _079400_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _0793e8_jump

	_0793fe_jump:
		sub    %esi,%esi

	_079400_jump:
		lea    0x000001(%esi),%ebx
		jmp    _079367_jump

	_079408_jump:
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		add    %ecx,%ebx
		jmp    _079367_jump



_079460_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _076a78_func
		mov    $_0a3160_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		xor    %ecx,%ecx
		test   %eax,%eax
		jne    _079487_jump
		mov    $0x000001,%ecx
		jmp    _07953b_jump

	_079487_jump:
		mov    $_0a3bfc_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _0794b4_jump
		mov    $0x00000d,%ebx
		mov    $_0deba8_data,%edx
		mov    $_0c2d96_data,%eax
		call   _085378_func
		mov    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0794b4_jump:
		mov    $_0a3c08_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _0794e1_jump
		mov    $0x000004,%ebx
		mov    $_0deba8_data,%edx
		mov    $_0c2da3_data,%eax
		call   _085378_func
		mov    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0794e1_jump:
		mov    $_0a3c14_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _07950e_jump
		mov    $0x000009,%ebx
		mov    $_0deba8_data,%edx
		mov    $_0c2da7_data,%eax
		call   _085378_func
		mov    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07950e_jump:
		mov    $0x0000c8,%eax
		call   _084f3c_func
		push   $_0dee14_data
		push   $_0a3c24_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_07953b_jump:
		mov    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0795f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _076a78_func
		mov    $_0a3160_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		xor    %esi,%esi
		test   %eax,%eax
		jne    _07961c_jump
		mov    $0x000001,%esi
		jmp    _079750_jump

	_07961c_jump:
		mov    $_0a3cc4_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		je     _07963c_jump
		jmp    _07966f_jump

	_079631_jump:
		inc    %ecx
		add    $0x000009,%ebx
		cmp    $0x00000a,%ecx
		jl     _079643_jump
		jmp    _079653_jump

	_07963c_jump:
		mov    $_0c2e00_data,%ebx
		xor    %ecx,%ecx

	_079643_jump:
		mov    $_0deba8_data,%edx
		mov    %ebx,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _079631_jump

	_079653_jump:
		cmp    $0x00000a,%ecx
		jne    _079662_jump
		mov    $_0a3cd4_data,%eax
		call   _020150_func

	_079662_jump:
		mov    %cl,_0c31b0_data
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07966f_jump:
		mov    $_0a3cfc_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		je     _07968f_jump
		jmp    _0796c2_jump

	_079684_jump:
		inc    %ecx
		add    $0x000009,%ebx
		cmp    $0x00000a,%ecx
		jl     _079696_jump
		jmp    _0796a6_jump

	_07968f_jump:
		mov    $_0c2e00_data,%ebx
		xor    %ecx,%ecx

	_079696_jump:
		mov    $_0deba8_data,%edx
		mov    %ebx,%eax
		call   _0853a0_func
		test   %eax,%eax
		jne    _079684_jump

	_0796a6_jump:
		cmp    $0x00000a,%ecx
		jne    _0796b5_jump
		mov    $_0a3d18_data,%eax
		call   _020150_func

	_0796b5_jump:
		mov    %cl,_0c31b1_data
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0796c2_jump:
		mov    $_0a3b90_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _0796f4_jump
		cmpb   $0x000000,_0bf2fd_data
		jne    _079750_jump
		mov    $0x000001,%edx
		mov    $_0c3347_data,%eax
		call   _079758_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0796f4_jump:
		mov    $_0a3b9c_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _079723_jump
		cmpb   $0x000000,_0bf2fd_data
		jne    _079750_jump
		mov    $_0c3347_data,%eax
		xor    %edx,%edx
		call   _079758_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079723_jump:
		mov    $0x0000c8,%eax
		call   _084f3c_func
		push   $_0dee14_data
		push   $_0a3d40_data
		push   %eax
		mov    %eax,%ebx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		call   _020150_func
		mov    %ebx,%eax
		call   _0850d4_func

	_079750_jump:
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079758_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00013c,%esp
		mov    %eax,%ebx
		mov    _0deba8_data,%ah
		mov    $_0deba8_data,%ebp
		test   %ah,%ah
		je     _079950_jump
		and    $0x000001,%dl
		mov    %dl,0x000138(%esp)

	_079782_jump:
		mov    %esp,%edi
		mov    %ebp,%esi
		mov    $_0a3d6c_data,%edx
		push   %edi

	_07978c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0797a4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07978c_jump

	_0797a4_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    $_0a3d7c_data,%edx
		mov    %esp,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _0797cd_jump
		andb   $0x0000fe,(%ebx)
		mov    0x000138(%esp),%al
		or     %al,(%ebx)
		jmp    _0798f9_jump

	_0797cd_jump:
		mov    $_0a3d84_data,%edx
		mov    %esp,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _0797f9_jump
		mov    0x000001(%ebx),%cl
		and    $0x0000fe,%cl
		mov    0x000138(%esp),%al
		mov    %cl,0x000001(%ebx)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000001(%ebx)
		jmp    _0798f9_jump

	_0797f9_jump:
		mov    $_0a3d88_data,%edx
		mov    %esp,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _079825_jump
		mov    (%ebx),%dl
		mov    0x000138(%esp),%al
		and    $0x00007f,%dl
		shl    $0x000007,%al
		mov    %dl,(%ebx)
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,(%ebx)
		jmp    _0798f9_jump

	_079825_jump:
		mov    $_0a3d90_data,%edx
		mov    %esp,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _079849_jump
		andb   $0x0000fb,(%ebx)
		mov    0x000138(%esp),%al
		shl    $0x000002,%al
		or     %al,(%ebx)
		jmp    _0798f9_jump

	_079849_jump:
		mov    $_0a3d98_data,%edx
		mov    %esp,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _079875_jump
		mov    (%ebx),%cl
		mov    0x000138(%esp),%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,(%ebx)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,(%ebx)
		jmp    _0798f9_jump

	_079875_jump:
		mov    $_0a3da4_data,%edx
		mov    %esp,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _07989d_jump
		mov    (%ebx),%dl
		mov    0x000138(%esp),%al
		and    $0x0000fd,%dl
		add    %al,%al
		mov    %dl,(%ebx)
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,(%ebx)
		jmp    _0798f9_jump

	_07989d_jump:
		mov    $_0a3dac_data,%edx
		mov    %esp,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _0798c6_jump
		mov    (%ebx),%ch
		mov    0x000138(%esp),%al
		and    $0x0000bf,%ch
		shl    $0x000006,%al
		mov    %ch,%ah
		mov    %ch,(%ebx)
		or     %al,%ah
		mov    %ah,(%ebx)
		jmp    _0798f9_jump

	_0798c6_jump:
		mov    $_0a3db4_data,%edx
		mov    %esp,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _0798ef_jump
		mov    0x000002(%ebx),%dh
		and    $0x0000fe,%dh
		mov    0x000138(%esp),%al
		mov    %dh,%cl
		mov    %dh,0x000002(%ebx)
		or     %al,%cl
		mov    %cl,0x000002(%ebx)
		jmp    _0798f9_jump

	_0798ef_jump:
		mov    $_0a3dc0_data,%eax
		call   _020150_func

	_0798f9_jump:
		mov    $0x000020,%dl
		mov    %ebp,%esi

	_0798fd_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _079915_jump
		cmp    $0x000000,%al
		je     _079913_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _079915_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _0798fd_jump

	_079913_jump:
		sub    %esi,%esi

	_079915_jump:
		test   %esi,%esi
		je     _079938_jump
		mov    %ebp,%esi

	_07991b_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _079933_jump
		cmp    $0x000000,%al
		je     _079931_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _079933_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _07991b_jump

	_079931_jump:
		sub    %esi,%esi

	_079933_jump:
		lea    0x000001(%esi),%ebp
		jmp    _079946_jump

	_079938_jump:
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		add    %ecx,%ebp

	_079946_jump:
		cmpb   $0x000000,0x000000(%ebp)
		jne    _079782_jump

	_079950_jump:
		add    $0x00013c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07995c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000a4,%esp
		push   $_0a3dd0_data
		call   _085441_func
		add    $0x000004,%esp
		mov    $_0a310c_data,%eax
		mov    %esp,%edi
		call   _065440_func
		mov    %eax,%esi
		mov    $_0a3118_data,%edx
		push   %edi

	_079989_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0799a1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _079989_jump

	_0799a1_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%edi
		mov    %eax,%esi
		lea    0x0000a0(%esp),%eax
		lea    0x00008c(%esp),%ecx
		push   %eax
		lea    0x0000a0(%esp),%eax
		lea    0x000094(%esp),%ebx
		push   %eax
		mov    $_0a3de8_data,%edx
		mov    %edi,%eax
		call   _04dc38_func
		mov    0x000090(%esp),%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _085e56_func
		push   $_0a3de8_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x0000a8(%esp),%al
		mov    %edi,%ecx
		push   %eax
		lea    0x0000a8(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    $0x000002,%edx
		lea    0x0000a8(%esp),%eax
		call   _04dd40_func
		mov    0x000096(%esp),%eax
		sar    $0x000010,%eax
		xor    %edi,%edi
		call   _072720_func
		mov    $0x000001,%ebp
		jmp    _079ab7_jump

	_079a36_jump:
		push   $_0a3de8_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x0000a8(%esp),%al
		mov    $0x000009,%ebx
		push   %eax
		lea    0x0000a8(%esp),%eax
		mov    %esi,%ecx
		push   %eax
		mov    %ebp,%edx
		lea    0x000090(%esp),%eax
		call   _04dd40_func
		push   $_0a3de8_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x0000a8(%esp),%al
		mov    $0x000002,%edx
		push   %eax
		lea    0x0000a8(%esp),%eax
		mov    %esi,%ecx
		push   %eax
		mov    %ebp,%ebx
		lea    0x0000a4(%esp),%eax
		call   _04dd40_func
		mov    0x000092(%esp),%ebx
		mov    $_0a3690_data,%ecx
		lea    0x000080(%esp),%edx
		movswl %di,%eax
		sar    $0x000010,%ebx
		call   _0727c4_func
		inc    %edi

	_079ab7_jump:
		mov    0x000096(%esp),%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jl     _079a36_jump
		mov    %esi,%eax
		call   _08a18e_func
		mov    0x000090(%esp),%edx
		mov    $_0a3de8_data,%ecx
		sub    %edx,%eax
		mov    %esp,%ebx
		mov    %eax,%edx
		mov    0x00008c(%esp),%eax
		call   _04df9c_func
		mov    $_0a3de8_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x00009c(%esp),%al
		call   _04df68_func
		mov    %esi,%eax
		call   _086112_func
		call   _0728b8_func
		mov    $0x000001,%al
		add    $0x0000a4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079e04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		call   _076a78_func
		mov    $_0a3160_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		xor    %esi,%esi
		test   %eax,%eax
		jne    _079e2e_jump
		mov    $0x000001,%esi
		jmp    _07a0d9_jump

	_079e2e_jump:
		mov    $_0a3e84_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _079e94_jump
		mov    $_0deba8_data,%eax
		call   _0874cf_func
		mov    %eax,%edx
		mov    _0bf318_data,%eax
		mov    %dl,(%eax)
		test   %dl,%dl
		jne    _079e6f_jump
		movb   $0x000001,0x000002(%eax)
		movw   $0x000000,0x000008(%eax)
		mov    %dl,0x000003(%eax)
		mov    %dl,0x00000a(%eax)
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079e6f_jump:
		cmp    $0x000001,%dl
		jne    _079e83_jump
		movb   $0x000000,0x000014(%eax)
		movb   $0x000000,0x000015(%eax)
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079e83_jump:
		mov    $_0a3e94_data,%eax
		call   _020150_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079e94_jump:
		mov    $_0a3eb0_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _079edc_jump
		mov    _0bf318_data,%eax
		cmpb   $0x000000,(%eax)
		jne    _079ecb_jump
		mov    $_0deba8_data,%eax
		call   _0874cf_func
		mov    _0bf318_data,%edx
		mov    %al,0x000014(%edx)
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079ecb_jump:
		mov    $_0a3ebc_data,%eax
		call   _020150_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079edc_jump:
		mov    $_0a3ee4_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _079f24_jump
		mov    _0bf318_data,%eax
		cmpb   $0x000000,(%eax)
		jne    _079f13_jump
		mov    $_0deba8_data,%eax
		call   _0874cf_func
		mov    _0bf318_data,%edx
		mov    %al,0x000015(%edx)
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079f13_jump:
		mov    $_0a3ef0_data,%eax
		call   _020150_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079f24_jump:
		mov    $_0a3f18_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _079f6c_jump
		mov    _0bf318_data,%eax
		cmpb   $0x000000,(%eax)
		jne    _079f5b_jump
		mov    $_0deba8_data,%eax
		call   _0874cf_func
		mov    _0bf318_data,%edx
		mov    %al,0x000016(%edx)
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079f5b_jump:
		mov    $_0a3f2c_data,%eax
		call   _020150_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079f6c_jump:
		mov    $_0a3f54_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _079f99_jump
		mov    $_0deba8_data,%eax
		call   _0874cf_func
		mov    _0bf318_data,%edx
		mov    %al,0x000001(%edx)
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079f99_jump:
		mov    $_0a3f68_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _079fe2_jump
		mov    _0bf318_data,%eax
		cmpb   $0x000000,(%eax)
		jne    _079fd1_jump
		mov    $_0deba8_data,%eax
		call   _0874cf_func
		mov    _0bf318_data,%edx
		mov    %ax,0x000006(%edx)
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079fd1_jump:
		mov    $_0a3f74_data,%eax
		call   _020150_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079fe2_jump:
		mov    $_0a3fa4_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _07a04e_jump
		mov    _0bf318_data,%eax
		cmpb   $0x000001,(%eax)
		jne    _07a03d_jump
		mov    $_0deba8_data,%eax
		call   _0874cf_func
		mov    %eax,%edx
		mov    _0bf318_data,%eax
		mov    %esi,_0deb80_data
		mov    %dl,%bl
		mov    %dl,0x000002(%eax)
		cmp    $0x000001,%bl
		jbe    _07a02a_jump
		mov    $_0a3fb0_data,%eax
		call   _020150_func

	_07a02a_jump:
		mov    $_07a0e0_func,%edx
		mov    %ecx,%eax
		call   _07683c_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a03d_jump:
		mov    $_0a3fe0_data,%eax
		call   _020150_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a04e_jump:
		mov    $_0a4014_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _07a0ac_jump
		mov    _0bf318_data,%eax
		cmpb   $0x000001,(%eax)
		jne    _07a09b_jump
		mov    $0x00000d,%ebx
		mov    $_0deba8_data,%edx
		mov    $_0c3198_data,%eax
		call   _085378_func
		mov    _0bf318_data,%eax
		mov    $_07a29c_func,%edx
		movb   $0x000000,0x000003(%eax)
		mov    %ecx,%eax
		call   _07683c_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a09b_jump:
		mov    $_0a4024_data,%eax
		call   _020150_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a0ac_jump:
		mov    $0x0000c8,%eax
		call   _084f3c_func
		push   $_0dee14_data
		push   $_0a4058_data
		push   %eax
		mov    %eax,%edx
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_07a0d9_jump:
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a0e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000138,%esp
		call   _076a78_func
		mov    $_0a3560_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		xor    %ebp,%ebp
		test   %eax,%eax
		jne    _07a110_jump
		mov    $0x000001,%ebp
		jmp    _07a28d_jump

	_07a110_jump:
		mov    $_0a3564_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		je     _07a28d_jump
		mov    _0bf318_data,%eax
		mov    0x000002(%eax),%al
		mov    _0deb80_data,%edx
		and    $0x0000ff,%eax
		cmp    %edx,%eax
		jg     _07a148_jump
		mov    $_0a4088_data,%eax
		call   _020150_func

	_07a148_jump:
		mov    $_0decde_data,%esi
		mov    %esp,%edi
		mov    $_0a40a8_data,%edx
		push   %edi

	_07a155_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07a16d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07a155_jump

	_07a16d_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0bf318_data,%ebx
		mov    _0deb80_data,%ecx
		mov    %esp,%edi
		mov    %ax,0x000004(%ebx,%ecx,8)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		lea    0x000001(%ecx),%ebx
		add    $_0decde_data,%ebx
		mov    %esp,%edi
		mov    %ebx,%esi
		mov    $_0a40a8_data,%edx
		push   %edi

	_07a1ac_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07a1c4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07a1ac_jump

	_07a1c4_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0bf318_data,%ecx
		mov    _0deb80_data,%edi
		mov    %ax,0x000006(%ecx,%edi,8)
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		add    %ecx,%ebx
		mov    %esp,%edi
		mov    %ebx,%esi
		mov    $_0a40a8_data,%edx
		push   %edi

	_07a1fd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07a215_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07a1fd_jump

	_07a215_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0bf318_data,%ecx
		mov    _0deb80_data,%edi
		mov    %ax,0x000008(%ecx,%edi,8)
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    %esp,%edi
		lea    (%ebx,%ecx,1),%esi
		mov    $_0a40a8_data,%edx
		push   %edi

	_07a24d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07a265_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07a24d_jump

	_07a265_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0bf318_data,%ebx
		mov    _0deb80_data,%ecx
		mov    %al,0x00000a(%ebx,%ecx,8)
		lea    0x000001(%ecx),%ebx
		mov    %ebx,_0deb80_data

	_07a28d_jump:
		mov    %ebp,%eax
		add    $0x000138,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a29c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000138,%esp
		call   _076a78_func
		mov    $_0a3560_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		xor    %ebp,%ebp
		test   %eax,%eax
		jne    _07a2cc_jump
		mov    $0x000001,%ebp
		jmp    _07a3e5_jump

	_07a2cc_jump:
		mov    $_0a3564_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		je     _07a3e5_jump
		mov    _0bf318_data,%eax
		cmpb   $0x000001,0x000003(%eax)
		jb     _07a2f8_jump
		mov    $_0a40bc_data,%eax
		call   _020150_func

	_07a2f8_jump:
		mov    $_0decde_data,%esi
		mov    %esp,%edi
		mov    $_0a40f0_data,%edx
		push   %edi

	_07a305_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07a31d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07a305_jump

	_07a31d_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    %eax,%ebx
		mov    _0bf318_data,%eax
		xor    %ecx,%ecx
		mov    0x000003(%eax),%cl
		mov    %esp,%edi
		mov    %bx,0x00000c(%eax,%ecx,8)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		lea    0x000001(%ecx),%ebx
		add    $_0decde_data,%ebx
		mov    %esp,%edi
		mov    %ebx,%esi
		mov    $_0a40f0_data,%edx
		push   %edi

	_07a35c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07a374_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07a35c_jump

	_07a374_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    %eax,%ecx
		mov    _0bf318_data,%eax
		movzbl 0x000003(%eax),%edi
		mov    %cx,0x00000e(%eax,%edi,8)
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		mov    %esp,%edi
		lea    (%ebx,%ecx,1),%esi
		mov    $_0a40f0_data,%edx
		push   %edi

	_07a3ab_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07a3c3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07a3ab_jump

	_07a3c3_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0bf318_data,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%cl
		mov    %ax,0x000010(%ebx,%ecx,8)
		incb   0x000003(%ebx)

	_07a3e5_jump:
		mov    %ebp,%eax
		add    $0x000138,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a3f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00009c,%esp
		push   $_0a4108_data
		call   _085441_func
		mov    $0x000001,%ah
		add    $0x000004,%esp
		mov    %ah,0x000090(%esp)
		mov    $_0a310c_data,%eax
		mov    %esp,%edi
		call   _065440_func
		mov    %eax,%esi
		mov    $_0a3118_data,%edx
		push   %edi

	_07a42a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07a442_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07a42a_jump

	_07a442_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%esi
		mov    %eax,%edi
		lea    0x000098(%esp),%eax
		lea    0x000080(%esp),%ecx
		push   %eax
		lea    0x000090(%esp),%eax
		lea    0x000088(%esp),%ebx
		push   %eax
		mov    $_0c215c_data,%edx
		mov    %esi,%eax
		call   _04dc38_func
		mov    0x000084(%esp),%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _085e56_func
		push   $_0c215c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x0000a0(%esp),%al
		mov    %esi,%ecx
		push   %eax
		lea    0x000098(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    $0x00002c,%edx
		mov    $_0bf2cc_data,%eax
		call   _04dd40_func
		mov    $0x000004,%eax
		mov    _0bf2f0_data,%edx
		call   _08529c_func
		mov    %eax,_0bf2f4_data
		test   %eax,%eax
		je     _07a5b5_jump
		mov    _0bf2f0_data,%edx
		xor    %ebp,%ebp
		test   %edx,%edx
		jbe    _07a5be_jump
		xor    %esi,%esi

	_07a4e9_jump:
		push   $_0c215c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x0000a0(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x000098(%esp),%eax
		mov    %edi,%ecx
		push   %eax
		mov    %ebx,%edx
		lea    0x0000a4(%esp),%eax
		call   _04dd40_func
		xor    %edx,%edx
		mov    0x000094(%esp),%dl
		mov    $0x000001,%eax
		inc    %edx
		call   _08529c_func
		mov    _0bf2f4_data,%edx
		mov    %eax,(%edx,%esi,1)
		add    %esi,%edx
		cmpl   $0x000000,(%edx)
		jne    _07a549_jump
		xor    %dh,%dh
		mov    %dh,0x000090(%esp)
		jmp    _07a5be_jump

	_07a549_jump:
		push   $_0c215c_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x0000a0(%esp),%al
		mov    $0x000001,%ebx
		push   %eax
		lea    0x000098(%esp),%eax
		mov    %edi,%ecx
		push   %eax
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x0000a4(%esp),%al
		mov    %edx,0x000098(%esp)
		mov    %eax,%edx
		mov    0x000098(%esp),%eax
		call   _04dd40_func
		xor    %edx,%edx
		mov    _0bf2f4_data,%eax
		mov    0x000094(%esp),%dl
		mov    (%esi,%eax,1),%eax
		movb   $0x000000,(%edx,%eax,1)
		inc    %ebp
		mov    _0bf2f0_data,%ebx
		add    $0x000004,%esi
		cmp    %ebx,%ebp
		jb     _07a4e9_jump
		jmp    _07a5be_jump

	_07a5b5_jump:
		xor    %dl,%dl
		mov    %dl,0x000090(%esp)

	_07a5be_jump:
		mov    $_0c215c_data,%ecx
		mov    %edi,%eax
		mov    %esp,%ebx
		call   _08a18e_func
		mov    0x000084(%esp),%esi
		mov    %eax,%edx
		mov    0x000080(%esp),%eax
		sub    %esi,%edx
		call   _04df9c_func
		mov    $_0c215c_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x00008c(%esp),%al
		call   _04df68_func
		cmpb   $0x000000,0x000090(%esp)
		jne    _07a634_jump
		mov    $0x0000c8,%eax
		call   _084f3c_func
		push   $_0c215c_data
		mov    %eax,%edx
		lea    0x000004(%esp),%eax
		push   %eax
		push   $_0a4120_data
		push   %edx
		call   _0852d9_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _020150_func
		mov    %edx,%eax
		call   _0850d4_func

	_07a634_jump:
		mov    %edi,%eax
		call   _086112_func
		mov    $0x000001,%al
		add    $0x00009c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a99c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000140,%esp
		call   _076a78_func
		xor    %edx,%edx
		mov    $_0dee14_data,%eax
		mov    %edx,0x000138(%esp)
		mov    $_0a3560_data,%edx
		call   _08b3bc_func
		test   %eax,%eax
		jne    _07a9ee_jump
		mov    _0ab8c8_data,%ebp
		push   %ebp
		mov    $0x000001,%edi
		push   $_0a42d0_data
		mov    %edi,0x000140(%esp)
		call   _085441_func
		add    $0x000008,%esp
		jmp    _07ab7f_jump

	_07a9ee_jump:
		mov    $_0a3564_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _07aa22_jump
		mov    _0bf2f0_data,%eax
		shl    $0x000002,%eax
		mov    %eax,_0ab8c8_data
		mov    0x000138(%esp),%eax
		add    $0x000140,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07aa22_jump:
		mov    $_0a3564_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		je     _07ab7f_jump
		mov    $_0decde_data,%ebx
		mov    %esp,%edi
		mov    %ebx,%esi
		mov    $_0a42fc_data,%edx
		push   %edi

	_07aa48_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07aa60_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07aa48_jump

	_07aa60_jump:
		pop    %edi
		mov    %esp,%eax
		call   _076968_func
		mov    %esp,%eax
		call   _0874cf_func
		mov    _0bf2f0_data,%ecx
		mov    %eax,0x00013c(%esp)
		cmp    %ecx,%eax
		jb     _07aa8a_jump
		mov    $_0a4318_data,%eax
		call   _020150_func

	_07aa8a_jump:
		mov    0x00013c(%esp),%eax
		mov    _0bf2f4_data,%edx
		cmpl   $0x000000,(%edx,%eax,4)
		je     _07aaa7_jump
		mov    $_0a4354_data,%eax
		call   _020150_func

	_07aaa7_jump:
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		inc    %ecx
		xor    %ebp,%ebp
		jmp    _07aaf2_jump

	_07aab8_jump:
		mov    %esp,%edi
		mov    %ebx,%esi
		mov    $_0a4384_data,%edx
		push   %edi

	_07aac2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07aada_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07aac2_jump

	_07aada_jump:
		pop    %edi
		mov    %esp,%eax
		mov    %esp,%edi
		call   _0769c0_func
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		add    $0x000003,%ecx
		inc    %ebp

	_07aaf2_jump:
		add    %ecx,%ebx
		xor    %eax,%eax
		mov    _0bf2cd_data,%al
		cmp    %eax,%ebp
		jle    _07aab8_jump
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x000001,%eax
		lea    0x000001(%ecx),%edx
		call   _08529c_func
		mov    _0bf2f4_data,%ebx
		mov    %eax,%edx
		mov    0x00013c(%esp),%eax
		mov    %edx,(%ebx,%eax,4)
		test   %edx,%edx
		jne    _07ab38_jump
		mov    $_0a43a0_data,%eax
		call   _020150_func

	_07ab38_jump:
		mov    0x00013c(%esp),%eax
		mov    _0bf2f4_data,%edx
		mov    %esp,%esi
		mov    (%edx,%eax,4),%edi
		push   %edi

	_07ab4b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07ab63_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07ab4b_jump

	_07ab63_jump:
		pop    %edi
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0ab8c8_data,%ebx
		inc    %ecx
		add    %ecx,%ebx
		mov    %ebx,_0ab8c8_data

	_07ab7f_jump:
		mov    0x000138(%esp),%eax
		add    $0x000140,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ab94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000090,%esp
		mov    $0x000100,%edx
		xor    %ah,%ah
		mov    $0x000200,%ebx
		mov    %ah,_0c1dbc_data
		mov    %ah,_0c1dbd_data
		mov    %dx,_0c2158_data
		mov    _0a43c4_data,%eax
		xor    %edx,%edx
		mov    %eax,_0c2153_data
		mov    $_0c1f4e_data,%eax
		call   _085360_func
		mov    $_0a3684_data,%eax
		mov    %esp,%edi
		call   _065510_func
		mov    %eax,%esi
		mov    $_0a3118_data,%edx
		push   %edi

	_07abe8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07ac00_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07abe8_jump

	_07ac00_jump:
		pop    %edi
		mov    %esp,%eax
		call   _04ddc8_func
		mov    %eax,%esi
		lea    0x00008c(%esp),%eax
		lea    0x000080(%esp),%ecx
		push   %eax
		lea    0x00008c(%esp),%eax
		lea    0x000088(%esp),%ebx
		push   %eax
		mov    $_0a43c8_data,%edx
		mov    %esi,%eax
		call   _04dc38_func
		mov    0x000084(%esp),%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _085e56_func
		push   $_0a43c8_data
		lea    0x000004(%esp),%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000094(%esp),%al
		mov    %esi,%ecx
		push   %eax
		lea    0x000094(%esp),%eax
		mov    $0x000001,%ebx
		push   %eax
		mov    $0x00039e,%edx
		mov    $_0c1dbc_data,%eax
		call   _04dd40_func
		mov    %esi,%eax
		call   _08a18e_func
		mov    0x000084(%esp),%edx
		mov    $_0a43c8_data,%ecx
		sub    %edx,%eax
		mov    %esp,%ebx
		mov    %eax,%edx
		mov    0x000080(%esp),%eax
		call   _04df9c_func
		mov    $_0a43c8_data,%ebx
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x000088(%esp),%al
		call   _04df68_func
		mov    %esi,%eax
		mov    $0x0000ff,%dh
		call   _086112_func
		mov    $0x000001,%al
		mov    %dh,_0c1dbd_data
		add    $0x000090,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b1d4_func:
		push   %edx
		push   %esi
		push   %edi
		call   _076a78_func
		mov    $_0dee14_data,%eax
		mov    $_0a3160_data,%edx
		call   _085309_func
		mov    $_0dee14_data,%eax
		xor    %esi,%esi
		call   _08b3bc_func
		test   %eax,%eax
		je     _07b232_jump
		mov    $_0de694_data,%edx
		mov    $_0dee14_data,%eax
		call   _08b3bc_func
		test   %eax,%eax
		jne    _07b237_jump
		mov    $_0deba8_data,%esi
		mov    $_0de714_data,%edi
		push   %edi

	_07b219_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07b231_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07b219_jump

	_07b231_jump:
		pop    %edi

	_07b232_jump:
		mov    $0x000001,%esi

	_07b237_jump:
		mov    %esi,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_07b550_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %al,0x000008(%esp)
		mov    %edx,0x000004(%esp)
		mov    %ecx,(%esp)
		testb  $0x000004,_0c31b4_data
		je     _07b581_jump
		mov    _0c31b1_data,%al
		cmp    _0c31b0_data,%al
		je     _07b581_jump
		mov    $_0a44bc_data,%eax
		call   _020150_func

	_07b581_jump:
		xor    %ah,%ah
		mov    0x000008(%esp),%al
		mov    %ax,_0e0b80_data
		cmp    $0x0000c8,%bx
		jbe    _07b5bf_jump
		xor    %eax,%eax
		mov    _0c1126_data,%ax
		xor    %esi,%esi
		shl    $0x000004,%eax
		mov    %bx,%si
		lea    -0x0000c8(%eax),%edx
		sub    $0x0000c8,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ax,_0e0b78_data
		jmp    _07b5c8_jump

	_07b5bf_jump:
		movw   $0x000001,_0e0b78_data

	_07b5c8_jump:
		mov    _0e0b78_data,%cx
		test   %cx,%cx
		jne    _07b5df_jump
		movw   $0x000002,_0e0b78_data
		jmp    _07b5e9_jump

	_07b5df_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0e0b78_data

	_07b5e9_jump:
		xor    %eax,%eax
		mov    _0c1126_data,%ax
		shl    $0x000004,%eax
		xor    %esi,%esi
		lea    -0x0000c8(%eax),%edx
		mov    _0e0b78_data,%si
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    %bx,%dx
		lea    -0x0000c8(%edx),%ebx
		sub    %eax,%ebx
		lea    -0x000001(%ebx),%eax
		mov    _0c31b4_data,%bl
		mov    %ax,_0e0b7c_data
		test   $0x000004,%bl
		je     _07b643_jump
		mov    0x00001c(%esp),%ecx
		xor    %eax,%eax
		mov    (%esp),%ebx
		mov    0x000004(%esp),%ax
		call   _07c6a4_func
		jmp    _07b761_jump

	_07b643_jump:
		mov    _0bf318_data,%eax
		mov    0x000002(%eax),%al
		xor    %ah,%ah
		xor    %ebp,%ebp
		xor    %edx,%edx
		xor    %edi,%edi
		mov    %ax,_0e0b7e_data
		xor    %eax,%eax
		jmp    _07b6ff_jump

	_07b660_jump:
		mov    _0bf318_data,%esi
		mov    %dx,_0def52_data(%eax)
		mov    0x000004(%edi,%esi,1),%cx
		mov    %cx,_0def50_data(%eax)
		mov    0x000006(%edi,%esi,1),%cl
		mov    %cl,_0def58_data(%eax)
		mov    0x000008(%edi,%esi,1),%cl
		mov    %cl,_0def59_data(%eax)
		mov    0x00000a(%edi,%esi,1),%bl
		mov    %bl,_0def54_data(%eax)
		xor    %ebx,%ebx
		mov    %bx,_0def56_data(%eax)
		mov    %bx,_0def64_data(%eax)
		mov    0x000001(%esi),%bh
		test   %bh,%bh
		je     _07b6b3_jump
		cmp    $0x000002,%bh
		jne    _07b6d6_jump

	_07b6b3_jump:
		xor    %ebx,%ebx
		mov    0x000004(%esp),%bx
		imul   %edx,%ebx
		mov    (%esp),%ecx
		add    %ecx,%ebx
		mov    %ebx,_0def5c_data(%eax)
		imul   $0x000140,%edx,%ebx
		mov    0x00001c(%esp),%esi
		add    %esi,%ebx
		jmp    _07b6e7_jump

	_07b6d6_jump:
		mov    (%esp),%ebx
		add    %edx,%ebx
		mov    %ebx,_0def5c_data(%eax)
		mov    0x00001c(%esp),%ebx
		add    %edx,%ebx

	_07b6e7_jump:
		mov    %ebx,_0def60_data(%eax)
		add    $0x000018,%eax
		xor    %ebx,%ebx
		add    $0x000008,%edi
		mov    _0def38_data(%eax),%bx
		inc    %ebp
		add    %ebx,%edx

	_07b6ff_jump:
		xor    %ebx,%ebx
		mov    _0e0b7e_data,%bx
		cmp    %ebx,%ebp
		jl     _07b660_jump
		mov    _0bf318_data,%eax
		mov    0x000003(%eax),%al
		xor    %ah,%ah
		xor    %esi,%esi
		mov    %ax,_0e0b7a_data
		xor    %eax,%eax
		jmp    _07b754_jump

	_07b726_jump:
		mov    _0bf318_data,%edx
		add    $0x000008,%eax
		mov    0x000004(%edx,%eax,1),%bx
		mov    %bx,_0e0b68_data(%eax)
		mov    0x000006(%edx,%eax,1),%bx
		mov    %bx,_0e0b6a_data(%eax)
		mov    0x000008(%edx,%eax,1),%dx
		inc    %esi
		mov    %dx,_0e0b6c_data(%eax)

	_07b754_jump:
		xor    %edx,%edx
		mov    _0e0b7a_data,%dx
		cmp    %edx,%esi
		jl     _07b726_jump

	_07b761_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_07b76c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000064,%esp
		mov    %eax,0x000040(%esp)
		mov    %edx,0x000050(%esp)
		mov    %ebx,0x00002c(%esp)
		mov    %ecx,0x000028(%esp)
		mov    _0bf318_data,%eax
		mov    0x000001(%eax),%dl
		test   %dl,%dl
		je     _07b797_jump
		cmp    $0x000002,%dl
		jne    _07bb4e_jump

	_07b797_jump:
		mov    0x000074(%esp),%eax
		mov    0x00002c(%esp),%ecx
		sub    %ecx,%eax
		mov    %ax,0x000018(%esp)
		mov    _0bf318_data,%eax
		mov    0x000050(%esp),%ebx
		mov    0x000001(%eax),%cl
		sub    $0x0000c8,%ebx
		test   %cl,%cl
		jne    _07b7e7_jump
		mov    _0c3164_data,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		mov    _0e0b78_data,%cx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    _0e0b7c_data,%dx
		add    %edx,%eax
		mov    %ax,0x000054(%esp)
		jmp    _07b7fb_jump

	_07b7e7_jump:
		mov    $0x0000c8,%eax
		mov    0x000078(%esp),%esi
		mov    %ebx,%edx
		sub    %esi,%eax
		add    %eax,%edx
		mov    %dx,0x000054(%esp)

	_07b7fb_jump:
		xor    %edx,%edx
		mov    $0x0000c8,%eax
		mov    0x000078(%esp),%dx
		sub    %edx,%eax
		mov    %eax,%edx
		movswl %bx,%eax
		add    %edx,%eax
		mov    0x000052(%esp),%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _07b82b_jump
		mov    $0x0000c8,%eax
		sub    0x000078(%esp),%eax
		add    %eax,%ebx
		mov    %bx,0x000054(%esp)

	_07b82b_jump:
		xor    %eax,%eax
		mov    _0e0b7e_data,%dx
		mov    %eax,0x00004c(%esp)
		test   %dx,%dx
		jbe    _07b9c3_jump
		mov    0x000078(%esp),%eax
		mov    0x000028(%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x000014(%esp)

	_07b84f_jump:
		xor    %eax,%eax
		mov    0x00004c(%esp),%ax
		imul   $0x000018,%eax,%eax
		xor    %edx,%edx
		mov    _0def56_data(%eax),%dx
		add    _0def5c_data(%eax),%edx
		xor    %ebx,%ebx
		mov    0x00002c(%esp),%bx
		mov    _0def60_data(%eax),%edi
		lea    (%edx,%ebx,1),%ebp
		add    %ebx,%edi
		mov    0x000052(%esp),%ebx
		sar    $0x000010,%ebx
		mov    0x000054(%esp),%ecx
		mov    %ebx,%edx
		mov    _0def50_data(%eax),%si
		shl    $0x000008,%edx
		shl    $0x000006,%ebx
		mov    _0def52_data(%eax),%ax
		add    %ebx,%edx
		sub    %ecx,%eax
		sub    %edx,%edi
		mov    %eax,%edx
		add    %esi,%edx
		test   %ax,%ax
		jge    _07b8d5_jump
		test   %dx,%dx
		jle    _07b8d5_jump
		test   %si,%si
		je     _07b8d5_jump
		cwtl   
		neg    %eax
		mov    %eax,%ebx
		mov    %eax,%ecx
		shl    $0x000008,%ebx
		shl    $0x000006,%ecx
		add    %ecx,%ebx
		add    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x000040(%esp),%bx
		imul   %ebx,%eax
		mov    %edx,%esi
		add    %eax,%ebp
		xor    %eax,%eax

	_07b8d5_jump:
		movswl %dx,%ebx
		mov    %ebx,0x00000c(%esp)
		xor    %ebx,%ebx
		mov    0x000028(%esp),%bx
		mov    %ebx,0x000010(%esp)
		mov    0x00000c(%esp),%ebx
		cmp    0x000010(%esp),%ebx
		jle    _07b9aa_jump
		xor    %ecx,%ecx
		mov    0x000078(%esp),%cx
		movswl %ax,%ebx
		mov    %ecx,0x000004(%esp)
		cmp    %ecx,%ebx
		jge    _07b9aa_jump
		cmp    0x000010(%esp),%ebx
		jge    _07b93f_jump
		mov    0x00000c(%esp),%ecx
		cmp    0x000004(%esp),%ecx
		jle    _07b93f_jump
		xor    %edx,%edx
		mov    0x000010(%esp),%eax
		mov    0x000040(%esp),%dx
		sub    %ebx,%eax
		imul   %eax,%edx
		add    %edx,%ebp
		mov    %eax,%edx
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		add    %edx,%eax
		mov    0x000014(%esp),%esi
		add    %eax,%edi
		jmp    _07b989_jump

	_07b93f_jump:
		xor    %ecx,%ecx
		mov    0x000028(%esp),%cx
		movswl %ax,%ebx
		cmp    %ecx,%ebx
		jge    _07b977_jump
		mov    %ecx,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x000040(%esp),%dx
		imul   %ebx,%edx
		mov    %ebx,%ecx
		add    %edx,%ebp
		mov    %ebx,%edx
		shl    $0x000008,%ecx
		shl    $0x000006,%edx
		add    %ecx,%edx
		add    %edx,%edi
		mov    0x000028(%esp),%edx
		sub    %eax,%edx
		sub    %edx,%esi
		jmp    _07b989_jump

	_07b977_jump:
		movswl %dx,%ebx
		xor    %edx,%edx
		mov    0x000078(%esp),%dx
		cmp    %edx,%ebx
		jle    _07b989_jump
		mov    %edx,%esi
		sub    %eax,%esi

	_07b989_jump:
		mov    0x000016(%esp),%ecx
		movswl %si,%ebx
		xor    %edx,%edx
		mov    _0c0f48_data,%esi
		mov    0x000040(%esp),%dx
		sub    %esi,%ebp
		sar    $0x000010,%ecx
		mov    %ebp,%esi
		call   *_0c0f58_data

	_07b9aa_jump:
		mov    0x00004c(%esp),%ebx
		inc    %ebx
		mov    _0e0b7e_data,%cx
		mov    %ebx,0x00004c(%esp)
		cmp    %cx,%bx
		jb     _07b84f_jump

	_07b9c3_jump:
		mov    0x000040(%esp),%esi
		mov    $0x000001,%eax
		mov    _0e0b7a_data,%dx
		xor    %edi,%edi
		shr    %si
		mov    %edi,0x000020(%esp)
		mov    %eax,0x000044(%esp)
		mov    %esi,0x000040(%esp)
		test   %dx,%dx
		jbe    _07bf53_jump

	_07b9ed_jump:
		xor    %eax,%eax
		mov    0x000020(%esp),%ax
		shl    $0x000003,%eax
		xor    %ebx,%ebx
		mov    _0e0b74_data(%eax),%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0def50_data(%ebx)
		je     _07bb27_jump
		xor    %edx,%edx
		mov    0x000044(%esp),%dx
		imul   $0x00000c,%edx,%ebp
		mov    _0e0b70_data(%eax),%ax
		mov    _0def56_data(%ebx),%si
		mov    _0c1120_data,%edx
		sub    %esi,%eax
		mov    (%edx),%edx
		mov    %ax,0x000038(%esp)
		add    %edx,%ebp
		cmp    $0x000140,%ax
		jle    _07ba49_jump
		mov    0x000040(%esp),%eax
		sub    %ax,0x000038(%esp)

	_07ba49_jump:
		mov    0x000036(%esp),%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		mov    0x00002c(%esp),%bx
		add    %eax,%edx
		cmp    %ebx,%edx
		jle    _07bab8_jump
		xor    %ebx,%ebx
		mov    0x000020(%esp),%bx
		mov    0x000054(%esp),%ecx
		mov    _0e0b72_data(,%ebx,8),%dx
		sub    %ecx,%edx
		movswl %dx,%ecx
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%esi
		shl    $0x000008,%esi
		mov    0x000005(%ebp),%dl
		xor    %edi,%edi
		add    %esi,%edx
		mov    %dx,%di
		mov    _0c0f78_data,%edx
		mov    %edx,0x000008(%esp)
		mov    _0c1120_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		mov    _0ae68c_data(,%ebx,4),%edx
		mov    %ecx,%ebx
		mov    %edi,%ecx
		mov    0x000008(%esp),%edi
		call   _018a92_func

	_07bab8_jump:
		mov    0x000040(%esp),%eax
		add    %ax,0x000038(%esp)
		xor    %edx,%edx
		mov    0x000036(%esp),%eax
		mov    0x000074(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _07bb27_jump
		xor    %ebx,%ebx
		mov    0x000020(%esp),%bx
		mov    0x000054(%esp),%edi
		mov    _0e0b72_data(,%ebx,8),%dx
		sub    %edi,%edx
		movswl %dx,%edx
		mov    %edx,0x000008(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		mov    _0c1120_data,%esi
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %dx,%cx
		mov    0x000000(%ebp),%edx
		mov    _0c0f78_data,%edi
		add    %edx,%esi
		mov    _0ae68c_data(,%ebx,4),%edx
		mov    0x000008(%esp),%ebx
		call   _018a92_func

	_07bb27_jump:
		mov    0x000020(%esp),%esi
		mov    0x000044(%esp),%edi
		mov    _0e0b7a_data,%dx
		inc    %esi
		inc    %edi
		mov    %esi,0x000020(%esp)
		mov    %edi,0x000044(%esp)
		cmp    %dx,%si
		jae    _07bf53_jump
		jmp    _07b9ed_jump

	_07bb4e_jump:
		xor    %edx,%edx
		mov    _0e0b7e_data,%bx
		mov    %edx,0x00001c(%esp)
		test   %bx,%bx
		jbe    _07bde8_jump
		mov    0x000078(%esp),%eax
		sub    %ecx,%eax
		mov    0x00002c(%esp),%ebx
		mov    %eax,0x000058(%esp)
		mov    0x000074(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,0x000024(%esp)

	_07bb7c_jump:
		xor    %edi,%edi
		mov    0x00001c(%esp),%di
		imul   $0x000018,%edi,%edi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000040(%esp),%dx
		mov    _0def56_data(%edi),%ax
		imul   %edx,%eax
		mov    _0def5c_data(%edi),%esi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		imul   %eax,%edx
		imul   $0x000140,%eax,%eax
		add    %edx,%esi
		add    _0def60_data(%edi),%eax
		mov    _0def50_data(%edi),%dx
		mov    _0def56_data(%edi),%cx
		mov    %dx,0x00003c(%esp)
		mov    0x000050(%esp),%edx
		mov    0x000028(%esp),%ebx
		sub    %ecx,%edx
		sub    %ebx,%edx
		mov    0x00003c(%esp),%ecx
		mov    %dx,0x000030(%esp)
		mov    _0def52_data(%edi),%dx
		xor    %ebx,%ebx
		mov    %dx,0x000034(%esp)
		add    %ecx,%edx
		mov    0x00002c(%esp),%bx
		movswl %dx,%ebp
		cmp    %ebx,%ebp
		jle    _07bdcf_jump
		xor    %ecx,%ecx
		mov    0x000032(%esp),%edi
		mov    0x000074(%esp),%cx
		sar    $0x000010,%edi
		mov    %ecx,(%esp)
		cmp    %ecx,%edi
		jge    _07bdcf_jump
		cmpw   $0x000000,0x00003c(%esp)
		je     _07bdcf_jump
		cmp    %ebx,%edi
		jge    _07bc40_jump
		cmp    (%esp),%ebp
		jle    _07bc40_jump
		mov    0x000024(%esp),%edx
		sub    %edi,%ebx
		mov    %dx,0x00003c(%esp)
		add    %ebx,%esi
		add    %ebx,%eax
		jmp    _07bc84_jump

	_07bc40_jump:
		xor    %ecx,%ecx
		mov    0x000032(%esp),%ebx
		mov    0x00002c(%esp),%cx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jge    _07bc6f_jump
		sub    %ebx,%ecx
		mov    0x00002c(%esp),%edx
		add    %ecx,%esi
		add    %ecx,%eax
		mov    0x000034(%esp),%ecx
		mov    0x00003c(%esp),%edi
		sub    %ecx,%edx
		sub    %edx,%edi
		mov    %di,0x00003c(%esp)
		jmp    _07bc84_jump

	_07bc6f_jump:
		xor    %ebx,%ebx
		movswl %dx,%ecx
		mov    0x000074(%esp),%bx
		cmp    %ebx,%ecx
		jle    _07bc84_jump
		sub    %ebx,%edx
		sub    %dx,0x00003c(%esp)

	_07bc84_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000078(%esp),%bx
		mov    0x000028(%esp),%dx
		sub    %edx,%ebx
		mov    0x00002e(%esp),%edx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jle    _07bca8_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000030(%esp)

	_07bca8_jump:
		cmpw   $0x000000,0x000030(%esp)
		jle    _07bd18_jump
		mov    0x00003a(%esp),%ecx
		mov    0x00002e(%esp),%ebx
		xor    %edx,%edx
		mov    _0c0f48_data,%edi
		mov    0x000040(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   *_0c0f58_data
		xor    %eax,%eax
		mov    0x00001c(%esp),%ax
		imul   $0x000018,%eax,%eax
		mov    0x00002e(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000140,%edx,%edx
		mov    _0def5c_data(%eax),%esi
		mov    _0def60_data(%eax),%edi
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		imul   $0x000140,%eax,%eax
		add    %edi,%edx
		mov    0x000030(%esp),%ebx
		add    %edx,%eax
		mov    0x000058(%esp),%edx
		sub    %ebx,%edx
		mov    %dx,0x000030(%esp)
		jmp    _07bd68_jump

	_07bd18_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%ax
		imul   $0x000018,%eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000050(%esp),%bx
		mov    _0def56_data(%eax),%dx
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    0x000028(%esp),%dx
		mov    %edx,%ecx
		imul   $0x000140,%edx,%edx
		sub    %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x000040(%esp),%bx
		imul   %ecx,%ebx
		mov    _0def5c_data(%eax),%esi
		mov    _0def60_data(%eax),%eax
		add    %edx,%eax
		mov    0x000058(%esp),%edx
		mov    %dx,0x000030(%esp)
		add    %ebx,%esi

	_07bd68_jump:
		xor    %edx,%edx
		mov    0x000032(%esp),%ebx
		mov    0x00002c(%esp),%dx
		sar    $0x000010,%ebx
		cmp    %edx,%ebx
		jge    _07bd80_jump
		sub    %ebx,%edx
		add    %edx,%esi
		add    %edx,%eax

	_07bd80_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000078(%esp),%bx
		mov    0x000028(%esp),%dx
		sub    %edx,%ebx
		mov    0x00002e(%esp),%edx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jle    _07bda4_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000030(%esp)

	_07bda4_jump:
		cmpw   $0x000000,0x000030(%esp)
		jle    _07bdcf_jump
		mov    0x00003a(%esp),%ecx
		mov    0x00002e(%esp),%ebx
		xor    %edx,%edx
		mov    _0c0f48_data,%edi
		mov    0x000040(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   *_0c0f58_data

	_07bdcf_jump:
		mov    0x00001c(%esp),%ebx
		inc    %ebx
		mov    _0e0b7e_data,%cx
		mov    %ebx,0x00001c(%esp)
		cmp    %cx,%bx
		jb     _07bb7c_jump

	_07bde8_jump:
		mov    $0x000001,%edi
		xor    %esi,%esi
		mov    _0e0b7a_data,%ax
		mov    %esi,0x00005c(%esp)
		mov    %edi,0x000048(%esp)
		test   %ax,%ax
		jbe    _07bf53_jump

	_07be06_jump:
		xor    %eax,%eax
		mov    0x00005c(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e0b74_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0def50_data(%edx)
		je     _07bf31_jump
		xor    %ebx,%ebx
		mov    0x000048(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0e0b72_data(%eax),%ax
		mov    _0def56_data(%edx),%cx
		mov    _0c1120_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000060(%esp)
		add    %ebx,%ebp
		cmp    $0x0000c8,%ax
		jle    _07be62_jump
		mov    0x000050(%esp),%eax
		sub    %ax,0x000060(%esp)

	_07be62_jump:
		mov    0x00005e(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%al
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		cmp    %eax,%edx
		jle    _07bec9_jump
		xor    %eax,%eax
		mov    0x00005c(%esp),%ax
		mov    _0e0b6e_data(,%eax,8),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000008(%esp)
		xor    %dh,%dh
		xor    %ch,%ch
		mov    0x000006(%ebp),%dl
		mov    0x000005(%ebp),%cl
		shl    $0x000008,%edx
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0c1120_data,%edx
		mov    0x000008(%edx),%esi
		mov    0x000000(%ebp),%edx
		mov    _0c0f78_data,%edi
		add    %edx,%esi
		mov    _0ae68c_data(,%eax,4),%edx
		mov    0x000008(%esp),%eax
		call   _018a92_func

	_07bec9_jump:
		mov    0x000050(%esp),%eax
		add    %ax,0x000060(%esp)
		xor    %eax,%eax
		mov    0x00005e(%esp),%ebx
		mov    0x000078(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _07bf31_jump
		xor    %eax,%eax
		mov    0x00005c(%esp),%ax
		mov    _0e0b6e_data(,%eax,8),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000008(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0c1120_data,%edx
		mov    0x000008(%edx),%esi
		mov    0x000000(%ebp),%edx
		mov    _0c0f78_data,%edi
		add    %edx,%esi
		mov    _0ae68c_data(,%eax,4),%edx
		mov    0x000008(%esp),%eax
		call   _018a92_func

	_07bf31_jump:
		mov    0x00005c(%esp),%esi
		mov    0x000048(%esp),%edi
		mov    _0e0b7a_data,%dx
		inc    %esi
		inc    %edi
		mov    %esi,0x00005c(%esp)
		mov    %edi,0x000048(%esp)
		cmp    %dx,%si
		jb     _07be06_jump

	_07bf53_jump:
		add    $0x000064,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_07bf5c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,0x00002c(%esp)
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %ecx,0x000028(%esp)
		mov    _0bf318_data,%eax
		mov    0x000001(%eax),%dl
		test   %dl,%dl
		je     _07bf87_jump
		cmp    $0x000002,%dl
		jne    _07c110_jump

	_07bf87_jump:
		mov    0x00002c(%esp),%esi
		mov    _0c314a_data,%ax
		mov    _0c3166_data,%dx
		xor    %edi,%edi
		add    %eax,%eax
		add    %edx,%edx
		shr    %si
		sub    %edx,%eax
		mov    %edi,0x000020(%esp)
		add    $0x0000c8,%eax
		mov    %esi,0x00002c(%esp)
		mov    %eax,0x000008(%esp)
		mov    $0x000001,%eax
		mov    _0e0b7a_data,%dx
		mov    %eax,0x000014(%esp)
		test   %dx,%dx
		jbe    _07c278_jump

	_07bfcd_jump:
		xor    %eax,%eax
		mov    0x000020(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e0b74_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0def50_data(%edx)
		jne    _07c0e9_jump
		xor    %ebx,%ebx
		mov    0x000014(%esp),%bx
		imul   $0x00000c,%ebx,%ebx
		mov    _0e0b70_data(%eax),%ax
		mov    _0def56_data(%edx),%si
		mov    _0c1120_data,%ebp
		sub    %esi,%eax
		mov    0x000000(%ebp),%ebp
		mov    %ax,0x00001c(%esp)
		add    %ebx,%ebp
		cmp    $0x000140,%ax
		jle    _07c02a_jump
		mov    0x00002c(%esp),%eax
		sub    %ax,0x00001c(%esp)

	_07c02a_jump:
		mov    0x00001a(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    0x00000c(%esp),%dx
		cmp    %edx,%ebx
		jle    _07c08a_jump
		xor    %edx,%edx
		mov    0x000008(%esp),%ebx
		mov    0x000006(%ebp),%dl
		xor    %ch,%ch
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    0x000005(%ebp),%cl
		shl    $0x000008,%edx
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0c1120_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    0x000020(%esp),%dx
		mov    _0c0f78_data,%edi
		shl    $0x000002,%edx
		movswl %bx,%ebx
		mov    _0ae68c_data(%edx),%edx
		call   _018a92_func

	_07c08a_jump:
		mov    0x00002c(%esp),%eax
		add    %ax,0x00001c(%esp)
		xor    %edx,%edx
		mov    0x00001a(%esp),%eax
		mov    0x000040(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _07c0e9_jump
		xor    %edx,%edx
		mov    0x000008(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0c1120_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    _0c0f78_data,%edi
		mov    0x000020(%esp),%dx
		movswl %bx,%ebx
		mov    _0ae68c_data(,%edx,4),%edx
		call   _018a92_func

	_07c0e9_jump:
		mov    0x000020(%esp),%eax
		mov    0x000014(%esp),%edx
		mov    _0e0b7a_data,%bx
		inc    %eax
		inc    %edx
		mov    %eax,0x000020(%esp)
		mov    %edx,0x000014(%esp)
		cmp    %bx,%ax
		jae    _07c278_jump
		jmp    _07bfcd_jump

	_07c110_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    _0e0b7a_data,%cx
		mov    %edx,0x000018(%esp)
		mov    %ebx,0x000010(%esp)
		test   %cx,%cx
		jbe    _07c278_jump

	_07c12f_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e0b74_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0def50_data(%edx)
		jne    _07c256_jump
		xor    %ebx,%ebx
		mov    0x000010(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0c1120_data,%ebx
		mov    (%ebx),%ebx
		mov    _0e0b72_data(%eax),%ax
		add    %ebx,%ebp
		mov    _0def56_data(%edx),%bx
		sub    %ebx,%eax
		mov    %ax,0x000024(%esp)
		cmp    $0x0000c8,%ax
		jle    _07c18b_jump
		mov    0x000004(%esp),%eax
		sub    %ax,0x000024(%esp)

	_07c18b_jump:
		mov    0x000022(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%al
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		cmp    %eax,%edx
		jle    _07c1f0_jump
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		mov    _0c0f78_data,%edi
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		xor    %eax,%eax
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000018(%esp),%ax
		mov    %dx,%cx
		mov    _0c1120_data,%edx
		mov    0x000000(%ebp),%esi
		mov    %eax,(%esp)
		mov    0x000008(%edx),%edx
		mov    _0e0b6e_data(,%eax,8),%eax
		add    %edx,%esi
		mov    (%esp),%edx
		sar    $0x000010,%eax
		mov    _0ae68c_data(,%edx,4),%edx
		call   _018a92_func

	_07c1f0_jump:
		mov    0x000004(%esp),%eax
		add    %ax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000022(%esp),%ebx
		mov    0x000044(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _07c256_jump
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		mov    _0e0b6e_data(,%eax,8),%edx
		sar    $0x000010,%edx
		mov    %edx,(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0c1120_data,%edx
		mov    0x000008(%edx),%esi
		mov    0x000000(%ebp),%edx
		mov    _0c0f78_data,%edi
		add    %edx,%esi
		mov    _0ae68c_data(,%eax,4),%edx
		mov    (%esp),%eax
		call   _018a92_func

	_07c256_jump:
		mov    0x000018(%esp),%ebx
		mov    0x000010(%esp),%ecx
		mov    _0e0b7a_data,%si
		inc    %ebx
		inc    %ecx
		mov    %ebx,0x000018(%esp)
		mov    %ecx,0x000010(%esp)
		cmp    %si,%bx
		jb     _07c12f_jump

	_07c278_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_07c284_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x00000c(%esp)
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    _0bf318_data,%edx
		mov    0x000001(%edx),%ah
		test   %ah,%ah
		jne    _07c4b7_jump
		mov    _0e0b7e_data,%bx
		shr    %si
		xor    %ecx,%ecx
		test   %bx,%bx
		jbe    _07c493_jump
		mov    %esi,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000008(%esp)

	_07c2c3_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0def50_data(%ebx)
		jne    _07c2ed_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		movzwl %si,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		jmp    _07c47c_jump

	_07c2ed_jump:
		mov    _0def54_data(%ebx),%al
		test   %al,%al
		jne    _07c328_jump
		xor    %eax,%eax
		mov    %si,%ax
		movzbl _0def58_data(%ebx),%ebp
		mov    %eax,(%esp)
		imul   %ebp,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		mov    (%esp),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		jmp    _07c47c_jump

	_07c328_jump:
		cmp    $0x000001,%al
		je     _07c334_jump
		cmp    $0x000004,%al
		jne    _07c3bf_jump

	_07c334_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0def64_data(%ebx),%dx
		movzbl _0def59_data(%ebx),%ebp
		add    %ebp,%edx
		movzwl %si,%ebp
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %dx,_0def64_data(%ebx)
		cmpb   $0x000001,_0def54_data(%ebx)
		jne    _07c382_jump
		xor    %edx,%edx
		mov    _0def64_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _07c47c_jump

	_07c382_jump:
		xor    %eax,%eax
		mov    _0def58_data(%ebx),%al
		mov    %eax,(%esp)
		imul   %ebp,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0def56_data(%ebx)
		xor    %edx,%edx
		mov    _0def64_data(%ebx),%dx
		mov    %edx,%ebp
		jmp    _07c45b_jump

	_07c3bf_jump:
		cmp    $0x000002,%al
		je     _07c3cb_jump
		cmp    $0x000005,%al
		jne    _07c483_jump

	_07c3cb_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		movzbl _0def59_data(%edx),%ebp
		mov    _0def64_data(%edx),%bx
		cmp    %ebx,%ebp
		jle    _07c3f4_jump
		mov    0x000008(%esp),%eax
		add    %eax,%ebx
		mov    %bx,_0def64_data(%edx)

	_07c3f4_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0def59_data(%ebx),%dl
		sub    %dx,_0def64_data(%ebx)
		cmpb   $0x000002,_0def54_data(%ebx)
		jne    _07c422_jump
		xor    %edx,%edx
		mov    _0def64_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _07c47c_jump

	_07c422_jump:
		xor    %eax,%eax
		mov    _0def58_data(%ebx),%al
		movzwl %si,%ebp
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %eax,(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		movzwl _0def64_data(%ebx),%ebp
		mov    %dx,_0def56_data(%ebx)

	_07c45b_jump:
		xor    %edx,%edx
		sar    $0x000004,%ebp
		mov    _0def56_data(%ebx),%dx
		add    %ebp,%edx
		mov    %dx,_0def56_data(%ebx)
		mov    _0def56_data(%ebx),%ax
		xor    %edx,%edx
		div    %si

	_07c47c_jump:
		mov    %dx,_0def56_data(%ebx)

	_07c483_jump:
		mov    _0e0b7e_data,%ax
		inc    %ecx
		cmp    %ax,%cx
		jb     _07c2c3_jump

	_07c493_jump:
		testb  $0x000004,_0c31b4_data
		je     _07c69b_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %di,%dx
		mov    %si,%ax
		call   _07c760_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07c4b7_jump:
		cmp    $0x000001,%ah
		jne    _07c69b_jump
		mov    _0e0b7e_data,%dx
		xor    %ecx,%ecx
		test   %dx,%dx
		jbe    _07c69b_jump
		mov    %ebx,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000004(%esp)

	_07c4db_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0def50_data(%ebx)
		jne    _07c509_jump
		mov    _0c3164_data,%edx
		sar    $0x000010,%edx
		xor    %esi,%esi
		add    %edx,%edx
		mov    %di,%si
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _07c683_jump

	_07c509_jump:
		mov    _0def54_data(%ebx),%al
		test   %al,%al
		jne    _07c541_jump
		xor    %esi,%esi
		mov    %di,%si
		movzbl _0def58_data(%ebx),%ebp
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    _0c3164_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _07c683_jump

	_07c541_jump:
		cmp    $0x000001,%al
		je     _07c549_jump
		cmp    $0x000004,%al
		jne    _07c5bd_jump

	_07c549_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %esi,%esi
		xor    %edx,%edx
		mov    _0def64_data(%ebx),%si
		mov    _0def59_data(%ebx),%dl
		movzwl %di,%ebp
		add    %esi,%edx
		mov    %ebp,%esi
		mov    %edx,%eax
		shl    $0x000004,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dx,_0def64_data(%ebx)
		cmpb   $0x000001,_0def54_data(%ebx)
		jne    _07c594_jump
		xor    %edx,%edx
		mov    _0def64_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _07c683_jump

	_07c594_jump:
		mov    %ebp,%edx
		movzbl _0def58_data(%ebx),%esi
		imul   %esi,%edx
		mov    _0c3164_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		jmp    _07c650_jump

	_07c5bd_jump:
		cmp    $0x000002,%al
		je     _07c5c9_jump
		cmp    $0x000005,%al
		jne    _07c68a_jump

	_07c5c9_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		movzbl _0def59_data(%edx),%esi
		mov    _0def64_data(%edx),%bx
		cmp    %ebx,%esi
		jle    _07c5f2_jump
		mov    0x000004(%esp),%eax
		add    %eax,%ebx
		mov    %bx,_0def64_data(%edx)

	_07c5f2_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0def59_data(%ebx),%dl
		mov    _0def64_data(%ebx),%si
		sub    %edx,%esi
		mov    _0def54_data(%ebx),%ah
		mov    %si,_0def64_data(%ebx)
		cmp    $0x000002,%ah
		jne    _07c627_jump
		xor    %edx,%edx
		mov    %si,%dx
		sar    $0x000004,%edx
		jmp    _07c683_jump

	_07c627_jump:
		xor    %esi,%esi
		mov    %di,%si
		movzbl _0def58_data(%ebx),%ebp
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    _0c3164_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi

	_07c650_jump:
		mov    %dx,_0def56_data(%ebx)
		xor    %edx,%edx
		mov    _0def64_data(%ebx),%dx
		mov    %edx,%esi
		xor    %edx,%edx
		sar    $0x000004,%esi
		mov    _0def56_data(%ebx),%dx
		add    %esi,%edx
		mov    %dx,_0def56_data(%ebx)
		mov    _0def56_data(%ebx),%ax
		xor    %edx,%edx
		div    %di

	_07c683_jump:
		mov    %dx,_0def56_data(%ebx)

	_07c68a_jump:
		mov    _0e0b7e_data,%si
		inc    %ecx
		cmp    %si,%cx
		jb     _07c4db_jump

	_07c69b_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07c6a4_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,%ebx
		mov    %dx,_0e0b7e_data
		cmp    $0x00012c,%dx
		jbe    _07c6c4_jump
		mov    $_0a44ec_data,%eax
		call   _020150_func

	_07c6c4_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		jmp    _07c71f_jump

	_07c6ca_jump:
		movw   $0x000001,_0def50_data(%eax)
		movb   $0x000002,_0def58_data(%eax)
		xor    %ch,%ch
		mov    %ch,_0def59_data(%eax)
		xor    %cl,%cl
		mov    %ch,_0def54_data(%eax)
		mov    %cx,_0def56_data(%eax)
		mov    %cx,_0def64_data(%eax)
		xor    %ecx,%ecx
		mov    %di,%cx
		imul   %edx,%ecx
		mov    %dx,_0def52_data(%eax)
		mov    %ebx,_0def60_data(%eax)
		add    $0x000018,%eax
		add    $0x000140,%ebx
		add    %esi,%ecx
		inc    %edx
		mov    %ecx,_0def44_data(%eax)

	_07c71f_jump:
		xor    %ecx,%ecx
		mov    _0e0b7e_data,%cx
		cmp    %ecx,%edx
		jl     _07c6ca_jump
		xor    %esi,%esi
		mov    %si,_0e0b7a_data
		pop    %edi
		pop    %esi
		ret    



_07c738_func:
		push   %edx
		and    $0x00ffff,%eax
		lea    -0x0000c9(%eax),%edx
		mov    _0c3164_data,%eax
		sar    $0x000010,%eax
		sar    $0x000002,%eax
		cmp    %edx,%eax
		xor    %eax,%eax
		mov    _0c30b4_data,%ax
		sub    $0x00005a,%eax
		pop    %edx
		ret    



_07c760_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000008(%esp)
		xor    %eax,%eax
		mov    %dx,%ax
		call   _07c738_func
		mov    %eax,%edx
		cmpb   $0x000000,_0c33b4_data
		jne    _07c78b_jump
		incb   _0ab920_data

	_07c78b_jump:
		cmpb   $0x000010,_0ab920_data
		jne    _07c79c_jump
		xor    %cl,%cl
		mov    %cl,_0ab920_data

	_07c79c_jump:
		mov    $0x00005a,%esi
		mov    %edx,%ecx
		lea    (%edx,%esi,1),%eax
		mov    %eax,(%esp)
		lea    0x000000(,%edx,4),%eax
		mov    _0ab920_data,%bl
		sub    %edx,%eax
		mov    (%esp),%ebp
		lea    0x000000(,%eax,8),%edi
		cmp    %ebp,%edx
		jl     _07c817_jump
		jmp    _07c827_jump

	_07c7c8_jump:
		dec    %esi
		cmp    $0x000010,%esi
		jge    _07c7d3_jump
		mov    $0x000010,%esi

	_07c7d3_jump:
		test   %ecx,%ecx
		jle    _07c801_jump
		xor    %eax,%eax
		mov    %bl,%al
		xor    %edx,%edx
		mov    _0ab8e0_data(,%eax,4),%eax
		div    %esi
		xor    %edx,%edx
		mov    _0def56_data(%edi),%dx
		add    %ebp,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0def56_data(%edi)

	_07c801_jump:
		inc    %bl
		cmp    $0x000010,%bl
		jne    _07c80a_jump
		xor    %bl,%bl

	_07c80a_jump:
		mov    (%esp),%eax
		inc    %ecx
		add    $0x000018,%edi
		cmp    %eax,%ecx
		jl     _07c81c_jump
		jmp    _07c827_jump

	_07c817_jump:
		movzwl 0x000004(%esp),%ebp

	_07c81c_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%ax
		cmp    %eax,%ecx
		jl     _07c7c8_jump

	_07c827_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07c830_func:
		mov    0x000083(%eax),%al
		ret    



_07c838_func:
		mov    %dl,0x000083(%eax)
		ret    



_07c840_func:
		mov    0x00007a(%eax),%al
		ret    



_07c844_func:
		mov    %dx,0x000050(%eax)
		ret    



_07c84c_func:
		mov    0x000050(%eax),%ax
		ret    



_07c854_func:
		mov    %dx,0x00005c(%eax)
		ret    



_07c85c_func:
		mov    0x00005c(%eax),%ax
		ret    



_07c864_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpw   $0x000001,_0c309e_data
		jne    _07c880_jump
		xor    %edx,%edx
		call   _07c838_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07c880_jump:
		call   _07c830_func
		test   %al,%al
		jne    _07c914_jump
		mov    %ecx,%eax
		call   _07c840_func
		xor    %ah,%ah
		cmp    $0x00001e,%ax
		jge    _07c914_jump
		movswl %ax,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		xor    %eax,%eax
		mov    _0c22ae_data(%ebx),%edx
		mov    0x000064(%ecx),%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jne    _07c914_jump
		mov    _0c22b2_data(%ebx),%si
		test   %si,%si
		jle    _07c914_jump
		cmp    $0x00000f,%si
		jg     _07c914_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _07c838_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07c854_func
		mov    _0c2254_data(%ebx),%edx
		mov    %ecx,%eax
		sar    $0x000010,%edx
		call   _07c844_func
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c225a_data(%ebx),%al
		mov    _0c2258_data(%ebx),%dl
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   _01dea8_func

	_07c914_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c91c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpw   $0x000001,_0c309e_data
		jne    _07c938_jump
		xor    %edx,%edx
		call   _07c838_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07c938_jump:
		call   _07c830_func
		test   %al,%al
		je     _07ca0a_jump
		mov    %ecx,%eax
		call   _01d740_func
		test   %al,%al
		je     _07ca11_jump
		mov    %ecx,%eax
		call   _07c840_func
		movzbw %al,%si
		mov    %ecx,%eax
		call   _07c84c_func
		mov    %eax,%ebx
		dec    %ebx
		mov    %ecx,%eax
		movswl %bx,%edx
		call   _07c844_func
		test   %bx,%bx
		jne    _07ca11_jump
		movswl %si,%edx
		mov    %ecx,%eax
		lea    0x000000(,%edx,4),%esi
		call   _07c85c_func
		sub    %edx,%esi
		mov    %eax,%ebx
		shl    $0x000005,%esi
		inc    %ebx
		cmp    _0c22b2_data(%esi),%bx
		jge    _07c9e6_jump
		movswl %bx,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _07c854_func
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%ebx
		mov    _0c2254_data(%ebx),%edx
		mov    %ecx,%eax
		sar    $0x000010,%edx
		call   _07c844_func
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c225a_data(%ebx),%al
		mov    _0c2258_data(%ebx),%dl
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   _01dea8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07c9e6_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07c838_func
		mov    0x000085(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000085(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ca0a_jump:
		mov    %ecx,%eax
		call   _02bfdc_func

	_07ca11_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ca74_func:
		push   %ebx
		cmpw   $0x000000,_0c30d6_data
		jne    _07caa1_jump
		mov    _0e0b84_data,%ax
		mov    $0x000001,%ebx
		mov    %ax,_0c30f8_data
		mov    $0x000001,%ah
		mov    %bx,_0c3146_data
		mov    %ah,_0c33d6_data
		pop    %ebx
		ret    

	_07caa1_jump:
		call   _07caac_func
		pop    %ebx
		nop
		ret    



_07caac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c3348_data,%ah
		test   $0x000002,%ah
		je     _07cad8_jump
		mov    $0x000022,%ecx
		mov    $_0b92f8_data,%edi
		mov    %ah,%dl
		mov    $_0b95b8_data,%esi
		and    $0x0000fd,%dl
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %dl,_0c3348_data

	_07cad8_jump:
		xor    %eax,%eax
		mov    _0bf3a5_data,%al
		mov    %eax,%edx
		shl    $0x000005,%edx
		sub    %eax,%edx
		shl    $0x000002,%edx
		sub    %eax,%edx
		add    $_0bf3ac_data,%edx
		incb   0x000058(%edx)
		xor    %ebx,%ebx
		call   _0302b8_func
		mov    %al,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		add    %eax,%eax
		lea    (%edx,%eax,1),%ebx
		xor    %eax,%eax
		mov    0x000058(%edx),%al
		mov    0x000056(%ebx,%eax,1),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _07cb6d_jump
		xor    %ebx,%ebx
		call   _0302b8_func
		mov    %al,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		lea    (%edx,%eax,1),%ecx
		xor    %eax,%eax
		mov    0x000058(%edx),%al
		add    %eax,%eax
		xor    %ebx,%ebx
		add    %eax,%ecx
		call   _0302b8_func
		mov    %al,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		add    %eax,%eax
		mov    0x000058(%edx),%bl
		add    %edx,%eax
		mov    0x000056(%ebx,%eax,1),%eax
		sar    $0x000018,%eax
		movsbw 0x00001c(%ecx,%eax,1),%ax
		mov    %ax,_0c30f8_data
		jmp    _07cba1_jump

	_07cb6d_jump:
		xor    %eax,%eax
		mov    $0x000001,%ebx
		mov    0x000004(%edx),%al
		mov    %bx,_0c3156_data
		xor    %eax,%eax
		mov    0x000005(%edx),%al
		xor    %eax,%eax
		mov    0x000006(%edx),%al
		xor    %eax,%eax
		mov    0x000007(%edx),%al
		xor    %eax,%eax
		mov    0x000004(%edx),%al
		xor    %eax,%eax
		mov    0x000005(%edx),%al
		xor    %eax,%eax
		mov    0x000006(%edx),%al
		xor    %eax,%eax
		mov    0x000007(%edx),%al

	_07cba1_jump:
		cmpb   $0x000002,0x00000b(%edx)
		jne    _07cbde_jump
		mov    $0x000001,%cl
		mov    %cl,_0c33c7_data
		mov    _0c30da_data,%ch
		mov    $0x000001,%esi
		or     $0x000040,%ch
		mov    %si,_0c3156_data
		mov    %ch,_0c30da_data
		mov    %cl,_0c3396_data
		mov    %cl,_0c33cb_data
		mov    %cl,_0c3389_data
		jmp    _07cbe7_jump

	_07cbde_jump:
		movw   $0x000001,_0c3146_data

	_07cbe7_jump:
		xor    %dh,%dh
		mov    %dh,_0c33d6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07cbf8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %eax,%esi
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07ccf1_jump

	_07cc17_jump:
		cmpw   $0x000013,0x000064(%ecx)
		jne    _07cce1_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07cce1_jump
		mov    0x000085(%ecx),%ah
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000085(%ecx)
		mov    %ecx,%eax
		call   _05a608_func
		cmpl   $0x000000,0x000024(%ecx)
		je     _07cc51_jump
		mov    %ecx,%eax
		call   _020064_func

	_07cc51_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x00006c(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x000066(%esi),%dl
		cmp    $0x00000a,%dl
		je     _07cc72_jump
		cmp    $0x00000d,%dl
		jne    _07cc83_jump

	_07cc72_jump:
		mov    0x00002c(%esi),%ebp
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006d(%esi),%dl
		mov    0x00006d(%ecx),%al
		add    %ebp,%edx
		jmp    _07ccb9_jump

	_07cc83_jump:
		xor    %eax,%eax
		mov    %dl,%al
		testb  $0x000002,_0a525d_data(%eax)
		jne    _07cca4_jump
		xor    %eax,%eax
		mov    _0c1126_data,%ax
		mov    %eax,%edx
		shl    $0x000004,%edx
		xor    %eax,%eax
		sub    $0x000010,%edx
		jmp    _07ccb6_jump

	_07cca4_jump:
		xor    %eax,%eax
		mov    _0c1126_data,%ax
		mov    %eax,%edx
		shl    $0x000004,%edx
		xor    %eax,%eax
		sub    $0x000006,%edx

	_07ccb6_jump:
		mov    0x00006d(%ecx),%al

	_07ccb9_jump:
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01e53c_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01dea8_func
		movb   $0x000000,0x00006f(%ecx)
		orb    $0x000040,0x000085(%esi)
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07cce1_jump:
		inc    %eax
		add    $0x000088,%ecx
		cmp    %dx,%ax
		jl     _07cc17_jump

	_07ccf1_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ccf8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000032(%eax),%edx
		mov    _0c1d74_data,%ebx
		sar    $0x000010,%edx
		mov    (%ebx,%edx,2),%dx
		cmp    0x000034(%eax),%dx
		je     _07cd73_jump
		movswl %dx,%ebx
		mov    %ebx,%edx
		shl    $0x000004,%edx
		add    %ebx,%edx
		mov    _0b9410_data,%ebx
		shl    $0x000003,%edx
		add    %ebx,%edx
		mov    0x000085(%edx),%bl
		movw   $0x000018,0x000064(%edx)
		and    $0x0000ef,%bl
		mov    %bl,0x000085(%edx)
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%cx
		mov    0x00006d(%edx),%bl
		mov    0x00002c(%eax),%si
		add    %ecx,%ebx
		mov    0x00006d(%eax),%al
		sub    %esi,%ebx
		xor    %ah,%ah
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %bx,%bx
		setle  %bl
		and    $0x0000ff,%ebx
		add    $0x000003,%ebx
		cwtl   
		mov    %bl,0x000074(%edx)
		test   %eax,%eax
		jge    _07cd6f_jump
		neg    %eax

	_07cd6f_jump:
		mov    %ax,0x000048(%edx)

	_07cd73_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07cd78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0b9410_data,%eax
		mov    _0b9414_data,%si
		xor    %dl,%dl
		xor    %ebx,%ebx
		test   %si,%si
		jle    _07cdcd_jump

	_07cd96_jump:
		cmpw   $0x000027,0x000064(%eax)
		jne    _07cdc2_jump
		movzbl %dl,%edi
		mov    0x000034(%eax),%cx
		mov    %cx,(%esp,%edi,2)
		mov    0x000024(%eax),%ecx
		inc    %dl
		test   %ecx,%ecx
		jne    _07cdb9_jump
		movw   $0x00000a,0x00005c(%eax)
		jmp    _07cdbd_jump

	_07cdb9_jump:
		incw   0x00005c(%eax)

	_07cdbd_jump:
		cmp    $0x000002,%dl
		jae    _07cdcd_jump

	_07cdc2_jump:
		inc    %ebx
		add    $0x000088,%eax
		cmp    %si,%bx
		jl     _07cd96_jump

	_07cdcd_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		mov    (%esp),%esi
		lea    (%eax,%edx,1),%ebp
		mov    %esi,%ebx
		xor    %al,%al

	_07cded_jump:
		movswl %bx,%edx
		imul   $0x000088,%edx,%edx
		movswl %si,%edi
		imul   $0x000088,%edi,%edi
		mov    _0b9410_data,%ecx
		add    %ecx,%edx
		add    %ecx,%edi
		mov    0x00005c(%edx),%cx
		cmp    0x00005c(%edi),%cx
		jle    _07ce17_jump
		mov    %ebx,%esi
		mov    %edx,%ebp

	_07ce17_jump:
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    (%esp,%edx,2),%bx
		cmp    $0x000002,%al
		jb     _07cded_jump
		mov    %ebp,%eax
		movw   $0x000001,0x00005c(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ce38_func:
		push   %ebx
		push   %ecx
		push   %esi
		movswl %dx,%ebx
		movswl %ax,%esi
		sub    $0x000018,%ebx
		lea    0x000008(%esi),%eax
		sar    $0x000004,%ebx
		sar    $0x000004,%eax
		movswl %bx,%ebx
		cwtl   
		mov    %ebx,%edx
		xor    %cl,%cl
		call   _01ea94_func
		cmp    $0x000010,%al
		jne    _07ce72_jump
		lea    -0x000008(%esi),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01ea94_func
		cmp    $0x000010,%al
		jne    _07ce72_jump
		mov    $0x000001,%cl

	_07ce72_jump:
		mov    %cl,%al
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07ce78_func:
		push   %edx
		xor    %dl,%dl
		mov    %dl,_0b9372_data
		call   _02b6a0_func
		pop    %edx
		ret    



_07ce88_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		cmpl   $0x000001,_0ab924_data
		je     _07cea1_jump
		xor    %ebx,%ebx
		mov    %ebx,_0ab924_data

	_07cea1_jump:
		xor    %eax,%eax
		mov    _0b9366_data,%al
		lea    0x000000(,%eax,4),%ecx
		sub    %eax,%ecx
		mov    _0b92fc_data,%eax
		mov    0x00000a(%eax,%ecx,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0b9367_data,%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _07cf82_jump
		cmpl   $0x000000,_0ab924_data
		jne    _07cf8a_jump
		call   _07cd78_func
		mov    0x000024(%eax),%edx
		mov    %eax,%ecx
		test   %edx,%edx
		je     _07cef3_jump
		call   _07d3c4_func
		jmp    _07cef8_jump

	_07cef3_jump:
		call   _020064_func

	_07cef8_jump:
		mov    0x000085(%ecx),%ah
		or     $0x000004,%ah
		movswl %si,%edx
		mov    %ah,0x000085(%ecx)
		movswl %di,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _07ce38_func
		test   %al,%al
		je     _07cf24_jump
		mov    $0x000029,%ebx
		jmp    _07cf29_jump

	_07cf24_jump:
		mov    $0x000026,%ebx

	_07cf29_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x000070(%ecx),%dl
		mov    0x000002(%eax,%edx,8),%al
		xor    %edx,%edx
		mov    %al,0x00006e(%ecx)
		movswl %di,%eax
		mov    0x00006c(%ecx),%dl
		sub    %edx,%eax
		mov    $0x000001,%ebx
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		movswl %si,%edx
		mov    0x00006d(%ecx),%al
		movb   $0x000000,0x00006f(%ecx)
		sub    %eax,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01e53c_func
		mov    %ebx,_0ab924_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07cf82_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0ab924_data

	_07cf8a_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07d038_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%dx
		xor    %ebx,%ebx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07d103_jump

	_07d058_jump:
		cmpw   $0x000053,0x000064(%ecx)
		jne    _07d0f3_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07d0f3_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		mov    0x000085(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000085(%ecx)
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _020064_func
		mov    0x00006c(%esi),%bl
		mov    0x000028(%esi),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x00006c(%ecx),%bl
		sub    %ebx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%al
		mov    0x00002c(%esi),%esi
		mov    0x00006d(%ecx),%bl
		add    %eax,%esi
		sub    %ebx,%esi
		mov    %ecx,%eax
		add    $0x00000a,%esi
		xor    %ebx,%ebx
		mov    %esi,0x00002c(%ecx)
		call   _01e53c_func
		mov    0x000071(%ecx),%bl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x000070(%ecx),%al
		mov    0x000002(%ebx,%eax,8),%al
		movb   $0x000000,0x00006f(%ecx)
		movb   $0x000002,0x000077(%ecx)
		mov    %ecx,%ebx
		mov    %al,0x00006e(%ecx)
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d0f3_jump:
		inc    %eax
		add    $0x000088,%ecx
		cmp    %dx,%ax
		jl     _07d058_jump

	_07d103_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d10c_func:
		push   %edx
		mov    %eax,%edx
		call   _07d038_func
		mov    0x000085(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000085(%edx)
		pop    %edx
		ret    



_07d12c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07d1cf_jump

	_07d14a_jump:
		cmpw   $0x00008b,0x000064(%ecx)
		jne    _07d1bf_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07d1bf_jump
		mov    0x000085(%esi),%al
		and    $0x000008,%al
		mov    0x000085(%ecx),%ah
		movw   $0x000000,0x000042(%ecx)
		and    $0x0000f7,%ah
		movw   $0x000000,0x000040(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000085(%ecx)
		or     %al,%dl
		mov    %dl,0x000085(%ecx)
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01e53c_func
		mov    0x000085(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000085(%ecx)
		call   _020064_func
		movb   $0x000000,0x000075(%ecx)
		movb   $0x000007,0x000076(%ecx)
		jmp    _07d1cf_jump

	_07d1bf_jump:
		inc    %eax
		add    $0x000088,%ecx
		cmp    %dx,%ax
		jl     _07d14a_jump

	_07d1cf_jump:
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _065368_func
		cmpb   $0x000014,0x000074(%esi)
		jne    _07d1f6_jump
		mov    0x00005c(%ecx),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%esi)

	_07d1f6_jump:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d20c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0b9320_data,%ax
		mov    0x000028(%edx),%bx
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0b9364_data,%al
		mov    0x00002c(%edx),%cx
		add    %ebx,%eax
		mov    _0b9324_data,%bx
		mov    0x00006d(%edx),%dl
		sub    %ecx,%ebx
		xor    %dh,%dh
		sub    %edx,%ebx
		mov    _0b9365_data,%dl
		add    %ebx,%edx
		test   %ax,%ax
		setg   %cl
		test   %dx,%dx
		setg   %ch
		test   %cl,%cl
		jne    _07d25e_jump
		neg    %eax

	_07d25e_jump:
		test   %ch,%ch
		jne    _07d264_jump
		neg    %edx

	_07d264_jump:
		cmp    $0x0000c8,%ax
		jle    _07d272_jump
		cwtl   
		movswl %dx,%edx
		sar    %eax
		sar    %edx

	_07d272_jump:
		test   %dx,%dx
		jne    _07d28f_jump
		test   %cl,%cl
		je     _07d285_jump
		mov    $0x000180,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d285_jump:
		mov    $0x000080,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d28f_jump:
		cmp    %ax,%dx
		jle    _07d2af_jump
		movswl %ax,%ebx
		shl    $0x000006,%ebx
		movswl %dx,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cwtl   
		mov    _0a7c4c_data(%eax),%al
		jmp    _07d2cc_jump

	_07d2af_jump:
		movswl %dx,%edx
		shl    $0x000006,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000080,%dl
		mov    _0a7c4c_data(%eax),%dh
		mov    %dl,%al
		sub    %dh,%al

	_07d2cc_jump:
		test   %cl,%cl
		je     _07d2e7_jump
		test   %ch,%ch
		je     _07d2db_jump
		mov    $0x000180,%edx
		jmp    _07d2fc_jump

	_07d2db_jump:
		xor    %ah,%ah
		add    $0x000180,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d2e7_jump:
		test   %ch,%ch
		je     _07d2f7_jump
		xor    %ah,%ah
		add    $0x000080,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d2f7_jump:
		mov    $0x000080,%edx

	_07d2fc_jump:
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d308_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0b9408_data,%edx
		movswl (%edx),%ecx
		mov    %ecx,%edx
		shl    $0x000004,%edx
		add    %ecx,%edx
		mov    _0b9410_data,%ecx
		shl    $0x000003,%edx
		xor    %ebx,%ebx
		add    %edx,%ecx
		mov    _0b940c_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07d3bb_jump
		mov    _0b940c_data,%si

	_07d342_jump:
		cmpw   $0x00008f,0x000064(%ecx)
		jne    _07d39a_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07d39a_jump
		mov    $0x000014,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01dea8_func
		orb    $0x000004,0x000085(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _020064_func
		mov    0x000071(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		lea    (%ebx,%edx,1),%eax
		xor    %edx,%edx
		mov    0x000070(%ecx),%dl
		lea    0x000000(,%edx,8),%ebx
		mov    (%eax),%edx
		mov    0x000002(%edx,%ebx,1),%al
		movb   $0x000000,0x00006f(%ecx)
		mov    %ecx,%ebx
		mov    %al,0x00006e(%ecx)
		jmp    _07d3bb_jump

	_07d39a_jump:
		inc    %eax
		mov    _0b9408_data,%edx
		movswl %ax,%ecx
		movswl (%edx,%ecx,2),%ecx
		imul   $0x000088,%ecx,%ecx
		mov    _0b9410_data,%edx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _07d342_jump

	_07d3bb_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d3c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		cmpw   $0x000001,_0c309e_data
		je     _07d496_jump
		call   _07d308_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _07d496_jump
		mov    0x000028(%edi),%edx
		mov    %edx,0x000028(%eax)
		mov    0x00002c(%edi),%edx
		mov    %edx,0x00002c(%eax)
		lea    0x000004(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x000018(%esp),%ebx
		lea    0x00001c(%esp),%edx
		call   _01ddf8_func
		lea    0x00001c(%esp),%edx
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000014(%esp),%edx
		call   _01ddf8_func
		movl   $0x000001,0x000024(%esi)
		mov    0x000006(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		mov    -0x000002(%esp),%edx
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    %edx
		add    %ecx,%edx
		sub    %edx,%ebx
		add    %ebx,0x000028(%esi)
		mov    0x00001a(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		lea    (%ebx,%edx,1),%ecx
		mov    0x000002(%esp),%edx
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		movb   $0x000001,0x000082(%esi)
		add    %ebx,%edx
		mov    0x00002c(%esi),%ebx
		sub    %edx,%ecx
		movw   $0x000000,0x000050(%esi)
		add    %ecx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01e53c_func

	_07d496_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_07d4a0_switch:
		.long   _07d5aa_case
		.long   _07d578_case
		.long   _07d57e_case
		.long   _07d58a_case
		.long   _07d590_case




_07d4b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		cmpw   $0x000001,_0c309e_data
		je     _07d5ea_jump
		xor    %ebx,%ebx
		mov    %ebx,0x000020(%esp)

	_07d4d3_jump:
		call   _07d308_func
		mov    %eax,%esi
		mov    %eax,%edi
		test   %eax,%eax
		je     _07d5d7_jump
		mov    0x000028(%ebp),%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%ebp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %eax,0x00002c(%esi)
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		lea    0x000014(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%edx
		mov    %ebp,%eax
		call   _01ddf8_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %eax,%edx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %eax,%ebx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		mov    0x000020(%esp),%ebx
		movl   $0x000001,0x000024(%esi)
		cmp    $0x000004,%bx
		ja     _07d5aa_case
		xor    %ebx,%ebx
		mov    0x000020(%esp),%bx
		jmp    *%cs:_07d4a0_switch(,%ebx,4)

	_07d578_case:
		add    0x000008(%esp),%edx
		jmp    _07d5aa_case

	_07d57e_case:
		mov    0x000008(%esp),%esi
		mov    0x000014(%esp),%ebx
		add    %esi,%edx
		jmp    _07d5a8_jump

	_07d58a_case:
		add    0x000014(%esp),%eax
		jmp    _07d5aa_case

	_07d590_case:
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		movswl %dx,%edx
		sar    %ebx
		add    %ebx,%edx
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		cwtl   
		sar    %ebx

	_07d5a8_jump:
		add    %ebx,%eax

	_07d5aa_case:
		cwtl   
		mov    0x00002c(%edi),%ecx
		mov    0x000020(%esp),%esi
		add    %eax,%ecx
		imul   $0x000005,%esi,%eax
		movswl %dx,%edx
		mov    0x000028(%edi),%ebx
		movb   $0x000000,0x000082(%edi)
		add    %edx,%ebx
		mov    %ebx,0x000028(%edi)
		mov    %ax,0x000050(%edi)
		mov    %edi,%eax
		mov    %ecx,0x00002c(%edi)
		call   _01e53c_func

	_07d5d7_jump:
		mov    0x000020(%esp),%ecx
		inc    %ecx
		mov    %ecx,0x000020(%esp)
		cmp    $0x000004,%cx
		jle    _07d4d3_jump

	_07d5ea_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d5f4_func:
		push   %ebx
		push   %edx
		call   _07d308_func
		test   %eax,%eax
		je     _07d647_jump
		movb   $0x000000,0x000082(%eax)
		mov    _0c3160_data,%edx
		movb   $0x00000a,0x000083(%eax)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x00006c(%eax),%bl
		movw   $0x0000ff,0x000050(%eax)
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%eax)
		mov    _0c3164_data,%edx
		mov    0x00006d(%eax),%bl
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%eax)
		add    %ebx,%edx
		mov    %edx,0x00002c(%eax)
		mov    0x000034(%eax),%ax
		pop    %edx
		pop    %ebx
		ret    

	_07d647_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

_07d650_switch:
		.long   _07d983_case
		.long   _07d74b_case
		.long   _07d75c_case
		.long   _07d76d_case
		.long   _07d77e_case
		.long   _07d78f_case
		.long   _07d7a0_case
		.long   _07d7b1_case
		.long   _07d7c2_case
		.long   _07d7d3_case
		.long   _07d7e4_case
		.long   _07d7f5_case
		.long   _07d806_case
		.long   _07d817_case
		.long   _07d828_case
		.long   _07d839_case
		.long   _07d84a_case
		.long   _07d85b_case
		.long   _07d86c_case
		.long   _07d877_case
		.long   _07d888_case
		.long   _07d899_case
		.long   _07d8aa_case
		.long   _07d8bb_case
		.long   _07d8cc_case
		.long   _07d8dd_case
		.long   _07d8ee_case
		.long   _07d8ff_case
		.long   _07d910_case
		.long   _07d921_case
		.long   _07d92f_case
		.long   _07d93d_case
		.long   _07d94b_case
		.long   _07d959_case
		.long   _07d967_case
		.long   _07d975_case




_07d6e0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %dx,(%esp)
		mov    %ebx,%esi
		mov    _0b9410_data,%ebx
		mov    _0b9414_data,%ax
		xor    %ecx,%ecx
		test   %ax,%ax
		jle    _07da16_jump

	_07d706_jump:
		cmpw   $0x000092,0x000064(%ebx)
		jne    _07da06_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _07da06_jump
		mov    0x000085(%ebx),%ah
		mov    $0x000024,%ebp
		and    $0x0000f7,%ah
		movswl %si,%edx
		mov    %ah,0x000085(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		cmp    $0x000023,%edx
		ja     _07d983_case
		jmp    *%cs:_07d650_switch(,%edx,4)

	_07d74b_case:
		movw   $0x0000fc,0x00005c(%ebx)
		movw   $0x00ffd4,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d75c_case:
		movw   $0x0000f0,0x00005c(%ebx)
		movw   $0x00ffa9,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d76d_case:
		movw   $0x0000dd,0x00005c(%ebx)
		movw   $0x00ff80,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d77e_case:
		movw   $0x0000c4,0x00005c(%ebx)
		movw   $0x00ff5c,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d78f_case:
		movw   $0x0000a4,0x00005c(%ebx)
		movw   $0x00ff3c,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d7a0_case:
		movw   $0x000080,0x00005c(%ebx)
		movw   $0x00ff23,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d7b1_case:
		movw   $0x000057,0x00005c(%ebx)
		movw   $0x00ff10,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d7c2_case:
		movw   $0x00002c,0x00005c(%ebx)
		movw   $0x00ff04,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d7d3_case:
		movw   $0x00ff04,0x00005c(%ebx)
		movw   $0x00ffd4,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d7e4_case:
		movw   $0x00ff10,0x00005c(%ebx)
		movw   $0x00ffa9,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d7f5_case:
		movw   $0x00ff23,0x00005c(%ebx)
		movw   $0x00ff80,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d806_case:
		movw   $0x00ff3c,0x00005c(%ebx)
		movw   $0x00ff5c,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d817_case:
		movw   $0x00ff5c,0x00005c(%ebx)
		movw   $0x00ff3c,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d828_case:
		movw   $0x00ff80,0x00005c(%ebx)
		movw   $0x00ff23,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d839_case:
		movw   $0x00ffa9,0x00005c(%ebx)
		movw   $0x00ff10,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d84a_case:
		movw   $0x00ffd4,0x00005c(%ebx)
		movw   $0x00ff04,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d85b_case:
		movw   $0x000000,0x00005c(%ebx)
		movw   $0x00ff00,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d86c_case:
		movw   $0x00ff00,0x00005c(%ebx)
		jmp    _07d989_jump

	_07d877_case:
		movw   $0x00ff04,0x00005c(%ebx)
		movw   $0x00002c,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d888_case:
		movw   $0x00ff10,0x00005c(%ebx)
		movw   $0x000057,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d899_case:
		movw   $0x00ff23,0x00005c(%ebx)
		movw   $0x000080,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d8aa_case:
		movw   $0x00ff3c,0x00005c(%ebx)
		movw   $0x0000a4,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d8bb_case:
		movw   $0x00ff5c,0x00005c(%ebx)
		movw   $0x0000c4,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d8cc_case:
		movw   $0x00ff80,0x00005c(%ebx)
		movw   $0x0000dd,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d8dd_case:
		movw   $0x00ffa9,0x00005c(%ebx)
		movw   $0x0000f0,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d8ee_case:
		movw   $0x00ffd4,0x00005c(%ebx)
		movw   $0x0000fc,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d8ff_case:
		movw   $0x0000fc,0x00005c(%ebx)
		movw   $0x00002c,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d910_case:
		movw   $0x0000f0,0x00005c(%ebx)
		movw   $0x000057,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d921_case:
		movw   $0x0000dd,0x00005c(%ebx)
		movw   $0x000080,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d92f_case:
		movw   $0x0000c4,0x00005c(%ebx)
		movw   $0x0000a4,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d93d_case:
		movw   $0x0000a4,0x00005c(%ebx)
		movw   $0x0000c4,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d94b_case:
		movw   $0x000080,0x00005c(%ebx)
		movw   $0x0000dd,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d959_case:
		movw   $0x000057,0x00005c(%ebx)
		movw   $0x0000f0,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d967_case:
		movw   $0x00002c,0x00005c(%ebx)
		movw   $0x0000fc,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d975_case:
		movw   $0x000000,0x00005c(%ebx)
		movw   $0x000100,0x00004a(%ebx)
		jmp    _07d98f_jump

	_07d983_case:
		movw   $0x000100,0x00005c(%ebx)

	_07d989_jump:
		movw   $0x000000,0x00004a(%ebx)

	_07d98f_jump:
		movswl %si,%edx
		mov    $0x000024,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		movw   $0x000000,0x000040(%ebx)
		movswl %di,%eax
		mov    %eax,0x000028(%ebx)
		mov    -0x000002(%esp),%eax
		movw   $0x000000,0x000042(%ebx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ebx)
		mov    0x00005c(%ebx),%ax
		mov    %ax,0x00003c(%ebx)
		mov    0x00004a(%ebx),%ax
		mov    %ax,0x00003e(%ebx)
		mov    %ebx,%eax
		mov    %dl,0x00007a(%ebx)
		call   _01e53c_func
		mov    0x000085(%ebx),%dl
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%dl
		mov    %ebx,%eax
		mov    %dl,0x000085(%ebx)
		call   _020064_func
		mov    $0x0000cd,%eax
		movswl %cx,%edx
		call   _071068_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07da06_jump:
		inc    %ecx
		add    $0x000088,%ebx
		cmp    %ax,%cx
		jl     _07d706_jump

	_07da16_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07da20_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    _0c1144_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _07da61_jump
		mov    _0c312a_data,%edx
		mov    _0c3126_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %eax,%edx
		mov    _0c313c_data,%eax
		mov    _0c3128_data,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edi
		sar    %eax
		jmp    _07da77_jump

	_07da61_jump:
		xor    %edx,%edx
		mov    0x000028(%eax),%di
		mov    0x00006c(%eax),%dl
		add    %edi,%edx
		movzbl 0x00006d(%eax),%edi
		add    %edi,%edi
		mov    0x00002c(%eax),%eax
		sar    %edi

	_07da77_jump:
		add    %edi,%eax
		mov    0x000028(%esi),%di
		sub    %edi,%edx
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    (%esp),%edi
		mov    0x00006c(%esi),%dl
		sub    %edx,%edi
		mov    %di,0x000000(%ebp)
		xor    %edx,%edx
		movzbl 0x000078(%esi),%edi
		mov    0x00006d(%esi),%dl
		add    %edx,%edi
		mov    0x00002c(%esi),%ebp
		sar    %edi
		cwtl   
		add    %ebp,%edi
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _07daad_jump
		neg    %eax

	_07daad_jump:
		mov    %ax,(%ebx)
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		shl    $0x000002,%eax
		mov    %ax,(%ecx)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_07dac4_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    $0xffffffff,%ebx
		xor    %eax,%eax

	_07dace_jump:
		movswl %ax,%edx
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0b5aa0_data(%edx)
		jne    _07daf1_jump
		mov    $0x000001,%esi
		mov    %eax,%ebx
		mov    %si,_0b5aa0_data(%edx)
		jmp    _07daf8_jump

	_07daf1_jump:
		inc    %eax
		cmp    $0x000008,%ax
		jl     _07dace_jump

	_07daf8_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_07db00_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%edi
		mov    %edx,%ecx
		call   _07dac4_func
		movswl %ax,%edx
		mov    %ax,0x000014(%esp)
		cmp    $0xffffffff,%edx
		je     _07dc04_jump
		lea    0x000000(,%edx,4),%eax
		shl    $0x000006,%edi
		shl    $0x000006,%ecx
		shl    $0x000003,%bl
		xor    %esi,%esi
		mov    %edi,(%esp)
		mov    %ecx,0x000010(%esp)
		mov    %bl,0x000018(%esp)
		add    %edx,%eax
		mov    $0x000040,%ebx
		mov    $0x000020,%ecx
		mov    $0x000080,%edi
		shl    $0x000006,%eax
		mov    %di,0x00000c(%esp)
		add    %edx,%eax
		mov    $_0b5820_data,%edx
		add    %eax,%eax
		mov    $0x000100,%edi
		add    %eax,%edx
		jmp    _07dbe6_jump

	_07db69_jump:
		mov    (%esp),%eax
		mov    %ax,(%edx)
		mov    0x000010(%esp),%eax
		mov    %ax,0x000002(%edx)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		call   _06a9a0_func
		sub    %edi,%eax
		mov    %eax,0x000004(%esp)
		movswl %bx,%eax
		call   _06a9a0_func
		sub    %ecx,%eax
		add    $0x000002,%edx
		mov    %ax,0x000002(%edx)
		mov    0x000004(%esp),%eax
		mov    %ax,0x000004(%edx)
		mov    $0x000008,%eax
		add    $0x000002,%edx
		call   _06a9a0_func
		mov    %ax,0x000008(%esp)
		add    $0x000002,%edx
		mov    0x000008(%esp),%al
		add    $0x000002,%edx
		add    $0x000008,%al
		inc    %esi
		mov    %al,(%edx)
		mov    0x000018(%esp),%al
		add    $0x000002,%edx
		add    $0x000080,%al
		add    $0x000002,%edi
		mov    %al,-0x000001(%edx)
		mov    0x00000c(%esp),%eax
		add    $0x000004,%ebx
		add    $0x000004,%eax
		add    $0x000002,%ecx
		mov    %ax,0x00000c(%esp)

	_07dbe6_jump:
		mov    0x000012(%esp),%ebp
		sar    $0x000010,%ebp
		mov    $0x000040,%eax
		shl    $0x000003,%ebp
		sub    %ebp,%eax
		mov    %eax,%ebp
		movswl %si,%eax
		cmp    %ebp,%eax
		jl     _07db69_jump

	_07dc04_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07dc0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0c0e90_data,%ebp
		mov    _0c3148_data,%ax
		mov    _0c314e_data,%di
		xor    %edx,%edx
		shl    $0x000006,%eax
		shl    $0x000006,%edi
		mov    %dx,0x000004(%esp)
		mov    %eax,(%esp)

	_07dc38_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000282,%eax,%eax
		cmpw   $0x000001,_0b5aa0_data(%eax)
		jne    _07dce1_jump
		add    $_0b5820_data,%eax
		xor    %esi,%esi
		xor    %edx,%edx

	_07dc5c_jump:
		cmpb   $0x000080,0x000009(%eax)
		jb     _07dcc3_jump
		mov    (%esp),%ecx
		mov    0x000004(%eax),%bx
		sub    %ecx,%ebx
		add    %bx,(%eax)
		mov    0x000006(%eax),%bx
		mov    0x000002(%eax),%cx
		sub    %edi,%ebx
		add    %ebx,%ecx
		mov    %cx,0x000002(%eax)
		mov    _0c0e98_data,%ecx
		movswl (%eax),%ebx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jg     _07dca9_jump
		mov    _0c0ea4_data,%ecx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jl     _07dca9_jump
		mov    (%eax),%ecx
		mov    %ebp,%ebx
		sar    $0x000010,%ecx
		shl    $0x000006,%ebx
		cmp    %ebx,%ecx
		jle    _07dcaf_jump

	_07dca9_jump:
		movb   $0x000000,0x000009(%eax)
		jmp    _07dcb4_jump

	_07dcaf_jump:
		mov    $0x000001,%esi

	_07dcb4_jump:
		xor    %ebx,%ebx
		mov    0x000006(%eax),%cx
		mov    0x000008(%eax),%bl
		add    %ebx,%ecx
		mov    %cx,0x000006(%eax)

	_07dcc3_jump:
		inc    %edx
		add    $0x00000a,%eax
		cmp    $0x000040,%dx
		jl     _07dc5c_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000282,%eax,%eax
		mov    %si,_0b5aa0_data(%eax)

	_07dce1_jump:
		mov    0x000004(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000004(%esp)
		cmp    $0x000008,%bx
		jl     _07dc38_jump
		mov    %ebp,_0c0e90_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07dd08_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		call   _065368_func
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0c1d74_data,%eax
		movw   $0x000001,0x000052(%ecx)
		mov    (%edx,%eax,1),%ax
		cmp    0x000034(%ecx),%ax
		je     _07dd72_jump
		movswl %ax,%ecx
		mov    %ecx,%eax
		shl    $0x000004,%eax
		add    %ecx,%eax
		mov    _0b9410_data,%ecx
		shl    $0x000003,%eax
		add    %eax,%ecx
		cmpw   $0x0000a8,0x000064(%ecx)
		jne    _07dd72_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _065368_func
		movw   $0x000001,0x000052(%ecx)

	_07dd72_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07dd78_func:
		push   %edx
		cmpb   $0x000000,_0c33cb_data
		jne    _07dd9d_jump
		mov    _0c3156_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		setne  %al
		mov    %dl,_0c339b_data
		mov    %al,_0c33d9_data

	_07dd9d_jump:
		pop    %edx
		ret    



_07dda0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000015,%edx
		call   _01de98_func
		mov    _0c3152_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		cmpb   $0x00000a,0x00007a(%eax)
		jne    _07ddd4_jump
		movb   $0x000005,0x00007a(%eax)
		jmp    _07dde4_jump

	_07ddd4_jump:
		mov    $0x000017,%ebx
		xor    %edx,%edx
		movb   $0x000001,0x00007a(%eax)
		call   _01dea8_func

	_07dde4_jump:
		mov    _0b9410_data,%edx
		mov    _0b9414_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _07de49_jump

	_07ddf8_jump:
		cmpw   $0x0000de,0x000064(%edx)
		jne    _07de3d_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _07de3d_jump
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		movw   $0x000001,0x000042(%edx)
		mov    0x000085(%edx),%bl
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%bl
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    %bl,0x000085(%edx)
		call   _020064_func
		movb   $0x000004,0x000076(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07de3d_jump:
		inc    %eax
		add    $0x000088,%edx
		cmp    %bx,%ax
		jl     _07ddf8_jump

	_07de49_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07de50_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    _0b9410_data,%edx
		mov    _0b9414_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _07deb4_jump

	_07de6b_jump:
		cmpw   $0x0000dd,0x000064(%edx)
		jne    _07dea8_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _07dea8_jump
		movswl %cx,%eax
		sub    $0x00008e,%eax
		mov    %eax,0x000028(%edx)
		movswl %si,%eax
		sub    $0x000080,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _020064_func
		orb    $0x000004,0x000085(%edx)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07dea8_jump:
		inc    %eax
		add    $0x000088,%edx
		cmp    %bx,%ax
		jl     _07de6b_jump

	_07deb4_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07deb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c3134_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		jne    _07ded2_jump
		xor    %eax,%eax
		jmp    _07df68_jump

	_07ded2_jump:
		movswl %ax,%ecx
		lea    0x000032(%ecx),%edx
		mov    $0x000065,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000005,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		imul   $0x000065,%ebx,%eax
		add    %esi,%edx
		sub    %eax,%ecx
		movswl %dx,%edx
		mov    %ecx,%eax
		mov    $0x000033,%ecx
		test   %eax,%eax
		jge    _07df0c_jump
		neg    %eax

	_07df0c_jump:
		sub    %eax,%ecx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006e(%ebx),%al
		mov    _0a7c42_data(,%eax,2),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00006f(%ebx),%al
		add    %eax,%edx
		mov    $0x00000e,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %dx,%eax
		mov    _0a7c26_data(,%eax,2),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    $0x000032,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00002c(%ebx),%edx
		sub    %eax,%edx
		mov    %edx,%eax

	_07df68_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07df70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ebx
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07e018_jump

	_07df8e_jump:
		cmpw   $0x000085,0x000064(%ecx)
		jne    _07e008_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07e008_jump
		orb    $0x000004,0x000085(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _020064_func
		mov    0x000028(%ebx),%eax
		mov    %eax,0x000028(%ecx)
		mov    $0x000002,%edx
		mov    0x00002c(%ebx),%ebx
		mov    %ecx,%eax
		mov    %ebx,0x00002c(%ecx)
		mov    $0x000012,%ebx
		call   _01dea8_func
		mov    _0c3162_data,%di
		mov    0x000028(%ecx),%ax
		sub    %edi,%eax
		mov    %ax,0x000036(%ecx)
		mov    _0c3166_data,%dx
		mov    0x00002c(%ecx),%ax
		movw   $0x00fffe,0x000042(%ecx)
		sub    %edx,%eax
		mov    %ax,0x000038(%ecx)
		mov    %ecx,%eax
		movw   $0x000001,0x000040(%ecx)
		call   _01e53c_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e008_jump:
		inc    %eax
		add    $0x000088,%ecx
		cmp    %dx,%ax
		jl     _07df8e_jump

	_07e018_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e020_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0b9410_data,%eax
		mov    _0b9414_data,%cx
		xor    %ebx,%ebx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _07e057_jump

	_07e03b_jump:
		cmpw   $0x00004b,0x000064(%eax)
		jne    _07e04c_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _07e04c_jump
		mov    %eax,%ebx
		jmp    _07e057_jump

	_07e04c_jump:
		inc    %edx
		add    $0x000088,%eax
		cmp    %cx,%dx
		jl     _07e03b_jump

	_07e057_jump:
		test   %ebx,%ebx
		jne    _07e069_jump
		mov    $0x00004b,%eax
		call   _01db84_func
		mov    %eax,%ebx
		jmp    _07e070_jump

	_07e069_jump:
		mov    %ebx,%eax
		call   _020064_func

	_07e070_jump:
		mov    0x000085(%ebx),%ah
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%ah
		mov    %ah,0x000085(%ebx)
		mov    0x000085(%ebx),%dl
		movw   $0x000000,0x000062(%ebx)
		and    $0x0000bf,%dl
		mov    %dl,0x000085(%ebx)
		mov    0x000028(%esi),%eax
		sub    $0x000028,%eax
		mov    %eax,0x000028(%ebx)
		mov    0x00002c(%esi),%eax
		movb   $0x000000,0x00006e(%ebx)
		movb   $0x000001,0x00006f(%ebx)
		movb   $0x000000,0x000071(%ebx)
		movb   $0x000000,0x000073(%ebx)
		sub    $0x000014,%eax
		movb   $0x000000,0x000072(%ebx)
		mov    %eax,0x00002c(%ebx)
		mov    %ebx,%eax
		movb   $0x000000,0x000070(%ebx)
		call   _01e53c_func
		mov    $0x00005e,%eax
		call   _071754_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e0dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c30f4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07e118_jump
		movw   $0x00ffff,_0c30f6_data
		call   _05cd2c_func
		mov    _0c30f4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		andb   $0x0000fb,0x000085(%edx,%eax,8)

	_07e118_jump:
		mov    _0c310a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07e155_jump
		mov    $0xffffffff,%ebx
		mov    _0b9410_data,%eax
		mov    %bx,_0c310c_data
		mov    -0x000003(%eax),%ch
		sub    $0x000088,%eax
		mov    $0x000004,%bh
		and    $0x0000fb,%ch
		mov    %bh,_0b9372_data
		mov    %bh,_0c2f49_data
		mov    %ch,0x000085(%eax)

	_07e155_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e160_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000050,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%edx
		mov    _0e0b90_data,%eax
		mov    %eax,0x000030(%esp)
		mov    0x000014(%eax),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000044(%esp)
		mov    0x000030(%esp),%eax
		mov    %cx,%bx
		movw   $0x000000,(%eax)
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _07e195_jump
		mov    %ebx,%eax

	_07e195_jump:
		mov    0x000030(%esp),%ebx
		mov    %ax,0x000002(%ebx)
		test   %dx,%dx
		jl     _07e1b2_jump
		mov    $0x000001,%eax
		movswl %dx,%ebx
		cmp    %ebx,%eax
		jge    _07e1b0_jump
		mov    %ebx,%eax

	_07e1b0_jump:
		jmp    _07e1c4_jump

	_07e1b2_jump:
		movswl %dx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _07e1c2_jump
		mov    %ebx,%eax

	_07e1c2_jump:
		neg    %eax

	_07e1c4_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x00000c(%edx)
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _07e1d8_jump
		mov    %di,0x000004(%edx)

	_07e1d8_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _07e1e8_jump
		mov    0x000030(%esp),%eax
		mov    %si,0x000006(%eax)

	_07e1e8_jump:
		mov    0x000030(%esp),%eax
		xor    %ebx,%ebx
		mov    0x00000e(%eax),%bx
		mov    $0x00013f,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000030(%esp),%eax
		mov    0x000002(%eax),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _07e20b_jump
		mov    %ebx,%eax

	_07e20b_jump:
		mov    0x000030(%esp),%ebx
		xor    %edx,%edx
		mov    0x00000e(%ebx),%dx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    0x000030(%esp),%edx
		cmp    %ebx,%eax
		jge    _07e223_jump
		mov    %ebx,%eax

	_07e223_jump:
		xor    %ebx,%ebx
		mov    0x00000e(%edx),%bx
		mov    %ax,0x000004(%edx)
		mov    $0x0000c7,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000004(%edx),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _07e242_jump
		mov    %ebx,%eax

	_07e242_jump:
		mov    0x000030(%esp),%ebx
		xor    %edx,%edx
		mov    0x00000e(%ebx),%dx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    0x000030(%esp),%edx
		cmp    %ebx,%eax
		jge    _07e25a_jump
		mov    %ebx,%eax

	_07e25a_jump:
		mov    %ax,0x000006(%edx)
		call   _087563_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _07e271_jump
		mov    0x00000c(%edx),%ax
		jmp    _07e277_jump

	_07e271_jump:
		mov    0x00000c(%edx),%ax
		neg    %eax

	_07e277_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x000008(%edx)
		call   _087563_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _07e292_jump
		mov    0x00000c(%edx),%ax
		jmp    _07e298_jump

	_07e292_jump:
		mov    0x00000c(%edx),%ax
		neg    %eax

	_07e298_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x00000a(%edx)
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _07e546_jump
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _07e546_jump
		xor    %esi,%esi
		mov    0x00000e(%edx),%si
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		add    %eax,%eax
		call   _085498_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x40590000,%edx
		xor    %eax,%eax
		call   _0867d0_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _085695_func
		mov    %eax,0x000020(%esp)
		mov    %esi,%eax
		neg    %eax
		mov    %edx,0x000024(%esp)
		call   _085498_func
		jmp    _07e518_jump

	_07e302_jump:
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _085695_func
		mov    %edx,0x00002c(%esp)
		mov    0x000030(%esp),%edx
		mov    %eax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		neg    %eax
		call   _085498_func
		jmp    _07e4de_jump

	_07e331_jump:
		mov    %esi,%eax
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _085695_func
		mov    0x000028(%esp),%ebx
		mov    0x00002c(%esp),%ecx
		call   _0854de_func
		call   _086442_func
		mov    %eax,0x00004c(%esp)
		mov    %edx,%ebp
		mov    0x000020(%esp),%eax
		mov    0x000024(%esp),%edx
		mov    0x00004c(%esp),%ebx
		mov    %ebp,%ecx
		call   _0869d6_func
		call   _085695_func
		mov    0x00004c(%esp),%ebx
		mov    %ebp,%ecx
		call   _085695_func
		call   _08b5d1_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _085695_func
		mov    %eax,0x00000c(%esp)
		mov    %edx,0x000038(%esp)
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _08bb2c_func
		jne    _07e3d0_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		call   _08bb2c_func
		jne    _07e3d0_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%ebp
		mov    %esi,0x000034(%esp)
		mov    %edi,0x00003c(%esp)
		mov    %eax,0x000040(%esp)
		jmp    _07e48c_jump

	_07e3d0_jump:
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _08bbfc_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _086789_func
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000008(%esp)
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _086762_func
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    %eax,0x00001c(%esp)
		mov    %edx,(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _085695_func
		mov    0x00001c(%esp),%ebx
		mov    (%esp),%ecx
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    0x00000c(%esp),%eax
		mov    0x000038(%esp),%edx
		call   _085695_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000010(%esp),%eax
		mov    0x000014(%esp),%edx
		call   _0854d8_func
		mov    0x00001c(%esp),%ebx
		mov    (%esp),%ecx
		mov    %eax,0x000034(%esp)
		mov    %edx,0x00003c(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _085695_func
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    %eax,0x000014(%esp)
		mov    %edx,%ebp
		mov    0x00000c(%esp),%eax
		mov    0x000038(%esp),%edx
		call   _085695_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000014(%esp),%eax
		mov    %ebp,%edx
		call   _0854de_func
		mov    %eax,0x000040(%esp)
		mov    %edx,%ebp

	_07e48c_jump:
		mov    0x000034(%esp),%eax
		mov    0x00003c(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _0854d8_func
		call   _0864a4_func
		mov    0x000044(%esp),%edx
		mov    0x000048(%esp),%ebx
		mov    0x000018(%esp),%ecx
		mov    %al,(%edx)
		mov    0x000040(%esp),%eax
		mov    %ebp,%edx
		call   _0854d8_func
		call   _0864a4_func
		mov    0x000044(%esp),%edx
		add    $0x000002,%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		mov    %al,-0x000001(%edx)
		mov    %edx,0x000044(%esp)
		mov    %esi,%eax
		mov    %edi,%edx
		call   _0854de_func

	_07e4de_jump:
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x000030(%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _0854a5_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _08bb2c_func
		jle    _07e331_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		call   _0854de_func

	_07e518_jump:
		mov    %eax,0x000048(%esp)
		mov    %edx,0x000018(%esp)
		mov    0x000030(%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _0854a5_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		call   _08bb2c_func
		jle    _07e302_jump

	_07e546_jump:
		add    $0x000050,%esp
		pop    %ebp
		pop    %edi
		pop    %esi

	_07e54c_jump:
		ret    

	_07e550_case:
		mov    _0e0b90_data,%eax
		test   %eax,%eax
		je     _07e54c_jump
		cmpl   $0x000000,0x000014(%eax)
		je     _07e567_jump
		add    $0x000014,%eax
		call   _0852ac_func

	_07e567_jump:
		cmpl   $0x000000,_0e0b90_data
		je     _07e54c_jump
		mov    $_0e0b90_data,%eax
		jmp    _0852ac_func



_07e57c_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    0x000020(%esp),%esi
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		mov    %cx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x00000c(%esp)
		test   %esi,%esi
		je     _07e647_jump
		cmpl   $0x000000,0x000024(%esp)
		je     _07e647_jump
		mov    $0x000020,%eax
		call   _085294_func
		mov    %eax,%edx
		mov    %eax,_0e0b90_data
		test   %eax,%eax
		je     _07e647_jump
		xor    %eax,%eax
		mov    %bx,%ax
		mov    $0x000030,%ebx
		cmp    %ebx,%eax
		jle    _07e5d5_jump
		mov    %ebx,%eax

	_07e5d5_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _07e5e2_jump
		mov    %ebx,%eax

	_07e5e2_jump:
		mov    %ax,0x00000e(%edx)
		add    %eax,%eax
		inc    %eax
		mov    %ax,0x000010(%edx)
		mov    0x00000e(%edx),%ax
		add    %eax,%eax
		mov    $0x00fa00,%ecx
		inc    %eax
		mov    _0c0f44_data,%edi
		mov    %ax,0x000012(%edx)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07e60d_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07e60d_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _07e616_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_07e616_jump:
		mov    _0c0f44_data,%eax
		mov    %eax,0x000018(%edx)
		mov    0x000024(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%edx)
		xor    %eax,%eax
		mov    0x000012(%edx),%bx
		mov    0x000010(%edx),%ax
		imul   %ebx,%eax
		add    %eax,%eax
		call   _085294_func
		mov    %eax,0x000014(%edx)
		test   %eax,%eax
		je     _07e647_jump
		movb   $0x000001,0x00000c(%esp)

	_07e647_jump:
		cmpb   $0x000000,0x00000c(%esp)
		je     _07e671_jump
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%edx
		xor    %ecx,%ecx
		mov    0x000002(%esp),%eax
		mov    0x00001c(%esp),%cx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _07e160_func
		jmp    _07e676_jump

	_07e671_jump:
		call   _07e550_case

	_07e676_jump:
		mov    0x00000c(%esp),%al
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_07e684_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e0b90_data,%edx
		mov    0x000008(%edx),%ax
		add    %ax,0x000004(%edx)
		mov    0x000006(%edx),%cx
		mov    0x00000a(%edx),%ax
		mov    0x000002(%edx),%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		mov    %cx,0x000006(%edx)
		cmp    $0x000140,%eax
		jl     _07e6d3_jump
		mov    $0x00013f,%ebx
		mov    0x00000e(%edx),%ax
		mov    0x000008(%edx),%si
		sub    %eax,%ebx
		neg    %esi
		mov    %bx,0x000004(%edx)
		mov    %si,0x000008(%edx)

	_07e6d3_jump:
		mov    0x000002(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _07e6f3_jump
		mov    0x000008(%edx),%di
		mov    %ax,0x000004(%edx)
		neg    %edi
		mov    %di,0x000008(%edx)

	_07e6f3_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		cmp    $0x0000c8,%eax
		jl     _07e721_jump
		mov    $0x0000c7,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		mov    0x00000a(%edx),%ax
		mov    %bx,0x000006(%edx)
		neg    %eax
		mov    %ax,0x00000a(%edx)

	_07e721_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _07e741_jump
		mov    0x00000a(%edx),%bx
		mov    %ax,0x000006(%edx)
		neg    %ebx
		mov    %bx,0x00000a(%edx)

	_07e741_jump:
		mov    0x00000a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07e74d_jump
		neg    %eax

	_07e74d_jump:
		mov    (%edx),%cx
		add    %eax,%ecx
		mov    0x000002(%edx),%si
		mov    %cx,(%edx)
		cmp    %si,%cx
		jbe    _07e763_jump
		movw   $0x000000,(%edx)

	_07e763_jump:
		mov    (%edx),%ax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e76c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e0b90_data,%ebp
		mov    $0x00fa00,%ecx
		xor    %ebx,%ebx
		mov    0x00001c(%ebp),%edi
		mov    0x000018(%ebp),%esi
		mov    0x000014(%ebp),%edx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07e795_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07e795_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _07e79e_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_07e79e_jump:
		mov    0x000002(%ebp),%eax
		mov    0x000004(%ebp),%ecx
		mov    0x00000e(%ebp),%bx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sub    %ebx,%ecx
		sub    %ebx,%eax
		mov    %ecx,%ebx
		mov    %ecx,0x000004(%esp)
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000018(%ebp),%esi
		mov    0x00001c(%ebp),%ecx
		add    %eax,%esi
		add    %eax,%ecx
		xor    %eax,%eax
		mov    $0x000140,%ebx
		mov    0x000010(%ebp),%ax
		sub    %eax,%ebx
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		mov    %ebx,0x000004(%esp)
		jmp    _07e820_jump

	_07e7e4_jump:
		xor    %edi,%edi
		jmp    _07e806_jump

	_07e7e8_jump:
		movsbl 0x000001(%edx),%ebx
		movsbl (%edx),%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		inc    %esi
		inc    %ecx
		add    $0x000002,%edx
		mov    -0x000001(%esi,%eax,1),%al
		inc    %edi
		mov    %al,-0x000001(%ecx)

	_07e806_jump:
		xor    %eax,%eax
		mov    0x000010(%ebp),%ax
		cmp    %eax,%edi
		jl     _07e7e8_jump
		mov    0x000004(%esp),%edi
		mov    (%esp),%eax
		inc    %edi
		add    %eax,%esi
		add    %eax,%ecx
		mov    %edi,0x000004(%esp)

	_07e820_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x000012(%ebp),%ax
		cmp    %edi,%eax
		jg     _07e7e4_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e840_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000074(%eax),%al
		cmp    $0x000001,%al
		ja     _07e8f2_jump
		test   %al,%al
		jne    _07e85d_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _07e864_jump

	_07e85d_jump:
		orb    $0x000008,0x000085(%ecx)

	_07e864_jump:
		mov    %ecx,%eax
		call   _05a530_func
		cmpb   $0x000000,0x000071(%ecx)
		jne    _07e87f_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01dea8_func

	_07e87f_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02346c_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _07e8e4_jump
		cmpb   $0x000000,0x000074(%ecx)
		jne    _07e8b7_jump
		mov    0x000085(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000008,%ah
		mov    $0x000005,%edx
		mov    %ah,0x000085(%ecx)
		jmp    _07e8cf_jump

	_07e8b7_jump:
		mov    0x000085(%ecx),%al
		mov    $0x000001,%ebx
		and    $0x0000f7,%al
		mov    $0x000004,%edx
		mov    %al,0x000085(%ecx)

	_07e8cf_jump:
		mov    %ecx,%eax
		call   _065368_func
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_07e8e4_jump:
		mov    %ecx,%eax
		call   _05a530_func
		mov    %ecx,%eax
		call   _023aac_func

	_07e8f2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e8f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000003,0x000070(%eax)
		jne    _07e921_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000085(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%al
		mov    %al,0x000085(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e921_jump:
		mov    0x000074(%ecx),%al
		cmp    $0x000001,%al
		jbe    _07e944_jump
		cmp    $0x000014,%al
		jne    _07ea99_jump
		mov    0x00005c(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e944_jump:
		test   %al,%al
		jne    _07e951_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _07e958_jump

	_07e951_jump:
		orb    $0x000008,0x000085(%ecx)

	_07e958_jump:
		mov    %ecx,%eax
		call   _05a530_func
		cmpb   $0x000000,0x000071(%ecx)
		jne    _07e973_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01dea8_func

	_07e973_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02346c_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		je     _07e9af_jump
		cmpb   $0x000000,0x000074(%ecx)
		jne    _07e999_jump
		orb    $0x000008,0x000085(%ecx)
		jmp    _07e9a0_jump

	_07e999_jump:
		andb   $0x0000f7,0x000085(%ecx)

	_07e9a0_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _07ea20_jump

	_07e9af_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x00006c(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _07ea2f_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x00006c(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _02bb40_func
		test   %ax,%ax
		je     _07ea2f_jump
		cmpw   $0x000028,0x000064(%ecx)
		jne    _07ea2f_jump
		cmpb   $0x000000,0x000074(%ecx)
		jne    _07e9fd_jump
		orb    $0x000008,0x000085(%ecx)
		jmp    _07ea04_jump

	_07e9fd_jump:
		andb   $0x0000f7,0x000085(%ecx)

	_07ea04_jump:
		cmpb   $0x000002,0x000071(%ecx)
		jne    _07ea16_jump
		mov    $0x000001,%ebx
		mov    $0x000009,%edx
		jmp    _07ea20_jump

	_07ea16_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_07ea20_jump:
		mov    %ecx,%eax
		call   _065368_func
		movb   $0x000005,0x000076(%ecx)
		movb   $0x000000,0x000075(%ecx)

	_07ea2f_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000078(%ecx),%al
		add    %edx,%eax
		test   %eax,%eax
		jl     _07ea4b_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		testb  $0x000010,_0a525d_data(%eax)
		je     _07ea4f_jump

	_07ea4b_jump:
		incw   0x000042(%ecx)

	_07ea4f_jump:
		mov    %ecx,%eax
		call   _05a530_func
		cmpb   $0x000002,0x000071(%ecx)
		je     _07ea67_jump
		mov    %ecx,%eax
		call   _023aac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ea67_jump:
		mov    0x000070(%ecx),%bl
		cmp    $0x000001,%bl
		je     _07ea74_jump
		cmp    $0x000003,%bl
		jne    _07ea99_jump

	_07ea74_jump:
		mov    0x000085(%ecx),%dh
		lea    0x000085(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07ea99_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07eaa0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01f090_func
		cmpb   $0x000000,0x00007a(%ecx)
		jne    _07eac7_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		andb   $0x0000ef,0x000085(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_07eac7_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _065368_func
		movb   $0x000007,0x000076(%ecx)
		mov    _0c1144_data,%eax
		movb   $0x000002,0x000077(%ecx)
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _07eaf8_jump
		andb   $0x0000f7,0x000085(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_07eaf8_jump:
		jge    _07eb01_jump
		orb    $0x000008,0x000085(%ecx)

	_07eb01_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07eb04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x000064(%esi),%dx
		xor    %al,%al
		cmp    $0x000024,%dx
		jne    _07eb47_jump
		mov    0x000083(%esi),%ah
		test   %ah,%ah
		je     _07eb33_jump
		cmpb   $0x000000,_0c334d_data
		jne    _07eb33_jump
		mov    %ah,%dh
		dec    %dh
		mov    %dh,0x000083(%esi)

	_07eb33_jump:
		cmpb   $0x000000,0x000083(%esi)
		jne    _07eb47_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _07f2b8_func
		mov    $0x000001,%al

	_07eb47_jump:
		test   %al,%al
		jne    _07eb92_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _02346c_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000001,_0a525d_data(%edx)
		je     _07eb72_jump
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _07f2b8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07eb72_jump:
		cmpb   $0x000002,0x000071(%esi)
		jne    _07eb92_jump
		cmpb   $0x000001,0x000070(%esi)
		jne    _07eb92_jump
		lea    0x000042(%esi),%ebx
		push   $0x000003
		lea    0x000040(%esi),%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		call   _01f0b0_func

	_07eb92_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07eb98_func:
		push   %ebx
		push   %edx
		xor    %dl,%dl
		cmpb   $0x000000,0x000071(%eax)
		jne    _07ebb5_jump
		mov    0x000070(%eax),%bl
		test   %bl,%bl
		je     _07ebb3_jump
		cmp    $0x00000e,%bl
		je     _07ebb3_jump
		cmp    $0x000008,%bl
		jne    _07ebb5_jump

	_07ebb3_jump:
		mov    $0x000001,%dl

	_07ebb5_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ebx
		ret    



_07ebbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		call   _07eb98_func
		test   %al,%al
		je     _07ec09_jump
		movw   $0x000000,0x000040(%esi)
		mov    %esi,%eax
		mov    0x000085(%esi),%dl
		call   _01e4c4_func
		mov    0x000085(%esi),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _07ec09_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _065368_func

	_07ec09_jump:
		xor    %eax,%eax
		mov    _0b9320_data,%edx
		mov    _0b9364_data,%al
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x00006c(%esi),%dl
		sub    %edx,%eax
		test   %eax,%eax
		jge    _07ec2a_jump
		neg    %eax

	_07ec2a_jump:
		mov    %eax,-0x000004(%ebp)
		xor    %eax,%eax
		mov    _0b9324_data,%ecx
		mov    _0b9365_data,%al
		mov    0x00002c(%esi),%edx
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _07ec52_jump
		neg    %eax

	_07ec52_jump:
		mov    _0c30ce_data,%dx
		mov    %eax,-0x000008(%ebp)
		test   %dx,%dx
		je     _07ece3_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x00006c(%esi),%al
		add    %eax,%edx
		mov    %dx,-0x00000c(%ebp)
		xor    %edx,%edx
		mov    0x00002c(%esi),%bx
		mov    0x00006d(%esi),%dl
		add    %ebx,%edx
		mov    %edx,%eax
		push   $0x000064
		sub    $0x000032,%eax
		push   $0x00005f
		cwtl   
		push   %eax
		testb  $0x000008,0x000085(%esi)
		je     _07ec97_jump
		xor    %eax,%eax
		jmp    _07ec9c_jump

	_07ec97_jump:
		mov    $0xffffffa1,%eax

	_07ec9c_jump:
		mov    -0x00000e(%ebp),%ebx
		sar    $0x000010,%ebx
		mov    $0x00004c,%ecx
		add    %ebx,%eax
		sub    $0x000026,%edx
		cwtl   
		movswl %dx,%edx
		push   %eax
		mov    0x000085(%esi),%al
		mov    $0x0000aa,%ebx
		test   $0x000008,%al
		je     _07ecc7_jump
		xor    %eax,%eax
		mov    %eax,-0x000014(%ebp)
		jmp    _07ecce_jump

	_07ecc7_jump:
		movl   $0xffffff56,-0x000014(%ebp)

	_07ecce_jump:
		mov    -0x00000e(%ebp),%eax
		sar    $0x000010,%eax
		add    -0x000014(%ebp),%eax
		mov    %eax,-0x000010(%ebp)
		mov    -0x000010(%ebp),%eax
		cwtl   
		call   _027cc0_func

	_07ece3_jump:
		mov    0x000071(%esi),%ah
		cmp    $0x000002,%ah
		je     _07edb9_jump
		cmp    $0x000001,%ah
		je     _07edb9_jump
		test   %ah,%ah
		jne    _07ed3a_jump
		cmpb   $0x00000b,0x000070(%esi)
		jne    _07ed3a_jump
		mov    %esi,%eax
		call   _01d740_func
		test   %al,%al
		je     _07ed3a_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01dea8_func
		movw   $0x00fff9,0x000042(%esi)
		movb   $0x000000,0x000075(%esi)
		mov    0x00002c(%esi),%edx
		movb   $0x000004,0x000076(%esi)
		sub    $0x00000e,%edx
		mov    %edx,0x00002c(%esi)
		jmp    _07edb9_jump

	_07ed3a_jump:
		mov    0x00007f(%esi),%bh
		xor    %edi,%edi
		test   %bh,%bh
		je     _07edab_jump
		cmpw   $0x0000aa,-0x000004(%ebp)
		jge    _07ed5d_jump
		cmpw   $0x000026,-0x000008(%ebp)
		jge    _07ed5d_jump
		movb   $0x000001,0x000081(%esi)

	_07ed5d_jump:
		mov    %esi,%eax
		call   _07eb98_func
		test   %al,%al
		je     _07edab_jump
		cmpw   $0x00005f,-0x000004(%ebp)
		jge    _07ed8d_jump
		cmpw   $0x000032,-0x000008(%ebp)
		jge    _07ed8d_jump
		cmpb   $0x000000,0x000083(%esi)
		jne    _07ed8d_jump
		mov    $0x000001,%edi
		movb   $0x000064,0x000083(%esi)
		jmp    _07edab_jump

	_07ed8d_jump:
		cmpb   $0x000000,0x000081(%esi)
		je     _07edab_jump
		mov    0x000083(%esi),%al
		test   %al,%al
		jne    _07edab_jump
		mov    $0xffffffff,%edi
		mov    %al,0x000081(%esi)

	_07edab_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _07edb9_jump
		mov    %esi,%eax
		call   _07fb24_func

	_07edb9_jump:
		mov    0x000083(%esi),%ah
		test   %ah,%ah
		je     _07edcd_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,0x000083(%esi)

	_07edcd_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _07eddd_jump
		test   %di,%di
		je     _07eec2_jump

	_07eddd_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x00006c(%esi),%dl
		movswl %ax,%ebx
		mov    %esi,%eax
		call   _01e0cc_func
		test   %ax,%ax
		je     _07ee08_jump
		mov    $0x000001,%ebx
		mov    $0x00000e,%edx
		jmp    _07eebb_jump

	_07ee08_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _02346c_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0a525d_data(%eax)
		jne    _07ee41_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x00006c(%esi),%al
		add    %ebx,%eax
		cmp    $0x000020,%eax
		jl     _07ee41_jump
		mov    _0c313a_data,%edx
		sar    $0x000010,%edx
		add    $0x00010c,%edx
		cmp    %edx,%eax
		jle    _07ee93_jump

	_07ee41_jump:
		cmpb   $0x000002,0x000071(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _07ee93_jump
		mov    0x00003e(%esi),%eax
		mov    0x000028(%esi),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    %ecx,0x000028(%esi)
		cmpb   $0x000000,0x00007f(%esi)
		je     _07ee7a_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _065368_func
		movb   $0x000000,0x00006f(%esi)
		jmp    _07ee8b_jump

	_07ee7a_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %esi,%eax
		call   _065368_func

	_07ee8b_jump:
		movw   $0x000000,0x000040(%esi)
		jmp    _07eec2_jump

	_07ee93_jump:
		mov    0x000071(%esi),%bh
		cmp    $0x000001,%bh
		je     _07eec2_jump
		cmp    $0x000002,%bh
		je     _07eec2_jump
		test   %di,%di
		jge    _07eeb1_jump
		mov    $0x000001,%ebx
		mov    $0x00000d,%edx
		jmp    _07eebb_jump

	_07eeb1_jump:
		mov    $0x000001,%ebx
		mov    $0x000011,%edx

	_07eebb_jump:
		mov    %esi,%eax
		call   _065368_func

	_07eec2_jump:
		mov    %esi,%eax
		call   _05a530_func
		cmpb   $0x000002,0x000071(%esi)
		je     _07eed6_jump
		mov    %esi,%eax
		call   _023aac_func

	_07eed6_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07eee0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _07eb98_func
		test   %al,%al
		je     _07ef44_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000085(%ecx),%dl
		call   _01e4c4_func
		mov    0x000085(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _07ef25_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _065368_func

	_07ef25_jump:
		mov    0x000083(%ecx),%dh
		test   %dh,%dh
		jne    _07ef38_jump
		mov    %ecx,%eax
		call   _07fb24_func
		jmp    _07ef5e_jump

	_07ef38_jump:
		mov    %dh,%bl
		dec    %bl
		mov    %bl,0x000083(%ecx)
		jmp    _07ef5e_jump

	_07ef44_jump:
		mov    %ecx,%eax
		call   _07fb24_func
		cmpb   $0x000000,0x000071(%ecx)
		jne    _07ef5e_jump
		cmpb   $0x000009,0x000070(%ecx)
		jne    _07ef5e_jump
		movb   $0x0000fa,0x000083(%ecx)

	_07ef5e_jump:
		mov    %ecx,%eax
		call   _023aac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ef6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000074(%eax),%al
		test   %al,%al
		jbe    _07ef81_jump
		cmp    $0x000001,%al
		je     _07efd4_jump
		jmp    _07f01a_jump

	_07ef81_jump:
		mov    0x000085(%edx),%bh
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,0x000085(%edx)
		call   _05a530_func
		mov    0x000070(%edx),%al
		cmp    $0x00000b,%al
		jb     _07efac_jump
		jbe    _07f020_jump
		cmp    $0x00000d,%al
		je     _07efc0_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07efac_jump:
		cmp    $0x000009,%al
		jne    _07f026_jump

	_07efb4_jump:
		mov    0x000040(%edx),%ax
		mov    %ax,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07efc0_jump:
		mov    0x000040(%edx),%ax
		mov    %eax,%ecx
		mov    %ax,0x000042(%edx)
		neg    %ecx
		mov    %cx,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07efd4_jump:
		orb    $0x000008,0x000085(%edx)
		mov    %edx,%eax
		call   _05a530_func
		mov    0x000085(%edx),%bl
		and    $0x0000f7,%bl
		mov    0x000070(%edx),%al
		mov    %bl,0x000085(%edx)
		cmp    $0x00000c,%al
		jb     _07f002_jump
		jbe    _07f020_jump
		cmp    $0x00000e,%al
		je     _07efb4_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07f002_jump:
		cmp    $0x00000a,%al
		jne    _07f026_jump
		mov    0x000040(%edx),%ax
		mov    %eax,%ebx
		mov    %ax,0x000042(%edx)
		neg    %ebx
		mov    %bx,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07f01a_jump:
		movw   $0x000000,0x000040(%edx)

	_07f020_jump:
		movw   $0x000000,0x000042(%edx)

	_07f026_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_07f02c_switch:
		.long   _07f097_case
		.long   _07f0d3_case
		.long   _07f107_case
		.long   _07f133_case
		.long   _07f159_case
		.long   _07f192_case




_07f044_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ecx
		mov    %ebx,%esi
		cmpb   $0x000000,(%ebx)
		jne    _07f1f2_jump
		xor    %ebx,%ebx
		mov    0x000028(%eax),%edi
		mov    0x00006c(%eax),%bl
		add    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x00006c(%ecx),%bl
		sub    %ebx,%edi
		xor    %ebx,%ebx
		mov    %edi,0x000028(%ecx)
		mov    0x00006d(%eax),%bl
		mov    0x00002c(%eax),%edx
		xor    %eax,%eax
		add    %edx,%ebx
		mov    0x00006d(%ecx),%al
		sub    %eax,%ebx
		mov    0x000070(%ecx),%al
		sub    $0x000009,%al
		mov    %ebx,0x00002c(%ecx)
		cmp    $0x000005,%al
		ja     _07f1c4_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_07f02c_switch(,%eax,4)

	_07f097_case:
		xor    %ebx,%ebx
		mov    0x00006c(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x00006d(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		add    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _07f1c4_jump

	_07f0d3_case:
		xor    %ebx,%ebx
		mov    0x00006c(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x00006d(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		add    %ebx,%eax
		sub    %eax,%edi
		jmp    _07f1c1_jump

	_07f107_case:
		xor    %ebx,%ebx
		mov    0x00006c(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000028(%ecx),%ebp
		sub    %ebx,%eax
		sub    %eax,%ebp
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x00006d(%ecx),%al
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _07f1c4_jump

	_07f133_case:
		xor    %ebx,%ebx
		mov    0x00006c(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		mov    0x000028(%ecx),%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x00006d(%ecx),%al
		mov    %ebx,0x000028(%ecx)
		sub    %eax,%edi
		jmp    _07f1c1_jump

	_07f159_case:
		xor    %ebx,%ebx
		mov    0x00006c(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x00006d(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		sub    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		add    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _07f1c4_jump

	_07f192_case:
		xor    %ebx,%ebx
		mov    0x00006c(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x00006d(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		sub    %ebx,%eax
		add    %eax,%edi

	_07f1c1_jump:
		mov    %edi,0x00002c(%ecx)

	_07f1c4_jump:
		mov    %ecx,%eax
		call   _01e53c_func
		mov    0x000085(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000085(%ecx)
		call   _020064_func
		andb   $0x0000bf,0x000085(%ecx)
		movb   $0x000001,(%esi)

	_07f1f2_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07f1f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		mov    %ah,0x000008(%esp)
		mov    %ah,0x000014(%esp)
		cmpw   $0x000000,0x000040(%esi)
		setg   %bl
		test   %bl,%bl
		jbe    _07f223_jump
		cmp    $0x000001,%bl
		je     _07f237_jump
		jmp    _07f249_jump

	_07f223_jump:
		mov    $0x00000c,%al
		mov    $0x00000a,%ch
		mov    %al,0x000018(%esp)
		mov    $0x00000e,%ah
		mov    %ch,0x00000c(%esp)
		mov    %ah,0x000010(%esp)
		jmp    _07f249_jump

	_07f237_jump:
		mov    $0x000009,%bl
		mov    $0x00000d,%cl
		mov    %bl,0x00000c(%esp)
		mov    $0x00000b,%bh
		mov    %cl,0x000010(%esp)
		mov    %bh,0x000018(%esp)

	_07f249_jump:
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%bx
		xor    %edi,%edi
		mov    %ebx,(%esp)
		test   %bx,%bx
		jle    _07f2ac_jump

	_07f260_jump:
		cmpw   $0x00004f,0x000064(%ecx)
		jne    _07f29d_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07f29d_jump
		mov    0x00000c(%esp),%dl
		mov    0x000070(%ecx),%bl
		cmp    %dl,%bl
		jne    _07f27e_jump
		lea    0x000014(%esp),%ebx
		jmp    _07f294_jump

	_07f27e_jump:
		cmp    0x000018(%esp),%bl
		jne    _07f28a_jump
		lea    0x000008(%esp),%ebx
		jmp    _07f294_jump

	_07f28a_jump:
		cmp    0x000010(%esp),%bl
		jne    _07f29d_jump
		lea    0x000004(%esp),%ebx

	_07f294_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _07f044_func

	_07f29d_jump:
		mov    (%esp),%eax
		inc    %edi
		add    $0x000088,%ecx
		cmp    %ax,%di
		jl     _07f260_jump

	_07f2ac_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f2b8_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _07f2d1_jump
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _01de98_func

	_07f2d1_jump:
		mov    $0x000054,%eax
		call   _071754_func
		cmpl   $0x000000,0x000024(%ebx)
		je     _07f35b_jump
		cmpb   $0x000002,0x000071(%ebx)
		jne    _07f323_jump
		cmpb   $0x000001,0x000070(%ebx)
		jne    _07f323_jump
		mov    0x000028(%ebx),%ecx
		movw   $0x00ffff,0x000040(%ebx)
		add    $0x000014,%ecx
		mov    %ebx,%eax
		mov    %ecx,0x000028(%ebx)
		call   _07f1f8_func
		mov    0x000028(%ebx),%esi
		movw   $0x000001,0x000040(%ebx)
		sub    $0x000014,%esi
		mov    %ebx,%eax
		mov    %esi,0x000028(%ebx)
		call   _07f1f8_func
		addl   $0x00000a,0x000028(%ebx)
		jmp    _07f32a_jump

	_07f323_jump:
		mov    %ebx,%eax
		call   _07f1f8_func

	_07f32a_jump:
		mov    0x000064(%ebx),%dx
		movl   $0x000000,0x000024(%ebx)
		cmp    $0x000024,%dx
		jne    _07f344_jump
		andb   $0x0000fb,0x000085(%ebx)
		jmp    _07f354_jump

	_07f344_jump:
		mov    _0c3164_data,%eax
		sar    $0x000010,%eax
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%ebx)

	_07f354_jump:
		mov    %ebx,%eax
		call   _07d038_func

	_07f35b_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07f360_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    %bl,0x000010(%esp)
		cmpw   $0x000023,0x000064(%eax)
		jne    _07f54f_jump
		mov    _0b9410_data,%esi
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07f6f9_jump

	_07f391_jump:
		cmpw   $0x000024,0x000064(%esi)
		jne    _07f538_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _07f538_jump
		mov    0x000010(%esp),%bh
		movb   $0x0000c8,0x000083(%esi)
		test   %bh,%bh
		je     _07f3d8_jump
		mov    0x000085(%edi),%al
		and    $0x000008,%al
		mov    0x000085(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000085(%esi)
		or     %al,%dl
		mov    %dl,0x000085(%esi)
		jmp    _07f3fd_jump

	_07f3d8_jump:
		mov    0x000085(%edi),%dh
		lea    0x000085(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07f3fd_jump:
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		mov    %cx,0x000042(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x000070(%esi),%dl
		movsbw (%eax,%edx,8),%ax
		testb  $0x000008,0x000085(%esi)
		je     _07f42a_jump
		cwtl   
		jmp    _07f42d_jump

	_07f42a_jump:
		cwtl   
		neg    %eax

	_07f42d_jump:
		mov    $0x00007a,%ecx
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		mov    $0x000035,%ebx
		mov    0x00006f(%edi),%al
		cmp    %ebx,%eax
		jl     _07f44f_jump
		cmp    %ecx,%eax
		jg     _07f44f_jump
		mov    $0x000001,%eax
		jmp    _07f451_jump

	_07f44f_jump:
		xor    %eax,%eax

	_07f451_jump:
		test   %eax,%eax
		je     _07f45c_jump
		mov    $0x000003,%eax
		jmp    _07f487_jump

	_07f45c_jump:
		mov    $0x000090,%ecx
		mov    $0x00007b,%ebx
		mov    0x00006f(%edi),%al
		cmp    %ebx,%eax
		jl     _07f478_jump
		cmp    %ecx,%eax
		jg     _07f478_jump
		mov    $0x000001,%eax
		jmp    _07f47a_jump

	_07f478_jump:
		xor    %eax,%eax

	_07f47a_jump:
		test   %eax,%eax
		je     _07f482_jump
		xor    %eax,%eax
		jmp    _07f487_jump

	_07f482_jump:
		mov    $0xffffffff,%eax

	_07f487_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _07f6f9_jump
		mov    %esp,%eax
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000014(%esp),%ebx
		mov    %edi,%eax
		call   _01e1b8_func
		mov    0x00000a(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x000006(%esp),%edx
		mov    0x000078(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    $0x000002,%ebx
		mov    0x00002c(%esi),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		call   _01dea8_func
		mov    %esi,%eax
		call   _05a530_func
		mov    %esi,%eax
		call   _01e53c_func
		movb   $0x000000,0x000075(%esi)
		movb   $0x000007,0x000076(%esi)
		mov    0x000085(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000085(%esi)
		call   _020064_func
		andb   $0x0000bf,0x000085(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07f538_jump:
		inc    %eax
		add    $0x000088,%esi
		cmp    %dx,%ax
		jl     _07f391_jump
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07f54f_jump:
		mov    _0b9410_data,%esi
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07f6f9_jump

	_07f567_jump:
		cmpw   $0x00002c,0x000064(%esi)
		jne    _07f6e9_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _07f6e9_jump
		mov    0x000032(%esi),%edx
		mov    $0x00005a,%eax
		sar    $0x000010,%edx
		call   _071068_func
		cmpb   $0x000000,0x000010(%esp)
		je     _07f5b6_jump
		mov    0x000085(%edi),%al
		and    $0x000008,%al
		mov    0x000085(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000085(%esi)
		or     %al,%dl
		mov    %dl,0x000085(%esi)
		jmp    _07f5db_jump

	_07f5b6_jump:
		mov    0x000085(%edi),%dh
		lea    0x000085(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07f5db_jump:
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %cx,0x000042(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%esi),%al
		movsbw (%edx,%eax,8),%ax
		testb  $0x000008,0x000085(%esi)
		je     _07f606_jump
		movswl %ax,%edx
		jmp    _07f60b_jump

	_07f606_jump:
		movswl %ax,%edx
		neg    %edx

	_07f60b_jump:
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    %dx,0x000040(%esi)
		push   %eax
		mov    $0x000007,%edx
		mov    %edi,%eax
		call   _01e1b8_func
		cmpw   $0x000000,_0c30ce_data
		je     _07f66b_jump
		mov    0x000008(%esp),%eax
		mov    _0c3166_data,%di
		mov    -0x000002(%esp),%ecx
		sub    %edi,%eax
		mov    _0c3162_data,%di
		movswl %ax,%edx
		mov    0x00000c(%esp),%eax
		mov    0x000002(%esp),%ebx
		sub    %edi,%eax
		sar    $0x000010,%ecx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		cwtl   
		call   _03e2d0_func

	_07f66b_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x000028(%esi)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000006,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000085(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _065368_func
		mov    %esi,%eax
		call   _01e53c_func
		mov    0x000085(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000085(%esi)
		call   _020064_func
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07f6e9_jump:
		inc    %eax
		add    $0x000088,%esi
		cmp    %dx,%ax
		jl     _07f567_jump

	_07f6f9_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07f700_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _07e840_func
		cmpb   $0x000000,0x000071(%ecx)
		jne    _07f7c2_jump
		cmpb   $0x000002,0x000070(%ecx)
		jne    _07f720_jump
		cmpb   $0x000090,0x00006f(%ecx)
		jae    _07f726_jump

	_07f720_jump:
		movw   $0x000000,0x000052(%ecx)

	_07f726_jump:
		mov    0x000070(%ecx),%bl
		cmp    $0x000001,%bl
		je     _07f733_jump
		cmp    $0x000002,%bl
		jne    _07f761_jump

	_07f733_jump:
		mov    %ecx,%eax
		call   _01d740_func
		test   %al,%al
		je     _07f761_jump
		cmpb   $0x000000,0x00007f(%ecx)
		je     _07f750_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _07f75a_jump

	_07f750_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_07f75a_jump:
		mov    %ecx,%eax
		call   _065368_func

	_07f761_jump:
		cmpb   $0x000002,0x000070(%ecx)
		jne    _07f7c8_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07f7c8_jump
		cmpb   $0x000090,0x00006f(%ecx)
		jne    _07f7c8_jump
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0c334a_data(%eax)
		jne    _07f7c8_jump
		mov    $0x000001,%ebx
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		call   _07f360_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07f7c2_jump:
		movw   $0x000000,0x000052(%ecx)

	_07f7c8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f7cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _07e840_func
		cmpb   $0x000000,0x000071(%ecx)
		jne    _07f878_jump
		cmpb   $0x000006,0x000070(%ecx)
		je     _07f7ec_jump
		movw   $0x000000,0x000052(%ecx)

	_07f7ec_jump:
		mov    0x000070(%ecx),%dh
		cmp    $0x000001,%dh
		je     _07f7f9_jump
		cmp    $0x000006,%dh
		jne    _07f827_jump

	_07f7f9_jump:
		mov    %ecx,%eax
		call   _01d740_func
		test   %al,%al
		je     _07f827_jump
		cmpb   $0x000000,0x00007f(%ecx)
		je     _07f816_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _07f820_jump

	_07f816_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_07f820_jump:
		mov    %ecx,%eax
		call   _065368_func

	_07f827_jump:
		cmpb   $0x000006,0x000070(%ecx)
		jne    _07f87e_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07f87e_jump
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		dec    %eax
		xor    %edx,%edx
		mov    _0c334b_data(%eax),%dl
		cmp    %eax,%edx
		jne    _07f87e_jump
		mov    $0x000001,%ebx
		xor    %eax,%edx
		mov    %ecx,%eax
		call   _07f360_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07f878_jump:
		movw   $0x000000,0x000052(%ecx)

	_07f87e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f884_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%edi
		mov    %edx,0x000018(%esp)
		mov    _0b9410_data,%esi
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07fb1a_jump

	_07f8a9_jump:
		cmpw   $0x000024,0x000064(%esi)
		jne    _07fb0a_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _07fb0a_jump
		mov    0x000018(%esp),%ecx
		movb   $0x0000c8,0x000083(%esi)
		test   %cx,%cx
		je     _07f8f1_jump
		mov    0x000085(%esi),%cl
		mov    0x000085(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000085(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000085(%esi)
		jmp    _07f916_jump

	_07f8f1_jump:
		mov    0x000085(%edi),%dh
		lea    0x000085(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07f916_jump:
		mov    0x000071(%edi),%al
		mov    $0xffffffff,%edx
		test   %al,%al
		jne    _07f94e_jump
		cmpb   $0x00000d,0x000070(%edi)
		jne    _07f94e_jump
		mov    $0x000065,%ecx
		xor    %eax,%eax
		mov    $0x000034,%ebx
		mov    0x00006f(%edi),%al
		cmp    %ebx,%eax
		jl     _07f946_jump
		cmp    %ecx,%eax
		jg     _07f946_jump
		mov    $0x000001,%eax
		jmp    _07f948_jump

	_07f946_jump:
		xor    %eax,%eax

	_07f948_jump:
		test   %eax,%eax
		je     _07f983_jump
		jmp    _07f97e_jump

	_07f94e_jump:
		cmpb   $0x000000,0x000071(%edi)
		jne    _07f983_jump
		cmpb   $0x000009,0x000070(%edi)
		jne    _07f983_jump
		mov    $0x000037,%ecx
		xor    %eax,%eax
		mov    $0x000010,%ebx
		mov    0x00006f(%edi),%al
		cmp    %ebx,%eax
		jl     _07f978_jump
		cmp    %ecx,%eax
		jg     _07f978_jump
		mov    $0x000001,%eax
		jmp    _07f97a_jump

	_07f978_jump:
		xor    %eax,%eax

	_07f97a_jump:
		test   %eax,%eax
		je     _07f983_jump

	_07f97e_jump:
		mov    $0x000003,%edx

	_07f983_jump:
		movswl %dx,%edx
		cmp    $0xffffffff,%edx
		je     _07fb1a_jump
		lea    0x00000c(%esp),%eax
		push   %eax
		lea    0x000014(%esp),%eax
		lea    0x000018(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    %edi,%eax
		call   _01e1b8_func
		mov    0x000018(%esp),%eax
		cmp    $0x000001,%ax
		jb     _07f9bc_jump
		jbe    _07f9d6_jump
		cmp    $0x000002,%ax
		je     _07f9e0_jump
		jmp    _07fa0f_jump

	_07f9bc_jump:
		test   %ax,%ax
		jne    _07fa0f_jump
		mov    $0xfffffffe,%edx
		mov    _0c1157_data,%al
		mov    %edx,0x000004(%esp)
		dec    %al
		add    %al,0x00007a(%edi)
		jmp    _07fa0f_jump

	_07f9d6_jump:
		movl   $0x000001,0x000004(%esp)
		jmp    _07fa0f_jump

	_07f9e0_jump:
		cmpb   $0x000002,_0b9369_data
		jne    _07f9fb_jump
		mov    _0c3160_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0c315e_data,%ax
		jmp    _07fa0b_jump

	_07f9fb_jump:
		mov    _0b9320_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0b9324_data,%ax

	_07fa0b_jump:
		mov    %ax,0x00004c(%esi)

	_07fa0f_jump:
		mov    0x000006(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x000012(%esp),%edx
		mov    0x000078(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    0x000018(%esp),%ebx
		mov    %ax,0x00003e(%esi)
		cmp    $0x000002,%bx
		je     _07fa9e_jump
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000085(%esi),%dl
		movsbw (%ebx,%eax,1),%ax
		test   $0x000008,%dl
		je     _07fa86_jump
		cwtl   
		jmp    _07fa89_jump

	_07fa86_jump:
		cwtl   
		neg    %eax

	_07fa89_jump:
		mov    %eax,(%esp)
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05a530_func
		mov    %esi,%eax
		call   _01de98_func
		jmp    _07fac0_jump

	_07fa9e_jump:
		mov    $0x000001,%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		lea    0x000004(%esp),%ebx
		call   _01de98_func
		push   $0x000003
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _01f0b0_func

	_07fac0_jump:
		mov    (%esp),%eax
		mov    %ax,0x000040(%esi)
		mov    0x000004(%esp),%eax
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01e53c_func
		movb   $0x000000,0x000075(%esi)
		movb   $0x000007,0x000076(%esi)
		mov    0x000085(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dh
		mov    %esi,%eax
		mov    %dh,0x000085(%esi)
		call   _020064_func
		andb   $0x0000bf,0x000085(%esi)
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07fb0a_jump:
		inc    %eax
		add    $0x000088,%esi
		cmp    %dx,%ax
		jl     _07f8a9_jump

	_07fb1a_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07fb24_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _07fc33_jump
		cmpb   $0x00000d,0x000070(%ecx)
		jne    _07fb3f_jump
		cmpb   $0x000065,0x00006f(%ecx)
		jae    _07fb51_jump

	_07fb3f_jump:
		cmpb   $0x000009,0x000070(%ecx)
		jne    _07fb4b_jump
		cmpb   $0x000037,0x00006f(%ecx)
		jae    _07fb51_jump

	_07fb4b_jump:
		movw   $0x000000,0x000052(%ecx)

	_07fb51_jump:
		mov    0x000070(%ecx),%al
		test   %al,%al
		je     _07fb60_jump
		cmp    $0x00000e,%al
		je     _07fb60_jump
		cmp    $0x000008,%al
		jne    _07fb89_jump

	_07fb60_jump:
		cmpb   $0x000001,0x00006f(%ecx)
		jae    _07fb89_jump
		cmpb   $0x000002,0x00007f(%ecx)
		jb     _07fb78_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _07fb82_jump

	_07fb78_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx

	_07fb82_jump:
		mov    %ecx,%eax
		call   _065368_func

	_07fb89_jump:
		mov    0x000070(%ecx),%bh
		cmp    $0x00000d,%bh
		jne    _07fbe4_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07fc39_jump
		cmpb   $0x000065,0x00006f(%ecx)
		jne    _07fc39_jump
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x000070(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0c334a_data(%eax)
		jne    _07fc39_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _07f884_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07fbe4_jump:
		cmp    $0x000009,%bh
		jne    _07fc39_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07fc39_jump
		cmpb   $0x000037,0x00006f(%ecx)
		jne    _07fc39_jump
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bh,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0c334a_data(%eax)
		jne    _07fc39_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _07f884_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07fc33_jump:
		movw   $0x000000,0x000052(%ecx)

	_07fc39_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07fc40_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    %eax,%ebp
		mov    %edx,%ebx
		cmp    $0x000008,%dx
		jb     _07fc58_jump
		jbe    _07fc65_jump
		cmp    $0x000009,%dx
		je     _07fc6c_jump
		jmp    _07fc71_jump

	_07fc58_jump:
		cmp    $0x000007,%dx
		jne    _07fc71_jump
		mov    $0xfffffffd,%esi
		jmp    _07fc71_jump

	_07fc65_jump:
		mov    $0x000002,%esi
		jmp    _07fc71_jump

	_07fc6c_jump:
		mov    $0xffffffff,%esi

	_07fc71_jump:
		mov    _0b9410_data,%ecx
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07fd14_jump

	_07fc89_jump:
		cmpw   $0x00006e,0x000064(%ecx)
		jne    _07fd04_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07fd04_jump
		mov    $0x000002,%edx
		and    $0x0000ff,%ebx
		mov    %ecx,%eax
		call   _01dea8_func
		movw   $0x00fffa,0x000042(%ecx)
		mov    %si,0x000040(%ecx)
		mov    0x000028(%ebp),%ebx
		mov    %ebx,0x000028(%ecx)
		mov    0x00002c(%ebp),%ebx
		mov    %ebx,0x00002c(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _065368_func
		mov    %ecx,%eax
		call   _01e53c_func
		orb    $0x000004,0x000085(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _020064_func
		movb   $0x000000,0x000075(%ecx)
		mov    0x000085(%ecx),%dl
		movb   $0x000005,0x000076(%ecx)
		and    $0x0000bf,%dl
		mov    %dl,0x000085(%ecx)
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07fd04_jump:
		inc    %eax
		add    $0x000088,%ecx
		cmp    %dx,%ax
		jl     _07fc89_jump

	_07fd14_jump:
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_07fd1c_switch:
		.long   _07fdec_case
		.long   _07fdfa_case
		.long   _07fe08_case
		.long   _07fe16_case
		.long   _07fe24_case




_07fd30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    $0x000054,%eax
		call   _071754_func
		mov    _0b9410_data,%ebp
		mov    _0b9414_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07fd84_jump

	_07fd5a_jump:
		cmpw   $0x00006e,0x000064(%ebp)
		jne    _07fd78_jump
		mov    %ebp,%edi

	_07fd63_jump:
		mov    0x0000ec(%edi),%cx
		add    $0x000088,%edi
		cmp    $0x00006e,%cx
		je     _07fd63_jump
		jmp    _07fd84_jump

	_07fd78_jump:
		inc    %eax
		add    $0x000088,%ebp
		cmp    %dx,%ax
		jl     _07fd5a_jump

	_07fd84_jump:
		cmpw   $0x00006e,0x000064(%ebp)
		jne    _07feac_jump
		xor    %eax,%eax
		mov    %ax,0x00000c(%esp)

	_07fd96_jump:
		mov    %ebp,%esi
		cmp    %edi,%ebp
		ja     _07fdac_jump

	_07fd9c_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _07fdac_jump
		add    $0x000088,%esi
		cmp    %edi,%esi
		jbe    _07fd9c_jump

	_07fdac_jump:
		cmp    %edi,%esi
		ja     _07fe98_jump
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    0x00000c(%esp),%bl
		call   _01dea8_func
		mov    0x000085(%esi),%ah
		and    $0x0000f7,%ah
		mov    0x00000c(%esp),%ecx
		mov    %ah,0x000085(%esi)
		cmp    $0x000004,%cx
		ja     _07fe30_jump
		xor    %eax,%eax
		mov    %cx,%ax
		jmp    *%cs:_07fd1c_switch(,%eax,4)

	_07fdec_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		jmp    _07fe30_jump

	_07fdfa_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x00fffe,0x000040(%esi)
		jmp    _07fe30_jump

	_07fe08_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x00fffc,0x000040(%esi)
		jmp    _07fe30_jump

	_07fe16_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		jmp    _07fe30_jump

	_07fe24_case:
		movw   $0x00fffa,0x000042(%esi)
		movw   $0x00ffff,0x000040(%esi)

	_07fe30_jump:
		lea    0x000004(%esp),%eax
		mov    0x00000a(%esp),%edx
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000018(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    0x000008(%esp),%eax
		call   _01e1b8_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		mov    $0x000001,%ebx
		sar    $0x000010,%eax
		mov    %ebx,%edx
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _065368_func
		mov    %esi,%eax
		call   _01e53c_func
		mov    0x000085(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000085(%esi)
		call   _020064_func

	_07fe98_jump:
		mov    0x00000c(%esp),%edx
		inc    %edx
		mov    %dx,0x00000c(%esp)
		cmp    $0x000005,%dx
		jl     _07fd96_jump

	_07feac_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_07feb8_switch:
		.long   _07ff84_case
		.long   _07ff6a_case
		.long   _07ff50_case
		.long   _07ff13_case




_07fec8_func:
		push   %ebx
		mov    %eax,%ebx
		cmpb   $0x000000,0x000071(%eax)
		jne    _07ffe3_jump
		cmpw   $0x000000,_0c315a_data
		jl     _07ffe3_jump
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _071068_func
		mov    0x00007a(%ebx),%dl
		dec    %dl
		mov    %dl,%al
		mov    %dl,0x00007a(%ebx)
		cmp    $0x000003,%dl
		ja     _07ffe3_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_07feb8_switch(,%eax,4)

	_07ff13_case:
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01de98_func
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _07fc40_func
		mov    _0c3158_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000004,%ebx
		add    %eax,%ebx
		mov    _0b9410_data,%eax
		shl    $0x000003,%ebx
		mov    $0x000006,%edx
		add    %ebx,%eax
		call   _01de98_func
		pop    %ebx
		ret    

	_07ff50_case:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01de98_func
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _07fc40_func
		pop    %ebx
		ret    

	_07ff6a_case:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01de98_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _07fc40_func
		pop    %ebx
		ret    

	_07ff84_case:
		mov    _0c3158_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    _0b9410_data,%edx
		cmpb   $0x000006,0x000070(%edx,%eax,8)
		jne    _07ffe3_jump
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _071068_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01de98_func
		mov    _0c3158_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %eax,%edx
		mov    _0b9410_data,%eax
		shl    $0x000003,%edx
		movb   $0x000003,0x000070(%edx,%eax,1)
		movb   $0x000004,0x000072(%edx,%eax,1)
		movb   $0x00000a,0x000072(%ebx)

	_07ffe3_jump:
		pop    %ebx
		ret    



_07ffe8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _080055_jump
		mov    %ecx,%eax
		call   _01f090_func
		cmpb   $0x000000,0x00007a(%ecx)
		jne    _080045_jump
		mov    %ecx,%eax
		call   _07fd30_func
		movl   $0x000000,0x000024(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0b9342_data,%dx
		jne    _08003b_jump
		movw   $0x00ffff,_0b9342_data
		mov    $0x000002,%ebx
		mov    $_0b92f8_data,%eax
		mov    %ebx,%edx
		movl   $0x0003e8,0x000054(%ecx)
		call   _01dea8_func

	_08003b_jump:
		andb   $0x0000fb,0x000085(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_080045_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01de98_func
		movb   $0x000000,0x00006f(%ecx)

	_080055_jump:
		pop    %ecx
		pop    %ebx
		ret    



_080058_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _08006b_jump
		cmpb   $0x000001,0x000070(%ecx)
		je     _080072_jump

	_08006b_jump:
		mov    %ecx,%eax
		call   _01f090_func

	_080072_jump:
		mov    0x000085(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,(%esp)
		mov    %ecx,%eax
		mov    $0x000008,%edx
		call   _01e4c4_func
		mov    %ecx,%eax
		call   _065368_func
		mov    0x000085(%ecx),%al
		shl    $0x000004,%al
		mov    (%esp),%dh
		shr    $0x000007,%al
		cmp    %dh,%al
		je     _0800cf_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _065368_func
		cmpw   $0x000023,0x000064(%ecx)
		jne    _0800cf_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _07f360_func

	_0800cf_jump:
		cmpb   $0x000003,0x00007a(%ecx)
		jae    _080118_jump
		cmpw   $0x000023,0x000064(%ecx)
		jne    _0800ea_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _07f360_func

	_0800ea_jump:
		cmpb   $0x000000,0x00007a(%ecx)
		jne    _080106_jump
		mov    $0x000001,%ebx
		mov    0x00007b(%ecx),%al
		xor    %edx,%edx
		mov    %al,0x00007a(%ecx)
		mov    %ecx,%eax
		call   _065368_func
		jmp    _080118_jump

	_080106_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _065368_func
		movb   $0x000002,0x000077(%ecx)

	_080118_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_080120_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01f090_func
		movb   $0x000000,0x000083(%ecx)
		mov    %ecx,%eax
		mov    0x000085(%ecx),%bl
		call   _01e4c4_func
		mov    0x000032(%ecx),%edx
		mov    $0x000056,%eax
		sar    $0x000010,%edx
		call   _071068_func
		mov    0x000085(%ecx),%dl
		shl    $0x000004,%bl
		shl    $0x000004,%dl
		shr    $0x000007,%bl
		shr    $0x000007,%dl
		cmp    %bl,%dl
		je     _08017d_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		call   _07f884_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _065368_func
		pop    %ecx
		pop    %ebx
		ret    

	_08017d_jump:
		cmpb   $0x00000f,0x00007a(%ecx)
		jae    _0801c1_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07f884_func
		cmpb   $0x000000,0x00007a(%ecx)
		jne    _0801a9_jump
		mov    $0x000001,%ebx
		mov    0x00007b(%ecx),%dl
		mov    %ecx,%eax
		mov    %dl,0x00007a(%ecx)
		xor    %edx,%edx
		call   _065368_func
		pop    %ecx
		pop    %ebx
		ret    

	_0801a9_jump:
		cmpb   $0x000001,0x000071(%ecx)
		je     _0801bd_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _065368_func

	_0801bd_jump:
		movb   $0x000002,0x000077(%ecx)

	_0801c1_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0801c4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x000071(%eax)
		jne    _0801f2_jump
		mov    0x000070(%eax),%dh
		cmp    $0x000001,%dh
		je     _080201_jump
		cmp    $0x000002,%dh
		je     _080201_jump
		cmp    $0x000005,%dh
		je     _080201_jump
		cmp    $0x000006,%dh
		je     _080201_jump
		cmp    $0x000003,%dh
		je     _080201_jump
		cmp    $0x000007,%dh
		je     _080201_jump
		cmp    $0x000004,%dh
		je     _080201_jump

	_0801f2_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		call   _065368_func

	_080201_jump:
		pop    %edx
		pop    %ebx
		ret    



_080204_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _080215_jump
		cmpb   $0x000000,0x000070(%ecx)
		je     _080221_jump

	_080215_jump:
		cmpb   $0x000001,0x000071(%ecx)
		jne    _08023a_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _08023a_jump

	_080221_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _065368_func
		movb   $0x000007,0x000076(%ecx)
		movb   $0x000000,0x000075(%ecx)

	_08023a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080240_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%ebp
		mov    %edx,%eax
		lea    0x00c800(%edx),%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_080258_jump:
		mov    %ebp,%ecx
		mov    %edx,%edi
		mov    %ebx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _080268_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_080268_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _080258_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08028c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ecx
		mov    %ebx,%ebp
		mov    %eax,%edx
		add    $0x00c800,%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_0802a3_jump:
		mov    %ebp,%ecx
		mov    %ebx,%edi
		mov    %edx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0802b3_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0802b3_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _0802a3_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0802e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _080302_jump
		cmpb   $0x000001,0x000070(%ecx)
		jne    _080302_jump
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		jmp    _08037c_jump

	_080302_jump:
		mov    0x000074(%ecx),%al
		cmp    $0x000002,%al
		jb     _080334_jump
		jbe    _080375_jump
		cmp    $0x000014,%al
		jb     _08037c_jump
		ja     _08037c_jump
		mov    0x00005c(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		mov    %ecx,%eax
		call   _080550_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_080334_jump:
		test   %al,%al
		jne    _080341_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _080348_jump

	_080341_jump:
		orb    $0x000008,0x000085(%ecx)

	_080348_jump:
		cmpb   $0x000000,0x000071(%ecx)
		jne    _080354_jump
		cmpb   $0x000000,0x000070(%ecx)
		je     _080360_jump

	_080354_jump:
		cmpb   $0x000001,0x000071(%ecx)
		jne    _08037c_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _08037c_jump

	_080360_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		mov    %ecx,%eax
		call   _05a530_func

	_080375_jump:
		mov    %ecx,%eax
		call   _023aac_func

	_08037c_jump:
		mov    %ecx,%eax
		call   _080550_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080388_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		mov    %esp,%ecx
		movb   $0x000064,0x000083(%eax)
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01ddf8_func
		testb  $0x000008,0x000085(%esi)
		je     _0803ce_jump
		mov    (%esp),%eax
		mov    0x000004(%esp),%ebx
		sub    $0x000010,%eax
		add    %eax,%ebx
		mov    %bx,0x000004(%esp)
		jmp    _0803e1_jump

	_0803ce_jump:
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		add    $0x00004c,%eax
		sub    %eax,%edx
		mov    %dx,0x000004(%esp)

	_0803e1_jump:
		mov    (%esp),%ecx
		add    $0x00005c,%ecx
		mov    0x00000c(%esp),%eax
		mov    %cx,(%esp)
		mov    $0x000001,%cl
		test   %ax,%ax
		js     _0803fb_jump
		sar    %cl,%ax
		jmp    _080404_jump

	_0803fb_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_080404_jump:
		add    $0x000002,%eax
		mov    $0x000002,%cl
		mov    %ax,0x00000c(%esp)
		test   %ax,%ax
		js     _08041a_jump
		sar    %cl,%ax
		jmp    _080423_jump

	_08041a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_080423_jump:
		mov    0x000008(%esp),%edi
		add    %eax,%edi
		mov    _0c30ce_data,%ax
		mov    %di,0x000008(%esp)
		test   %ax,%ax
		je     _08046d_jump
		mov    _0c3166_data,%dx
		mov    %edi,%eax
		mov    0x00000a(%esp),%ecx
		sub    %edx,%eax
		mov    _0c3162_data,%di
		movswl %ax,%edx
		mov    0x000004(%esp),%eax
		mov    -0x000002(%esp),%ebx
		sub    %edi,%eax
		sar    $0x000010,%ecx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		cwtl   
		call   _03e2d0_func

	_08046d_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    _0c313c_data,%ecx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    _0c312a_data,%ebx
		sar    $0x000010,%eax
		mov    _0c3128_data,%edx
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    _0c3126_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _027cc0_func
		test   %ax,%ax
		je     _080519_jump
		mov    $0x000001,%cl
		mov    _0c312c_data,%ax
		test   %ax,%ax
		js     _0804cc_jump
		sar    %cl,%ax
		jmp    _0804d5_jump

	_0804cc_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0804d5_jump:
		mov    $0x000001,%cl
		mov    _0c313e_data,%ax
		test   %ax,%ax
		js     _0804e7_jump
		sar    %cl,%ax
		jmp    _0804f0_jump

	_0804e7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0804f0_jump:
		mov    0x000085(%esi),%dl
		mov    $0x000007,%eax
		test   $0x000008,%dl
		jne    _080507_jump
		cmpb   $0x000000,0x000010(%esp)
		je     _080517_jump

	_080507_jump:
		testb  $0x000008,0x000085(%esi)
		je     _080519_jump
		cmpb   $0x000001,0x000010(%esp)
		jne    _080519_jump

	_080517_jump:
		neg    %eax

	_080519_jump:
		test   %ax,%ax
		je     _080546_jump
		mov    _0c3138_data,%dx
		add    %eax,%edx
		mov    _0b9369_data,%cl
		mov    %dx,_0c3138_data
		cmp    $0x000005,%cl
		je     _080546_jump
		mov    $0x000008,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0c3112_data

	_080546_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_080550_func:
		push   %ecx
		push   %edx
		mov    0x000083(%eax),%dl
		test   %dl,%dl
		je     _080566_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x000083(%eax)

	_080566_jump:
		cmpb   $0x000000,0x000071(%eax)
		jne    _08059f_jump
		cmpb   $0x000002,0x000070(%eax)
		jne    _080578_jump
		cmpb   $0x00000a,0x00006f(%eax)
		jae    _080580_jump

	_080578_jump:
		mov    0x000070(%eax),%ch
		cmp    $0x000004,%ch
		jne    _080584_jump

	_080580_jump:
		xor    %edx,%edx
		jmp    _08059a_jump

	_080584_jump:
		cmp    $0x000006,%ch
		jne    _08058f_jump
		cmpb   $0x00000a,0x00006f(%eax)
		jae    _080595_jump

	_08058f_jump:
		cmpb   $0x000007,0x000070(%eax)
		jne    _08059f_jump

	_080595_jump:
		mov    $0x000001,%edx

	_08059a_jump:
		call   _080388_func

	_08059f_jump:
		pop    %edx
		pop    %ecx
		ret    



_0805a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		call   _065368_func
		mov    %ecx,%eax
		call   _023dbc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0805c4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01f090_func
		mov    _0c1144_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _0805e4_jump
		andb   $0x0000f7,0x000085(%ecx)
		jmp    _0805ed_jump

	_0805e4_jump:
		jge    _0805ed_jump
		orb    $0x000008,0x000085(%ecx)

	_0805ed_jump:
		cmpb   $0x000000,0x00007a(%ecx)
		je     _080610_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _065368_func
		pop    %ecx
		pop    %ebx
		ret    

	_080610_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    0x000085(%ecx),%bl
		movb   $0x000002,0x000074(%ecx)
		and    $0x0000ef,%bl
		mov    %bl,0x000085(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_080634_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x000083(%eax)
		jne    _080666_jump
		cmpb   $0x000000,0x000071(%eax)
		jne    _08064b_jump
		cmpb   $0x000000,0x000070(%eax)
		je     _080657_jump

	_08064b_jump:
		cmpb   $0x000001,0x000071(%eax)
		jne    _080666_jump
		cmpb   $0x000000,0x000070(%eax)
		jne    _080666_jump

	_080657_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _065368_func

	_080666_jump:
		pop    %edx
		pop    %ebx
		ret    



_080670_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    0x000028(%eax),%esi
		mov    0x00002c(%eax),%edi
		add    %ebx,%esi
		add    %ecx,%edi
		xor    %ecx,%ecx
		sar    $0x000004,%edi
		mov    _0c1124_data,%cx
		mov    %edi,%ebx
		imul   %ecx,%ebx
		sar    $0x000004,%esi
		lea    (%esi,%ebx,1),%ebp
		mov    %ebp,(%edx)
		mov    %ebp,%ebx
		cmp    0x000058(%eax),%ebx
		je     _0806fc_jump
		dec    %ecx
		mov    %ebx,0x000058(%eax)
		mov    %esi,%eax
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jl     _0806b4_jump
		cmp    %ecx,%eax
		jg     _0806b4_jump
		mov    $0x000001,%eax
		jmp    _0806b6_jump

	_0806b4_jump:
		xor    %eax,%eax

	_0806b6_jump:
		test   %eax,%eax
		je     _0806fc_jump
		xor    %ecx,%ecx
		mov    %edi,%eax
		mov    _0c1126_data,%cx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _0806d7_jump
		cmp    %ecx,%eax
		jg     _0806d7_jump
		mov    $0x000001,%eax
		jmp    _0806d9_jump

	_0806d7_jump:
		xor    %eax,%eax

	_0806d9_jump:
		test   %eax,%eax
		je     _0806fc_jump
		mov    (%edx),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c112c_data,%edx
		cmpb   $0x000001,0x000002(%edx,%eax,2)
		sete   %al
		xor    %ah,%ah
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_0806fc_jump:
		xor    %eax,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

_080704_switch:
		.long   _0809df_case
		.long   _080a58_case
		.long   _080a3b_case
		.long   _080a1e_case
		.long   _08099e_case
		.long   _0809da_case
		.long   _0809fc_case
		.long   _080a36_case
		.long   _08080d_case
		.long   _080873_case
		.long   _080873_case
		.long   _080909_case
		.long   _080909_case




_080738_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebp
		andb   $0x0000f7,0x000085(%eax)
		cmpb   $0x000000,0x000071(%eax)
		jne    _080a88_jump
		cmpb   $0x000001,0x000070(%eax)
		jne    _080a88_jump
		mov    %esp,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    0x00006c(%eax),%bl
		mov    0x00006d(%eax),%cl
		call   _080670_func
		test   %ax,%ax
		je     _080a96_jump
		mov    _0b9410_data,%edx
		mov    _0b9414_data,%di
		xor    %eax,%eax
		test   %di,%di
		jle    _080a96_jump

	_080790_jump:
		cmpw   $0x0000a3,0x000064(%edx)
		jne    _080a6e_jump
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%esi
		mov    0x00006d(%edx),%bl
		add    %esi,%ebx
		xor    %esi,%esi
		sar    $0x000004,%ebx
		mov    _0c1124_data,%si
		imul   %ebx,%esi
		xor    %ecx,%ecx
		mov    0x00006c(%edx),%cl
		mov    0x000028(%edx),%ebx
		add    %ecx,%ebx
		sar    $0x000004,%ebx
		mov    (%esp),%ecx
		add    %esi,%ebx
		cmp    %ecx,%ebx
		jne    _080a6e_jump
		mov    0x000042(%ebp),%si
		movswl %si,%eax
		mov    0x000040(%ebp),%cx
		test   %eax,%eax
		jge    _0807e0_jump
		neg    %eax

	_0807e0_jump:
		mov    %eax,%ebx
		movswl %cx,%eax
		test   %eax,%eax
		jge    _0807eb_jump
		neg    %eax

	_0807eb_jump:
		cmp    %ebx,%eax
		jge    _0807f1_jump
		mov    %ebx,%eax

	_0807f1_jump:
		mov    0x000070(%edx),%bl
		mov    %eax,%edi
		cmp    $0x00000c,%bl
		ja     _080a5c_jump
		and    $0x0000ff,%ebx
		jmp    *%cs:_080704_switch(,%ebx,4)

	_08080d_case:
		test   %cx,%cx
		jne    _08082d_jump
		test   %si,%si
		jle    _080820_jump
		mov    %eax,%esi
		neg    %esi
		jmp    _080a5c_jump

	_080820_jump:
		jge    _080a5c_jump
		mov    %eax,%esi
		jmp    _080a5c_jump

	_08082d_jump:
		test   %si,%si
		jne    _08085d_jump
		test   %cx,%cx
		jle    _080848_jump
		mov    %eax,%ecx
		neg    %ecx
		mov    %cx,0x000040(%ebp)
		mov    %si,0x000042(%ebp)
		jmp    _080a96_jump

	_080848_jump:
		jge    _080a5c_jump
		mov    %eax,%ecx
		mov    %cx,0x000040(%ebp)
		mov    %si,0x000042(%ebp)
		jmp    _080a96_jump

	_08085d_jump:
		neg    %ecx
		neg    %esi
		mov    %cx,0x000040(%ebp)
		mov    %si,0x000042(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_080873_case:
		cmpb   $0x000009,0x000070(%edx)
		jne    _080880_jump
		mov    $0x000001,%eax
		jmp    _080885_jump

	_080880_jump:
		mov    $0xffffffff,%eax

	_080885_jump:
		test   %si,%si
		jne    _0808ec_jump
		test   %cx,%cx
		jle    _0808b1_jump
		mov    %edi,%ecx
		mov    _0ab92e_data,%dx
		add    %eax,%ecx
		cmp    %dx,%cx
		jle    _0808a1_jump
		mov    %edx,%ecx

	_0808a1_jump:
		mov    _0ab92c_data,%bx
		cmp    %bx,%cx
		jge    _0808ec_jump
		mov    %ebx,%ecx
		jmp    _0808ec_jump

	_0808b1_jump:
		jge    _0808ec_jump
		mov    %eax,%ecx
		mov    _0ab92a_data,%eax
		sub    %edi,%ecx
		sar    $0x000010,%eax
		movswl %cx,%edx
		neg    %eax
		cmp    %eax,%edx
		jle    _0808d1_jump
		mov    _0ab92c_data,%cx
		neg    %ecx

	_0808d1_jump:
		mov    _0ab92c_data,%edx
		sar    $0x000010,%edx
		movswl %cx,%eax
		neg    %edx
		cmp    %edx,%eax
		jge    _0808ec_jump
		mov    _0ab92e_data,%cx
		neg    %ecx

	_0808ec_jump:
		test   %cx,%cx
		je     _080a5c_jump
		xor    %esi,%esi
		mov    %cx,0x000040(%ebp)
		mov    %si,0x000042(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_080909_case:
		cmpb   $0x00000b,0x000070(%edx)
		jne    _080916_jump
		mov    $0x000001,%eax
		jmp    _08091b_jump

	_080916_jump:
		mov    $0xffffffff,%eax

	_08091b_jump:
		test   %cx,%cx
		jne    _080981_jump
		test   %si,%si
		jle    _080946_jump
		mov    %edi,%esi
		mov    _0ab92e_data,%di
		add    %eax,%esi
		cmp    %di,%si
		jle    _080937_jump
		mov    %edi,%esi

	_080937_jump:
		mov    _0ab92c_data,%ax
		cmp    %ax,%si
		jge    _080981_jump
		mov    %eax,%esi
		jmp    _080981_jump

	_080946_jump:
		jge    _080981_jump
		mov    _0ab92a_data,%edx
		mov    %eax,%esi
		sar    $0x000010,%edx
		sub    %edi,%esi
		neg    %edx
		movswl %si,%eax
		cmp    %edx,%eax
		jle    _080967_jump
		mov    _0ab92c_data,%si
		neg    %esi

	_080967_jump:
		mov    _0ab92c_data,%eax
		sar    $0x000010,%eax
		movswl %si,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _080981_jump
		mov    _0ab92e_data,%si
		neg    %esi

	_080981_jump:
		test   %si,%si
		je     _080a5c_jump
		xor    %ecx,%ecx
		mov    %cx,0x000040(%ebp)
		mov    %si,0x000042(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08099e_case:
		test   %cx,%cx
		jne    _0809b9_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %cx,0x000040(%ebp)
		mov    %si,0x000042(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0809b9_jump:
		test   %si,%si
		jne    _080a5c_jump
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %cx,0x000040(%ebp)
		mov    %si,0x000042(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0809da_case:
		test   %cx,%cx
		jne    _0809f5_jump

	_0809df_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %cx,0x000040(%ebp)
		mov    %si,0x000042(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0809f5_jump:
		test   %si,%si
		jne    _080a5c_jump
		jmp    _080a58_case

	_0809fc_case:
		test   %cx,%cx
		jne    _080a19_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %cx,0x000040(%ebp)
		mov    %si,0x000042(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_080a19_jump:
		test   %si,%si
		jne    _080a5c_jump

	_080a1e_case:
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %cx,0x000040(%ebp)
		mov    %si,0x000042(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_080a36_case:
		test   %cx,%cx
		jne    _080a53_jump

	_080a3b_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %cx,0x000040(%ebp)
		mov    %si,0x000042(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_080a53_jump:
		test   %si,%si
		jne    _080a5c_jump

	_080a58_case:
		mov    %eax,%esi
		xor    %ecx,%ecx

	_080a5c_jump:
		mov    %cx,0x000040(%ebp)
		mov    %si,0x000042(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_080a6e_jump:
		inc    %eax
		add    $0x000088,%edx
		cmp    %di,%ax
		jl     _080790_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_080a88_jump:
		movw   $0x000000,0x000042(%ebp)
		mov    0x000042(%ebp),%ax
		mov    %ax,0x000040(%ebp)

	_080a96_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080aa0_func:
		push   %edx
		andb   $0x0000f7,0x000085(%eax)
		cmpw   $0x000001,_0c309e_data
		je     _080ac8_jump
		mov    0x00007b(%eax),%dh
		movb   $0x000000,0x000082(%eax)
		test   %dh,%dh
		jne    _080acf_jump
		mov    0x000070(%eax),%dl
		cmp    $0x000003,%dl
		ja     _080acf_jump

	_080ac8_jump:
		movb   $0x000004,0x000082(%eax)

	_080acf_jump:
		pop    %edx
		ret    

_080ad4_switch:
		.long   _080b60_case
		.long   _080b89_case
		.long   _080bae_case
		.long   _080bd3_case




_080ae4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000071(%eax)
		jne    _080bf5_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _080bf5_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000eb,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _071068_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01dea8_func
		mov    0x000032(%ecx),%edx
		mov    _0c1d74_data,%ebx
		sar    $0x000010,%edx
		movswl (%ebx,%edx,2),%ecx
		mov    %ecx,%ebx
		shl    $0x000004,%ebx
		add    %ecx,%ebx
		mov    _0b9410_data,%edx
		shl    $0x000003,%ebx
		add    %edx,%ebx
		cmpw   $0x0000a3,0x000064(%ebx)
		jne    _080bf5_jump
		mov    0x000070(%ebx),%cl
		cmp    $0x000003,%cl
		ja     _080bf5_jump
		xor    %edx,%edx
		mov    %cl,%dl
		jmp    *%cs:_080ad4_switch(,%edx,4)

	_080b60_case:
		mov    0x000078(%ebx),%al
		test   %al,%al
		jne    _080b6e_jump
		mov    $0x000001,%edx
		jmp    _080b7b_jump

	_080b6e_jump:
		cmp    $0x000001,%al
		jne    _080bf1_jump
		mov    $0x000003,%edx

	_080b7b_jump:
		mov    %ebx,%eax
		call   _01de98_func
		orb    $0x000002,0x000078(%ebx)
		pop    %ecx
		pop    %ebx
		ret    

	_080b89_case:
		mov    0x000078(%ebx),%dh
		test   %dh,%dh
		jne    _080b99_jump
		mov    $0x000002,%edx
		mov    %ebx,%eax
		jmp    _080ba2_jump

	_080b99_jump:
		cmp    $0x000001,%dh
		jne    _080bf1_jump
		mov    %ebx,%eax
		xor    %edx,%edx

	_080ba2_jump:
		call   _01de98_func
		orb    $0x000002,0x000078(%ebx)
		pop    %ecx
		pop    %ebx
		ret    

	_080bae_case:
		mov    0x000078(%ebx),%al
		test   %al,%al
		jne    _080bbc_jump
		mov    $0x000003,%edx
		jmp    _080bc5_jump

	_080bbc_jump:
		cmp    $0x000001,%al
		jne    _080bf1_jump
		mov    $0x000001,%edx

	_080bc5_jump:
		mov    %ebx,%eax
		call   _01de98_func
		orb    $0x000002,0x000078(%ebx)
		pop    %ecx
		pop    %ebx
		ret    

	_080bd3_case:
		mov    0x000078(%ebx),%dh
		test   %dh,%dh
		jne    _080be0_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		jmp    _080bec_jump

	_080be0_jump:
		cmp    $0x000001,%dh
		jne    _080bf1_jump
		mov    $0x000002,%edx
		mov    %ebx,%eax

	_080bec_jump:
		call   _01de98_func

	_080bf1_jump:
		orb    $0x000002,0x000078(%ebx)

	_080bf5_jump:
		pop    %ecx
		pop    %ebx
		ret    



_080bf8_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x000071(%eax)
		jne    _080c23_jump
		cmpb   $0x000000,0x000070(%eax)
		jne    _080c23_jump
		mov    _0ab92c_data,%dx
		mov    $0x000001,%ebx
		mov    %dx,0x000040(%eax)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%eax)
		call   _01dea8_func

	_080c23_jump:
		pop    %edx
		pop    %ebx
		ret    



_080c30_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0e0b94_data,%esi
		mov    %eax,%edx
		movzbl (%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x000018(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%esi),%ecx
		mov    %al,0x000014(%esp)
		call   _011c5b_func
		movw   $0x000000,0x000004(%esi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _080c88_jump
		mov    %ebx,%eax

	_080c88_jump:
		mov    %ax,0x000006(%esi)
		test   %di,%di
		jl     _080ca1_jump
		mov    $0x000001,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _080c9f_jump
		mov    %ebx,%eax

	_080c9f_jump:
		jmp    _080cb3_jump

	_080ca1_jump:
		movswl %di,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _080cb1_jump
		mov    %ebx,%eax

	_080cb1_jump:
		neg    %eax

	_080cb3_jump:
		mov    %ax,0x000008(%esi)
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		mov    0x000014(%esp),%al
		mov    %al,(%esp)
		mul    %ah
		mov    %al,0x00000c(%esp)

	_080cca_jump:
		xor    %dl,%dl
		mov    0x00000c(%esp),%al
		mov    0x000018(%esp),%dh
		mov    %al,0x00001c(%esp)

	_080cd8_jump:
		xor    %ah,%ah
		xor    %bh,%bh
		mov    0x000018(%esp),%al
		mov    %dl,%bl
		imul   %ebx,%eax
		mov    %eax,%ebx
		mov    %ax,0x000004(%ecx)
		xor    %ah,%bh
		mov    %ax,(%ecx)
		mov    0x00001c(%esp),%bl
		mov    %bl,0x000006(%ecx)
		mov    %bl,0x000002(%ecx)
		cmp    $0x0000a0,%ax
		jae    _080d05_jump
		mov    0x000014(%esi),%edi
		jmp    _080d0e_jump

	_080d05_jump:
		mov    0x000018(%esi),%edi
		sub    $0x0000a0,%eax

	_080d0e_jump:
		mov    %edi,0x000008(%ecx)
		mov    %al,0x00002e(%ecx)
		mov    %al,0x00002c(%ecx)
		add    %dh,%al
		dec    %al
		mov    %al,0x000032(%ecx)
		mov    %al,0x000030(%ecx)
		mov    0x000014(%esp),%al
		mov    %bl,0x000033(%ecx)
		add    %bl,%al
		mov    %bl,0x00002d(%ecx)
		dec    %al
		mov    %al,0x000031(%ecx)
		mov    %al,0x00002f(%ecx)
		inc    %dl
		mov    (%esi),%bl
		add    $0x000034,%ecx
		cmp    %bl,%dl
		jbe    _080cd8_jump
		mov    (%esp),%al
		add    %al,0x00000c(%esp)
		mov    0x000004(%esp),%dh
		inc    %dh
		mov    0x000001(%esi),%bl
		mov    %dh,0x000004(%esp)
		cmp    %bl,%dh
		jbe    _080cca_jump
		xor    %bh,%bh
		mov    %bh,0x000008(%esp)
		mov    %bh,0x000010(%esp)

	_080d66_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		movzbl 0x000010(%esp),%edi
		add    %eax,%eax
		mov    $0xc0440000,%ecx
		cwtl   
		movb   $0x000000,0x000020(%edi,%esi,1)
		call   _062710_func
		cwtl   
		xor    %ebx,%ebx
		call   _085498_func
		call   _085695_func
		mov    $0x3f600000,%ecx
		xor    %ebx,%ebx
		call   _085695_func
		call   _0864a4_func
		mov    0x000008(%esp),%ch
		mov    %al,0x00006b(%edi,%esi,1)
		mov    0x000010(%esp),%al
		add    $0x00000a,%ch
		inc    %al
		mov    %ch,0x000008(%esp)
		mov    %al,0x000010(%esp)
		cmp    $0x00004b,%al
		jb     _080d66_jump
		movw   $0x000000,0x0000b6(%esi)
		movb   $0x00004b,0x0000b8(%esi)
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_080dd6_jump:
		ret    

	_080dd8_case:
		mov    _0e0b94_data,%eax
		test   %eax,%eax
		je     _080dd6_jump
		cmpl   $0x000000,0x00001c(%eax)
		je     _080def_jump
		add    $0x00001c,%eax
		call   _0852ac_func

	_080def_jump:
		cmpl   $0x000000,_0e0b94_data
		je     _080dd6_jump
		mov    $_0e0b94_data,%eax
		jmp    _0852ac_func



_080e04_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    %bx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _080ebe_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _080ebe_jump
		mov    $0x0000bc,%eax
		call   _085294_func
		mov    %eax,%edx
		mov    %eax,_0e0b94_data
		test   %eax,%eax
		je     _080ebe_jump
		mov    %eax,%esi
		xor    %ebx,%ebx
		mov    $0x000002,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _080e57_jump
		mov    %ebx,%eax

	_080e57_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    0x000008(%esp),%bx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _080e6b_jump
		mov    %ebx,%eax

	_080e6b_jump:
		mov    %al,0x000001(%edx)
		mov    0x000008(%esp),%eax
		inc    %edi
		inc    %eax
		imul   %eax,%edi
		mov    0x000018(%esp),%eax
		mov    %di,0x000002(%edx)
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		call   _085294_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _080ebe_jump
		mov    _0c0f44_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_080ebe_jump:
		test   %cl,%cl
		je     _080efb_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _080240_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _080240_func
		xor    %edx,%edx
		mov    0x000002(%esp),%eax
		mov    (%esp),%dx
		sar    $0x000010,%eax
		call   _080c30_func
		jmp    _080f00_jump

	_080efb_jump:
		call   _080dd8_case

	_080f00_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_080f0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		xor    %ah,%ah
		mov    _0e0b94_data,%ebp
		mov    %ah,(%esp)
		jmp    _081042_jump

	_080f25_jump:
		mov    $0x000001,%dl
		mov    0x0000b6(%ebp),%cx
		mov    %dl,0x000008(%esp)
		add    $0x000002,%ecx
		mov    0x000001(%ebp),%dh
		mov    %cx,0x0000b6(%ebp)
		cmp    %dl,%dh
		jbe    _080fef_jump

	_080f47_jump:
		xor    %ah,%ah
		xor    %dh,%dh
		mov    0x000000(%ebp),%al
		mov    0x000008(%esp),%dl
		inc    %eax
		imul   %edx,%eax
		xor    %ebx,%ebx
		inc    %eax
		mov    %ax,%bx
		imul   $0x000034,%ebx,%ebx
		mov    0x00001c(%ebp),%eax
		add    %eax,%ebx
		mov    $0x000001,%ah
		mov    0x000000(%ebp),%dl
		mov    %ah,0x000004(%esp)
		cmp    %ah,%dl
		jbe    _080fdc_jump

	_080f71_jump:
		xor    %esi,%esi
		mov    (%ebx),%si
		sub    $0x0000a0,%esi
		mov    %esi,%eax
		imul   %esi,%eax
		xor    %ecx,%ecx
		mov    0x000002(%ebx),%cl
		sub    $0x000064,%ecx
		mov    %ecx,%edx
		imul   %ecx,%edx
		add    %edx,%eax
		sar    $0x000009,%eax
		mov    %esi,%edx
		mov    0x00001d(%eax,%ebp,1),%edi
		shl    $0x000009,%edx
		sar    $0x000018,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %ecx,%edx
		lea    0x0000a0(%eax),%esi
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		lea    0x000064(%eax),%ecx
		mov    %cl,0x000006(%ebx)
		mov    0x000004(%esp),%cl
		inc    %cl
		mov    %si,0x000004(%ebx)
		mov    %cl,0x000004(%esp)
		mov    0x000000(%ebp),%ch
		add    $0x000034,%ebx
		cmp    %ch,%cl
		jb     _080f71_jump

	_080fdc_jump:
		mov    0x000008(%esp),%bl
		inc    %bl
		mov    %bl,0x000008(%esp)
		cmp    0x000001(%ebp),%bl
		jb     _080f47_jump

	_080fef_jump:
		mov    0x0000b8(%ebp),%cl
		test   %cl,%cl
		je     _08100d_jump
		mov    %cl,%ch
		xor    %ebx,%ebx
		dec    %ch
		mov    %ch,%bl
		mov    %ch,0x0000b8(%ebp)
		mov    0x00006b(%ebx,%ebp,1),%bl
		jmp    _081010_jump

	_08100d_jump:
		mov    0x00006a(%ebp),%bl

	_081010_jump:
		cmpw   $0x000258,0x0000b6(%ebp)
		jbe    _081023_jump
		cmpb   $0x000000,0x000020(%ebp)
		jne    _081023_jump
		xor    %bl,%bl

	_081023_jump:
		mov    $0x00004a,%al

	_081025_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    0x00001f(%edx,%ebp,1),%ah
		mov    %ah,0x000020(%edx,%ebp,1)
		dec    %al
		test   %al,%al
		ja     _081025_jump
		mov    (%esp),%dh
		inc    %dh
		mov    %bl,0x000020(%ebp)
		mov    %dh,(%esp)

	_081042_jump:
		mov    0x000006(%ebp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    (%esp),%dl
		test   %eax,%eax
		jge    _081053_jump
		neg    %eax

	_081053_jump:
		cmp    %eax,%edx
		jl     _080f25_jump
		mov    0x000006(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _081067_jump
		neg    %eax

	_081067_jump:
		mov    0x000004(%ebp),%dx
		add    %eax,%edx
		mov    0x000006(%ebp),%bx
		mov    %dx,0x000004(%ebp)
		cmp    %bx,%dx
		jbe    _081080_jump
		movw   $0x000000,0x000004(%ebp)

	_081080_jump:
		mov    0x000004(%ebp),%ax
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081090_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0e0b94_data,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,(%esp)
		mov    %ah,0x000004(%esp)
		mov    0x00001c(%ebx),%edx
		mov    0x000001(%ebx),%al
		mov    %edx,%ecx
		test   %al,%al
		jbe    _08119d_jump

	_0810ba_jump:
		xor    %al,%al
		mov    %al,0x000008(%esp)
		cmpb   $0x000000,(%ebx)
		jbe    _08117c_jump
		lea    0x000008(%edx),%edi

	_0810cc_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		imul   $0x000034,%eax,%esi
		movzwl 0x000004(%ecx,%esi,1),%ebp
		mov    %ebp,0x00000c(%edx)
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000010(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		mov    %esi,0x000014(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000018(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		dec    %esi
		mov    %esi,0x00001c(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		inc    %eax
		imul   $0x000034,%eax,%eax
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000020(%edx)
		xor    %esi,%esi
		mov    0x000004(%ecx,%eax,1),%si
		dec    %esi
		mov    %esi,0x000024(%edx)
		mov    0x000006(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %eax,0x000028(%edx)
		mov    %edi,%esi
		mov    0x000010(%ebx),%eax
		call   _011c90_func
		incl   (%esp)
		mov    0x000008(%esp),%al
		inc    %al
		add    $0x000034,%edx
		mov    %al,0x000008(%esp)
		mov    (%ebx),%ah
		add    $0x000034,%edi
		cmp    %ah,%al
		jb     _0810cc_jump

	_08117c_jump:
		mov    0x000004(%esp),%ah
		mov    (%esp),%esi
		inc    %ah
		add    $0x000034,%edx
		mov    %ah,0x000004(%esp)
		mov    %ah,%al
		inc    %esi
		mov    0x000001(%ebx),%ah
		mov    %esi,(%esp)
		cmp    %ah,%al
		jb     _0810ba_jump

	_08119d_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0811b0_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000016,%ebx
		movb   $0x000000,(%eax)
		mov    %esp,%eax
		movb   $0x000000,(%edx)
		xor    %edx,%edx
		call   _085360_func
		mov    $0x001600,%edx
		mov    $0x00002f,%eax
		mov    %dx,(%esp)
		mov    %esp,%edx
		call   _0695a8_func
		mov    (%esp),%ah
		cmp    $0x000001,%ah
		jb     _081202_jump
		jbe    _08120b_jump
		cmp    $0x000080,%ah
		jb     _0812c5_jump
		jbe    _081218_jump
		cmp    $0x0000ff,%ah
		je     _08120b_jump
		jmp    _0812c5_jump

	_081202_jump:
		test   %ah,%ah
		je     _081218_jump
		jmp    _0812c5_jump

	_08120b_jump:
		movb   $0x000002,(%esi)
		mov    $0x000001,%al
		movb   $0x000000,(%ecx)
		jmp    _0812d2_jump

	_081218_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _085360_func
		mov    $0x004680,%ebx
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %bx,(%esp)
		call   _0695a8_func
		cmpb   $0x000080,(%esp)
		jne    _08124a_jump
		xor    %al,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_08124a_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x001605,%ecx
		call   _085360_func
		xor    %esi,%esi
		mov    $0x000001,%edx
		mov    $0x00002f,%eax
		mov    %cx,(%esp)
		mov    %si,0x000004(%esp)
		mov    %si,0x000008(%esp)
		mov    %dx,0x000006(%esp)
		mov    %esp,%edx
		mov    %si,0x000002(%esp)
		call   _0695a8_func
		cmpw   $0x000000,0x000004(%esp)
		jne    _0812bc_jump
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x001606,%ecx
		call   _085360_func
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %cx,(%esp)
		call   _0695a8_func
		mov    $0x000081,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0812bc_jump:
		mov    $0x000082,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0812c5_jump:
		mov    (%esp),%al
		mov    %al,(%esi)
		mov    0x000001(%esp),%al
		mov    %al,(%ecx)
		mov    $0x000083,%al

	_0812d2_jump:
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0812dc_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000038,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    $0x00001c,%ebx
		movb   $0x000000,(%eax)
		lea    0x00001c(%esp),%eax
		movb   $0x000000,(%edx)
		xor    %edx,%edx
		call   _085360_func
		mov    $0x00001c,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _085360_func
		mov    $0x003000,%edx
		mov    %esp,%ebx
		mov    $0x000021,%eax
		mov    %edx,0x00001c(%esp)
		lea    0x00001c(%esp),%edx
		call   _086c23_func
		mov    (%esp),%al
		mov    %al,(%ecx)
		mov    0x000001(%esp),%al
		mov    %al,(%esi)
		mov    (%ecx),%ah
		cmp    $0x00000a,%ah
		je     _08133a_jump
		cmp    $0x000014,%ah
		jne    _081343_jump

	_08133a_jump:
		movb   $0x000001,_0c3365_data
		jmp    _08134b_jump

	_081343_jump:
		xor    %dh,%dh
		mov    %dh,_0c3365_data

	_08134b_jump:
		mov    0x000005(%esp),%al
		add    $0x000038,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_081360_func:
		add    %eax,(%eax)
		add    (%edx),%eax



_081364_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c0f44_data,%ecx
		mov    %eax,%ebx
		xor    %esi,%esi

	_081373_jump:
		xor    %edx,%edx
		mov    _0c33d3_data,%dl
		imul   $0x000300,%edx,%edx
		mov    (%ebx),%al
		and    $0x0000ff,%eax
		lea    (%eax,%eax,2),%eax
		add    %eax,%edx
		xor    %eax,%eax
		movzbl _0b4328_data(%edx),%edi
		mov    _0b4329_data(%edx),%al
		mov    _0b432a_data(%edx),%dl
		add    %edi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    $0x000018,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		inc    %esi
		inc    %ecx
		add    $0x0000d0,%eax
		inc    %ebx
		mov    %al,-0x000001(%ecx)
		cmp    $0x00fa00,%si
		jb     _081373_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0813d0_func:
		push   %esi
		push   %edi
		cmp    %ax,%dx
		jle    _081457_jump
		movswl %dx,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0bf3b4_data(%eax),%dl
		test   $0x000001,%dl
		je     _081428_jump
		push   $0x000080
		add    $0x000005,%ecx
		mov    _0bf3ae_data(%eax),%dx
		add    $0x000005,%ebx
		add    $0x000005,%edx
		mov    _0bf3ac_data(%eax),%ax
		movswl %bx,%edi
		add    $0x000005,%eax
		movswl %dx,%esi
		cwtl   
		movswl %cx,%edx
		mov    %esi,%ecx
		mov    %eax,%ebx
		mov    %edi,%eax
		jmp    _081452_jump

	_081428_jump:
		test   $0x000004,%dl
		je     _081457_jump
		mov    _0bf3ac_data(%eax),%esi
		xor    %edx,%edx
		mov    _0bf3aa_data(%eax),%edi
		mov    _0c3395_data,%dl
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		movswl %bx,%eax
		push   %edx
		mov    %edi,%ebx
		movswl %cx,%edx
		mov    %esi,%ecx

	_081452_jump:
		call   _01aa0c_func

	_081457_jump:
		pop    %edi
		pop    %esi
		ret    



_08145c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		xor    %edx,%edx
		mov    $_0bf3ac_data,%esi
		mov    %dx,0x000004(%esp)
		jmp    _0814e7_jump

	_081473_jump:
		mov    (%esi),%dx
		mov    0x000008(%esi),%ah
		mov    0x000002(%esi),%di
		test   $0x000001,%ah
		je     _0814da_jump
		mov    0x000002(%esp),%ebp
		movswl %dx,%edx
		movswl %di,%edi
		mov    %edx,(%esp)
		sar    $0x000010,%ebp
		mov    %edi,%ecx
		mov    (%esp),%ebx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x000004(%esi),%dl
		call   _0813d0_func
		mov    (%esp),%ebx
		mov    %edi,%ecx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x000005(%esi),%dl
		call   _0813d0_func
		mov    (%esp),%ebx
		mov    %edi,%ecx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x000007(%esi),%dl
		call   _0813d0_func
		mov    (%esp),%ebx
		mov    %edi,%ecx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x000006(%esi),%dl
		call   _0813d0_func
		orb    $0x000002,0x000008(%esi)

	_0814da_jump:
		mov    0x000004(%esp),%ecx
		inc    %ecx
		add    $0x00007b,%esi
		mov    %cx,0x000004(%esp)

	_0814e7_jump:
		xor    %edx,%edx
		mov    0x000004(%esp),%ebx
		mov    _0bf388_data,%dl
		cmp    %bx,%dx
		jg     _081473_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081508_func:
		push   %ebx
		push   %edx
		mov    $_0b6e48_data,%edx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    _0bf388_data,%al
		cmp    %ax,%bx
		jl     _081520_jump
		pop    %edx
		pop    %ebx
		ret    

	_081520_jump:
		mov    %edx,%eax
		call   _019070_func
		inc    %ebx
		add    $0x000088,%edx
		xor    %eax,%eax
		mov    _0bf388_data,%al
		cmp    %ax,%bx
		jl     _081520_jump
		pop    %edx
		pop    %ebx
		ret    



_081540_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $_0b6e48_data,%edx
		mov    $_0bf3ac_data,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _0bf388_data,%al
		cmp    %ax,%cx
		jl     _08155f_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08155f_jump:
		mov    0x000008(%ebx),%ah
		test   $0x000004,%ah
		jne    _08156c_jump
		test   $0x000002,%ah
		je     _08157a_jump

	_08156c_jump:
		mov    %edx,%eax
		call   _045054_func
		mov    %edx,%eax
		call   _05b0d8_func

	_08157a_jump:
		add    $0x000088,%edx
		add    $0x00007b,%ebx
		inc    %ecx
		xor    %eax,%eax
		mov    _0bf388_data,%al
		cmp    %ax,%cx
		jl     _08155f_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081594_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c3102_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0bf3bc_data(%eax),%ax
		mov    _0bf2f4_data,%edx
		and    $0x00ffff,%eax
		mov    $_0b8a08_data,%edi
		mov    (%edx,%eax,4),%esi
		push   %edi

	_0815c9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0815e1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0815c9_jump

	_0815e1_jump:
		pop    %edi
		mov    _0c3102_data,%edx
		mov    $0x000002,%ah
		sar    $0x000010,%edx
		mov    %ah,_0b8adc_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $0x0000fa,%ebx
		sub    %edx,%eax
		mov    %bx,_0b8ada_data
		mov    _0bf3b9_data(%eax),%al
		mov    $0x0000a0,%edx
		mov    %al,_0b8adf_data
		mov    %dx,_0b8ad8_data
		xor    %dl,%dl
		mov    %edi,%eax
		mov    %dl,_0b8add_data
		mov    %dl,_0b8ade_data
		call   _01f8d4_func
		mov    _0b8ad0_data,%cx
		mov    _0b8ad2_data,%si
		mov    _0b8ad4_data,%di
		mov    _0b8ad6_data,%ax
		sub    $0x000005,%ecx
		sub    $0x000002,%esi
		add    $0x00000a,%edi
		add    $0x000004,%eax
		mov    %cx,_0b8ad0_data
		mov    %si,_0b8ad2_data
		mov    %di,_0b8ad4_data
		mov    %ax,_0b8ad6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081684_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c3102_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0bf3ba_data(%eax),%ax
		mov    _0bf2f4_data,%edx
		and    $0x00ffff,%eax
		mov    $_0b8bb8_data,%edi
		mov    (%edx,%eax,4),%esi
		push   %edi

	_0816b9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0816d1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0816b9_jump

	_0816d1_jump:
		pop    %edi
		mov    _0c3102_data,%edx
		mov    $0x000002,%ah
		sar    $0x000010,%edx
		mov    %ah,_0b8c8c_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $0xffffffce,%ebx
		sub    %edx,%eax
		mov    %bx,_0b8c8a_data
		mov    _0bf3b8_data(%eax),%al
		mov    $0x0000a0,%edx
		mov    %al,_0b8c8f_data
		mov    %dx,_0b8c88_data
		xor    %dl,%dl
		mov    %edi,%eax
		mov    %dl,_0b8c8d_data
		mov    %dl,_0b8c8e_data
		call   _01f8d4_func
		mov    _0b8c80_data,%cx
		mov    _0b8c82_data,%si
		mov    _0b8c84_data,%di
		mov    _0b8c86_data,%ax
		sub    $0x000005,%ecx
		sub    $0x000003,%esi
		add    $0x00000a,%edi
		add    $0x000006,%eax
		mov    %cx,_0b8c80_data
		mov    %si,_0b8c82_data
		mov    %di,_0b8c84_data
		mov    %ax,_0b8c86_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081774_func:
		push   %ebx
		push   %edx
		push   %esi
		call   _01f47c_func
		call   _081594_func
		call   _081684_func
		mov    $0x0000a0,%edx
		mov    $0x0000fa,%ebx
		mov    $0xffffffce,%esi
		xor    %ah,%ah
		mov    %dx,_0b8bb0_data
		mov    %bx,_0b8bb2_data
		mov    %ah,_0b8bb5_data
		mov    %ah,_0b8bb6_data
		mov    %dx,_0b8d60_data
		mov    %si,_0b8d62_data
		mov    %ah,_0b8d65_data
		mov    %ah,_0b8d66_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_0817d0_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000d8,%ecx
		mov    $_0b8a08_data,%esi
		mov    $_0b8ae0_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _081594_func
		mov    _0c3102_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0bf3ba_data(%eax),%ax
		mov    _0bf2f4_data,%edx
		and    $0x00ffff,%eax
		mov    $_0b8c90_data,%edi
		mov    (%edx,%eax,4),%esi
		push   %edi

	_081828_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _081840_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _081828_jump

	_081840_jump:
		pop    %edi
		mov    $_0b8bb8_data,%edx
		mov    %edi,%eax
		call   _0853a0_func
		test   %eax,%eax
		je     _081870_jump
		mov    $0x0000d8,%ecx
		mov    $_0b8bb8_data,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _081684_func

	_081870_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_081878_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		cmpb   $0x000000,_0c3384_data
		jne    _081946_jump
		mov    _0b8ada_data,%dx
		cmp    $0x0000c5,%dx
		jle    _0818b9_jump
		mov    %edx,%ebx
		mov    _0b8ad2_data,%cx
		sub    $0x000002,%ebx
		sub    $0x000002,%ecx
		mov    %bx,_0b8ada_data
		mov    %cx,_0b8ad2_data

	_0818b9_jump:
		mov    _0b8c8a_data,%si
		cmp    $0x00001c,%si
		jge    _0818e3_jump
		mov    %esi,%edi
		mov    _0b8c82_data,%ax
		add    $0x000002,%edi
		add    $0x000002,%eax
		mov    %di,_0b8c8a_data
		mov    %ax,_0b8c82_data

	_0818e3_jump:
		mov    _0b8bb2_data,%dx
		cmp    $0x000129,%dx
		jge    _08190e_jump
		mov    %edx,%ebx
		mov    _0b8baa_data,%cx
		add    $0x000002,%ebx
		add    $0x000002,%ecx
		mov    %bx,_0b8bb2_data
		mov    %cx,_0b8baa_data

	_08190e_jump:
		mov    _0b8d60_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb8,%eax
		jle    _081d42_jump
		mov    _0b8d62_data,%si
		mov    _0b8d5a_data,%di
		sub    $0x000002,%esi
		sub    $0x000002,%edi
		mov    %si,_0b8d62_data
		mov    %di,_0b8d5a_data
		jmp    _081d42_jump

	_081946_jump:
		cmpb   $0x000000,_0c3380_data
		jne    _081d42_jump
		mov    $_0b8a08_data,%edx
		mov    $_0c2dce_data,%edi
		mov    %edx,%esi
		push   %edi

	_081960_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _081978_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _081960_jump

	_081978_jump:
		pop    %edi
		xor    %eax,%eax
		mov    _0b8adf_data,%al
		lea    0x000024(%esp),%ebx
		mov    %eax,_0c0ea0_data
		xor    %eax,%eax
		mov    %edx,0x000014(%esp)
		mov    _0b8adc_data,%al
		mov    %edx,%edi
		mov    %eax,_0c0e9c_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0b8ad6_data,%eax
		lea    0x000028(%esp),%edx
		sar    $0x000010,%eax
		mov    %ecx,_0c0edc_data
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		lea    0x000020(%esp),%ecx
		mov    _0c0e9c_data,%al
		call   _01f3b8_func
		mov    _0c0edc_data,%ebx
		xor    %esi,%esi
		test   %ebx,%ebx
		jle    _081b4b_jump
		mov    $_0b8a08_data,%ecx
		xor    %edi,%edi
		mov    %ecx,0x000008(%esp)

	_0819e6_jump:
		mov    0x000008(%esp),%eax
		mov    (%eax),%dh
		cmp    $0x00002f,%dh
		jne    _081a29_jump
		mov    0x000014(%esp),%edx
		mov    0x000022(%esp),%ecx
		mov    0x00001e(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %esi,%edx
		mov    $_0b8a08_data,%eax
		call   _01f824_func
		movswl %ax,%ebp
		mov    0x00000c(%esp),%eax
		sar    %ebp
		sub    %ebp,%eax
		mov    %eax,%ebp
		xor    %al,%al
		jmp    _081a54_jump

	_081a29_jump:
		cmp    $0x000020,%dh
		jne    _081a3b_jump
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%ebp
		xor    %al,%al
		jmp    _081a54_jump

	_081a3b_jump:
		mov    0x000014(%esp),%eax
		xor    %edx,%edx
		mov    0x000008(%esp),%ebx
		mov    0x0000d4(%eax),%dl
		xor    %eax,%eax
		mov    (%ebx),%al
		call   _01f4b0_func

	_081a54_jump:
		test   %al,%al
		je     _081b31_jump
		cmpl   $0x000002,_0c0e9c_data
		jne    _081a7b_jump
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0c1114_data,%edx
		add    %eax,%edx
		mov    %edx,0x000018(%esp)
		jmp    _081a8e_jump

	_081a7b_jump:
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%edx
		mov    _0c1130_data,%eax
		add    %edx,%eax
		mov    %eax,0x000018(%esp)

	_081a8e_jump:
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0ae9f0_data(%edi)
		mov    0x000014(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %edi,%ecx
		mov    %eax,_0aeb30_data(%edi)
		xor    %ebx,%ebx
		mov    %ebx,_0ae838_data(%edi)
		jne    _081af5_jump

	_081abb_jump:
		mov    _0c0edc_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %esi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _06a9a0_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %ebx,%edx
		mov    %edx,_0ae838_data(%ecx)
		je     _081abb_jump

	_081af5_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _06a9a0_func
		cwtl   
		sub    %eax,%edx
		mov    0x000018(%esp),%eax
		mov    %edx,_0ae6f8_data(%ecx)
		mov    0x000009(%eax),%al
		and    $0x00000f,%al
		mov    0x000018(%esp),%ebx
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebx),%dl
		add    %eax,%edx
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		add    %edx,%ebp

	_081b31_jump:
		mov    0x000008(%esp),%ecx
		mov    _0c0edc_data,%eax
		add    $0x000004,%edi
		inc    %ecx
		inc    %esi
		mov    %ecx,0x000008(%esp)
		cmp    %eax,%esi
		jl     _0819e6_jump

	_081b4b_jump:
		mov    $_0b8bb8_data,%edx
		mov    $_0c2db0_data,%edi
		mov    %edx,%esi
		push   %edi

	_081b58_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _081b70_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _081b58_jump

	_081b70_jump:
		pop    %edi
		xor    %eax,%eax
		mov    _0b8c8f_data,%al
		lea    0x000024(%esp),%ebx
		mov    %eax,_0c0ee8_data
		xor    %eax,%eax
		mov    %edx,0x000004(%esp)
		mov    _0b8c8c_data,%al
		mov    %edx,%edi
		mov    %eax,_0c0ea8_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0b8c86_data,%eax
		lea    0x000028(%esp),%edx
		sar    $0x000010,%eax
		mov    %ecx,_0c0ed8_data
		mov    %eax,0x000010(%esp)
		xor    %eax,%eax
		lea    0x000020(%esp),%ecx
		mov    _0c0ea8_data,%al
		call   _01f3b8_func
		mov    _0c0ed8_data,%ebx
		xor    %esi,%esi
		test   %ebx,%ebx
		jle    _081d36_jump
		movl   $_0b8bb8_data,0x00001c(%esp)
		xor    %edi,%edi

	_081bdd_jump:
		mov    0x00001c(%esp),%eax
		mov    (%eax),%cl
		cmp    $0x00002f,%cl
		jne    _081c1c_jump
		mov    0x000004(%esp),%edx
		mov    0x000022(%esp),%ecx
		mov    0x00001e(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %esi,%edx
		mov    $_0b8bb8_data,%eax
		call   _01f824_func
		cwtl   
		mov    0x000010(%esp),%ebp
		sar    %eax
		sub    %eax,%ebp
		xor    %al,%al
		jmp    _081c47_jump

	_081c1c_jump:
		cmp    $0x000020,%cl
		jne    _081c2e_jump
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%ebp
		xor    %al,%al
		jmp    _081c47_jump

	_081c2e_jump:
		mov    0x000004(%esp),%eax
		xor    %edx,%edx
		mov    0x00001c(%esp),%ebx
		mov    0x0000d4(%eax),%dl
		xor    %eax,%eax
		mov    (%ebx),%al
		call   _01f4b0_func

	_081c47_jump:
		test   %al,%al
		je     _081d1b_jump
		cmpl   $0x000002,_0c0ea8_data
		jne    _081c68_jump
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0c1114_data,%edx
		jmp    _081c76_jump

	_081c68_jump:
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0c1130_data,%edx

	_081c76_jump:
		add    %eax,%edx
		mov    %edx,(%esp)
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0aeab8_data(%edi)
		mov    0x000004(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %edi,%ecx
		mov    %eax,_0ae900_data(%edi)
		xor    %ebx,%ebx
		mov    %ebx,_0ae7c0_data(%edi)
		jne    _081ce2_jump

	_081ca8_jump:
		mov    _0c0ed8_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %esi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _06a9a0_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %ebx,%edx
		mov    %edx,_0ae7c0_data(%ecx)
		je     _081ca8_jump

	_081ce2_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _06a9a0_func
		cwtl   
		sub    %eax,%edx
		mov    (%esp),%eax
		mov    %edx,_0ae978_data(%ecx)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    (%esp),%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebx),%al
		add    %edx,%eax
		mov    0x000022(%esp),%edx
		sar    $0x000010,%edx
		sub    %edx,%eax
		add    %eax,%ebp

	_081d1b_jump:
		mov    0x00001c(%esp),%ebx
		mov    _0c0ed8_data,%ecx
		add    $0x000004,%edi
		inc    %ebx
		inc    %esi
		mov    %ebx,0x00001c(%esp)
		cmp    %ecx,%esi
		jl     _081bdd_jump

	_081d36_jump:
		movb   $0x000001,_0c3380_data
		call   _01f47c_func

	_081d42_jump:
		mov    _0c3380_data,%al
		cmp    $0x000001,%al
		jne    _081f4f_jump
		mov    _0c0ed8_data,%edi
		mov    %al,%cl
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _081e44_jump
		xor    %edx,%edx

	_081d63_jump:
		mov    _0c2db0_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _081e32_jump
		cmp    $0x000020,%ah
		je     _081e32_jump
		mov    _0ae978_data(%edx),%eax
		mov    _0ae900_data(%edx),%ebp
		add    %eax,%ebp
		mov    %ebp,_0ae900_data(%edx)
		cmp    $0x000c80,%ebp
		jl     _081dd4_jump
		movl   $0x000c80,_0ae900_data(%edx)
		test   %eax,%eax
		jge    _081da7_jump
		neg    %eax

	_081da7_jump:
		cmp    $0x000008,%eax
		jge    _081dc6_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _06a9a0_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0ae978_data(%edx)
		jmp    _081dd4_jump

	_081dc6_jump:
		mov    _0ae978_data(%edx),%eax
		neg    %eax
		mov    %eax,_0ae978_data(%edx)

	_081dd4_jump:
		mov    _0ae978_data(%edx),%edi
		mov    _0ae7c0_data(%edx),%eax
		mov    _0aeab8_data(%edx),%ebp
		inc    %edi
		add    %eax,%ebp
		mov    _0c3380_data,%al
		mov    %edi,_0ae978_data(%edx)
		mov    %ebp,_0aeab8_data(%edx)
		cmp    $0x000001,%al
		jne    _081e1a_jump
		test   %ebp,%ebp
		jle    _081e0a_jump
		cmp    $0x001310,%ebp
		jl     _081e1a_jump

	_081e0a_jump:
		mov    _0ae7c0_data(%edx),%eax
		neg    %eax
		mov    %eax,_0ae7c0_data(%edx)
		jmp    _081e32_jump

	_081e1a_jump:
		mov    _0aeab8_data(%edx),%edi
		cmp    $0xfffffec0,%edi
		jle    _081e32_jump
		cmp    $0x001400,%edi
		jge    _081e32_jump
		xor    %cl,%cl

	_081e32_jump:
		mov    _0c0ed8_data,%esi
		inc    %ebx
		add    $0x000004,%edx
		cmp    %esi,%ebx
		jl     _081d63_jump

	_081e44_jump:
		mov    _0c0edc_data,%edi
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _081f35_jump
		mov    $0x000c80,%ebp
		xor    %edx,%edx

	_081e5b_jump:
		mov    _0c2dce_data(%ebx),%ch
		cmp    $0x00002f,%ch
		je     _081f24_jump
		cmp    $0x000020,%ch
		je     _081f24_jump
		mov    _0ae6f8_data(%edx),%eax
		mov    _0aeb30_data(%edx),%esi
		add    %eax,%esi
		mov    %esi,_0aeb30_data(%edx)
		cmp    $0x000c80,%esi
		jl     _081ec8_jump
		mov    %ebp,_0aeb30_data(%edx)
		test   %eax,%eax
		jge    _081e9b_jump
		neg    %eax

	_081e9b_jump:
		cmp    $0x000008,%eax
		jge    _081eba_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _06a9a0_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0ae6f8_data(%edx)
		jmp    _081ec8_jump

	_081eba_jump:
		mov    _0ae6f8_data(%edx),%eax
		neg    %eax
		mov    %eax,_0ae6f8_data(%edx)

	_081ec8_jump:
		mov    _0ae6f8_data(%edx),%eax
		inc    %eax
		mov    _0ae9f0_data(%edx),%esi
		mov    %eax,_0ae6f8_data(%edx)
		add    _0ae838_data(%edx),%esi
		mov    _0c3380_data,%ah
		mov    %esi,_0ae9f0_data(%edx)
		cmp    $0x000001,%ah
		jne    _081f0e_jump
		test   %esi,%esi
		jle    _081efe_jump
		cmp    $0x001360,%esi
		jl     _081f0e_jump

	_081efe_jump:
		mov    _0ae838_data(%edx),%eax
		neg    %eax
		mov    %eax,_0ae838_data(%edx)
		jmp    _081f24_jump

	_081f0e_jump:
		mov    _0ae9f0_data(%edx),%eax
		cmp    $0xfffffec0,%eax
		jle    _081f24_jump
		cmp    $0x001400,%eax
		jge    _081f24_jump
		xor    %cl,%cl

	_081f24_jump:
		mov    _0c0edc_data,%eax
		inc    %ebx
		add    $0x000004,%edx
		cmp    %eax,%ebx
		jl     _081e5b_jump

	_081f35_jump:
		test   %cl,%cl
		je     _082202_jump
		xor    %ah,%ah
		mov    %ah,_0c3380_data
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_081f4f_jump:
		cmp    $0x000002,%al
		jne    _0820fd_jump
		mov    _0c0ed8_data,%esi
		xor    %ecx,%ecx
		test   %esi,%esi
		jle    _082021_jump
		xor    %ebx,%ebx

	_081f69_jump:
		mov    _0c2db0_data(%ecx),%al
		cmp    $0x00002f,%al
		je     _08200f_jump
		cmp    $0x000020,%al
		je     _08200f_jump
		mov    _0ae900_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _081f90_jump
		neg    %eax

	_081f90_jump:
		mov    %eax,%edx
		mov    _0aeab8_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _081fa3_jump
		neg    %eax

	_081fa3_jump:
		cmp    %eax,%edx
		jle    _081fb4_jump
		mov    _0ae900_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _081fbf_jump

	_081fb4_jump:
		mov    _0aeab8_data(%ebx),%eax
		sub    $0x000a00,%eax

	_081fbf_jump:
		test   %eax,%eax
		jge    _081fc5_jump
		neg    %eax

	_081fc5_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _06a9a0_func
		movswl %ax,%edi
		mov    _0aeab8_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0ae900_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0ae7c0_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0ae978_data(%ebx)

	_08200f_jump:
		mov    _0c0ed8_data,%ebp
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %ebp,%ecx
		jl     _081f69_jump

	_082021_jump:
		mov    _0c0edc_data,%eax
		xor    %ecx,%ecx
		test   %eax,%eax
		jle    _0820ec_jump
		xor    %ebx,%ebx

	_082032_jump:
		mov    _0c2dce_data(%ecx),%dh
		cmp    $0x00002f,%dh
		je     _0820da_jump
		cmp    $0x000020,%dh
		je     _0820da_jump
		mov    _0aeb30_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _08205b_jump
		neg    %eax

	_08205b_jump:
		mov    %eax,%edx
		mov    _0ae9f0_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _08206e_jump
		neg    %eax

	_08206e_jump:
		cmp    %eax,%edx
		jle    _08207f_jump
		mov    _0aeb30_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _08208a_jump

	_08207f_jump:
		mov    _0ae9f0_data(%ebx),%eax
		sub    $0x000a00,%eax

	_08208a_jump:
		test   %eax,%eax
		jge    _082090_jump
		neg    %eax

	_082090_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _06a9a0_func
		movswl %ax,%edi
		mov    _0ae9f0_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0aeb30_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0ae838_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0ae6f8_data(%ebx)

	_0820da_jump:
		mov    _0c0edc_data,%edx
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %edx,%ecx
		jl     _082032_jump

	_0820ec_jump:
		movb   $0x000003,_0c3380_data
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0820fd_jump:
		cmp    $0x000003,%al
		jne    _082202_jump
		mov    $0x000001,%al
		mov    _0c0ed8_data,%ecx
		xor    %ebx,%ebx
		test   %ecx,%ecx
		jle    _08217f_jump
		mov    _0c0ed8_data,%ebp
		xor    %edx,%edx

	_08211f_jump:
		mov    _0c2db0_data(%ebx),%cl
		cmp    $0x00002f,%cl
		je     _082177_jump
		cmp    $0x000020,%cl
		je     _082177_jump
		mov    _0ae978_data(%edx),%ecx
		mov    _0ae900_data(%edx),%esi
		mov    _0aeab8_data(%edx),%edi
		add    %ecx,%esi
		add    _0ae7c0_data(%edx),%edi
		mov    %esi,_0ae900_data(%edx)
		mov    %edi,_0aeab8_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _082177_jump
		cmp    $0x001400,%edi
		jge    _082177_jump
		cmp    $0xfffffec0,%esi
		jle    _082177_jump
		cmp    $0x000c80,%esi
		jge    _082177_jump
		xor    %al,%al

	_082177_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _08211f_jump

	_08217f_jump:
		mov    _0c0edc_data,%edx
		xor    %ebx,%ebx
		test   %edx,%edx
		jle    _0821f7_jump
		mov    _0c0edc_data,%ebp
		xor    %edx,%edx

	_082197_jump:
		mov    _0c2dce_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _0821ef_jump
		cmp    $0x000020,%ah
		je     _0821ef_jump
		mov    _0ae6f8_data(%edx),%ecx
		mov    _0aeb30_data(%edx),%esi
		mov    _0ae9f0_data(%edx),%edi
		add    %ecx,%esi
		add    _0ae838_data(%edx),%edi
		mov    %esi,_0aeb30_data(%edx)
		mov    %edi,_0ae9f0_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _0821ef_jump
		cmp    $0x001400,%edi
		jge    _0821ef_jump
		cmp    $0xfffffec0,%esi
		jle    _0821ef_jump
		cmp    $0x000c80,%esi
		jge    _0821ef_jump
		xor    %al,%al

	_0821ef_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _082197_jump

	_0821f7_jump:
		test   %al,%al
		je     _082202_jump
		xor    %al,%al
		mov    %al,_0c3380_data

	_082202_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08220c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0bf320_data,%eax
		call   _077e68_func
		xor    %edx,%edx
		xor    %eax,%eax
		jmp    _082246_jump

	_08221f_jump:
		cmpb   $0x000002,_0bf3b7_data(%eax)
		je     _082242_jump
		mov    _0bf3b4_data(%eax),%bh
		or     $0x000001,%bh
		mov    %bh,%cl
		mov    %bh,_0bf3b4_data(%eax)
		and    $0x0000fb,%cl
		mov    %cl,_0bf3b4_data(%eax)

	_082242_jump:
		add    $0x00007b,%eax
		inc    %edx

	_082246_jump:
		xor    %ebx,%ebx
		mov    _0bf388_data,%bl
		cmp    %ebx,%edx
		jl     _08221f_jump
		mov    $0x000001,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %dx,_0c3152_data
		mov    %dx,_0c3142_data
		mov    %cx,_0c3156_data
		mov    %cx,_0c3146_data
		mov    %dx,_0c3102_data
		mov    %dx,_0c30e0_data
		mov    %dx,_0c30de_data
		xor    %dl,%al
		mov    $0x000001,%ch
		mov    %al,_0c3396_data
		mov    %ch,_0c33ae_data
		xor    %dh,%ah
		xor    %dl,%dl
		mov    %ah,_0c33cb_data
		mov    %dl,_0c3393_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0822b0_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000088,%ecx
		mov    $_0b92f8_data,%esi
		mov    $_0b9640_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0b94a8_data,%eax
		mov    $0x000100,%edx
		mov    %eax,_0b92f8_data
		mov    _0b94b0_data,%eax
		mov    %dx,_0b9356_data
		mov    %eax,_0b9300_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_0822f8_func:
		push   %edx
		mov    _0b9640_data,%eax
		mov    %eax,_0b92f8_data
		mov    _0b9648_data,%eax
		xor    %edx,%edx
		mov    %eax,_0b9300_data
		mov    _0b9684_data,%ax
		mov    %dx,_0b9356_data
		mov    %ax,_0b933c_data
		pop    %edx
		ret    



_082324_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%dl
		xor    %ah,%ah
		mov    _0bf2fd_data,%bl
		mov    %ah,_0c338e_data
		mov    %dl,_0c33a9_data
		mov    %ah,_0c33b4_data
		test   %bl,%bl
		jne    _08235e_jump
		xor    %edx,%edx
		mov    _0c3102_data,%ax
		mov    %dx,_0c3156_data
		mov    %ax,_0c3104_data

	_08235e_jump:
		mov    _0c3104_data,%ax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ax,_0c30f4_data
		mov    $_0b92f8_data,%eax
		call   _01dea8_func
		mov    _0c3102_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    _0bf3aa_data(%eax),%ebx
		mov    _0b9364_data,%dl
		sar    $0x000010,%ebx
		xor    %ecx,%ecx
		sub    %edx,%ebx
		xor    %esi,%esi
		add    $0x000004,%ebx
		mov    _0bf3ac_data(%eax),%edx
		mov    %ebx,_0b9320_data
		sar    $0x000010,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0b9365_data,%al
		mov    %bx,_0b9338_data
		mov    %bx,_0b933a_data
		sub    %eax,%edx
		xor    %bl,%cl
		mov    $_0b6e48_data,%ebx
		add    $0x000008,%edx
		xor    %eax,%eax
		mov    %edx,_0b9324_data
		call   _01dd10_func
		jmp    _082486_jump

	_0823eb_jump:
		xor    %eax,%eax
		mov    %cl,%al
		imul   $0x00007b,%eax,%eax
		movw   $0x000036,0x000064(%ebx)
		mov    _0bf3ac_data(%eax),%dx
		sub    $0x00002a,%edx
		mov    %dx,0x00003c(%ebx)
		mov    _0bf3ae_data(%eax),%dx
		movb   $0x000005,0x000073(%ebx)
		movb   $0x000045,0x000072(%ebx)
		movw   $0x000000,0x00005e(%ebx)
		movb   $0x000050,0x00006c(%ebx)
		sub    $0x000027,%edx
		movb   $0x000040,0x00006d(%ebx)
		mov    %ebx,%eax
		mov    %dx,0x00003e(%ebx)
		call   _062e90_func
		mov    %ebx,%eax
		call   _045054_func
		xor    %eax,%eax
		mov    0x000071(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x000070(%ebx),%dl
		mov    0x000002(%eax,%edx,8),%al
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%ebx),%edx
		xor    %edi,%edi
		mov    0x00000a(%edx,%eax,1),%di
		movswl %si,%edx
		add    %edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		inc    %cl
		mov    %dl,0x00006f(%ebx)
		mov    _0bf388_data,%ch
		cmp    %ch,%cl
		jbe    _08247f_jump
		mov    %ch,%cl

	_08247f_jump:
		add    $0x000088,%ebx
		inc    %esi

	_082486_jump:
		xor    %eax,%eax
		mov    _0bf388_data,%al
		cmp    %ax,%si
		jl     _0823eb_jump
		mov    _0c3162_data,%ax
		mov    %ax,_0c30e6_data
		mov    _0c3166_data,%ax
		mov    %ax,_0c30e4_data
		mov    _0c30e0_data,%ax
		mov    %ax,_0c3162_data
		mov    _0c30de_data,%ax
		mov    %ax,_0c3166_data
		call   _044180_func
		mov    $0x00001e,%eax
		mov    %ax,_0c3168_data
		mov    %ax,_0c316e_data
		mov    _0c33ae_data,%al
		and    $0x000001,%al
		mov    _0b937d_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0b937d_data
		shl    $0x000003,%al
		mov    $0xffffffff,%esi
		mov    %ah,%dl
		mov    %si,_0c3178_data
		or     %al,%dl
		mov    %si,_0c317a_data
		mov    %dl,_0b937d_data
		call   _081774_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082520_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,_0c3380_data
		je     _082546_jump
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		testb  $0x000001,_0bf3b4_data(%eax)
		je     _08254d_jump

	_082546_jump:
		mov    %dx,_0c3104_data

	_08254d_jump:
		mov    _0c3381_data,%bh
		xor    %cl,%cl
		and    $0x0000fb,%bh
		mov    %cl,_0c3384_data
		mov    _0c3380_data,%ch
		mov    %bh,_0c3381_data
		cmp    $0x000001,%ch
		jne    _08257b_jump
		movb   $0x000002,_0c3380_data
		call   _081774_func

	_08257b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082580_func:
		push   %edx
		mov    _0c3102_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0bf3b0_data(%eax),%al
		and    $0x0000ff,%eax
		call   _082520_func
		pop    %edx
		ret    



_0825a8_func:
		push   %edx
		mov    _0c3102_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0bf3b1_data(%eax),%al
		and    $0x0000ff,%eax
		call   _082520_func
		pop    %edx
		ret    



_0825d0_func:
		push   %edx
		mov    _0c3102_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0bf3b3_data(%eax),%al
		and    $0x0000ff,%eax
		call   _082520_func
		pop    %edx
		ret    



_0825f8_func:
		push   %edx
		mov    _0c3102_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0bf3b2_data(%eax),%al
		and    $0x0000ff,%eax
		call   _082520_func
		pop    %edx
		ret    



_082620_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0c3104_data,%ax
		cmp    _0c30f4_data,%ax
		jne    _082749_jump
		call   _0426b0_func
		test   %al,%al
		je     _0826a1_jump
		mov    _0c3102_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0bf3b7_data(%eax),%cl
		cmp    $0x000003,%cl
		je     _082670_jump
		movw   $0x000001,_0c3156_data
		jmp    _082682_jump

	_082670_jump:
		cmp    %cl,%cl
		jne    _082682_jump
		cmpb   $0x000000,_0c3380_data
		je     _082682_jump
		call   _0817d0_func

	_082682_jump:
		xor    %ah,%ah
		mov    _0c3381_data,%dh
		mov    %ah,_0c3380_data
		and    $0x0000fb,%dh
		mov    %ah,_0c3384_data
		mov    %dh,_0c3381_data
		jmp    _0826e3_jump

	_0826a1_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _0826b2_jump
		call   _0825d0_func
		jmp    _0826e3_jump

	_0826b2_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _0826c3_jump
		call   _0825f8_func
		jmp    _0826e3_jump

	_0826c3_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _0826d4_jump
		call   _0825a8_func
		jmp    _0826e3_jump

	_0826d4_jump:
		call   _041e40_func
		test   %ax,%ax
		je     _0826e3_jump
		call   _082580_func

	_0826e3_jump:
		mov    _0c3104_data,%ax
		cmp    _0c30f4_data,%ax
		je     _08273c_jump
		mov    _0c3102_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		testb  $0x000001,_0bf3b4_data(%eax)
		je     _082730_jump
		mov    $0x000001,%edx
		xor    %bh,%bh
		mov    $_0b92f8_data,%eax
		mov    %bh,_0b937b_data
		xor    %ebx,%ebx
		call   _01dea8_func
		call   _0817d0_func
		jmp    _08273c_jump

	_082730_jump:
		mov    _0c30f4_data,%ax
		mov    %ax,_0c3104_data

	_08273c_jump:
		mov    _0c3102_data,%eax
		sar    $0x000010,%eax
		jmp    _0829c4_jump

	_082749_jump:
		mov    _0c3102_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%esi
		shl    $0x000005,%esi
		sub    %edx,%esi
		shl    $0x000002,%esi
		sub    %edx,%esi
		mov    _0c30f2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0bf3ac_data(%esi),%bx
		mov    %eax,%edx
		sub    _0bf3ac_data(%eax),%bx
		mov    _0bf3ae_data(%esi),%ax
		mov    _0bf3ae_data(%edx),%si
		sub    %esi,%eax
		mov    %ax,0x00000c(%esp)
		test   %bx,%bx
		jge    _0827a6_jump
		andb   $0x0000f7,_0b937d_data
		jmp    _0827ad_jump

	_0827a6_jump:
		orb    $0x000008,_0b937d_data

	_0827ad_jump:
		test   %bx,%bx
		je     _08281e_jump
		cmpw   $0x000000,0x00000c(%esp)
		je     _08281e_jump
		mov    0x00000a(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,%eax
		movswl %bx,%esi
		test   %eax,%eax
		jge    _0827cc_jump
		neg    %eax

	_0827cc_jump:
		mov    %eax,%edx
		mov    %esi,%eax
		test   %eax,%eax
		jge    _0827d6_jump
		neg    %eax

	_0827d6_jump:
		cmp    %eax,%edx
		jle    _0827fa_jump
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    _0b937b_data,%cl
		mov    %cl,%dl
		imul   %esi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		test   %eax,%eax
		jge    _0827f6_jump
		neg    %eax

	_0827f6_jump:
		mov    %eax,%edi
		jmp    _08283d_jump

	_0827fa_jump:
		xor    %edx,%edx
		mov    _0b937b_data,%dl
		imul   %ebp,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movzbw _0b937b_data,%di
		test   %eax,%eax
		jge    _08281a_jump
		neg    %eax

	_08281a_jump:
		mov    %eax,%ecx
		jmp    _08283d_jump

	_08281e_jump:
		test   %bx,%bx
		jne    _08282d_jump
		xor    %ecx,%ecx
		mov    _0b937b_data,%cl
		jmp    _08283d_jump

	_08282d_jump:
		cmpw   $0x000000,0x00000c(%esp)
		jne    _08283d_jump
		movzbw _0b937b_data,%di

	_08283d_jump:
		movswl %bx,%edx
		mov    _0b937b_data,%bl
		inc    %bl
		mov    %edx,%eax
		mov    %bl,_0b937b_data
		mov    %edi,%ebx
		cmp    $0x000000,%eax
		je     _082860_jump
		mov    $0x000001,%eax
		jg     _082860_jump
		neg    %eax

	_082860_jump:
		imul   %eax,%ebx
		mov    0x00000a(%esp),%esi
		sar    $0x000010,%esi
		mov    %ebx,0x000008(%esp)
		mov    %esi,%eax
		mov    %ecx,%ebx
		cmp    $0x000000,%eax
		je     _082880_jump
		mov    $0x000001,%eax
		jg     _082880_jump
		neg    %eax

	_082880_jump:
		imul   %eax,%ebx
		mov    _0c30f2_data,%ebp
		sar    $0x000010,%ebp
		mov    %ebp,%eax
		shl    $0x000005,%eax
		sub    %ebp,%eax
		shl    $0x000002,%eax
		sub    %ebp,%eax
		mov    %ebx,0x000004(%esp)
		mov    _0bf3ac_data(%eax),%bx
		add    0x000008(%esp),%ebx
		mov    %ebx,0x000010(%esp)
		xor    %ebx,%ebx
		mov    _0b9364_data,%bl
		mov    %ebx,(%esp)
		mov    0x000010(%esp),%ebx
		sub    (%esp),%ebx
		mov    %ebx,(%esp)
		mov    _0b9320_data,%bx
		mov    %ebx,0x000010(%esp)
		mov    (%esp),%ebx
		sub    0x000010(%esp),%ebx
		mov    _0bf3ae_data(%eax),%ax
		mov    %bx,_0b9338_data
		mov    0x000004(%esp),%ebx
		add    %ebx,%eax
		mov    %eax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x000010(%esp),%ebx
		mov    _0b9365_data,%al
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    _0b9324_data,%bx
		add    $0x000008,%eax
		sub    %ebx,%eax
		mov    %ax,_0b933a_data
		movswl %di,%eax
		test   %eax,%eax
		jge    _082916_jump
		neg    %eax

	_082916_jump:
		mov    %eax,%ebp
		mov    %edx,%eax
		test   %eax,%eax
		jge    _082920_jump
		neg    %eax

	_082920_jump:
		cmp    %eax,%ebp
		jl     _0829c9_jump
		movswl %cx,%eax
		test   %eax,%eax
		jge    _082931_jump
		neg    %eax

	_082931_jump:
		mov    %eax,%edx
		mov    %esi,%eax
		test   %eax,%eax
		jge    _08293b_jump
		neg    %eax

	_08293b_jump:
		cmp    %eax,%edx
		jl     _0829c9_jump
		mov    _0c3104_data,%ax
		mov    _0b9369_data,%bh
		mov    %ax,_0c30f4_data
		test   %bh,%bh
		je     _0829c9_jump
		mov    $_0b92f8_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01dea8_func
		mov    _0c3102_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		sub    %esi,%eax
		shl    $0x000002,%eax
		mov    %esi,%edx
		sub    %esi,%eax
		xor    %esi,%edx
		mov    _0bf3aa_data(%eax),%ebp
		mov    _0b9364_data,%dl
		sar    $0x000010,%ebp
		mov    _0bf3ac_data(%eax),%eax
		sub    %edx,%ebp
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0b9365_data,%dl
		xor    %ecx,%ecx
		sub    %edx,%eax
		mov    %cx,_0b9338_data
		add    $0x000008,%eax
		mov    %cx,_0b933a_data
		mov    %eax,_0b9324_data
		mov    %esi,%eax
		mov    %ebp,_0b9320_data

	_0829c4_jump:
		call   _041130_func

	_0829c9_jump:
		cmpb   $0x000000,_0bf2fd_data
		jne    _0829dc_jump
		mov    _0c3104_data,%al
		mov    %al,_0bf3a5_data

	_0829dc_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0829e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _05a0ec_func
		call   _04454c_func
		mov    _0c314c_data,%edx
		mov    _0c3146_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _044998_func
		call   _0450e0_func
		testb  $0x000008,_0b937d_data
		je     _082a44_jump
		xor    %eax,%eax
		mov    _0b9330_data,%cx
		mov    _0b9365_data,%al
		add    %ecx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0b932e_data,%si
		mov    _0b9364_data,%al
		add    %esi,%eax
		jmp    _082a67_jump

	_082a44_jump:
		xor    %eax,%eax
		mov    _0b9330_data,%dx
		mov    _0b9365_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0b932e_data,%bx
		mov    _0b9364_data,%al
		add    %ebx,%eax

	_082a67_jump:
		cwtl   
		call   _01dc20_func
		mov    $_0b92f8_data,%eax
		call   _05b0d8_func
		call   _081540_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082a84_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0e0c98_data,%edx
		lea    0x000220(%edx),%ebx

	_082a94_jump:
		mov    $_0b92f8_data,%esi
		mov    _0c3348_data,%ah
		mov    %edx,%edi
		xor    %cl,%cl
		and    $0x0000fd,%ah
		mov    %cl,_0c33e1_data
		add    $0x000088,%edx
		mov    %ah,_0c3348_data
		mov    $0x000001,%eax
		mov    $0x000088,%ecx
		call   _05e224_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		movw   $0x0000ff,-0x00002a(%edx)
		movw   $0x000000,-0x000048(%edx)
		mov    _0b94a8_data,%eax
		movw   $0x000000,-0x000046(%edx)
		mov    %eax,-0x000088(%edx)
		mov    _0b94b0_data,%eax
		mov    %eax,-0x000080(%edx)
		cmp    %ebx,%edx
		jne    _082a94_jump
		mov    $0x00000b,%al
		xor    %ch,%ch
		xor    %ebx,%edx
		mov    %ch,_0e0d0b_data
		mov    %al,_0e0d0a_data
		mov    %dx,_0e0cd4_data
		xor    %ebx,%ebx
		mov    $0x000118,%ecx
		mov    $_0e0c98_data,%eax
		xor    %edx,%edx
		mov    %bx,_0e0cce_data
		mov    %edx,_0e0cc0_data
		mov    %cx,_0e0cd6_data
		mov    %cx,_0e0cd0_data
		call   _062e90_func
		xor    %eax,%eax
		mov    _0e0d09_data,%al
		mov    _0e0ca4_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0e0d08_data,%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    $0x00009b,%edi
		mov    0x000002(%eax),%dl
		mov    $0x00009b,%ebx
		lea    0x000000(,%edx,4),%eax
		mov    %di,_0e0d5c_data
		sub    %edx,%eax
		mov    _0e0c9c_data,%edx
		mov    %ebx,_0e0d48_data
		mov    %di,_0e0d56_data
		mov    0x00000a(%edx,%eax,4),%al
		mov    $0x000001,%dl
		mov    %al,_0e0d07_data
		mov    $0x000005,%ah
		mov    %dl,_0e0d92_data
		mov    $0x0000ff,%edx
		mov    %ah,_0e0d93_data
		mov    $_0e0d20_data,%eax
		mov    %dx,_0e0d5e_data
		mov    %dx,_0e0d58_data
		call   _062e90_func
		xor    %eax,%eax
		mov    _0e0d91_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    $0x000154,%esi
		mov    _0e0d2c_data,%eax
		mov    $0x000154,%ecx
		add    %eax,%edx
		xor    %eax,%eax
		mov    $0x000003,%bl
		mov    _0e0d90_data,%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		mov    $0x000118,%edi
		add    %edx,%eax
		xor    %edx,%edx
		mov    %bl,_0e0e1a_data
		mov    0x000002(%eax),%dl
		mov    %cx,_0e0de4_data
		lea    0x000000(,%edx,4),%eax
		mov    %si,_0e0dde_data
		sub    %edx,%eax
		mov    %di,_0e0de6_data
		lea    0x000000(,%eax,4),%edx
		mov    $0x000154,%ecx
		mov    _0e0d24_data,%eax
		mov    %di,_0e0de0_data
		mov    %ecx,_0e0dd0_data
		mov    0x00000a(%edx,%eax,1),%al
		mov    $0x000002,%dh
		mov    %al,_0e0d8f_data
		mov    $_0e0da8_data,%eax
		mov    %dh,_0e0e1b_data
		call   _062e90_func
		xor    %eax,%eax
		mov    _0e0e19_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0e0db4_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0e0e18_data,%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    $0x000001,%bh
		mov    0x000002(%eax),%dl
		mov    $0x0001e0,%esi
		lea    0x000000(,%edx,4),%eax
		mov    %di,_0e0e6e_data
		sub    %edx,%eax
		mov    %di,_0e0e68_data
		lea    0x000000(,%eax,4),%edx
		mov    %bh,_0e0ea3_data
		mov    _0e0dac_data,%eax
		mov    %bl,_0e0ea2_data
		mov    %esi,_0e0e58_data
		mov    0x00000a(%edx,%eax,1),%al
		mov    $0x0001e0,%edx
		mov    %al,_0e0e17_data
		mov    $_0e0e30_data,%eax
		mov    %dx,_0e0e6c_data
		mov    %dx,_0e0e66_data
		call   _062e90_func
		xor    %eax,%eax
		mov    _0e0ea1_data,%al
		mov    _0e0e3c_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0e0ea0_data,%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000002(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0e0e34_data,%edx
		mov    0x00000a(%edx,%eax,4),%al
		xor    %edx,%edx
		mov    _0bf388_data,%dl
		mov    %al,_0e0e9f_data
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    $_0b6e48_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		movw   $0x000036,0x000064(%edx)
		movw   $0x00000a,0x00003c(%edx)
		movw   $0x000096,0x00003e(%edx)
		movb   $0x000005,0x000073(%edx)
		movb   $0x000046,0x000072(%edx)
		movw   $0x000000,0x00005e(%edx)
		mov    0x00003c(%edx),%ax
		movb   $0x000050,0x00006c(%edx)
		cwtl   
		mov    %eax,0x000028(%edx)
		mov    %ax,0x000036(%edx)
		mov    0x00003e(%edx),%ax
		mov    %ax,0x000038(%edx)
		mov    %edx,%eax
		movb   $0x000040,0x00006d(%edx)
		call   _062e90_func
		xor    %eax,%eax
		mov    _0bf388_data,%al
		lea    0x000001(%eax),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    $_0b6e48_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		movw   $0x000036,0x000064(%edx)
		movw   $0x00005a,0x00003c(%edx)
		movw   $0x000094,0x00003e(%edx)
		movb   $0x000005,0x000073(%edx)
		movb   $0x000046,0x000072(%edx)
		movw   $0x000000,0x00005e(%edx)
		movb   $0x000050,0x00006c(%edx)
		mov    0x00003c(%edx),%ax
		movb   $0x000040,0x00006d(%edx)
		cwtl   
		mov    %eax,0x000028(%edx)
		mov    %ax,0x000036(%edx)
		mov    0x00003e(%edx),%ax
		mov    %ax,0x000038(%edx)
		mov    %edx,%eax
		xor    %edx,%edx
		call   _062e90_func
		mov    _0bf388_data,%dl
		add    $0x000002,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    $_0b6e48_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		movw   $0x000036,0x000064(%edx)
		movw   $0x0000b4,0x00003c(%edx)
		movw   $0x00009b,0x00003e(%edx)
		movb   $0x000005,0x000073(%edx)
		movb   $0x000046,0x000072(%edx)
		movw   $0x000000,0x00005e(%edx)
		mov    0x00003c(%edx),%ax
		movb   $0x000050,0x00006c(%edx)
		cwtl   
		mov    %eax,0x000028(%edx)
		mov    %ax,0x000036(%edx)
		mov    0x00003e(%edx),%ax
		mov    %ax,0x000038(%edx)
		mov    %edx,%eax
		movb   $0x000040,0x00006d(%edx)
		call   _062e90_func
		xor    %eax,%eax
		mov    _0bf388_data,%al
		lea    0x000003(%eax),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    $_0b6e48_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		movw   $0x000036,0x000064(%edx)
		movw   $0x0000fa,0x00003c(%edx)
		movw   $0x000094,0x00003e(%edx)
		movb   $0x000005,0x000073(%edx)
		movb   $0x000046,0x000072(%edx)
		movw   $0x000000,0x00005e(%edx)
		mov    0x00003c(%edx),%ax
		movb   $0x000050,0x00006c(%edx)
		cwtl   
		mov    %eax,0x000028(%edx)
		mov    %ax,0x000036(%edx)
		mov    0x00003e(%edx),%ax
		mov    %ax,0x000038(%edx)
		mov    %edx,%eax
		movb   $0x000040,0x00006d(%edx)
		call   _062e90_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082ea8_func:
		push   %edx
		call   _03ead0_func
		mov    _0c3162_data,%ax
		mov    %ax,_0c30e0_data
		mov    _0c3166_data,%ax
		mov    %ax,_0c30de_data
		mov    _0c30e6_data,%ax
		mov    %ax,_0c3162_data
		mov    _0c30e4_data,%ax
		mov    %ax,_0c3166_data
		mov    _0b937d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,_0c33ae_data
		call   _0822f8_func
		xor    %ah,%ah
		mov    _0b9372_data,%dl
		mov    %ah,_0c338e_data
		cmp    $0x0000ff,%dl
		jne    _082f0c_jump
		mov    %ah,_0b9372_data

	_082f0c_jump:
		movb   $0x000001,_0a525c_data
		pop    %edx
		ret    



_082f18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000080,%esp
		cmpw   $0x000000,_0ab932_data
		jne    _082f2e_jump
		int3   

	_082f2e_jump:
		mov    $_0a450c_data,%eax
		mov    %esp,%edi
		xor    %edx,%edx
		mov    %esp,%ecx
		mov    _0ab932_data,%dl
		xor    %ebx,%ebx
		call   _065ee0_func
		mov    %eax,%esi
		mov    $_0a4514_data,%edx
		push   %edi

	_082f4e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _082f66_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _082f4e_jump

	_082f66_jump:
		pop    %edi
		mov    $_0a451c_data,%eax
		call   _0415b4_func
		cmp    $0x000002,%eax
		jb     _082f93_jump
		jbe    _082f88_jump
		cmp    $0x000003,%eax
		jne    _082f93_jump
		movw   $0x000005,_0c2f40_data
		jmp    _082f9c_jump

	_082f88_jump:
		movw   $0x000003,_0c2f40_data
		jmp    _082f9c_jump

	_082f93_jump:
		movw   $0x000001,_0c2f40_data

	_082f9c_jump:
		mov    _0c2f49_data,%ah
		cmp    $0x000004,%ah
		jne    _082faf_jump
		mov    %ah,_0b9372_data
		jmp    _082fb6_jump

	_082faf_jump:
		movb   $0x000002,_0b9372_data

	_082fb6_jump:
		add    $0x000080,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082fc4_func:
		mov    _0c3104_data,%ax
		mov    %ax,_0c3102_data
		push   %edx
		xor    %edx,%edx
		mov    _0bf3a5_data,%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		add    $_0bf3ac_data,%eax
		movb   $0x000000,0x000058(%eax)
		mov    0x00001b(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0c3104_data
		pop    %edx
		ret    



_082ffc_func:
		cmpb   $0x000000,_0a7c9c_data
		je     _03ede8_jump
		xor    %eax,%eax
		mov    _0c33a0_data,%al
		call   _03fa6c_func
		jmp    _03ede8_jump



_08301c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000180,%esp
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_0a450c_data,%eax
		lea    0x000100(%esp),%edi
		call   _065ee0_func
		mov    %eax,%esi
		push   %edi

	_08303f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _083057_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _08303f_jump

	_083057_jump:
		pop    %edi
		xor    %ah,%ah
		mov    %ah,_0e0f0f_data
		mov    %ah,_0e0f28_data
		mov    %ah,_0e0b98_data
		mov    %ah,_0e0f45_data
		mov    %ah,_0e0f44_data
		mov    %ah,_0e0f49_data
		mov    %ah,_0e0f46_data
		mov    %ah,_0e0f47_data
		mov    %ah,_0e0f48_data
		lea    0x000100(%esp),%eax
		push   %eax
		lea    0x000004(%esp),%ecx
		mov    $_0a4524_data,%ebx
		push   $0x000100
		mov    $_0a452c_data,%edx
		mov    $_0a4534_data,%eax
		call   _04170c_func
		mov    $0x000019,%ebx
		mov    %esp,%edx
		mov    $_0e0f0f_data,%eax
		mov    %esp,%ecx
		call   _085378_func
		lea    0x000100(%esp),%eax
		xor    %dl,%dl
		push   %eax
		mov    $_0a4538_data,%ebx
		mov    %dl,_0e0f27_data
		push   $0x000100
		mov    $_0a453c_data,%edx
		mov    $_0a4534_data,%eax
		call   _04170c_func
		test   %eax,%eax
		je     _08310e_jump
		mov    $0x000019,%ebx
		mov    %esp,%edx
		mov    $_0e0f28_data,%eax
		call   _085378_func
		xor    %dh,%dh
		mov    %dh,_0e0f40_data

	_08310e_jump:
		lea    0x000100(%esp),%eax
		push   %eax
		lea    0x000004(%esp),%ecx
		mov    $_0a4538_data,%ebx
		push   $0x000100
		mov    $_0a4544_data,%edx
		mov    $_0a4534_data,%eax
		call   _04170c_func
		test   %eax,%eax
		je     _083150_jump
		mov    $0x0000f0,%ebx
		mov    %esp,%edx
		mov    $_0e0b98_data,%eax
		call   _085378_func
		xor    %bl,%bl
		mov    %bl,_0e0c87_data

	_083150_jump:
		lea    0x000100(%esp),%ecx
		mov    $_0a454c_data,%edx
		mov    $_0a4554_data,%eax
		xor    %ebx,%ebx
		call   _0415b4_func
		lea    0x000100(%esp),%ecx
		mov    $_0a455c_data,%edx
		mov    %al,_0e0f45_data
		xor    %ebx,%ebx
		mov    $_0a4554_data,%eax
		call   _0415b4_func
		lea    0x000100(%esp),%ecx
		mov    $_0a4564_data,%edx
		mov    %al,_0e0f44_data
		xor    %ebx,%ebx
		mov    $_0a4554_data,%eax
		call   _0415b4_func
		lea    0x000100(%esp),%ecx
		mov    $_0a4568_data,%edx
		mov    %al,_0e0f49_data
		xor    %ebx,%ebx
		mov    $_0a4554_data,%eax
		call   _0415b4_func
		lea    0x000100(%esp),%ecx
		mov    $_0a4570_data,%edx
		mov    %al,_0e0f46_data
		xor    %ebx,%ebx
		mov    $_0a4554_data,%eax
		call   _0415b4_func
		lea    0x000100(%esp),%ecx
		mov    $_0a4578_data,%edx
		mov    %al,_0e0f47_data
		xor    %ebx,%ebx
		mov    $_0a4554_data,%eax
		call   _0415b4_func
		mov    %al,_0e0f48_data
		mov    $0x000001,%al
		add    $0x000180,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08320c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000110,%esp
		mov    %ax,0x00010c(%esp)
		mov    0x00010a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		push   $_0a4584_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    $0x000001,%ecx
		mov    $0x000017,%ebx
		push   $0x000000
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01b0f8_func
		cmpb   $0x000000,_0e0f43_data
		je     _08335d_jump
		push   $_0e0f0f_data
		push   $_0a4590_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    $0x000002,%ecx
		mov    $0x000039,%ebx
		push   $0x000001
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01b0f8_func
		push   $_0e0f28_data
		push   $_0a4590_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    $0x000002,%ecx
		mov    $0x000056,%ebx
		push   $0x000005
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01b0f8_func
		push   $_0e0b98_data
		push   $_0a4598_data
		lea    0x000008(%esp),%eax
		push   %eax
		lea    0x00010c(%esp),%ecx
		lea    0x000114(%esp),%ebx
		call   _0852d9_func
		add    $0x00000c,%esp
		lea    0x000104(%esp),%edx
		mov    $0x000002,%eax
		call   _01f3b8_func
		push   $0x000002
		mov    0x00010a(%esp),%ecx
		mov    0x000102(%esp),%ebx
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		call   _01f824_func
		cmpb   $0x000000,_0ab930_data
		jne    _083336_jump
		cwtl   
		mov    _0ab932_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		sub    $0x000005,%eax
		cmp    %eax,%edx
		jge    _08333f_jump

	_083336_jump:
		movw   $0x000140,_0ab934_data

	_08333f_jump:
		push   $0x000003
		mov    _0ab934_data,%ax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		dec    %eax
		mov    $0x000075,%ebx
		mov    %ax,_0ab934_data
		jmp    _083380_jump

	_08335d_jump:
		push   $_0a459c_data
		lea    0x000004(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x000008,%esp
		mov    $0x000001,%ecx
		mov    $0x000036,%ebx
		push   $0x000001
		mov    $0x000082,%edx

	_083380_jump:
		lea    0x000004(%esp),%eax
		call   _01b0f8_func
		cmpb   $0x000000,_0ab930_data
		je     _0833ca_jump
		mov    $0x000014,%cl
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    $_0e0da8_data,%eax
		mov    %cl,_0e0f42_data
		call   _01dea8_func
		cmpb   $0x000000,_0e0f46_data
		jne    _0834bb_jump
		mov    $0x000003,%ebx
		mov    $0x000001,%edx
		jmp    _0834c5_jump

	_0833ca_jump:
		cmpb   $0x000000,_0e0f47_data
		je     _0834a0_jump
		mov    _0e0f42_data,%bh
		test   %bh,%bh
		jbe    _0833f0_jump
		mov    %bh,%dl
		dec    %dl
		mov    %dl,_0e0f42_data
		jmp    _0834a0_jump

	_0833f0_jump:
		mov    _0e0e19_data,%cl
		cmp    $0x000002,%cl
		jne    _083420_jump
		cmp    _0e0e18_data,%cl
		jne    _083420_jump
		mov    $0x000008,%ebx
		mov    $_0e0da8_data,%eax
		xor    %edx,%edx
		call   _01dea8_func
		movb   $0x000050,_0e0f42_data
		jmp    _0834a0_jump

	_083420_jump:
		cmpb   $0x000000,_0e0e19_data
		jne    _08344c_jump
		cmpb   $0x000000,_0e0e18_data
		jne    _08344c_jump
		mov    $0x000002,%edx
		mov    $_0e0da8_data,%eax
		xor    %ebx,%ebx
		call   _01dea8_func
		movb   $0x000014,_0e0f42_data
		jmp    _0834a0_jump

	_08344c_jump:
		cmpb   $0x000002,_0e0e19_data
		jne    _083477_jump
		cmpb   $0x000000,_0e0e18_data
		jne    _083477_jump
		mov    $0x000003,%edx
		mov    $_0e0da8_data,%eax
		mov    $0x000028,%ch
		call   _01de98_func
		mov    %ch,_0e0f42_data
		jmp    _0834a0_jump

	_083477_jump:
		cmpb   $0x000002,_0e0e19_data
		jne    _0834a0_jump
		cmpb   $0x000004,_0e0e18_data
		jne    _0834a0_jump
		mov    $0x000005,%edx
		mov    $_0e0da8_data,%eax
		mov    $0x000028,%cl
		call   _01de98_func
		mov    %cl,_0e0f42_data

	_0834a0_jump:
		cmpb   $0x000000,_0e0f46_data
		je     _0834cf_jump
		cmpb   $0x000000,_0e0ea1_data
		jne    _0834cf_jump
		cmpb   $0x000000,_0e0ea0_data
		jne    _0834cf_jump

	_0834bb_jump:
		mov    $0x000010,%ebx
		mov    $0x000003,%edx

	_0834c5_jump:
		mov    $_0e0e30_data,%eax
		call   _01dea8_func

	_0834cf_jump:
		mov    $0x000001,%eax
		mov    $_0e0c98_data,%edx
		call   _05a0ec_func
		lea    0x000220(%edx),%ebx

	_0834e4_jump:
		mov    %edx,%eax
		call   _05b0d8_func
		mov    %edx,%eax
		add    $0x000088,%edx
		call   _019070_func
		cmp    %ebx,%edx
		jne    _0834e4_jump
		cmpb   $0x000000,_0e0f45_data
		jne    _08353f_jump
		xor    %eax,%eax
		mov    _0bf388_data,%al
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %eax,%edx
		mov    $_0b6e48_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		call   _05b0d8_func
		xor    %eax,%eax
		mov    _0bf388_data,%al
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %eax,%edx
		mov    $_0b6e48_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		call   _019070_func

	_08353f_jump:
		cmpb   $0x000000,_0e0f44_data
		jne    _083584_jump
		xor    %eax,%eax
		mov    _0bf388_data,%al
		inc    %eax
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %eax,%edx
		mov    $_0b6e48_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		call   _05b0d8_func
		xor    %eax,%eax
		mov    _0bf388_data,%al
		inc    %eax
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %eax,%edx
		mov    $_0b6e48_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		call   _019070_func

	_083584_jump:
		cmpb   $0x000000,_0e0f47_data
		jne    _0835d6_jump
		cmpb   $0x000000,_0e0f48_data
		jne    _0835d6_jump
		xor    %eax,%eax
		mov    _0bf388_data,%al
		add    $0x000002,%eax
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %eax,%edx
		mov    $_0b6e48_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		call   _05b0d8_func
		xor    %eax,%eax
		mov    _0bf388_data,%al
		add    $0x000002,%eax
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %eax,%edx
		mov    $_0b6e48_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		call   _019070_func

	_0835d6_jump:
		cmpb   $0x000000,_0e0f49_data
		jne    _083628_jump
		cmpb   $0x000000,_0e0f46_data
		jne    _083628_jump
		xor    %eax,%eax
		mov    _0bf388_data,%al
		add    $0x000003,%eax
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %eax,%edx
		mov    $_0b6e48_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		call   _05b0d8_func
		xor    %eax,%eax
		mov    _0bf388_data,%al
		add    $0x000003,%eax
		mov    %eax,%edx
		shl    $0x000004,%edx
		add    %eax,%edx
		mov    $_0b6e48_data,%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		call   _019070_func

	_083628_jump:
		xor    %eax,%eax
		mov    0x00010c(%esp),%al
		call   _065998_func
		test   %al,%al
		je     _083666_jump
		push   $_0a45a0_data
		lea    0x000004(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x000008,%esp
		mov    $0x000002,%ecx
		mov    $0x000019,%ebx
		push   $0x000001
		mov    $0x000005,%edx
		lea    0x000004(%esp),%eax
		call   _01b0f8_func

	_083666_jump:
		add    $0x000110,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083670_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000088,%esp
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ah,_0e0f41_data
		mov    %edx,0x000080(%esp)

	_083690_jump:
		mov    $0x000001,%dl
		movzbl 0x000080(%esp),%ebp
		mov    %esp,%edi
		mov    %dl,0x000084(%esp)
		mov    %ebp,%eax
		mov    $0x000001,%edx
		mov    %esp,%ecx
		call   _0659b8_func
		mov    $_0a450c_data,%eax
		mov    %ebp,%edx
		xor    %ebx,%ebx
		call   _065ee0_func
		mov    %eax,%esi
		mov    $_0a45b0_data,%edx
		push   %edi

	_0836c7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0836df_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0836c7_jump

	_0836df_jump:
		pop    %edi
		mov    $_0a4534_data,%eax
		call   _0415b4_func
		mov    _0c3102_data,%ecx
		sar    $0x000010,%ecx
		cmp    %ecx,%eax
		je     _083753_jump
		mov    %esp,%edi
		mov    %ebp,%eax
		xor    %edx,%edx
		mov    %esp,%ecx
		call   _0659b8_func
		mov    $_0a450c_data,%eax
		mov    %ebp,%edx
		xor    %ebx,%ebx
		call   _065ee0_func
		mov    %eax,%esi
		mov    $_0a45b0_data,%edx
		push   %edi

	_08371a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _083732_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _08371a_jump

	_083732_jump:
		pop    %edi
		mov    $_0a4534_data,%eax
		call   _0415b4_func
		mov    _0c3102_data,%ecx
		sar    $0x000010,%ecx
		cmp    %ecx,%eax
		je     _083753_jump
		xor    %dh,%dh
		mov    %dh,0x000084(%esp)

	_083753_jump:
		cmpb   $0x000000,0x000084(%esp)
		je     _08377a_jump
		mov    _0e0f41_data,%al
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    0x000080(%esp),%ah
		mov    %ah,_0e0ec8_data(%ecx)
		inc    %al
		mov    %al,_0e0f41_data

	_08377a_jump:
		mov    0x000080(%esp),%ebx
		inc    %ebx
		mov    %ebx,0x000080(%esp)
		cmp    $0x000047,%ebx
		jl     _083690_jump
		mov    _0e0f41_data,%bh
		dec    %bh
		mov    $0x000001,%cl
		mov    %bh,_0e0f41_data
		mov    %bh,%al
		mov    %bh,_0e0ec8_data
		mov    %cl,_0e0f41_data
		add    $0x000088,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0837c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%edx
		mov    $0x000002,%eax
		call   _01f3b8_func
		mov    0x000008(%esp),%edx
		mov    _0e0ec4_data,%bx
		add    %edx,%ebx
		mov    _0c3074_data,%dx
		dec    %edx
		imul   %ebx,%edx
		mov    _0e0ec0_data,%bx
		mov    0x000008(%esp),%ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		movswl %dx,%ecx
		mov    _0c304e_data,%dx
		push   $0x000000
		sub    $0x000019,%edx
		mov    $_0b6e48_data,%eax
		movswl %dx,%ebx
		mov    $0x000001,%edx
		call   _019d20_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_08382c_switch:
		.long   _08387d_case
		.long   _083886_case
		.long   _08388f_case
		.long   _083898_case
		.long   _0838a1_case
		.long   _0838aa_case




_083844_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		lea    0x000038(%esp),%ecx
		lea    0x000040(%esp),%ebx
		lea    0x00003c(%esp),%edx
		mov    $0x000002,%eax
		call   _01f3b8_func
		mov    _0c3104_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _0838b1_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_08382c_switch(,%eax,4)

	_08387d_case:
		movw   $0x000095,0x000034(%esp)
		jmp    _0838b1_jump

	_083886_case:
		movw   $0x00009a,0x000034(%esp)
		jmp    _0838b1_jump

	_08388f_case:
		movw   $0x00009f,0x000034(%esp)
		jmp    _0838b1_jump

	_083898_case:
		movw   $0x0000a4,0x000034(%esp)
		jmp    _0838b1_jump

	_0838a1_case:
		movw   $0x0000a9,0x000034(%esp)
		jmp    _0838b1_jump

	_0838aa_case:
		movw   $0x0000ae,0x000034(%esp)

	_0838b1_jump:
		mov    $0x00fa00,%ecx
		mov    _0c0f44_data,%esi
		mov    _0c0f50_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %esi,%esi
		mov    $0x000002,%edi

	_0838d9_jump:
		mov    0x000032(%esp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		mov    _0bf2f4_data,%ebx
		add    %edx,%eax
		mov    (%ebx,%eax,4),%ecx
		push   %ecx
		push   $_0a4598_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0852d9_func
		mov    _0c3072_data,%ebx
		lea    0x000001(%edx),%eax
		sar    $0x000010,%ebx
		add    $0x00000c,%esp
		cmp    %eax,%ebx
		jne    _083961_jump
		mov    %esp,%eax
		call   _086bfe_func
		cmpb   $0x000001,_0e0ebc_data(%edx)
		sete   %al
		and    $0x0000ff,%eax
		mov    0x00003c(%esp),%edx
		push   %eax
		mov    _0e0ec4_data,%ax
		add    %edx,%eax
		imul   %esi,%eax
		mov    _0e0ec4_data,%ecx
		mov    _0e0ec0_data,%bx
		sar    $0x000010,%ecx
		push   %edi
		mov    _0c304c_data,%edx
		add    %ebx,%eax
		sar    $0x000010,%edx
		movswl %ax,%ebx
		lea    0x000008(%esp),%eax
		call   _01b500_func
		jmp    _0839a0_jump

	_083961_jump:
		cmpb   $0x000001,_0e0ebc_data(%edx)
		sete   %al
		and    $0x0000ff,%eax
		mov    0x00003c(%esp),%ebx
		push   %eax
		mov    _0e0ec4_data,%ax
		add    %ebx,%eax
		imul   %esi,%eax
		mov    _0e0ec0_data,%cx
		mov    _0c304c_data,%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		movswl %ax,%ebx
		mov    %edi,%ecx
		lea    0x000004(%esp),%eax
		call   _01b0f8_func

	_0839a0_jump:
		movswl %si,%ebx
		shl    $0x000002,%ebx
		mov    _0e0c88_data(%ebx),%ebp
		test   %ebp,%ebp
		jle    _083a20_jump
		mov    $0x00003c,%ecx
		mov    %ebp,%edx
		mov    %ebp,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000e10,%ebx
		push   %edx
		mov    %ebp,%edx
		mov    %ebp,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		push   %eax
		push   $_0a45b8_data
		lea    0x00000c(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x000010,%esp
		mov    _0e0ec4_data,%ax
		add    0x00003c(%esp),%eax
		imul   %esi,%eax
		mov    _0e0ec0_data,%dx
		push   $0x000005
		mov    _0e0ec2_data,%cx
		add    %edx,%eax
		mov    _0c304e_data,%dx
		movswl %ax,%ebx
		add    %ecx,%edx
		lea    0x000004(%esp),%eax
		movswl %dx,%edx
		mov    %edi,%ecx
		call   _01b0f8_func

	_083a20_jump:
		inc    %esi
		cmp    $0x000004,%si
		jl     _0838d9_jump
		mov    $0x001000,%edx
		mov    _0c30a2_data,%bx
		mov    %dx,_0c30a8_data
		cmp    $0x000200,%bx
		jl     _083a4e_jump
		xor    %ecx,%ecx
		mov    %cx,_0c30a2_data

	_083a4e_jump:
		mov    _0c30a2_data,%ax
		inc    %ah
		cwtl   
		call   _0626d0_func
		cwtl   
		sar    $0x000007,%eax
		add    $0x000005,%eax
		mov    %eax,%edx
		mov    _0c30a0_data,%eax
		sar    $0x000010,%eax
		call   _0626d0_func
		shl    $0x000003,%eax
		mov    _0c30a2_data,%di
		mov    %ax,_0c30aa_data
		mov    _0bf2f4_data,%eax
		add    %edx,%edi
		mov    0x0002f4(%eax),%edx
		push   %edx
		push   $_0a4598_data
		lea    0x000008(%esp),%eax
		push   %eax
		mov    %di,_0c30a2_data
		call   _0852d9_func
		mov    _0c3072_data,%edx
		mov    _0e0ec6_data,%bx
		add    $0x00000c,%esp
		movswl %si,%eax
		sar    $0x000010,%edx
		add    $0x000003,%ebx
		inc    %eax
		mov    %bx,_0e0ec6_data
		cmp    %eax,%edx
		jne    _083b0e_jump
		mov    %esp,%eax
		call   _086bfe_func
		push   $0x000005
		mov    0x000040(%esp),%edi
		mov    _0e0ec4_data,%ecx
		mov    _0e0ec4_data,%ax
		mov    _0e0ec0_data,%dx
		add    %edi,%eax
		push   $0x000002
		shl    $0x000002,%eax
		sar    $0x000010,%ecx
		add    %edx,%eax
		mov    _0c304c_data,%edx
		movswl %ax,%ebx
		lea    0x000008(%esp),%eax
		sar    $0x000010,%edx
		call   _01b500_func
		jmp    _083b42_jump

	_083b0e_jump:
		push   $0x000005
		mov    0x000040(%esp),%ecx
		mov    _0e0ec4_data,%ax
		mov    _0e0ec0_data,%si
		add    %ecx,%eax
		mov    _0c304c_data,%edx
		shl    $0x000002,%eax
		sar    $0x000010,%edx
		add    %esi,%eax
		mov    $0x000002,%ecx
		movswl %ax,%ebx
		lea    0x000004(%esp),%eax
		call   _01b0f8_func

	_083b42_jump:
		call   _0837c0_func
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083b54_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx

	_083b58_jump:
		cmpb   $0x000001,_0c33af_data
		jne    _083b6d_jump
		movswl %dx,%eax
		movb   $0x000005,_0e0eb8_data(%eax)
		jmp    _083b7f_jump

	_083b6d_jump:
		mov    %edx,%eax
		inc    %eax
		cwtl   
		movswl %dx,%ebx
		call   _0218bc_func
		mov    %al,_0e0eb8_data(%ebx)

	_083b7f_jump:
		movswl %dx,%eax
		mov    _0c1074_data,%ebx
		mov    %ebx,_0e0c88_data(,%eax,4)
		mov    _0c33af_data,%bl
		inc    %edx
		mov    %bl,_0e0ebc_data(%eax)
		cmp    $0x000004,%dx
		jl     _083b58_jump
		mov    $0xffffffff,%edx
		mov    $0x000001,%ah
		mov    %edx,_0c1074_data
		mov    _0c3104_data,%dx
		mov    %ah,_0e0ebc_data
		cmp    $0x000003,%dx
		je     _083bc8_jump
		cmp    $0x000001,%dx
		jne    _083bd0_jump

	_083bc8_jump:
		xor    %dl,%dl
		mov    %dl,_0e0ebc_data

	_083bd0_jump:
		pop    %edx
		pop    %ebx
		ret    



_083bd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%edx
		mov    $0x000001,%ah
		mov    $0x00000c,%ecx
		mov    $0x000006,%esi
		mov    $0x00001e,%edi
		xor    %ebx,%ebx
		mov    %dx,_0c3074_data
		mov    %ah,_0c33ce_data
		mov    %bx,_0c3066_data
		mov    %cx,_0c3078_data
		mov    %si,_0c305e_data
		mov    %di,_0c304e_data
		mov    $0x000023,%eax
		mov    $0x00000d,%edx
		mov    $0x0000d2,%ebx
		mov    %ax,_0e0ec0_data
		mov    %dx,_0e0ec4_data
		mov    %bx,_0e0ec2_data
		xor    %dl,%dl
		call   _083b54_func
		mov    %dl,_0c33af_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083c50_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _041e40_func
		test   %ax,%ax
		je     _083cda_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _083cda_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _083cda_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _083cae_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _083cda_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _083cda_jump

	_083cae_jump:
		mov    _0c3074_data,%bx
		cmp    $0x000001,%bx
		jg     _083cc6_jump
		movw   $0x000005,_0c3074_data
		jmp    _083cd0_jump

	_083cc6_jump:
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0c3074_data

	_083cd0_jump:
		mov    $0x000044,%eax
		call   _071754_func

	_083cda_jump:
		call   _041ddc_func
		test   %ax,%ax
		je     _083d60_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _083d60_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _083d60_jump
		cmpb   $0x000000,_0c33ce_data
		jne    _083d35_jump
		mov    _0c3066_data,%ax
		cmp    _0c3078_data,%ax
		jle    _083d60_jump
		mov    _0c3064_data,%edx
		mov    _0c305c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _083d60_jump

	_083d35_jump:
		mov    _0c3074_data,%ax
		cmp    $0x000005,%ax
		jne    _083d4c_jump
		movw   $0x000001,_0c3074_data
		jmp    _083d56_jump

	_083d4c_jump:
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0c3074_data

	_083d56_jump:
		mov    $0x000044,%eax
		call   _071754_func

	_083d60_jump:
		call   _041d78_func
		test   %ax,%ax
		jne    _083d98_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _083d98_jump
		call   _041ddc_func
		test   %ax,%ax
		jne    _083d98_jump
		call   _041e40_func
		test   %ax,%ax
		jne    _083d98_jump
		mov    $0x000001,%bl
		mov    %ax,_0c3066_data
		mov    %bl,_0c33ce_data
		jmp    _083da0_jump

	_083d98_jump:
		xor    %dh,%dh
		mov    %dh,_0c33ce_data

	_083da0_jump:
		call   _0427d4_func
		test   %al,%al
		je     _083dbc_jump
		cmpb   $0x000000,_0c33ce_data
		je     _083dbc_jump
		mov    $0x00004d,%eax
		call   _071754_func

	_083dbc_jump:
		call   _083844_func
		mov    _0c3074_data,%ax
		mov    $0x000001,%cl
		mov    %ax,_0ab932_data
		mov    %cl,_0c33df_data
		cmp    $0x000005,%ax
		jne    _083e68_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _083e15_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _083e15_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _083e15_jump
		call   _042060_func
		test   %ax,%ax
		jne    _083e15_jump
		mov    $0x000039,%eax
		call   _041ce0_func
		test   %al,%al
		je     _083e62_jump

	_083e15_jump:
		mov    $0x000039,%eax
		call   _042488_func

	_083e1f_jump:
		call   _041ea4_func
		test   %ax,%ax
		jne    _083e47_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _083e47_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _083e47_jump
		call   _042060_func
		test   %ax,%ax
		je     _083e4e_jump

	_083e47_jump:
		call   _042170_func
		jmp    _083e1f_jump

	_083e4e_jump:
		xor    %ch,%ch
		mov    $0x000001,%al
		mov    %ch,_0e0f4a_data
		mov    %al,_0e0f41_data
		mov    %al,_0ab930_data

	_083e62_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_083e68_jump:
		mov    _0ab930_data,%eax
		sar    $0x000010,%eax
		mov    _0e0ebb_data(%eax),%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083e7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _026cd4_func
		call   _042170_func
		mov    _0e0f4a_data,%ah
		xor    %dl,%dl
		test   %ah,%ah
		je     _083ed6_jump
		call   _083c50_func
		mov    %al,_0e0f43_data
		call   _041d78_func
		test   %ax,%ax
		je     _083f87_jump
		cmpw   $0x000005,_0c3074_data
		jne    _083f87_jump
		mov    $0x000001,%ch
		mov    %dl,_0e0f4a_data
		mov    %ch,_0e0f41_data
		mov    %ch,_0ab930_data
		jmp    _083f87_jump

	_083ed6_jump:
		cmpb   $0x000000,_0ab930_data
		je     _083ef4_jump
		xor    %eax,%eax
		mov    _0e0f41_data,%al
		mov    _0e0ec8_data(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0ab932_data

	_083ef4_jump:
		xor    %bl,%bl
		mov    %bl,_0c33df_data
		call   _082ffc_func
		cmpb   $0x000000,_0ab930_data
		je     _083f26_jump
		mov    _0ab930_data,%eax
		sar    $0x000010,%eax
		call   _08301c_func
		mov    %al,_0e0f43_data
		mov    $0x000044,%eax
		call   _071754_func

	_083f26_jump:
		mov    _0ab930_data,%eax
		sar    $0x000010,%eax
		xor    %cl,%cl
		call   _08320c_func
		mov    %cl,_0ab930_data
		call   _041d78_func
		test   %ax,%ax
		je     _083f5e_jump
		cmpb   $0x000000,_0c33ce_data
		je     _083f5e_jump
		mov    $0x000001,%bl
		mov    %bl,_0ab930_data
		add    %bl,_0e0f41_data
		jmp    _083f87_jump

	_083f5e_jump:
		call   _041d14_func
		test   %ax,%ax
		je     _083f87_jump
		cmpb   $0x000000,_0c33ce_data
		je     _083f87_jump
		mov    $0x000001,%ah
		mov    _0e0f41_data,%dh
		sub    %ah,%dh
		mov    %ah,_0ab930_data
		mov    %dh,_0e0f41_data

	_083f87_jump:
		mov    _0e0f41_data,%al
		mov    _0e0ec8_data,%ah
		cmp    %ah,%al
		jbe    _083fa4_jump
		xor    %dh,%dh
		mov    %ah,_0e0f41_data
		mov    %dh,_0ab930_data

	_083fa4_jump:
		cmpb   $0x000000,_0e0f4a_data
		jne    _083fe5_jump
		cmpb   $0x000001,_0e0f41_data
		jb     _083fc4_jump
		mov    $0x000001,%eax
		call   _041ce0_func
		test   %al,%al
		je     _083fe5_jump

	_083fc4_jump:
		mov    $0x000001,%eax
		mov    $0x000001,%dl
		call   _042488_func
		mov    %dl,_0e0f4a_data
		call   _083bd4_func
		mov    $0x000044,%eax
		call   _071754_func

	_083fe5_jump:
		movw   $0x000001,_0c3146_data
		cmpb   $0x000001,_0c33af_data
		jne    _083ffc_jump
		call   _083bd4_func

	_083ffc_jump:
		call   _041d78_func
		test   %ax,%ax
		jne    _084037_jump
		call   _041d14_func
		test   %ax,%ax
		jne    _084037_jump
		call   _041ddc_func
		test   %ax,%ax
		jne    _084037_jump
		call   _041e40_func
		test   %ax,%ax
		jne    _084037_jump
		mov    $0x000001,%ah
		xor    %esi,%esi
		mov    %ah,_0c33ce_data
		mov    %si,_0c3066_data
		jmp    _08403e_jump

	_084037_jump:
		xor    %al,%al
		mov    %al,_0c33ce_data

	_08403e_jump:
		mov    $0x000001,%eax
		call   _041ce0_func
		test   %al,%al
		je     _084060_jump
		test   %dl,%dl
		jne    _084060_jump
		xor    %edi,%edi
		mov    %di,_0c3146_data
		mov    %di,_0c3156_data

	_084060_jump:
		cmpw   $0x000000,_0c3146_data
		jne    _084074_jump
		cmpw   $0x000000,_0c3156_data
		je     _0840b3_jump

	_084074_jump:
		call   _041ea4_func
		test   %ax,%ax
		jne    _0840aa_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _0840aa_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _0840aa_jump
		call   _042060_func
		test   %ax,%ax
		jne    _0840aa_jump
		mov    $0x000039,%eax
		call   _041ce0_func
		test   %al,%al
		je     _0840ba_jump

	_0840aa_jump:
		cmpb   $0x000000,_0e0f43_data
		je     _0840ba_jump

	_0840b3_jump:
		mov    $0x000001,%eax
		jmp    _0840bc_jump

	_0840ba_jump:
		xor    %eax,%eax

	_0840bc_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0840c4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0bf2fd_data
		jne    _08417a_jump
		mov    $_0bf395_data,%edx
		mov    %ax,_0ab932_data
		call   _083670_func
		mov    $_0c0ff8_data,%eax
		call   _03fcac_func
		mov    $_0b4028_data,%eax
		call   _03ece4_func
		call   _03ea80_func
		mov    _0c3162_data,%bx
		mov    _0c3166_data,%dx
		call   _082a84_func
		mov    %dx,_0c3166_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %bx,_0c3162_data
		call   _01dc20_func
		xor    %bl,%bl
		mov    $0x000001,%dh
		mov    %bl,_0c33af_data
		mov    %dh,_0e0f4a_data
		call   _083bd4_func
		mov    _0c0fd0_data,%eax
		mov    %dh,_0ab930_data
		call   _081364_func
		xor    %edx,%edx
		mov    _0ab932_data,%bx
		mov    %dx,_0e0ec6_data
		test   %bx,%bx
		je     _08416a_jump
		mov    $_083e7c_func,%eax
		call   _03eb48_func

	_08416a_jump:
		call   _03ead0_func
		call   _03ed58_func
		mov    _0ab932_data,%ax

	_08417a_jump:
		pop    %edx
		pop    %ebx
		ret    



_084180_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		mov    _081360_func,%eax
		xor    %ecx,%ecx
		mov    %eax,(%esp)
		call   _081878_func
		xor    %eax,%eax
		call   _017eca_func
		cmpb   $0x000001,_0c3380_data
		je     _084211_jump
		xor    %dl,%dl
		mov    %dl,0x000014(%esp)

	_0841b8_jump:
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		mov    (%esp,%eax,1),%al
		and    $0x0000ff,%eax
		imul   $0x0000d8,%eax,%eax
		cmpb   $0x000000,_0b8a08_data(%eax)
		je     _084202_jump
		add    $_0b8a08_data,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x0000d7(%eax),%dl
		mov    0x0000d4(%eax),%cl
		mov    0x0000d0(%eax),%ebx
		push   %edx
		mov    0x0000ce(%eax),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01b0f8_func

	_084202_jump:
		mov    0x000014(%esp),%dh
		inc    %dh
		mov    %dh,0x000014(%esp)
		cmp    $0x000003,%dh
		jbe    _0841b8_jump

	_084211_jump:
		cmpb   $0x000000,_0c3380_data
		je     _0844bb_jump
		xor    %edx,%edx
		mov    _0c0ed8_data,%ebx
		mov    %edx,0x000004(%esp)
		test   %ebx,%ebx
		jle    _08436d_jump
		xor    %ebp,%ebp

	_084234_jump:
		mov    0x000004(%esp),%eax
		mov    _0c2db0_data(%eax),%ch
		cmp    $0x00002f,%ch
		je     _084248_jump
		cmp    $0x000020,%ch
		jne    _08424c_jump

	_084248_jump:
		xor    %al,%al
		jmp    _084265_jump

	_08424c_jump:
		mov    0x000004(%esp),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c0ea8_data,%dl
		mov    _0c2db0_data(%ebx),%al
		call   _01f4b0_func

	_084265_jump:
		test   %al,%al
		je     _084353_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    _0c0ea8_data,%al
		call   _01f3f0_func
		mov    %eax,%edx
		imul   $0x00000c,%ebx,%eax
		cmpl   $0x000002,_0c0ea8_data
		jne    _0842f1_jump
		mov    _0c1114_data,%ebx
		mov    _0ae900_data(%ebp),%ecx
		add    %ebx,%eax
		xor    %ebx,%ebx
		sar    $0x000004,%ecx
		mov    0x000006(%eax),%bl
		sub    %ebx,%ecx
		mov    _0aeab8_data(%ebp),%ebx
		sar    $0x000004,%ebx
		movswl %bx,%esi
		xor    %bh,%bh
		mov    0x000006(%eax),%bl
		shl    $0x000008,%ebx
		movswl %cx,%ecx
		add    %ebx,%edx
		mov    _0c0f78_data,%edi
		mov    _0c1118_data,%ebx
		and    $0x00ffff,%edx
		add    (%eax),%ebx
		xor    %eax,%eax
		mov    %ebx,0x00000c(%esp)
		mov    _0c0ee8_data,%al
		mov    %ecx,%ebx
		mov    %eax,0x000008(%esp)
		mov    %edx,%ecx
		mov    0x000008(%esp),%edx
		mov    %esi,%eax
		mov    0x00000c(%esp),%esi
		jmp    _08434d_jump

	_0842f1_jump:
		mov    _0c1130_data,%ebx
		add    %eax,%ebx
		xor    %ecx,%ecx
		mov    _0ae900_data(%ebp),%eax
		mov    0x000006(%ebx),%cl
		sar    $0x000004,%eax
		sub    %ecx,%eax
		cwtl   
		mov    %eax,0x000008(%esp)
		mov    _0aeab8_data(%ebp),%eax
		sar    $0x000004,%eax
		movswl %ax,%esi
		xor    %ah,%ah
		mov    %cl,%al
		shl    $0x000008,%eax
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    _0c0f78_data,%edi
		mov    %ax,%cx
		mov    (%ebx),%edx
		mov    _0c1134_data,%eax
		mov    0x000008(%esp),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    _0c0ee8_data,%dl
		mov    %esi,%eax
		mov    0x000008(%esp),%esi

	_08434d_jump:
		call   *_0c0ef4_data

	_084353_jump:
		mov    0x000004(%esp),%ecx
		mov    _0c0ed8_data,%esi
		inc    %ecx
		add    $0x000004,%ebp
		mov    %ecx,0x000004(%esp)
		cmp    %esi,%ecx
		jl     _084234_jump

	_08436d_jump:
		xor    %edi,%edi
		mov    _0c0edc_data,%ebp
		mov    %edi,0x000010(%esp)
		test   %ebp,%ebp
		jle    _0844bb_jump
		xor    %ebp,%ebp

	_084383_jump:
		mov    0x000010(%esp),%eax
		mov    _0c2dce_data(%eax),%dh
		cmp    $0x00002f,%dh
		je     _084397_jump
		cmp    $0x000020,%dh
		jne    _08439b_jump

	_084397_jump:
		xor    %al,%al
		jmp    _0843b4_jump

	_08439b_jump:
		mov    0x000010(%esp),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c0e9c_data,%dl
		mov    _0c2dce_data(%ebx),%al
		call   _01f4b0_func

	_0843b4_jump:
		test   %al,%al
		je     _0844a1_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    %ebx,%edx
		imul   $0x00000c,%ebx,%ebx
		xor    %eax,%eax
		mov    _0c0e9c_data,%al
		call   _01f3f0_func
		cmpl   $0x000002,_0c0e9c_data
		jne    _08443b_jump
		mov    _0c1114_data,%edx
		mov    _0aeb30_data(%ebp),%ecx
		add    %edx,%ebx
		xor    %edx,%edx
		sar    $0x000004,%ecx
		mov    0x000006(%ebx),%dl
		sub    %edx,%ecx
		movzbw 0x000006(%ebx),%si
		movswl %cx,%edx
		mov    _0ae9f0_data(%ebp),%ecx
		shl    $0x000008,%esi
		sar    $0x000004,%ecx
		add    %esi,%eax
		movswl %cx,%ecx
		and    $0x00ffff,%eax
		mov    (%ebx),%esi
		mov    %eax,0x00000c(%esp)
		add    _0c1118_data,%esi
		xor    %eax,%eax
		mov    _0c0ea0_data,%al
		mov    _0c0f78_data,%edi
		mov    %eax,0x000008(%esp)
		mov    %edx,%ebx
		mov    0x000008(%esp),%edx
		mov    %ecx,%eax
		mov    0x00000c(%esp),%ecx
		jmp    _08449b_jump

	_08443b_jump:
		mov    _0c1130_data,%edx
		mov    _0aeb30_data(%ebp),%ecx
		add    %edx,%ebx
		xor    %edx,%edx
		sar    $0x000004,%ecx
		mov    0x000006(%ebx),%dl
		sub    %edx,%ecx
		mov    _0ae9f0_data(%ebp),%edx
		sar    $0x000004,%edx
		movswl %dx,%edx
		mov    %edx,0x000008(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebx),%dl
		shl    $0x000008,%edx
		movswl %cx,%ecx
		add    %edx,%eax
		mov    _0c0f78_data,%edi
		mov    _0c1134_data,%esi
		and    $0x00ffff,%eax
		mov    (%ebx),%edx
		mov    %eax,0x00000c(%esp)
		mov    %ecx,%ebx
		add    %edx,%esi
		mov    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    0x00000c(%esp),%ecx
		mov    _0c0ea0_data,%dl

	_08449b_jump:
		call   *_0c0ef4_data

	_0844a1_jump:
		mov    0x000010(%esp),%ebx
		mov    _0c0edc_data,%ecx
		inc    %ebx
		add    $0x000004,%ebp
		mov    %ebx,0x000010(%esp)
		cmp    %ecx,%ebx
		jl     _084383_jump

	_0844bb_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0844c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		call   _026cd4_func
		cmpb   $0x000000,_0c339f_data
		je     _0844e7_jump
		movzwl _0c30bc_data,%ebp
		add    %edx,%ebp

	_0844e7_jump:
		xor    %dl,%dl
		mov    _0c0f50_data,%edi
		mov    %dl,_0a7c92_data
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    _0bf38b_data,%dh
		test   %dh,%dh
		jne    _084512_jump
		mov    _0c0f50_data,%eax
		jmp    _08451c_jump

	_084512_jump:
		cmp    $0x000001,%dh
		jne    _084521_jump
		mov    _0c0f44_data,%eax

	_08451c_jump:
		mov    %eax,_0c0f78_data

	_084521_jump:
		call   _042170_func
		call   _082620_func
		call   _0829e8_func
		mov    _0bf38b_data,%bh
		test   %bh,%bh
		jne    _084541_jump
		call   _044938_func
		jmp    _08454b_jump

	_084541_jump:
		cmp    $0x000001,%bh
		jne    _08454b_jump
		call   _0448b8_func

	_08454b_jump:
		mov    $_0b92f8_data,%eax
		call   _019070_func
		call   _081508_func
		cmpb   $0x000001,_0bf38b_data
		jne    _0845a8_jump
		mov    _0c0f50_data,%edx
		push   %edx
		mov    _0c0eec_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0c0f44_data,%ebx
		mov    _0c0ed0_data,%esi
		push   %ebx
		mov    _0c0eec_data,%ebx
		mov    _0c0ecc_data,%edx
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _0438bc_func

	_0845a8_jump:
		mov    _0c0f50_data,%eax
		mov    %eax,_0c0f78_data
		call   _084180_func
		call   _04286c_func
		cmpb   $0x000000,_0c338e_data
		je     _0845cf_jump
		mov    $0x00004d,%eax
		call   _071754_func

	_0845cf_jump:
		cmpw   $0x000000,_0c3156_data
		jne    _0845e3_jump
		mov    _0c338e_data,%ah
		test   %ah,%ah
		je     _0845ea_jump

	_0845e3_jump:
		mov    $0x000001,%eax
		jmp    _0845ec_jump

	_0845ea_jump:
		xor    %al,%al

	_0845ec_jump:
		mov    _0c339f_data,%bl
		mov    %eax,%edx
		test   %bl,%bl
		je     _084612_jump
		test   %ax,%ax
		jne    _084612_jump
		mov    %ebp,%ebx
		call   _018bd2_func
		test   %ecx,%ecx
		jne    _084612_jump
		call   _082620_func
		call   _0829e8_func

	_084612_jump:
		mov    %edx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_08461c_switch:
		.long   _0846ea_case
		.long   _084688_case
		.long   _08469c_case
		.long   _0846b0_case
		.long   _0846c4_case
		.long   _0846d7_case




_084634_func:
		push   %esi
		push   %edi

	_084636_jump:
		call   _041ea4_func
		test   %ax,%ax
		jne    _08465e_jump
		call   _041f38_func
		test   %ax,%ax
		jne    _08465e_jump
		call   _041fcc_func
		test   %ax,%ax
		jne    _08465e_jump
		call   _042060_func
		test   %ax,%ax
		je     _084665_jump

	_08465e_jump:
		call   _042170_func
		jmp    _084636_jump

	_084665_jump:
		call   _082fc4_func
		mov    _0c3104_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _0846ea_case
		and    $0x00ffff,%eax
		jmp    *%cs:_08461c_switch(,%eax,4)

	_084688_case:
		mov    $_0c2d96_data,%edi
		mov    $_0a45cc_data,%esi
		mov    _0a45d4_data,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _0846fd_jump

	_08469c_case:
		mov    $_0c2d96_data,%edi
		mov    $_0a45d8_data,%esi
		mov    _0a45e4_data,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		jmp    _0846fd_jump

	_0846b0_case:
		mov    $_0c2d96_data,%edi
		mov    $_0a45e8_data,%esi
		mov    _0a45f0_data,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _0846fd_jump

	_0846c4_case:
		mov    $_0c2d96_data,%edi
		mov    $_0a45f4_data,%esi
		mov    _0a45fc_data,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		jmp    _0846fd_jump

	_0846d7_case:
		mov    $_0c2d96_data,%edi
		mov    $_0a4600_data,%esi
		mov    _0a4608_data,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		jmp    _0846fd_jump

	_0846ea_case:
		mov    $_0c2d96_data,%edi
		mov    $_0a45c0_data,%esi
		mov    _0a45c8_data,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

	_0846fd_jump:
		mov    %eax,_0c2da3_data
		xor    %ah,%ah
		mov    %ah,_0c33df_data
		mov    $0x000001,%eax
		call   _0840c4_func
		mov    %ax,_0c30f8_data
		test   %ax,%ax
		jne    _084725_jump
		mov    %ax,_0c3146_data

	_084725_jump:
		cmpw   $0x000000,_0c3146_data
		je     _084740_jump
		mov    $0x000045,%eax
		call   _071754_func
		mov    $0x00003c,%eax
		jmp    _084758_jump

	_084740_jump:
		cmpb   $0x000000,_0e0f4a_data
		jne    _084753_jump
		mov    $0x00004d,%eax
		call   _071754_func

	_084753_jump:
		mov    $0x000014,%eax

	_084758_jump:
		call   _03fc90_func
		pop    %edi
		pop    %esi
		ret    



_084760_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _026b80_func
		call   _03eaf8_func
		xor    %eax,%eax
		mov    $0xfffffffe,%ebx
		mov    _0c3146_data,%al
		xor    %edx,%edx
		call   _05e224_func
		call   _042170_func
		mov    %dx,_0c30ce_data
		xor    %edx,%edx
		mov    $_0c0ff8_data,%eax
		mov    %edx,_0c1084_data
		mov    $_0bf38c_data,%edx
		mov    %ebx,_0c1080_data
		call   _0488b0_func
		mov    _0c0fa4_data,%ax
		mov    %ax,_0c303c_data
		mov    _0c30b2_data,%ax
		mov    %ax,_0c3036_data
		call   _08145c_func
		mov    $_0b3428_data,%eax
		call   _03ece4_func
		call   _0822b0_func
		mov    $0x000002,%ecx
		xor    %ebx,%ebx

	_0847dd_jump:
		call   _03ea80_func
		call   _082324_func
		call   _04103c_func
		mov    _0c30e0_data,%si
		cmp    %si,%bx
		jne    _084846_jump
		cmp    _0c30de_data,%si
		jne    _084846_jump
		mov    _0c3122_data,%eax
		mov    _0c3114_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    _0c3116_data,%edx
		mov    %ax,_0c3162_data
		mov    _0c3120_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,_0c3166_data
		call   _043ad8_func

	_084846_jump:
		call   _060c8c_func
		cmp    _0c33a7_data,%bl
		jne    _08485d_jump
		mov    $_0844c8_func,%eax
		call   _03eb48_func

	_08485d_jump:
		call   _041180_func
		mov    _0c338e_data,%dl
		cmp    %dl,%bl
		jne    _0848bc_jump
		call   _084634_func
		mov    _0c3114_data,%eax
		mov    %dl,_0c33a7_data
		mov    _0c3122_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    _0c3116_data,%edx
		mov    %ax,_0c3162_data
		mov    _0c3120_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,_0c3166_data
		call   _043ad8_func

	_0848bc_jump:
		cmp    _0c338e_data,%bl
		jne    _0848d1_jump
		cmp    _0c3146_data,%bx
		je     _0847dd_jump

	_0848d1_jump:
		cmpb   $0x000000,_0c338e_data
		je     _084921_jump
		movb   $0x000001,_0c33cb_data
		movb   $0x000004,_0c3387_data
		mov    _0c3104_data,%ax
		mov    %ax,_0c3102_data
		mov    _0c3152_data,%ax
		mov    %ax,_0c3104_data
		mov    _0c3142_data,%ax
		xor    %ecx,%ecx
		mov    %ax,_0c30f8_data
		mov    $0x00004d,%eax
		mov    %cx,_0c3152_data
		call   _071754_func
		jmp    _084975_jump

	_084921_jump:
		cmpb   $0x000000,_0c33df_data
		jne    _084931_jump
		call   _082f18_func
		jmp    _084963_jump

	_084931_jump:
		cmpw   $0x000001,_0ab932_data
		jne    _084946_jump
		movw   $0x000005,_0c2f40_data
		jmp    _08495c_jump

	_084946_jump:
		mov    _0ab930_data,%eax
		sar    $0x000010,%eax
		mov    _0e0eb6_data(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0c2f40_data

	_08495c_jump:
		movb   $0x000002,_0b9372_data

	_084963_jump:
		mov    _0b9372_data,%al
		mov    $0x000001,%ch
		mov    %al,_0c2f49_data
		mov    %ch,_0c1154_data

	_084975_jump:
		call   _082ea8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084980_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000028,%esp
		mov    $0x00001c,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _085360_func
		mov    $0x00000c,%ebx
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		lea    0x00001c(%esp),%ecx
		call   _085360_func
		mov    $0x000500,%edx
		mov    $_0ae1f0_data,%eax
		mov    %edx,(%esp)
		mov    %ds,%edx
		mov    $_0ae1f0_data,%ebx
		mov    $0x000031,%eax
		mov    %dx,0x00001c(%esp)
		mov    %ebx,0x000014(%esp)
		mov    %esp,%ebx
		mov    %esp,%edx
		call   _08b9fd_func
		mov    _0ae1f0_data,%eax
		add    $0x000028,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084bac_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		je     _084bce_jump
		mov    (%ebx),%ecx
		mov    0x000008(%ebx),%esi
		add    %edx,%ecx
		cmp    %esi,%ecx
		jbe    _084ca2_jump

	_084bce_jump:
		mov    $0x000064,%eax
		call   _084f3c_func
		mov    %eax,%ecx
		cmp    $_0c1020_data,%ebx
		jne    _084bef_jump
		mov    _0a4970_data,%eax
		mov    %eax,(%esp)
		jmp    _084c74_jump

	_084bef_jump:
		cmp    $_0c102c_data,%ebx
		jne    _084c06_jump
		mov    %esp,%edi
		mov    $_0a4974_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _084c74_jump

	_084c06_jump:
		cmp    $_0c0ff8_data,%ebx
		jne    _084c1a_jump
		mov    %esp,%edi
		mov    $_0a497c_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _084c74_jump

	_084c1a_jump:
		cmp    $_0c1010_data,%ebx
		jne    _084c2f_jump
		mov    %esp,%edi
		mov    $_0a4984_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		jmp    _084c74_jump

	_084c2f_jump:
		cmp    $_0c1044_data,%ebx
		jne    _084c42_jump
		mov    %esp,%edi
		mov    $_0a498c_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		jmp    _084c74_jump

	_084c42_jump:
		cmp    $_0c1054_data,%ebx
		jne    _084c57_jump
		mov    %esp,%edi
		mov    $_0a4994_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _084c74_jump

	_084c57_jump:
		cmp    $_0c1004_data,%ebx
		jne    _084c6a_jump
		mov    %esp,%edi
		mov    $_0a49a0_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		jmp    _084c74_jump

	_084c6a_jump:
		mov    %esp,%edi
		mov    $_0a49a8_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)

	_084c74_jump:
		push   %edx
		push   %ebx
		lea    0x000008(%esp),%eax
		push   %eax
		push   $_0a49b4_data
		push   %ecx
		call   _0852d9_func
		add    $0x000014,%esp
		mov    %ecx,%eax
		call   _020150_func
		mov    %ecx,%eax
		call   _0850d4_func
		xor    %eax,%eax
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_084ca2_jump:
		mov    (%ebx),%edi
		mov    %ecx,(%ebx)
		mov    _0ab93c_data,%edx
		mov    0x000004(%ebx),%eax
		mov    _0c1020_data,%ebp
		add    %edi,%eax
		cmp    %ebp,%edx
		jae    _084cdd_jump
		mov    _0c3152_data,%dx
		mov    %dx,_0ab940_data
		mov    _0c3142_data,%dx
		mov    %ebp,_0ab93c_data
		mov    %dx,_0ab942_data

	_084cdd_jump:
		mov    _0ab944_data,%edx
		mov    _0c102c_data,%ebx
		cmp    %ebx,%edx
		jae    _084d0f_jump
		mov    _0c3152_data,%dx
		mov    %dx,_0ab948_data
		mov    _0c3142_data,%dx
		mov    %ebx,_0ab944_data
		mov    %dx,_0ab94a_data

	_084d0f_jump:
		mov    _0ab94c_data,%edx
		mov    _0c0ff8_data,%ecx
		cmp    %ecx,%edx
		jae    _084d41_jump
		mov    _0c3152_data,%dx
		mov    %dx,_0ab950_data
		mov    _0c3142_data,%dx
		mov    %ecx,_0ab94c_data
		mov    %dx,_0ab952_data

	_084d41_jump:
		mov    _0ab954_data,%edx
		mov    _0c1010_data,%esi
		cmp    %esi,%edx
		jae    _084d73_jump
		mov    _0c3152_data,%dx
		mov    %dx,_0ab958_data
		mov    _0c3142_data,%dx
		mov    %esi,_0ab954_data
		mov    %dx,_0ab95a_data

	_084d73_jump:
		mov    _0ab95c_data,%edx
		mov    _0c1044_data,%edi
		cmp    %edi,%edx
		jae    _084da5_jump
		mov    _0c3152_data,%dx
		mov    %dx,_0ab960_data
		mov    _0c3142_data,%dx
		mov    %edi,_0ab95c_data
		mov    %dx,_0ab962_data

	_084da5_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_084db0_func:
		push   %ebx
		push   %edx
		mov    $_0c103c_data,%eax
		mov    $0x000168,%ebx
		call   _0852ac_func
		xor    %edx,%edx
		mov    $_0b5428_data,%eax
		mov    %edx,_0c1040_data
		call   _085360_func
		pop    %edx
		pop    %ebx
		ret    



_084dd8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx
		mov    $_0c1038_data,%eax
		call   _084e40_func
		mov    %eax,%ecx
		mov    %eax,_0ab938_data
		mov    _0c103c_data,%eax
		mov    %eax,_0b542c_data
		mov    _0c1040_data,%eax
		mov    %eax,_0b5428_data
		xor    %ah,%ah
		mov    %ah,_0b5430_data
		mov    $0x000001,%eax

	_084e11_jump:
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0c103c_data,%ebx
		add    %ecx,%ebx
		mov    %ebx,_0b542c_data(%edx)
		xor    %ebx,%ebx
		mov    %ebx,_0b5428_data(%edx)
		xor    %bl,%bl
		inc    %eax
		mov    %bl,_0b5430_data(%edx)
		cmp    $0x00001e,%ax
		jl     _084e11_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084e40_func:
		push   %ebx
		sub    $0x000064,%esp
		mov    %eax,%ebx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		mov    %edx,%eax
		call   _08bcf5_func
		mov    %eax,0x000004(%ebx)
		test   %eax,%eax
		jne    _084e75_jump
		push   %edx
		push   $_0a49ec_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %esp,%eax
		call   _020150_func

	_084e75_jump:
		mov    0x000004(%ebx),%eax
		mov    %edx,0x000008(%ebx)
		and    $0x000003,%eax
		mov    %eax,(%ebx)
		mov    %edx,%eax
		add    $0x000064,%esp
		pop    %ebx
		ret    



_084e88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		xor    %ecx,%ecx

	_084e8f_jump:
		movswl %cx,%edx
		imul   $0x00000c,%edx,%edx
		cmpb   $0x000000,_0b5430_data(%edx)
		jne    _084f2b_jump
		cmpl   $0x000000,_0b5428_data(%edx)
		je     _084f2b_jump

	_084eaf_jump:
		xor    %esi,%esi
		xor    %eax,%eax

	_084eb3_jump:
		movswl %cx,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0b542c_data(%edx),%ebx
		mov    _0b5428_data(%edx),%ebp
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		add    %ebp,%ebx
		cmp    _0b542c_data(%edx),%ebx
		jne    _084ede_jump
		cmpb   $0x000000,_0b5430_data(%edx)
		je     _084ee5_jump

	_084ede_jump:
		inc    %eax
		cmp    $0x00001e,%ax
		jl     _084eb3_jump

	_084ee5_jump:
		cmp    $0x00001e,%ax
		jge    _084f27_jump
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		movswl %cx,%ebx
		imul   $0x00000c,%ebx,%ebx
		mov    _0b5428_data(%edx),%esi
		mov    _0b5428_data(%ebx),%eax
		add    %esi,%eax
		mov    _0c1040_data,%ebp
		mov    %eax,_0b5428_data(%ebx)
		mov    _0c103c_data,%ebx
		xor    %eax,%eax
		add    %ebp,%ebx
		mov    %eax,_0b5428_data(%edx)
		mov    %ebx,_0b542c_data(%edx)

	_084f27_jump:
		test   %esi,%esi
		jne    _084eaf_jump

	_084f2b_jump:
		inc    %ecx
		cmp    $0x00001e,%cx
		jl     _084e8f_jump
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084f3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    %eax,%ebp
		mov    $0x00001e,%edx
		mov    _0c1040_data,%edi
		and    $0x000003,%eax
		mov    %edx,0x000064(%esp)
		add    %eax,%ebp
		xor    %edx,%edx

	_084f5d_jump:
		movswl %dx,%esi
		imul   $0x00000c,%esi,%esi
		cmpb   $0x000000,_0b5430_data(%esi)
		jne    _084f95_jump
		mov    %edi,%ecx
		mov    %ebp,%ebx
		mov    _0b5428_data(%esi),%eax
		cmp    %ebx,%eax
		jl     _084f85_jump
		cmp    %ecx,%eax
		jg     _084f85_jump
		mov    $0x000001,%eax
		jmp    _084f87_jump

	_084f85_jump:
		xor    %eax,%eax

	_084f87_jump:
		test   %eax,%eax
		je     _084f95_jump
		mov    %edx,0x000064(%esp)
		mov    _0b5428_data(%esi),%edi

	_084f95_jump:
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _084f5d_jump
		mov    0x000064(%esp),%edi
		cmp    $0x00001e,%di
		jge    _085088_jump
		xor    %edx,%edx

	_084fac_jump:
		movswl %di,%esi
		imul   $0x00000c,%esi,%esi
		mov    _0b542c_data(%esi),%eax
		mov    _0b5428_data(%esi),%esi
		add    %eax,%esi
		movswl %dx,%eax
		imul   $0x00000c,%eax,%eax
		cmp    _0b542c_data(%eax),%esi
		je     _084fd5_jump
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _084fac_jump

	_084fd5_jump:
		movswl %dx,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		cmpb   $0x000000,_0b5430_data(,%eax,4)
		je     _08500f_jump
		mov    _0c1040_data,%ecx
		xor    %edx,%edx

	_084ff3_jump:
		movswl %dx,%esi
		imul   $0x00000c,%esi,%esi
		mov    _0c103c_data,%eax
		add    %ecx,%eax
		cmp    _0b542c_data(%esi),%eax
		je     _08500f_jump
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _084ff3_jump

	_08500f_jump:
		movswl %di,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		movswl %dx,%edi
		lea    0x000000(,%eax,4),%esi
		lea    0x000000(,%edi,4),%eax
		mov    _0b542c_data(%esi),%ebx
		sub    %edi,%eax
		add    %ebp,%ebx
		mov    %ebx,_0b542c_data(,%eax,4)
		mov    _0b5428_data(%esi),%ebx
		mov    _0b5428_data(,%eax,4),%ecx
		sub    %ebp,%ebx
		mov    _0c1038_data,%edi
		add    %ebx,%ecx
		add    %ebp,%edi
		mov    %ecx,_0b5428_data(,%eax,4)
		mov    $0x000001,%bh
		mov    %ebp,_0b5428_data(%esi)
		mov    %edi,_0c1038_data
		mov    %bh,_0b5430_data(%esi)
		mov    _0ab964_data,%eax
		mov    _0b542c_data(%esi),%esi
		cmp    %edi,%eax
		jae    _0850c5_jump
		mov    %edi,_0ab964_data
		jmp    _0850c5_jump

	_085088_jump:
		mov    %ebp,%eax
		call   _08bcf5_func
		mov    %eax,%esi
		mov    _0ab938_data,%eax
		mov    _0ab964_data,%edx
		add    %ebp,%eax
		cmp    %edx,%eax
		jbe    _0850a7_jump
		mov    %eax,_0ab964_data

	_0850a7_jump:
		test   %esi,%esi
		jne    _0850c5_jump
		push   %ebp
		push   $_0a4a14_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0852d9_func
		add    $0x00000c,%esp
		mov    %esp,%eax
		call   _020150_func

	_0850c5_jump:
		mov    %esi,%eax
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0850d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    (%esp),%esi
		xor    %cl,%cl
		xor    %edx,%edx

	_0850e6_jump:
		movswl %dx,%ebx
		imul   $0x00000c,%ebx,%ebx
		cmp    _0b542c_data(%ebx),%esi
		jne    _085125_jump
		cmpb   $0x000000,_0b5430_data(%ebx)
		je     _085122_jump
		mov    $0x000001,%cl
		mov    _0c1038_data,%edi
		mov    _0b5428_data(%ebx),%eax
		xor    %dl,%dl
		sub    %eax,%edi
		mov    %dl,_0b5430_data(%ebx)
		mov    %edi,_0c1038_data
		call   _084e88_func
		jmp    _08512c_jump

	_085122_jump:
		int3   
		jmp    _08512c_jump

	_085125_jump:
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _0850e6_jump

	_08512c_jump:
		test   %cl,%cl
		jne    _085137_jump
		mov    %esp,%eax
		call   _0852ac_func

	_085137_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_085140_func:
		push   %edx
		mov    %eax,%edx
		cmp    $_0c1020_data,%eax
		jne    _08514f_jump
		call   _085264_func

	_08514f_jump:
		lea    0x000004(%edx),%eax
		call   _0852ac_func
		movl   $0x000000,0x000004(%edx)
		movl   $0x000000,0x000008(%edx)
		movl   $0x000000,(%edx)
		pop    %edx
		ret    



_085170_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    _0a5252_data,%bx
		mov    _0c33e6_data,%cl
		xor    %eax,%eax
		mov    _0c33e5_data,%al
		jmp    _08519f_jump

	_08518b_jump:
		movswl %ax,%edx
		xor    %esi,%esi
		inc    %eax
		mov    %esi,_0bef50_data(,%edx,4)
		mov    %esi,_0bf040_data(,%edx,4)

	_08519f_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		cmp    %dx,%ax
		jl     _08518b_jump
		mov    _0a5254_data,%ax
		mov    _0c33e5_data,%cl
		cmp    %bx,%ax
		jge    _0851cb_jump

	_0851b9_jump:
		movswl %ax,%edx
		xor    %ebp,%ebp
		inc    %eax
		mov    %ebp,_0bf130_data(,%edx,4)
		cmp    %bx,%ax
		jl     _0851b9_jump

	_0851cb_jump:
		mov    _0a5254_data,%bx
		mov    %bx,_0a5252_data
		mov    %cl,_0c33e6_data
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0851e8_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0e0f54_data
		pop    %edx
		pop    %ebx
		ret    



_085200_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0e0f50_data
		pop    %edx
		pop    %ebx
		ret    



_085218_func:
		push   %edx
		mov    _0e0f54_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_085224_func:
		push   %edx
		mov    _0e0f50_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_085230_func:
		push   %edx
		mov    %eax,%edx
		call   _085170_func
		mov    0x000004(%edx),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_085244_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000004(%eax),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_085254_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000004(%eax),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_085264_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0a5252_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _085287_jump

	_085275_jump:
		movswl %ax,%edx
		xor    %ecx,%ecx
		inc    %eax
		mov    %ecx,_0bf130_data(,%edx,4)
		cmp    %bx,%ax
		jl     _085275_jump

	_085287_jump:
		xor    %ebx,%ebx
		mov    %bx,_0a5252_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_085294_func:
		jmp    _08bcf5_func



_08529c_func:
		push   %ebx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _08bdd8_func
		pop    %ebx
		ret    



_0852ac_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    (%eax),%ebx
		test   %ebx,%ebx
		je     _0852c3_jump
		mov    %ebx,%eax
		call   _08bdf0_func
		movl   $0x000000,(%edx)

	_0852c3_jump:
		pop    %edx
		pop    %ebx
		ret    



_0852c6_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		mov    (%eax),%edx
		lea    0x000001(%edx),%ecx
		mov    %ecx,(%eax)
		mov    %bl,(%edx)
		incl   0x000010(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_0852d9_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		lea    0x00001c(%esp),%eax
		mov    $_0852c6_func,%ecx
		mov    %esp,%ebx
		mov    0x000018(%esp),%edx
		mov    %eax,(%esp)
		mov    0x000014(%esp),%eax
		call   _08be72_func
		mov    0x000014(%esp),%edx
		movb   $0x000000,(%edx,%eax,1)
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_085309_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx

	_085310_jump:
		mov    (%edx),%al
		test   %al,%al
		je     _085328_jump
		sub    $0x000061,%al
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000019,%ebx
		jg     _085325_jump
		add    $0x000041,%al
		mov    %al,(%edx)

	_085325_jump:
		inc    %edx
		jmp    _085310_jump

	_085328_jump:
		mov    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08532e_func:
		push   %ecx

	_08532f_jump:
		test   %ebx,%ebx
		jne    _085337_jump

	_085333_jump:
		xor    %eax,%eax
		pop    %ecx
		ret    

	_085337_jump:
		mov    (%eax),%cl
		mov    (%edx),%ch
		cmp    %ch,%cl
		je     _08534d_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    %cl,%bl
		mov    %ch,%al
		sub    %eax,%ebx
		mov    %ebx,%eax
		pop    %ecx
		ret    

	_08534d_jump:
		cmpb   $0x000000,(%eax)
		je     _085333_jump
		inc    %eax
		inc    %edx
		dec    %ebx
		jmp    _08532f_jump



_085360_func:
		push   %eax
		push   %ecx
		mov    %dl,%dh
		shl    $0x000008,%edx
		mov    %dh,%dl
		shl    $0x000008,%edx
		mov    %dh,%dl
		mov    %ebx,%ecx
		call   _08b940_func
		pop    %ecx
		pop    %eax
		ret    



_085378_func:
		push   %ecx
		push   %esi
		mov    %eax,%esi
		jmp    _085389_jump

	_08537e_jump:
		mov    (%edx),%cl
		test   %cl,%cl
		je     _08538d_jump
		inc    %edx
		dec    %ebx
		mov    %cl,(%eax)
		inc    %eax

	_085389_jump:
		test   %ebx,%ebx
		jne    _08537e_jump

	_08538d_jump:
		test   %ebx,%ebx
		je     _085398_jump
		dec    %ebx
		movb   $0x000000,(%eax)
		inc    %eax
		jmp    _08538d_jump

	_085398_jump:
		mov    %esi,%eax
		pop    %esi
		pop    %ecx
		ret    



_0853a0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    %edx,%eax
		je     _085414_jump

	_0853a8_jump:
		mov    (%ebx),%eax
		mov    (%edx),%ecx
		cmp    %eax,%ecx
		jne    _085419_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _085414_jump
		mov    0x000004(%ebx),%eax
		mov    0x000004(%edx),%ecx
		cmp    %eax,%ecx
		jne    _085419_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _085414_jump
		mov    0x000008(%ebx),%eax
		mov    0x000008(%edx),%ecx
		cmp    %eax,%ecx
		jne    _085419_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _085414_jump
		mov    0x00000c(%ebx),%eax
		mov    0x00000c(%edx),%ecx
		cmp    %eax,%ecx
		jne    _085419_jump
		add    $0x000010,%ebx
		add    $0x000010,%edx
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		je     _0853a8_jump

	_085414_jump:
		sub    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_085419_jump:
		cmp    %cl,%al
		jne    _08543a_jump
		cmp    $0x000000,%al
		je     _085414_jump
		cmp    %ch,%ah
		jne    _08543a_jump
		cmp    $0x000000,%ah
		je     _085414_jump
		shr    $0x000010,%eax
		shr    $0x000010,%ecx
		cmp    %cl,%al
		jne    _08543a_jump
		cmp    $0x000000,%al
		je     _085414_jump
		cmp    %ch,%ah

	_08543a_jump:
		sbb    %eax,%eax
		or     $0x000001,%al
		pop    %ecx
		pop    %ebx
		ret    



_085441_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		lea    0x000014(%esp),%eax
		mov    %esp,%ebx
		mov    0x000010(%esp),%edx
		mov    %eax,(%esp)
		mov    $_0ab9ae_data,%eax
		call   _08ca61_func
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    

	_085463_jump:
		ret    



_085464_func:
		push   %edx
		mov    %eax,%edx
		call   *_0ab968_data
		call   *_0ab96c_data
		mov    %edx,%eax
		call   _08547c_func
		pop    %edx
		ret    



_08547c_func:
		push   %edx
		mov    %eax,%edx
		call   *_0ab96c_data
		call   *_0ab970_data
		mov    %edx,%eax
		jmp    _085b3b_jump



_085492_func:
		jmp    _08cb3d_jump



_085498_func:
		or     %eax,%eax
		jns    _0854a5_func
		neg    %eax
		mov    $0x000bff,%edx
		jmp    _0854aa_jump



_0854a5_func:
		mov    $0x0003ff,%edx

	_0854aa_jump:
		or     %eax,%eax
		je     _0854d5_jump
		push   %ecx
		bsr    %eax,%ecx
		mov    %cl,%ch
		mov    $0x00001f,%cl
		sub    %ch,%cl
		shl    %cl,%eax
		add    %eax,%eax
		mov    %ch,%cl
		movzbl %ch,%ecx
		add    %edx,%ecx
		mov    %eax,%edx
		and    $0xfffff000,%edx
		or     %ecx,%edx
		ror    $0x00000c,%edx
		shl    $0x000014,%eax
		pop    %ecx
		ret    

	_0854d5_jump:
		sub    %edx,%edx
		ret    



_0854d8_func:
		xor    $0x80000000,%ecx



_0854de_func:
		or     %ebx,%ebx
		jne    _0854e8_jump
		add    %ecx,%ecx
		je     _0854f4_jump
		rcr    %ecx

	_0854e8_jump:
		or     %eax,%eax
		jne    _0854f7_jump
		add    %edx,%edx
		jne    _0854f5_jump
		mov    %ecx,%edx
		mov    %ebx,%eax

	_0854f4_jump:
		ret    

	_0854f5_jump:
		rcr    %edx

	_0854f7_jump:
		cmpb   $0x000000,_0abbb5_data
		je     _085521_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		faddl  (%esp)

	_08550a_jump:
		fstpl  0x000008(%esp)
		add    $0x000008,%esp
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _085520_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_085520_jump:
		ret    

	_085521_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		mov    %ecx,%ebp
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _085562_jump
		or     $0x100000,%edx

	_085562_jump:
		or     %cx,%cx
		je     _08556d_jump
		or     $0x100000,%esi

	_08556d_jump:
		add    %eax,%eax
		adc    %edx,%edx
		add    %ebx,%ebx
		adc    %esi,%esi
		sub    %di,%cx
		je     _0855a9_jump
		jae    _085584_jump
		mov    %edi,%ebp
		neg    %cx
		xchg   %eax,%ebx
		xchg   %esi,%edx

	_085584_jump:
		cmp    $0x000036,%cx
		jbe    _0855a9_jump
		mov    %esi,%edx
		mov    %ebx,%eax
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		and    $0x800fffff,%edx
		ror    $0x00000d,%ebp
		and    $0x7ff00000,%ebp
		or     %ebp,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_0855a9_jump:
		or     %ecx,%ecx
		jns    _0855ba_jump
		neg    %esi
		neg    %ebx
		sbb    $0x000000,%esi
		xor    $0x80000000,%ebp

	_0855ba_jump:
		sub    %edi,%edi
		cmp    $0x000000,%cl
		je     _0855e4_jump
		push   %ebx
		sub    %ebx,%ebx
		cmp    $0x000020,%cl
		jb     _0855d6_jump
		or     %eax,%eax
		setne  %bl
		mov    %ebx,%edi
		sub    %ebx,%ebx
		mov    %edx,%eax
		sub    %edx,%edx

	_0855d6_jump:
		shrd   %cl,%eax,%ebx
		or     %ebx,%edi
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ebx

	_0855e4_jump:
		add    %ebx,%eax
		adc    %esi,%edx
		jns    _08560d_jump
		cmp    $0x000035,%cl
		jb     _085600_jump
		test   $0x7fffffff,%edi
		setne  %bl
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_085600_jump:
		neg    %edx
		neg    %eax
		sbb    $0x000000,%edx
		xor    $0x80000000,%ebp

	_08560d_jump:
		mov    %eax,%ebx
		or     %edx,%ebx
		je     _08567d_jump
		or     %bp,%bp
		je     _085681_jump

	_085618_jump:
		test   $0x7fe00000,%edx
		jne    _08562a_jump
		dec    %bp
		je     _085681_jump
		add    %eax,%eax
		adc    %edx,%edx
		jmp    _085618_jump

	_08562a_jump:
		test   $0x400000,%edx
		je     _085642_jump
		shr    %edx
		rcr    %eax
		adc    $0x000000,%edi
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _08568b_jump

	_085642_jump:
		shr    %edx
		rcr    %eax
		jae    _08566c_jump
		or     %edi,%edi
		setne  %bl
		or     %eax,%ebx
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _08566c_jump
		shr    %edx
		rcr    %eax
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _08568b_jump

	_08566c_jump:
		and    $0x0fffff,%edx
		mov    %ebp,%ecx
		shl    $0x000015,%ebp
		add    %ecx,%ecx
		rcr    %ebp
		or     %ebp,%edx

	_08567d_jump:
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_085681_jump:
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_08568b_jump:
		mov    %ebp,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _08cedb_jump



_085695_func:
		or     %eax,%eax
		jne    _0856a0_jump
		add    %edx,%edx
		jne    _08569e_jump
		ret    

	_08569e_jump:
		rcr    %edx

	_0856a0_jump:
		or     %ebx,%ebx
		jne    _0856af_jump
		add    %ecx,%ecx
		jne    _0856ad_jump
		sub    %eax,%eax
		sub    %edx,%edx
		ret    

	_0856ad_jump:
		rcr    %ecx

	_0856af_jump:
		cmpb   $0x000000,_0abbb5_data
		je     _0856c7_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		fmull  (%esp)
		jmp    _08550a_jump

	_0856c7_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		jne    _085710_jump
		inc    %di

	_085702_jump:
		dec    %di
		add    %eax,%eax
		adc    %edx,%edx
		test   $0x100000,%edx
		je     _085702_jump

	_085710_jump:
		or     $0x100000,%edx
		or     %cx,%cx
		jne    _08572b_jump
		inc    %cx

	_08571d_jump:
		dec    %cx
		add    %ebx,%ebx
		adc    %esi,%esi
		test   $0x100000,%esi
		je     _08571d_jump

	_08572b_jump:
		or     $0x100000,%esi
		add    %di,%cx
		sub    $0x0003ff,%cx
		js     _08574c_jump
		cmp    $0x0007ff,%cx
		jb     _08574c_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _08cedb_jump

	_08574c_jump:
		cmp    $0x00ffcb,%cx
		jge    _08575a_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _08cebe_jump

	_08575a_jump:
		push   %ecx
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		sub    %ebp,%ebp
		push   %esi
		push   %edx
		push   %eax
		mul    %ebx
		xchg   %eax,%esi
		mov    %edx,%ecx
		pop    %edx
		mul    %edx
		mov    %edx,%edi
		add    %eax,%ecx
		adc    %ebp,%edi
		adc    %ebp,%ebp
		pop    %eax
		xchg   %eax,%ebx
		mul    %ebx
		add    %eax,%ecx
		adc    %edx,%edi
		adc    $0x000000,%ebp
		mov    %ebx,%eax
		pop    %edx
		mul    %edx
		add    %edi,%eax
		adc    %ebp,%edx
		sub    %ebx,%ebx
		mov    $0x00000a,%cl
		shrd   %cl,%eax,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ecx

	_0857ab_jump:
		test   $0x200000,%edx
		je     _0857c4_jump
		shr    %edx
		rcr    %eax
		rcr    %ebx
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _085828_jump
		jmp    _0857ab_jump

	_0857c4_jump:
		add    %ebx,%ebx
		jae    _0857f2_jump
		jne    _0857d7_jump
		or     %esi,%esi
		setne  %bl
		shr    %ebx
		jb     _0857d7_jump
		mov    %eax,%esi
		shr    %esi

	_0857d7_jump:
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _0857f2_jump
		shr    %edx
		rcr    %eax
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _085828_jump

	_0857f2_jump:
		or     %cx,%cx
		jg     _08580d_jump
		jne    _0857fd_jump
		mov    $0x000001,%cl
		jmp    _085802_jump

	_0857fd_jump:
		neg    %cx
		dec    %cx

	_085802_jump:
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %cx,%cx

	_08580d_jump:
		and    $0x0fffff,%edx
		mov    %ecx,%esi
		ror    $0x00000b,%ecx
		add    %esi,%esi
		rcr    %ecx
		and    $0xfff00000,%ecx
		or     %ecx,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_085828_jump:
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _08cedb_jump



_085832_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		mov    _0e0fd8_data,%ebx
		cmp    $0x000021,%ebx
		je     _085867_jump
		movl   $0x000021,_0e0fd8_data
		mov    %ebx,%edx
		shl    $0x000002,%edx

	_085851_jump:
		test   %edx,%edx
		je     _085867_jump
		mov    _0e0f54_data(%edx),%eax
		sub    $0x000004,%edx
		mov    %eax,(%esp)
		dec    %ebx
		call   *(%esp)
		jmp    _085851_jump

	_085867_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    



_08586d_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_085832_func,%edx
		mov    _0e0fd8_data,%ecx
		mov    %edx,_0ab968_data
		cmp    $0x000020,%ecx
		jge    _0858a0_jump
		mov    %ecx,%eax
		xor    %ecx,%eax
		lea    0x000001(%ecx),%edx
		mov    %ebx,_0e0f58_data(,%ecx,4)
		mov    %edx,_0e0fd8_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0858a0_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0858ac_func:
		jmp    _085924_jump



_085920_func:
		arpl   %bp,0x00006e(%edi)
	_085924_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %bh,%bl
		and    $0xfffffffc,%esp
		mov    %esp,%ebx
		mov    %ebx,_0abbd0_data
		mov    %ebx,_0abbbc_data
		mov    $0x000024,%ax
		mov    %ax,_0abbc8_data
		mov    $0x50484152,%ebx
		sub    %eax,%eax
		mov    $0x000030,%ah
		int    $0x000021
		mov    %al,_0abbf3_data
		mov    %ah,_0abbf4_data
		mov    %eax,%ecx
		sub    %esi,%esi
		mov    $0x000081,%edi
		shr    $0x000010,%eax
		cmp    $0x004458,%ax
		jne    _0859a6_jump
		sub    $0x000030,%bl
		mov    %bl,%al
		mov    $0x000000,%ah
		push   %eax
		data16 mov _0abbc8_data,%es
		mov    %es:0x00005c,%ebx
		add    $0x000fff,%ebx
		and    $0xfffff000,%ebx
		mov    %ebx,_0abbbc_data
		shr    $0x00000c,%ebx
		mov    %ds,%ax
		mov    %eax,%es
		mov    $0x00004a,%ah
		int    $0x000021
		pop    %eax
		mov    %ds,%bx
		mov    $0x00002c,%cx
		jmp    _0859de_jump

	_0859a6_jump:
		cmp    $0x004243,%ax
		jne    _0859e0_jump
		mov    %edx,_0ab974_data
		mov    %edx,%esi
		mov    0x00001c(%esi),%edx
		mov    %esp,%ebx
		sub    %edx,%ebx
		mov    $0x00004a,%ah
		int    $0x000021
		mov    %ds,%bx
		data16 mov %ds,_0abbc8_data
		mov    0x000010(%esi),%eax
		add    %eax,%edi
		sub    %esi,%esi
		mov    0x00002c(%eax),%si
		shl    $0x000004,%esi
		mov    %ds,%cx
		mov    $0x000009,%al
		mov    $0x000000,%ah

	_0859de_jump:
		jmp    _085a39_jump

	_0859e0_jump:
		mov    $0x000078,%dx
		mov    $0x00ff00,%ax
		int    $0x000021
		cmp    $0x000000,%al
		je     _085a22_jump
		mov    %gs,%ax
		cmp    $0x000000,%ax
		je     _0859fd_jump
		mov    %ax,_0ab978_data

	_0859fd_jump:
		mov    $0x000006,%ax
		mov    %ds,%bx
		int    $0x000031
		mov    $0x000001,%al
		mov    $0x000000,%ah
		or     %cx,%dx
		je     _085a11_jump
		mov    $0x000001,%ah

	_085a11_jump:
		data16 mov %es,_0abbc8_data
		mov    %es:0x00002c,%cx
		jmp    _085a39_jump

	_085a22_jump:
		mov    %ds,%dx
		mov    $0x000024,%cx
		mov    %ecx,%ds
		mov    $0x00002c,%cx
		mov    %edx,%ds
		mov    $0x000017,%bx
		mov    $0x000000,%al
		mov    $0x000000,%ah

	_085a39_jump:
		mov    %al,_0abbea_data
		mov    %ah,_0abbeb_data
		mov    %ebx,%es
		data16 mov %ds,%es:_085b81_jump
		mov    %esi,_0abbed_data
		mov    %cx,_0abbf1_data
		push   %esi
		data16 mov _0abbc8_data,%es
		ds mov $_0e1440_data,%edx
		add    $0x00000f,%edx
		and    $0x0000f0,%dl
		sub    %ecx,%ecx
		mov    %es:-0x000001(%edi),%cl
		cld    
		mov    $0x000020,%al
		repz scas %es:(%edi),%al
		lea    -0x000001(%edi),%esi
		mov    %edx,%edi
		mov    %es,%bx
		mov    %ds,%dx
		mov    %ebx,%ds
		mov    %edx,%es
		je     _085a8e_jump
		inc    %ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_085a8e_jump:
		sub    %al,%al
		stos   %al,%es:(%edi)
		stos   %al,%es:(%edi)
		pop    %esi
		dec    %edi
		push   %edi
		push   %edx
		data16 mov %es:_0abbf1_data,%ds
		sub    %ebp,%ebp

	_085aa0_jump:
		mov    (%esi),%eax
		or     $0x20202020,%eax
		cmp    $0x37386f6e,%eax
		jne    _085ab5_jump
		cmpb   $0x00003d,0x000004(%esi)
		jne    _085ab5_jump
		inc    %ebp

	_085ab5_jump:
		cmpb   $0x000000,(%esi)
		lods   %ds:(%esi),%al
		jne    _085ab5_jump
		cmpb   $0x000000,(%esi)
		jne    _085aa0_jump
		lods   %ds:(%esi),%al
		inc    %esi
		inc    %esi

	_085ac3_jump:
		cmpb   $0x000000,(%esi)
		movsb  %ds:(%esi),%es:(%edi)
		jne    _085ac3_jump
		pop    %ds
		pop    %esi
		mov    %esp,%ebx
		mov    %bp,_0abbe8_data
		mov    %edi,_0abbcc_data
		mov    %ebx,_0abbb8_data
		ds mov $_0e1440_data,%ecx
		ds mov $_0ae1d0_data,%edi
		sub    %edi,%ecx
		cmpb   $0x000001,_0abbea_data
		jne    _085b04_jump
		cmp    $0x001000,%ecx
		jbe    _085b04_jump
		mov    $0x001000,%ecx

	_085b04_jump:
		mov    %cl,%dl
		shr    $0x000002,%ecx
		sub    %eax,%eax
		rep stos %eax,%es:(%edi)
		mov    %dl,%cl
		and    $0x000003,%cl
		rep stos %al,%es:(%edi)
		ds mov $_0e1440_data,%eax
		add    $0x00000f,%eax
		and    $0x0000f0,%al
		mov    %eax,_0abbc0_data
		mov    %esi,_0abbc4_data
		mov    $0x0000ff,%eax
		call   _08cf72_func
		sub    %ebp,%ebp
		call   _08cf23_func

	_085b3b_jump:
		jmp    _085b60_jump



_085b3d_func:
		push   %edx
		push   %eax
		mov    $_085920_func,%edx
		mov    $0x003d01,%ax
		int    $0x000021
		mov    %ax,%bx
		pop    %edx
		mov    %edx,%esi
		cld    

	_085b51_jump:
		lods   %ds:(%esi),%al
		cmp    $0x000000,%al
		jne    _085b51_jump
		mov    %esi,%ecx
		sub    %edx,%ecx
		dec    %ecx
		mov    $0x000040,%ah
		int    $0x000021
		pop    %eax

	_085b60_jump:
		push   %eax
		mov    $0x000000,%eax
		mov    $0x0000ff,%edx
		call   _08cfbd_func
		pop    %eax
		mov    $0x00004c,%ah
		int    $0x000021
		lea    0x000000(%eax),%eax



_085b78_func:
		data16 mov %cs:_085b81_jump,%ds
		ret    

	_085b81_jump:
		add    %al,(%eax)

	_085b83_jump:
		add    %al,0x87c41f8(%ebx)
		cmp    $0x00005a,%eax
		jg     _085b91_jump
		add    $0x000020,%eax

	_085b91_jump:
		ret    



_085b92_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%al
		xor    %edx,%edx
		call   _085b84_func
		mov    %al,(%esp)
		and    $0x0000ff,%eax
		cmp    $0x000072,%eax
		je     _085bce_jump
		cmp    $0x000077,%eax
		je     _085bce_jump
		cmp    $0x000061,%eax
		je     _085bce_jump
		mov    $0x000009,%eax
		call   _08d1fd_func
		xor    %eax,%eax
		jmp    _085c5b_jump

	_085bce_jump:
		xor    %ecx,%ecx
		mov    %edx,%esi
		mov    0x000001(%ebx),%cl
		or     $0x000003,%si
		cmp    $0x00002b,%ecx
		jne    _085c03_jump
		xor    %eax,%eax
		mov    %esi,%edx
		mov    0x000002(%ebx),%al
		or     $0x000040,%si
		cmp    $0x000062,%eax
		je     _085bff_jump
		cmp    $0x000074,%eax
		je     _085c3d_jump
		cmpl   $0x000200,_0abb9d_data

	_085bfd_jump:
		jne    _085c3d_jump

	_085bff_jump:
		mov    %esi,%edx
		jmp    _085c3d_jump

	_085c03_jump:
		mov    %edx,%eax
		or     $0x000040,%al
		cmp    $0x000062,%ecx
		jne    _085c20_jump
		mov    %eax,%edx
		mov    0x000002(%ebx),%bl
		and    $0x0000ff,%ebx
		cmp    $0x00002b,%ebx
		jne    _085c3d_jump
		or     $0x000003,%al
		jmp    _085c3b_jump

	_085c20_jump:
		cmp    $0x000074,%ecx
		jne    _085c2f_jump
		xor    %eax,%eax
		mov    0x000002(%ebx),%al
		cmp    $0x00002b,%eax
		jmp    _085bfd_jump

	_085c2f_jump:
		cmpl   $0x000200,_0abb9d_data
		jne    _085c3d_jump

	_085c3b_jump:
		mov    %eax,%edx

	_085c3d_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000077,%eax
		jne    _085c4c_jump
		or     $0x000002,%dl
		jmp    _085c59_jump

	_085c4c_jump:
		cmp    $0x000061,%eax
		jne    _085c56_jump
		or     $0x000082,%dl
		jmp    _085c59_jump

	_085c56_jump:
		or     $0x000001,%dl

	_085c59_jump:
		mov    %edx,%eax

	_085c5b_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_085c63_func:
		push   %esi
		mov    %eax,%esi
		mov    %dl,%al
		mov    %ecx,%edx
		mov    0x000008(%esp),%ecx
		andb   $0x0000fc,0x00000c(%ecx)
		or     %ebx,0x00000c(%ecx)
		and    $0x0000ff,%eax
		call   _085b84_func
		and    $0x0000ff,%eax
		cmp    $0x000072,%eax
		jne    _085ca6_jump
		xor    %eax,%eax
		test   $0x000002,%bl
		je     _085c95_jump
		mov    $0x000002,%eax

	_085c95_jump:
		test   $0x000040,%bl
		je     _085c9f_jump
		or     $0x000002,%ah
		jmp    _085ca2_jump

	_085c9f_jump:
		or     $0x000001,%ah

	_085ca2_jump:
		push   $0x000000
		jmp    _085cd1_jump

	_085ca6_jump:
		test   $0x000001,%bl
		setne  %al
		and    $0x0000ff,%eax
		add    $0x000021,%eax
		test   $0x000080,%bl
		je     _085cbd_jump
		or     $0x000010,%al
		jmp    _085cbf_jump

	_085cbd_jump:
		or     $0x000040,%al

	_085cbf_jump:
		test   $0x000040,%bl
		je     _085cc9_jump
		or     $0x000002,%ah
		jmp    _085ccc_jump

	_085cc9_jump:
		or     $0x000001,%ah

	_085ccc_jump:
		push   $0x000180

	_085cd1_jump:
		push   %edx
		push   %eax
		push   %esi
		call   _086dac_func
		add    $0x000010,%esp
		mov    %eax,0x000010(%ecx)
		cmpl   $0xffffffff,0x000010(%ecx)
		jne    _085cf2_jump
		mov    %ecx,%eax
		call   _08d2d2_func
		xor    %eax,%eax
		pop    %esi
		ret    $0x000004

	_085cf2_jump:
		movl   $0x000000,0x000004(%ecx)
		movl   $0x000000,0x000008(%ecx)
		movl   $0x000000,0x000014(%ecx)
		test   $0x000080,%bl
		je     _085d1a_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _085e56_func

	_085d1a_jump:
		mov    %ecx,%eax
		call   _08d329_func
		mov    %ecx,%eax
		pop    %esi
		ret    $0x000004



_085d27_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %ebx,%ecx
		mov    %edx,%eax
		call   _085b92_func
		mov    %eax,%ebx
		test   %eax,%eax
		je     _085d5c_jump
		xor    %eax,%eax
		call   _08d22c_func
		mov    %eax,%edi
		test   %eax,%eax
		je     _085d5a_jump
		push   %eax
		mov    (%edx),%dl
		and    $0x0000ff,%edx
		mov    %esi,%eax
		call   _085c63_func
		mov    %eax,%edi

	_085d5a_jump:
		mov    %edi,%eax

	_085d5c_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_085d60_func:
		push   %ebx
		xor    %ebx,%ebx
		call   _085d27_func
		pop    %ebx
		ret    



_085e14_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		andb   $0x0000ef,0x00000c(%edx)
		cmp    0x000004(%edx),%eax
		jg     _085e40_jump
		mov    0x000008(%edx),%ebx
		mov    (%edx),%ecx
		sub    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _085e40_jump
		mov    0x000004(%edx),%edi
		lea    (%ecx,%eax,1),%esi
		sub    %eax,%edi
		mov    %esi,(%edx)
		xor    %eax,%eax
		mov    %edi,0x000004(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_085e40_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_085e56_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%esi
		testb  $0x000006,0x00000c(%eax)
		je     _085ebe_jump
		testb  $0x000010,0x00000d(%ecx)
		je     _085e8f_jump
		mov    %ecx,%eax
		call   _08d35a_func
		test   %eax,%eax
		je     _085ea3_jump
		test   %ebx,%ebx
		jne    _085e86_jump
		test   %esi,%esi
		jge    _085e86_jump

	_085e7c_jump:
		mov    $0x000009,%eax
		call   _08d1fd_func

	_085e86_jump:
		mov    $0xffffffff,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_085e8f_jump:
		cmp    $0x000001,%ebx
		jne    _085e97_jump
		sub    0x000004(%ecx),%esi

	_085e97_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)

	_085ea3_jump:
		andb   $0x0000eb,0x00000c(%ecx)
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _08744e_func
		cmp    $0xffffffff,%eax
		jne    _085f4c_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_085ebe_jump:
		cmp    $0x000001,%ebx
		jb     _085ecc_jump
		jbe    _085ed2_jump
		cmp    $0x000002,%ebx
		je     _085f28_jump
		jmp    _085e7c_jump

	_085ecc_jump:
		test   %ebx,%ebx
		je     _085ef7_jump
		jmp    _085e7c_jump

	_085ed2_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		mov    0x000004(%ecx),%edi
		call   _085e14_func
		test   %eax,%eax
		je     _085f4c_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		sub    %edi,%edx
		call   _08744e_func
		cmp    $0xffffffff,%eax
		jne    _085f4c_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_085ef7_jump:
		mov    0x000010(%ecx),%eax
		call   _08d433_func
		mov    0x000004(%ecx),%edx
		mov    %esi,%edi
		sub    %edx,%eax
		sub    %eax,%edi
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _085e14_func
		test   %eax,%eax
		je     _085f4c_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _08744e_func
		cmp    $0xffffffff,%eax
		jne    _085f4c_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_085f28_jump:
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%dl
		mov    %eax,(%ecx)
		and    $0x0000ef,%dl
		mov    0x000010(%ecx),%eax
		mov    %dl,0x00000c(%ecx)
		mov    %esi,%edx
		movl   $0x000000,0x000004(%ecx)
		call   _08744e_func
		cmp    $0xffffffff,%eax
		je     _085f4e_jump

	_085f4c_jump:
		xor    %eax,%eax

	_085f4e_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_085f52_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		push   %eax
		push   %edx
		mov    %ecx,%ebp
		testb  $0x000002,0x00000c(%ecx)
		jne    _085f77_jump
		mov    $0x000004,%eax
		call   _08d1fd_func
		orb    $0x000020,0x00000c(%ecx)
		xor    %eax,%eax
		jmp    _08610b_jump

	_085f77_jump:
		imul   %edx,%ebx
		test   %ebx,%ebx
		jne    _085f85_jump
		mov    %ebx,%eax
		jmp    _08610b_jump

	_085f85_jump:
		cmpl   $0x000000,0x000008(%ecx)
		jne    _085f92_jump
		mov    %ebp,%eax
		call   _08d444_func

	_085f92_jump:
		mov    0x00000c(%ebp),%eax
		mov    0x00000c(%ebp),%dl
		xor    %esi,%esi
		and    $0x000030,%eax
		and    $0x0000cf,%dl
		mov    %esi,0x00000c(%esp)
		mov    %eax,0x000008(%esp)
		mov    %dl,0x00000c(%ebp)
		test   $0x000040,%dl
		je     _08608d_jump
		mov    %ebx,0x000010(%esp)

	_085fb8_jump:
		cmpl   $0x000000,0x000004(%ebp)
		jne    _086000_jump
		mov    0x000010(%esp),%eax
		cmp    0x000014(%ebp),%eax
		jb     _086000_jump
		mov    %eax,%ebx
		xor    %al,%bl
		and    $0x0000fe,%bh
		test   %ebx,%ebx
		jne    _085fd4_jump
		mov    %eax,%ebx

	_085fd4_jump:
		mov    0x000004(%esp),%edx
		mov    0x000010(%ebp),%eax
		call   _08d4bb_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _085ffa_jump
		test   %eax,%eax
		jne    _086061_jump
		call   _08d52f_func
		movl   $0x00000c,(%eax)

	_085ffa_jump:
		orb    $0x000020,0x00000c(%ebp)
		jmp    _086061_jump

	_086000_jump:
		mov    0x000014(%ebp),%edx
		mov    0x000004(%ebp),%ebx
		mov    0x000010(%esp),%ecx
		sub    %ebx,%edx
		cmp    %ecx,%edx
		jbe    _086012_jump
		mov    %ecx,%edx

	_086012_jump:
		mov    0x000004(%esp),%esi
		mov    %edx,%ecx
		mov    0x000000(%ebp),%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x000004(%ebp),%edi
		add    %edx,%edi
		mov    0x00000d(%ebp),%bh
		mov    %edi,0x000004(%ebp)
		or     $0x000010,%bh
		mov    0x000000(%ebp),%esi
		mov    %bh,0x00000d(%ebp)
		add    %edx,%esi
		mov    0x000004(%ebp),%eax
		mov    0x000014(%ebp),%ebx
		mov    %esi,0x000000(%ebp)
		cmp    %ebx,%eax
		je     _08605a_jump
		testb  $0x000004,0x00000d(%ebp)
		je     _086061_jump

	_08605a_jump:
		mov    %ebp,%eax
		call   _08d35a_func

	_086061_jump:
		mov    0x000004(%esp),%ecx
		mov    0x00000c(%esp),%esi
		mov    0x000010(%esp),%edi
		add    %edx,%ecx
		add    %edx,%esi
		mov    %ecx,0x000004(%esp)
		mov    %esi,0x00000c(%esp)
		sub    %edx,%edi
		mov    %edi,0x000010(%esp)
		je     _0860e8_jump
		testb  $0x000020,0x00000c(%ebp)
		je     _085fb8_jump
		jmp    _0860e8_jump

	_08608d_jump:
		mov    0x00000d(%ebp),%cl
		xor    %edi,%edi
		test   $0x000004,%cl
		je     _0860a8_jump
		mov    %cl,%ch
		and    $0x0000fa,%ch
		mov    %ch,%al
		or     $0x000001,%al
		mov    $0x000001,%edi
		mov    %al,0x00000d(%ebp)

	_0860a8_jump:
		mov    0x000004(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		inc    %edx
		mov    %edx,0x000004(%esp)
		mov    %ebp,%edx
		call   _086b49_func
		testb  $0x000030,0x00000c(%ebp)
		jne    _0860cf_jump
		mov    0x00000c(%esp),%ecx
		inc    %ecx
		mov    %ecx,0x00000c(%esp)
		cmp    %ecx,%ebx
		jne    _0860a8_jump

	_0860cf_jump:
		test   %edi,%edi
		je     _0860e8_jump
		mov    0x00000d(%ebp),%dh
		and    $0x0000fa,%dh
		mov    %dh,%bl
		or     $0x000004,%bl
		mov    %ebp,%eax
		mov    %bl,0x00000d(%ebp)
		call   _08d35a_func

	_0860e8_jump:
		testb  $0x000020,0x00000c(%ebp)
		je     _0860f4_jump
		xor    %edx,%edx
		mov    %edx,0x00000c(%esp)

	_0860f4_jump:
		mov    0x000008(%esp),%eax
		mov    (%esp),%ecx
		mov    0x00000c(%ebp),%ebx
		xor    %edx,%edx
		or     %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %ebx,0x00000c(%ebp)
		div    %ecx

	_08610b_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_086112_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    _0e0ff4_data,%eax

	_08611b_jump:
		test   %eax,%eax
		jne    _086127_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_086127_jump:
		cmp    0x000004(%eax),%ebx
		je     _086130_jump
		mov    (%eax),%eax
		jmp    _08611b_jump

	_086130_jump:
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _08613f_func
		pop    %edx
		pop    %ebx
		ret    



_08613f_func:
		push   %ebx
		mov    %eax,%ebx
		call   _0861c5_func
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _08d2d2_func
		mov    %edx,%eax
		pop    %ebx
		ret    



_086154_func:
		add    $0x000030,%eax
		cmp    $0x000039,%eax
		jle    _08615f_jump
		add    $0x000027,%eax

	_08615f_jump:
		ret    



_086160_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		call   _08d53b_func
		mov    %eax,%ebx
		lea    0x000004(%ecx),%edx
		movb   $0x000074,(%ecx)
		mov    %ecx,%esi

	_086177_jump:
		mov    %ebx,%eax
		and    $0x00000f,%eax
		call   _086154_func
		mov    %al,(%edx)
		dec    %edx
		shr    $0x000004,%ebx
		cmp    %esi,%edx
		jne    _086177_jump
		mov    %edi,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%eax
		movb   $0x00005f,0x000005(%ecx)
		call   _086154_func
		mov    %al,0x000006(%ecx)
		mov    %edi,%eax
		and    $0x00000f,%eax
		call   _086154_func
		movb   $0x00002e,0x000008(%ecx)
		movb   $0x000074,0x000009(%ecx)
		movb   $0x00006d,0x00000a(%ecx)
		movb   $0x000070,0x00000b(%ecx)
		movb   $0x000000,0x00000c(%ecx)
		mov    %al,0x000007(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0861c5_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		cmpl   $0x000000,0x00000c(%eax)
		jne    _0861e1_jump
		mov    $0xffffffff,%eax
		jmp    _08624c_jump

	_0861e1_jump:
		mov    0x00000d(%eax),%ah
		xor    %esi,%esi
		test   $0x000010,%ah
		je     _0861f4_jump
		mov    %ecx,%eax
		call   _08d35a_func
		mov    %eax,%esi

	_0861f4_jump:
		mov    %ecx,%eax
		call   _08a18e_func
		cmp    $0xffffffff,%eax
		je     _08620e_jump
		mov    %eax,%edx
		mov    0x000010(%ecx),%ebp
		xor    %ebx,%ebx
		mov    %ebp,%eax
		call   _08744e_func

	_08620e_jump:
		test   %edi,%edi
		je     _08621c_jump
		mov    0x000010(%ecx),%eax
		call   _08d541_func
		or     %eax,%esi

	_08621c_jump:
		testb  $0x000008,0x00000c(%ecx)
		je     _086231_jump
		mov    0x000008(%ecx),%eax
		call   _08bdf0_func
		movl   $0x000000,0x000008(%ecx)

	_086231_jump:
		testb  $0x000008,0x00000d(%ecx)
		je     _08624a_jump
		xor    %edx,%edx
		mov    %esp,%eax
		mov    0x000019(%ecx),%dl
		call   _086160_func
		mov    %esp,%eax
		call   _08bb69_func

	_08624a_jump:
		mov    %esi,%eax

	_08624c_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_086255_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		push   %eax
		push   %edx
		mov    %ecx,%ebp
		testb  $0x000001,0x00000c(%ecx)
		jne    _08627f_jump
		mov    $0x000004,%eax
		call   _08d1fd_func
		mov    0x00000c(%ecx),%dh
		or     $0x000020,%dh
		xor    %eax,%eax
		mov    %dh,0x00000c(%ecx)
		jmp    _086429_jump

	_08627f_jump:
		imul   %edx,%ebx
		test   %ebx,%ebx
		jne    _08628d_jump
		mov    %ebx,%eax
		jmp    _086429_jump

	_08628d_jump:
		cmpl   $0x000000,0x000008(%ecx)
		jne    _08629a_jump
		mov    %ebp,%eax
		call   _08d444_func

	_08629a_jump:
		xor    %esi,%esi
		mov    0x00000c(%ebp),%dl
		mov    %esi,0x000008(%esp)
		test   $0x000040,%dl
		je     _0863aa_jump
		mov    %ebx,0x00000c(%esp)

	_0862b0_jump:
		mov    0x000004(%ebp),%edx
		test   %edx,%edx
		je     _08630b_jump
		mov    0x00000c(%esp),%ebx
		cmp    %ebx,%edx
		jbe    _0862c1_jump
		mov    %ebx,%edx

	_0862c1_jump:
		mov    0x000004(%esp),%edi
		mov    %edx,%ecx
		mov    0x000000(%ebp),%esi
		mov    0x000008(%esp),%ebx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x00000c(%esp),%eax
		mov    0x000000(%ebp),%ecx
		lea    (%edi,%edx,1),%esi
		add    %edx,%ebx
		mov    %esi,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		mov    0x000004(%ebp),%edi
		add    %edx,%ecx
		sub    %edx,%eax
		sub    %edx,%edi
		mov    %ecx,0x000000(%ebp)
		mov    %eax,0x00000c(%esp)
		mov    %edi,0x000004(%ebp)

	_08630b_jump:
		mov    0x00000c(%esp),%ecx
		test   %ecx,%ecx
		je     _08641e_jump
		cmp    0x000014(%ebp),%ecx
		jae    _086326_jump
		testb  $0x000004,0x00000d(%ebp)
		je     _086396_jump

	_086326_jump:
		movl   $0x000000,0x000004(%ebp)
		mov    0x00000c(%esp),%ebx
		mov    0x000008(%ebp),%eax
		mov    0x00000d(%ebp),%cl
		mov    %eax,0x000000(%ebp)
		test   $0x000004,%cl
		jne    _08634c_jump
		cmp    $0x000200,%ebx
		jbe    _08634c_jump
		xor    %bl,%bl
		and    $0x0000fe,%bh

	_08634c_jump:
		mov    0x000004(%esp),%edx
		mov    0x000010(%ebp),%eax
		call   _08d576_func
		cmp    $0xffffffff,%eax
		jne    _086366_jump
		orb    $0x000020,0x00000c(%ebp)
		jmp    _08641e_jump

	_086366_jump:
		test   %eax,%eax
		jne    _086373_jump

	_08636a_jump:
		orb    $0x000010,0x00000c(%ebp)
		jmp    _08641e_jump

	_086373_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000008(%esp),%ecx
		add    %eax,%edx
		sub    %eax,%ebx
		add    %eax,%ecx
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		jmp    _0862b0_jump

	_086396_jump:
		mov    %ebp,%eax
		call   _086a9d_func
		test   %eax,%eax
		je     _08641e_jump
		jmp    _0862b0_jump

	_0863aa_jump:
		mov    0x000004(%esp),%edx
		add    %edx,%ebx

	_0863b0_jump:
		cmpl   $0x000000,0x000004(%ebp)
		jne    _0863c1_jump
		mov    %ebp,%eax
		call   _086a9d_func
		test   %eax,%eax
		je     _08641e_jump

	_0863c1_jump:
		mov    0x000004(%ebp),%ecx
		mov    0x000000(%ebp),%eax
		dec    %ecx
		lea    0x000001(%eax),%esi
		mov    %ecx,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x00000d,%eax
		jne    _086405_jump
		cmpl   $0x000000,0x000004(%ebp)
		jne    _0863ee_jump
		mov    %ebp,%eax
		call   _086a9d_func
		test   %eax,%eax
		je     _08641e_jump

	_0863ee_jump:
		mov    0x000004(%ebp),%edi
		mov    0x000000(%ebp),%eax
		dec    %edi
		lea    0x000001(%eax),%esi
		mov    %edi,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax

	_086405_jump:
		cmp    $0x00001a,%eax
		je     _08636a_jump
		mov    %al,(%edx)
		mov    0x000008(%esp),%eax
		inc    %eax
		inc    %edx
		mov    %eax,0x000008(%esp)
		cmp    %ebx,%edx
		jne    _0863b0_jump

	_08641e_jump:
		mov    0x000008(%esp),%eax
		mov    (%esp),%esi
		xor    %edx,%edx
		div    %esi

	_086429_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_086442_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		test   %edx,%edx
		jge    _086461_jump
		lea    -0x000008(%ebp),%edx
		mov    $0x002043,%eax
		call   _08d638_func
		jmp    _08648c_jump

	_086461_jump:
		cmpb   $0x000000,_0abbb5_data
		je     _086480_jump
		mov    -0x000008(%ebp),%eax
		push   %ebp
		push   %edx
		push   %eax
		mov    %esp,%ebp
		fldl   0x000000(%ebp)
		fsqrt  
		fstpl  0x000000(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		jmp    _08648c_jump

	_086480_jump:
		test   %edx,%edx
		je     _086492_jump
		mov    -0x000008(%ebp),%eax
		call   _08d728_func

	_08648c_jump:
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)

	_086492_jump:
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_0864a4_func:
		mov    $0x00001f,%al
		jmp    _0864aa_jump



_0864a8_func:
		mov    $0x000020,%al

	_0864aa_jump:
		add    %edx,%edx
		rcr    %ah
		shr    %ah
		or     %al,%ah
		shr    %edx
		push   %ecx
		mov    %edx,%ecx
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		sub    $0x0003fe,%cx
		jl     _086519_jump
		cmp    $0x000020,%cx
		jg     _086512_jump
		and    $0x00003f,%al
		cmp    %al,%cl
		jg     _086512_jump
		mov    %ah,%ch
		and    $0x0fffff,%edx
		and    $0xfff00000,%eax
		or     %eax,%edx
		rol    $0x00000c,%edx
		stc    
		rcr    %edx
		rcr    %ch
		cmp    $0x000020,%cl
		jne    _0864f4_jump
		mov    %edx,%eax
		add    %ch,%ch
		jmp    _0864ff_jump

	_0864f4_jump:
		sub    %eax,%eax
		shld   %cl,%edx,%eax
		shl    %cl,%edx
		add    %ch,%ch
		add    %edx,%edx

	_0864ff_jump:
		mov    $0x0000ff,%cl
		rcr    %cl
		and    %cl,%ch
		add    %ch,%ch
		adc    $0x000000,%eax
		add    %ch,%ch
		jae    _086510_jump
		neg    %eax

	_086510_jump:
		pop    %ecx
		ret    

	_086512_jump:
		mov    $0x80000000,%eax
		pop    %ecx
		ret    

	_086519_jump:
		sub    %eax,%eax
		pop    %ecx
		ret    



_08651d_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000038,%esp
		mov    %eax,-0x000044(%ebp)
		mov    %edx,-0x000040(%ebp)
		mov    %ebx,%esi
		lea    -0x00002c(%ebp),%ebx
		call   _08d95a_func
		cmpl   $0x000020,-0x00002c(%ebp)
		jl     _086553_jump
		mov    _0a50d0_data(,%esi,4),%eax
		lea    -0x000044(%ebp),%edx
		or     $0x000024,%ah
		call   _08d638_func
		jmp    _086748_jump

	_086553_jump:
		lea    -0x000034(%ebp),%eax
		push   %eax
		lea    -0x000028(%ebp),%eax
		push   %eax
		push   $0x3fe921fb
		push   $0x54442d18
		mov    -0x000040(%ebp),%ebx
		push   %ebx
		mov    -0x000044(%ebp),%ecx
		push   %ecx
		call   _08d9ae_func
		mov    %esi,%eax
		mov    -0x000028(%ebp),%edx
		and    $0x000002,%eax
		add    %edx,%eax
		and    $0x000007,%eax
		mov    %eax,-0x000028(%ebp)
		testb  $0x000001,-0x000028(%ebp)
		je     _0865a3_jump
		mov    $0x54442d18,%eax
		mov    $0x3fe921fb,%edx
		mov    -0x000034(%ebp),%ebx
		mov    -0x000030(%ebp),%ecx
		call   _0854d8_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_0865a3_jump:
		lea    -0x00001c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _08d95a_func
		mov    -0x00001c(%ebp),%ebx
		cmp    $0xffffffe6,%ebx
		jge    _0865d4_jump
		mov    -0x000034(%ebp),%edi
		mov    -0x000030(%ebp),%eax
		xor    %ecx,%ecx
		mov    %eax,-0x000014(%ebp)
		mov    $0x3ff00000,%eax
		mov    %ecx,-0x000018(%ebp)
		mov    %eax,-0x000010(%ebp)
		jmp    _086677_jump

	_0865d4_jump:
		test   %ebx,%ebx
		jle    _0865dd_jump
		xor    %eax,%eax
		mov    %eax,-0x00001c(%ebp)

	_0865dd_jump:
		mov    -0x00001c(%ebp),%edx
		neg    %edx
		mov    %edx,-0x00001c(%ebp)
		cmp    $0x000008,%edx
		jle    _0865f1_jump
		movl   $0x000008,-0x00001c(%ebp)

	_0865f1_jump:
		mov    -0x00001c(%ebp),%eax
		mov    _0a50ac_data(,%eax,4),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		jne    _08660b_jump
		cmp    $0x000001,%esi
		jne    _086647_jump

	_08660b_jump:
		mov    $0x000008,%eax
		mov    -0x00001c(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,-0x000024(%ebp)
		mov    %edx,%eax
		mov    $_0a5064_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    -0x000034(%ebp),%eax
		mov    %edx,-0x000020(%ebp)
		mov    -0x000030(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _085695_func
		mov    -0x000024(%ebp),%ecx
		mov    -0x000020(%ebp),%ebx
		call   _08daa7_func
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000010(%ebp)

	_086647_jump:
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _086654_jump
		cmp    $0x000001,%esi
		jne    _086677_jump

	_086654_jump:
		mov    $0x000008,%ecx
		mov    -0x00001c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		sub    %ebx,%ecx
		shl    $0x000003,%ebx
		mov    -0x000030(%ebp),%edx
		add    $_0a501c_data,%ebx
		call   _08dadc_func
		mov    %eax,%edi
		mov    %edx,-0x000014(%ebp)

	_086677_jump:
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _08668a_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,-0x00003c(%ebp)
		mov    -0x000010(%ebp),%eax
		jmp    _086690_jump

	_08668a_jump:
		mov    -0x000014(%ebp),%eax
		mov    %edi,-0x00003c(%ebp)

	_086690_jump:
		mov    %eax,-0x000038(%ebp)
		testb  $0x000004,-0x000028(%ebp)
		je     _0866aa_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _0869d6_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_0866aa_jump:
		cmp    $0x000001,%esi
		jne    _086725_jump
		mov    -0x000028(%ebp),%edx
		mov    -0x000028(%ebp),%eax
		add    $0x000002,%edx
		add    $0x000003,%eax
		mov    %edx,-0x000028(%ebp)
		test   $0x000002,%al
		je     _0866ce_jump
		mov    -0x000018(%ebp),%ebx
		mov    -0x000010(%ebp),%ecx
		jmp    _0866d3_jump

	_0866ce_jump:
		mov    -0x000014(%ebp),%ecx
		mov    %edi,%ebx

	_0866d3_jump:
		testb  $0x000004,-0x000028(%ebp)
		je     _0866e6_jump
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _0869d6_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_0866e6_jump:
		test   %ecx,%ecx
		jne    _086714_jump
		call   _08d209_func
		cmpl   $0x000000,-0x000038(%ebp)
		jle    _086702_jump
		mov    _0a50fc_data,%eax
		mov    _0a5100_data,%edx
		jmp    _086748_jump

	_086702_jump:
		mov    _0a50fc_data,%eax
		mov    _0a5100_data,%edx
		call   _0869d6_func
		jmp    _086748_jump

	_086714_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _0867d0_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_086725_jump:
		cmpl   $0x00001c,-0x00002c(%ebp)
		jl     _086742_jump
		lea    -0x00003c(%ebp),%ebx
		mov    _0a50d0_data(,%esi,4),%eax
		lea    -0x000044(%ebp),%edx
		or     $0x000002,%ah
		call   _08d642_func
		jmp    _086748_jump

	_086742_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx

	_086748_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_086762_func:
		push   %ebx
		cmpb   $0x000000,_0abbb5_data
		je     _086773_jump
		call   _08db1b_func
		pop    %ebx
		ret    

	_086773_jump:
		xor    %ebx,%ebx
		call   _08651d_func
		pop    %ebx
		ret    



_086789_func:
		push   %ebx
		cmpb   $0x000000,_0abbb5_data
		je     _08679a_jump
		call   _08db12_func
		pop    %ebx
		ret    

	_08679a_jump:
		mov    $0x000002,%ebx
		call   _08651d_func
		pop    %ebx
		ret    



_0867d0_func:
		or     %ebx,%ebx
		jne    _0867df_jump
		add    %ecx,%ecx
		jne    _0867dd_jump
		jmp    _08cecf_jump

	_0867dd_jump:
		rcr    %ecx

	_0867df_jump:
		or     %eax,%eax
		jne    _0867ea_jump
		add    %edx,%edx
		jne    _0867e8_jump
		ret    

	_0867e8_jump:
		rcr    %edx

	_0867ea_jump:
		cmpb   $0x000000,_0abbb5_data
		je     _086823_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		testb  $0x000001,_0abc78_data
		je     _08680a_jump
		call   _08e2a0_func
		jmp    _086810_jump

	_08680a_jump:
		fdivl  (%esp)
		add    $0x000008,%esp

	_086810_jump:
		fstpl  (%esp)
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _086822_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_086822_jump:
		ret    

	_086823_jump:
		push   %ebp
		mov    %esp,%ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %cx,%di
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _086866_jump
		or     $0x100000,%edx
		jmp    _086874_jump

	_086866_jump:
		add    %eax,%eax
		adc    %edx,%edx
		dec    %di
		test   $0x100000,%edx
		je     _086866_jump

	_086874_jump:
		or     %cx,%cx
		je     _086881_jump
		or     $0x100000,%esi
		jmp    _08688f_jump

	_086881_jump:
		add    %ebx,%ebx
		adc    %esi,%esi
		dec    %cx
		test   $0x100000,%esi
		je     _086881_jump

	_08688f_jump:
		sub    %cx,%di
		add    $0x0003ff,%di
		js     _0868aa_jump
		cmp    $0x0007ff,%di
		jb     _0868aa_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _08cedb_jump

	_0868aa_jump:
		cmp    $0x00ffcc,%di
		jge    _0868b8_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _08cebe_jump

	_0868b8_jump:
		push   %edi
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		push   %esi
		push   %ebx
		mov    %esi,%ecx
		mov    %edx,%edi
		mov    %eax,%esi
		sub    %eax,%eax
		cmp    %edx,%ecx
		ja     _0868e3_jump
		sub    %ecx,%edx
		inc    %eax

	_0868e3_jump:
		push   %eax
		mov    %esi,%eax
		div    %ecx
		push   %eax
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		mov    -0x000014(%ebp),%ebx
		testb  $0x000001,-0x000018(%ebp)
		je     _086904_jump
		add    %ebx,%eax
		adc    -0x000010(%ebp),%edx

	_086904_jump:
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _08691e_jump

	_08690c_jump:
		subl   $0x000001,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    %ebx,%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _08690c_jump

	_08691e_jump:
		mov    %esi,%edi
		mov    %ecx,%esi
		mov    -0x000010(%ebp),%ecx
		cmp    %edi,%ecx
		ja     _086933_jump
		sub    %ecx,%edi
		addl   $0x000001,-0x00001c(%ebp)
		adcl   $0x000000,-0x000018(%ebp)

	_086933_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		div    %ecx
		push   %eax
		or     %eax,%eax
		je     _08696a_jump
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _08696a_jump

	_086953_jump:
		subl   $0x000001,-0x000020(%ebp)
		sbbl   $0x000000,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    -0x000014(%ebp),%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _086953_jump

	_08696a_jump:
		pop    %eax
		pop    %edx
		pop    %ebx
		add    $0x000008,%esp
		pop    %edi
		dec    %di
		shr    %ebx
		jae    _08697c_jump
		rcr    %edx
		rcr    %eax
		inc    %edi

	_08697c_jump:
		sub    %esi,%esi
		mov    $0x00000b,%cl
		shrd   %cl,%edx,%eax
		rcr    %esi
		shrd   %cl,%esi,%edx
		or     $0xfff00000,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		adc    $0x000000,%edi
		or     %di,%di
		jg     _0869bb_jump
		jne    _0869a4_jump
		mov    $0x000001,%cl
		jmp    _0869aa_jump

	_0869a4_jump:
		neg    %di
		mov    %di,%cx

	_0869aa_jump:
		and    $0x1fffff,%edx
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %di,%di

	_0869bb_jump:
		and    $0x0fffff,%edx
		mov    %edi,%esi
		ror    $0x00000b,%edi
		add    %esi,%esi
		rcr    %edi
		and    $0xfff00000,%edi
		or     %edi,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    



_0869d6_func:
		test   %edx,%edx
		jne    _0869dc_jump
		test   %eax,%eax

	_0869dc_jump:
		je     _0869e4_jump
		xor    $0x80000000,%edx

	_0869e4_jump:
		ret    



_0869e5_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		testb  $0x000001,0x00000c(%eax)
		jne    _086a0b_jump
		mov    $0x000004,%eax
		call   _08d1fd_func
		mov    0x00000c(%edx),%bl
		or     $0x000020,%bl
		mov    $0xffffffff,%eax
		mov    %bl,0x00000c(%edx)
		jmp    _086a2b_jump

	_086a0b_jump:
		mov    0x000004(%edx),%ebx
		dec    %ebx
		mov    %ebx,0x000004(%edx)
		test   %ebx,%ebx
		jge    _086a1f_jump
		mov    %edx,%eax
		call   _086a6e_func
		jmp    _086a2b_jump

	_086a1f_jump:
		mov    (%edx),%ebx
		mov    (%ebx),%al
		inc    %ebx
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)

	_086a2b_jump:
		testb  $0x000040,0x00000c(%edx)
		jne    _086a69_jump
		cmp    $0x00000d,%eax
		jne    _086a56_jump
		mov    0x000004(%edx),%esi
		dec    %esi
		mov    %esi,0x000004(%edx)
		test   %esi,%esi
		jge    _086a4a_jump
		mov    %edx,%eax
		call   _086a6e_func
		jmp    _086a56_jump

	_086a4a_jump:
		mov    (%edx),%ebx
		mov    (%ebx),%al
		inc    %ebx
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)

	_086a56_jump:
		cmp    $0x00001a,%eax
		jne    _086a69_jump
		mov    0x00000c(%edx),%cl
		or     $0x000010,%cl
		mov    $0xffffffff,%eax
		mov    %cl,0x00000c(%edx)

	_086a69_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_086a6e_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _086a9d_func
		test   %eax,%eax
		jne    _086a85_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_086a85_jump:
		mov    0x000004(%edx),%ebx
		mov    (%edx),%ecx
		dec    %ebx
		inc    %ecx
		mov    %ebx,0x000004(%edx)
		mov    %ecx,(%edx)
		mov    -0x000001(%ecx),%al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_086a9d_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpl   $0x000000,0x000008(%eax)
		jne    _086aae_jump
		call   _08d444_func

	_086aae_jump:
		mov    0x00000d(%ecx),%ah
		test   $0x000020,%ah
		je     _086ac5_jump
		test   $0x000006,%ah
		je     _086ac5_jump
		mov    $0x002000,%eax
		call   _08e389_func

	_086ac5_jump:
		mov    0x000008(%ecx),%edx
		mov    %edx,(%ecx)
		mov    0x00000c(%ecx),%dh
		mov    0x00000c(%ecx),%eax
		and    $0x0000fb,%dh
		and    $0x002400,%eax
		mov    %dh,0x00000c(%ecx)
		cmp    $0x002400,%eax
		jne    _086b05_jump
		mov    0x000010(%ecx),%ebx
		test   %ebx,%ebx
		jne    _086b05_jump
		mov    %ebx,0x000004(%ecx)
		call   _0874b2_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _086b22_jump
		mov    (%ecx),%eax
		mov    %dl,(%eax)
		movl   $0x000001,0x000004(%ecx)
		jmp    _086b22_jump

	_086b05_jump:
		testb  $0x000004,0x00000d(%ecx)
		je     _086b12_jump
		mov    $0x000001,%ebx
		jmp    _086b15_jump

	_086b12_jump:
		mov    0x000014(%ecx),%ebx

	_086b15_jump:
		mov    (%ecx),%edx
		mov    0x000010(%ecx),%eax
		call   _08d576_func
		mov    %eax,0x000004(%ecx)

	_086b22_jump:
		mov    0x000004(%ecx),%esi
		test   %esi,%esi
		jg     _086b41_jump
		jne    _086b31_jump
		orb    $0x000010,0x00000c(%ecx)
		jmp    _086b41_jump

	_086b31_jump:
		mov    0x00000c(%ecx),%bh
		movl   $0x000000,0x000004(%ecx)
		or     $0x000020,%bh
		mov    %bh,0x00000c(%ecx)

	_086b41_jump:
		mov    0x000004(%ecx),%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_086b49_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		testb  $0x000002,0x00000c(%edx)
		jne    _086b6e_jump
		mov    $0x000004,%eax
		call   _08d1fd_func
		orb    $0x000020,0x00000c(%edx)

	_086b64_jump:
		mov    $0xffffffff,%eax
		jmp    _086be7_jump

	_086b6e_jump:
		cmpl   $0x000000,0x000008(%edx)
		jne    _086b7b_jump
		mov    %edx,%eax
		call   _08d444_func

	_086b7b_jump:
		mov    $0x000400,%ecx
		cmp    $0x00000a,%ebx
		jne    _086bb8_jump
		mov    0x00000c(%edx),%al
		mov    $0x000600,%ecx
		test   $0x000040,%al
		jne    _086bb8_jump
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		movb   $0x00000d,(%eax)
		mov    (%edx),%esi
		inc    %esi
		mov    0x000004(%edx),%edi
		mov    %esi,(%edx)
		inc    %edi
		mov    0x000014(%edx),%ebp
		mov    %edi,0x000004(%edx)
		cmp    %ebp,%edi
		jne    _086bb8_jump
		mov    %edx,%eax
		call   _08d35a_func
		test   %eax,%eax
		jne    _086b64_jump

	_086bb8_jump:
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		mov    %bl,(%eax)
		mov    (%edx),%eax
		inc    %eax
		mov    0x000004(%edx),%esi
		mov    %eax,(%edx)
		inc    %esi
		mov    0x00000c(%edx),%edi
		mov    %esi,0x000004(%edx)
		test   %edi,%ecx
		jne    _086bd8_jump
		cmp    0x000014(%edx),%esi
		jne    _086be3_jump

	_086bd8_jump:
		mov    %edx,%eax
		call   _08d35a_func
		test   %eax,%eax
		jne    _086b64_jump

	_086be3_jump:
		xor    %eax,%eax
		mov    %bl,%al

	_086be7_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_086bed_func:
		push   %ebx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    $_0ab9ae_data,%eax
		call   _08ca61_func
		pop    %ebx
		ret    



_086bfe_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx

	_086c05_jump:
		mov    (%edx),%al
		test   %al,%al
		je     _086c1d_jump
		sub    $0x000041,%al
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000019,%ebx
		jg     _086c1a_jump
		add    $0x000061,%al
		mov    %al,(%edx)

	_086c1a_jump:
		inc    %edx
		jmp    _086c05_jump

	_086c1d_jump:
		mov    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_086c23_func:
		push   %ecx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		mov    %esp,%ecx
		call   _08e3b8_func
		mov    %esi,%eax
		call   _08b9fd_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %ecx
		ret    



_086c40_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebx
		cmpb   $0x000000,(%edx)
		jne    _086c58_jump

	_086c51_jump:
		mov    %esi,%eax
		jmp    _086cf5_jump

	_086c58_jump:
		cmpb   $0x000000,0x000001(%edx)
		jne    _086c7a_jump
		mov    (%ebx),%dl

	_086c60_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _086c78_jump
		cmp    $0x000000,%al
		je     _086c76_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _086c78_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _086c60_jump

	_086c76_jump:
		sub    %esi,%esi

	_086c78_jump:
		jmp    _086c51_jump

	_086c7a_jump:
		mov    $0xffffffff,%ecx
		mov    %esi,%edi
		xor    %al,%al
		push   %es
		jecxz  _086c91_jump
		mov    %ds,%edx
		mov    %edx,%es
		repnz scas %es:(%edi),%al
		jne    _086c91_jump
		dec    %edi
	_086c91_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		test   $0x00cf89,%ax
		pop    %es
		mov    %edi,(%esp)
		mov    %ebx,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    %ecx,%ebp

	_086cab_jump:
		mov    (%esp),%ecx
		sub    %esi,%ecx
		cmp    %ebp,%ecx
		jb     _086cf3_jump
		mov    %esi,%edi
		mov    (%ebx),%al
		push   %es
		jecxz  _086cc6_jump
		mov    %ds,%edx
		mov    %edx,%es
		repnz scas %es:(%edi),%al
		jne    _086cc6_jump
		dec    %edi
	_086cc6_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		test   $0x00cf89,%ax
		pop    %es
		mov    %edi,%edx
		test   %edi,%edi
		je     _086cf3_jump
		mov    %ebp,%ecx
		mov    %ebx,%edi
		mov    %edx,%esi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _086ce5_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_086ce5_jump:
		pop    %es
		test   %eax,%eax
		jne    _086cee_jump
		mov    %edx,%eax
		jmp    _086cf5_jump

	_086cee_jump:
		lea    0x000001(%edx),%esi
		jmp    _086cab_jump

	_086cf3_jump:
		xor    %eax,%eax

	_086cf5_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_086cfe_func:
		push   %ebx
		push   %ecx
		push   %edx

	_086d01_jump:
		mov    (%eax),%dl
		inc    %dl
		and    $0x0000ff,%edx
		mov    _0a4f18_data(%edx),%dl
		and    $0x000002,%dl
		and    $0x0000ff,%edx
		je     _086d1f_jump
		inc    %eax
		jmp    _086d01_jump

	_086d1f_jump:
		mov    (%eax),%cl
		mov    %cl,%dl
		cmp    $0x00002b,%edx
		je     _086d2d_jump
		cmp    $0x00002d,%edx
		jne    _086d2e_jump

	_086d2d_jump:
		inc    %eax

	_086d2e_jump:
		xor    %ebx,%ebx

	_086d30_jump:
		mov    (%eax),%dl
		inc    %dl
		and    $0x0000ff,%edx
		mov    _0a4f18_data(%edx),%dl
		and    $0x000020,%dl
		and    $0x0000ff,%edx
		je     _086d5a_jump
		imul   $0x00000a,%ebx,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		add    %edx,%ebx
		inc    %eax
		sub    $0x000030,%ebx
		jmp    _086d30_jump

	_086d5a_jump:
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x00002d,%eax
		jne    _086d65_jump
		neg    %ebx

	_086d65_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_086d6b_func:
		push   %edx
		xor    %edx,%edx
		mov    _0abbdc_data,%eax
		mov    %edx,_0abbdc_data
		test   %eax,%eax
		jne    _086d86_jump
		mov    $0x000008,%ah
		int    $0x000021
		and    $0x0000ff,%eax

	_086d86_jump:
		pop    %edx
		ret    



_086d88_func:
		push   %ebx
		push   %edx
		lea    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		push   %eax
		push   $0x000000
		mov    0x000018(%esp),%edx
		push   %edx
		mov    0x000018(%esp),%ebx
		push   %ebx
		call   _086dac_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ebx
		ret    



_086dac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    0x000024(%esp),%esi

	_086db8_jump:
		movzbl (%esi),%edi
		cmp    $0x000020,%edi
		jne    _086dc3_jump
		inc    %esi
		jmp    _086db8_jump

	_086dc3_jump:
		mov    0x000028(%esp),%eax
		and    $0x000083,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%al
		mov    0x00002c(%esp),%ah
		mov    %esi,%edx
		or     %ah,%al
		mov    $0xffffffff,%edi
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _086df6_jump
		xor    %edi,%edi
		mov    (%esp),%di

	_086df6_jump:
		mov    0x000028(%esp),%dl
		test   $0x000003,%dl
		je     _086e79_jump
		cmp    $0xffffffff,%edi
		je     _086e79_jump
		mov    %edi,%eax
		call   _08e3e0_func
		test   %eax,%eax
		jne    _086e79_jump
		testb  $0x000004,0x000029(%esp)
		je     _086e41_jump
		test   $0x000020,%dl
		je     _086e41_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    $0x000007,%eax
		call   _08d1fd_func
		mov    $0xffffffff,%eax
		jmp    _086f8c_jump

	_086e41_jump:
		testb  $0x000040,0x000028(%esp)
		je     _086e79_jump
		lea    0x000008(%esp),%edx
		mov    %edi,%ebx
		xor    %ecx,%ecx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jge    _086e79_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax

	_086e69_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		call   _08e412_func
		jmp    _086f8c_jump

	_086e79_jump:
		cmp    $0xffffffff,%edi
		jne    _086f1b_jump
		testb  $0x000020,0x000028(%esp)
		je     _086e69_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		cmp    $0x000002,%eax
		jne    _086e69_jump
		lea    0x000030(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		test   %eax,%eax
		jne    _086ea7_jump
		mov    $0x000180,%eax

	_086ea7_jump:
		mov    _0abc90_data,%edx
		not    %edx
		and    %edx,%eax
		xor    %ecx,%ecx
		test   $0x000080,%al
		jne    _086ebc_jump
		mov    $0x000001,%ecx

	_086ebc_jump:
		and    $0x0000ff,%ecx
		mov    %esi,%edx
		mov    $0x00003c,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _086e69_jump
		xor    %edi,%edi
		mov    0x00002c(%esp),%edx
		mov    (%esp),%di
		test   %edx,%edx
		je     _086f1b_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _086e69_jump
		mov    0x000004(%esp),%al
		mov    0x00002c(%esp),%ch
		mov    %esi,%edx
		or     %ch,%al
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _086e69_jump
		xor    %edi,%edi
		mov    (%esp),%di

	_086f1b_jump:
		mov    %edi,%eax
		call   _08e483_func
		and    $0x00003c,%al
		mov    %eax,%edx
		mov    %edi,%eax
		call   _08e3e0_func
		test   %eax,%eax
		je     _086f34_jump
		or     $0x000020,%dh

	_086f34_jump:
		andb   $0x00007f,0x000004(%esp)
		cmpl   $0x000002,0x000004(%esp)
		jne    _086f43_jump
		or     $0x000003,%dl

	_086f43_jump:
		cmpl   $0x000000,0x000004(%esp)
		jne    _086f4d_jump
		or     $0x000001,%dl

	_086f4d_jump:
		cmpl   $0x000001,0x000004(%esp)
		jne    _086f57_jump
		or     $0x000002,%dl

	_086f57_jump:
		testb  $0x000010,0x000028(%esp)
		je     _086f61_jump
		or     $0x000080,%dl

	_086f61_jump:
		mov    %edx,%eax
		mov    0x000029(%esp),%bl
		or     $0x000040,%al
		test   $0x000003,%bl
		je     _086f75_jump
		test   $0x000002,%bl
		je     _086f83_jump
		jmp    _086f81_jump

	_086f75_jump:
		cmpl   $0x000200,_0abb9d_data
		jne    _086f83_jump

	_086f81_jump:
		mov    %eax,%edx

	_086f83_jump:
		mov    %edi,%eax
		call   _08e4d8_func
		mov    %edi,%eax

	_086f8c_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_086ffa_func:
		push   %edx
		test   %eax,%eax
		je     _08701d_jump
		cmpb   $0x000000,(%eax)
		je     _08701d_jump
		mov    $_0ab9c8_data,%edx
		call   _08e4ed_func
		mov    $_0ab9c8_data,%edx
		mov    $_0a4a5c_data,%eax
		call   _08e4ed_func

	_08701d_jump:
		call   _08d52f_func
		mov    (%eax),%eax
		mov    $_0ab9c8_data,%edx
		call   _08e568_func
		call   _08e4ed_func
		mov    $_0ab9c8_data,%edx
		mov    $0x00000a,%eax
		call   _086b49_func
		pop    %edx
		ret    



_087044_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _08744e_func
		mov    %eax,%esi
		cmp    $0xffffffff,%eax
		je     _08707b_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _08744e_func
		mov    %eax,%edi
		mov    %esi,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   _08744e_func
		mov    %edi,%eax

	_08707b_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_087081_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		push   %eax
		mov    %edx,%ebp
		call   _08e483_func
		mov    %eax,0x000008(%esp)
		test   %eax,%eax
		jne    _0870ac_jump
		mov    $0x000004,%eax

	_08709d_jump:
		call   _08d1fd_func
		mov    $0xffffffff,%eax
		jmp    _087174_jump

	_0870ac_jump:
		test   $0x000001,%al
		jne    _0870b7_jump
		mov    $0x000006,%eax
		jmp    _08709d_jump

	_0870b7_jump:
		test   $0x000040,%al
		je     _0870e3_jump
		mov    %ebx,%ecx
		mov    (%esp),%ebx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edi
		mov    %eax,%esi
		test   %eax,%eax
		jge    _087172_jump
		xor    %eax,%eax
		mov    %di,%ax

	_0870d9_jump:
		call   _08e412_func
		jmp    _087174_jump

	_0870e3_jump:
		mov    %ebx,0x00000c(%esp)
		xor    %esi,%esi

	_0870e9_jump:
		mov    0x00000c(%esp),%ecx
		mov    (%esp),%ebx
		mov    %ebp,%edx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%ebx
		mov    %eax,%edi
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jge    _08710d_jump
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    _0870d9_jump

	_08710d_jump:
		je     _087172_jump
		xor    %eax,%edi
		mov    %ebp,%eax
		lea    (%ebx,%ebp,1),%ecx
		xor    %edx,%edx
		mov    %ecx,0x000010(%esp)
		jmp    _08714f_jump

	_08711e_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x00001a,%ebx
		jne    _08713f_jump
		mov    0x000004(%esp),%ebp
		mov    %edi,%edx
		mov    $0x000001,%ebx
		sub    %ebp,%edx
		mov    (%esp),%eax
		inc    %edx
		call   _08744e_func
		jmp    _087172_jump

	_08713f_jump:
		cmp    $0x00000d,%ebx
		je     _08714d_jump
		mov    %edx,%ebx
		inc    %esi
		mov    (%eax),%cl
		inc    %edx
		mov    %cl,(%ebx,%ebp,1)

	_08714d_jump:
		inc    %eax
		inc    %edi

	_08714f_jump:
		cmp    0x000010(%esp),%eax
		jb     _08711e_jump
		mov    0x00000c(%esp),%ecx
		mov    0x000009(%esp),%ah
		sub    %edx,%ecx
		add    %edx,%ebp
		mov    %ecx,0x00000c(%esp)
		test   $0x000020,%ah
		jne    _087172_jump
		test   %ecx,%ecx
		jne    _0870e9_jump

	_087172_jump:
		mov    %esi,%eax

	_087174_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08717c_func:
		test   %eax,%eax
		jl     _08718c_jump
		cmp    _0abc94_data,%eax
		jbe    _08d541_func

	_08718c_jump:
		mov    $0x000004,%eax
		call   _08d1fd_func
		mov    $0xffffffff,%eax
		ret    



_08719c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000018,%esp
		push   %eax
		push   %edx
		push   %ebx
		call   _08e483_func
		mov    %eax,-0x000014(%ebp)
		test   %eax,%eax
		jne    _0871c8_jump
		mov    $0x000004,%eax

	_0871b9_jump:
		call   _08d1fd_func
		mov    $0xffffffff,%eax
		jmp    _08736a_jump

	_0871c8_jump:
		test   $0x000002,%al
		jne    _0871d3_jump
		mov    $0x000006,%eax
		jmp    _0871b9_jump

	_0871d3_jump:
		test   $0x000080,%al
		je     _08720a_jump
		mov    $0x000002,%al
		mov    -0x00001c(%ebp),%ebx
		xor    %edx,%edx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		rcl    %dx
		ror    %dx
		shl    $0x000010,%edx
		mov    %ax,%dx
		mov    %edx,-0x00000c(%ebp)
		test   %edx,%edx
		jge    _08720a_jump

	_0871fa_jump:
		xor    %eax,%eax
		mov    -0x00000c(%ebp),%ax
		call   _08e412_func
		jmp    _08736a_jump

	_08720a_jump:
		testb  $0x000040,-0x000014(%ebp)
		je     _087245_jump
		mov    -0x000024(%ebp),%ecx
		mov    -0x000020(%ebp),%edx
		mov    -0x00001c(%ebp),%ebx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x00000c(%ebp)
		test   %eax,%eax
		jl     _0871fa_jump
		cmp    -0x000024(%ebp),%eax
		je     _087367_jump
		mov    $0x00000c,%eax
		call   _08d1fd_func
		mov    %esi,-0x000024(%ebp)
		jmp    _087367_jump

	_087245_jump:
		call   _08e57f_func
		mov    %eax,%edx
		cmp    $0x0000b0,%eax
		jae    _087258_jump
		call   _08e5c1_func

	_087258_jump:
		mov    $0x000200,%edi
		cmp    $0x000230,%edx
		jae    _08726a_jump
		mov    $0x000080,%edi

	_08726a_jump:
		lea    0x000003(%edi),%eax
		xor    %edx,%edx
		and    $0x0000fc,%al
		xor    %esi,%esi
		sub    %eax,%esp
		mov    %esp,%eax
		mov    %edx,-0x000004(%ebp)
		mov    %eax,-0x000010(%ebp)
		mov    -0x000020(%ebp),%eax
		mov    %edx,-0x000018(%ebp)
		mov    %eax,-0x000008(%ebp)

	_087286_jump:
		mov    -0x000004(%ebp),%eax
		cmp    -0x000024(%ebp),%eax
		jae    _087331_jump
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00000a,%eax
		jne    _0872e6_jump
		mov    -0x000010(%ebp),%eax
		movb   $0x00000d,(%esi,%eax,1)
		inc    %esi
		cmp    %edi,%esi
		jne    _0872e6_jump
		mov    -0x00001c(%ebp),%ebx
		mov    %edi,%ecx
		mov    %eax,%edx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x00000c(%ebp)
		test   %eax,%eax
		jl     _0871fa_jump
		cmp    %edi,%eax
		je     _0872de_jump

	_0872ca_jump:
		mov    $0x00000c,%eax
		call   _08d1fd_func
		mov    -0x000018(%ebp),%eax
		add    %esi,%eax
		jmp    _08736a_jump

	_0872de_jump:
		mov    -0x000004(%ebp),%eax
		xor    %edi,%esi
		mov    %eax,-0x000018(%ebp)

	_0872e6_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x000008(%ebp),%edx
		mov    -0x000008(%ebp),%ebx
		mov    -0x000004(%ebp),%ecx
		inc    %ebx
		inc    %ecx
		mov    (%edx),%dl
		mov    %ebx,-0x000008(%ebp)
		mov    %dl,(%esi,%eax,1)
		inc    %esi
		mov    %ecx,-0x000004(%ebp)
		cmp    %edi,%esi
		jne    _087286_jump
		mov    -0x00001c(%ebp),%ebx
		mov    %edi,%ecx
		mov    %eax,%edx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x00000c(%ebp)
		test   %eax,%eax
		jl     _0871fa_jump
		cmp    %edi,%eax
		jne    _0872ca_jump
		mov    -0x000004(%ebp),%eax
		xor    %edi,%esi
		mov    %eax,-0x000018(%ebp)
		jmp    _087286_jump

	_087331_jump:
		test   %esi,%esi
		je     _087367_jump
		mov    -0x000010(%ebp),%edx
		mov    -0x00001c(%ebp),%ebx
		mov    %esi,%ecx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edi
		mov    %eax,-0x00000c(%ebp)
		test   %eax,%eax
		jl     _0871fa_jump
		cmp    %esi,%eax
		je     _087367_jump
		mov    $0x00000c,%eax
		call   _08d1fd_func
		mov    -0x000018(%ebp),%eax
		add    %edi,%eax
		jmp    _08736a_jump

	_087367_jump:
		mov    -0x000024(%ebp),%eax

	_08736a_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

.data

_087371_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_087396_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000001(%esp),%ecx
		mov    %dl,(%esp)

	_0873ac_jump:
		lea    0x000024(%esp),%ebx
		mov    %edi,0x000024(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %edx,(%ebx)
		mov    0x000024(%esp),%edx
		mov    %cs:_087371_data(%edx),%dl
		mov    %dl,(%ecx)
		inc    %ecx
		test   %eax,%eax
		jne    _0873ac_jump

	_0873cc_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _0873cc_jump
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0873e0_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _0873f2_jump
		test   %eax,%eax
		jge    _0873f2_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_0873f2_jump:
		call   _087396_func
		mov    %ecx,%eax
		pop    %ecx
		ret    



_0873fb_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %ebx,%esi

	_087401_jump:
		test   %esi,%esi
		jne    _08740a_jump

	_087405_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		ret    

	_08740a_jump:
		mov    (%ecx),%al
		xor    %ebx,%ebx
		mov    (%edx),%ah
		mov    %al,%bl
		cmp    $0x000041,%ebx
		jl     _08741e_jump
		cmp    $0x00005a,%ebx
		jg     _08741e_jump
		add    $0x000020,%al

	_08741e_jump:
		xor    %ebx,%ebx
		mov    %ah,%bl
		cmp    $0x000041,%ebx
		jl     _08742f_jump
		cmp    $0x00005a,%ebx
		jg     _08742f_jump
		add    $0x000020,%ah

	_08742f_jump:
		cmp    %ah,%al
		je     _087445_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ah,%al
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		ret    

	_087445_jump:
		test   %ah,%ah
		je     _087405_jump
		inc    %ecx
		inc    %edx
		dec    %esi
		jmp    _087401_jump



_08744e_func:
		push   %ecx
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %esp,%edi
		mov    %bl,%al
		mov    %ecx,%ebx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		mov    %ax,%ss:(%edi)
		mov    %dx,%ss:0x000002(%edi)
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _087488_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _08e412_func
		mov    $0xffffffff,%eax
		jmp    _08748b_jump

	_087488_jump:
		mov    (%esp),%eax

	_08748b_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %ecx
		ret    



_087491_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x000041,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _0874ae_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _08e412_func
		pop    %edx
		ret    

	_0874ae_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_0874b2_func:
		push   %edx
		xor    %edx,%edx
		mov    _0abbdc_data,%eax
		mov    %edx,_0abbdc_data
		test   %eax,%eax
		jne    _0874cd_jump
		mov    $0x000001,%ah
		int    $0x000021
		and    $0x0000ff,%eax

	_0874cd_jump:
		pop    %edx
		ret    



_0874cf_func:
		push   %ebx
		push   %ecx
		push   %edx

	_0874d2_jump:
		mov    (%eax),%dl
		inc    %dl
		and    $0x0000ff,%edx
		mov    _0a4f18_data(%edx),%dl
		and    $0x000002,%dl
		and    $0x0000ff,%edx
		je     _0874f0_jump
		inc    %eax
		jmp    _0874d2_jump

	_0874f0_jump:
		mov    (%eax),%cl
		mov    %cl,%dl
		cmp    $0x00002b,%edx
		je     _0874fe_jump
		cmp    $0x00002d,%edx
		jne    _0874ff_jump

	_0874fe_jump:
		inc    %eax

	_0874ff_jump:
		xor    %ebx,%ebx

	_087501_jump:
		mov    (%eax),%dl
		inc    %dl
		and    $0x0000ff,%edx
		mov    _0a4f18_data(%edx),%dl
		and    $0x000020,%dl
		and    $0x0000ff,%edx
		je     _08752b_jump
		imul   $0x00000a,%ebx,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		add    %edx,%ebx
		inc    %eax
		sub    $0x000030,%ebx
		jmp    _087501_jump

	_08752b_jump:
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x00002d,%eax
		jne    _087536_jump
		neg    %ebx

	_087536_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08753c_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		lea    0x000018(%esp),%eax
		mov    %esp,%ebx
		mov    0x000014(%esp),%edx
		mov    %eax,(%esp)
		mov    0x000010(%esp),%eax
		call   _08ca61_func
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    



_08755d_func:
		mov    $_0ab984_data,%eax
		ret    



_087563_func:
		push   %edx
		call   _08755d_func
		test   %eax,%eax
		je     _087585_jump
		imul   $0x41c64e6d,(%eax),%edx
		add    $0x003039,%edx
		mov    %edx,(%eax)
		mov    %edx,%eax
		shr    $0x000010,%eax
		and    $0x007fff,%eax

	_087585_jump:
		pop    %edx
		ret    



_087587_func:
		push   %edx
		mov    %eax,%edx
		call   _08755d_func
		test   %eax,%eax
		je     _087595_jump
		mov    %edx,(%eax)

	_087595_jump:
		pop    %edx
		ret    



_087598_func:
		push   $0x003f00
		push   %ds
		mov    %ecx,%ds
		mov    %edx,%ecx
		mov    %ebx,%edx
		mov    %eax,%ebx
		mov    0x000004(%esp),%eax
		int    $0x000021
		pop    %ds
		push   %ds
		jb     _0875b6_jump
		mov    0x00000c(%esp),%ebx
		mov    %eax,(%ebx)

	_0875b6_jump:
		call   _08e5d0_func
		pop    %ds
		add    $0x000004,%esp
		ret    $0x000004



_087621_func:
		push   %ebp
		mov    %esp,%ebp
		push   %eax
		flds   -0x000004(%ebp)
		push   %edx
		fadds  -0x000008(%ebp)

	_08762c_jump:
		fstps  -0x000004(%ebp)
		add    $0x000004,%esp
		fwait
		pop    %eax
		cmp    $0x80000000,%eax
		jne    _08763d_jump
		xor    %eax,%eax

	_08763d_jump:
		pop    %ebp
		ret    



_08763f_func:
		push   %ecx
		push   %ebx
		sub    %ecx,%ecx
		add    %eax,%eax
		adc    %cl,%cl
		mov    %cl,%ch
		add    %cl,%cl
		add    %cl,%cl
		add    %ch,%cl
		rol    $0x000008,%eax
		add    %edx,%edx
		adc    $0x000000,%cl
		rol    $0x000008,%edx
		mov    %al,%bl
		mov    %dl,%bh
		mov    $0x000000,%al
		stc    
		rcr    %eax
		mov    $0x000000,%dl
		stc    
		rcr    %edx
		mov    %bl,%ch
		sub    %bh,%bl
		je     _087687_jump
		jae    _087678_jump
		mov    %bh,%ch
		neg    %bl
		xchg   %eax,%edx
		xor    $0x000004,%cl

	_087678_jump:
		xchg   %bl,%cl
		cmp    $0x000020,%cl
		jl     _087683_jump
		sub    %edx,%edx
		jmp    _087685_jump

	_087683_jump:
		shr    %cl,%edx

	_087685_jump:
		xchg   %bl,%cl

	_087687_jump:
		shr    %cl
		jb     _08769d_jump
		add    %edx,%eax
		jae    _08769b_jump
		rcr    %eax
		inc    %ch
		jne    _08769b_jump
		ror    %cl
		rcr    %eax
		jmp    _0876da_jump

	_08769b_jump:
		jmp    _0876b0_jump

	_08769d_jump:
		shr    %cl
		sub    %edx,%eax
		jae    _0876a9_jump
		inc    %cl
		neg    %eax
		jmp    _0876b0_jump

	_0876a9_jump:
		or     %eax,%eax
		jne    _0876b0_jump
		pop    %ebx
		pop    %ecx
		ret    

	_0876b0_jump:
		add    $0x000080,%eax
		mov    $0x000000,%al
		jae    _0876bd_jump
		inc    %ch
		jmp    _0876c7_jump

	_0876bd_jump:
		add    %eax,%eax
		jb     _0876c7_jump
		dec    %ch
		jne    _0876bd_jump
		jmp    _0876d3_jump

	_0876c7_jump:
		mov    %ch,%al
		ror    $0x000008,%eax
		ror    %cl
		rcr    %eax
		pop    %ebx
		pop    %ecx
		ret    

	_0876d3_jump:
		pop    %ebx
		pop    %ecx
		jmp    _08cec0_jump

	_0876da_jump:
		pop    %ebx
		pop    %ecx
		jmp    _08cf07_jump



_0876f2_func:
		push   %ebp
		mov    %esp,%ebp
		push   %eax
		flds   -0x000004(%ebp)
		push   %edx
		fmuls  -0x000008(%ebp)
		jmp    _08762c_jump



_087702_func:
		push   %ecx
		add    %eax,%eax
		adc    %ecx,%ecx
		add    %edx,%edx
		adc    $0x000000,%ecx
		ror    %ecx
		rol    $0x000008,%eax
		rol    $0x000008,%edx
		sub    $0x00007f,%al
		sub    $0x00007f,%dl
		add    %al,%dl
		jno    _087721_jump
		js     _087760_jump
		jmp    _08775a_jump

	_087721_jump:
		cmp    $0x000081,%dl
		jle    _08775a_jump
		add    $0x000080,%dl
		mov    %dl,%cl
		mov    $0x000000,%al
		mov    $0x000000,%dl
		stc    
		rcr    %eax
		stc    
		rcr    %edx
		mul    %edx
		or     %edx,%edx
		js     _08773f_jump
		add    %edx,%edx
		dec    %cl

	_08773f_jump:
		sar    $0x000008,%edx
		adc    $0x000000,%edx
		adc    $0x000000,%cl
		je     _087760_jump
		shl    $0x000009,%edx
		mov    %cl,%dl
		ror    $0x000008,%edx
		add    %ecx,%ecx
		rcr    %edx
		mov    %edx,%eax
		pop    %ecx
		ret    

	_08775a_jump:
		pop    %ecx
		jmp    _08cec0_jump

	_087760_jump:
		mov    %ecx,%eax
		pop    %ecx
		jmp    _08cf07_jump



_08776e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %eax
		flds   -0x000004(%ebp)
		push   %edx
		call   _08e254_func
		push   %edx
		jmp    _08762c_jump



_087781_func:
		push   %ebp
		mov    %esp,%ebp
		push   %eax
		flds   -0x000004(%ebp)
		push   %edx
		fdivs  -0x000008(%ebp)
		jmp    _08762c_jump



_087791_func:
		add    %edx,%edx
		jne    _08779a_jump
		jmp    _08cefb_jump

	_08779a_jump:
		push   %ecx
		adc    %ecx,%ecx
		add    %eax,%eax
		jne    _0877a3_jump
		pop    %ecx
		ret    

	_0877a3_jump:
		adc    $0x000000,%ecx
		ror    %ecx
		rol    $0x000008,%eax
		rol    $0x000008,%edx
		sub    $0x00007f,%al
		sub    $0x00007f,%dl
		sub    %dl,%al
		jno    _0877bf_jump
		jns    _087803_jump
		add    %ecx,%ecx
		rcr    %eax
		jmp    _087809_jump

	_0877bf_jump:
		cmp    $0x000081,%al
		jle    _087803_jump
		add    $0x00007f,%al
		mov    %al,%ch
		mov    $0x000000,%al
		mov    $0x000000,%dl
		stc    
		rcr    %edx
		stc    
		rcr    %eax
		push   %ecx
		mov    %edx,%ecx
		mov    %eax,%edx
		sub    %eax,%eax
		shr    %edx
		div    %ecx
		pop    %ecx
		or     %eax,%eax
		js     _0877e5_jump
		add    %eax,%eax
		dec    %ch

	_0877e5_jump:
		sar    $0x000008,%eax
		adc    $0x000000,%eax
		jae    _0877f5_jump
		inc    %ch
		jne    _0877f5_jump
		mov    %ecx,%eax
		jmp    _087809_jump

	_0877f5_jump:
		shl    $0x000009,%eax
		mov    %ch,%al
		ror    $0x000008,%eax
		add    %ecx,%ecx
		rcr    %eax
		pop    %ecx
		ret    

	_087803_jump:
		pop    %ecx
		jmp    _08cec0_jump

	_087809_jump:
		pop    %ecx
		jmp    _08cf07_jump



_08780f_func:
		call   _087830_func
		jmp    *_0ab988_data



_08781a_func:
		call   _087830_func
		jmp    *_0ab98c_data



_087825_func:
		call   _087830_func
		jmp    *_0ab990_data



_087830_func:
		push   %eax
		cmpb   $0x000000,_0abbb5_data
		je     _08786a_jump
		mov    $_087621_func,%eax
		mov    %eax,_0ab988_data
		mov    $_0876f2_func,%eax
		mov    %eax,_0ab98c_data
		testb  $0x000001,_0abc78_data
		je     _08785e_jump
		mov    $_08776e_func,%eax
		jmp    _087863_jump

	_08785e_jump:
		mov    $_087781_func,%eax

	_087863_jump:
		mov    %eax,_0ab990_data
		jmp    _087888_jump

	_08786a_jump:
		mov    $_08763f_func,%eax
		mov    %eax,_0ab988_data
		mov    $_087702_func,%eax
		mov    %eax,_0ab98c_data
		mov    $_087791_func,%eax
		mov    %eax,_0ab990_data

	_087888_jump:
		pop    %eax
		ret    



_08788a_func:
		jmp    _08e615_jump



_08788f_func:
		cmpl   $0x000000,_0abbdc_data
		je     _08789e_jump
		mov    $0x000001,%eax
		ret    

	_08789e_jump:
		mov    $0x00000b,%ah
		int    $0x000021
		movsbl %al,%eax
		ret    



_0878a6_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08791a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08792f_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_087944_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		testb  $0x000002,-0x00000c(%ebp)
		je     _087966_jump
		movb   $0x000001,_0adc98_data
		jmp    _08796d_jump

	_087966_jump:
		movb   $0x000000,_0adc98_data

	_08796d_jump:
		testb  $0x000001,-0x00000c(%ebp)
		jne    _08799f_jump
		movb   $0x000001,_0adc94_data
		call   _08e7d1_func
		mov    %cs,%eax
		mov    $_087fed_func,%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		push   $0x00ffff
		call   _08e70f_func
		add    $0x00000c,%esp
		call   _08e7fd_func
		jmp    _0879a6_jump

	_08799f_jump:
		movb   $0x000000,_0adc94_data

	_0879a6_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		je     _0879b2_jump
		testb  $0x000001,-0x00000c(%ebp)
		je     _0879b4_jump

	_0879b2_jump:
		jmp    _087a06_jump

	_0879b4_jump:
		cmpl   $0x00ff00,-0x000010(%ebp)
		jne    _0879d3_jump
		mov    $0x00ffff,%eax
		call   _087fb8_func
		movl   $0x00ff00,_0ac7db_data
		jmp    _0879ea_jump

	_0879d3_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000010(%ebp)
		call   _087fb8_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0ac7db_data

	_0879ea_jump:
		mov    %cs,_0ac79d_data
		movl   $_0880b7_func,_0ac799_data
		movl   $0x010000,_0ac81b_data
		jmp    _087a10_jump

	_087a06_jump:
		movl   $0x00ffff,_0ac73b_data

	_087a10_jump:
		movl   $0x000000,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_087a20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		cmpb   $0x000000,_0adc94_data
		je     _087a49_jump
		call   _08e7d1_func
		call   _08e829_func
		call   _08e7fd_func

	_087a49_jump:
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_087a5a_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000020,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_087a7e_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _087a8b_jump
		jmp    _087aa4_jump

	_087a86_jump:
		incl   -0x000004(%ebp)
		jmp    _087a7e_jump

	_087a8b_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0ac73f_data(%eax)
		jne    _087aa2_jump
		cmpw   $0x000000,_0ac743_data(%eax)
		je     _087aa4_jump

	_087aa2_jump:
		jmp    _087a86_jump

	_087aa4_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _087ab6_jump
		movl   $0x00000b,-0x000014(%ebp)
		jmp    _087c5d_jump

	_087ab6_jump:
		cmpb   $0x000000,_0adc94_data
		je     _087ac4_jump
		call   _08e7d1_func

	_087ac4_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		imul   $0x000006,-0x000004(%ebp),%edx
		mov    -0x00001c(%ebp),%eax
		mov    %ax,_0ac743_data(%edx)
		mov    -0x000020(%ebp),%eax
		mov    %eax,_0ac73f_data(%edx)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0ac79f_data(%edx)
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		cmp    _0ac73b_data,%eax
		jae    _087b2f_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		call   _087fb8_func
		mov    _0ac73b_data,%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,-0x00000c(%ebp)

	_087b2f_jump:
		movl   $0x000000,-0x000004(%ebp)

	_087b36_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _087b46_jump
		jmp    _087c3e_jump

	_087b41_jump:
		incl   -0x000004(%ebp)
		jmp    _087b36_jump

	_087b46_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0ac73f_data(%eax)
		jne    _087b61_jump
		cmpw   $0x000000,_0ac743_data(%eax)
		je     _087c39_jump

	_087b61_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0ac79f_data(%eax)
		jne    _087bb9_jump
		cmpl   $0x00ffff,_0ac73b_data
		jne    _087b91_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0ac7df_data(%eax)
		jmp    _087bb7_jump

	_087b91_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0ac73b_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0ac7df_data(%eax)

	_087bb7_jump:
		jmp    _087beb_jump

	_087bb9_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0ac79f_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0ac73b_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0ac7df_data(%eax)

	_087beb_jump:
		cmpl   $0x000000,-0x00000c(%ebp)
		je     _087c39_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		and    $0x00ffff,%edx
		mov    _0ac81f_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		mov    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		shr    $0x000010,%edx
		mov    _0ac81f_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		add    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0ac81f_data(%edx)

	_087c39_jump:
		jmp    _087b41_jump

	_087c3e_jump:
		cmpb   $0x000000,_0adc94_data
		je     _087c4c_jump
		call   _08e7fd_func

	_087c4c_jump:
		mov    -0x000008(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000014(%ebp)

	_087c5d_jump:
		mov    -0x000014(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000008



_087ddf_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0ac743_data(%eax)
		movl   $0x000000,_0ac73f_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_087e15_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _087e22_jump
		jmp    _087e6f_jump

	_087e1d_jump:
		incl   -0x000004(%ebp)
		jmp    _087e15_jump

	_087e22_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0ac73f_data(%eax)
		jne    _087e39_jump
		cmpw   $0x000000,_0ac743_data(%eax)
		je     _087e6d_jump

	_087e39_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0ac79f_data(%eax),%eax
		cmp    -0x000008(%ebp),%eax
		jbe    _087e5c_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0ac79f_data(%eax)
		jne    _087e5e_jump

	_087e5c_jump:
		jmp    _087e6d_jump

	_087e5e_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0ac79f_data(%eax),%eax
		mov    %eax,-0x000008(%ebp)

	_087e6d_jump:
		jmp    _087e1d_jump

	_087e6f_jump:
		cmpl   $0x000000,-0x000008(%ebp)
		je     _087e86_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000008(%ebp)
		call   _087fb8_func
		jmp    _087e90_jump

	_087e86_jump:
		mov    $0x00ffff,%eax
		call   _087fb8_func

	_087e90_jump:
		cmpb   $0x000000,_0adc94_data
		je     _087e9e_jump
		call   _08e7d1_func

	_087e9e_jump:
		movl   $0x000000,-0x000004(%ebp)

	_087ea5_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _087eb5_jump
		jmp    _087f6f_jump

	_087eb0_jump:
		incl   -0x000004(%ebp)
		jmp    _087ea5_jump

	_087eb5_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0ac73f_data(%eax)
		jne    _087ed0_jump
		cmpw   $0x000000,_0ac743_data(%eax)
		je     _087f6a_jump

	_087ed0_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0ac79f_data(%eax)
		jne    _087f28_jump
		cmpl   $0x00ffff,_0ac73b_data
		jne    _087f00_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0ac7df_data(%eax)
		jmp    _087f26_jump

	_087f00_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0ac73b_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0ac7df_data(%eax)

	_087f26_jump:
		jmp    _087f5a_jump

	_087f28_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0ac79f_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0ac73b_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0ac7df_data(%eax)

	_087f5a_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0ac81f_data(%eax)

	_087f6a_jump:
		jmp    _087eb0_jump

	_087f6f_jump:
		cmpb   $0x000000,_0adc94_data
		je     _087f7d_jump
		call   _08e7fd_func

	_087f7d_jump:
		movl   $0x000000,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_087fb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %eax,_0ac73b_data
		pushl  -0x000008(%ebp)
		call   _08e6c9_func
		add    $0x000004,%esp
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_087fed_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		incl   _0aca6e_data
		movl   $0x000000,_0acc58_data

	_08800b_jump:
		cmpl   $0x000010,_0acc58_data
		jb     _088021_jump
		jmp    _0880aa_jump

	_088019_jump:
		incl   _0acc58_data
		jmp    _08800b_jump

	_088021_jump:
		imul   $0x000006,_0acc58_data,%eax
		cmpl   $0x000000,_0ac73f_data(%eax)
		jne    _08803b_jump
		cmpw   $0x000000,_0ac743_data(%eax)
		je     _0880a5_jump

	_08803b_jump:
		mov    _0acc58_data,%eax
		shl    $0x000002,%eax
		mov    _0acc58_data,%edx
		shl    $0x000002,%edx
		mov    _0ac7df_data(%edx),%edx
		add    %edx,_0ac81f_data(%eax)
		mov    _0acc58_data,%eax
		shl    $0x000002,%eax
		testb  $0x000001,_0ac821_data(%eax)
		je     _0880a5_jump
		mov    _0acc58_data,%eax
		shl    $0x000002,%eax
		movw   $0x000000,_0ac821_data(%eax)
		mov    _0acc58_data,%eax
		cmpb   $0x0000ff,_0ac85f_data(%eax)
		je     _088098_jump
		mov    _0acc58_data,%eax
		mov    _0ac85f_data(%eax),%al
		mov    %al,_0ac86f_data

	_088098_jump:
		imul   $0x000006,_0acc58_data,%eax
		lcall  *_0ac73f_data(%eax)

	_0880a5_jump:
		jmp    _088019_jump

	_0880aa_jump:
		decl   _0aca6e_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_0880b7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		call   _08e8a5_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_0880d1_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0880e6_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0880fb_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %dx,-0x000010(%ebp)
		mov    %eax,-0x000014(%ebp)
		cmpl   $0x000000,_0acace_data
		je     _088124_jump
		movl   $0x000003,-0x00000c(%ebp)
		jmp    _08823c_jump

	_088124_jump:
		movl   $0x00002c,-0x000008(%ebp)
		cmpl   $0x000000,-0x000014(%ebp)
		jne    _088138_jump
		cmpw   $0x000000,-0x000010(%ebp)
		je     _088156_jump

	_088138_jump:
		mov    -0x000014(%ebp),%edx
		mov    $_0ac96f_data,%eax
		call   _08e8ff_func
		mov    $_0a4a60_data,%edx
		mov    $_0ac96f_data,%eax
		call   _08e91e_func
		jmp    _088165_jump

	_088156_jump:
		mov    $_0a4a60_data,%edx
		mov    $_0ac96f_data,%eax
		call   _08e8ff_func

	_088165_jump:
		push   $0x000200
		mov    $_0ac96f_data,%eax
		push   %eax
		call   _086d88_func
		add    $0x000008,%esp
		mov    %eax,_0acade_data
		cmpl   $0xffffffff,_0acade_data
		jne    _088192_jump
		movl   $0x00000f,-0x00000c(%ebp)
		jmp    _08823c_jump

	_088192_jump:
		mov    -0x000008(%ebp),%ebx
		mov    $_0aca72_data,%edx
		mov    _0acade_data,%eax
		call   _087081_func
		mov    _0aca9a_data,%eax
		mov    %eax,-0x000004(%ebp)
		mov    $_0acaee_data,%eax
		push   %eax
		mov    $_0acaea_data,%eax
		push   %eax
		push   $0x001000
		call   _08e9cf_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,_0acad6_data
		mov    %ecx,_0acad2_data
		movzwl _0acad6_data,%eax
		push   %eax
		pushl  _0acad2_data
		call   _08ea93_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,_0acadc_data
		mov    %ecx,_0acad8_data
		push   $0x001000
		pushl  _0acaee_data
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08821d_jump
		movl   $0x000005,-0x00000c(%ebp)
		jmp    _08823c_jump

	_08821d_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0acade_data,%eax
		call   _08744e_func
		movl   $0x000001,_0acace_data
		movl   $0x000000,-0x00000c(%ebp)

	_08823c_jump:
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_088245_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		movl   $0x000000,_0acace_data
		mov    _0acade_data,%eax
		call   _08717c_func
		push   $0x001000
		pushl  _0acaee_data
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088287_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0882c6_jump

	_088287_jump:
		pushl  _0acaea_data
		movzwl _0acad6_data,%eax
		push   %eax
		pushl  _0acad2_data
		call   _08ea5d_func
		add    $0x00000c,%esp
		pushl  _0acaea_data
		movzwl _0acadc_data,%eax
		push   %eax
		pushl  _0acad8_data
		call   _08ea5d_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_0882c6_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0886e9_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000038,%esp
		mov    %dx,-0x000034(%ebp)
		mov    %eax,-0x000038(%ebp)
		mov    %cx,-0x00002c(%ebp)
		mov    %ebx,-0x000030(%ebp)
		movl   $0xffffffff,-0x000008(%ebp)
		movl   $0x000030,-0x000014(%ebp)
		movl   $0x000000,-0x000020(%ebp)
		movl   $0x000000,-0x000024(%ebp)
		cmpl   $0x000000,-0x000038(%ebp)
		jne    _088737_jump
		cmpw   $0x000000,-0x000034(%ebp)
		jne    _088737_jump
		movl   $0x000002,-0x000028(%ebp)
		jmp    _088934_jump

	_088737_jump:
		movl   $0x000000,-0x00000c(%ebp)
		movl   $0x000000,-0x000010(%ebp)
		movl   $0x000000,_0acae6_data
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0acade_data,%eax
		call   _08744e_func
		mov    $0x00002c,%ebx
		mov    $_0aca72_data,%edx
		mov    _0acade_data,%eax
		call   _087081_func

	_088771_jump:
		mov    _0acae6_data,%eax
		cmp    _0aca92_data,%eax
		ja     _088784_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		je     _088789_jump

	_088784_jump:
		jmp    _08892d_jump

	_088789_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    _0acade_data,%eax
		call   _08744e_func
		mov    %eax,-0x000018(%ebp)
		mov    -0x000014(%ebp),%ebx
		mov    $_0aca9e_data,%edx
		mov    _0acade_data,%eax
		call   _087081_func
		mov    _0acac2_data,%eax
		mov    %eax,-0x000004(%ebp)
		mov    _0acac6_data,%eax
		mov    %eax,-0x000008(%ebp)
		testb  $0x000080,_0acacb_data
		je     _088910_jump
		lea    -0x00001c(%ebp),%eax
		push   %eax
		mov    -0x000004(%ebp),%edx
		mov    _0acad6_data,%bx
		mov    _0acad2_data,%eax
		mov    _0acade_data,%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _087598_func
		mov    %ds,%eax
		mov    $_0acaf8_data,%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		movzwl _0acad6_data,%eax
		push   %eax
		pushl  _0acad2_data
		movzwl _0acadc_data,%eax
		push   %eax
		pushl  _0acad8_data
		call   _08ec8e_func
		add    $0x000018,%esp
		testb  $0x000001,_0acb35_data
		je     _088889_jump
		movzwl _0acad6_data,%eax
		push   %eax
		pushl  _0acad2_data
		movzwl _0acadc_data,%eax
		push   %eax
		pushl  _0acad8_data
		call   _08eec1_func
		add    $0x000010,%esp
		movl   $0x000000,-0x000020(%ebp)

	_088854_jump:
		pushl  -0x000020(%ebp)
		call   _08ef00_func
		add    $0x000004,%esp
		test   %eax,%eax
		je     _088889_jump
		pushl  -0x000020(%ebp)
		call   _08ef00_func
		add    $0x000004,%esp
		call   _08f1d8_func
		mov    %eax,-0x000024(%ebp)
		pushl  -0x000024(%ebp)
		pushl  -0x000020(%ebp)
		call   _08ef4a_func
		add    $0x000008,%esp
		incl   -0x000020(%ebp)
		jmp    _088854_jump

	_088889_jump:
		movzwl _0acad6_data,%eax
		push   %eax
		pushl  _0acad2_data
		movzwl _0acadc_data,%eax
		push   %eax
		pushl  _0acad8_data
		call   _08ec27_func
		add    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		cmpl   $0x000000,-0x000010(%ebp)
		je     _08890e_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0acae2_data
		movzwl -0x000034(%ebp),%eax
		push   %eax
		pushl  -0x000038(%ebp)
		movzwl _0acad6_data,%eax
		push   %eax
		pushl  _0acad2_data
		movzwl _0acadc_data,%eax
		push   %eax
		pushl  _0acad8_data
		call   _08ec8e_func
		add    $0x000018,%esp
		mov    -0x000034(%ebp),%eax
		mov    %ax,_0acaf6_data
		mov    -0x000038(%ebp),%eax
		mov    %eax,_0acaf2_data
		mov    -0x000010(%ebp),%eax
		lgs    -0x000030(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000028(%ebp)
		jmp    _088934_jump

	_08890e_jump:
		jmp    _088922_jump

	_088910_jump:
		mov    $0x000001,%ebx
		mov    -0x000004(%ebp),%edx
		mov    _0acade_data,%eax
		call   _08744e_func

	_088922_jump:
		incl   _0acae6_data
		jmp    _088771_jump

	_08892d_jump:
		movl   $0x000007,-0x000028(%ebp)

	_088934_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		ret    



_088b61_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00002c,%esp
		mov    %dx,-0x000028(%ebp)
		mov    %eax,-0x00002c(%ebp)
		movl   $0x000030,-0x000018(%ebp)
		cmpl   $0x000000,-0x00002c(%ebp)
		jne    _088b95_jump
		cmpw   $0x000000,-0x000028(%ebp)
		jne    _088b95_jump
		movl   $0x000002,-0x000024(%ebp)
		jmp    _088ce0_jump

	_088b95_jump:
		xor    %ebx,%ebx
		mov    _0acae2_data,%edx
		mov    _0acade_data,%eax
		call   _08744e_func
		movl   $0x000000,-0x00001c(%ebp)

	_088bae_jump:
		lgs    _0acaf2_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		cmpw   $0x00ffff,%gs:(%eax)
		je     _088bfb_jump
		lgs    _0acaf2_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		movswl %gs:(%eax),%eax
		push   %eax
		call   _08ee57_func
		add    $0x000004,%esp
		incl   -0x00001c(%ebp)
		jmp    _088bae_jump

	_088bfb_jump:
		movzwl _0acad6_data,%eax
		push   %eax
		pushl  _0acad2_data
		movzwl _0acadc_data,%eax
		push   %eax
		pushl  _0acad8_data
		call   _08ec4a_func
		add    $0x000010,%esp
		movl   $0x000000,-0x00001c(%ebp)

	_088c26_jump:
		lgs    _0acaf2_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		cmpw   $0x00ffff,%gs:(%eax)
		je     _088c73_jump
		lgs    _0acaf2_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		movswl %gs:(%eax),%eax
		push   %eax
		call   _08ee8c_func
		add    $0x000004,%esp
		incl   -0x00001c(%ebp)
		jmp    _088c26_jump

	_088c73_jump:
		mov    _0add90_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:(%eax)
		mov    _0add94_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x000008(%eax)
		mov    _0add98_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x000004(%eax)
		mov    _0add9c_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x00000c(%eax)
		testb  $0x000001,_0acb34_data
		jne    _088cd9_jump
		cmpl   $0x000001,_0add98_data
		jbe    _088cc5_jump
		cmpl   $0x000010,_0add98_data
		jb     _088cc7_jump

	_088cc5_jump:
		jmp    _088cd0_jump

	_088cc7_jump:
		movl   $0x000000,-0x000024(%ebp)
		jmp    _088ce0_jump

	_088cd0_jump:
		movl   $0x000011,-0x000024(%ebp)
		jmp    _088ce0_jump

	_088cd9_jump:
		movl   $0x000000,-0x000024(%ebp)

	_088ce0_jump:
		mov    -0x000024(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_088dba_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_088dcf_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_088de4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_08f239_func,%edx
		mov    $_08f278_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08f239_func,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088e1d_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_088e1d_jump:
		mov    $_08f28d_func,%edx
		mov    $_08f333_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08f28d_func,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088e48_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_088e48_jump:
		mov    $_08b2bc_func,%edx
		mov    $_08b3a7_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08b2bc_func,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088e73_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_088e73_jump:
		mov    $_088dcf_func,%edx
		mov    $_08a179_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_088dcf_func,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088e9e_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_088e9e_jump:
		mov    $_08f348_func,%edx
		mov    $_08f8f4_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08f348_func,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088ec9_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_088ec9_jump:
		mov    $_0878a6_func,%edx
		mov    $_08791a_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0878a6_func,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088ef4_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_088ef4_jump:
		mov    $_08f909_func,%edx
		mov    $_08f980_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08f909_func,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088f1f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_088f1f_jump:
		mov    $_08a1d0_func,%edx
		mov    $_08ac23_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08a1d0_func,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088f4a_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_088f4a_jump:
		mov    $_08792f_func,%edx
		mov    $_0880d1_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08792f_func,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088f75_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_088f75_jump:
		mov    $_08ac38_func,%edx
		mov    $_08b2a7_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08ac38_func,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088fa0_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_088fa0_jump:
		mov    $_0880e6_func,%edx
		mov    $_088dba_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0880e6_func,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088fcb_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_088fcb_jump:
		mov    $_08e64c_jump,%edx
		mov    $_08e8fe_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08e64c_jump,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088ff6_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_088ff6_jump:
		mov    $_08e954_jump,%edx
		mov    $_08f1d7_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08e954_jump,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _089021_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_089021_jump:
		mov    $_0abd44_data,%edx
		mov    $_0acc5c_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0abd44_data,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _089049_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_089049_jump:
		mov    $_0acc60_data,%edx
		mov    $_0adc9c_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0acc60_data,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _089071_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_089071_jump:
		mov    $_0adca0_data,%edx
		mov    $_0adda0_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0adca0_data,%eax
		push   %eax
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _089099_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0890a0_jump

	_089099_jump:
		movl   $0x000000,-0x000004(%ebp)

	_0890a0_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0890aa_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_08f239_func,%edx
		mov    $_08f278_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08f239_func,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0890e3_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_0890e3_jump:
		mov    $_08f28d_func,%edx
		mov    $_08f333_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08f28d_func,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08910e_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_08910e_jump:
		mov    $_08b2bc_func,%edx
		mov    $_08b3a7_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08b2bc_func,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _089139_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_089139_jump:
		mov    $_088dcf_func,%edx
		mov    $_08a179_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_088dcf_func,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _089164_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_089164_jump:
		mov    $_08f348_func,%edx
		mov    $_08f8f4_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08f348_func,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08918f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_08918f_jump:
		mov    $_0878a6_func,%edx
		mov    $_08791a_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0878a6_func,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0891ba_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_0891ba_jump:
		mov    $_08f909_func,%edx
		mov    $_08f980_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08f909_func,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0891e5_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_0891e5_jump:
		mov    $_08a1d0_func,%edx
		mov    $_08ac23_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08a1d0_func,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _089210_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_089210_jump:
		mov    $_08792f_func,%edx
		mov    $_0880d1_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08792f_func,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08923b_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_08923b_jump:
		mov    $_08ac38_func,%edx
		mov    $_08b2a7_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08ac38_func,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _089266_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_089266_jump:
		mov    $_0880e6_func,%edx
		mov    $_088dba_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0880e6_func,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _089291_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_089291_jump:
		mov    $_08e64c_jump,%edx
		mov    $_08e8fe_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08e64c_jump,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0892bc_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_0892bc_jump:
		mov    $_08e954_jump,%edx
		mov    $_08f1d7_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08e954_jump,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0892e7_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_0892e7_jump:
		mov    $_0abd44_data,%edx
		mov    $_0acc5c_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0abd44_data,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08930f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_08930f_jump:
		mov    $_0acc60_data,%edx
		mov    $_0adc9c_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0acc60_data,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _089337_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_089337_jump:
		mov    $_0adca0_data,%edx
		mov    $_0adda0_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0adca0_data,%eax
		push   %eax
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08935f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089366_jump

	_08935f_jump:
		movl   $0x000000,-0x000004(%ebp)

	_089366_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_089370_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %dx,-0x000010(%ebp)
		mov    %eax,-0x000014(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		call   _088de4_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _08939c_jump
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _0893e1_jump

	_08939c_jump:
		movl   $0x000001,_0acbc8_data
		cmpl   $0x000000,-0x000014(%ebp)
		jne    _0893b3_jump
		cmpw   $0x000000,-0x000010(%ebp)
		je     _0893d3_jump

	_0893b3_jump:
		mov    -0x000010(%ebp),%ebx
		mov    -0x000014(%ebp),%eax
		mov    %ds,%edi
		mov    $_0ac870_data,%edx
		mov    %edi,%esi
		mov    %edx,%edi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _08f995_func
		jmp    _0893da_jump

	_0893d3_jump:
		movb   $0x000000,_0ac870_data

	_0893da_jump:
		movl   $0x000000,-0x000008(%ebp)

	_0893e1_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0893e9_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		call   _0890aa_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _08940e_jump
		movl   $0x000000,-0x000008(%ebp)
		jmp    _08941f_jump

	_08940e_jump:
		movl   $0x000000,_0acbc8_data
		movl   $0x000000,-0x000008(%ebp)

	_08941f_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_089429_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000084,%esp
		mov    %eax,-0x000034(%ebp)
		mov    %cx,-0x000078(%ebp)
		mov    %ebx,-0x00007c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000004(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000008(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000008(%eax),%ax
		mov    %ax,-0x000048(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00004c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000010(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000014(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000014(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000018(%eax),%eax
		mov    %eax,-0x00001c(%ebp)
		movl   $0x000006,-0x00002c(%ebp)
		movl   $0x000000,-0x000028(%ebp)

	_0894a6_jump:
		cmpl   $0x000005,-0x000028(%ebp)
		jb     _0894b3_jump
		jmp    _0894cc_jump

	_0894ae_jump:
		incl   -0x000028(%ebp)
		jmp    _0894a6_jump

	_0894b3_jump:
		mov    -0x000028(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0ac2f6_data(%eax)
		jne    _0894ca_jump
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x00002c(%ebp)
		jmp    _0894cc_jump

	_0894ca_jump:
		jmp    _0894ae_jump

	_0894cc_jump:
		cmpl   $0x000006,-0x00002c(%ebp)
		jne    _0894de_jump
		movl   $0x00000b,-0x000024(%ebp)
		jmp    _089cdf_jump

	_0894de_jump:
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0ac2f6_data(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000024(%eax)
		jne    _089504_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000028(%eax)
		je     _089567_jump

	_089504_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000028(%eax),%ax
		mov    %ax,-0x000058(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000024(%eax),%eax
		mov    %eax,-0x00005c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000030(%eax),%ax
		mov    %ax,-0x000060(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00002c(%eax),%eax
		mov    %eax,-0x000064(%ebp)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0abd74_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0abd70_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0abd92_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0abd8e_data(%edx)
		jmp    _089625_jump

	_089567_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0abd48_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0abdac_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0abe10_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00005c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000064(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    -0x00002c(%ebp),%edx
		mov    -0x000034(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _08f35d_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _0895c9_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _089cdf_jump

	_0895c9_jump:
		mov    -0x000058(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000028(%edx)
		mov    -0x00005c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000024(%edx)
		mov    -0x000060(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000030(%edx)
		mov    -0x000064(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00002c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0abd74_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0abd70_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0abd92_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0abd8e_data(%edx)

	_089625_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		mov    $_0ac30e_data,%edx
		add    %edx,%eax
		mov    %ds,%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _08f2a2_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _089654_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _089cdf_jump

	_089654_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0ac2f6_data(%eax)
		jae    _089a63_jump
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000004(%ebp),%eax
		mov    %eax,_0abe88_data(%edx)
		cmpl   $0x000000,-0x000010(%ebp)
		je     _08979e_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0acbb4_data(%eax)
		movw   $0x000000,-0x000080(%ebp)
		movl   $0x000000,-0x000084(%ebp)
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    $_0abece_data,%eax
		add    %eax,%ebx
		lea    -0x00003c(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _089f01_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		mov    %bx,-0x000048(%ebp)
		mov    %ecx,-0x00004c(%ebp)
		mov    -0x00004c(%ebp),%eax
		cmp    -0x000084(%ebp),%eax
		jne    _0896fe_jump
		mov    -0x000048(%ebp),%eax
		cmp    -0x000080(%ebp),%ax
		jne    _0896fe_jump
		mov    -0x00002c(%ebp),%eax
		call   _08f580_func
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0ac2f6_data(%eax)
		movl   $0x000005,-0x000024(%ebp)
		jmp    _089cdf_jump

	_0896fe_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0abea0_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0abe9c_data(%edx)
		imul   $0x00006c,-0x00002c(%ebp),%eax
		cmpl   $0x000008,_0ac332_data(%eax)
		jne    _089779_jump
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000080,_0ac34b_data(%eax)
		je     _089754_jump
		movl   $0x000000,-0x000044(%ebp)

	_089736_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _089745_jump
		jmp    _089752_jump

	_089740_jump:
		incl   -0x000044(%ebp)
		jmp    _089736_jump

	_089745_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _089740_jump

	_089752_jump:
		jmp    _089777_jump

	_089754_jump:
		movl   $0x000000,-0x000044(%ebp)

	_08975b_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _08976a_jump
		jmp    _089777_jump

	_089765_jump:
		incl   -0x000044(%ebp)
		jmp    _08975b_jump

	_08976a_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000080,%gs:(%eax)
		jmp    _089765_jump

	_089777_jump:
		jmp    _08979c_jump

	_089779_jump:
		movl   $0x000000,-0x000044(%ebp)

	_089780_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _08978f_jump
		jmp    _08979c_jump

	_08978a_jump:
		incl   -0x000044(%ebp)
		jmp    _089780_jump

	_08978f_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _08978a_jump

	_08979c_jump:
		jmp    _0897c0_jump

	_08979e_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0abea0_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0abe9c_data(%edx)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000048(%eax),%eax
		mov    %eax,-0x00003c(%ebp)

	_0897c0_jump:
		mov    -0x000048(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000008(%edx)
		mov    -0x00004c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000048(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000034(%eax)
		jne    _0898da_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000038(%eax)
		jne    _0898da_jump
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000044(%eax)
		je     _089872_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0abd5c_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0abdc0_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0abe24_data,%edx
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _08f658_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _089870_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _089cdf_jump

	_089870_jump:
		jmp    _0898d8_jump

	_089872_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0abd5c_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0abdc0_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0abe24_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		imul   $0x00006c,-0x00002c(%ebp),%edx
		mov    _0ac376_data(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _08f658_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _0898d8_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _089cdf_jump

	_0898d8_jump:
		jmp    _08990a_jump

	_0898da_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000038(%eax),%ax
		mov    %ax,-0x000068(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    %eax,-0x00006c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    %ax,-0x000070(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00003c(%eax),%eax
		mov    %eax,-0x000074(%ebp)

	_08990a_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000002,_0ac34b_data(%eax)
		je     _08993f_jump
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _08ef80_func
		add    $0x000020,%esp

	_08993f_jump:
		mov    -0x000068(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000038(%edx)
		mov    -0x00006c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000034(%edx)
		mov    -0x000070(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000040(%edx)
		mov    -0x000074(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00003c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000068(%ebp),%eax
		mov    %ax,_0abdd8_data(%edx)
		mov    -0x00006c(%ebp),%eax
		mov    %eax,_0abdd4_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000070(%ebp),%eax
		mov    %ax,_0abdf6_data(%edx)
		mov    -0x000074(%ebp),%eax
		mov    %eax,_0abdf2_data(%edx)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0abe4c_data(%eax)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    -0x000038(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0ac596_data(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    $_0acbdc_data,%eax
		push   %eax
		pushl  -0x00002c(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x000004(%ebp)
		movzwl -0x000048(%ebp),%eax
		push   %eax
		pushl  -0x00004c(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _08ed2f_func
		add    $0x000028,%esp
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0acbe0_data,%dx
		mov    _0acbdc_data,%ebx
		mov    %dx,_0abefa_data(%eax)
		mov    %ebx,_0abef6_data(%eax)
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0acbe8_data,%dx
		mov    _0acbe4_data,%ebx
		mov    %dx,_0ac2d8_data(%eax)
		mov    %ebx,_0ac2d4_data(%eax)
		mov    _0acbf0_data,%ax
		mov    %ax,-0x000050(%ebp)
		mov    _0acbec_data,%eax
		mov    %eax,-0x000054(%ebp)
		movzwl -0x000050(%ebp),%eax
		push   %eax
		pushl  -0x000054(%ebp)
		imul   $0x0000c0,-0x00002c(%ebp),%eax
		mov    $_0abf14_data,%edx
		add    %edx,%eax
		push   %eax
		call   _08eaf0_func
		add    $0x00000c,%esp
		jmp    _089a7a_jump

	_089a63_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		movw   $0x000000,_0abefa_data(%eax)
		movl   $0x000000,_0abef6_data(%eax)

	_089a7a_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0abefa_data(%eax),%dx
		mov    _0abef6_data(%eax),%ebx
		lgs    0x000014(%ebp),%eax
		mov    %dx,%gs:0x000020(%eax)
		lgs    0x000014(%ebp),%eax
		mov    %ebx,%gs:0x00001c(%eax)
		lgs    -0x00007c(%ebp),%eax
		pushl  %gs:0x000008(%eax)
		call   _08ee57_func
		add    $0x000004,%esp
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    -0x00003c(%ebp),%eax
		mov    %eax,_0abeba_data(%ebx)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000040(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000020(%ebp)
		mov    -0x000038(%ebp),%al
		mov    -0x00002c(%ebp),%edx
		mov    %al,_0ac5b6_data(%edx)
		pushl  -0x000020(%ebp)
		pushl  -0x00001c(%ebp)
		pushl  -0x000018(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x00000c(%ebp)
		pushl  -0x000040(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _08ed82_func
		add    $0x000028,%esp
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _08ee06_func
		add    $0x000010,%esp
		pushl  -0x000014(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _08ede0_func
		add    $0x000014,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0abeba_data(%eax),%eax
		mov    %eax,-0x00003c(%ebp)
		pushl  -0x000004(%ebp)
		pushl  -0x00003c(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _08edb7_func
		add    $0x000018,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0abe38_data(%eax)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0abe60_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:(%ebx),%ebx
		mov    %ebx,_0ac5bb_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000008(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%ebx
		mov    %dx,_0ac5c3_data(%eax)
		mov    %ebx,_0ac5bf_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00000c(%ebx),%ebx
		mov    %ebx,_0ac5c7_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000010(%ebx),%ebx
		mov    %ebx,_0ac5cb_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0ac5cf_data(%ebx)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000018(%ebx),%ebx
		mov    %ebx,_0ac5d3_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000020(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00001c(%ebx),%ebx
		mov    %dx,_0ac5db_data(%eax)
		mov    %ebx,_0ac5d7_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000028(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000024(%ebx),%ebx
		mov    %dx,_0ac5e3_data(%eax)
		mov    %ebx,_0ac5df_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000038(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000034(%ebx),%ebx
		mov    %dx,_0ac5f3_data(%eax)
		mov    %ebx,_0ac5ef_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000030(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		mov    %dx,_0ac5eb_data(%eax)
		mov    %ebx,_0ac5e7_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000040(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00003c(%ebx),%ebx
		mov    %dx,_0ac5fb_data(%eax)
		mov    %ebx,_0ac5f7_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %edx,_0ac5ff_data(%eax)
		mov    -0x00002c(%ebp),%eax
		lgs    0x00001c(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000024(%ebp)

	_089cdf_jump:
		mov    -0x000024(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000010



_089ce9_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000028,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0abe38_data(%eax)
		jne    _089d19_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _089ef9_jump

	_089d19_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0abe60_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0abee2_data(%eax)
		jae    _089dd6_jump
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0acbb4_data(%eax)
		je     _089d54_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jne    _089d59_jump

	_089d54_jump:
		jmp    _089dd6_jump

	_089d59_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0abea0_data(%edx),%ax
		mov    %ax,-0x00001c(%ebp)
		mov    _0abe9c_data(%edx),%eax
		mov    %eax,-0x000020(%ebp)
		call   _08efe0_func
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _089db0_jump
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0abeba_data(%ebx),%ecx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0abece_data(%ebx),%esi
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%eax
		mov    %ecx,%ebx
		mov    %esi,%edx
		call   _08a0fd_func
		jmp    _089dc6_jump

	_089db0_jump:
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%ebx
		push   %ebx
		call   _08eb56_func
		add    $0x000004,%esp

	_089dc6_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0acbb4_data(%eax)

	_089dd6_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0abd74_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0abd70_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0abd92_data(%edx),%ax
		mov    %ax,-0x000014(%ebp)
		mov    _0abd8e_data(%edx),%eax
		mov    %eax,-0x000018(%ebp)
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _08ec04_func
		add    $0x000010,%esp
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _08ed0c_func
		add    $0x000010,%esp
		mov    -0x000010(%ebp),%eax
		movzbl _0ac5b6_data(%eax),%eax
		push   %eax
		call   _08ee8c_func
		add    $0x000004,%esp
		cmpl   $0x000000,-0x000008(%ebp)
		je     _089e5f_jump
		mov    -0x000010(%ebp),%eax
		call   _08f580_func
		mov    -0x000010(%ebp),%eax
		call   _08f832_func

	_089e5f_jump:
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0abd74_data(%eax)
		movl   $0x000000,_0abd70_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0abd92_data(%eax)
		movl   $0x000000,_0abd8e_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0abefa_data(%eax)
		movl   $0x000000,_0abef6_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0abdd8_data(%eax)
		movl   $0x000000,_0abdd4_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0abdf6_data(%eax)
		movl   $0x000000,_0abdf2_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0ac2f6_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0abe38_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_089ef9_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_089f01_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		call   _08efe0_func
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _089f6f_jump
		lea    -0x000014(%ebp),%ebx
		lea    -0x000010(%ebp),%edx
		lea    -0x000028(%ebp),%eax
		call   _089fe1_func
		test   %eax,%eax
		je     _089f50_jump
		movw   $0x000000,-0x00002c(%ebp)
		movl   $0x000000,-0x000030(%ebp)
		jmp    _089fd6_jump

	_089f50_jump:
		mov    -0x000014(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000010(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x000030(%ebp)
		jmp    _089fd6_jump

	_089f6f_jump:
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _08eb20_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)

	_089f91_jump:
		mov    -0x000004(%ebp),%edx
		and    $0x00ffff,%edx
		mov    $0x00ffff,%eax
		sub    -0x00001c(%ebp),%eax
		cmp    %eax,%edx
		jbe    _089fca_jump
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _08eb20_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _089f91_jump

	_089fca_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)

	_089fd6_jump:
		mov    -0x00002c(%ebp),%edx
		mov    -0x000030(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_089fe1_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00002c,%esp
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		mov    -0x000024(%ebp),%eax
		movw   $0x000000,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000010(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000020(%ebp),%eax
		movl   $0x000000,(%eax)
		movl   $0x000000,-0x000004(%ebp)
		lea    -0x000004(%ebp),%eax
		push   %eax
		lea    -0x00000c(%ebp),%eax
		push   %eax
		push   $0x000020
		call   _08effd_func
		add    $0x00000c,%esp
		test   %eax,%eax
		je     _08a051_jump
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _08a0f5_jump

	_08a051_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x000028(%ebp)
		mov    %edx,-0x00002c(%ebp)
		lgs    -0x00002c(%ebp),%edx
		movl   $0x001000,%gs:(%edx)
		pushl  -0x000004(%ebp)
		call   _08f06c_func
		add    $0x000004,%esp
		mov    %eax,-0x000018(%ebp)
		push   $0x000010
		mov    -0x000028(%ebp),%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ds,%esi
		mov    $_0acbcc_data,%ecx
		mov    %esi,%eax
		mov    %ecx,%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _08f9c4_func
		pushl  -0x000004(%ebp)
		pushl  -0x00000c(%ebp)
		call   _08f03e_func
		add    $0x000008,%esp
		cmpl   $0x000000,-0x000018(%ebp)
		jne    _08a0ee_jump
		andw   $0x00f000,_0acbd8_data
		pushl  _0acbd8_data
		call   _08f125_func
		add    $0x000004,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    _0acbd8_data,%eax
		mov    %eax,-0x000014(%ebp)
		xor    %ebx,%ebx
		mov    -0x00000c(%ebp),%edx
		mov    -0x000024(%ebp),%eax
		mov    %dx,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		mov    %ebx,(%eax)
		mov    -0x000014(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _08a0f5_jump

	_08a0ee_jump:
		movl   $0x000005,-0x00001c(%ebp)

	_08a0f5_jump:
		mov    -0x00001c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08a0fd_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00001c,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000004(%ebp)
		pushl  -0x000010(%ebp)
		call   _08f1a5_func
		add    $0x000004,%esp
		lea    -0x00000c(%ebp),%edx
		push   %edx
		lea    -0x000008(%ebp),%edx
		push   %edx
		push   $0x000020
		call   _08effd_func
		add    $0x00000c,%esp
		xor    %edx,%edx
		mov    -0x000008(%ebp),%eax
		mov    %ax,-0x000018(%ebp)
		mov    %edx,-0x00001c(%ebp)
		push   $0x000010
		mov    %ds,%edx
		mov    $_0acbcc_data,%esi
		mov    %edx,%ebx
		mov    %esi,%edx
		mov    -0x000018(%ebp),%eax
		mov    -0x00001c(%ebp),%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _08f9c4_func
		pushl  -0x00000c(%ebp)
		call   _08f0d8_func
		add    $0x000004,%esp
		pushl  -0x00000c(%ebp)
		pushl  -0x000008(%ebp)
		call   _08f03e_func
		add    $0x000008,%esp
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08a179_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08a18e_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000010(%eax),%eax
		call   _08d433_func
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		je     _08a1cb_jump
		testb  $0x000080,0x00000c(%edx)
		je     _08a1b4_jump
		testb  $0x000010,0x00000d(%edx)
		je     _08a1b4_jump
		mov    %edx,%eax
		call   _08b88b_func

	_08a1b4_jump:
		cmpl   $0x000000,0x000004(%edx)
		je     _08a1cb_jump
		testb  $0x000010,0x00000d(%edx)
		je     _08a1c8_jump
		add    0x000004(%edx),%ebx
		mov    %ebx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_08a1c8_jump:
		sub    0x000004(%edx),%ebx

	_08a1cb_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ebx
		ret    



_08a1d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08a1e5_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0abd74_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0abd70_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0abee2_data(%eax)
		jb     _08a24c_jump
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		mov    %ax,-0x000014(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		jmp    _08a7ef_jump

	_08a24c_jump:
		movl   $0x000000,-0x000004(%ebp)

	_08a253_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _08a263_jump
		jmp    _08a7e6_jump

	_08a25e_jump:
		incl   -0x000004(%ebp)
		jmp    _08a253_jump

	_08a263_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _08a7e1_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000004(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000004(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x00000c(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x000008(%eax)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%edx
		mov    %eax,%ebx
		lgs    -0x000020(%ebp),%eax
		add    %gs:0x000030(%eax),%edx
		mov    %ebx,%eax
		mov    %eax,%ebx
		mov    %edx,%ecx
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%eax
		mov    %bx,%gs:0x000014(%eax)
		mov    %ecx,%gs:0x000010(%eax)
		lgs    -0x000020(%ebp),%eax
		testb  $0x000040,%gs:0x000028(%eax)
		je     _08a405_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000020(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		add    %gs:0x000034(%edx),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		sub    %eax,%ebx
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		mov    %ebx,%gs:0x00002c(%edx)
		jmp    _08a45f_jump

	_08a405_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)

	_08a45f_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000014(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000032(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000018(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000034(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000028(%eax),%dx
		or     $0x0000a0,%dh
		imul   $0x0000c0,-0x000010(%ebp),%ebx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %ebx,%eax
		lgs    _0abf14_data(%eax),%eax
		mov    %dx,%gs:0x000030(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000010(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000036(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000020(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x00001c(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000040(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x00003c(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00000c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000038(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000024(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00004a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movw   $0x000000,%gs:0x00003a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000038(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000044(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movw   $0x000000,%gs:0x000048(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movl   $0x000000,%gs:0x00004c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000050(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000054(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000044(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000056(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000048(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000058(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00004c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000050(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000054(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005e(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0abf18_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0abf14_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000058(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000060(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movl   $0x000000,%gs:0x000064(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movw   $0x000000,%gs:0x000068(%edx)
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _08a7f6_jump

	_08a7e1_jump:
		jmp    _08a25e_jump

	_08a7e6_jump:
		movl   $0xffffffff,-0x000008(%ebp)
		jmp    _08a7f6_jump

	_08a7ef_jump:
		movl   $0x000000,-0x000008(%ebp)

	_08a7f6_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_08a7fe_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _08a89c_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _08a854_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		testb  $0x000010,%gs:0x000031(%edx)
		je     _08a856_jump

	_08a854_jump:
		jmp    _08a893_jump

	_08a856_jump:
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%eax
		andb   $0x00007f,%gs:0x000031(%eax)
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movw   $0x000000,%gs:0x000034(%edx)
		movl   $0x000000,-0x000004(%ebp)
		jmp    _08a8a3_jump

	_08a893_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _08a8a3_jump

	_08a89c_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_08a8a3_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08ac23_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08ac38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08ac79_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _08ace6_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movswl %gs:0x000032(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000032(%edx)
		jmp    _08acef_jump

	_08ace6_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _08acf5_jump

	_08acef_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_08acf5_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08af1c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _08af89_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movswl %gs:0x000054(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000054(%edx)
		jmp    _08af92_jump

	_08af89_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _08af98_jump

	_08af92_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_08af98_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08b2a7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08b2bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08b2d1_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _08b31a_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0abf14_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _08b311_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _08b321_jump

	_08b311_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _08b321_jump

	_08b31a_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_08b321_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08b3a7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08b3bc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx

	_08b3c0_jump:
		mov    (%ebx),%al
		xor    %ecx,%ecx
		mov    (%edx),%ah
		mov    %al,%cl
		cmp    $0x000041,%ecx
		jl     _08b3d4_jump
		cmp    $0x00005a,%ecx
		jg     _08b3d4_jump
		add    $0x000020,%al

	_08b3d4_jump:
		xor    %ecx,%ecx
		mov    %ah,%cl
		cmp    $0x000041,%ecx
		jl     _08b3e5_jump
		cmp    $0x00005a,%ecx
		jg     _08b3e5_jump
		add    $0x000020,%ah

	_08b3e5_jump:
		cmp    %ah,%al
		jne    _08b3f1_jump
		test   %ah,%ah
		je     _08b3f1_jump
		inc    %ebx
		inc    %edx
		jmp    _08b3c0_jump

	_08b3f1_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ah,%al
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_08b403_func:
		push   %ebx
		push   %ecx
		mov    %dl,%cl
		xor    %ebx,%ebx

	_08b409_jump:
		cmp    (%eax),%cl
		jne    _08b40f_jump
		mov    %eax,%ebx

	_08b40f_jump:
		mov    %eax,%edx
		mov    (%edx),%ch
		inc    %eax
		test   %ch,%ch
		jne    _08b409_jump
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_08b41d_func:
		push   %ebx
		mov    %edx,%ebx
		cmp    $0x00001f,%edx
		jbe    _08b430_jump
		shr    $0x000005,%edx
		call   _08b41d_func
		and    $0x00001f,%ebx

	_08b430_jump:
		cmp    $0x00000a,%ebx
		jb     _08b43d_jump
		add    $0x000037,%bl
		mov    %bl,(%eax)
		inc    %eax
		pop    %ebx
		ret    

	_08b43d_jump:
		add    $0x000030,%bl
		mov    %bl,(%eax)
		inc    %eax
		pop    %ebx
		ret    



_08b445_func:
		push   %ebx
		push   %edx
		mov    $0x00005f,%ah
		mov    $_0e0fdc_data,%ebx
		mov    %ah,_0e0fdc_data
		inc    %ebx
		call   _08d53b_func
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _08b41d_func
		lea    0x000001(%eax),%ebx
		movb   $0x00002e,(%eax)
		movb   $0x000041,(%ebx)
		inc    %ebx
		movb   $0x000041,(%ebx)
		inc    %ebx
		mov    %ebx,%eax
		movb   $0x000040,(%ebx)
		sub    $_0e0fdc_data,%eax
		pop    %edx
		pop    %ebx
		ret    



_08b47e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		call   _08d52f_func
		mov    (%eax),%ebp
		cmpb   $0x000000,_0e0fdc_data
		jne    _08b49f_jump

	_08b496_jump:
		call   _08b445_func
		mov    %eax,%esi
		jmp    _08b4b7_jump

	_08b49f_jump:
		mov    $_0e0fdc_data,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		lea    -0x000001(%ecx),%esi

	_08b4b7_jump:
		xor    %eax,%eax
		mov    _0e0fdc_data(%esi),%al
		cmp    $0x00005a,%eax
		jne    _08b4dc_jump
		mov    $0x000041,%dh
		xor    %eax,%eax
		mov    %dh,_0e0fdc_data(%esi)
		mov    _0e0fdb_data(%esi),%al
		dec    %esi
		cmp    $0x00002e,%eax
		jne    _08b4b7_jump
		jmp    _08b496_jump

	_08b4dc_jump:
		mov    %al,%dl
		inc    %dl
		mov    $_0e0fdc_data,%eax
		mov    %dl,_0e0fdc_data(%esi)
		xor    %edx,%edx
		call   _08f9ec_func
		test   %eax,%eax
		je     _08b4b7_jump
		test   %ebx,%ebx
		je     _08b51d_jump
		mov    $_0e0fdc_data,%esi
		mov    %ebx,%edi
		push   %edi

	_08b502_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _08b51a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _08b502_jump

	_08b51a_jump:
		pop    %edi
		jmp    _08b522_jump

	_08b51d_jump:
		mov    $_0e0fdc_data,%ebx

	_08b522_jump:
		mov    %ebp,%eax
		call   _08d1fd_func
		mov    %ebx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08b560_func:
		push   %ebx
		push   %ecx
		xor    %edx,%edx
		mov    _0abbea_data,%dl
		cmp    $0x000002,%edx
		jl     _08b57d_jump
		cmp    $0x000008,%edx
		jg     _08b57d_jump
		mov    %al,%cl
		mov    $0x002502,%eax
		jmp    _08b587_jump

	_08b57d_jump:
		and    $0x0000ff,%eax
		xor    %cl,%cl
		or     $0x000035,%ah

	_08b587_jump:
		push   %es
		int    $0x000021
		mov    %es,%edx
		pop    %es
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_08b592_func:
		push   %edx
		mov    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0abbea_data,%bl
		cmp    $0x000002,%ebx
		jl     _08b5b5_jump
		cmp    $0x000008,%ebx
		jg     _08b5b5_jump
		push   %ds
		mov    %ecx,%ds
		mov    %al,%cl
		mov    $0x000004,%al
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    

	_08b5b5_jump:
		push   %ds
		mov    %ecx,%ds
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    



_08b5d1_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		call   _08fa30_func
		mov    $0xf368cb40,%ebx
		mov    $0x3cc003c9,%ecx
		mov    %eax,%edi
		mov    %edx,%esi
		call   _08bb2c_func
		jge    _08b60d_jump
		xor    %esi,%esi
		mov    $0x3ff00000,%edi
		mov    %esi,-0x00003c(%ebp)
		mov    %edi,-0x000038(%ebp)
		jmp    _08b7f4_jump

	_08b60d_jump:
		mov    $0xfefa39ef,%ebx
		mov    $0x40862e42,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _08bb2c_func
		jle    _08b647_jump
		cmpl   $0x000000,-0x000038(%ebp)
		jge    _08b635_jump
		xor    %ebx,%ebx
		mov    %ebx,-0x00003c(%ebp)
		mov    %ebx,-0x000038(%ebp)
		jmp    _08b7f4_jump

	_08b635_jump:
		lea    -0x00003c(%ebp),%edx
		mov    $0x008104,%eax
		call   _08d638_func
		jmp    _08b7ee_jump

	_08b647_jump:
		cmpb   $0x000000,_0abbb5_data
		je     _08b660_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _08fa3a_func
		jmp    _08b7ee_jump

	_08b660_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    $0x652b8301,%ebx
		mov    $0x3ff71547,%ecx
		call   _085695_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		call   _08fae3_func
		mov    -0x000038(%ebp),%edx
		mov    %eax,%esi
		mov    -0x00003c(%ebp),%eax
		lea    -0x000034(%ebp),%ebx
		call   _08fa30_func
		call   _08faf8_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _0864a4_func
		mov    %eax,-0x000014(%ebp)
		test   %esi,%esi
		jge    _08b6d4_jump
		mov    %eax,%edx
		neg    %edx
		mov    %edx,-0x000014(%ebp)
		test   %ecx,%ecx
		je     _08b6d4_jump
		lea    -0x000001(%edx),%esi
		xor    %eax,%eax
		mov    $0x3ff00000,%edx
		mov    %esi,-0x000014(%ebp)
		call   _0854d8_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_08b6d4_jump:
		mov    -0x000038(%ebp),%eax
		xor    %edi,%edi
		test   %eax,%eax
		je     _08b71c_jump
		mov    $0x000004,%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _08fb24_func
		lea    -0x000034(%ebp),%ebx
		call   _08faf8_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		test   %edx,%edx
		je     _08b70f_jump
		mov    $0xfffffffc,%ebx
		call   _08fb24_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_08b70f_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _0864a4_func
		mov    %eax,%edi

	_08b71c_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _085695_func
		mov    $0x4f237e45,%ebx
		mov    $0x4034d053,%ecx
		mov    %eax,%esi
		mov    %edx,-0x00002c(%ebp)
		call   _0854de_func
		mov    $0x1ac13af9,%ebx
		mov    $0x3fad92de,%ecx
		mov    %eax,-0x000028(%ebp)
		mov    %edx,-0x000024(%ebp)
		mov    -0x00002c(%ebp),%edx
		mov    %esi,%eax
		call   _085695_func
		mov    $0xa35ca6dc,%ebx
		mov    $0x401cdaa0,%ecx
		call   _0854de_func
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000038(%ebp),%ecx
		call   _085695_func
		mov    %eax,-0x000020(%ebp)
		mov    %edx,%esi
		mov    -0x000028(%ebp),%eax
		mov    -0x000024(%ebp),%edx
		mov    -0x000020(%ebp),%ebx
		mov    %esi,%ecx
		call   _0854de_func
		mov    -0x000020(%ebp),%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %esi,%ecx
		mov    -0x000028(%ebp),%eax
		mov    -0x000024(%ebp),%edx
		call   _0854d8_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    $_0a50dc_data,%esi
		call   _0867d0_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_08b7b8_jump:
		test   %edi,%edi
		je     _08b7e0_jump
		test   $0x000001,%di
		je     _08b7d9_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		call   _085695_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_08b7d9_jump:
		sar    %edi
		add    $0x000008,%esi
		jmp    _08b7b8_jump

	_08b7e0_jump:
		mov    -0x000014(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _08fb24_func

	_08b7ee_jump:
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_08b7f4_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_08b803_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000090,%esp
		mov    %eax,%ebp
		mov    %edx,%ebx
		lea    0x000003(%esp),%esi
		xor    %dl,%dl
		mov    $0x000047,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    _08b832_jump
		mov    $0x000001,%eax

	_08b829_jump:
		call   _08d1fd_func
		xor    %eax,%eax
		jmp    _08b87f_jump

	_08b832_jump:
		mov    $0x000019,%ah
		int    $0x000021
		mov    $0x00005c,%dl
		add    $0x000041,%al
		mov    %esp,%edi
		mov    %al,(%esp)
		mov    $0x00003a,%ah
		mov    %dl,0x000002(%esp)
		mov    %ah,0x000001(%esp)
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		lea    0x000001(%ecx),%edx
		test   %ebp,%ebp
		jne    _08b876_jump
		mov    %edx,%eax
		call   _08bcf5_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _08b874_jump
		mov    $0x000005,%eax
		jmp    _08b829_jump

	_08b874_jump:
		mov    %edx,%ebx

	_08b876_jump:
		mov    %esp,%edx
		mov    %ebp,%eax
		call   _085378_func

	_08b87f_jump:
		add    $0x000090,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08b88b_func:
		test   %eax,%eax
		jne    _08d35a_func
		call   _08e384_func
		xor    %eax,%eax
		ret    



_08b89b_func:
		cmp    $0x000061,%eax
		jl     _08b8a8_jump
		cmp    $0x00007a,%eax
		jg     _08b8a8_jump
		sub    $0x000020,%eax

	_08b8a8_jump:
		ret    

.data

_08b8a9_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_08b8ce_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000001(%esp),%ecx
		mov    %dl,(%esp)

	_08b8e4_jump:
		lea    0x000024(%esp),%ebx
		mov    %edi,0x000024(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %eax,(%ebx)
		mov    %cs:_08b8a9_data(%edx),%al
		mov    %al,(%ecx)
		mov    0x000024(%esp),%eax
		inc    %ecx
		test   %eax,%eax
		jne    _08b8e4_jump

	_08b904_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _08b904_jump
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08b918_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _08b92a_jump
		test   %eax,%eax
		jge    _08b92a_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_08b92a_jump:
		call   _08b8ce_func
		mov    %ecx,%eax
		pop    %ecx
		ret    



_08b940_func:
		or     %ecx,%ecx
		je     _08b970_jump
		cmp    %dl,(%eax)

	_08b946_jump:
		test   $0x000003,%al
		je     _08b953_jump
		mov    %dl,(%eax)
		inc    %eax
		ror    $0x000008,%edx
		dec    %ecx
		jne    _08b946_jump

	_08b953_jump:
		push   %ecx
		shr    $0x000002,%ecx
		call   _08b977_func
		pop    %ecx
		and    $0x000003,%ecx
		je     _08b970_jump
		mov    %dl,(%eax)
		dec    %ecx
		je     _08b970_jump
		mov    %dh,0x000001(%eax)
		dec    %ecx
		je     _08b970_jump
		mov    %dl,0x000002(%eax)

	_08b970_jump:
		ret    



_08b977_func:
		or     %ecx,%ecx
		je     _08b9e2_jump

	_08b97b_jump:
		test   $0x00001f,%al
		je     _08b987_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		jne    _08b97b_jump

	_08b987_jump:
		push   %ecx
		shr    $0x000002,%ecx
		je     _08b9c7_jump
		dec    %ecx
		je     _08b9b9_jump

	_08b990_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		dec    %ecx
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		je     _08b9b6_jump
		cmp    %dl,0x000020(%eax)
		mov    %edx,0x000010(%eax)
		mov    %edx,0x000014(%eax)
		dec    %ecx
		mov    %edx,0x000018(%eax)
		mov    %edx,0x00001c(%eax)
		lea    0x000020(%eax),%eax
		jne    _08b990_jump
		lea    -0x000010(%eax),%eax

	_08b9b6_jump:
		lea    0x000010(%eax),%eax

	_08b9b9_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		lea    0x000010(%eax),%eax

	_08b9c7_jump:
		pop    %ecx
		and    $0x000003,%ecx
		je     _08b9e2_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _08b9e2_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _08b9e2_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax

	_08b9e2_jump:
		ret    



_08b9e4_func:
		mov    %eax,%ecx
		mov    %edx,%eax
		mov    %ebp,%esp
		xchg   %ecx,0x000028(%ebp)
		xchg   %eax,0x00002c(%ebp)
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		pop    %ebp
		pop    %ebx
		pop    %ebx
		pop    %edx
		lret   



_08b9fd_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,%ebx
		mov    %ebp,%edx
		mov    %eax,%esi
		call   _08cae0_func
		mov    0x000000(%ebp),%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_08ba16_func:
		push   %ebx
		push   %edx
		sub    $0x000024,%esp
		mov    %eax,%edx
		mov    %esp,%eax
		call   _08fbc2_func
		cmp    $0x0001f4,%eax
		jl     _08ba2e_jump
		incl   (%esp)

	_08ba2e_jump:
		mov    %esp,%eax
		call   _08fc85_func
		mov    %eax,%ebx
		test   %edx,%edx
		je     _08ba3d_jump
		mov    %eax,(%edx)

	_08ba3d_jump:
		mov    %ebx,%eax
		add    $0x000024,%esp
		pop    %edx
		pop    %ebx
		ret    



_08ba45_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %ebx,%ecx
		cmp    %eax,%edx
		je     _08ba8e_jump
		jae    _08ba78_jump
		lea    (%edx,%ebx,1),%edi
		cmp    %eax,%edi
		jbe    _08ba78_jump
		lea    -0x000001(%edi),%esi
		lea    (%eax,%ebx,1),%edi
		mov    %ds,%edx
		dec    %edi
		push   %es
		mov    %edx,%es
		std    
		dec    %esi
		dec    %edi
		shr    %ecx
		rep movsw %ds:(%esi),%es:(%edi)
		adc    %ecx,%ecx
		inc    %esi
		inc    %edi
		data16 rep movsb %ds:(%esi),%es:(%edi)
		pop    %es
		cld    
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_08ba78_jump:
		mov    %edx,%esi
		mov    %eax,%edi
		mov    %ds,%edx
		push   %es
		mov    %edx,%es
		push   %ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		and    $0x000003,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %es

	_08ba8e_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08baa4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _085695_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x3ff00000,%edx
		xor    %eax,%eax
		call   _0854d8_func
		test   %edx,%edx
		jge    _08bade_jump
		lea    -0x000010(%ebp),%edx
		mov    $0x002041,%eax
		call   _08d638_func
		jmp    _08bb24_jump

	_08bade_jump:
		jne    _08baf8_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jge    _08baf2_jump
		mov    $0x54442d18,%eax
		mov    $0x400921fb,%edx
		jmp    _08bb24_jump

	_08baf2_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _08bb24_jump

	_08baf8_jump:
		call   _086442_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		call   _0867d0_func
		call   _08fdeb_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54442d15,%eax
		mov    $0x3ff921fb,%edx
		call   _0854d8_func

	_08bb24_jump:
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_08bb2c_func:
		push   %ebp
		test   $0x7ff00000,%edx
		jne    _08bb37_jump
		sub    %edx,%edx

	_08bb37_jump:
		test   $0x7ff00000,%ecx
		jne    _08bb41_jump
		sub    %ecx,%ecx

	_08bb41_jump:
		mov    %ecx,%ebp
		xor    %edx,%ebp
		mov    $0x000000,%ebp
		js     _08bb58_jump
		cmp    %ecx,%edx
		jne    _08bb52_jump
		cmp    %ebx,%eax

	_08bb52_jump:
		je     _08bb60_jump
		rcr    %ecx
		xor    %ecx,%edx

	_08bb58_jump:
		add    %edx,%edx
		sbb    $0x000000,%ebp
		add    %ebp,%ebp
		inc    %ebp

	_08bb60_jump:
		mov    %ebp,%eax
		pop    %ebp
		ret    



_08bb64_func:
		jmp    _08ffc2_jump



_08bb69_func:
		jmp    _087491_func



_08bb6e_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %esi,%edx
		mov    0x00000c(%ebx),%ah
		mov    0x00000c(%ebx),%edi
		and    $0x0000cf,%ah
		and    $0x000030,%edi
		mov    %ah,0x00000c(%ebx)

	_08bb8a_jump:
		dec    %ecx
		test   %ecx,%ecx
		jle    _08bbae_jump
		mov    %ebx,%eax
		call   _0869e5_func
		mov    %eax,(%esp)
		cmp    $0xffffffff,%eax
		je     _08bbae_jump
		mov    (%esp),%al
		mov    %al,(%edx)
		and    $0x0000ff,%eax
		inc    %edx
		cmp    $0x00000a,%eax
		jne    _08bb8a_jump

	_08bbae_jump:
		cmpl   $0xffffffff,(%esp)
		jne    _08bbc2_jump
		cmp    %esi,%edx
		je     _08bbbe_jump
		testb  $0x000020,0x00000c(%ebx)
		je     _08bbc2_jump

	_08bbbe_jump:
		xor    %esi,%esi
		jmp    _08bbc5_jump

	_08bbc2_jump:
		movb   $0x000000,(%edx)

	_08bbc5_jump:
		mov    0x00000c(%ebx),%ebp
		or     %edi,%ebp
		mov    %esi,%eax
		mov    %ebp,0x00000c(%ebx)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08bbfc_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		call   _08fae3_func
		mov    -0x00000c(%ebp),%edx
		mov    %eax,%esi
		mov    -0x000010(%ebp),%eax
		call   _08fae3_func
		test   %esi,%esi
		jne    _08bc63_jump
		test   %eax,%eax
		jne    _08bc3f_jump
		lea    -0x000010(%ebp),%ebx
		lea    -0x000018(%ebp),%edx
		mov    $0x00204d,%eax
		call   _08d642_func
		jmp    _08bce2_jump

	_08bc3f_jump:
		jge    _08bc56_jump
		mov    $0x54442d18,%edx
		mov    $0x400921fb,%ebx

	_08bc4b_jump:
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _08bce8_jump

	_08bc56_jump:
		xor    %edi,%edi
		mov    %esi,-0x00000c(%ebp)
		mov    %edi,-0x000010(%ebp)
		jmp    _08bce8_jump

	_08bc63_jump:
		test   %eax,%eax
		jne    _08bc89_jump
		test   %esi,%esi
		jge    _08bc7d_jump
		mov    $0x54442d15,%ecx
		mov    $0xbff921fb,%esi
		mov    %ecx,-0x000010(%ebp)
		mov    %esi,-0x00000c(%ebp)
		jmp    _08bce8_jump

	_08bc7d_jump:
		mov    $0x54442d15,%edx
		mov    $0x3ff921fb,%ebx
		jmp    _08bc4b_jump

	_08bc89_jump:
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		mov    -0x00000c(%ebp),%ecx
		call   _0867d0_func
		call   _08fdeb_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		call   _08fae3_func
		test   %esi,%esi
		jl     _08bcc9_jump
		test   %eax,%eax
		jge    _08bce8_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0x400921fb,%ecx
		call   _0854de_func
		jmp    _08bce2_jump

	_08bcc9_jump:
		test   %eax,%eax
		jle    _08bce8_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0xc00921fb,%ecx
		call   _0854de_func

	_08bce2_jump:
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_08bce8_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08bcf5_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		push   %gs
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		test   %eax,%eax
		je     _08bd0e_jump
		cmp    $0xffffffd4,%eax
		jbe    _08bd15_jump

	_08bd0e_jump:
		xor    %eax,%eax
		jmp    _08bdc9_jump

	_08bd15_jump:
		mov    $_0abba8_data,%ebp
		lea    0x000003(%esi),%edi
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,(%esp)
		and    $0x00fffc,%di

	_08bd28_jump:
		mov    %edi,%eax
		cmp    $0x00000c,%edi
		jae    _08bd34_jump
		mov    $0x00000c,%eax

	_08bd34_jump:
		cmp    _0abbb0_data,%eax
		jbe    _08bd54_jump
		mov    _0abbac_data,%ecx
		test   %ecx,%ecx
		jne    _08bd8c_jump

	_08bd46_jump:
		mov    %ecx,_0abbb0_data
		mov    _0abba8_data,%ecx
		jmp    _08bd8c_jump

	_08bd54_jump:
		xor    %ecx,%ecx
		jmp    _08bd46_jump

	_08bd58_jump:
		mov    %ds,%edx
		mov    %ebp,%eax
		mov    %ecx,_0abbac_data
		and    $0x00ffff,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _08ffea_func
		mov    %eax,%edx
		test   %eax,%eax
		jne    _08bdbf_jump
		mov    _0abbb0_data,%ebx
		mov    0x000014(%ecx),%eax
		cmp    %ebx,%eax
		jbe    _08bd89_jump
		mov    %eax,_0abbb0_data

	_08bd89_jump:
		mov    0x000008(%ecx),%ecx

	_08bd8c_jump:
		test   %ecx,%ecx
		jne    _08bd58_jump
		cmpb   $0x000000,(%esp)
		jne    _08bda1_jump
		mov    %esi,%eax
		call   _09058e_func
		test   %eax,%eax
		jne    _08bdb6_jump

	_08bda1_jump:
		mov    %esi,%eax
		call   _090757_func
		test   %eax,%eax
		je     _08bdbf_jump
		xor    %cl,%cl
		mov    %cl,(%esp)
		jmp    _08bd28_jump

	_08bdb6_jump:
		movb   $0x000001,(%esp)
		jmp    _08bd28_jump

	_08bdbf_jump:
		xor    %ch,%ch
		mov    %edx,%eax
		mov    %ch,_0e1008_data

	_08bdc9_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %gs
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08bdd8_func:
		push   %ebx
		imul   %edx,%eax
		mov    %eax,%ebx
		call   _08bcf5_func
		test   %eax,%eax
		je     _08bdee_jump
		xor    %edx,%edx
		call   _085360_func

	_08bdee_jump:
		pop    %ebx
		ret    



_08bdf0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %eax,%esi
		test   %eax,%eax
		je     _08be6c_jump
		mov    _0e0ff0_data,%ecx
		test   %ecx,%ecx
		je     _08be12_jump
		cmp    %eax,%ecx
		ja     _08be12_jump
		cmp    0x000008(%ecx),%eax
		jb     _08be2c_jump

	_08be12_jump:
		mov    _0abba8_data,%ecx
		jmp    _08be25_jump

	_08be1a_jump:
		cmp    %esi,%ecx
		ja     _08be22_jump
		cmp    %ebx,%esi
		jb     _08be2c_jump

	_08be22_jump:
		mov    0x000008(%ecx),%ecx

	_08be25_jump:
		mov    0x000008(%ecx),%ebx
		test   %ebx,%ebx
		jne    _08be1a_jump

	_08be2c_jump:
		mov    $_0abba8_data,%eax
		mov    %ds,%edx
		and    $0x00ffff,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _090092_func
		mov    _0abbac_data,%ebp
		mov    %ecx,_0e0ff0_data
		cmp    %ebp,%ecx
		jae    _08be64_jump
		mov    _0abbb0_data,%eax
		mov    0x000014(%ecx),%edx
		cmp    %eax,%edx
		jbe    _08be64_jump
		mov    %edx,_0abbb0_data

	_08be64_jump:
		xor    %ah,%ah
		mov    %ah,_0e1008_data

	_08be6c_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08be72_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x000124,%esp
		mov    %ebx,%esi
		mov    %ecx,0x00011c(%esp)
		xor    %bl,%bl
		mov    %eax,0x000100(%esp)
		mov    %bl,0x000120(%esp)
		mov    %bl,0x000114(%esp)
		xor    %ebx,%ebx
		mov    %edx,%edi
		mov    %ebx,0x000110(%esp)
		mov    $0x000004,%ebp
		jmp    _08bf44_jump

	_08beb1_jump:
		lea    0x000100(%esp),%ebx
		mov    %esi,%edx
		call   _08c211_func
		mov    %eax,%edi
		mov    (%eax),%al
		inc    %edi
		mov    %al,0x000115(%esp)
		test   %al,%al
		je     _08c1ff_jump
		xor    %eax,%eax
		mov    0x000115(%esp),%al
		cmp    $0x00006e,%eax
		jne    _08c00e_jump
		mov    0x000114(%esp),%al
		xor    %edx,%edx
		and    $0x000020,%al
		mov    %al,%dl
		mov    0x000114(%esp),%al
		and    $0x000040,%al
		mov    0x000114(%esp),%ah
		and    $0x000080,%ah
		test   %edx,%edx
		je     _08bf7b_jump
		xor    %edx,%edx
		mov    %ah,%dl
		test   %edx,%edx
		je     _08bf2b_jump
		mov    (%esi),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%esi)
		les    -0x000008(%ecx),%edx

	_08bf1f_jump:
		mov    0x000110(%esp),%eax
		mov    %eax,%es:(%edx)
		jmp    _08bf44_jump

	_08bf2b_jump:
		and    $0x0000ff,%eax
		je     _08bf70_jump
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx

	_08bf3b_jump:
		mov    0x000110(%esp),%eax
		mov    %eax,(%edx)

	_08bf44_jump:
		mov    (%edi),%cl
		test   %cl,%cl
		je     _08c1ff_jump
		xor    %edx,%edx
		mov    %cl,%dl
		lea    0x000001(%edi),%eax
		cmp    $0x000025,%edx
		je     _08beb1_jump
		mov    %eax,%edi
		lea    0x000100(%esp),%eax
		call   *0x00011c(%esp)
		jmp    _08bf44_jump

	_08bf70_jump:
		mov    (%esi),%edx
		add    %ebp,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		jmp    _08bf3b_jump

	_08bf7b_jump:
		mov    0x000114(%esp),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _08bfd6_jump
		xor    %edx,%edx
		mov    %ah,%dl
		test   %edx,%edx
		je     _08bfac_jump
		mov    (%esi),%eax
		add    $0x000008,%eax
		mov    %eax,(%esi)
		les    -0x000008(%eax),%edx
		mov    0x000110(%esp),%eax
		mov    %ax,%es:(%edx)
		jmp    _08bf44_jump

	_08bfac_jump:
		and    $0x0000ff,%eax
		je     _08bfcb_jump
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx

	_08bfbc_jump:
		mov    0x000110(%esp),%eax
		mov    %ax,(%edx)
		jmp    _08bf44_jump

	_08bfcb_jump:
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx
		jmp    _08bfbc_jump

	_08bfd6_jump:
		mov    %ah,%dl
		test   %edx,%edx
		je     _08bfeb_jump
		mov    (%esi),%edx
		add    $0x000008,%edx
		mov    %edx,(%esi)
		les    -0x000008(%edx),%edx
		jmp    _08bf1f_jump

	_08bfeb_jump:
		and    $0x0000ff,%eax
		je     _08c000_jump
		mov    (%esi),%eax
		add    %ebp,%eax
		mov    %eax,(%esi)
		mov    -0x000004(%eax),%edx
		jmp    _08bf3b_jump

	_08c000_jump:
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx
		jmp    _08bf3b_jump

	_08c00e_jump:
		lea    0x000120(%esp),%ecx
		lea    0x000100(%esp),%ebx
		mov    %esp,%eax
		mov    %esi,%edx
		call   _08c54f_func
		mov    %eax,%ebx
		mov    0x000114(%esp),%al
		mov    %edx,%es
		and    $0x000008,%al
		and    $0x0000ff,%eax
		jne    _08c071_jump
		mov    0x000116(%esp),%al
		cmp    $0x000020,%eax
		jne    _08c071_jump

	_08c045_jump:
		mov    0x000104(%esp),%eax
		dec    %eax
		mov    %eax,0x000104(%esp)
		test   %eax,%eax
		jl     _08c071_jump
		xor    %edx,%edx
		lea    0x000100(%esp),%eax
		mov    0x000116(%esp),%dl
		call   *0x00011c(%esp)
		jmp    _08c045_jump

	_08c071_jump:
		lea    0x000117(%esp),%ecx

	_08c078_jump:
		mov    (%ecx),%al
		test   %al,%al
		je     _08c093_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000100(%esp),%eax
		inc    %ecx
		call   *0x00011c(%esp)
		jmp    _08c078_jump

	_08c093_jump:
		mov    0x00010c(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x00010c(%esp)
		test   %eax,%eax
		je     _08c0bd_jump
		mov    $0x000030,%edx
		lea    0x000100(%esp),%eax
		call   *0x00011c(%esp)
		jmp    _08c093_jump

	_08c0bd_jump:
		mov    0x000114(%esp),%al
		and    $0x000008,%al
		and    $0x0000ff,%eax
		jne    _08c105_jump
		mov    0x000116(%esp),%al
		cmp    $0x000020,%eax
		je     _08c105_jump

	_08c0d9_jump:
		mov    0x000104(%esp),%eax
		dec    %eax
		mov    %eax,0x000104(%esp)
		test   %eax,%eax
		jl     _08c105_jump
		xor    %edx,%edx
		lea    0x000100(%esp),%eax
		mov    0x000116(%esp),%dl
		call   *0x00011c(%esp)
		jmp    _08c0d9_jump

	_08c105_jump:
		xor    %eax,%eax
		mov    0x000115(%esp),%al
		cmp    $0x000073,%eax
		je     _08c118_jump
		cmp    $0x000053,%eax
		jne    _08c184_jump

	_08c118_jump:
		mov    0x000114(%esp),%al
		and    $0x000020,%al
		and    $0x0000ff,%eax
		je     _08c159_jump

	_08c128_jump:
		mov    0x000108(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000108(%esp)
		test   %eax,%eax
		je     _08c1af_jump
		xor    %edx,%edx
		lea    0x000100(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x00011c(%esp)
		add    $0x000002,%ebx
		jmp    _08c128_jump

	_08c159_jump:
		mov    0x000108(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x000108(%esp)
		test   %eax,%eax
		je     _08c1af_jump
		xor    %edx,%edx
		lea    0x000100(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x00011c(%esp)
		inc    %ebx
		jmp    _08c159_jump

	_08c184_jump:
		mov    0x000108(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000108(%esp)
		test   %eax,%eax
		je     _08c1af_jump
		xor    %edx,%edx
		lea    0x000100(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x00011c(%esp)
		inc    %ebx
		jmp    _08c184_jump

	_08c1af_jump:
		mov    0x000114(%esp),%al
		and    $0x000008,%al
		and    $0x0000ff,%eax
		je     _08bf44_jump
		cmpl   $0x000000,0x000104(%esp)
		jle    _08bf44_jump

	_08c1d1_jump:
		mov    0x000104(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x000104(%esp)
		test   %eax,%eax
		je     _08bf44_jump
		mov    $0x000020,%edx
		lea    0x000100(%esp),%eax
		call   *0x00011c(%esp)
		jmp    _08c1d1_jump

	_08c1ff_jump:
		mov    0x000110(%esp),%eax
		add    $0x000124,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_08c211_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		movb   $0x000000,0x000017(%ebx)
		mov    %ebx,%edx
		movb   $0x000020,0x000016(%ebx)
		call   _08c34f_func
		movl   $0x000000,0x000004(%ebx)
		mov    (%eax),%dl
		and    $0x0000ff,%edx
		cmp    $0x000030,%edx
		jl     _08c25f_jump
		cmp    $0x000039,%edx
		jg     _08c25f_jump

	_08c23e_jump:
		imul   $0x00000a,0x000004(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x000030,%edx
		inc    %eax
		add    %edx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000004(%ebx)
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _08c28a_jump
		cmp    $0x000039,%edx
		jle    _08c23e_jump
		jmp    _08c28a_jump

	_08c25f_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002a,%edx
		jne    _08c28a_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000004(%ebx)
		test   %edx,%edx
		jge    _08c289_jump
		mov    %edx,%edi
		mov    0x000014(%ebx),%dl
		neg    %edi
		or     $0x000008,%dl
		mov    %edi,0x000004(%ebx)
		mov    %dl,0x000014(%ebx)

	_08c289_jump:
		inc    %eax

	_08c28a_jump:
		movl   $0xffffffff,0x000008(%ebx)
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002e,%edx
		jne    _08c2e3_jump
		inc    %eax
		movl   $0x000000,0x000008(%ebx)
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002a,%edx
		jne    _08c2c6_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000008(%ebx)
		test   %edx,%edx
		jge    _08c2c3_jump
		movl   $0xffffffff,0x000008(%ebx)

	_08c2c3_jump:
		inc    %eax
		jmp    _08c2e3_jump

	_08c2c6_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _08c2e3_jump
		cmp    $0x000039,%edx
		jg     _08c2e3_jump
		imul   $0x00000a,0x000008(%ebx),%ecx
		sub    $0x000030,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x000008(%ebx)
		jmp    _08c2c6_jump

	_08c2e3_jump:
		mov    (%eax),%dl
		lea    0x000001(%eax),%ecx
		cmp    $0x00004e,%dl
		jb     _08c308_jump
		jbe    _08c345_jump
		cmp    $0x00006c,%dl
		jb     _08c2ff_jump
		jbe    _08c318_jump
		cmp    $0x000077,%dl
		je     _08c318_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_08c2ff_jump:
		cmp    $0x000068,%dl
		je     _08c326_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_08c308_jump:
		cmp    $0x000046,%dl
		jb     _08c34b_jump
		jbe    _08c33b_jump
		cmp    $0x00004c,%dl
		je     _08c32c_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_08c318_jump:
		mov    0x000014(%ebx),%dh
		or     $0x000020,%dh
		inc    %eax

	_08c31f_jump:
		mov    %dh,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_08c326_jump:
		orb    $0x000010,0x000014(%ebx)
		jmp    _08c349_jump

	_08c32c_jump:
		mov    0x000014(%ebx),%dl
		or     $0x000040,%dl
		mov    %ecx,%eax
		mov    %dl,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_08c33b_jump:
		mov    0x000014(%ebx),%dh
		or     $0x000080,%dh
		mov    %ecx,%eax
		jmp    _08c31f_jump

	_08c345_jump:
		orb    $0x000040,0x000014(%ebx)

	_08c349_jump:
		mov    %ecx,%eax

	_08c34b_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08c34f_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		movb   $0x000000,0x000014(%edx)

	_08c357_jump:
		xor    %eax,%eax
		mov    (%ebx),%al
		cmp    $0x00002d,%eax
		jne    _08c366_jump
		orb    $0x000008,0x000014(%edx)
		jmp    _08c3a6_jump

	_08c366_jump:
		cmp    $0x000023,%eax
		jne    _08c371_jump
		orb    $0x000001,0x000014(%edx)
		jmp    _08c3a6_jump

	_08c371_jump:
		cmp    $0x00002b,%eax
		jne    _08c386_jump
		mov    0x000014(%edx),%cl
		or     $0x000004,%cl
		mov    %cl,%ch
		and    $0x0000fd,%ch
		mov    %ch,0x000014(%edx)
		jmp    _08c3a6_jump

	_08c386_jump:
		cmp    $0x000020,%eax
		jne    _08c39d_jump
		mov    0x000014(%edx),%al
		and    $0x000004,%al
		and    $0x0000ff,%eax
		jne    _08c3a6_jump
		orb    $0x000002,0x000014(%edx)
		jmp    _08c3a6_jump

	_08c39d_jump:
		cmp    $0x000030,%eax
		jne    _08c3a9_jump
		movb   $0x000030,0x000016(%edx)

	_08c3a6_jump:
		inc    %ebx
		jmp    _08c357_jump

	_08c3a9_jump:
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_08c3ae_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%ecx
		mov    %ebx,%edi
		mov    %eax,%edx
		mov    %ecx,%es
		xor    %eax,%eax

	_08c3bc_jump:
		mov    %edx,%esi
		mov    %es:(%esi),%bl
		inc    %edx
		test   %bl,%bl
		je     _08c3cd_jump
		cmp    %edi,%eax
		je     _08c3cd_jump
		inc    %eax
		jmp    _08c3bc_jump

	_08c3cd_jump:
		pop    %es
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08c3d2_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %ecx,%ebx
		mov    %edx,%es
		xor    %eax,%eax

	_08c3e0_jump:
		mov    %ebx,%ecx
		mov    %es:(%ecx),%di
		add    $0x000002,%ebx
		test   %di,%di
		je     _08c3cd_jump
		cmp    %esi,%eax
		je     _08c3cd_jump
		inc    %eax
		jmp    _08c3e0_jump



_08c3f5_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    $0x000010,%ebx
		mov    %ebp,%edi
		call   _08b918_func
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    (%esp),%eax
		mov    %ebp,%esi
		dec    %eax
		lea    (%ecx,%ebp,1),%edx
		lea    (%eax,%ebp,1),%ebx
		jmp    _08c432_jump

	_08c42b_jump:
		dec    %edx
		mov    (%edx),%cl
		dec    %eax
		mov    %cl,(%ebx)
		dec    %ebx

	_08c432_jump:
		cmp    %esi,%edx
		jne    _08c42b_jump
		lea    (%eax,%ebp,1),%edx

	_08c439_jump:
		test   %eax,%eax
		jl     _08c444_jump
		dec    %eax
		movb   $0x000030,(%edx)
		dec    %edx
		jmp    _08c439_jump

	_08c444_jump:
		add    (%esp),%ebp
		movb   $0x000000,0x000000(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08c453_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    _08c46f_jump
		neg    %edx
		lea    0x000001(%eax),%ecx
		movb   $0x00002d,(%eax)
		mov    %edx,(%esp)

	_08c46f_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		jne    _08c47c_jump
		movl   $0x000004,0x000008(%esi)

	_08c47c_jump:
		mov    $0x00000a,%ebx
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x000002(%esp),%ax
		call   _08b918_func
		mov    %ecx,%ebx

	_08c491_jump:
		mov    (%ecx),%ah
		lea    0x000001(%ecx),%edx
		test   %ah,%ah
		je     _08c49e_jump
		mov    %edx,%ecx
		jmp    _08c491_jump

	_08c49e_jump:
		cmpl   $0x000000,0x000008(%esi)
		je     _08c4d0_jump
		movb   $0x00002e,(%ecx)
		xor    %eax,%eax
		mov    %edx,%ecx
		jmp    _08c4c8_jump

	_08c4ad_jump:
		xor    %edx,%edx
		mov    %dx,0x000002(%esp)
		mov    (%esp),%edi
		imul   $0x00000a,%edi,%edx
		mov    %edx,(%esp)
		mov    0x000002(%esp),%dl
		add    $0x000030,%dl
		inc    %eax
		mov    %dl,(%ecx)
		inc    %ecx

	_08c4c8_jump:
		cmp    0x000008(%esi),%eax
		jl     _08c4ad_jump
		movb   $0x000000,(%ecx)

	_08c4d0_jump:
		mov    (%esp),%eax
		xor    %al,%al
		and    $0x000080,%ah
		and    $0x00ffff,%eax
		je     _08c541_jump

	_08c4e3_jump:
		cmp    %ebx,%ecx
		jne    _08c520_jump
		lea    0x000001(%ebx),%ecx
		movb   $0x000031,(%ebx)

	_08c4ed_jump:
		xor    %edx,%edx
		mov    (%ecx),%dl
		lea    0x000001(%ecx),%eax
		cmp    $0x000030,%edx
		jne    _08c4fd_jump
		mov    %eax,%ecx
		jmp    _08c4ed_jump

	_08c4fd_jump:
		cmp    $0x00002e,%edx
		jne    _08c517_jump
		movb   $0x000030,(%ecx)
		lea    0x000001(%eax),%ecx
		movb   $0x00002e,(%eax)

	_08c50b_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x000030,%eax
		jne    _08c517_jump
		inc    %ecx
		jmp    _08c50b_jump

	_08c517_jump:
		movb   $0x000030,(%ecx)
		inc    %ecx
		movb   $0x000000,(%ecx)
		jmp    _08c541_jump

	_08c520_jump:
		dec    %ecx
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x00002e,%eax
		jne    _08c52b_jump
		dec    %ecx

	_08c52b_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x000039,%eax
		je     _08c53c_jump
		mov    %al,%dl
		inc    %dl
		mov    %dl,(%ecx)
		jmp    _08c541_jump

	_08c53c_jump:
		movb   $0x000030,(%ecx)
		jmp    _08c4e3_jump

	_08c541_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08c548_func:
		call   *_0adda4_data
		ret    



_08c54f_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,0x000004(%esp)
		mov    %edx,%eax
		movl   $0x000001,(%esp)
		mov    %ds,%edx
		mov    %edi,%ecx
		mov    %edx,%es
		mov    0x000015(%ebx),%dl
		movl   $0x000000,0x00000c(%ebx)
		cmp    $0x000069,%dl
		jb     _08c598_jump
		jbe    _08c5e9_jump
		cmp    $0x000075,%dl
		jb     _08c593_jump
		jbe    _08c5a6_jump
		cmp    $0x000078,%dl

	_08c58c_jump:
		je     _08c5a6_jump
		jmp    _08c5f3_jump

	_08c593_jump:
		cmp    $0x00006f,%dl
		jmp    _08c58c_jump

	_08c598_jump:
		cmp    $0x000058,%dl
		jb     _08c5f3_jump
		jbe    _08c5a6_jump
		cmp    $0x000064,%dl
		je     _08c5e9_jump
		jmp    _08c5f3_jump

	_08c5a6_jump:
		mov    0x000014(%esi),%dl
		and    $0x000020,%dl
		and    $0x0000ff,%edx
		je     _08c5c0_jump
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%ebp
		jmp    _08c5e5_jump

	_08c5c0_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _08c5db_jump
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		movzwl -0x000004(%ebp),%ebp
		jmp    _08c5e5_jump

	_08c5db_jump:
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    -0x000004(%ebx),%ebp

	_08c5e5_jump:
		andb   $0x0000f9,0x000014(%esi)

	_08c5e9_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		je     _08c5f3_jump
		movb   $0x000020,0x000016(%esi)

	_08c5f3_jump:
		mov    0x000015(%esi),%dl
		mov    $0x00000a,%ebx
		cmp    $0x000065,%dl
		jb     _08c660_jump
		jbe    _08c6e0_jump
		cmp    $0x00006f,%dl
		jb     _08c647_jump
		jbe    _08c6f6_jump
		cmp    $0x000073,%dl
		jb     _08c639_jump
		jbe    _08c78b_jump
		cmp    $0x000075,%dl
		jb     _08c95d_jump
		jbe    _08c877_jump
		cmp    $0x000078,%dl
		je     _08c854_jump
		jmp    _08c95d_jump

	_08c639_jump:
		cmp    $0x000070,%dl
		je     _08c89a_jump
		jmp    _08c95d_jump

	_08c647_jump:
		cmp    $0x000067,%dl
		jb     _08c6ae_jump
		jbe    _08c6e0_jump
		cmp    $0x000069,%dl
		je     _08c73a_jump
		jmp    _08c95d_jump

	_08c660_jump:
		cmp    $0x000050,%dl
		jb     _08c698_jump
		jbe    _08c89a_jump
		cmp    $0x000058,%dl
		jb     _08c68a_jump
		jbe    _08c854_jump
		cmp    $0x000063,%dl
		jb     _08c95d_jump
		jbe    _08c931_jump
		jmp    _08c73a_jump

	_08c68a_jump:
		cmp    $0x000053,%dl
		je     _08c78b_jump
		jmp    _08c95d_jump

	_08c698_jump:
		cmp    $0x000046,%dl
		jb     _08c6a9_jump
		jbe    _08c6ae_jump
		cmp    $0x000047,%dl

	_08c6a2_jump:
		je     _08c6e0_jump
		jmp    _08c95d_jump

	_08c6a9_jump:
		cmp    $0x000045,%dl
		jmp    _08c6a2_jump

	_08c6ae_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _08c6e0_jump
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    %edi,%eax
		mov    -0x000004(%ebx),%edx
		mov    %esi,%ebx
		call   _08c453_func
		mov    $0xffffffff,%ebx
		mov    %ds,%eax
		mov    %ds,%edx
		mov    %eax,%es
		mov    %edi,%eax
		mov    %edi,%ecx
		jmp    _08c730_jump

	_08c6e0_jump:
		mov    %esi,%ebx
		mov    %eax,%edx
		mov    %edi,%eax
		call   _08c548_func
		mov    $0xffffffff,%ebx
		mov    %edx,%es
		mov    %eax,%ecx
		jmp    _08c730_jump

	_08c6f6_jump:
		mov    0x000014(%esi),%al
		mov    $0x000008,%ebx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _08c70b_jump
		movb   $0x000030,(%edi)
		inc    %edi

	_08c70b_jump:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _0873e0_func

	_08c714_jump:
		cmpl   $0x000000,0x000008(%esi)
		jne    _08c727_jump
		xor    %eax,%eax
		mov    (%edi),%al
		cmp    $0x000030,%eax
		jne    _08c727_jump
		movb   $0x000000,%es:(%ecx)

	_08c727_jump:
		mov    $0xffffffff,%ebx
		mov    %es,%edx
		mov    %ecx,%eax

	_08c730_jump:
		call   _08c3ae_func
		jmp    _08c986_jump

	_08c73a_jump:
		mov    0x000014(%esi),%dl
		and    $0x000020,%dl
		and    $0x0000ff,%edx
		je     _08c75b_jump
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%eax
		mov    %edi,%edx

	_08c754_jump:
		call   _0873e0_func
		jmp    _08c714_jump

	_08c75b_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _08c778_jump
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		mov    %edi,%edx
		movswl -0x000004(%ebp),%eax
		jmp    _08c754_jump

	_08c778_jump:
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%eax
		mov    %edi,%edx
		call   _08b918_func
		jmp    _08c714_jump

	_08c78b_jump:
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		and    $0x0000ff,%edx
		je     _08c7bc_jump
		mov    (%eax),%edi
		add    $0x000008,%edi
		mov    %edi,(%eax)
		mov    -0x000008(%edi),%ecx
		mov    -0x000004(%edi),%dx
		test   %ecx,%ecx
		jne    _08c7b0_jump
		test   %dx,%dx
		je     _08c7b4_jump

	_08c7b0_jump:
		mov    %edx,%es
		jmp    _08c7f2_jump

	_08c7b4_jump:
		mov    %ds,%eax
		mov    0x000004(%esp),%ecx
		jmp    _08c7f0_jump

	_08c7bc_jump:
		mov    0x000014(%esi),%dl
		and    $0x000040,%dl
		and    $0x0000ff,%edx
		je     _08c7dc_jump
		mov    (%eax),%ecx
		add    $0x000004,%ecx
		mov    %ecx,(%eax)
		mov    -0x000004(%ecx),%ecx
		test   %ecx,%ecx
		je     _08c7b4_jump

	_08c7d8_jump:
		mov    %ds,%eax
		jmp    _08c7f0_jump

	_08c7dc_jump:
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    -0x000004(%ebx),%ecx
		test   %ecx,%ecx
		jne    _08c7d8_jump
		mov    %ds,%eax
		mov    0x000004(%esp),%ecx

	_08c7f0_jump:
		mov    %eax,%es

	_08c7f2_jump:
		mov    0x000014(%esi),%bl
		xor    %ebp,%ebp
		xor    %eax,%eax
		and    $0x0000f9,%bl
		mov    %ebp,(%esp)
		mov    0x000015(%esi),%al
		mov    %bl,0x000014(%esi)
		cmp    $0x000053,%eax
		jne    _08c82c_jump
		mov    %bl,%al
		and    $0x000020,%al
		and    $0x0000ff,%eax
		je     _08c823_jump
		xor    %eax,%eax
		mov    %es:(%ecx),%ax
		add    $0x000002,%ecx
		jmp    _08c986_jump

	_08c823_jump:
		mov    %es:(%ecx),%al
		inc    %ecx
		jmp    _08c986_jump

	_08c82c_jump:
		mov    %bl,%al
		and    $0x000020,%al
		and    $0x0000ff,%eax
		je     _08c848_jump
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		call   _08c3d2_func
		jmp    _08c986_jump

	_08c848_jump:
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		jmp    _08c730_jump

	_08c854_jump:
		mov    0x000014(%esi),%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _08c872_jump
		test   %ebp,%ebp
		je     _08c872_jump
		movb   $0x000030,0x000017(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000019(%esi)
		mov    %al,0x000018(%esi)

	_08c872_jump:
		mov    $0x000010,%ebx

	_08c877_jump:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _087396_func
		xor    %eax,%eax
		mov    0x000015(%esi),%al
		cmp    $0x000058,%eax
		jne    _08c714_jump
		mov    %edi,%eax
		call   _08ca38_func
		jmp    _08c714_jump

	_08c89a_jump:
		cmpl   $0x000000,0x000004(%esi)
		jne    _08c8be_jump
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		and    $0x0000ff,%edx
		je     _08c8b7_jump
		movl   $0x00000d,0x000004(%esi)
		jmp    _08c8be_jump

	_08c8b7_jump:
		movl   $0x000008,0x000004(%esi)

	_08c8be_jump:
		andb   $0x0000f9,0x000014(%esi)
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		mov    %dl,0x000008(%esp)
		xor    %edx,%edx
		mov    0x000008(%esp),%dl
		mov    -0x000004(%ebx),%ebp
		test   %edx,%edx
		je     _08c909_jump
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    %edi,%edx
		mov    -0x000004(%ebx),%eax
		mov    $0x000004,%ebx
		and    $0x00ffff,%eax
		call   _08c3f5_func
		mov    $0x000008,%ebx
		lea    0x000005(%edi),%edx
		mov    %ebp,%eax
		movb   $0x00003a,0x000004(%edi)
		jmp    _08c912_jump

	_08c909_jump:
		mov    $0x000008,%ebx
		mov    %edi,%edx
		mov    %ebp,%eax

	_08c912_jump:
		call   _08c3f5_func
		xor    %eax,%eax
		mov    0x000015(%esi),%al
		cmp    $0x000050,%eax
		jne    _08c727_jump
		mov    %edi,%eax
		call   _08ca38_func
		jmp    _08c727_jump

	_08c931_jump:
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		mov    -0x000004(%ebp),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    0x000014(%esi),%dh
		xor    %eax,%eax
		and    $0x0000f9,%dh
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		mov    %dh,0x000014(%esi)
		jmp    _08c986_jump

	_08c95d_jump:
		movl   $0x000000,0x000004(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    0x000014(%esi),%al
		xor    %edi,%edi
		and    $0x0000f9,%al
		mov    %edi,(%esp)
		mov    %al,0x000014(%esi)
		mov    $0x000001,%eax

	_08c986_jump:
		cmpl   $0x000000,(%esp)
		je     _08c9db_jump
		xor    %edx,%edx
		mov    %es:(%ecx),%dl
		cmp    $0x00002d,%edx
		jne    _08c99e_jump
		inc    %ecx
		movb   $0x00002d,0x000017(%esi)
		dec    %eax
		jmp    _08c9c4_jump

	_08c99e_jump:
		mov    0x000014(%esi),%dl
		and    $0x000002,%dl
		and    $0x0000ff,%edx
		je     _08c9b2_jump
		movb   $0x000020,0x000017(%esi)
		jmp    _08c9c4_jump

	_08c9b2_jump:
		mov    0x000014(%esi),%dl
		and    $0x000004,%dl
		and    $0x0000ff,%edx
		je     _08c9c8_jump
		movb   $0x00002b,0x000017(%esi)

	_08c9c4_jump:
		movb   $0x000000,0x000018(%esi)

	_08c9c8_jump:
		mov    0x000008(%esi),%edx
		cmp    %edx,%eax
		jle    _08c9d4_jump
		mov    %eax,0x000008(%esi)
		jmp    _08c9db_jump

	_08c9d4_jump:
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    %ebx,0x00000c(%esi)

	_08c9db_jump:
		xor    %edx,%edx
		mov    0x000016(%esi),%dl
		cmp    $0x00002a,%edx
		jne    _08c9f2_jump
		mov    0x000014(%esi),%dl
		movb   $0x000000,0x000017(%esi)
		and    $0x0000f9,%dl
		mov    %dl,0x000014(%esi)

	_08c9f2_jump:
		mov    0x000008(%esi),%ebx
		cmp    $0xffffffff,%ebx
		je     _08c9fe_jump
		cmp    %ebx,%eax
		jge    _08ca0b_jump

	_08c9fe_jump:
		xor    %edx,%edx
		mov    0x000015(%esi),%dl
		cmp    $0x000063,%edx
		je     _08ca0b_jump
		mov    %eax,0x000008(%esi)

	_08ca0b_jump:
		mov    $0xffffffff,%ebx
		lea    0x000017(%esi),%eax
		mov    %ds,%edx
		call   _08c3ae_func
		mov    0x000008(%esi),%ebp
		mov    0x00000c(%esi),%edx
		add    %ebp,%eax
		mov    0x000004(%esi),%ebx
		add    %edx,%eax
		mov    %es,%edx
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x000004(%esi)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_08ca38_func:
		push   %edx
		mov    %eax,%edx

	_08ca3b_jump:
		cmpb   $0x000000,(%edx)
		je     _08ca4e_jump
		xor    %eax,%eax
		mov    (%edx),%al
		call   _08b89b_func
		mov    %al,(%edx)
		inc    %edx
		jmp    _08ca3b_jump

	_08ca4e_jump:
		pop    %edx
		ret    



_08ca50_func:
		push   %ebx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    (%ebx),%edx
		call   _086b49_func
		incl   0x000010(%ebx)
		pop    %ebx
		ret    



_08ca61_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0x00000c(%eax),%ebp
		mov    0x00000c(%eax),%ah
		mov    0x000008(%esi),%ecx
		and    $0x0000cf,%ah
		and    $0x000030,%ebp
		mov    %ah,0x00000c(%esi)
		test   %ecx,%ecx
		jne    _08ca84_jump
		mov    %esi,%eax
		call   _08d444_func

	_08ca84_jump:
		mov    0x00000d(%esi),%cl
		xor    %edi,%edi
		test   $0x000004,%cl
		je     _08ca9f_jump
		mov    %cl,%ch
		and    $0x0000fa,%ch
		mov    %ch,%al
		or     $0x000001,%al
		mov    $0x000001,%edi
		mov    %al,0x00000d(%esi)

	_08ca9f_jump:
		mov    $_08ca50_func,%ecx
		mov    %esi,%eax
		call   _08be72_func
		mov    %eax,%edx
		test   %edi,%edi
		je     _08cac6_jump
		mov    0x00000d(%esi),%ah
		and    $0x0000fa,%ah
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x00000d(%esi)
		call   _08d35a_func

	_08cac6_jump:
		testb  $0x000020,0x00000c(%esi)
		je     _08cad1_jump
		mov    $0xffffffff,%edx

	_08cad1_jump:
		mov    0x00000c(%esi),%edi
		or     %ebp,%edi
		mov    %edx,%eax
		mov    %edi,0x00000c(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08cae0_func:
		push   %ebp
		push   %es
		push   %ebx
		push   %ds
		push   %edx
		call   _08cb18_func
		push   %ds
		push   %edi
		mov    %esp,%ebp
		mov    0x000008(%ebp),%edi
		mov    0x00000c(%ebp),%ds
		mov    %eax,(%edi)
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edx,0x00000c(%edi)
		mov    %esi,0x000010(%edi)
		popl   0x000014(%edi)
		sbb    %eax,%eax
		mov    %eax,0x000018(%edi)
		pop    %eax
		pop    %ebx
		pop    %ebx
		pop    %ebx
		mov    %ax,0x000006(%ebx)
		data16 mov %es,(%ebx)
		pop    %es
		pop    %ebp
		ret    



_08cb18_func:
		lea    (%esi,%esi,2),%esi
		lea    %cs:_08cbbe_jump(%esi),%eax
		push   %eax
		mov    (%ebx),%es
		mov    0x000006(%ebx),%bp
		mov    (%edi),%eax
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%ecx
		mov    0x00000c(%edi),%edx
		mov    0x000010(%edi),%esi
		mov    0x000014(%edi),%edi
		mov    %ebp,%ds
		ret    

	_08cb3d_jump:
		pusha  
		push   %gs
		push   %fs
		push   %es
		push   %ds
		push   %edx
		call   _08cb8a_func
		push   %ebx
		push   %ds
		push   %ebp
		mov    %esp,%ebp
		mov    0x00000c(%ebp),%ebx
		mov    0x000010(%ebp),%ds
		mov    %eax,(%ebx)
		pushf  
		pop    %eax
		mov    %ax,0x000024(%ebx)
		mov    %ecx,0x000008(%ebx)
		mov    %edx,0x00000c(%ebx)
		mov    %esi,0x000014(%ebx)
		mov    %edi,0x000018(%ebx)
		popl   0x000010(%ebx)
		pop    %eax
		mov    %ax,0x00001c(%ebx)
		popl   0x000004(%ebx)
		data16 mov %es,0x00001e(%ebx)
		data16 mov %fs,0x000020(%ebx)
		data16 mov %gs,0x000022(%ebx)
		add    $0x000008,%esp
		pop    %es
		pop    %fs
		pop    %gs
		popa   
		ret    



_08cb8a_func:
		and    $0x0000ff,%eax
		lea    (%eax,%eax,2),%eax
		lea    %cs:_08cbbe_jump(%eax),%eax
		push   %eax
		mov    %edx,%ebx
		pushl  0x00001c(%ebx)
		mov    (%ebx),%eax
		mov    0x000008(%ebx),%ecx
		mov    0x00000c(%ebx),%edx
		mov    0x000014(%ebx),%esi
		mov    0x000018(%ebx),%edi
		mov    0x000010(%ebx),%ebp
		mov    0x00001e(%ebx),%es
		mov    0x000020(%ebx),%fs
		mov    0x000022(%ebx),%gs
		mov    0x000004(%ebx),%ebx
		pop    %ds
		ret    

	_08cbbe_jump:
		int    $0x000000
		ret    

	_08cebe_jump:
		sub    %edx,%edx

	_08cec0_jump:
		sub    %eax,%eax
		ret    

	_08cecf_jump:
		mov    $0x000083,%eax
		call   _0907fa_func
		jmp    _08ceec_jump

	_08cedb_jump:
		push   %eax
		call   _08d209_func
		mov    $0x000084,%eax
		call   _0907fa_func
		pop    %eax

	_08ceec_jump:
		and    $0x80000000,%eax
		or     $0x7ff00000,%eax
		mov    %eax,%edx
		sub    %eax,%eax
		ret    

	_08cefb_jump:
		mov    $0x000083,%eax
		call   _0907fa_func
		jmp    _08cf18_jump

	_08cf07_jump:
		push   %eax
		call   _08d209_func
		mov    $0x000084,%eax
		call   _0907fa_func
		pop    %eax

	_08cf18_jump:
		and    $0x80000000,%eax
		or     $0x7f800000,%eax
		ret    



_08cf23_func:
		push   %edx
		push   %ebp
		mov    %esp,%ebp
		mov    _0abbd4_data,%edx
		add    $0x000003,%edx
		and    $0x0000fc,%dl
		call   _08e57f_func
		cmp    %eax,%edx
		jae    _08cf44_jump
		mov    %edx,%eax
		sub    %eax,%esp
		mov    %esp,%eax
		jmp    _08cf46_jump

	_08cf44_jump:
		xor    %eax,%eax

	_08cf46_jump:
		mov    _0abbd4_data,%edx
		add    %edx,%eax
		mov    %eax,_0abbd8_data
		call   _090801_func
		mov    _0e1010_data,%edx
		mov    _0e100c_data,%eax
		call   _01187c_func
		call   _085464_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edx
		ret    



_08cf72_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %edx
		push   %es
		mov    %eax,%edx

	_08cf79_jump:
		ds mov $_0adec8_data,%esi
		ds mov $_0adefe_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_08cf89_jump:
		cmp    %edi,%esi
		jae    _08cfa1_jump
		cmpb   $0x000002,(%esi)
		je     _08cf9c_jump
		cmp    %al,0x000001(%esi)
		ja     _08cf9c_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_08cf9c_jump:
		add    $0x000006,%esi
		jmp    _08cf89_jump

	_08cfa1_jump:
		cmp    %edi,%ebx
		je     _08cfb7_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _08cfb2_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_08cfb2_jump:
		movb   $0x000002,(%ebx)
		jmp    _08cf79_jump

	_08cfb7_jump:
		pop    %es
		pop    %edx
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_08cfbd_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %es
		mov    %dl,%dh
		mov    %al,%dl

	_08cfc5_jump:
		ds mov $_0adefe_data,%esi
		ds mov $_0adf04_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_08cfd5_jump:
		cmp    %edi,%esi
		jae    _08cfed_jump
		cmpb   $0x000002,(%esi)
		je     _08cfe8_jump
		cmp    0x000001(%esi),%al
		ja     _08cfe8_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_08cfe8_jump:
		add    $0x000006,%esi
		jmp    _08cfd5_jump

	_08cfed_jump:
		cmp    %edi,%ebx
		je     _08d007_jump
		cmp    %dh,%al
		ja     _08d002_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _08d002_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_08d002_jump:
		movb   $0x000002,(%ebx)
		jmp    _08cfc5_jump

	_08d007_jump:
		pop    %es
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_08d00c_func:
		ret    



_08d00d_func:
		push   %ebx
		push   %edx
		mov    $_09086a_func,%edx
		mov    $_0909b3_func,%ebx
		mov    %edx,_0adda4_data
		mov    %ebx,_0adda8_data
		pop    %edx
		pop    %ebx
		ret    



_08d028_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %esp,%ebx
		mov    _0abbc0_data,%eax
		xor    %edx,%edx
		call   _08d0e9_func
		mov    (%esp),%ecx
		inc    %eax
		mov    _0abbc0_data,%edx
		mov    %eax,0x000008(%esp)
		sub    %edx,%ecx
		shl    $0x000002,%eax
		inc    %ecx
		mov    %eax,0x000004(%esp)
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _08bcf5_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _08d0c2_jump
		mov    %esp,%ebx
		mov    _0abbc0_data,%esi
		add    %ecx,%eax
		mov    %ebp,%edi
		mov    %eax,_0ab980_data
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    _0ab980_data,%ecx
		mov    _0abbc4_data,%eax
		lea    0x000004(%ecx),%edx
		mov    %eax,(%ecx)
		mov    %ebp,%eax
		mov    0x000004(%esp),%esi
		call   _08d0e9_func
		mov    _0ab980_data,%ecx
		mov    0x000008(%esp),%eax
		add    %esi,%ecx
		mov    %eax,_0ab97c_data
		movl   $0x000000,(%ecx)
		jmp    _08d0cc_jump

	_08d0c2_jump:
		mov    %eax,_0ab980_data
		mov    %eax,_0ab97c_data

	_08d0cc_jump:
		mov    0x000008(%esp),%eax
		mov    %eax,_0e100c_data
		mov    _0ab980_data,%eax
		mov    %eax,_0e1010_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08d0e9_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e1014_data,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		xor    %edx,%edx
		mov    %edx,0x000004(%esp)

	_08d100_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000020,%ebx
		je     _08d10e_jump
		cmp    $0x000009,%ebx
		jne    _08d111_jump

	_08d10e_jump:
		inc    %eax
		jmp    _08d100_jump

	_08d111_jump:
		test   %bl,%bl
		je     _08d1e3_jump
		xor    %dl,%dl
		cmp    $0x000022,%ebx
		jne    _08d123_jump
		mov    $0x000001,%dl
		inc    %eax

	_08d123_jump:
		mov    %eax,(%esp)
		mov    %eax,%ebx

	_08d128_jump:
		xor    %ecx,%ecx
		mov    (%eax),%cl
		cmp    $0x000022,%ecx
		jne    _08d151_jump
		cmp    $0x000001,%dl
		je     _08d1b0_jump
		test   %esi,%esi
		jne    _08d151_jump
		test   %dl,%dl
		jne    _08d147_jump
		mov    $0x000002,%dl

	_08d144_jump:
		inc    %eax
		jmp    _08d128_jump

	_08d147_jump:
		cmp    $0x000002,%dl
		jne    _08d151_jump
		inc    %eax
		xor    %dl,%dl
		jmp    _08d128_jump

	_08d151_jump:
		xor    %ecx,%ecx
		mov    (%eax),%cl
		cmp    $0x000020,%ecx
		je     _08d15f_jump
		cmp    $0x000009,%ecx
		jne    _08d163_jump

	_08d15f_jump:
		test   %dl,%dl
		je     _08d1b0_jump

	_08d163_jump:
		mov    (%eax),%dh
		test   %dh,%dh
		je     _08d1b0_jump
		xor    %ecx,%ecx
		mov    %dh,%cl
		cmp    $0x00005c,%ecx
		jne    _08d1a1_jump
		test   %esi,%esi
		jne    _08d182_jump
		xor    %ecx,%ecx
		mov    0x000001(%eax),%cl
		cmp    $0x000022,%ecx

	_08d17e_jump:
		jne    _08d1a1_jump
		jmp    _08d1a0_jump

	_08d182_jump:
		cmp    $0x000001,%dl
		jne    _08d196_jump
		xor    %ecx,%ecx
		mov    0x000001(%eax),%cl
		cmp    $0x000022,%ecx
		je     _08d1a0_jump
		cmp    $0x00005c,%ecx
		jmp    _08d17e_jump

	_08d196_jump:
		xor    %ecx,%ecx
		mov    0x000001(%eax),%cl
		cmp    $0x000022,%ecx
		jne    _08d1a1_jump

	_08d1a0_jump:
		inc    %eax

	_08d1a1_jump:
		test   %edi,%edi
		je     _08d144_jump
		mov    (%eax),%cl
		inc    %eax
		mov    %cl,(%ebx)
		inc    %ebx
		jmp    _08d128_jump

	_08d1b0_jump:
		test   %edi,%edi
		je     _08d1d6_jump
		mov    0x000004(%esp),%ecx
		mov    (%esp),%edx
		mov    %edx,(%edi,%ecx,4)
		inc    %ecx
		mov    %ecx,0x000004(%esp)
		mov    (%eax),%cl
		test   %cl,%cl
		jne    _08d1cd_jump
		mov    %cl,(%ebx)
		jmp    _08d1e3_jump

	_08d1cd_jump:
		inc    %eax
		movb   $0x000000,(%ebx)
		jmp    _08d100_jump

	_08d1d6_jump:
		incl   0x000004(%esp)
		cmpb   $0x000000,(%eax)
		jne    _08d10e_jump

	_08d1e3_jump:
		mov    %eax,0x000000(%ebp)
		mov    0x000004(%esp),%eax
		mov    %esi,_0e1014_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08d1f8_func:
		mov    $0x00000d,%eax



_08d1fd_func:
		push   %edx
		mov    %eax,%edx
		call   _08d52f_func
		mov    %edx,(%eax)
		pop    %edx
		ret    



_08d209_func:
		mov    $0x00000e,%eax
		jmp    _08d1fd_func



_08d220_func:
		push   %edx
		mov    %eax,%edx
		call   _08d535_func
		mov    %edx,(%eax)
		pop    %edx
		ret    



_08d22c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e0fec_data,%esi
		test   %esi,%esi
		je     _08d254_jump
		mov    0x000004(%esi),%ecx
		mov    0x00000c(%ecx),%edi
		mov    (%esi),%eax
		and    $0x004003,%edi
		mov    %eax,_0e0fec_data
		or     $0x000003,%di
		jmp    _08d29b_jump

	_08d254_jump:
		mov    $_0ab994_data,%ecx
		jmp    _08d27b_jump

	_08d25b_jump:
		testb  $0x000003,0x00000c(%ecx)
		jne    _08d278_jump
		mov    $0x000008,%eax
		call   _08bcf5_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _08d2c0_jump
		mov    $0x000003,%edi
		jmp    _08d29b_jump

	_08d278_jump:
		add    $0x00001a,%ecx

	_08d27b_jump:
		cmp    $_0abb9c_data,%ecx
		jb     _08d25b_jump
		mov    $0x000022,%eax
		mov    $0x004003,%edi
		call   _08bcf5_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _08d2c0_jump
		lea    0x000008(%eax),%ecx

	_08d29b_jump:
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _085360_func
		mov    %edi,0x00000c(%ecx)
		mov    _0e0ff4_data,%eax
		mov    %ecx,0x000004(%esi)
		mov    %esi,_0e0ff4_data
		mov    %eax,(%esi)
		mov    %ecx,%eax
		jmp    _08d2cc_jump

	_08d2c0_jump:
		mov    $0x000005,%eax
		call   _08d1fd_func
		xor    %eax,%eax

	_08d2cc_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08d2d2_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_0e0ff4_data,%edx

	_08d2dc_jump:
		mov    (%edx),%eax
		test   %eax,%eax
		je     _08d307_jump
		mov    0x000004(%eax),%ecx
		cmp    %ecx,%ebx
		je     _08d2ed_jump
		mov    %eax,%edx
		jmp    _08d2dc_jump

	_08d2ed_jump:
		mov    0x00000c(%ecx),%cl
		or     $0x000003,%cl
		mov    %cl,0x00000c(%ebx)
		mov    (%eax),%ebx
		mov    %ebx,(%edx)
		mov    _0e0fec_data,%edx
		mov    %eax,_0e0fec_data
		mov    %edx,(%eax)

	_08d307_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08d30b_jump:
		push   %edx

	_08d30c_jump:
		mov    _0e0fec_data,%edx
		test   %edx,%edx
		je     _08d327_jump
		mov    %edx,%eax
		mov    (%edx),%edx
		call   _08bdf0_func
		mov    %edx,_0e0fec_data
		jmp    _08d30c_jump

	_08d327_jump:
		pop    %edx
		ret    



_08d329_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		testb  $0x000020,0x00000d(%eax)
		jne    _08d356_jump
		mov    0x000010(%edx),%eax
		call   _08e3e0_func
		test   %eax,%eax
		je     _08d356_jump
		mov    0x00000d(%edx),%bl
		or     $0x000020,%bl
		mov    %bl,0x00000d(%edx)
		test   $0x000007,%bl
		jne    _08d356_jump
		mov    %bl,%cl
		or     $0x000002,%cl
		mov    %cl,0x00000d(%edx)

	_08d356_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08d35a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    0x00000d(%eax),%ah
		xor    %ebp,%ebp
		test   $0x000010,%ah
		je     _08d3e6_jump
		mov    0x00000d(%ecx),%bh
		and    $0x0000ef,%bh
		mov    0x00000c(%ecx),%al
		mov    %bh,0x00000d(%ecx)
		test   $0x000002,%al
		je     _08d41e_jump
		mov    0x000008(%ecx),%ebx
		test   %ebx,%ebx
		je     _08d41e_jump
		mov    %ebx,%edi
		mov    0x000004(%ecx),%esi

	_08d394_jump:
		test   %esi,%esi
		je     _08d41e_jump
		test   %ebp,%ebp
		jne    _08d41e_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    0x000010(%ecx),%eax
		call   _08d4bb_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		jne    _08d3c4_jump
		mov    0x00000c(%ecx),%bl
		or     $0x000020,%bl
		mov    %eax,%ebp
		mov    %bl,0x00000c(%ecx)
		jmp    _08d3e0_jump

	_08d3c4_jump:
		test   %eax,%eax
		jne    _08d3e0_jump
		mov    $0x00000c,%eax
		call   _08d1fd_func
		mov    0x00000c(%ecx),%ah
		or     $0x000020,%ah
		mov    $0xffffffff,%ebp
		mov    %ah,0x00000c(%ecx)

	_08d3e0_jump:
		add    %edx,%edi
		sub    %edx,%esi
		jmp    _08d394_jump

	_08d3e6_jump:
		cmpl   $0x000000,0x000008(%ecx)
		je     _08d41e_jump
		andb   $0x0000ef,0x00000c(%ecx)
		testb  $0x000020,0x00000d(%ecx)
		jne    _08d41e_jump
		mov    0x000004(%ecx),%eax
		test   %eax,%eax
		je     _08d40e_jump
		mov    %eax,%edx
		mov    $0x000001,%ebx
		neg    %edx
		mov    0x000010(%ecx),%eax
		call   _08744e_func

	_08d40e_jump:
		cmp    $0xffffffff,%eax
		jne    _08d41e_jump
		mov    0x00000c(%ecx),%bl
		or     $0x000020,%bl
		mov    %eax,%ebp
		mov    %bl,0x00000c(%ecx)

	_08d41e_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)
		mov    %ebp,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08d433_func:
		push   %ebx
		push   %edx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _08744e_func
		pop    %edx
		pop    %ebx
		ret    



_08d444_func:
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _08d329_func
		cmpl   $0x000000,0x000014(%edx)
		jne    _08d479_jump
		mov    0x00000d(%edx),%ah
		test   $0x000002,%ah
		je     _08d464_jump
		movl   $0x000086,0x000014(%edx)
		jmp    _08d479_jump

	_08d464_jump:
		test   $0x000004,%ah
		je     _08d472_jump
		movl   $0x000001,0x000014(%edx)
		jmp    _08d479_jump

	_08d472_jump:
		movl   $0x001000,0x000014(%edx)

	_08d479_jump:
		mov    0x000014(%edx),%eax
		call   _08bcf5_func
		mov    %eax,0x000008(%edx)
		test   %eax,%eax
		jne    _08d4a8_jump
		mov    0x00000d(%edx),%cl
		movl   $0x000001,0x000014(%edx)
		and    $0x0000f8,%cl
		lea    0x000018(%edx),%eax
		mov    %cl,0x00000d(%edx)
		mov    %cl,%ch
		mov    %eax,0x000008(%edx)
		or     $0x000004,%ch
		mov    %ch,0x00000d(%edx)
		jmp    _08d4ac_jump

	_08d4a8_jump:
		orb    $0x000008,0x00000c(%edx)

	_08d4ac_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		pop    %edx
		pop    %ecx
		ret    



_08d4bb_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,%edi
		call   _08e483_func
		test   $0x000080,%al
		je     _08d500_jump
		mov    $0x000002,%al
		mov    %esi,%ebx
		xor    %edx,%edx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		rcl    %dx
		ror    %dx
		shl    $0x000010,%edx
		mov    %ax,%dx
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    _08d500_jump

	_08d4f3_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		call   _08e412_func
		jmp    _08d527_jump

	_08d500_jump:
		mov    %edi,%ecx
		mov    %ebp,%edx
		mov    %esi,%ebx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		mov    %eax,%edx
		test   %eax,%eax
		jl     _08d4f3_jump
		cmp    %edi,%eax
		je     _08d525_jump
		mov    $0x00000c,%eax
		call   _08d1fd_func

	_08d525_jump:
		mov    %edx,%eax

	_08d527_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08d52f_func:
		mov    $_0e0ff8_data,%eax
		ret    



_08d535_func:
		mov    $_0e0ffc_data,%eax
		ret    



_08d53b_func:
		mov    _0abbc8_data,%eax
		ret    



_08d541_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _08d563_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _08e4d8_func
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08d563_jump:
		mov    $0x000004,%eax
		call   _08d1fd_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08d576_func:
		push   %ecx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _08d593_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _08e412_func

	_08d593_jump:
		pop    %ecx
		ret    



_08d638_func:
		push   %ebx
		mov    %edx,%ebx
		call   _08d642_func
		pop    %ebx
		ret    



_08d642_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%ecx
		mov    (%edx),%eax
		mov    %eax,-0x000020(%ebp)
		mov    0x000004(%edx),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    (%ebx),%eax
		mov    %eax,-0x000018(%ebp)
		mov    0x000004(%ebx),%eax
		mov    %eax,-0x000014(%ebp)
		test   $0x000040,%cl
		je     _08d66e_jump
		mov    $0x000001,%esi
		jmp    _08d6a8_jump

	_08d66e_jump:
		test   $0x000080,%cl
		je     _08d67a_jump
		mov    $0x000002,%esi
		jmp    _08d6a8_jump

	_08d67a_jump:
		test   $0x000001,%ch
		je     _08d686_jump
		mov    $0x000003,%esi
		jmp    _08d6a8_jump

	_08d686_jump:
		test   $0x000008,%ch
		je     _08d692_jump
		mov    $0x000004,%esi
		jmp    _08d6a8_jump

	_08d692_jump:
		test   $0x000002,%ch
		je     _08d69e_jump
		mov    $0x000006,%esi
		jmp    _08d6a8_jump

	_08d69e_jump:
		test   $0x000004,%ch
		je     _08d6a8_jump
		mov    $0x000005,%esi

	_08d6a8_jump:
		mov    %ecx,%eax
		and    $0x00001f,%eax
		mov    _0abbf8_data(,%eax,4),%eax
		mov    %esi,-0x000028(%ebp)
		mov    %eax,-0x000024(%ebp)
		test   $0x000010,%ch
		je     _08d6d7_jump
		mov    _0a50fc_data,%eax
		mov    _0a5100_data,%edx
		call   _0869d6_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		jmp    _08d719_jump

	_08d6d7_jump:
		test   $0x000020,%ch
		je     _08d6e6_jump
		xor    %ecx,%ecx
		mov    %ecx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		jmp    _08d719_jump

	_08d6e6_jump:
		test   $0x000040,%ch
		je     _08d6fa_jump
		xor    %edx,%edx
		mov    $0x3ff00000,%ebx
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _08d719_jump

	_08d6fa_jump:
		test   $0x000080,%ch
		je     _08d70e_jump
		mov    _0a50fc_data,%eax
		mov    %eax,-0x000010(%ebp)
		mov    _0a5100_data,%eax
		jmp    _08d716_jump

	_08d70e_jump:
		mov    (%ebx),%eax
		mov    %eax,-0x000010(%ebp)
		mov    0x000004(%ebx),%eax

	_08d716_jump:
		mov    %eax,-0x00000c(%ebp)

	_08d719_jump:
		lea    -0x000028(%ebp),%eax
		call   _090af2_func
		lea    -0x000008(%ebp),%esp
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_08d728_func:
		push   %ebx
		sub    $0x00000c,%esp
		mov    %esp,%ebx
		call   _08d813_func
		mov    %esp,%eax
		call   _08d747_func
		mov    %esp,%eax
		call   _08d893_func
		add    $0x00000c,%esp
		pop    %ebx
		ret    



_08d746_func:
		ret    



_08d747_func:
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		or     %ebx,%ebx
		jne    _08d78d_jump
		or     %edx,%edx
		jne    _08d782_jump
		add    %cx,%cx
		je     _08d80d_jump

	_08d766_jump:
		movw   $0x00ffff,0x000008(%eax)
		movl   $0x000000,0x000004(%eax)
		movl   $0x000000,(%eax)

	_08d779_jump:
		orb    $0x0000c0,0x000007(%eax)
		jmp    _08d80d_jump

	_08d782_jump:
		cmp    $0x007fff,%cx
		je     _08d80d_jump

	_08d78d_jump:
		mov    %ecx,%edx
		and    $0x00007f,%dh
		cmp    $0x007fff,%dx
		je     _08d779_jump
		add    %cx,%cx
		jb     _08d779_jump
		shr    %cx
		je     _08d7aa_jump
		mov    0x000004(%eax),%edx
		add    %edx,%edx
		jae    _08d766_jump

	_08d7aa_jump:
		mov    0x000004(%eax),%edx
		sub    %edi,%edi
		push   %eax
		sub    $0x003fff,%cx
		sar    %cx
		jb     _08d7c0_jump
		shr    %edx
		rcr    %ebx
		rcr    %edi

	_08d7c0_jump:
		add    $0x003fff,%cx
		mov    %cx,0x000008(%eax)
		mov    %edx,%ecx
		mov    %ebx,%eax
		mov    %edx,%esi
		stc    
		rcr    %esi
		inc    %edx
		je     _08d7f3_jump
		dec    %edx

	_08d7d6_jump:
		div    %esi
		dec    %esi
		cmp    %eax,%esi
		jbe    _08d7e8_jump
		inc    %esi
		add    %eax,%esi
		rcr    %esi
		mov    %ecx,%edx
		mov    %ebx,%eax
		jmp    _08d7d6_jump

	_08d7e8_jump:
		inc    %esi
		mov    %eax,%ecx
		mov    %edi,%eax
		div    %esi
		add    %ecx,%esi
		jmp    _08d7fc_jump

	_08d7f3_jump:
		cmp    %esi,%eax
		je     _08d805_jump
		xchg   %eax,%edx
		mov    %edi,%eax
		div    %esi

	_08d7fc_jump:
		sub    %edx,%edx
		stc    
		rcr    %esi
		rcr    %eax
		adc    %edx,%eax

	_08d805_jump:
		adc    %esi,%edx
		pop    %esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)

	_08d80d_jump:
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret    



_08d813_func:
		push   %ecx
		mov    %edx,%ecx
		shld   $0x00000b,%eax,%edx
		shl    $0x00000b,%eax
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		je     _08d85e_jump
		cmp    $0x0007ff,%cx
		je     _08d835_jump
		add    $0x003c00,%cx
		jmp    _08d856_jump

	_08d835_jump:
		mov    $0x007fff,%cx
		test   $0x7fffffff,%edx
		jne    _08d843_jump
		or     %eax,%eax

	_08d843_jump:
		je     _08d856_jump
		push   %eax
		mov    $0x000001,%al
		mov    $0x000081,%ah
		call   _08d746_func
		pop    %eax
		or     $0x40000000,%edx

	_08d856_jump:
		or     $0x80000000,%edx
		jmp    _08d883_jump

	_08d85e_jump:
		or     %edx,%edx
		jne    _08d86a_jump
		or     %eax,%eax
		jne    _08d86a_jump
		sub    %ecx,%ecx
		jmp    _08d883_jump

	_08d86a_jump:
		mov    $0x003c01,%cx
		or     %edx,%edx
		jne    _08d877_jump
		xchg   %eax,%edx
		sub    $0x000020,%cx

	_08d877_jump:
		or     %edx,%edx
		js     _08d883_jump
		add    %eax,%eax
		adc    %edx,%edx
		dec    %cx
		jmp    _08d877_jump

	_08d883_jump:
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		add    %ecx,%ecx
		rcr    %cx
		mov    %cx,0x000008(%ebx)
		pop    %ecx
		ret    



_08d893_func:
		push   %ecx
		push   %ebx
		push   %esi
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%eax
		mov    $0xfffff800,%esi
		mov    %eax,%ebx
		shl    $0x000016,%ebx
		jae    _08d8c0_jump
		jne    _08d8af_jump
		add    %esi,%esi

	_08d8af_jump:
		add    $0x000800,%eax
		adc    $0x000000,%edx
		jae    _08d8c0_jump
		mov    $0x80000000,%edx
		inc    %cx

	_08d8c0_jump:
		and    %esi,%eax
		mov    %ecx,%ebx
		and    $0x007fff,%cx
		add    $0x00c400,%cx
		cmp    $0x0007ff,%cx
		jae    _08d8f6_jump
		or     %cx,%cx
		jne    _08d8e5_jump
		shrd   $0x00000c,%edx,%eax
		add    %edx,%edx
		shr    $0x00000c,%edx
		jmp    _08d8ef_jump

	_08d8e5_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shrd   $0x00000b,%ecx,%edx

	_08d8ef_jump:
		add    %bx,%bx
		rcr    %edx
		jmp    _08d956_jump

	_08d8f6_jump:
		cmp    $0x00c400,%cx
		jb     _08d930_jump
		cmp    $0x00ffcc,%cx
		jl     _08d92a_jump
		sub    $0x00000c,%cx
		neg    %cx
		cmp    $0x000020,%cl
		jb     _08d918_jump
		sub    $0x000020,%cl
		mov    %eax,%esi
		mov    %edx,%eax
		sub    %edx,%edx

	_08d918_jump:
		shrd   %cl,%eax,%esi
		shrd   %cl,%edx,%eax
		shr    %cl,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		jmp    _08d92e_jump

	_08d92a_jump:
		sub    %eax,%eax
		sub    %edx,%edx

	_08d92e_jump:
		jmp    _08d956_jump

	_08d930_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shr    $0x00000b,%edx
		add    %bx,%bx
		rcr    %edx
		or     $0x7ff00000,%edx
		cmp    $0x0043ff,%cx
		je     _08d956_jump
		push   %eax
		mov    $0x000008,%al
		mov    $0x000084,%ah
		call   _08d746_func
		pop    %eax

	_08d956_jump:
		pop    %esi
		pop    %ebx
		pop    %ecx
		ret    



_08d95a_func:
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %ecx,(%esp)
		mov    %edx,0x000004(%esp)
		xor    %eax,%eax
		test   %edx,%edx
		je     _08d99f_jump
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		mov    0x000006(%esp),%edx
		and    $0x00ffff,%eax
		and    $0x00800f,%edx
		sar    $0x000004,%eax
		mov    %edx,%ecx
		mov    %dx,0x000006(%esp)
		or     $0x003fe0,%ecx
		sub    $0x0003fe,%eax
		mov    %cx,0x000006(%esp)

	_08d99f_jump:
		mov    0x000004(%esp),%edx
		mov    %eax,(%ebx)
		mov    (%esp),%eax
		add    $0x000008,%esp
		pop    %ecx
		ret    



_08d9ae_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %ecx
		push   %ebx
		push   %eax
		mov    0x000008(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    0x000010(%ebp),%ebx
		mov    0x000014(%ebp),%ecx
		or     %ecx,%ecx
		jne    _08d9da_jump
		sub    %eax,%eax
		mov    0x000018(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    0x00001c(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    %eax,0x000004(%ebx)
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    

	_08d9da_jump:
		push   %esi
		push   %edi
		push   %edx
		push   %ecx
		mov    %edx,%esi
		mov    %ecx,%edi
		and    $0x7ff00000,%esi
		and    $0x7ff00000,%edi
		and    $0x0fffff,%edx
		and    $0x0fffff,%ecx
		or     $0x100000,%edx
		or     $0x100000,%ecx
		sub    %edi,%esi
		jl     _08da72_jump
		sub    %edi,%edi

	_08da0c_jump:
		cmp    %edx,%ecx
		jne    _08da14_jump
		cmp    %eax,%ebx
		je     _08da16_jump

	_08da14_jump:
		jae    _08da1b_jump

	_08da16_jump:
		sub    %ebx,%eax
		sbb    %ecx,%edx
		stc    

	_08da1b_jump:
		adc    %edi,%edi
		sub    $0x100000,%esi
		jl     _08da3c_jump
		add    %eax,%eax
		adc    %edx,%edx
		cmp    $0x200000,%edx
		jae    _08da16_jump
		cmp    $0x100000,%edx
		jae    _08da0c_jump
		cmc    
		jmp    _08da1b_jump

	_08da3c_jump:
		sub    %esi,%esi
		or     %eax,%eax
		jne    _08da48_jump
		or     %edx,%edx
		jne    _08da48_jump
		jmp    _08da70_jump

	_08da48_jump:
		test   $0x200000,%edx
		jne    _08da5c_jump
		adc    %eax,%eax
		adc    %edx,%edx
		sub    $0x100000,%esi
		jmp    _08da48_jump

	_08da5c_jump:
		shr    %edx
		rcr    %eax
		add    $0x100000,%esi
		pop    %ecx
		push   %ecx
		and    $0x7ff00000,%ecx
		add    %ecx,%esi

	_08da70_jump:
		jmp    _08da76_jump

	_08da72_jump:
		add    %edi,%esi
		sub    %edi,%edi

	_08da76_jump:
		and    $0x0fffff,%edx
		add    %esi,%edx
		pop    %ecx
		pop    %esi
		and    $0x80000000,%esi
		or     %edx,%edx
		je     _08da8c_jump
		or     %esi,%edx

	_08da8c_jump:
		xor    %ecx,%esi
		jns    _08da92_jump
		neg    %edi

	_08da92_jump:
		mov    0x000018(%ebp),%esi
		mov    %edi,(%esi)
		mov    0x00001c(%ebp),%esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)
		pop    %edi
		pop    %esi
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    



_08daa7_func:
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,%esi
		mov    %ecx,%edi
		lea    0x000008(%ebx),%esi
		mov    (%ebx),%eax
		mov    0x000004(%ebx),%edx

	_08dab9_jump:
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		call   _085695_func
		mov    %esi,%ecx
		mov    (%ecx),%ebx
		mov    0x000004(%ecx),%ecx
		add    $0x000008,%esi
		call   _0854de_func
		dec    %edi
		jne    _08dab9_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_08dadc_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _085695_func
		mov    -0x00000c(%ebp),%ecx
		mov    -0x000010(%ebp),%ebx
		call   _08daa7_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _085695_func
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08db12_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000002,%al
		jmp    _08db22_jump



_08db1b_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000000,%al

	_08db22_jump:
		mov    %al,%dl
		fldt   _0abc58_data
		fldl   -0x000008(%ebp)
		ftst   
		fnstsw %ax
		and    $0x004100,%ax
		cmp    $0x000100,%ax
		jne    _08db44_jump
		fchs   
		cmp    $0x000000,%dl
		jne    _08db44_jump
		mov    $0x000004,%dl

	_08db44_jump:
		fprem  
		fnstsw %ax
		test   $0x000400,%ax
		jne    _08db44_jump
		mov    $0x000000,%al
		test   $0x000002,%ah
		je     _08db5b_jump
		or     $0x000001,%al
		fsub   %st(1),%st
		fchs   

	_08db5b_jump:
		test   $0x000040,%ah
		je     _08db62_jump
		or     $0x000002,%al

	_08db62_jump:
		test   $0x000001,%ah
		je     _08db69_jump
		add    $0x000004,%al

	_08db69_jump:
		fstp   %st(1)
		fptan  
		fld    %st(0)
		fmul   %st(0),%st
		fld    %st(2)
		fmul   %st(0),%st
		faddp  %st,%st(1)
		fsqrt  
		add    %dl,%al
		and    $0x000007,%al
		cmp    $0x000004,%al
		jl     _08db83_jump
		fchs   

	_08db83_jump:
		and    $0x000003,%al
		cmp    $0x000000,%al
		je     _08db8b_jump
		cmp    $0x000003,%al

	_08db8b_jump:
		jne    _08dba8_jump
		fstp   %st(1)
		testb  $0x000001,_0abc78_data
		jne    _08db9c_jump
		fdivrp %st,%st(1)
		jmp    _08dba6_jump

	_08db9c_jump:
		mov    $0x00000d,%eax
		call   _08dd7f_func

	_08dba6_jump:
		jmp    _08dbc1_jump

	_08dba8_jump:
		testb  $0x000001,_0abc78_data
		jne    _08dbb5_jump
		fdivrp %st,%st(1)
		jmp    _08dbbf_jump

	_08dbb5_jump:
		mov    $0x00000d,%eax
		call   _08dd7f_func

	_08dbbf_jump:
		fstp   %st(1)

	_08dbc1_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_08dc68_func:
		fldt   0x000010(%esp)
		fldt   0x000004(%esp)

	_08dc70_jump:
		mov    0x000008(%esp),%eax
		add    %eax,%eax
		jae    _08dd02_jump
		xor    $0xe000000,%eax
		test   $0xe000000,%eax
		je     _08dc8b_jump
		fdivrp %st,%st(1)
		ret    

	_08dc8b_jump:
		shr    $0x00001c,%eax
		cmpb   $0x000000,_0adf04_data(%eax)
		jne    _08dc9a_jump
		fdivrp %st,%st(1)
		ret    

	_08dc9a_jump:
		mov    0x00000c(%esp),%eax
		and    $0x007fff,%eax
		je     _08dd0c_jump
		cmp    $0x007fff,%eax
		je     _08dd0c_jump
		fnstcw 0x00001c(%esp)
		mov    0x00001c(%esp),%eax
		or     $0x00033f,%eax
		and    $0x00f3ff,%eax
		mov    %eax,0x000020(%esp)
		fldcw  0x000020(%esp)
		mov    0x000018(%esp),%eax
		and    $0x007fff,%eax
		cmp    $0x000001,%eax
		je     _08dceb_jump
		fmuls  _0adf14_data
		fxch   %st(1)
		fmuls  _0adf14_data
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    

	_08dceb_jump:
		fmuls  _0adf18_data
		fxch   %st(1)
		fmuls  _0adf18_data
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    

	_08dd02_jump:
		mov    0x000004(%esp),%eax
		or     0x000008(%esp),%eax
		jne    _08dd0f_jump

	_08dd0c_jump:
		fdivrp %st,%st(1)
		ret    

	_08dd0f_jump:
		mov    0x00000c(%esp),%eax
		and    $0x007fff,%eax
		jne    _08dd0c_jump
		fnstcw 0x00001c(%esp)
		mov    0x00001c(%esp),%eax
		or     $0x00033f,%eax
		and    $0x00f3ff,%eax
		mov    %eax,0x000020(%esp)
		fldcw  0x000020(%esp)
		mov    0x000018(%esp),%eax
		and    $0x007fff,%eax
		je     _08dd50_jump
		cmp    $0x007fff,%eax
		je     _08dd78_jump
		mov    0x000014(%esp),%eax
		add    %eax,%eax
		jae    _08dd78_jump
		jmp    _08dd58_jump

	_08dd50_jump:
		mov    0x000014(%esp),%eax
		add    %eax,%eax
		jb     _08dd78_jump

	_08dd58_jump:
		fxch   %st(1)
		fstp   %st(0)
		fld    %st(0)
		fmuls  _0adf1c_data
		fstpt  0x000004(%esp)
		fldt   0x000010(%esp)
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		jmp    _08dc70_jump

	_08dd78_jump:
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    



_08dd7f_func:
		sub    $0x00002c,%esp
		jmp    *_0adf20_data(,%eax,4)



_08dd89_func:
		fdiv   %st(0),%st
		add    $0x00002c,%esp
		ret    



_08dd8f_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08dd94_jump:
		fdivr  %st(0),%st
		add    $0x00002c,%esp
		ret    



_08dd9a_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08dd9f_jump:
		fdiv   %st(0),%st
		add    $0x00002c,%esp
		ret    



_08dda5_func:
		fdivrp %st,%st(0)
		add    $0x00002c,%esp
		ret    



_08ddab_func:
		fdivr  %st(0),%st
		add    $0x00002c,%esp
		ret    



_08ddb1_func:
		fdivp  %st,%st(0)
		add    $0x00002c,%esp
		ret    



_08ddb7_func:
		fstpt  0x00000c(%esp)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fldt   0x000020(%esp)
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_08ddd3_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08ddd8_jump:
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fldt   0x00000c(%esp)
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_08ddee_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08ddf3_jump:
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08de0f_func:
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		add    $0x00002c,%esp
		ret    



_08de1f_func:
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		call   _08dc68_func
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08de33_func:
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		call   _08dc68_func
		add    $0x00002c,%esp
		ret    



_08de43_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fxch   %st(1)
		fldt   0x000020(%esp)
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_08de63_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08de68_jump:
		fstpt  (%esp)
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fxch   %st(1)
		fldt   0x00000c(%esp)
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_08de82_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08de87_jump:
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fxch   %st(1)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08dea7_func:
		fstpt  (%esp)
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_08debb_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fstpt  (%esp)
		call   _08dc68_func
		fxch   %st(1)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08ded3_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fstpt  (%esp)
		call   _08dc68_func
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_08dee7_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fxch   %st(2)
		fldt   0x000020(%esp)
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_08df07_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08df0c_jump:
		fstpt  (%esp)
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fxch   %st(2)
		fldt   0x00000c(%esp)
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_08df26_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08df2b_jump:
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fxch   %st(2)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08df4b_func:
		fstpt  (%esp)
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_08df5f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fstpt  (%esp)
		call   _08dc68_func
		fxch   %st(2)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08df77_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fstpt  (%esp)
		call   _08dc68_func
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_08df8b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fxch   %st(3)
		fldt   0x000020(%esp)
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_08dfab_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08dfb0_jump:
		fstpt  (%esp)
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fxch   %st(3)
		fldt   0x00000c(%esp)
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_08dfca_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08dfcf_jump:
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fxch   %st(3)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08dfef_func:
		fstpt  (%esp)
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_08e003_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fstpt  (%esp)
		call   _08dc68_func
		fxch   %st(3)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08e01b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fstpt  (%esp)
		call   _08dc68_func
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_08e02f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fxch   %st(4)
		fldt   0x000020(%esp)
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_08e04f_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08e054_jump:
		fstpt  (%esp)
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fxch   %st(4)
		fldt   0x00000c(%esp)
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_08e06e_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08e073_jump:
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fxch   %st(4)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08e093_func:
		fstpt  (%esp)
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_08e0a7_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fstpt  (%esp)
		call   _08dc68_func
		fxch   %st(4)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08e0bf_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fstpt  (%esp)
		call   _08dc68_func
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_08e0d3_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fxch   %st(5)
		fldt   0x000020(%esp)
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_08e0f3_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08e0f8_jump:
		fstpt  (%esp)
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fxch   %st(5)
		fldt   0x00000c(%esp)
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_08e112_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08e117_jump:
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fxch   %st(5)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08e137_func:
		fstpt  (%esp)
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_08e14b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fstpt  (%esp)
		call   _08dc68_func
		fxch   %st(5)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08e163_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fstpt  (%esp)
		call   _08dc68_func
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_08e177_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fxch   %st(6)
		fldt   0x000020(%esp)
		fxch   %st(7)
		add    $0x00002c,%esp
		ret    



_08e197_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08e19c_jump:
		fstpt  (%esp)
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fxch   %st(6)
		fldt   0x00000c(%esp)
		fxch   %st(7)
		add    $0x00002c,%esp
		ret    



_08e1b6_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08e1bb_jump:
		fxch   %st(7)
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _08dc68_func
		fxch   %st(6)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08e1db_func:
		fstpt  (%esp)
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_08e1ef_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fstpt  (%esp)
		call   _08dc68_func
		fxch   %st(6)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08e207_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fstpt  (%esp)
		call   _08dc68_func
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_08e21b_func:
		sub    $0x00002c,%esp
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _08dc68_func
		add    $0x00002c,%esp
		ret    



_08e254_func:
		push   %eax
		mov    0x000008(%esp),%eax
		and    $0x7f800000,%eax
		cmp    $0x7f800000,%eax
		je     _08e298_jump
		fnstsw %ax
		and    $0x003800,%eax
		je     _08e27b_jump
		flds   0x000008(%esp)
		call   _08e21b_func
		pop    %eax
		ret    $0x000004

	_08e27b_jump:
		fxch   %st(1)
		sub    $0x00000c,%esp
		fstpt  (%esp)
		flds   0x000014(%esp)
		call   _08e21b_func
		fldt   (%esp)
		fxch   %st(1)
		add    $0x00000c,%esp
		pop    %eax
		ret    $0x000004

	_08e298_jump:
		fdivs  0x000008(%esp)
		pop    %eax
		ret    $0x000004



_08e2a0_func:
		push   %eax
		mov    0x00000c(%esp),%eax
		and    $0x7ff00000,%eax
		cmp    $0x7ff00000,%eax
		je     _08e2e4_jump
		fnstsw %ax
		and    $0x003800,%eax
		je     _08e2c7_jump
		fldl   0x000008(%esp)
		call   _08e21b_func
		pop    %eax
		ret    $0x000008

	_08e2c7_jump:
		fxch   %st(1)
		sub    $0x00000c,%esp
		fstpt  (%esp)
		fldl   0x000014(%esp)
		call   _08e21b_func
		fldt   (%esp)
		fxch   %st(1)
		add    $0x00000c,%esp
		pop    %eax
		ret    $0x000008

	_08e2e4_jump:
		fdivl  0x000008(%esp)
		pop    %eax
		ret    $0x000008



_08e384_func:
		mov    $0xffffffff,%eax



_08e389_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0e0ff4_data,%edx
		xor    %ebx,%ebx
		jmp    _08e3ae_jump

	_08e398_jump:
		mov    0x000004(%edx),%eax
		test   %ecx,0x00000c(%eax)
		je     _08e3ac_jump
		inc    %ebx
		testb  $0x000010,0x00000d(%eax)
		je     _08e3ac_jump
		call   _08d35a_func

	_08e3ac_jump:
		mov    (%edx),%edx

	_08e3ae_jump:
		test   %edx,%edx
		jne    _08e398_jump
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08e3b8_func:
		push   %edx
		mov    %eax,%edx
		mov    %cs,%eax
		mov    %ax,0x000002(%edx)
		mov    %ds,%eax
		mov    %ax,0x000006(%edx)
		mov    %es,%eax
		mov    %ax,(%edx)
		mov    %ss,%eax
		mov    %ax,0x000004(%edx)
		mov    %fs,%eax
		mov    %ax,0x000008(%edx)
		mov    %gs,%eax
		mov    %ax,0x00000a(%edx)
		pop    %edx
		ret    



_08e3e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000000,%al
		mov    $0x000044,%ah
		int    $0x000021
		rcl    %edx
		ror    %edx
		xor    %dh,%dh
		xor    %eax,%eax
		and    $0x000080,%dl
		mov    %dx,%ax
		test   %eax,%eax
		setne  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08e407_func:
		test   %edx,%edx
		jne    _08e40e_jump
		xor    %eax,%eax

	_08e40d_jump:
		ret    

	_08e40e_jump:
		test   %edx,%edx
		je     _08e40d_jump



_08e412_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    %bl,%al
		call   _08d220_func
		cmp    $0x000100,%ebx
		jae    _08e46c_jump
		xor    %eax,%eax
		mov    _0abbf3_data,%al
		cmp    $0x000003,%eax
		jl     _08e452_jump
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000050,%ebx
		jne    _08e442_jump
		mov    $0x00000e,%dl
		jmp    _08e452_jump

	_08e442_jump:
		cmp    $0x000022,%ebx
		jl     _08e44b_jump
		mov    $0x000013,%dl
		jmp    _08e452_jump

	_08e44b_jump:
		cmp    $0x000020,%ebx
		jl     _08e452_jump
		mov    $0x000005,%dl

	_08e452_jump:
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x000013,%eax
		jle    _08e45d_jump
		mov    $0x000013,%dl

	_08e45d_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    _0abc79_data(%ebx),%eax
		sar    $0x000018,%eax
		jmp    _08e476_jump

	_08e46c_jump:
		mov    %ebx,%eax
		shr    $0x000008,%eax
		and    $0x0000ff,%eax

	_08e476_jump:
		call   _08d1fd_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    



_08e483_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmp    _0abc94_data,%eax
		jb     _08e496_jump
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08e496_jump:
		cmp    $0x000005,%eax
		jg     _08e4cc_jump
		mov    %eax,%ebx
		mov    _0abce8_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000001(%eax),%cl
		test   $0x000040,%cl
		jne    _08e4cc_jump
		mov    %cl,%ch
		or     $0x000040,%ch
		mov    %ch,0x000001(%eax)
		mov    %edx,%eax
		call   _08e3e0_func
		test   %eax,%eax
		je     _08e4cc_jump
		mov    _0abce8_data,%eax
		orb    $0x000020,0x000001(%ebx,%eax,1)

	_08e4cc_jump:
		mov    _0abce8_data,%eax
		mov    (%eax,%edx,4),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08e4d8_func:
		push   %ebx
		or     $0x000040,%dh
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    _0abce8_data,%eax
		shl    $0x000002,%edx
		mov    %ebx,(%edx,%eax,1)
		pop    %ebx
		ret    



_08e4ed_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    %edx,%ebx
		cmpl   $0x000000,0x000008(%edx)
		jne    _08e503_jump
		mov    %ebx,%eax
		call   _08d444_func

	_08e503_jump:
		mov    0x00000d(%ebx),%ah
		xor    %edi,%edi
		test   $0x000004,%ah
		je     _08e51f_jump
		mov    %ah,%dl
		and    $0x0000f9,%dl
		mov    %dl,%dh
		or     $0x000002,%dh
		mov    $0x000001,%edi
		mov    %dh,0x00000d(%ebx)

	_08e51f_jump:
		mov    %ecx,%ebp
		xor    %esi,%esi

	_08e523_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		test   %eax,%eax
		je     _08e53a_jump
		mov    %ebx,%edx
		inc    %ecx
		call   _086b49_func
		cmp    $0xffffffff,%eax
		jne    _08e523_jump
		mov    %eax,%esi

	_08e53a_jump:
		test   %edi,%edi
		je     _08e558_jump
		mov    0x00000d(%ebx),%al
		and    $0x0000f9,%al
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,0x00000d(%ebx)
		test   %esi,%esi
		jne    _08e558_jump
		mov    %ebx,%eax
		call   _08d35a_func
		mov    %eax,%esi

	_08e558_jump:
		test   %esi,%esi
		jne    _08e560_jump
		mov    %ecx,%esi
		sub    %ebp,%esi

	_08e560_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08e568_func:
		test   %eax,%eax
		jl     _08e571_jump
		cmp    $0x00000f,%eax
		jle    _08e577_jump

	_08e571_jump:
		mov    $_0a4c07_data,%eax
		ret    

	_08e577_jump:
		mov    _0abcf0_data(,%eax,4),%eax
		ret    



_08e57f_func:
		mov    %esp,%eax
		sub    _0abbcc_data,%eax
		ret    



_08e588_func:
		data16 mov %ss,_0abd30_data
		ret    



_08e5c1_func:
		mov    $_0abd32_data,%eax
		mov    $0x000001,%edx
		call   _090c2f_func



_08e5d0_func:
		jae    _08e5e0_jump
		and    $0x00ffff,%eax
		push   %eax
		call   _08e412_func
		pop    %eax
		jmp    _08e5e2_jump

	_08e5e0_jump:
		sub    %eax,%eax

	_08e5e2_jump:
		ret    



_08e5e3_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		mov    %eax,%ebx

	_08e5f1_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		cmp    %eax,%ebx
		je     _08e5f1_jump
		xor    %esi,%esi
		mov    %al,%bl

	_08e601_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		inc    %esi
		cmp    %dh,%bl
		je     _08e601_jump
		mov    %esi,_0e1000_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08e615_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		test   %eax,%eax
		je     _08e646_jump
		imul   _0e1000_data,%eax
		mov    $0x0003e8,%ebx
		add    $0x0001f4,%eax
		xor    %edx,%edx
		div    %ebx
		test   %eax,%eax
		jne    _08e637_jump
		inc    %eax

	_08e637_jump:
		mov    %eax,%esi
		xor    %eax,%eax
		mov    %al,%bl

	_08e63d_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		cmp    %dh,%bl
		dec    %esi
		jne    _08e63d_jump

	_08e646_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08e64c_jump:
		ret    



_08e64d_func:
		push   %ds
		call   _085b78_func
		cmpw   $0x000001,_0adc92_data
		je     _08e6a8_jump
		nop
		nop
		nop
		nop
		movw   $0x000001,_0adc92_data
		mov    %esp,_0acc82_data
		data16 mov %ss,_0acc86_data
		lss    _0acc7a_data,%esp
		pusha  
		push   %es
		push   %fs
		push   %gs
		push   %ds
		pop    %es
		mov    %esp,_0adc8a_data
		lcall  *_0acc70_data
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0acc82_data,%esp
		movw   $0x000000,_0adc92_data

	_08e6a8_jump:
		pop    %ds
		push   %ax
		mov    $0x000020,%ax
		out    %al,$0x000020
		pop    %ax
		iret   



_08e6c9_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0adc94_data
		je     _08e704_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_08e704_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08e70f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		les    0x00000c(%ebp),%edi
		mov    %edi,_0acc70_data
		data16 mov %es,_0acc74_data
		data16 mov %ds,_0acc78_data
		data16 mov %ds,_0acc7e_data
		cmpl   $0x000000,_0adc94_data
		je     _08e7c6_jump
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0adc98_data
		je     _08e785_jump
		nop
		nop
		nop
		nop
		mov    $0x000204,%ax
		mov    $0x000008,%bl
		int    $0x000031
		mov    %edx,_0acc64_data
		mov    %cx,_0acc68_data
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    $_08e64d_func,%edx
		mov    %cs,%cx
		int    $0x000031
		jmp    _08e7ac_jump

	_08e785_jump:
		mov    $0x003508,%ax
		int    $0x000021
		mov    %ebx,_0acc64_data
		data16 mov %es,_0acc68_data
		push   %ds
		xor    %ax,%ax
		mov    %eax,%es
		mov    $0x002508,%ax
		mov    $_08e64d_func,%edx
		push   %cs
		pop    %ds
		int    $0x000021
		pop    %ds

	_08e7ac_jump:
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_08e7c6_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08e7d1_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0adc94_data
		je     _08e7f2_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)

	_08e7f2_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08e7fd_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0adc94_data
		je     _08e81e_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_08e81e_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08e829_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0adc94_data
		je     _08e89a_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0adc98_data
		je     _08e871_jump
		nop
		nop
		nop
		nop
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    _0acc68_data,%cx
		mov    _0acc64_data,%edx
		int    $0x000031
		jmp    _08e888_jump

	_08e871_jump:
		push   %ds
		mov    $0x002508,%ax
		mov    _0acc68_data,%cx
		mov    _0acc64_data,%edx
		mov    %ecx,%ds
		int    $0x000021
		pop    %ds

	_08e888_jump:
		mov    $0x000040,%dx
		mov    $0x000000,%ax
		out    %al,(%dx)
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_08e89a_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08e8a5_func:
		cmpl   $0x000000,_0adc94_data
		je     _08e8fd_jump
		nop
		nop
		nop
		nop
		movw   $0x000000,_0adc92_data
		mov    _0adc8a_data,%esp
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0acc82_data,%esp
		mov    %eax,_0adc8e_data
		pop    %eax
		mov    %ax,_0adc8a_data
		push   %eax
		push   %eax
		mov    _0acc64_data,%eax
		mov    %eax,(%esp)
		mov    _0acc68_data,%eax
		mov    %eax,0x000004(%esp)
		mov    _0adc8e_data,%eax
		push   %eax
		mov    _0adc8a_data,%ax
		mov    %eax,%ds
		pop    %eax
		lret   

	_08e8fd_jump:
		ret    

	_08e8fe_jump:
		ret    



_08e8ff_func:
		push   %ecx
		push   %eax

	_08e901_jump:
		mov    (%edx),%cl
		mov    %cl,(%eax)
		cmp    $0x000000,%cl
		je     _08e91b_jump
		mov    0x000001(%edx),%cl
		add    $0x000002,%edx
		mov    %cl,0x000001(%eax)
		add    $0x000002,%eax
		cmp    $0x000000,%cl
		jne    _08e901_jump

	_08e91b_jump:
		pop    %eax
		pop    %ecx
		ret    



_08e91e_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %eax,%edi
		push   %es
		push   %ds
		pop    %es
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_08e931_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _08e949_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _08e931_jump

	_08e949_jump:
		pop    %edi
		pop    %es
		mov    %edi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_08e954_jump:
		ret    



_08e955_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000600,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _08e987_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_08e987_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08e992_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000601,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _08e9c4_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_08e9c4_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08e9cf_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		mov    %ax,-0x000002(%ebp)
		push   %eax
		mov    %ax,%bx
		mov    $0x000008,%ax
		xor    %cx,%cx
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %eax
		mov    $0x000501,%ax
		xor    %ebx,%ebx
		mov    0x000008(%ebp),%ecx
		add    $0x000050,%cx
		int    $0x000031
		push   %ebx
		mov    0x00000c(%ebp),%ebx
		mov    %si,(%ebx)
		mov    %di,0x000002(%ebx)
		pop    %ebx
		pop    %eax
		push   %eax
		mov    0x000010(%ebp),%esi
		mov    %cx,(%esi)
		mov    %bx,0x000002(%esi)
		mov    %cx,%dx
		mov    %bx,%cx
		mov    %ax,%bx
		mov    $0x000007,%ax
		int    $0x000031
		movzwl -0x000002(%ebp),%ecx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		or     $0x004000,%cx
		mov    -0x000002(%ebp),%bx
		mov    $0x000009,%ax
		int    $0x000031
		pop    %eax
		xor    %edx,%edx
		mov    %ax,%dx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ea5d_func:
		push   %eax
		mov    %ds,%ax
		mov    %eax,%gs
		pop    %eax
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000010(%ebp),%si
		mov    0x000012(%ebp),%di
		mov    $0x000502,%ax
		int    $0x000031
		mov    $0x000001,%ax
		mov    0x00000c(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ea93_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		push   %eax
		push   %eax
		push   %eax
		mov    0x00000c(%ebp),%bx
		mov    $0x000006,%ax
		int    $0x000031
		pop    %ebx
		mov    $0x000007,%ax
		int    $0x000031
		xor    %ebx,%ebx
		mov    0x00000c(%ebp),%bx
		lsl    %bx,%edx
		mov    $0x000008,%ax
		pop    %ebx
		xor    %ecx,%ecx
		int    $0x000031
		mov    $0x000009,%ax
		pop    %ebx
		lar    %bx,%ecx
		shr    $0x000008,%ecx
		or     $0x004008,%cx
		int    $0x000031
		pop    %edx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08eaf0_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%esi
		les    0x00000c(%ebp),%edi
		mov    $0x000020,%ecx

	_08eb07_jump:
		mov    %edi,(%esi)
		data16 mov %es,0x000004(%esi)
		add    $0x00006c,%edi
		add    $0x000006,%esi
		loop   _08eb07_jump
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08eb20_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		add    $0x000100,%ebx
		int    $0x000031
		mov    0x00000c(%ebp),%esi
		shl    $0x000004,%eax
		mov    %eax,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %dx,(%esi)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08eb56_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%es
		mov    %eax,%fs
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ebb6_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000008,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		push   %ds
		push   %es
		les    0x000018(%ebp),%edi
		lds    0x000010(%ebp),%esi
		mov    %edx,%esi
		mov    $0x00006a,%ecx
		cld    
		rep movsb %ds:(%esi),%es:(%edi)
		les    0x000018(%ebp),%edi
		data16 mov %ds,%es:0x000044(%edi)
		data16 mov %ds,%es:0x00004c(%edi)
		data16 mov %ds,%es:0x000054(%edi)
		data16 mov %ds,%es:0x00005c(%edi)
		pop    %es
		pop    %ds
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ec04_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000005,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ec27_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ec4a_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		mov    %ax,_0add90_data
		mov    %ch,%al
		cbtw   
		mov    %ax,_0add98_data
		mov    %cl,%al
		cbtw   
		mov    %ax,_0add94_data
		mov    %dx,_0add9c_data
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ec8e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %es
		mov    $0x000002,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		push   %ds
		les    0x000018(%ebp),%edi
		lds    0x000010(%ebp),%esi
		mov    %edx,%esi
		mov    $0x00006a,%ecx
		cld    
		rep movsb %ds:(%esi),%es:(%edi)
		les    0x000018(%ebp),%edi
		data16 mov %ds,%es:0x000044(%edi)
		data16 mov %ds,%es:0x00004c(%edi)
		data16 mov %ds,%es:0x000054(%edi)
		data16 mov %ds,%es:0x00005c(%edi)
		pop    %ds
		pop    %es
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ed0c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ed2f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x00000a,%eax
		mov    0x000020(%ebp),%ecx
		les    0x000018(%ebp),%edi
		mov    0x000024(%ebp),%edx
		mov    0x000028(%ebp),%ebx
		push   %ds
		pop    %gs
		lcall  *0x000008(%ebp)
		cli    
		mov    0x00002c(%ebp),%ebx
		mov    %edi,(%ebx)
		mov    %ecx,0x000008(%ebx)
		mov    %esi,0x000010(%ebx)
		mov    0x00000c(%ebp),%ax
		mov    %ax,0x000004(%ebx)
		mov    0x000014(%ebp),%ax
		mov    %ax,0x00000c(%ebx)
		mov    %ax,0x000014(%ebx)
		sti    
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ed82_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000000,%eax
		mov    0x000018(%ebp),%bx
		mov    0x00001c(%ebp),%cx
		mov    0x000020(%ebp),%dx
		mov    %dl,%ch
		mov    0x00002c(%ebp),%si
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08edb7_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000004,%eax
		mov    0x00001c(%ebp),%ecx
		mov    0x000018(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ede0_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000002,%eax
		mov    0x000018(%ebp),%ebx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ee06_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000003,%eax
		mov    $0x000008,%bx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ee57_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _08ee81_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000b,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_08ee81_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ee8c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _08eeb6_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000c,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_08eeb6_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08eec1_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000004,%eax
		lcall  *0x000008(%ebp)
		mov    %esi,_0adcf4_data
		mov    %edi,_0adcfc_data
		mov    0x000014(%ebp),%ax
		mov    %ax,_0adcf8_data
		mov    %ax,_0add00_data
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ef00_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %ds
		push   %ds
		pop    %es
		mov    $_0adca4_data,%edi
		mov    0x000008(%ebp),%ebx
		lds    _0adcf4_data,%esi
		mov    (%esi,%ebx,4),%esi
		cmp    $0xffffffff,%esi
		jne    _08ef31_jump
		nop
		nop
		nop
		nop
		xor    %eax,%eax
		pop    %ds
		jmp    _08ef3f_jump

	_08ef31_jump:
		mov    $0x000050,%ecx
		cld    
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %ds
		mov    $_0adca4_data,%eax

	_08ef3f_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ef4a_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		les    _0adcfc_data,%esi
		mov    0x000008(%ebp),%eax
		mov    %eax,%ebx
		shl    %eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		mov    0x00000c(%ebp),%eax
		mov    %eax,%es:(%esi,%ebx,1)
		data16 mov %ds,%es:0x000004(%esi,%ebx,1)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08ef80_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %esi
		push   %es
		mov    $0x00000b,%ax
		lfs    0x000020(%ebp),%edi
		lcall  *0x000018(%ebp)
		mov    %eax,%esi
		mov    %edx,%es
		mov    $0x00000c,%ax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %esi
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08efe0_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08effd_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		int    $0x000031
		jae    _08f022_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax
		jmp    _08f033_jump

	_08f022_jump:
		mov    0x00000c(%ebp),%esi
		mov    %dx,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %ax,(%esi)
		mov    $0x000000,%eax

	_08f033_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08f03e_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000000,%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08f06c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0add40_data,%esi
		movl   $0x008107,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0add40_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		mov    $_0add40_data,%esi
		andw   $0x000001,0x000020(%esi)
		jne    _08f0c8_jump
		nop
		nop
		nop
		nop
		mov    $0x000000,%eax
		jmp    _08f0cd_jump

	_08f0c8_jump:
		mov    $0x000001,%eax

	_08f0cd_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08f0d8_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0add40_data,%esi
		movl   $0x008108,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0add40_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08f125_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000800,%ax
		mov    0x00000a(%ebp),%bx
		mov    0x000008(%ebp),%cx
		mov    $0x000000,%si
		mov    $0x004000,%di
		int    $0x000031
		mov    %cx,-0x000008(%ebp)
		mov    %bx,-0x000006(%ebp)
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		mov    %ax,-0x000004(%ebp)
		mov    $0x000007,%ax
		mov    -0x000004(%ebp),%bx
		mov    -0x000006(%ebp),%cx
		mov    -0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000008,%ax
		mov    -0x000004(%ebp),%bx
		mov    $0x00ffff,%cx
		mov    $0x00ffff,%dx
		int    $0x000031
		mov    $0x000009,%ax
		xor    %ecx,%ecx
		mov    %ds,%cx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		mov    -0x000004(%ebp),%bx
		int    $0x000031
		mov    -0x000004(%ebp),%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08f1a5_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%ax
		mov    0x000008(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_08f1d7_jump:
		ret    



_08f1d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    _0addb0_data,%esi
		test   %esi,%esi
		je     _08f230_jump
		test   %eax,%eax
		je     _08f230_jump
		mov    %eax,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    %ecx,%edi
		jmp    _08f22a_jump

	_08f204_jump:
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _0873fb_func
		test   %eax,%eax
		jne    _08f227_jump
		mov    (%ecx,%edi,1),%al
		and    $0x0000ff,%eax
		cmp    $0x00003d,%eax
		jne    _08f227_jump
		lea    0x000001(%edi),%eax
		add    %ecx,%eax
		jmp    _08f232_jump

	_08f227_jump:
		add    $0x000004,%esi

	_08f22a_jump:
		mov    (%esi),%ecx
		test   %ecx,%ecx
		jne    _08f204_jump

	_08f230_jump:
		xor    %eax,%eax

	_08f232_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08f239_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08f278_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08f28d_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08f2a2_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %cx,-0x00000c(%ebp)
		mov    %ebx,-0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		cmpl   $0x000000,_0abd70_data(%eax)
		jne    _08f2d8_jump
		cmpw   $0x000000,_0abd74_data(%eax)
		jne    _08f2d8_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _08f32b_jump

	_08f2d8_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		jne    _08f2e5_jump
		cmpw   $0x000000,-0x00000c(%ebp)
		je     _08f31b_jump

	_08f2e5_jump:
		movzwl -0x00000c(%ebp),%eax
		push   %eax
		pushl  -0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0abd74_data(%eax),%edx
		push   %edx
		pushl  _0abd70_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0abd92_data(%eax),%edx
		push   %edx
		pushl  _0abd8e_data(%eax)
		call   _08ebb6_func
		add    $0x000018,%esp
		jmp    _08f324_jump

	_08f31b_jump:
		movl   $0x000002,-0x000004(%ebp)
		jmp    _08f32b_jump

	_08f324_jump:
		movl   $0x000000,-0x000004(%ebp)

	_08f32b_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_08f333_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08f348_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08f35d_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000048,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)
		mov    %cx,-0x000044(%ebp)
		mov    %ebx,-0x000048(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x000005,-0x000030(%ebp)
		jbe    _08f3a3_jump
		movl   $0x00000a,-0x000028(%ebp)
		jmp    _08f577_jump

	_08f3a3_jump:
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0abe38_data(%eax)
		je     _08f3be_jump
		movl   $0x000009,-0x000028(%ebp)
		jmp    _08f577_jump

	_08f3be_jump:
		cmpl   $0x00e000,-0x00002c(%ebp)
		jb     _08f3d0_jump
		cmpl   $0x00e200,-0x00002c(%ebp)
		jbe    _08f3dc_jump

	_08f3d0_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _08f577_jump

	_08f3dc_jump:
		mov    $_0ac870_data,%edx
		mov    $_0ac96f_data,%eax
		call   _08e8ff_func
		mov    $_0a4e00_data,%edx
		mov    $_0ac96f_data,%eax
		call   _08e91e_func
		push   $0x000200
		mov    $_0ac96f_data,%eax
		push   %eax
		call   _086d88_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _08f422_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _08f577_jump

	_08f422_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0acbfc_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _087081_func

	_08f432_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0acc1c_data,%eax
		ja     _08f443_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _08f448_jump

	_08f443_jump:
		jmp    _08f546_jump

	_08f448_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0acc28_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _087081_func
		mov    _0acc4c_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0acc50_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _08f473_jump
		testb  $0x000080,_0acc55_data
		jne    _08f478_jump

	_08f473_jump:
		jmp    _08f52e_jump

	_08f478_jump:
		movl   $0x000001,-0x000014(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x000018(%ebp)
		pushl  -0x000008(%ebp)
		call   _08e9cf_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x00003c(%ebp)
		mov    %ecx,-0x000040(%ebp)
		movzwl -0x00003c(%ebp),%eax
		push   %eax
		pushl  -0x000040(%ebp)
		call   _08ea93_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000034(%ebp)
		mov    %ecx,-0x000038(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08f4d5_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _08f577_jump

	_08f4d5_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000040(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _087598_func
		mov    -0x000034(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000040(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x00001c(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000020(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _08f53e_jump

	_08f52e_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _08744e_func

	_08f53e_jump:
		incl   -0x000018(%ebp)
		jmp    _08f432_jump

	_08f546_jump:
		mov    -0x000004(%ebp),%eax
		call   _08717c_func
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0acc50_data,%edx
		mov    %edx,_0abee2_data(%eax)
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0abe38_data(%eax)
		movl   $0x000000,-0x000028(%ebp)

	_08f577_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		ret    $0x000014



_08f580_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		cmpl   $0x000005,-0x000008(%ebp)
		jbe    _08f5a3_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _08f64e_jump

	_08f5a3_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0abe38_data(%eax)
		jne    _08f5be_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _08f64e_jump

	_08f5be_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0abe38_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0abdac_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0abd48_data(%eax)
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08f5fb_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _08f64e_jump

	_08f5fb_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0abe10_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0abd74_data(%eax),%edx
		push   %edx
		pushl  _0abd70_data(%eax)
		call   _08ea5d_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0abe10_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0abd92_data(%eax),%edx
		push   %edx
		pushl  _0abd8e_data(%eax)
		call   _08ea5d_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_08f64e_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08f658_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000044,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %cx,-0x000040(%ebp)
		mov    %ebx,-0x000044(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x001000,-0x00002c(%ebp)
		jb     _08f69c_jump
		cmpl   $0x001023,-0x00002c(%ebp)
		jbe    _08f6a8_jump

	_08f69c_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _08f828_jump

	_08f6a8_jump:
		mov    $_0ac870_data,%edx
		mov    $_0ac96f_data,%eax
		call   _08e8ff_func
		mov    $_0a4e00_data,%edx
		mov    $_0ac96f_data,%eax
		call   _08e91e_func
		push   $0x000200
		mov    $_0ac96f_data,%eax
		push   %eax
		call   _086d88_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _08f6ee_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _08f828_jump

	_08f6ee_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0acbfc_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _087081_func

	_08f6fe_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0acc1c_data,%eax
		ja     _08f70f_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _08f714_jump

	_08f70f_jump:
		jmp    _08f819_jump

	_08f714_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0acc28_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _087081_func
		mov    _0acc4c_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0acc50_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _08f73f_jump
		testb  $0x000040,_0acc55_data
		jne    _08f744_jump

	_08f73f_jump:
		jmp    _08f801_jump

	_08f744_jump:
		movl   $0x000001,-0x000014(%ebp)
		addl   $0x004000,-0x000008(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x00001c(%ebp)
		pushl  -0x000008(%ebp)
		call   _08e9cf_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x000038(%ebp)
		mov    %ecx,-0x00003c(%ebp)
		movzwl -0x000038(%ebp),%eax
		push   %eax
		pushl  -0x00003c(%ebp)
		call   _08ea93_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000030(%ebp)
		mov    %ecx,-0x000034(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _08e955_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08f7a8_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _08f828_jump

	_08f7a8_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _087598_func
		mov    -0x000030(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000034(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x000020(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000024(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _08f811_jump

	_08f801_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _08744e_func

	_08f811_jump:
		incl   -0x000018(%ebp)
		jmp    _08f6fe_jump

	_08f819_jump:
		mov    -0x000004(%ebp),%eax
		call   _08717c_func
		movl   $0x000000,-0x000028(%ebp)

	_08f828_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000014



_08f832_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0abdc0_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0abd5c_data(%eax)
		call   _08e992_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08f870_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _08f8c3_jump

	_08f870_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0abe24_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0abdd8_data(%eax),%edx
		push   %edx
		pushl  _0abdd4_data(%eax)
		call   _08ea5d_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0abe24_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0abdf6_data(%eax),%edx
		push   %edx
		pushl  _0abdf2_data(%eax)
		call   _08ea5d_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_08f8c3_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08f8f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08f909_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08f980_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08f995_func:
		push   %esi
		push   %edi
		push   %ds
		push   %es
		push   %eax
		mov    %dx,%es
		mov    %cx,%ds
		mov    %ebx,%esi
		mov    %eax,%edi

	_08f9a4_jump:
		mov    (%esi),%al
		mov    %al,%es:(%edi)
		cmp    $0x000000,%al
		je     _08f9be_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,%es:0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _08f9a4_jump

	_08f9be_jump:
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    



_08f9c4_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    0x00000c(%esp),%eax
		mov    %ebx,%esi
		push   %ds
		push   %es
		push   %edi
		xchg   %eax,%ecx
		mov    %eax,%ds
		mov    %edx,%es
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    $0x000004



_08f9ec_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    $0x000043,%ah
		int    $0x000021
		jb     _08fa09_jump
		test   $0x000002,%bl
		je     _08fa09_jump
		test   $0x000001,%cl
		je     _08fa09_jump
		mov    $0x000000,%al
		mov    $0x000006,%ah
		stc    

	_08fa09_jump:
		sbb    %ecx,%ecx
		mov    %ax,%cx
		mov    %ecx,%eax
		mov    %eax,%ebx
		mov    %eax,%edx
		and    $0x00ffff,%ebx
		shr    $0x000010,%edx
		mov    %ebx,%eax
		call   _08e407_func
		pop    %ecx
		pop    %ebx
		ret    

	_08fa2f_jump:
		ret    



_08fa30_func:
		test   %edx,%edx
		jge    _08fa2f_jump
		jmp    _0869d6_func



_08fa3a_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		call   _08fa4f_func
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_08fa4f_func:
		fldl2e 
		fmulp  %st,%st(1)
		push   %ebp
		mov    %esp,%ebp
		mov    $0x008001,%ax
		push   %eax
		filds  -0x000004(%ebp)
		fcom   %st(1)
		fnstsw %ax
		sahf   
		mov    %ebp,%esp
		fstp   %st(0)
		jbe    _08fa6f_jump
		fstp   %st(0)
		fldz   
		pop    %ebp
		ret    

	_08fa6f_jump:
		fld    %st(0)
		call   _08fac0_func
		push   %eax
		fists  -0x000004(%ebp)
		fwait
		pop    %eax
		cmp    $0x008000,%ax
		jne    _08fa8f_jump
		dec    %ax
		push   %eax
		fstp   %st(0)
		fstp   %st(0)
		filds  -0x000004(%ebp)
		fld    %st(0)
		pop    %eax

	_08fa8f_jump:
		fld    %st(0)
		fld1   
		fscale 
		fstp   %st(1)
		fxch   %st(1)
		fld    %st(2)
		fsubp  %st,%st(1)
		ftst   
		fnstsw %ax
		sahf   
		je     _08faba_jump
		fld1   
		fchs   
		fxch   %st(1)
		fscale 
		fstp   %st(1)
		f2xm1  
		fld1   
		faddp  %st,%st(1)
		fmul   %st(0),%st
		fmulp  %st,%st(1)
		jmp    _08fabc_jump

	_08faba_jump:
		fstp   %st(0)

	_08fabc_jump:
		fstp   %st(1)
		pop    %ebp
		ret    



_08fac0_func:
		push   %ebp
		mov    %esp,%ebp
		push   %eax
		fstcw  -0x000002(%ebp)
		fwait
		mov    -0x000002(%ebp),%ax
		and    $0x00f3ff,%ax
		or     $0x000400,%ax
		push   %eax
		fldcw  -0x000008(%ebp)
		frndint 
		fldcw  -0x000002(%ebp)
		fwait
		mov    %ebp,%esp
		pop    %ebp
		ret    



_08fae3_func:
		test   %edx,%edx
		jne    _08faea_jump
		xor    %eax,%eax
		ret    

	_08faea_jump:
		jge    _08faf2_jump
		mov    $0xffffffff,%eax
		ret    

	_08faf2_jump:
		mov    $0x000001,%eax
		ret    



_08faf8_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		lea    -0x000010(%ebp),%edx
		lea    -0x000008(%ebp),%eax
		call   _090c56_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,(%ebx)
		mov    -0x00000c(%ebp),%eax
		mov    %eax,0x000004(%ebx)
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_08fb24_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		test   %edx,%edx
		je     _08fbb6_jump
		mov    -0x000006(%ebp),%eax
		and    $0x007ff0,%eax
		cwtl   
		sar    $0x000004,%eax
		cmp    $0x003e80,%ebx
		jle    _08fb52_jump
		mov    $0x003e80,%ebx

	_08fb52_jump:
		cmp    $0xffffc180,%ebx
		jge    _08fb5f_jump
		mov    $0xffffc180,%ebx

	_08fb5f_jump:
		add    %ebx,%eax
		test   %eax,%eax
		jg     _08fb6b_jump
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _08fbbc_jump

	_08fb6b_jump:
		cmp    $0x0007ff,%eax
		jl     _08fb9e_jump
		mov    -0x000006(%ebp),%ecx
		call   _08d209_func
		test   %cx,%cx
		jle    _08fb8c_jump
		mov    _0a50fc_data,%eax
		mov    _0a5100_data,%edx
		jmp    _08fbbc_jump

	_08fb8c_jump:
		mov    _0a50fc_data,%eax
		mov    _0a5100_data,%edx
		call   _0869d6_func
		jmp    _08fbbc_jump

	_08fb9e_jump:
		mov    -0x000006(%ebp),%edx
		and    $0x00800f,%edx
		shl    $0x000004,%eax
		mov    %edx,%ebx
		mov    %dx,-0x000006(%ebp)
		or     %eax,%ebx
		mov    %bx,-0x000006(%ebp)

	_08fbb6_jump:
		mov    -0x00000c(%ebp),%eax
		mov    -0x000008(%ebp),%edx

	_08fbbc_jump:
		lea    -0x000004(%ebp),%esp
		pop    %ecx
		pop    %ebp
		ret    



_08fbc2_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000a(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000009(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,0x00000c(%ebx)
		mov    $0x00002c,%ah
		int    $0x000021
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    0x000003(%esp),%al
		xor    %ecx,%ecx
		mov    %eax,0x000008(%ebx)
		xor    %eax,%eax
		mov    (%esp),%cl
		mov    0x000002(%esp),%al
		mov    %ecx,%esi
		mov    %eax,0x000004(%ebx)
		xor    %eax,%eax
		shl    $0x000002,%esi
		mov    0x000001(%esp),%al
		add    %ecx,%esi
		mov    %eax,(%ebx)
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000004(%esp)
		mov    0x000004(%esp),%al
		mov    0x000008(%esp),%ah
		add    %esi,%esi
		cmp    %ah,%al
		je     _08fc74_jump
		cmpl   $0x000017,0x000008(%ebx)
		je     _08fc74_jump
		xor    %eax,%eax
		mov    0x000006(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000005(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    %eax,0x00000c(%ebx)

	_08fc74_jump:
		mov    %esi,%eax
		movl   $0xffffffff,0x000020(%ebx)
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08fc85_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    $0x00000c,%esi
		mov    0x000010(%ebp),%edx
		mov    0x000010(%eax),%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $_0a5168_data,%ebx
		mov    0x000014(%ebp),%esi
		mov    %edx,%edi
		cmp    $0xf4fb7ea1,%esi
		jge    _08fcb9_jump

	_08fcaf_jump:
		mov    $0xffffffff,%eax
		jmp    _08fdd2_jump

	_08fcb9_jump:
		mov    0x000010(%ebp),%eax
		mov    %eax,%edx
		mov    $0x00000c,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %eax,%esi

	_08fcca_jump:
		test   %edi,%edi
		jge    _08fcd4_jump
		dec    %esi
		add    $0x00000c,%edi
		jmp    _08fcca_jump

	_08fcd4_jump:
		test   %esi,%esi
		jl     _08fcaf_jump
		lea    0x00076c(%esi),%eax
		call   _090d82_func
		test   %eax,%eax
		je     _08fcec_jump
		mov    $_0a5182_data,%ebx

	_08fcec_jump:
		lea    0x000003(%esi),%ecx
		mov    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sar    $0x000002,%ecx
		add    %edx,%eax
		lea    (%eax,%ecx,1),%edx
		movswl (%ebx,%edi,2),%eax
		mov    0x00000c(%ebp),%edi
		add    %edx,%eax
		add    %eax,%edi
		dec    %edi
		test   %esi,%esi
		je     _08fd19_jump
		dec    %edi

	_08fd19_jump:
		mov    0x000008(%ebp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    0x000000(%ebp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi

	_08fd3a_jump:
		test   %esi,%esi
		jge    _08fd47_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _08fd3a_jump

	_08fd47_jump:
		mov    %ebp,%ecx
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _0911c9_func
		call   _091375_func
		mov    _0ade00_data,%edx
		mov    0x000020(%ebp),%ebx
		add    %edx,%esi
		test   %ebx,%ebx
		jge    _08fd6f_jump
		mov    %ebp,%eax
		call   _090ed6_func

	_08fd6f_jump:
		cmpl   $0x000000,0x000020(%ebp)
		jle    _08fd7b_jump
		sub    _0ade04_data,%esi

	_08fd7b_jump:
		test   %esi,%esi
		jge    _08fd88_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _08fd7b_jump

	_08fd88_jump:
		cmp    $0x0063de,%edi
		jl     _08fcaf_jump
		jne    _08fdb2_jump
		mov    _0ade00_data,%eax
		sub    $0x015180,%esi
		test   %eax,%eax
		jle    _08fcaf_jump
		test   %esi,%esi
		jge    _08fdd0_jump
		jmp    _08fcaf_jump

	_08fdb2_jump:
		lea    -0x0063df(%edi),%eax
		mov    %eax,%edi
		shl    $0x000003,%edi
		sub    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		shl    $0x000007,%edi
		mov    %edi,%eax
		shl    $0x000002,%edi
		sub    %eax,%edi
		add    %edi,%esi

	_08fdd0_jump:
		mov    %esi,%eax

	_08fdd2_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08fdeb_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0abbb5_data,%ah
		test   %ah,%ah
		je     _08fe0f_jump
		mov    %edi,%eax
		call   _0916da_func
		jmp    _08ff53_jump

	_08fe0f_jump:
		mov    %ah,-0x000018(%ebp)
		mov    %ah,-0x000014(%ebp)
		mov    %edi,%eax
		mov    $0x3ff00000,%ecx
		call   _08fae3_func
		mov    %eax,-0x00001c(%ebp)
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _08fa30_func
		mov    %eax,%edi
		mov    %edx,%esi
		call   _08bb2c_func
		jne    _08fe49_jump
		mov    $0x54442d18,%edi
		mov    $0x3fe921fb,%esi
		jmp    _08ff3c_jump

	_08fe49_jump:
		mov    $0x3ff00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _08bb2c_func
		jle    _08fe74_jump
		mov    $0x3ff00000,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		xor    %eax,%eax
		call   _0867d0_func
		mov    $0x000001,%bl
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bl,-0x000018(%ebp)

	_08fe74_jump:
		mov    $0x5e9ecd56,%ebx
		mov    $0x3fd12614,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _08bb2c_func
		jle    _08feee_jump
		mov    $0xd0b09955,%ebx
		mov    $0x3fe76cf5,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _085695_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _0854de_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _0854de_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _0854de_func
		mov    $0xe8584ca9,%ebx
		mov    $0x3ffbb67a,%ecx
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0854de_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _0867d0_func
		mov    $0x000001,%bh
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bh,-0x000014(%ebp)

	_08feee_jump:
		mov    $0x000008,%ecx
		mov    $_0a5104_data,%ebx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _08dadc_func
		mov    -0x000014(%ebp),%cl
		mov    %eax,%edi
		mov    %edx,%esi
		test   %cl,%cl
		je     _08ff1f_jump
		mov    $0x382d7366,%ebx
		mov    $0x3fe0c152,%ecx
		call   _0854de_func
		mov    %eax,%edi
		mov    %edx,%esi

	_08ff1f_jump:
		cmpb   $0x000000,-0x000018(%ebp)
		je     _08ff3c_jump
		mov    $0x54442d15,%eax
		mov    $0x3ff921fb,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _0854d8_func
		mov    %eax,%edi
		mov    %edx,%esi

	_08ff3c_jump:
		cmpl   $0x000000,-0x00001c(%ebp)
		jge    _08ff4f_jump
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0869d6_func
		mov    %eax,%edi
		mov    %edx,%esi

	_08ff4f_jump:
		mov    %edi,%eax
		mov    %esi,%edx

	_08ff53_jump:
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_08ff5c_func:
		push   %edx
		sub    $0x00001c,%esp
		mov    $0x00002c,%ah
		mov    %esp,%edx
		mov    %ah,0x000001(%esp)
		mov    %esp,%eax
		call   _091741_func
		xor    %edx,%edx
		mov    0x000009(%esp),%dl
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		shl    $0x000002,%eax
		mov    0x000008(%esp),%dl
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000002,%edx
		mov    0x00000d(%esp),%al
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		xor    %eax,%eax
		shl    $0x000002,%edx
		mov    0x00000c(%esp),%al
		add    %edx,%eax
		add    $0x00001c,%esp
		pop    %edx
		ret    



_08ffb7_func:
		call   _08ff5c_func
		mov    %eax,_0e1004_data
		ret    

	_08ffc2_jump:
		push   %ebx
		push   %ecx
		push   %edx
		call   _08ff5c_func
		mov    _0e1004_data,%ebx
		mov    %eax,%edx
		cmp    %ebx,%eax
		jae    _08ffdc_jump
		lea    0x83d600(%eax),%edx

	_08ffdc_jump:
		mov    _0e1004_data,%ecx
		mov    %edx,%eax
		sub    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08ffea_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _090039_jump
		add    $0x00000b,%eax
		jb     _090039_jump
		and    $0x0000f8,%al
		mov    $0x000010,%edx
		sub    %edx,%eax
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%eax
		add    %edx,%eax
		cmp    0x000014(%ebx),%eax
		ja     _090039_jump
		mov    0x00000c(%ebx),%esi
		mov    0x000010(%ebx),%edi
		cmp    %edi,%eax
		ja     _09001d_jump
		mov    0x000028(%ebx),%esi
		sub    %edi,%edi

	_09001d_jump:
		mov    (%esi),%edx
		cmp    %edx,%eax
		jbe    _09003d_jump
		sub    %edx,%edi
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%edi
		add    %edx,%edi
		lea    0x000020(%ebx),%edx
		mov    0x000008(%esi),%esi
		cmp    %edx,%esi
		jne    _09001d_jump
		mov    %edi,0x000014(%ebx)

	_090039_jump:
		sub    %eax,%eax
		jmp    _090088_jump

	_09003d_jump:
		sub    %eax,%edx
		mov    %edi,0x000010(%ebx)
		incl   0x000018(%ebx)
		mov    0x000008(%esi),%ecx
		cmp    $0x000010,%edx
		jb     _09006b_jump
		mov    %esi,%edi
		add    %eax,%edi
		mov    %edi,0x00000c(%ebx)
		mov    %edx,(%edi)
		mov    %eax,(%esi)
		mov    0x000004(%esi),%ebx
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edi,0x000008(%ebx)
		mov    %ecx,%ebx
		mov    %edi,0x000004(%ebx)
		jmp    _090080_jump

	_09006b_jump:
		decl   0x00001c(%ebx)
		mov    %esi,%eax
		mov    %ecx,%edi
		mov    0x000004(%esi),%esi
		mov    %edi,0x000008(%esi)
		mov    %esi,0x000004(%edi)
		mov    %esi,0x00000c(%ebx)
		mov    %eax,%esi

	_090080_jump:
		orl    $0x000001,(%esi)
		mov    %esi,%eax
		add    $0x000004,%eax

	_090088_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    

	_09008d_jump:
		jmp    _090198_jump



_090092_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _09008d_jump
		mov    %eax,%esi
		sub    $0x000004,%esi
		mov    (%esi),%eax
		test   $0x000001,%al
		je     _09008d_jump
		and    $0x0000fe,%al
		mov    %esi,%edi
		add    %eax,%edi
		testl  $0x000001,(%edi)
		jne    _0900d4_jump
		cmp    0x00000c(%ebx),%edi
		jne    _0900bd_jump
		mov    %esi,0x00000c(%ebx)

	_0900bd_jump:
		add    (%edi),%eax
		mov    %eax,(%esi)
		push   %ebx
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%edi
		mov    %edi,0x000008(%ebx)
		mov    %ebx,0x000004(%edi)
		pop    %ebx
		decl   0x00001c(%ebx)
		jmp    _090150_jump

	_0900d4_jump:
		mov    %eax,(%esi)
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _0900eb_jump
		cmp    0x000004(%edi),%esi
		ja     _090150_jump
		mov    0x000028(%ebx),%edi
		cmp    %edi,%esi
		jb     _090150_jump
		jmp    _0900fa_jump

	_0900eb_jump:
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _090150_jump
		lea    0x000020(%ebx),%edi
		cmp    0x000024(%ebx),%esi
		ja     _090150_jump

	_0900fa_jump:
		sub    %edx,%edx
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%ecx
		inc    %ecx
		div    %ecx
		dec    %ecx
		cmp    %ecx,%eax
		jae    _09012f_jump
		mov    0x000018(%ebx),%edx
		sub    %ecx,%edx
		add    %eax,%eax
		cmp    %ecx,%edx
		ja     _090117_jump
		sub    %eax,%eax

	_090117_jump:
		mov    %esi,%edi
		add    (%esi),%edi

	_09011b_jump:
		mov    (%edi),%edx
		test   $0x000001,%dl
		je     _090150_jump
		cmp    $0xffffffff,%edx
		je     _09012f_jump
		and    $0x0000fe,%dl
		add    %edx,%edi
		dec    %eax
		jne    _09011b_jump

	_09012f_jump:
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _090139_jump
		mov    0x000028(%ebx),%edi

	_090139_jump:
		cmp    %edi,%esi
		jb     _090150_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _090150_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _090150_jump
		mov    0x000008(%edi),%edi
		jmp    _090139_jump

	_090150_jump:
		mov    0x000004(%edi),%edx
		mov    (%esi),%ecx
		xchg   %edi,%edx
		mov    %edi,%eax
		add    (%edi),%eax
		cmp    %esi,%eax
		jne    _09016f_jump
		add    (%edi),%ecx
		mov    %ecx,(%edi)
		cmp    0x00000c(%ebx),%esi
		jne    _09016b_jump
		mov    %edi,0x00000c(%ebx)

	_09016b_jump:
		mov    %edi,%esi
		jmp    _090180_jump

	_09016f_jump:
		incl   0x00001c(%ebx)
		mov    %edx,0x000008(%esi)
		mov    %edi,0x000004(%esi)
		mov    %esi,0x000008(%edi)
		mov    %edx,%edi
		mov    %esi,0x000004(%edi)

	_090180_jump:
		decl   0x000018(%ebx)
		cmp    0x00000c(%ebx),%esi
		jae    _090190_jump
		cmp    0x000010(%ebx),%ecx
		jbe    _090190_jump
		mov    %ecx,0x000010(%ebx)

	_090190_jump:
		cmp    0x000014(%ebx),%ecx
		jbe    _090198_jump
		mov    %ecx,0x000014(%ebx)

	_090198_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    



_09019d_func:
		push   %ecx
		push   %edx
		push   %esi
		mov    _0abbac_data,%edx
		cmp    %edx,%eax
		jne    _0901b3_jump
		mov    0x000008(%edx),%edx
		mov    %edx,_0abbac_data

	_0901b3_jump:
		cmp    _0e0ff0_data,%eax
		jne    _0901c3_jump
		xor    %ecx,%ecx
		mov    %ecx,_0e0ff0_data

	_0901c3_jump:
		mov    _0abba8_data,%esi
		cmp    %esi,%eax
		jne    _0901d6_jump
		mov    0x000008(%esi),%edx
		mov    %edx,_0abba8_data

	_0901d6_jump:
		mov    0x000004(%eax),%edx
		mov    0x000008(%eax),%eax
		test   %edx,%edx
		je     _0901e3_jump
		mov    %eax,0x000008(%edx)

	_0901e3_jump:
		test   %eax,%eax
		je     _0901ea_jump
		mov    %edx,0x000004(%eax)

	_0901ea_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_0901ee_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0abba8_data,%edx

	_0901f9_jump:
		test   %edx,%edx
		je     _0904d8_jump
		mov    0x000024(%edx),%eax
		mov    (%eax),%eax
		mov    (%edx),%ebx
		add    $0x00002c,%eax
		cmp    %ebx,%eax
		jne    _090245_jump
		lea    -0x000008(%edx),%ebx
		mov    %edx,%eax
		mov    0x000008(%edx),%ecx
		call   _09019d_func
		mov    %ecx,%edx
		mov    0x000004(%ebx),%ecx
		test   %ecx,%ecx
		jne    _090235_jump
		mov    (%ebx),%esi
		mov    (%ebx),%di
		shr    $0x000010,%esi
		mov    $0x000005,%ah
		mov    $0x000002,%al
		int    $0x000031
		jmp    _0901f9_jump

	_090235_jump:
		mov    %ecx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		jmp    _0901f9_jump

	_090245_jump:
		mov    0x000008(%edx),%edx
		jmp    _0901f9_jump



_090349_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0abba8_data,%eax
		xor    %ebx,%ebx
		jmp    _09035f_jump

	_090356_jump:
		cmp    %eax,%edx
		jb     _090363_jump
		mov    %eax,%ebx
		mov    0x000008(%eax),%eax

	_09035f_jump:
		test   %eax,%eax
		jne    _090356_jump

	_090363_jump:
		mov    %ebx,0x000004(%edx)
		mov    %eax,0x000008(%edx)
		test   %ebx,%ebx
		je     _090372_jump
		mov    %edx,0x000008(%ebx)
		jmp    _090378_jump

	_090372_jump:
		mov    %edx,_0abba8_data

	_090378_jump:
		test   %eax,%eax
		je     _09037f_jump
		mov    %edx,0x000004(%eax)

	_09037f_jump:
		lea    0x000020(%edx),%ebx
		mov    (%edx),%eax
		add    $0x00002c,%edx
		movl   $0x000000,-0x00000c(%edx)
		movl   $0x000000,-0x00001c(%edx)
		movl   $0x000000,-0x000014(%edx)
		movl   $0x000000,-0x000010(%edx)
		mov    %ebx,-0x000008(%edx)
		mov    %ebx,-0x000004(%edx)
		sub    $0x00002c,%eax
		mov    %ebx,-0x000020(%edx)
		mov    %eax,(%edx)
		movl   $0xffffffff,(%edx,%eax,1)
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_0903bd_func:
		push   %ebx
		push   %edx
		mov    _0abba8_data,%edx
		test   %edx,%edx
		je     _090408_jump
		mov    0x000024(%edx),%edx
		mov    (%edx),%eax
		add    %edx,%eax
		lea    0x000004(%eax),%ebx
		xor    %eax,%eax
		mov    _0abbea_data,%al
		cmp    $0x000002,%eax
		jl     _0903fb_jump
		cmp    $0x000008,%eax
		jg     _0903fb_jump
		cmpb   $0x000000,_0abbec_data
		jne    _0903fb_jump
		xor    %eax,%eax
		mov    %ds,%ax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0abbbc_data

	_0903fb_jump:
		cmp    _0abbbc_data,%ebx
		jne    _090408_jump
		mov    (%edx),%eax
		pop    %edx
		pop    %ebx
		ret    

	_090408_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_09040d_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		mov    (%esp),%ebx
		mov    (%esp),%ecx
		shr    $0x000010,%ebx
		call   _0901ee_func
		mov    $0x000005,%ah
		mov    $0x000001,%al
		int    $0x000031
		sbb    %eax,%eax
		inc    %eax
		je     _09043c_jump
		mov    %bx,%ax
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %di,(%eax)
		mov    %si,0x000002(%eax)

	_09043c_jump:
		test   %eax,%eax
		je     _090459_jump
		mov    (%esp),%ebx
		lea    0x000008(%eax),%edx
		sub    $0x000008,%ebx
		mov    %ebx,(%edx)
		movl   $0x000000,0x000004(%eax)
		mov    %edx,%eax
		jmp    _0904d5_jump

	_090459_jump:
		testw  $0x00fff0,_0e103e_data
		je     _09046e_jump
		movl   $0x0fffff,_0e103c_data

	_09046e_jump:
		cmpl   $0x010000,(%esp)
		ja     _0904d3_jump
		mov    _0e103c_data,%ebx
		shr    $0x000004,%ebx
		or     $0x000001,%bl
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jl     _0904d3_jump
		mov    (%esp),%ebx
		shr    $0x000004,%ebx
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%ebx
		mov    %edx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		test   %esi,%esi
		jl     _0904d3_jump
		mov    $0x000000,%ah
		mov    $0x000006,%al
		int    $0x000031
		mov    %ecx,%eax
		shl    $0x000010,%eax
		mov    %dx,%ax
		add    $0x000008,%eax
		mov    (%esp),%edx
		mov    %esi,-0x000004(%eax)
		sub    $0x000008,%edx
		mov    %edx,(%eax)
		jmp    _0904d5_jump

	_0904d3_jump:
		xor    %eax,%eax

	_0904d5_jump:
		add    $0x000004,%esp

	_0904d8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0904de_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		cmpl   $0x000000,_0ade58_data
		jne    _0904f1_jump

	_0904ed_jump:
		xor    %eax,%eax
		jmp    _0904d5_jump

	_0904f1_jump:
		cmpl   $0xfffffffe,_0abbbc_data
		je     _0904ed_jump
		mov    %esp,%eax
		call   _0906da_func
		test   %eax,%eax
		je     _0904d5_jump
		xor    %eax,%eax
		mov    _0abbea_data,%al
		cmp    $0x000001,%eax
		jne    _090526_jump
		mov    (%esp),%eax
		call   _09040d_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _090541_jump
		mov    (%eax),%eax
		mov    %eax,(%esp)
		jmp    _090541_jump

	_090526_jump:
		mov    (%esp),%ebx
		mov    $0x80004800,%eax
		int    $0x000021
		sbb    %ebx,%ebx
		not    %ebx
		and    %ebx,%eax
		mov    (%esp),%ecx
		sub    $0x000004,%ecx
		mov    %eax,%edx
		mov    %ecx,(%esp)

	_090541_jump:
		test   %edx,%edx
		je     _0904ed_jump
		mov    (%esp),%eax
		mov    (%esp),%esi
		sub    $0x000004,%eax
		cmp    %esi,%eax
		ja     _0904ed_jump
		mov    %eax,(%esp)
		cmp    $0x000038,%eax
		jb     _0904ed_jump
		mov    %eax,(%edx)
		mov    %edx,%eax
		call   _090349_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)
		or     $0x000001,%al
		mov    %eax,(%ebx)
		mov    0x000018(%edx),%edi
		movl   $0xffffffff,0x000014(%edx)
		inc    %edi
		lea    0x000004(%ebx),%eax
		mov    %edi,0x000018(%edx)
		call   _08bdf0_func
		mov    $0x000001,%eax
		jmp    _0904d5_jump



_09058e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		push   %eax
		xor    %eax,%eax
		mov    _0abbea_data,%al
		cmp    $0x000001,%eax
		jne    _0905a9_jump
		cmpb   $0x000000,_0abbeb_data
		je     _0905b5_jump

	_0905a9_jump:
		xor    %eax,%eax
		mov    _0abbea_data,%al
		cmp    $0x000009,%eax
		jne    _0905c2_jump

	_0905b5_jump:
		mov    (%esp),%eax
		call   _0904de_func
		jmp    _0906d1_jump

	_0905c2_jump:
		cmpl   $0x000000,_0ade58_data
		jne    _0905d2_jump

	_0905cb_jump:
		xor    %eax,%eax
		jmp    _0906d1_jump

	_0905d2_jump:
		cmpl   $0xfffffffe,_0abbbc_data
		je     _0905cb_jump
		mov    %esp,%eax
		call   _0906da_func
		test   %eax,%eax
		je     _0906d1_jump
		xor    %eax,%eax
		mov    _0abbea_data,%al
		cmp    $0x000002,%eax
		jl     _090612_jump
		cmp    $0x000008,%eax
		jg     _090612_jump
		cmpb   $0x000000,_0abbec_data
		jne    _090612_jump
		xor    %eax,%eax
		mov    %ds,%ax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0abbbc_data

	_090612_jump:
		mov    (%esp),%edx
		mov    _0abbbc_data,%ecx
		add    %ecx,%edx
		cmp    %ecx,%edx
		jae    _090626_jump
		mov    $0xfffffffe,%edx

	_090626_jump:
		mov    %edx,%eax
		call   _091867_func
		cmp    $0xffffffff,%eax
		je     _0905cb_jump
		mov    %eax,%ebx
		cmp    $0xfffffff8,%eax
		ja     _0905cb_jump
		cmp    %eax,%edx
		jbe    _0905cb_jump
		sub    %eax,%edx
		mov    %edx,(%esp)
		lea    -0x000004(%edx),%eax
		cmp    %edx,%eax
		ja     _0905cb_jump
		mov    _0abba8_data,%edx
		mov    %eax,(%esp)
		jmp    _090666_jump

	_090654_jump:
		mov    0x000008(%edx),%ebp
		test   %ebp,%ebp
		je     _09066a_jump
		cmp    %ebx,%edx
		ja     _090663_jump
		cmp    %ebp,%ebx
		jb     _09066a_jump

	_090663_jump:
		mov    0x000008(%edx),%edx

	_090666_jump:
		test   %edx,%edx
		jne    _090654_jump

	_09066a_jump:
		test   %edx,%edx
		je     _090694_jump
		mov    (%edx),%eax
		lea    -0x000004(%ebx),%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jne    _090694_jump
		mov    (%esp),%esi
		add    $0x000004,%esi
		mov    %esi,(%esp)
		add    %esi,(%edx)
		mov    (%esp),%ebp
		mov    %eax,%ebx
		lea    (%eax,%ebp,1),%ecx
		movl   $0xffffffff,(%ecx)
		jmp    _0906b3_jump

	_090694_jump:
		cmpl   $0x000038,(%esp)
		jb     _0905cb_jump
		mov    (%esp),%eax
		mov    %eax,(%ebx)
		mov    %ebx,%eax
		mov    %ebx,%edx
		call   _090349_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)

	_0906b3_jump:
		mov    (%esp),%eax
		or     $0x000001,%al
		mov    %eax,(%ebx)
		incl   0x000018(%edx)
		lea    0x000004(%ebx),%eax
		movl   $0xffffffff,0x000014(%edx)
		call   _08bdf0_func
		mov    $0x000001,%eax

	_0906d1_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0906da_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    (%eax),%edx
		add    $0x00000b,%edx
		and    $0x0000f8,%dl
		test   %edx,%edx
		jne    _0906f1_jump

	_0906eb_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0906f1_jump:
		xor    %eax,%eax
		mov    _0abbea_data,%al
		cmp    $0x000001,%eax
		jne    _090706_jump
		cmpb   $0x000000,_0abbeb_data
		je     _090712_jump

	_090706_jump:
		xor    %eax,%eax
		mov    _0abbea_data,%al
		cmp    $0x000009,%eax
		jne    _090717_jump

	_090712_jump:
		add    $0x000008,%edx
		jmp    _09071e_jump

	_090717_jump:
		call   _0903bd_func
		sub    %eax,%edx

	_09071e_jump:
		mov    %edx,(%ebx)
		add    $0x00003c,%edx
		cmp    (%ebx),%edx
		jb     _0906eb_jump
		mov    _0ade5c_data,%esi
		cmp    %esi,%edx
		jae    _090736_jump
		mov    %esi,%edx
		and    $0x0000fe,%dl

	_090736_jump:
		mov    %edx,(%ebx)
		add    $0x000fff,%edx
		cmp    (%ebx),%edx
		jb     _0906eb_jump
		xor    %dl,%dl
		and    $0x0000f0,%dh
		mov    %edx,(%ebx)
		test   %edx,%edx
		setne  %al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_090757_func:
		xor    %eax,%eax
		ret    



_09075a_func:
		push   %edx
		mov    $0x000001,%edx
		mov    $_0a4e0c_data,%eax
		call   _090c2f_func
		pop    %edx
		ret    



_09076c_func:
		fsave  (%eax)
		fwait
		ret    



_090771_func:
		frstor (%eax)
		fwait
		ret    



_090775_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0abbb5_data
		je     _090796_jump
		mov    $_09076c_func,%edx
		mov    $_090771_func,%ebx
		mov    %edx,_0ade60_data
		mov    %ebx,_0ade64_data

	_090796_jump:
		xor    %eax,%eax
		mov    _0ade68_data,%ax
		call   _091934_func
		pop    %edx
		pop    %ebx
		ret    



_0907b0_func:
		push   %edx
		mov    _0abbb4_data,%ah
		test   %ah,%ah
		jne    _0907f8_jump
		mov    %ah,_0abbb5_data
		xor    %dl,%dl
		sub    %eax,%eax
		push   %eax
		fninit 
		fnstcw (%esp)
		pop    %eax
		mov    %ah,%al
		xor    %dh,%dh
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _0907e3_jump
		call   _090775_func
		mov    %al,%dl
		mov    %al,%dh

	_0907e3_jump:
		cmpb   $0x000000,_0abbe8_data
		jne    _0907f8_jump
		mov    %dl,_0abbb4_data
		mov    %dh,_0abbb5_data

	_0907f8_jump:
		pop    %edx
		ret    



_0907fa_func:
		call   *_0abbf5_data
		ret    



_090801_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    $0x008000,%edx
		mov    _0abbea_data,%al
		mov    %edx,_0ade5c_data
		cmp    $0x000002,%eax
		jl     _090822_jump
		cmp    $0x000008,%eax
		jle    _090829_jump

	_090822_jump:
		mov    $0x000001,%eax
		jmp    _09082b_jump

	_090829_jump:
		xor    %eax,%eax

	_09082b_jump:
		test   %eax,%eax
		je     _090864_jump
		call   _091a68_func
		cmp    $0x000001,%eax
		jne    _090864_jump
		mov    $_085b83_jump,%edx
		mov    $_085b78_func,%eax
		sub    $_085b78_func,%edx
		mov    %dx,%di
		shr    $0x000010,%edx
		mov    %dx,%si
		mov    %ax,%bx
		shr    $0x000010,%eax
		mov    %ax,%cx
		mov    $0x000600,%ax
		int    $0x000031
		sbb    %ax,%ax

	_090864_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_09086a_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %edx,%eax
		mov    %ds,%ebx
		movl   $0x000000,0x00000c(%edi)
		mov    %esi,%ecx
		mov    0x000015(%edi),%dl
		xor    %ebp,%ebp
		cmp    $0x000047,%dl
		jb     _0908a9_jump
		jbe    _0908b6_jump
		cmp    $0x000066,%dl
		jb     _09089f_jump
		jbe    _0908cb_jump
		cmp    $0x000067,%dl
		je     _0908b6_jump
		jmp    _090948_jump

	_09089f_jump:
		cmp    $0x000065,%dl
		je     _0908c6_jump
		jmp    _090948_jump

	_0908a9_jump:
		cmp    $0x000045,%dl
		jb     _090948_jump
		jbe    _0908c6_jump
		jmp    _0908cb_jump

	_0908b6_jump:
		cmpl   $0x000000,0x000008(%edi)
		jne    _0908c3_jump
		movl   $0x000001,0x000008(%edi)

	_0908c3_jump:
		sub    $0x000002,%dl

	_0908c6_jump:
		mov    $0x000001,%ebp

	_0908cb_jump:
		mov    (%eax),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%eax)
		mov    -0x000008(%ecx),%eax
		mov    %eax,(%esp)
		mov    -0x000004(%ecx),%eax
		mov    %eax,0x000004(%esp)
		cmpl   $0xffffffff,0x000008(%edi)
		jne    _0908ec_jump
		movl   $0x000006,0x000008(%edi)

	_0908ec_jump:
		mov    0x000015(%edi),%al
		and    $0x00005f,%al
		and    $0x0000ff,%eax
		push   %eax
		xor    %eax,%eax
		mov    %dl,%al
		push   %eax
		push   $0x000003
		push   %ebp
		mov    0x000008(%edi),%ebx
		xor    %ecx,%ecx
		push   $0x0000ff
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _09209d_func
		xor    %eax,%eax
		mov    (%esi),%al
		cmp    $0x00002a,%eax
		jne    _090921_jump
		movb   $0x00002a,0x000016(%edi)

	_090921_jump:
		movb   $0x000000,0x0000ff(%esi)

	_090928_jump:
		xor    %eax,%eax
		mov    (%esi),%al
		cmp    $0x000020,%eax
		jne    _090934_jump
		inc    %esi
		jmp    _090928_jump

	_090934_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		call   _090954_func
		mov    %ds,%ebx
		mov    %esi,%ecx
		movl   $0xffffffff,0x000008(%edi)

	_090948_jump:
		mov    %ebx,%edx
		mov    %ecx,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_090954_func:
		push   %ebx
		mov    %edx,%ebx
		mov    0x000014(%edx),%dl
		and    $0x000001,%dl
		and    $0x0000ff,%edx
		jne    _0909b1_jump

	_090965_jump:
		cmpb   $0x000000,(%eax)
		je     _09097b_jump
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000065,%edx
		je     _09097b_jump
		cmp    $0x000045,%edx
		je     _09097b_jump
		inc    %eax
		jmp    _090965_jump

	_09097b_jump:
		mov    %eax,%edx
		mov    0x000015(%ebx),%bl
		and    $0x0000ff,%ebx
		dec    %eax
		cmp    $0x000047,%ebx
		je     _090991_jump
		cmp    $0x000067,%ebx
		jne    _09099d_jump

	_090991_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000030,%ebx
		jne    _09099d_jump
		dec    %eax
		jmp    _090991_jump

	_09099d_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x00002e,%ebx
		je     _0909a7_jump
		inc    %eax

	_0909a7_jump:
		mov    (%edx),%bl
		inc    %edx
		mov    %bl,(%eax)
		inc    %eax
		test   %bl,%bl
		jne    _0909a7_jump

	_0909b1_jump:
		pop    %ebx
		ret    



_0909b3_func:
		push   %ebx
		mov    %edx,%ebx
		xor    %edx,%edx
		call   _0922a4_func
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		pop    %ebx
		ret    



_0909c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ab9d5_data,%ah
		and    $0x0000f8,%ah
		mov    %ah,%dl
		mov    %ah,_0ab9d5_data
		or     $0x000004,%dl
		mov    $_0ab994_data,%ecx
		mov    %dl,_0ab9d5_data
		jmp    _090a2a_jump

	_0909e8_jump:
		mov    $0x000008,%eax
		call   _08bcf5_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _090a17_jump
		mov    $0x000008,%eax
		call   _08bcf5_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _090a17_jump
		mov    $0x000001,%edx
		mov    $_0a4e30_data,%eax
		call   _090c2f_func

	_090a17_jump:
		mov    _0e0ff4_data,%eax
		mov    %ecx,0x000004(%ebx)
		mov    %ebx,_0e0ff4_data
		add    $0x00001a,%ecx
		mov    %eax,(%ebx)

	_090a2a_jump:
		mov    0x00000c(%ecx),%edx
		test   %edx,%edx
		jne    _0909e8_jump
		mov    %edx,_0e0fec_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_090a3b_func:
		xor    %eax,%eax
		call   _090a4c_func
		jmp    _08d30b_jump



_090a4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    $_0ab994_data,%esi
		add    %eax,%eax
		xor    %ebx,%ebx
		add    %eax,%esi
		mov    _0e0ff4_data,%eax
		jmp    _090a99_jump

	_090a6e_jump:
		mov    (%eax),%ecx
		mov    0x000004(%eax),%eax
		mov    $0x000001,%edx
		testb  $0x000040,0x00000d(%eax)
		jne    _090a91_jump
		testb  $0x000008,0x00000d(%eax)
		jne    _090a91_jump
		cmp    %esi,%eax
		jb     _090a97_jump
		cmp    $_0aba16_data,%eax
		jae    _090a91_jump
		xor    %edx,%edx

	_090a91_jump:
		call   _08613f_func
		inc    %ebx

	_090a97_jump:
		mov    %ecx,%eax

	_090a99_jump:
		test   %eax,%eax
		jne    _090a6e_jump
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_090aaa_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000002,%eax
		call   _0924b7_func
		mov    %eax,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		mov    _0a514c_data(,%eax,4),%eax
		call   _08e4ed_func
		mov    $_0a4ee5_data,%eax
		mov    %ebx,%edx
		call   _08e4ed_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _08e4ed_func
		mov    $0x00000a,%eax
		mov    %ebx,%edx
		call   _086b49_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_090af2_func:
		push   %ebx
		mov    %eax,%ebx
		call   *_0addac_data
		test   %eax,%eax
		jne    _090b1a_jump
		mov    0x000004(%ebx),%edx
		mov    (%ebx),%eax
		call   _090aaa_func
		cmpl   $0x000001,(%ebx)
		jne    _090b15_jump
		call   _08d1f8_func
		jmp    _090b1a_jump

	_090b15_jump:
		call   _08d209_func

	_090b1a_jump:
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%edx
		pop    %ebx
		ret    



_090bd5_func:
		sub    $0x000010,%esp
		movl   $0xc0000000,0x000008(%esp)
		movl   $0x4150017e,0x00000c(%esp)
		movl   $0x80000000,(%esp)
		movl   $0x4147ffff,0x000004(%esp)
		xor    %eax,%eax
		mov    _0abbb5_data,%al
		cmp    $0x000003,%eax
		jl     _090c26_jump
		fldl   0x000008(%esp)
		fld    %st(0)
		fldl   (%esp)
		fxch   %st(1)
		fdiv   %st(1),%st
		fmulp  %st,%st(1)
		fsubrp %st,%st(1)
		fcompl _0a4eec_data
		fnstsw %ax
		sahf   
		jbe    _090c26_jump
		orb    $0x000001,_0abc78_data

	_090c26_jump:
		add    $0x000010,%esp
		ret    



_090c2f_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %ds,%edx
		call   _0924d6_func
		test   %eax,%eax
		jne    _090c49_jump
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   _085b3d_func

	_090c49_jump:
		pop    %ecx
		pop    %ebx
		ret    



_090c56_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		mov    %edx,%esi
		mov    %eax,%ebp
		mov    0x000000(%ebp),%eax
		mov    0x000004(%ebp),%edx
		xchg   %ebp,%esi
		mov    %eax,0x000000(%ebp)
		mov    %edx,0x000004(%ebp)
		mov    %edx,%ecx
		and    $0x7ff00000,%ecx
		je     _090c81_jump
		cmp    $0x43300000,%ecx
		jb     _090c8f_jump
		xchg   %esi,%ebp

	_090c81_jump:
		sub    %eax,%eax
		mov    %eax,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_090c8f_jump:
		mov    %ecx,%edi
		shr    $0x000014,%ecx
		sub    $0x0003ff,%cx
		jb     _090c81_jump
		push   %edx
		sub    %eax,%eax
		mov    $0xfff00000,%edx
		cmp    $0x000014,%cl
		jbe    _090cb4_jump
		sar    $0x000015,%edx
		rcr    %eax
		sub    $0x000015,%cl
		sar    %cl,%eax
		jmp    _090cb6_jump

	_090cb4_jump:
		sar    %cl,%edx

	_090cb6_jump:
		and    %edx,0x000004(%ebp)
		and    %eax,0x000000(%ebp)
		not    %edx
		not    %eax
		mov    %esi,%ebp
		and    0x000004(%ebp),%edx
		and    0x000000(%ebp),%eax
		call   _090d31_func
		pop    %esi
		or     %edx,%edx
		je     _090cda_jump
		and    $0x80000000,%esi
		or     %esi,%edx

	_090cda_jump:
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_090ce6_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		push   %edx
		mov    %eax,%esi
		sub    %edx,%edx
		sub    %ecx,%ecx
		sub    %eax,%eax

	_090cf4_jump:
		mov    (%esi),%al
		cmp    $0x000000,%al
		je     _090d18_jump
		mov    %edx,%edi
		mov    %ecx,%ebx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ebx,%ecx
		adc    %edi,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		and    $0x00000f,%al
		add    %eax,%ecx
		adc    $0x000000,%edx
		inc    %esi
		jmp    _090cf4_jump

	_090d18_jump:
		mov    %ecx,%eax
		mov    $0x43300000,%edi
		call   _090d31_func
		pop    %ebp
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_090d31_func:
		sub    %esi,%esi
		or     %eax,%esi
		or     %edx,%esi
		je     _090d81_jump
		test   $0xfff00000,%edx
		jne    _090d55_jump

	_090d41_jump:
		sub    $0x100000,%edi
		add    %eax,%eax
		adc    %edx,%edx
		test   $0xfff00000,%edx
		je     _090d41_jump
		jmp    _090d79_jump

	_090d55_jump:
		test   $0xffe00000,%edx
		je     _090d79_jump

	_090d5d_jump:
		add    $0x100000,%edi
		shr    %edx
		rcr    %eax
		rcr    %esi
		test   $0xffe00000,%edx
		jne    _090d5d_jump
		adc    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_090d79_jump:
		and    $0x0fffff,%edx
		or     %edi,%edx

	_090d81_jump:
		ret    



_090d82_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		test   $0x000003,%bl
		jne    _090db7_jump
		mov    %eax,%edx
		mov    $0x000064,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _090da5_jump

	_090d9c_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_090da5_jump:
		mov    $0x000190,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _090d9c_jump

	_090db7_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_090dbd_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    0x000020(%eax),%ecx
		test   %ecx,%ecx
		jne    _090e8a_jump
		lea    0x00076c(%edx),%eax
		call   _090d82_func
		test   %eax,%eax
		je     _090df4_jump
		mov    0x000010(%ebx),%eax
		mov    _0a5182_data(,%eax,2),%esi
		mov    _0a5180_data(,%eax,2),%eax
		jmp    _090e05_jump

	_090df4_jump:
		mov    0x000010(%ebx),%eax
		mov    _0a5168_data(,%eax,2),%esi
		mov    _0a5166_data(,%eax,2),%eax

	_090e05_jump:
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sub    %eax,%esi
		xor    %edi,%edi
		mov    $0x000001,%ecx
		mov    %edi,(%esp)
		mov    %edi,0x000004(%esp)
		mov    %edi,0x000008(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    0x000010(%ebx),%eax
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    %esp,%eax
		mov    %edi,0x000020(%esp)
		call   _08fc85_func
		mov    0x000018(%esp),%ebp
		mov    0x000018(%ebx),%edx
		sub    %ebp,%edx
		add    $0x000007,%edx
		mov    $0x000007,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00000c(%ebx),%eax
		cmp    $0x000005,%eax
		jne    _090e78_jump
		lea    -0x000001(%eax),%ecx
		mov    %ecx,%edi
		shl    $0x000003,%edi
		lea    0x000001(%edx),%eax
		sub    %ecx,%edi
		add    %edi,%eax
		cmp    %esi,%eax
		jle    _090e74_jump
		mov    0x00000c(%ebx),%eax
		sub    $0x000002,%eax
		jmp    _090e79_jump

	_090e74_jump:
		mov    %ecx,%eax
		jmp    _090e79_jump

	_090e78_jump:
		dec    %eax

	_090e79_jump:
		mov    0x00001c(%esp),%ebx
		add    %edx,%ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		add    %ebx,%eax
		jmp    _090e99_jump

	_090e8a_jump:
		cmp    $0x000001,%ecx
		jne    _090e96_jump
		mov    0x00001c(%eax),%eax
		sub    %ecx,%eax
		jmp    _090e99_jump

	_090e96_jump:
		mov    0x00001c(%eax),%eax

	_090e99_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_090ea2_func:
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		mov    0x000010(%eax),%esi
		cmp    0x000010(%edx),%esi
		jle    _090eb6_jump

	_090eae_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %ecx
		ret    

	_090eb6_jump:
		cmp    0x000010(%ecx),%esi
		jl     _090ed1_jump
		mov    %ebx,%edx
		call   _090dbd_func
		mov    %eax,%esi
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _090dbd_func
		cmp    %eax,%esi
		jg     _090eae_jump

	_090ed1_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		ret    



_090ed6_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ecx
		mov    _0ade4e_data,%eax
		mov    (%eax),%dl
		xor    %edi,%edi
		test   %dl,%dl
		je     _09118a_jump
		mov    $_0adddc_data,%edx
		mov    $_0addb8_data,%eax
		mov    0x000014(%ecx),%ebx
		call   _090ea2_func
		mov    %eax,0x000014(%esp)
		test   %eax,%eax
		je     _090f18_jump
		mov    $_0adddc_data,%esi
		mov    $_0addb8_data,%ebx
		jmp    _090f22_jump

	_090f18_jump:
		mov    $_0addb8_data,%esi
		mov    $_0adddc_data,%ebx

	_090f22_jump:
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		mov    0x000010(%ecx),%ebp
		call   _090d82_func
		mov    %eax,%edx
		lea    0x000000(%ebp,%ebp,1),%eax
		test   %edx,%edx
		je     _090f4a_jump
		mov    _0a5182_data(%eax),%edx
		mov    _0a5180_data(%eax),%eax
		jmp    _090f56_jump

	_090f4a_jump:
		mov    _0a5168_data(%eax),%edx
		mov    _0a5166_data(%eax),%eax

	_090f56_jump:
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00000c(%esp)
		xor    %edx,%edx
		mov    0x000020(%esi),%eax
		mov    %edx,0x000010(%esp)
		test   %eax,%eax
		jne    _091026_jump
		mov    0x000010(%esi),%eax
		cmp    %eax,%ebp
		jle    _090f84_jump
		mov    $0x000001,%edi
		jmp    _09105f_jump

	_090f84_jump:
		jne    _09105f_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%esi),%eax
		add    $0x000007,%edx
		sub    %eax,%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		sub    %edx,%eax
		mov    0x000018(%ecx),%edx
		mov    %eax,(%esp)
		add    $0x000006,%edx
		sub    0x000018(%esi),%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		dec    %eax
		sub    %edx,%eax
		mov    0x00000c(%esi),%edx
		mov    %eax,0x000008(%esp)
		cmp    $0x000005,%edx
		jne    _090fff_jump
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000007,%eax
		cmp    %edx,%eax
		jge    _09105f_jump
		mov    0x000008(%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jl     _09105f_jump
		jmp    _09105b_jump

	_090fff_jump:
		lea    -0x000001(%edx),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		inc    %eax
		cmp    %edx,%eax
		jg     _09105f_jump
		mov    0x000008(%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jle    _09105f_jump
		jmp    _09105b_jump

	_091026_jump:
		mov    0x00001c(%esi),%edx
		cmp    $0x000001,%eax
		jne    _09104d_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _090d82_func
		test   %eax,%eax
		je     _09104c_jump
		mov    _0a516a_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _09104c_jump
		inc    %edx

	_09104c_jump:
		dec    %edx

	_09104d_jump:
		mov    0x00001c(%ecx),%eax
		cmp    %eax,%edx
		jg     _09105f_jump
		mov    $0x000001,%edi
		jne    _09105f_jump

	_09105b_jump:
		mov    %edi,0x000010(%esp)

	_09105f_jump:
		cmpl   $0x000000,0x000010(%esp)
		je     _09107c_jump
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _091199_func
		test   %eax,%eax
		sete   %al
		mov    %eax,%edi
		and    $0x0000ff,%edi

	_09107c_jump:
		test   %edi,%edi
		jne    _091093_jump
		mov    0x000014(%esp),%edx
		test   %edx,%edx
		je     _09118a_jump
		mov    %edx,%edi
		jmp    _09118a_jump

	_091093_jump:
		mov    0x000020(%ebx),%eax
		xor    %esi,%esi
		test   %eax,%eax
		jne    _091136_jump
		mov    0x000010(%ebx),%eax
		cmp    %eax,%ebp
		jle    _0910ae_jump
		xor    %edi,%edi
		jmp    _09116f_jump

	_0910ae_jump:
		jne    _09116f_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%ebx),%ebp
		add    $0x000007,%edx
		sub    %ebp,%edx
		mov    $0x000007,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00000c(%ecx),%eax
		sub    %edx,%eax
		mov    0x000018(%ecx),%edx
		mov    %eax,0x000004(%esp)
		add    $0x000006,%edx
		mov    0x000018(%ebx),%eax
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00000c(%ecx),%eax
		dec    %eax
		xor    %edi,%edi
		sub    %edx,%eax
		mov    0x00000c(%ebx),%ebp
		mov    %eax,%edx
		cmp    $0x000005,%ebp
		jne    _091117_jump
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%ebp
		sub    $0x000007,%eax
		cmp    %ebp,%eax
		jl     _091111_jump

	_091107_jump:
		mov    $0x000001,%edi
		jmp    _09116f_jump

	_091111_jump:
		cmp    %eax,%edx
		jg     _09116f_jump
		jmp    _09116a_jump

	_091117_jump:
		lea    -0x000001(%ebp),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%ebp
		shl    $0x000003,%eax
		sub    %ebp,%eax
		mov    0x000004(%esp),%ebp
		inc    %eax
		cmp    %ebp,%eax
		jg     _091107_jump
		cmp    %eax,%edx
		jge    _09116f_jump
		jmp    _09116a_jump

	_091136_jump:
		mov    0x00001c(%ebx),%edx
		cmp    $0x000001,%eax
		jne    _09115d_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _090d82_func
		test   %eax,%eax
		je     _09115c_jump
		mov    _0a516a_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _09115c_jump
		inc    %edx

	_09115c_jump:
		dec    %edx

	_09115d_jump:
		mov    0x00001c(%ecx),%eax
		cmp    %eax,%edx
		jg     _09116f_jump
		xor    %edi,%edi
		cmp    %eax,%edx
		jne    _09116f_jump

	_09116a_jump:
		mov    $0x000001,%esi

	_09116f_jump:
		test   %esi,%esi
		je     _09117e_jump
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _091199_func
		mov    %eax,%edi

	_09117e_jump:
		mov    0x000014(%esp),%eax
		test   %eax,%eax
		je     _09118a_jump
		sub    %edi,%eax
		mov    %eax,%edi

	_09118a_jump:
		mov    %edi,%eax
		mov    %edi,0x000020(%ecx)
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_091199_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    0x000008(%eax),%ecx
		mov    0x000008(%edx),%esi
		xor    %ebx,%ebx
		cmp    %esi,%ecx
		jl     _0911bd_jump
		jne    _0911c2_jump
		mov    0x000004(%eax),%ecx
		mov    0x000004(%edx),%ebp
		cmp    %ebp,%ecx
		jl     _0911bd_jump
		jne    _0911c2_jump
		mov    (%eax),%eax
		cmp    (%edx),%eax
		jge    _0911c2_jump

	_0911bd_jump:
		mov    $0x000001,%ebx

	_0911c2_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0911c9_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%eax
		cmp    $0x00a8c0,%edx
		jae    _0911f6_jump
		test   %ebx,%ebx
		jle    _0911f6_jump
		lea    0x015180(%edx),%esi
		sub    %ebx,%esi
		xor    %edx,%edx
		mov    $0x015180,%ebx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi
		dec    %edi
		jmp    _091205_jump

	_0911f6_jump:
		mov    $0x015180,%ebx
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi

	_091205_jump:
		mov    $0x015180,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %edx,%ebx
		mov    $0x000e10,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    %edx,%ebx
		mov    $0x00003c,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000004(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    $0x00016e,%ebx
		mov    %edi,%eax
		mov    %edx,(%ecx)
		xor    %edx,%edx
		div    %ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    %edi,%ebx
		sub    %eax,%ebx
		test   %edx,%edx
		jbe    _09126c_jump
		lea    -0x000001(%edx),%eax
		shr    $0x000002,%eax
		sub    %eax,%ebx

	_09126c_jump:
		lea    0x00076c(%edx),%eax
		call   _090d82_func
		add    $0x00016d,%eax

	_09127c_jump:
		cmp    %eax,%ebx
		jb     _091285_jump
		inc    %edx
		sub    %eax,%ebx
		jmp    _09127c_jump

	_091285_jump:
		mov    $_0a5168_data,%esi
		mov    %edx,0x000014(%ecx)
		lea    0x00076c(%edx),%eax
		mov    %ebx,0x00001c(%ecx)
		call   _090d82_func
		test   %eax,%eax
		je     _0912a4_jump
		mov    $_0a5182_data,%esi

	_0912a4_jump:
		mov    $0x00001f,%ebp
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		mov    %eax,%edx
		mov    (%esi,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    %edx,%ebx
		jb     _0912bc_jump
		inc    %eax

	_0912bc_jump:
		mov    %eax,0x000010(%ecx)
		movswl (%esi,%eax,2),%eax
		sub    %eax,%ebx
		xor    %edx,%edx
		inc    %ebx
		lea    0x000001(%edi),%eax
		mov    %ebx,0x00000c(%ecx)
		mov    $0x000007,%ebx
		div    %ebx
		mov    %ecx,%eax
		mov    %edx,0x000018(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_09135d_jump:
		mov    _0ade52_data,%ah
		test   $0x000001,%ah
		je     _09136d_jump
		test   $0x000002,%ah
		jne    _091374_jump

	_09136d_jump:
		orb    $0x000002,_0ade52_data

	_091374_jump:
		ret    



_091375_func:
		mov    $_0a4ef4_data,%eax
		call   _08f1d8_func
		test   %eax,%eax
		je     _09135d_jump
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    $_0ade00_data,%ebx
		mov    %edx,_0ade08_data
		mov    $_0ade0c_data,%edx
		call   _0913de_func
		mov    %eax,%ecx
		mov    (%eax),%ah
		test   %ah,%ah
		jne    _09160b_jump
		mov    %ah,_0ade2b_data
		jmp    _0916cf_jump



_0913ba_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ecx
		xor    %ebx,%ebx

	_0913c0_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _0913d9_jump
		cmp    $0x000039,%edx
		jg     _0913d9_jump
		imul   $0x00000a,%ebx,%ebx
		add    %ebx,%edx
		inc    %eax
		lea    -0x000030(%edx),%ebx
		jmp    _0913c0_jump

	_0913d9_jump:
		mov    %ebx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_0913de_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,0x000010(%esp)
		xor    %eax,%eax
		mov    0x000000(%ebp),%al
		cmp    $0x00003a,%eax
		jne    _0913f6_jump
		inc    %ebp

	_0913f6_jump:
		mov    %ebp,%esi

	_0913f8_jump:
		mov    0x000000(%ebp),%dl
		test   %dl,%dl
		je     _09141f_jump
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x00002c,%eax
		je     _09141f_jump
		cmp    $0x00002d,%eax
		je     _09141f_jump
		cmp    $0x00002b,%eax
		je     _09141f_jump
		cmp    $0x000030,%eax
		jl     _09141c_jump
		cmp    $0x000039,%eax
		jle    _09141f_jump

	_09141c_jump:
		inc    %ebp
		jmp    _0913f8_jump

	_09141f_jump:
		mov    %ebp,%eax
		sub    %esi,%eax
		mov    %eax,0x00000c(%esp)
		cmp    $0x00001e,%eax
		jle    _091434_jump
		movl   $0x00001e,0x00000c(%esp)

	_091434_jump:
		mov    0x00000c(%esp),%ecx
		mov    0x000010(%esp),%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x00000c(%esp),%ecx
		lea    (%edi,%ecx,1),%eax
		movb   $0x000000,(%eax)
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    %dl,%al
		lea    0x000001(%ebp),%edx
		cmp    $0x00002d,%eax
		jne    _091471_jump
		mov    $0x000001,%ecx
		jmp    _091476_jump

	_091471_jump:
		cmp    $0x00002b,%eax
		jne    _091478_jump

	_091476_jump:
		mov    %edx,%ebp

	_091478_jump:
		mov    0x000000(%ebp),%al
		and    $0x0000ff,%eax
		cmp    $0x000030,%eax
		jl     _0914fd_jump
		cmp    $0x000039,%eax
		jg     _0914fd_jump
		lea    0x000008(%esp),%edx
		xor    %esi,%esi
		mov    %ebp,%eax
		mov    %esi,(%esp)
		mov    %esi,0x000004(%esp)
		mov    %esi,0x000008(%esp)
		call   _0913ba_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebp
		cmp    $0x00003a,%edx
		jne    _0914d0_jump
		lea    0x000004(%esp),%edx
		inc    %eax
		call   _0913ba_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebp
		cmp    $0x00003a,%edx
		jne    _0914d0_jump
		mov    %esp,%edx
		inc    %eax
		call   _0913ba_func
		mov    %eax,%ebp

	_0914d0_jump:
		mov    0x000008(%esp),%esi
		mov    %esi,%eax
		shl    $0x000004,%eax
		sub    %esi,%eax
		mov    0x000004(%esp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    %esi,%eax
		shl    $0x000004,%eax
		sub    %esi,%eax
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,(%ebx)
		test   %ecx,%ecx
		je     _0914fd_jump
		neg    %edx
		mov    %edx,(%ebx)

	_0914fd_jump:
		mov    %ebp,%eax
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_091507_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		xor    %eax,%eax
		mov    (%ebx),%al
		mov    $0xffffffff,%esi
		cmp    $0x00004a,%eax
		jne    _091526_jump
		mov    $0x000001,%esi
		add    %esi,%ebx

	_091526_jump:
		xor    %eax,%eax
		mov    (%ebx),%al
		cmp    $0x00004d,%eax
		jne    _091532_jump
		inc    %ebx
		xor    %esi,%esi

	_091532_jump:
		lea    0x00000c(%esp),%edx
		mov    %ebx,%eax
		mov    %esi,0x000020(%ecx)
		call   _0913ba_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %esi,%esi
		je     _091551_jump
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00001c(%ecx)
		jmp    _09159e_jump

	_091551_jump:
		mov    0x00000c(%esp),%eax
		dec    %eax
		mov    %eax,0x000010(%ecx)
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002e,%eax
		jne    _091597_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _0913ba_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00000c(%ecx)
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002e,%eax
		jne    _091597_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _0913ba_func
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000018(%ecx)

	_091597_jump:
		movl   $0x000000,0x00001c(%ecx)

	_09159e_jump:
		mov    $0x000002,%edx
		xor    %esi,%esi
		xor    %eax,%eax
		mov    %edx,0x000008(%esp)
		mov    %esi,(%esp)
		mov    %esi,0x000004(%esp)
		mov    (%ebx),%al
		cmp    $0x00002f,%eax
		jne    _0915ef_jump
		lea    0x000008(%esp),%edx
		lea    0x000001(%ebx),%eax
		call   _0913ba_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebx
		cmp    $0x00003a,%edx
		jne    _0915ef_jump
		lea    0x000004(%esp),%edx
		inc    %eax
		call   _0913ba_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebx
		cmp    $0x00003a,%edx
		jne    _0915ef_jump
		mov    %esp,%edx
		inc    %eax
		call   _0913ba_func
		mov    %eax,%ebx

	_0915ef_jump:
		mov    (%esp),%eax
		mov    %eax,(%ecx)
		mov    0x000004(%esp),%eax
		mov    %eax,0x000004(%ecx)
		mov    0x000008(%esp),%eax
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		add    $0x000010,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_09160b_jump:
		mov    $0x000001,%ebx
		mov    $_0ade2b_data,%edx
		mov    _0ade00_data,%eax
		mov    %ebx,_0ade08_data
		sub    $0x000e10,%eax
		mov    %esp,%ebx
		mov    %eax,(%esp)
		mov    %ecx,%eax
		call   _0913de_func
		mov    (%esp),%ecx
		mov    _0ade00_data,%ebx
		sub    %ecx,%ebx
		mov    %ebx,_0ade04_data
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    %eax,%edx
		cmp    $0x00002c,%ebx
		jne    _09165a_jump
		mov    $_0addb8_data,%edx
		inc    %eax
		call   _091507_func
		mov    %eax,%edx

	_09165a_jump:
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002c,%eax
		jne    _0916cf_jump
		lea    0x000001(%edx),%eax
		mov    $_0adddc_data,%edx
		call   _091507_func
		mov    _0ade04_data,%eax
		mov    %eax,%edx
		mov    $0x000e10,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0adde4_data,%esi
		sub    %eax,%esi
		mov    _0ade04_data,%eax
		mov    %eax,%edx
		mov    $0x00003c,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0adde0_data,%edi
		mov    _0ade04_data,%eax
		sub    %edx,%edi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0adddc_data,%ebp
		mov    %esi,_0adde4_data
		sub    %edx,%ebp
		mov    %edi,_0adde0_data
		mov    %ebp,_0adddc_data

	_0916cf_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0916da_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		mov    $0x000000,%dl
		ftst   
		fnstsw %ax
		sahf   
		jae    _0916ef_jump
		fchs   
		not    %dl

	_0916ef_jump:
		fld1   
		fcom   %st(1)
		fnstsw %ax
		and    $0x004100,%ax
		je     _091720_jump
		fxch   %st(1)
		testb  $0x000001,_0abc78_data
		jne    _09170a_jump
		fpatan 
		jmp    _09170f_jump

	_09170a_jump:
		call   _0925d0_func

	_09170f_jump:
		mov    $0x000002,%ax
		mov    %ax,-0x000002(%ebp)
		fldpi  
		fidivs -0x000002(%ebp)
		fsubp  %st,%st(1)
		jmp    _091732_jump

	_091720_jump:
		testb  $0x000001,_0abc78_data
		jne    _09172d_jump
		fpatan 
		jmp    _091732_jump

	_09172d_jump:
		call   _0925d0_func

	_091732_jump:
		cmp    $0x000000,%dl
		je     _091739_jump
		fchs   

	_091739_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_091741_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ebp
		mov    %eax,%edi
		push   %ebp
		push   %edx
		mov    (%edi),%eax
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%ecx
		mov    0x00000c(%edi),%edx
		mov    0x000010(%edi),%esi
		mov    0x000014(%edi),%edi
		clc    
		int    $0x000021
		mov    %edi,%ebp
		pop    %edi
		mov    %eax,(%edi)
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edx,0x00000c(%edi)
		mov    %esi,0x000010(%edi)
		mov    %ebp,0x000014(%edi)
		sbb    %eax,%eax
		pop    %ebp
		mov    %eax,%edx
		mov    0x000000(%ebp),%ebx
		mov    %eax,0x000018(%ebp)
		mov    %ebx,%eax
		call   _08e40e_jump
		mov    0x000000(%ebp),%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_091867_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		push   %eax
		cmp    _0abbd0_data,%eax
		jb     _0918d2_jump
		cmpb   $0x000000,_0abbea_data
		jne    _0918e4_jump
		mov    (%esp),%ebp
		add    $0x00000f,%ebp
		shr    $0x000004,%ebp
		test   %ebp,%ebp
		jne    _091892_jump
		mov    $0xfffffff,%ebp

	_091892_jump:
		xor    %ebx,%ebx
		mov    %ds,%ax
		mov    %ax,%bx
		mov    $0x0000ed,%ah
		int    $0x000021
		shl    $0x00001f,%eax
		and    $0x00ffff,%edi
		or     %eax,%edi
		mov    %edi,%eax
		test   %edi,%edi
		jge    _0918bf_jump
		mov    %ebp,%ebx
		mov    %edi,%es
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _0918d2_jump

	_0918bf_jump:
		mov    %ds,%ax
		mov    %ebp,%ebx

	_0918c4_jump:
		mov    %eax,%es
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    _091919_jump

	_0918d2_jump:
		call   _08d52f_func
		movl   $0x000005,(%eax)
		mov    $0xffffffff,%eax
		jmp    _091927_jump

	_0918e4_jump:
		mov    (%esp),%ebx
		add    $0x000fff,%ebx
		shr    $0x00000c,%ebx
		test   %ebx,%ebx
		jne    _0918f9_jump
		mov    $0x0fffff,%ebx

	_0918f9_jump:
		xor    %eax,%eax
		mov    _0abbea_data,%al
		cmp    $0x000001,%eax
		jne    _091914_jump
		xor    %eax,%eax
		mov    _0abbeb_data,%al
		cmp    $0x000001,%eax
		jne    _091914_jump
		shl    $0x000008,%ebx

	_091914_jump:
		mov    %ds,%ax
		jmp    _0918c4_jump

	_091919_jump:
		mov    (%esp),%ebx
		mov    _0abbbc_data,%eax
		mov    %ebx,_0abbbc_data

	_091927_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_091932_jump:
		ret    



_091934_func:
		push   %ax
		finit  
		fld1   
		fldz   
		fdivrp %st,%st(1)
		fld    %st(0)
		fchs   
		fcompp 
		fnstsw %ax
		mov    $0x000002,%al
		sahf   
		je     _09194e_jump
		mov    $0x000003,%al

	_09194e_jump:
		finit  
		fldcw  (%esp)
		xchg   %ax,(%esp)
		pop    %ax
		ret    



_09195b_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _085b78_func
		mov    $_0e2030_data,%eax
		mov    %ds,%edx
		mov    %ss,%bx
		mov    %esp,%ecx
		mov    %edx,%ss
		mov    %eax,%esp
		mov    %bx,%dx
		mov    %ecx,%eax
		mov    _0abbcc_data,%esi
		mov    _0abbe4_data,%edi
		mov    %edx,%ecx
		mov    $_0e1040_data,%edx
		mov    %eax,%ebx
		mov    %edx,_0abbcc_data
		test   %edi,%edi
		jne    _0919bf_jump
		mov    _0ab96c_data,%eax
		cmp    $_085463_jump,%eax
		je     _0919bf_jump
		cmp    $_091cb2_func,%eax
		je     _0919bf_jump
		mov    $0x000004,%eax
		sti    
		cld    
		call   _0926f8_jump
		jmp    _0919d0_jump

	_0919bf_jump:
		mov    _0ade70_data,%dx
		mov    _0ade6c_data,%eax

	_0919cb_jump:
		call   _08b9e4_func

	_0919d0_jump:
		mov    %ecx,%edx
		mov    %ebx,%eax
		mov    %ss,%bx
		mov    %esp,%ecx
		mov    %edx,%ss
		mov    %eax,%esp
		mov    %bx,%dx
		mov    %ecx,%eax
		mov    %esi,_0abbcc_data
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_0919f0_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _085b78_func
		mov    $_0e2030_data,%eax
		mov    %ds,%edx
		mov    %ss,%bx
		mov    %esp,%ecx
		mov    %edx,%ss
		mov    %eax,%esp
		mov    %bx,%dx
		mov    %ecx,%eax
		mov    _0abbcc_data,%esi
		mov    _0abbe4_data,%edi
		mov    %edx,%ecx
		mov    $_0e1040_data,%edx
		mov    %eax,%ebx
		mov    %edx,_0abbcc_data
		test   %edi,%edi
		jne    _091a57_jump
		mov    _0ab96c_data,%eax
		cmp    $_085463_jump,%eax
		je     _091a57_jump
		cmp    $_091afc_func,%eax
		je     _091a57_jump
		mov    $0x000007,%eax
		sti    
		cld    
		call   _0926f8_jump
		jmp    _0919d0_jump

	_091a57_jump:
		mov    _0ade76_data,%dx
		mov    _0ade72_data,%eax
		jmp    _0919cb_jump



_091a68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		cmpl   $0x000000,_0ade84_data
		jne    _091aef_jump
		xor    %eax,%eax
		mov    _0abbea_data,%al
		cmp    $0x000001,%eax
		je     _091a93_jump
		mov    $0x001686,%ax
		int    $0x00002f
		test   %ax,%ax
		jne    _091ae5_jump

	_091a93_jump:
		mov    %esp,%esi
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,(%esp)
		xor    %dh,%dh
		mov    %ah,0x000001(%esp)
		mov    %dx,0x000002(%esp)
		mov    %ds,%edx
		mov    %ah,0x000004(%esp)
		push   %ds
		mov    %edx,%ds
		mov    $0x000400,%ax
		int    $0x000031
		mov    %ah,(%esi)
		mov    %al,0x000001(%esi)
		mov    %bx,0x000002(%esi)
		mov    %cl,0x000004(%esi)
		mov    %dh,0x000005(%esi)
		mov    %dl,0x000006(%esi)
		pop    %ds
		xor    %eax,%eax
		movzbl 0x000001(%esp),%esi
		mov    (%esp),%al
		add    %esi,%eax
		test   %eax,%eax
		jle    _091ae5_jump
		movl   $0x000001,_0ade84_data
		jmp    _091aef_jump

	_091ae5_jump:
		movl   $0xffffffff,_0ade84_data

	_091aef_jump:
		mov    _0ade84_data,%eax
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_091afc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		cmpl   $0x000000,_0ade6c_data
		jne    _091b17_jump
		cmpw   $0x000000,_0ade70_data
		je     _091bea_jump

	_091b17_jump:
		mov    _0ab96c_data,%ebx
		cmp    $_091cad_jump,%ebx
		jne    _091b31_jump
		movl   $_091cb2_func,_0ab96c_data
		jmp    _091b43_jump

	_091b31_jump:
		cmp    $_091afc_func,%ebx
		jne    _091b43_jump
		movl   $_085463_jump,_0ab96c_data

	_091b43_jump:
		xor    %eax,%eax
		mov    _0abbea_data,%al
		cmp    $0x000002,%eax
		jl     _091b8c_jump
		cmp    $0x000008,%eax
		jg     _091b8c_jump
		mov    $0x000023,%cl
		mov    _0ade70_data,%dx
		mov    _0ade6c_data,%eax
		mov    %eax,%ebx
		shl    $0x000010,%ebx
		mov    %dx,%bx
		mov    $0x002505,%ax
		int    $0x000021
		mov    $0x000023,%cl
		mov    _0ade7c_data,%dx
		mov    _0ade78_data,%eax
		push   %ds
		mov    %edx,%ds
		mov    %eax,%edx
		mov    $0x002504,%ax
		int    $0x000021
		pop    %ds
		jmp    _091bd9_jump

	_091b8c_jump:
		call   _091a68_func
		cmp    $0x000001,%eax
		jne    _091bc2_jump
		mov    $0x000023,%bl
		mov    _0ade70_data,%cx
		mov    _0ade6c_data,%edx
		mov    $0x000201,%ax
		int    $0x000031
		mov    $0x000023,%bl
		mov    _0ade7c_data,%cx
		mov    _0ade78_data,%edx
		mov    $0x000205,%ax
		int    $0x000031
		jmp    _091bd9_jump

	_091bc2_jump:
		mov    $0x000023,%eax
		mov    _0ade70_data,%cx
		mov    _0ade6c_data,%ebx
		call   _08b592_func

	_091bd9_jump:
		xor    %ebx,%ebx
		xor    %ebp,%ebp
		mov    %bx,_0ade70_data
		mov    %ebp,_0ade6c_data

	_091bea_jump:
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_091bef_jump:
		cmp    $_091cb2_func,%ebx
		jne    _091c01_jump
		movl   $_085463_jump,_0ab96c_data

	_091c01_jump:
		xor    %eax,%eax
		mov    _0abbea_data,%al
		cmp    $0x000002,%eax
		jl     _091c4a_jump
		cmp    $0x000008,%eax
		jg     _091c4a_jump
		mov    $0x00001b,%cl
		mov    _0ade76_data,%dx
		mov    _0ade72_data,%eax
		mov    %eax,%ebx
		shl    $0x000010,%ebx
		mov    %dx,%bx
		mov    $0x002505,%ax
		int    $0x000021
		mov    $0x00001b,%cl
		mov    _0ade82_data,%dx
		mov    _0ade7e_data,%eax
		push   %ds
		mov    %edx,%ds
		mov    %eax,%edx
		mov    $0x002504,%ax
		int    $0x000021
		pop    %ds
		jmp    _091c97_jump

	_091c4a_jump:
		call   _091a68_func
		cmp    $0x000001,%eax
		jne    _091c80_jump
		mov    $0x00001b,%bl
		mov    _0ade76_data,%cx
		mov    _0ade72_data,%edx
		mov    $0x000201,%ax
		int    $0x000031
		mov    $0x00001b,%bl
		mov    _0ade82_data,%cx
		mov    _0ade7e_data,%edx
		mov    $0x000205,%ax
		int    $0x000031
		jmp    _091c97_jump

	_091c80_jump:
		mov    $0x00001b,%eax
		mov    _0ade76_data,%cx
		mov    _0ade72_data,%ebx
		call   _08b592_func

	_091c97_jump:
		xor    %ebx,%ebx
		xor    %ebp,%ebp
		mov    %bx,_0ade76_data
		mov    %ebp,_0ade72_data

	_091ca8_jump:
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_091cad_jump:
		call   _091afc_func



_091cb2_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		cmpl   $0x000000,_0ade72_data
		jne    _091cc9_jump
		cmpw   $0x000000,_0ade76_data
		je     _091ca8_jump

	_091cc9_jump:
		mov    _0ab96c_data,%ebx
		cmp    $_091cad_jump,%ebx
		jne    _091bef_jump
		movl   $_091afc_func,_0ab96c_data
		jmp    _091c01_jump



_091f26_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ecx,(%esp)
		mov    %ebx,%eax
		test   %edx,%edx
		jge    _091f3f_jump
		mov    $0x00002d,%cl
		neg    %esi
		jmp    _091f41_jump

	_091f3f_jump:
		mov    $0x00002b,%cl

	_091f41_jump:
		mov    $0x000064,%ebx
		mov    $0x000003,%edx
		cmp    %ebx,%esi
		jge    _091f64_jump
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		cmp    %ebx,%esi
		jge    _091f64_jump
		mov    $0x000001,%edx
		mov    %edx,%ebx

	_091f64_jump:
		test   %eax,%eax
		jne    _091f74_jump
		mov    $0x000002,%eax
		cmp    $0x000003,%edx
		jne    _091f74_jump
		mov    %edx,%eax

	_091f74_jump:
		lea    0x000001(%eax),%ebp
		cmp    (%esp),%ebp
		jg     _091fc0_jump
		cmp    %eax,%edx
		jg     _091fbd_jump
		mov    %cl,(%edi)

	_091f82_jump:
		inc    %edi
		cmp    %edx,%eax
		jle    _091f8d_jump
		dec    %eax
		movb   $0x000030,(%edi)
		jmp    _091f82_jump

	_091f8d_jump:
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,%edx
		add    $0x000030,%eax
		sar    $0x00001f,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		idiv   %ebx
		mov    %edx,%esi
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edi
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _091f8d_jump
		jmp    _091fc0_jump

	_091fbd_jump:
		lea    0x000001(%edx),%ebp

	_091fc0_jump:
		mov    %ebp,%eax
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi

	_091fc7_jump:
		pop    %esi
		ret    



_091fc9_func:
		push   %esi
		mov    %ebx,%esi
		test   %ecx,%ecx
		jne    _091fde_jump
		test   %ebx,%ebx
		jg     _091fde_jump
		movb   $0x000030,(%eax)
		inc    %eax
		movb   $0x00002e,(%eax)
		inc    %eax
		pop    %esi
		ret    

	_091fde_jump:
		test   %esi,%esi
		jle    _091fef_jump
		mov    (%edx),%bl
		test   %bl,%bl
		je     _091fef_jump
		inc    %edx
		dec    %esi
		mov    %bl,(%eax)
		inc    %eax
		jmp    _091fde_jump

	_091fef_jump:
		test   %esi,%esi
		jle    _091ffc_jump

	_091ff3_jump:
		dec    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		test   %esi,%esi
		jg     _091ff3_jump

	_091ffc_jump:
		movb   $0x00002e,(%eax)
		inc    %eax
		test   %ecx,%ecx
		jle    _092010_jump

	_092004_jump:
		test   %esi,%esi
		je     _092010_jump
		inc    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		dec    %ecx
		jne    _092004_jump

	_092010_jump:
		test   %ecx,%ecx
		jle    _091fc7_jump

	_092014_jump:
		mov    (%edx),%bh
		test   %bh,%bh
		je     _092021_jump
		inc    %edx
		mov    %bh,(%eax)
		inc    %eax
		dec    %ecx
		jne    _092014_jump

	_092021_jump:
		test   %ecx,%ecx
		je     _091fc7_jump
		dec    %ecx
		movb   $0x000030,(%eax)
		inc    %eax
		jmp    _092021_jump



_09202c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmp    %ebx,%edx
		je     _092095_jump
		mov    %edi,-0x000014(%ebp)
		mov    0x000001(%eax),%al
		lea    (%ebx,%edi,1),%edx
		mov    %al,-0x000010(%ebp)
		lea    (%esi,%edi,1),%eax

	_09204c_jump:
		dec    %eax
		dec    %edx
		mov    (%eax),%cl
		dec    %esi
		mov    %cl,(%edx)
		mov    -0x000014(%ebp),%ecx
		dec    %ebx
		cmp    %ecx,%eax
		jne    _09204c_jump
		xor    %ecx,%eax
		mov    (%edi),%al
		cmp    $0x00002e,%eax
		jne    _09206b_jump
		dec    %ebx
		movb   $0x000030,(%edi,%ebx,1)
		jmp    _092089_jump

	_09206b_jump:
		cmp    $0x00002b,%eax
		je     _092075_jump
		cmp    $0x00002d,%eax
		jne    _092089_jump

	_092075_jump:
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		cmp    $0x00002e,%eax
		jne    _092089_jump
		movb   $0x000030,(%edi,%ebx,1)
		dec    %ebx
		mov    (%edi),%dl
		mov    %dl,(%edi,%ebx,1)

	_092089_jump:
		mov    $0x000020,%edx
		mov    %edi,%eax
		call   _085360_func

	_092095_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_09209d_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000008(%ebp),%edi
		mov    %eax,-0x000014(%ebp)
		mov    %edx,%esi
		mov    %ebx,-0x000020(%ebp)
		mov    %cl,-0x00000c(%ebp)
		mov    0x000018(%ebp),%cl
		lea    -0x00003c(%ebp),%ebx
		mov    (%edx),%eax
		mov    0x000004(%edx),%edx
		call   _0927ba_func
		test   %eax,%eax
		je     _0920e3_jump
		mov    -0x000014(%ebp),%eax
		xor    %esi,%esi
		jmp    _0920d6_jump

	_0920ce_jump:
		cmp    %edi,%esi
		jge    _0920d4_jump
		mov    %ch,(%eax)

	_0920d4_jump:
		inc    %eax
		inc    %esi

	_0920d6_jump:
		mov    -0x00003c(%esi,%ebp,1),%ch
		test   %ch,%ch
		jne    _0920ce_jump
		jmp    _092287_jump

	_0920e3_jump:
		mov    %cl,%al
		mov    %cl,-0x000010(%ebp)
		cmp    $0x000047,%eax
		jne    _092148_jump
		mov    (%esi),%eax
		mov    0x000004(%esi),%edx
		call   _08fa30_func
		mov    %edx,%ebx
		test   %edx,%edx
		je     _092140_jump
		call   _09284e_func
		mov    %edx,%ebx
		call   _092878_func
		call   _0864a4_func
		cmp    $0xfffffffc,%eax
		jl     _092118_jump
		cmp    -0x000020(%ebp),%eax
		jl     _09211e_jump

	_092118_jump:
		movb   $0x000045,-0x000010(%ebp)
		jmp    _092148_jump

	_09211e_jump:
		test   %ebx,%ebx
		jl     _092123_jump
		inc    %eax

	_092123_jump:
		mov    -0x000020(%ebp),%ebx
		sub    %eax,%ebx
		mov    %ebx,-0x000020(%ebp)
		test   %eax,%eax
		jge    _092135_jump
		lea    -0x000001(%ebx),%eax
		mov    %eax,-0x000020(%ebp)

	_092135_jump:
		xor    %edx,%edx
		mov    %edx,0x00000c(%ebp)
		movb   $0x000046,-0x000010(%ebp)
		jmp    _092148_jump

	_092140_jump:
		mov    $0x000046,%ah
		mov    %edx,0x00000c(%ebp)
		mov    %ah,-0x000010(%ebp)

	_092148_jump:
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		cmp    $0x000045,%eax
		jne    _09217c_jump
		mov    -0x000020(%ebp),%eax
		mov    0x00000c(%ebp),%ebx
		neg    %eax
		cmp    %ebx,%eax
		jge    _092168_jump
		mov    -0x000020(%ebp),%eax
		add    $0x000002,%eax
		cmp    %ebx,%eax
		jg     _09217c_jump

	_092168_jump:
		mov    $0x00002a,%edx
		mov    -0x000014(%ebp),%eax
		mov    %edi,%ebx
		call   _085360_func
		jmp    _09229b_jump

	_09217c_jump:
		mov    -0x000020(%ebp),%eax
		mov    %eax,-0x000018(%ebp)
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000045,%eax
		jne    _0921a2_jump
		mov    0x00000c(%ebp),%ebx
		test   %ebx,%ebx
		jle    _092198_jump
		mov    -0x000020(%ebp),%eax
		inc    %eax
		jmp    _09219f_jump

	_092198_jump:
		jge    _0921a2_jump
		mov    -0x000020(%ebp),%eax
		add    %ebx,%eax

	_09219f_jump:
		mov    %eax,-0x000018(%ebp)

	_0921a2_jump:
		mov    0x000004(%esi),%edx
		mov    (%esi),%eax
		mov    %edx,-0x00001c(%ebp)
		test   %edx,%edx
		je     _0921cc_jump
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		cmp    $0x000045,%edx
		je     _0921cc_jump
		mov    0x00000c(%ebp),%ecx
		test   %ecx,%ecx
		je     _0921cc_jump
		mov    -0x00001c(%ebp),%edx
		mov    %ecx,%ebx
		call   _0928f7_func
		mov    %edx,-0x00001c(%ebp)

	_0921cc_jump:
		lea    -0x00003c(%ebp),%edx
		push   %edx
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		push   %edx
		lea    -0x000028(%ebp),%edx
		lea    -0x000024(%ebp),%ecx
		push   %edx
		mov    -0x000018(%ebp),%ebx
		mov    -0x00001c(%ebp),%edx
		call   _092a19_func
		mov    -0x000014(%ebp),%eax
		mov    -0x000028(%ebp),%esi
		lea    0x000001(%eax),%edx
		test   %esi,%esi
		je     _0921fa_jump
		movb   $0x00002d,(%eax)
		jmp    _092203_jump

	_0921fa_jump:
		cmpb   $0x000000,-0x00000c(%ebp)
		je     _092205_jump
		movb   $0x00002b,(%eax)

	_092203_jump:
		mov    %edx,%eax

	_092205_jump:
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		lea    0x000001(%edi),%esi
		cmp    $0x000045,%edx
		jne    _09225f_jump
		mov    -0x000018(%ebp),%ecx
		mov    0x00000c(%ebp),%edx
		sub    %edx,%ecx
		cmp    %ecx,%edi
		jl     _092287_jump
		mov    %edx,%ebx
		lea    -0x00003c(%ebp),%edx
		call   _091fc9_func
		mov    -0x000014(%ebp),%ecx
		mov    %eax,%esi
		sub    %ecx,%esi
		mov    0x000014(%ebp),%cl
		mov    %eax,%ebx
		test   %cl,%cl
		je     _092240_jump
		cmp    %edi,%esi
		jge    _092240_jump
		inc    %esi
		mov    %cl,(%eax)
		inc    %eax

	_092240_jump:
		cmpl   $0x000000,-0x00001c(%ebp)
		je     _09224c_jump
		mov    0x00000c(%ebp),%edx
		sub    %edx,-0x000024(%ebp)

	_09224c_jump:
		mov    0x000010(%ebp),%ebx
		mov    %edi,%ecx
		mov    -0x000024(%ebp),%edx
		sub    %esi,%ecx
		call   _091f26_func
		add    %eax,%esi
		jmp    _092287_jump

	_09225f_jump:
		mov    -0x000014(%ebp),%ebx
		mov    %eax,%edx
		sub    %ebx,%edx
		mov    -0x000024(%ebp),%ebx
		mov    -0x000018(%ebp),%ecx
		inc    %ebx
		add    %ecx,%ebx
		add    %ebx,%edx
		cmp    %edx,%edi
		jl     _092287_jump
		mov    -0x000024(%ebp),%ebx
		lea    -0x00003c(%ebp),%edx
		mov    -0x000014(%ebp),%esi
		call   _091fc9_func
		sub    %esi,%eax
		mov    %eax,%esi

	_092287_jump:
		cmp    %edi,%esi
		jg     _092168_jump
		mov    -0x000014(%ebp),%eax
		mov    %edi,%ebx
		mov    %esi,%edx
		call   _09202c_func

	_09229b_jump:
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x000014



_0922a4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000028,%esp
		push   %edx
		mov    %eax,-0x000018(%ebp)

	_0922b2_jump:
		mov    (%eax),%bl
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    $0x000020,%edx
		je     _0922c7_jump
		cmp    $0x000009,%edx
		jl     _0922ca_jump
		cmp    $0x00000d,%edx
		jg     _0922ca_jump

	_0922c7_jump:
		inc    %eax
		jmp    _0922b2_jump

	_0922ca_jump:
		xor    %cl,%cl
		and    $0x0000ff,%ebx
		lea    0x000001(%eax),%edx
		cmp    $0x00002b,%ebx
		je     _0922e1_jump
		cmp    $0x00002d,%ebx
		jne    _0922e3_jump
		mov    $0x000001,%cl

	_0922e1_jump:
		mov    %edx,%eax

	_0922e3_jump:
		xor    %ebx,%ebx
		mov    $0x000030,%dh
		mov    %ebx,-0x000014(%ebp)

	_0922ea_jump:
		mov    (%eax),%dl
		mov    %cl,%ch
		movzbl %dl,%esi
		and    $0x000008,%ch
		inc    %eax
		cmp    $0x00002e,%esi
		jne    _092306_jump
		movzbl %ch,%esi
		test   %esi,%esi
		jne    _092333_jump
		or     $0x000008,%cl
		jmp    _0922ea_jump

	_092306_jump:
		cmp    $0x000030,%esi
		jl     _092333_jump
		cmp    $0x000039,%esi
		jg     _092333_jump
		movzbl %ch,%esi
		test   %esi,%esi
		je     _09231a_jump
		incl   -0x000014(%ebp)

	_09231a_jump:
		or     %dl,%dh
		movzbl %dh,%esi
		cmp    $0x000030,%esi
		je     _09232e_jump
		cmp    $0x000011,%ebx
		jge    _09232d_jump
		mov    %dl,-0x000038(%ebx,%ebp,1)

	_09232d_jump:
		inc    %ebx

	_09232e_jump:
		or     $0x000004,%cl
		jmp    _0922ea_jump

	_092333_jump:
		mov    %cl,%dh
		and    $0x000004,%dh
		movzbl %dh,%edi
		xor    %esi,%esi
		test   %edi,%edi
		je     _0923c9_jump
		and    $0x0000ff,%edx
		cmp    $0x000065,%edx
		je     _092359_jump
		cmp    $0x000045,%edx
		jne    _0923c5_jump

	_092359_jump:
		lea    -0x000001(%eax),%edx
		mov    %edx,-0x00001c(%ebp)
		mov    (%eax),%dl
		lea    0x000001(%eax),%edi
		and    $0x0000ff,%edx
		cmp    $0x00002b,%edx
		je     _092377_jump
		cmp    $0x00002d,%edx
		jne    _092379_jump
		or     $0x000002,%cl

	_092377_jump:
		mov    %edi,%eax

	_092379_jump:
		and    $0x0000fb,%cl

	_09237c_jump:
		mov    (%eax),%dl
		and    $0x0000ff,%edx
		cmp    $0x000030,%edx
		jl     _0923a4_jump
		cmp    $0x000039,%edx
		jg     _0923a4_jump
		cmp    $0x0003e8,%esi
		jge    _09239e_jump
		imul   $0x00000a,%esi,%esi
		add    %esi,%edx
		lea    -0x000030(%edx),%esi

	_09239e_jump:
		or     $0x000004,%cl
		inc    %eax
		jmp    _09237c_jump

	_0923a4_jump:
		mov    %cl,%dl
		and    $0x000002,%dl
		and    $0x0000ff,%edx
		je     _0923b3_jump
		neg    %esi

	_0923b3_jump:
		mov    %cl,%dl
		and    $0x000004,%dl
		and    $0x0000ff,%edx
		jne    _0923c6_jump
		mov    -0x00001c(%ebp),%eax
		jmp    _0923c6_jump

	_0923c5_jump:
		dec    %eax

	_0923c6_jump:
		mov    %eax,-0x000018(%ebp)

	_0923c9_jump:
		sub    -0x000014(%ebp),%esi
		cmp    $0x000011,%ebx
		jle    _0923db_jump
		sub    $0x000011,%ebx
		add    %ebx,%esi
		mov    $0x000011,%ebx

	_0923db_jump:
		test   %ebx,%ebx
		jle    _0923ee_jump
		xor    %eax,%eax
		mov    -0x000039(%ebx,%ebp,1),%al
		cmp    $0x000030,%eax
		jne    _0923ee_jump
		inc    %esi
		dec    %ebx
		jmp    _0923db_jump

	_0923ee_jump:
		test   %ebx,%ebx
		jne    _0923fd_jump
		mov    %ebx,-0x000024(%ebp)
		mov    %ebx,-0x000020(%ebp)
		jmp    _092496_jump

	_0923fd_jump:
		xor    %ah,%ah
		lea    -0x000024(%ebp),%edx
		mov    %ah,-0x000038(%ebx,%ebp,1)
		lea    -0x000038(%ebp),%eax
		call   _090ce6_func
		lea    -0x000001(%esi,%ebx,1),%eax
		cmp    $0x000134,%eax
		jle    _092450_jump
		call   _08d209_func
		mov    %cl,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _09243e_jump
		mov    _0a50fc_data,%eax
		mov    _0a5100_data,%edx
		call   _0869d6_func
		mov    %eax,-0x000024(%ebp)
		jmp    _092493_jump

	_09243e_jump:
		mov    _0a50fc_data,%eax
		mov    %eax,-0x000024(%ebp)
		mov    _0a5100_data,%eax
		mov    %eax,-0x000020(%ebp)
		jmp    _092496_jump

	_092450_jump:
		cmp    $0xfffffecc,%eax
		jge    _092463_jump
		xor    %edx,%edx
		call   _08d209_func
		mov    %edx,-0x000024(%ebp)
		jmp    _092493_jump

	_092463_jump:
		test   %esi,%esi
		je     _09247a_jump
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %esi,%ebx
		call   _0928f7_func
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000020(%ebp)

	_09247a_jump:
		mov    %cl,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _092496_jump
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _0869d6_func
		mov    %eax,-0x000024(%ebp)

	_092493_jump:
		mov    %edx,-0x000020(%ebp)

	_092496_jump:
		mov    -0x00003c(%ebp),%edi
		test   %edi,%edi
		je     _0924a2_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,(%edi)

	_0924a2_jump:
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_0924b2_func:
		jmp    _092bfa_jump



_0924b7_func:
		push   %edx
		cmp    $0x000005,%eax
		jbe    _0924c1_jump
		xor    %eax,%eax
		pop    %edx
		ret    

	_0924c1_jump:
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0ab994_data,%eax
		pop    %edx
		ret    



_0924d6_func:
		cmpb   $0x000000,_0ade8c_data
		je     _0924f9_jump
		and    $0x00ffff,%edx
		push   %edx
		push   %eax
		int3   
		jmp    _0924f0_jump

	_0924f0_jump:
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_0924f9_jump:
		xor    %eax,%eax
		ret    



_0924fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		cmpl   $0x000000,_0addb0_data
		jne    _0925c7_jump
		mov    _0abbf1_data,%fs
		xor    %ecx,%ecx
		xor    %dl,%dl
		mov    %fs,%eax
		mov    _0abbed_data,%edi
		mov    %eax,%es
		mov    %edi,%eax

	_092527_jump:
		cmp    %es:(%eax),%dl
		je     _09253f_jump

	_09252c_jump:
		mov    %es:(%eax),%dh
		lea    0x000001(%eax),%ebx
		cmp    %dh,%dl
		je     _09253a_jump
		mov    %ebx,%eax
		jmp    _09252c_jump

	_09253a_jump:
		inc    %ecx
		mov    %ebx,%eax
		jmp    _092527_jump

	_09253f_jump:
		sub    %edi,%eax
		jne    _092548_jump
		mov    $0x000001,%eax

	_092548_jump:
		call   _08bcf5_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %eax,%eax
		je     _0925c7_jump
		mov    %ecx,%eax
		shl    $0x000002,%eax
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _08bcf5_func
		test   %eax,%eax
		je     _0925c0_jump
		mov    %eax,_0addb0_data
		xor    %esi,%esi
		mov    %fs,%eax
		xor    %ecx,%ecx
		mov    %eax,%es
		mov    %edi,%eax

	_09257b_jump:
		cmpb   $0x000000,%es:(%eax)
		je     _09259b_jump
		mov    _0addb0_data,%edx
		mov    %ebx,(%ecx,%edx,1)

	_09258a_jump:
		mov    %es:(%eax),%dl
		inc    %eax
		mov    %dl,(%ebx)
		inc    %ebx
		test   %dl,%dl
		jne    _09258a_jump
		add    $0x000004,%ecx
		inc    %esi
		jmp    _09257b_jump

	_09259b_jump:
		mov    _0addb0_data,%edx
		movl   $0x000000,(%ecx,%edx,1)
		add    $0x000004,%ecx
		add    %ecx,%edx
		mov    %esi,%ebx
		mov    %edx,_0addb4_data
		mov    %edx,%eax
		xor    %edx,%edx
		call   _085360_func
		jmp    _0925c7_jump

	_0925c0_jump:
		mov    %edx,%eax
		call   _08bdf0_func

	_0925c7_jump:
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0925d0_func:
		push   %eax
		sub    $0x000076,%esp
		fstpt  0x00006c(%esp)
		fnsave (%esp)
		fldt   0x00001c(%esp)
		fldt   0x00006c(%esp)
		call   _092c00_func
		fnstsw %ax
		fstpt  0x00001c(%esp)
		and    $0x0000ff,%ax
		or     0x000004(%esp),%ax
		mov    %ax,0x000004(%esp)
		frstor (%esp)
		add    $0x000076,%esp
		pop    %eax
		ret    



_092604_func:
		mov    $0x000001,%eax
		jmp    _0926f8_jump



_09260e_func:
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    _0ade98_data,%edx
		mov    %edx,(%esp)
		cmp    $0x000001,%edx
		je     _09263d_jump
		cmp    $0x000002,%edx
		je     _09263d_jump
		cmp    $0x000003,%edx
		je     _09263d_jump
		mov    $0x000002,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		mov    %esi,_0ade98_data
		call   *(%esp)

	_09263d_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		ret    

_0926c8_switch:
		.long   _092737_case
		.long   _092722_case
		.long   _09278e_case
		.long   _092742_case
		.long   _09278e_case
		.long   _09278e_case
		.long   _09276b_case
		.long   _09278e_case
		.long   _09278e_case
		.long   _09278e_case
		.long   _09278e_case
		.long   _09278e_case


	_0926f8_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%edx
		shl    $0x000002,%eax
		mov    _0ade90_data(%eax),%ebx
		mov    %ebx,(%esp)
		lea    -0x000001(%edx),%ebx
		cmp    $0x00000b,%ebx
		ja     _0927b0_jump
		jmp    *%cs:_0926c8_switch(,%ebx,4)

	_092722_case:
		mov    $0x00008c,%eax
		call   _09260e_func

	_09272c_jump:
		xor    %eax,%eax

	_09272e_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_092737_case:
		cmpl   $0x000002,(%esp)
		jne    _092742_case
		call   _092e06_func

	_092742_case:
		mov    (%esp),%edi
		cmp    $0x000001,%edi
		je     _09272c_jump
		cmp    $0x000002,%edi
		je     _09272c_jump
		cmp    $0x000003,%edi
		je     _09272c_jump
		movl   $0x000002,_0ade90_data(,%edx,4)
		call   _091afc_func

	_092764_jump:
		mov    %edx,%eax

	_092766_jump:
		call   *(%esp)
		jmp    _09272c_jump

	_09276b_case:
		mov    (%esp),%ebx
		cmp    $0x000001,%ebx
		je     _09272c_jump
		cmp    $0x000002,%ebx
		je     _09272c_jump
		cmp    $0x000003,%ebx
		je     _09272c_jump
		movl   $0x000002,_0ade90_data(%eax)
		call   _091cb2_func
		jmp    _092764_jump

	_09278e_case:
		mov    (%esp),%ebp
		cmp    $0x000001,%ebp
		je     _09272c_jump
		cmp    $0x000002,%ebp
		je     _09272c_jump
		cmp    $0x000003,%ebp
		je     _09272c_jump
		mov    $0x000002,%ecx
		mov    %edx,%eax
		mov    %ecx,_0ade90_data(,%edx,4)
		jmp    _092766_jump

	_0927b0_jump:
		mov    $0xffffffff,%eax
		jmp    _09272e_jump



_0927ba_func:
		sub    $0x000008,%esp
		mov    %edx,0x000004(%esp)
		mov    %eax,(%esp)
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		and    $0x00ffff,%eax
		cmp    $0x007ff0,%eax
		jne    _092836_jump
		mov    0x000006(%esp),%edx
		xor    %dl,%dl
		mov    %ebx,%eax
		and    $0x000080,%dh
		and    $0x00ffff,%edx
		je     _0927f2_jump
		lea    0x000001(%ebx),%eax
		movb   $0x00002d,(%ebx)

	_0927f2_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%esp),%dx
		mov    (%esp),%bx
		or     %edx,%ebx
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		or     %edx,%ebx
		mov    0x000006(%esp),%edx
		xor    %dh,%dh
		and    $0x00000f,%dl
		and    $0x00ffff,%edx
		or     %ebx,%edx
		jne    _092825_jump
		mov    _0a4ef8_data,%edx
		jmp    _09282b_jump

	_092825_jump:
		mov    _0a4efc_data,%edx

	_09282b_jump:
		mov    %edx,(%eax)
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_092836_jump:
		xor    %eax,%eax
		add    $0x000008,%esp
		ret    



_09284e_func:
		push   %ebx
		push   %ecx
		test   %edx,%edx
		jg     _092861_jump
		mov    $0x00000b,%ebx
		call   _092e23_func
		pop    %ecx
		pop    %ebx
		ret    

	_092861_jump:
		mov    $0x1526e50e,%ebx
		mov    $0x3fdbcb7b,%ecx
		call   _092e65_func
		call   _085695_func
		pop    %ecx
		pop    %ebx
		ret    



_092878_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		lea    -0x000010(%ebp),%ebx
		call   _08faf8_func
		test   %edx,%edx
		jge    _0928a4_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0xbff00000,%ecx
		xor    %ebx,%ebx
		call   _0854de_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_0928a4_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_0928b1_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		sub    $0x000008,%esp
		mov    0x000008(%ebp),%esi
		mov    %ebx,-0x00000c(%ebp)
		mov    %ecx,-0x000008(%ebp)
		mov    %edx,%ecx
		cmp    %edx,%eax
		je     _0928dc_jump
		mov    %edx,%ebx
		mov    -0x000008(%ebp),%edx
		sub    %eax,%ebx
		mov    -0x00000c(%ebp),%eax
		call   _0928f7_func
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)

	_0928dc_jump:
		lea    -0x00000c(%ebp),%eax
		mov    %esi,%edx
		call   _093042_func
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _093008_func
		lea    -0x000004(%ebp),%esp
		pop    %esi
		pop    %ebp
		ret    $0x000004



_0928f7_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    %ebx,(%esp)
		mov    _0a519c_data,%ebx
		mov    _0a51a0_data,%ecx
		call   _08bb2c_func
		jne    _092927_jump
		mov    _0a51b0_data,%eax
		mov    _0a51ac_data,%ebp
		jmp    _09294b_jump

	_092927_jump:
		mov    0x000004(%esp),%edx
		mov    _0a51a4_data,%ebx
		mov    _0a51a8_data,%ecx
		mov    %ebp,%eax
		call   _08bb2c_func
		jne    _09294f_jump
		mov    _0a51b8_data,%eax
		mov    _0a51b4_data,%ebp

	_09294b_jump:
		mov    %eax,0x000004(%esp)

	_09294f_jump:
		mov    (%esp),%edx
		mov    $_0a51f4_data,%esi
		test   %edx,%edx
		jge    _092986_jump
		mov    %edx,%edi
		neg    %edi
		cmp    $0x000134,%edi
		jle    _0929b3_jump
		mov    0x000004(%esp),%edx
		mov    _0a51f6_data,%ebx
		mov    _0a51fa_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _0867d0_func
		jmp    _0929ad_jump

	_092986_jump:
		mov    %edx,%edi
		cmp    $0x000134,%edx
		jle    _0929b3_jump
		mov    0x000004(%esp),%edx
		mov    _0a51f6_data,%ebx
		mov    _0a51fa_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _085695_func

	_0929ad_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)

	_0929b3_jump:
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx

	_0929ba_jump:
		movswl (%esi),%eax
		cmp    %eax,%edi
		jl     _0929d6_jump
		mov    %ecx,%edx
		sub    %eax,%edi
		mov    %ebx,%eax
		mov    0x000006(%esi),%ecx
		mov    0x000002(%esi),%ebx
		call   _085695_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_0929d6_jump:
		test   %edi,%edi
		je     _0929e7_jump
		movswl (%esi),%eax
		cmp    $0x000001,%eax
		je     _0929ba_jump
		add    $0x00000a,%esi
		jmp    _0929ba_jump

	_0929e7_jump:
		cmpl   $0x000000,(%esp)
		jge    _0929fa_jump
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _0867d0_func
		jmp    _092a05_jump

	_0929fa_jump:
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _085695_func

	_092a05_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_092a19_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		push   %eax
		push   %edx
		mov    %ebx,%esi
		mov    %ecx,%edi
		mov    0x000008(%ebp),%eax
		mov    0x000010(%ebp),%ebx
		movl   $0x000000,(%eax)
		mov    -0x000038(%ebp),%eax
		movl   $0x000000,(%ecx)
		call   _0927ba_func
		test   %eax,%eax
		je     _092a4d_jump
		mov    0x000010(%ebp),%eax
		jmp    _092bf1_jump

	_092a4d_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dx,-0x000020(%ebp)
		mov    %bx,-0x00001e(%ebp)
		mov    %dx,-0x00001a(%ebp)
		mov    -0x00003c(%ebp),%edx
		mov    %cx,-0x00001c(%ebp)
		test   %edx,%edx
		je     _092bac_jump
		jge    _092a87_jump
		mov    0x000008(%ebp),%eax
		movl   $0xffffffff,(%eax)
		mov    -0x000038(%ebp),%eax
		call   _0869d6_func
		mov    %eax,-0x000038(%ebp)
		mov    %edx,-0x00003c(%ebp)

	_092a87_jump:
		mov    -0x000038(%ebp),%eax
		mov    -0x00003c(%ebp),%edx
		mov    %edi,%ebx
		call   _08d95a_func
		mov    (%edi),%eax
		mov    %eax,-0x000010(%ebp)
		test   %eax,%eax
		jge    _092aa2_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_092aa2_jump:
		mov    -0x000010(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		add    $0x000005,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    (%edi),%ecx
		mov    %eax,-0x000010(%ebp)
		test   %ecx,%ecx
		jge    _092aca_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_092aca_jump:
		mov    -0x000010(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    %eax,(%edi)
		cmp    $0x000046,%edx
		jne    _092ad9_jump
		add    %eax,%esi

	_092ad9_jump:
		test   %esi,%esi
		jl     _092b72_jump
		cmp    $0x000010,%esi
		jle    _092aeb_jump
		mov    $0x000010,%esi

	_092aeb_jump:
		lea    -0x000018(%ebp),%ebx
		xor    %ah,%ah
		mov    -0x00003c(%ebp),%edx
		mov    %ah,-0x00000c(%ebp)
		mov    -0x000038(%ebp),%eax
		call   _08faf8_func
		test   %edx,%edx
		jne    _092b10_jump
		mov    -0x000010(%ebp),%ecx
		cmp    %ecx,%esi
		jle    _092b10_jump
		mov    $0x000001,%dl
		mov    %ecx,%esi
		mov    %dl,-0x00000c(%ebp)

	_092b10_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _0928b1_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _092b72_jump
		mov    (%edi),%ebx
		add    %eax,%ebx
		mov    0x00000c(%ebp),%ecx
		mov    %ebx,(%edi)
		cmp    $0x000046,%ecx
		je     _092b3d_jump
		cmpb   $0x000000,-0x00000c(%ebp)
		je     _092b3f_jump

	_092b3d_jump:
		add    %edx,%esi

	_092b3f_jump:
		cmp    $0x000001,%esi
		jge    _092b4b_jump
		mov    $0x000001,%esi
		jmp    _092b55_jump

	_092b4b_jump:
		cmp    $0x000010,%esi
		jle    _092b55_jump
		mov    $0x000010,%esi

	_092b55_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _0928b1_func
		test   %eax,%eax
		jle    _092b72_jump
		mov    (%edi),%eax
		inc    %eax
		inc    %esi
		mov    %eax,(%edi)

	_092b72_jump:
		mov    -0x000020(%ebp),%edx
		mov    -0x000022(%ebp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		or     %edx,%eax
		mov    -0x00001e(%ebp),%edx
		sar    $0x000010,%edx
		or     %edx,%eax
		mov    -0x00001c(%ebp),%edx
		sar    $0x000010,%edx
		or     %edx,%eax
		jne    _092bac_jump
		mov    0x000008(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    0x00000c(%ebp),%edx
		movl   $0x000000,(%edi)
		cmp    $0x000046,%edx
		jne    _092bac_jump
		sub    -0x000010(%ebp),%esi

	_092bac_jump:
		cmp    $0x000001,%esi
		jge    _092bb8_jump
		mov    $0x000001,%esi
		jmp    _092bc2_jump

	_092bb8_jump:
		cmp    $0x000011,%esi
		jle    _092bc2_jump
		mov    $0x000011,%esi

	_092bc2_jump:
		lea    -0x000034(%ebp),%edx
		lea    -0x000020(%ebp),%eax
		mov    0x000010(%ebp),%edi
		mov    %esi,%ebx
		lea    -0x000034(%ebp),%esi
		call   _0930ad_func
		push   %edi

	_092bd6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _092bee_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _092bd6_jump

	_092bee_jump:
		pop    %edi
		mov    %edi,%eax

	_092bf1_jump:
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x00000c

	_092bfa_jump:
		xor    %eax,%eax
		ret    



_092c00_func:
		push   %eax
		push   %ecx
		push   %edx
		sub    $0x000024,%esp
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		mov    0x000004(%esp),%ecx
		add    %ecx,%ecx
		jae    _092df0_jump
		mov    0x000010(%esp),%eax
		add    %eax,%eax
		jae    _092df0_jump
		mov    0x000008(%esp),%ecx
		mov    0x000014(%esp),%eax
		and    $0x007fff,%ecx
		je     _092df0_jump
		and    $0x007fff,%eax
		je     _092df0_jump
		cmp    $0x007fff,%ecx
		je     _092df0_jump
		cmp    $0x007fff,%eax
		je     _092df0_jump
		fldt   0x00000c(%esp)
		fabs   
		fldt   (%esp)
		fabs   
		fnstcw 0x000018(%esp)
		mov    0x000018(%esp),%edx
		or     $0x00033f,%edx
		and    $0x00f3ff,%edx
		mov    %edx,0x00001c(%esp)
		fldcw  0x00001c(%esp)
		xor    %edx,%edx
		fcom   %st(1)
		push   %eax
		fnstsw %ax
		sahf   
		pop    %eax
		jb     _092c90_jump
		fxch   %st(1)
		inc    %edx

	_092c90_jump:
		push   %eax
		mov    $0x00000f,%eax
		call   _08dd7f_func
		pop    %eax
		flds   _0ae07c_data
		fmul   %st(1),%st
		fistpl 0x000020(%esp)
		mov    0x000020(%esp),%ecx
		shl    $0x000004,%ecx
		fildl  0x000020(%esp)
		fmuls  _0ae080_data
		fld    %st(1)
		fsub   %st(1),%st
		fxch   %st(1)
		fmulp  %st,%st(2)
		fldl   _0ae038_data
		faddp  %st,%st(2)
		push   %eax
		mov    $0x00000f,%eax
		call   _08dd7f_func
		pop    %eax
		fld    %st(0)
		fmul   %st(1),%st
		fld    %st(0)
		fmul   %st(1),%st
		fld    %st(0)
		fmul   %st(1),%st
		fldt   _0ae0b6_data
		fldt   _0ae0ac_data
		fxch   %st(1)
		fmul   %st(2),%st
		fldt   _0ae0a2_data
		fxch   %st(2)
		fmul   %st(3),%st
		fldt   _0ae098_data
		fxch   %st(2)
		fmul   %st(5),%st
		fxch   %st(3)
		fmulp  %st,%st(4)
		fldt   _0ae08e_data
		fxch   %st(3)
		faddp  %st,%st(4)
		mov    0x000014(%esp),%eax
		fldt   _0ae084_data
		fxch   %st(1)
		shl    $0x000010,%eax
		fmul   %st(6),%st
		fxch   %st(2)
		add    %eax,%eax
		fmul   %st(5),%st
		fxch   %st(3)
		adc    %edx,%edx
		fmulp  %st,%st(5)
		fxch   %st(2)
		mov    0x000008(%esp),%eax
		fmul   %st(5),%st
		fxch   %st(2)
		shl    $0x000010,%eax
		fmulp  %st,%st(5)
		fxch   %st(2)
		faddp  %st,%st(3)
		add    %eax,%eax
		faddp  %st,%st(1)
		adc    %edx,%edx
		faddp  %st,%st(2)
		faddp  %st,%st(1)
		fmul   %st(1),%st
		faddp  %st,%st(1)
		fldt   _0ae0c0_data(%ecx)
		faddp  %st,%st(1)
		jmp    *_0ae048_data(,%edx,4)



_092d60_func:
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_092d6b_func:
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_092d78_func:
		fldt   _0ae068_data
		fsubp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_092d8b_func:
		fldt   _0ae068_data
		fsubp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_092da0_func:
		fldt   _0ae072_data
		fsubp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_092db3_func:
		fldt   _0ae072_data
		fsubp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_092dc8_func:
		fldt   _0ae072_data
		faddp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_092ddb_func:
		fldt   _0ae072_data
		faddp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    

	_092df0_jump:
		fldt   (%esp)
		fldt   0x00000c(%esp)
		fpatan 
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_092e06_func:
		push   %edx
		mov    $0x0000ff,%edx
		mov    $_0a4f00_data,%eax
		call   _090c2f_func
		pop    %edx
		ret    



_092e23_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		mov    %ebx,%eax
		and    $0x00001f,%eax
		cmp    $0x000008,%eax
		je     _092e43_jump
		test   %edx,%edx
		jne    _092e43_jump
		or     $0x001080,%ax
		jmp    _092e47_jump

	_092e43_jump:
		or     $0x001040,%ax

	_092e47_jump:
		lea    -0x000008(%ebp),%edx
		call   _08d638_func
		mov    %ebp,%esp
		pop    %ebp
		ret    



_092e65_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		test   %edx,%edx
		jg     _092e86_jump
		mov    $0x00000a,%ebx
		call   _092e23_func
		jmp    _092ff6_jump

	_092e86_jump:
		cmpb   $0x000000,_0abbb5_data
		je     _092e9b_jump
		mov    %edi,%eax
		call   _0931ce_func
		jmp    _092ff6_jump

	_092e9b_jump:
		lea    -0x000024(%ebp),%ebx
		mov    %edi,%eax
		mov    $0xbfe00000,%ecx
		call   _08d95a_func
		mov    %eax,%edi
		xor    %ebx,%ebx
		mov    %edx,%esi
		call   _0854de_func
		mov    $0x667f3bcd,%ebx
		mov    $0x3fe6a09e,%ecx
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _08bb2c_func
		jle    _092eea_jump
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _0854de_func
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		jmp    _092ef7_jump

	_092eea_jump:
		mov    -0x000024(%ebp),%edx
		mov    -0x000018(%ebp),%edi
		dec    %edx
		mov    -0x000014(%ebp),%esi
		mov    %edx,-0x000024(%ebp)

	_092ef7_jump:
		mov    $0x3fe00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _085695_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _0854de_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _0867d0_func
		mov    %eax,-0x000018(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edx,-0x000014(%ebp)
		call   _085695_func
		mov    %eax,%edi
		mov    %edx,%esi
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _085695_func
		mov    $0x000002,%ecx
		mov    $_0a51bc_data,%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _08daa7_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _085695_func
		mov    $0x000003,%ecx
		mov    $_0a51d4_data,%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _08daa7_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _0867d0_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _0854de_func
		mov    -0x000024(%ebp),%ebx
		mov    %eax,%edi
		mov    %edx,%esi
		test   %ebx,%ebx
		je     _092ffa_jump
		mov    %ebx,%eax
		mov    $0xbf2bd010,%ecx
		call   _085498_func
		mov    $0x5c610ca9,%ebx
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x00001c(%ebp)
		call   _085695_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _0854de_func
		mov    $0x3fe63000,%ecx
		mov    %eax,%edi
		mov    %edx,%esi
		xor    %ebx,%ebx
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _085695_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0854de_func

	_092ff6_jump:
		mov    %eax,%edi
		mov    %edx,%esi

	_092ffa_jump:
		mov    %edi,%eax
		mov    %esi,%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_093008_func:
		push   %edi
		push   %ecx
		call   _093117_data
		inc    %eax
		lea    (%edi,%eax,8),%edi
		mov    (%edx),%ecx
		mov    0x000004(%edx),%edx
		sub    %eax,%eax

	_09301a_jump:
		cmp    %cs:(%edi),%edx
		jne    _093023_jump
		cmp    %cs:0x000004(%edi),%ecx

	_093023_jump:
		jb     _09302b_jump
		add    $0x000008,%edi
		inc    %eax
		jmp    _09301a_jump

	_09302b_jump:
		sub    $0x000008,%edi

	_09302e_jump:
		cmp    %cs:(%edi),%edx
		jne    _093037_jump
		cmp    %cs:0x000004(%edi),%ecx

	_093037_jump:
		jae    _09303f_jump
		sub    $0x000008,%edi
		dec    %eax
		jmp    _09302e_jump

	_09303f_jump:
		pop    %ecx
		pop    %edi
		ret    



_093042_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		push   %esi
		push   %edx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%ebx
		mov    %ebx,%ebp
		and    $0xfff00000,%ebp
		xor    %ebp,%ebx
		xor    $0x100000,%ebx
		shr    $0x000014,%ebp
		sub    $0x000433,%ebp
		je     _0930a0_jump
		jbe    _093076_jump

	_09306d_jump:
		shl    %ecx
		rcl    %ebx
		dec    %ebp
		jne    _09306d_jump
		jmp    _0930a0_jump

	_093076_jump:
		sub    %eax,%eax
		sub    %esi,%esi

	_09307a_jump:
		shr    %ebx
		rcr    %ecx
		rcr    %eax
		adc    %esi,%esi
		inc    %ebp
		jne    _09307a_jump
		cmp    $0x80000000,%eax
		jb     _0930a0_jump
		jne    _09309a_jump
		or     %esi,%esi
		jne    _09309a_jump
		test   $0x000001,%ecx
		je     _0930a0_jump

	_09309a_jump:
		add    $0x000001,%ecx
		adc    $0x000000,%ebx

	_0930a0_jump:
		pop    %ebp
		mov    %ecx,0x000000(%ebp)
		mov    %ebx,0x000004(%ebp)
		pop    %esi
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0930ad_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %ebx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%eax
		mov    %edx,%ebp
		add    %ebx,%ebp
		movb   $0x000000,0x000000(%ebp)
		push   %eax

	_0930c2_jump:
		pop    %eax
		mov    $0x002710,%edi
		sub    %edx,%edx
		or     %eax,%eax
		jne    _0930d5_jump
		or     %ecx,%ecx
		jne    _0930d7_jump
		push   %eax
		jmp    _0930ed_jump

	_0930d5_jump:
		div    %edi

	_0930d7_jump:
		xchg   %eax,%ecx
		div    %edi
		xchg   %eax,%ecx
		push   %eax
		mov    %edx,%eax
		mov    $0x000064,%dl
		div    %dl
		mov    %ah,%dl
		mov    $0x000000,%ah
		aam    $0x00000a
		xchg   %eax,%edx
		mov    $0x000000,%ah
		aam    $0x00000a

	_0930ed_jump:
		add    $0x003030,%ax
		add    $0x003030,%dx
		sub    $0x000004,%ebp
		mov    %al,0x000003(%ebp)
		dec    %ebx
		je     _093111_jump
		mov    %ah,0x000002(%ebp)
		dec    %ebx
		je     _093111_jump
		mov    %dl,0x000001(%ebp)
		dec    %ebx
		je     _093111_jump
		mov    %dh,0x000000(%ebp)
		dec    %ebx
		jne    _0930c2_jump

	_093111_jump:
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %ebp
		ret    

.data

_093117_data:
		.ascii  "\xe8\xb0"
		.fill   0xf
		.ascii  "\x01"
		.fill   0x7
		.ascii  "\x0a"
		.fill   0x7
		.ascii  "\x64"
		.fill   0x7
		.ascii  "\xe8\x03"
		.fill   0x6
		.ascii  "\x10\x27"
		.fill   0x6
		.ascii  "\xa0\x86\x01"
		.fill   0x5
		.ascii  "\x40\x42\x0f"
		.fill   0x5

_093160_data:
		.ascii  "\x80\x96\x98"
		.fill   0x6
		.ascii  "\xe1\xf5\x05"
		.fill   0x5
		.ascii  "\xca\x9a\x3b\x02"
		.fill   0x4
		.ascii  "\xe4\x0b\x54\x17"
		.fill   0x4
		.ascii  "\xe8\x76\x48\xe8"
		.fill   0x4
		.ascii  "\x10\xa5\xd4\x18\x09\x00\x00\x00"
		.ascii  "\xa0\x72\x4e\xf3\x5a\x00\x00\x00"
		.ascii  "\x40\x7a\x10\x7e\x8d\x03\x00\x00"
		.ascii  "\x80\xc6\xa4\xf2\x86\x23\x00\x00"
		.ascii  "\x00\xc1"
		.ascii   "oxEc"
		.ascii  "\x01\x00\x00\x8a\x5d\xb3\xb6\xe0"
		.ascii  "\x0d\x00\x00\x64\xa7\x04\x23\xc7"
		.ascii  "\x8a\x00\x00\xe8\x89\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff"

_0931cc_data:
		.ascii  "\x5f\xc3"

.text



_0931ce_func:
		fldln2 
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		fyl2x  
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

.data

_0a0000_data:
		.ascii  "\x01\x01\x01\x00"

_0a0004_data:
		.ascii  "\x2e\x5c\x00\x00"

_0a0008_data:
		.string "SAVE"
		.ascii  "\x00\x00\x00"

_0a0010_data:
		.string "Missing = in rayman's argument (save=pathname).\n"
		.ascii  "\x00\x00\x00"

_0a0044_data:
		.ascii  "\x5c\x00\x00\x00"

_0a0048_data:
		.ascii  "\x56\x45\x52\x00"

_0a004c_data:
		.ascii  "\x2d\x4c\x3a\x00"

_0a0050_data:
		.string "ENGLISH"

_0a0058_data:
		.ascii  "\x55\x53\x41\x00"

_0a005c_data:
		.string "FRENCH"
		.ascii  "\x00"

_0a0064_data:
		.ascii  "\x46\x52\x00\x00"

_0a0068_data:
		.string "GERMAN"
		.ascii  "\x00"

_0a0070_data:
		.ascii  "\x41\x4c\x00\x00"

_0a0074_data:
		.string "FREQ70"
		.ascii  "\x00"

_0a007c_data:
		.string "Type %s to run the game.\n"
		.ascii  "\x00\x00"

_0a0098_data:
		.string "You must run RAYMAN.BAT\n"
		.ascii  "\x00\x00\x00"

_0a00b4_data:
		.string "Vous devez lancer RAYMAN.BAT\n"
		.ascii  "\x00\x00"

_0a00d4_data:
		.string "Starten Sie RAYMAN.BAT\n"

_0a00ec_data:
		.ascii  "\x49\x42\x4d\x00"

_0a00f0_data:
		.string "Compaq"
		.ascii  "\x00"

_0a00f8_data:
		.string "AT&T"
		.ascii  "\x00\x00\x00"

_0a0100_data:
		.string "Hewlett-Packard"

_0a0110_data:
		.string "Packard-Bell"
		.ascii  "\x00\x00\x00"

_0a0120_data:
		.ascii  "\x44\x45\x43\x00"

_0a0124_data:
		.string "Olivetti"
		.ascii  "\x00\x00\x00"

_0a0130_data:
		.ascii  "\x44\x52\x00\x00"

_0a0134_data:
		.string "Microsoft"
		.ascii  "\x00\x00"

_0a0140_data:
		.string "Unknown"

_0a0148_data:
		.ascii  "\x20\x00\x00\x00"

_0a014c_data:
		.string "OS/2 v1.x"
		.ascii  "\x00\x00"

_0a0158_data:
		.string "OS/2 Warp v3.0"
		.ascii  "\x00"

_0a0168_data:
		.string "OS/2 v2.x"
		.ascii  "\x00\x00"

_0a0174_data:
		.string "Dos v%1d.%1d"
		.ascii  "\x00\x00\x00"

_0a0184_data:
		.ascii  "\x0a\x00\x00\x00"

_0a0188_data:
		.string "RAYMAN DESIGNER  v1.01"
		.ascii  "\x00"

_0a01a0_data:
		.string "(C) 1996 UBI SOFT ENTERTAINMENT"

_0a01c0_data:
		.string "You could reduce cache memory from %u Ko to %u Ko.\n"

_0a01f4_data:
		.string "\nLeft memory available = %.3f Mo.\n"
		.ascii  "\x00"

_0a0218_data:
		.string "Memory required = %.3f Mo.\n"

_0a0234_data:
		.string "Cache Memory or SmartDrive "

_0a0250_data:
		.string "version %d.%02d installed with %u Ko"
		.ascii  "\x00\x00\x00"

_0a0278_data:
		.string "not installed"
		.ascii  "\x00\x00"

_0a0288_data:
		.ascii  "\x2e\x0a\x0a\x00"

_0a028c_data:
		.string "386 processor detected.\n"
		.ascii  "\x00\x00\x00"

_0a02a8_data:
		.string "Rayman requires a 486 or more.\n"

_0a02c8_data:
		.string "486 processor detected.\n"
		.ascii  "\x00\x00\x00"

_0a02e4_data:
		.string "Pentium processor detected.\n"
		.ascii  "\x00\x00\x00"

_0a0304_data:
		.string "Pentium %1d processor detected.\n"
		.ascii  "\x00\x00\x00"

_0a0328_data:
		.string "Unknown processor detected.\n"
		.ascii  "\x00\x00\x00"

_0a0348_data:
		.string "No windows detected.\n"
		.ascii  "\x00\x00"

_0a0360_data:
		.string "Windows real mode detected.\n"
		.ascii  "\x00\x00\x00"

_0a0380_data:
		.string "Windows standard mode detected.\n"
		.ascii  "\x00\x00\x00"

_0a03a4_data:
		.string "Windows/386 V 2.x detected.\n"
		.ascii  "\x00\x00\x00"

_0a03c4_data:
		.string "Windows 95 detected.\n"
		.ascii  "\x00\x00"

_0a03dc_data:
		.string "Windows V %d.%d detected.\n"
		.ascii  "\x00"

_0a03f8_data:
		.string "\nNot enough memory to run this game.\n"
		.ascii  "\x00\x00"

_0a0420_data:
		.string "\n%s\n"
		.ascii  "\x00\x00\x00"

_0a0428_data:
		.string "Only sound, no CD music.\n"
		.ascii  "\x00\x00"

_0a0444_data:
		.string "no CD music, no sound.\n"

_0a045c_data:
		.string "Allocation error in variables.\n"

_0a047c_data:
		.ascii  "\x0a\x0a\x00\x00"

_0a0480_data:
		.fill   0x4

_0a0484_data:
		.string "display2: wld %d lev %d obj %d"
		.ascii  "\x00"

_0a04a4_data:
		.string "display2: bad obj file"
		.ascii  "\x00"

_0a04bc_data:
		.string "/hi master/"

_0a04c8_data:
		.string "/happy to see you/"
		.ascii  "\x00"

_0a04dc_data:
		.ascii  "\x25\x32\x64\x00"

_0a04e0_data:
		.ascii  "\x3a\x00\x00\x00"

_0a04e4_data:
		.string "%02d"
		.ascii  "\x00\x00\x00"

_0a04ec_data:
		.fill   0x4

_0a04f0_data:
		.string "Error On MAX_ACTOBJ : add_alwobj (BASIC.C)"
		.ascii  "\x00"

_0a051c_data:
		.string "%s\n%s\n"
		.ascii  "\x00"

_0a0524_data:
		.fill   0x4

_0a0528_data:
		.ascii  "\x53\x43\x54\x00"

_0a052c_data:
		.ascii  "\x77\x62\x00\x00"

_0a0530_data:
		.ascii  "\x72\x62\x00\x00"

_0a0534_data:
		.string "MAP.SCT"

_0a053c_data:
		.string "/%2d : %02d/"
		.ascii  "\x00\x00\x00"

_0a054c_data:
		.string "Write Protect Violation"

_0a0564_data:
		.string "Unknown unit"
		.ascii  "\x00\x00\x00"

_0a0574_data:
		.string "Drive not ready"

_0a0584_data:
		.string "Unknown command"

_0a0594_data:
		.string "CRC error"
		.ascii  "\x00\x00"

_0a05a0_data:
		.string "Bad drive request structure length"
		.ascii  "\x00"

_0a05c4_data:
		.string "Seek error"
		.ascii  "\x00"

_0a05d0_data:
		.string "Unknown media"
		.ascii  "\x00\x00"

_0a05e0_data:
		.string "Sector not found"
		.ascii  "\x00\x00\x00"

_0a05f4_data:
		.string "Printer out of paper"
		.ascii  "\x00\x00\x00"

_0a060c_data:
		.string "Write fault"

_0a0618_data:
		.string "Read fault"
		.ascii  "\x00"

_0a0624_data:
		.string "General failure"

_0a0634_data:
		.string "Reserved"
		.ascii  "\x00\x00\x00"

_0a0640_data:
		.string "Invalid disk change"

_0a0654_data:
		.string "CD ROM drive found on %c:\n"
		.ascii  "\x00"

_0a0670_data:
		.string "BONNREP"

_0a0678_data:
		.string "GENDOOR"

_0a0680_data:
		.string "CHERCHE"

_0a0688_data:
		.string "Differential method"

_0a069c_data:
		.string "Source file checksum error\n"

_0a06b8_data:
		.string "Corrupted source file\n"
		.ascii  "\x00"

_0a06d0_data:
		.string "Fatal error: "
		.ascii  "\x00\x00"

_0a06e0_data:
		.string "/you have done it !/"
		.ascii  "\x00\x00\x00"

_0a06f8_data:
		.string "/you have saved the world !/"
		.ascii  "\x00\x00\x00"

_0a0718_data:
		.string "/map %d/"
		.ascii  "\x00\x00\x00"

_0a0724_data:
		.string "    100% \r  "
		.ascii  "\x00\x00\x00"

_0a0734_data:
		.string "     25% \r  "
		.ascii  "\x00\x00\x00"

_0a0744_data:
		.string "     12.5% \r  "
		.ascii  "\x00"

_0a0754_data:
		.string "  Gray Scale \r "

_0a0764_data:
		.string "  Full Color \r "

_0a0774_data:
		.string "    No \r  "
		.ascii  "\x00"

_0a0780_data:
		.string "     Yes \r  "
		.ascii  "\x00\x00\x00"

_0a0790_data:
		.string "No More Available (%s)"
		.ascii  "\x00"

_0a07a8_data:
		.string "No comment on this Event, because it is No more available"
		.ascii  "\x00\x00"

_0a07e4_data:
		.ascii  "\x4d\x53\x5f\x00"

_0a07e8_data:
		.string "Problem with the name of World Event N. %d !\n"
		.ascii  "\x00\x00"

_0a0818_data:
		.string "Problem with the name of Common Event N. %d !\n"
		.ascii  "\x00"

_0a0848_data:
		.string "always"
		.ascii  "\x00"

_0a0850_data:
		.ascii  "\x9c\x64\x65\x66"
		.fill   0x4

_0a0858_data:
		.ascii  "\x32\x35\x35\x00"

_0a085c_data:
		.string " fnvAllocateCategoryAndObjectTable doesn't succed to allocate Objects\n"
		.ascii  "\x00"

_0a08a4_data:
		.string " fnvAllocateCategoryAndObjectTable doesn't succed to allocate Categories\n"
		.ascii  "\x00\x00"

_0a08f0_data:
		.string "EVE.MLT"

_0a08f8_data:
		.string ".DES"
		.ascii  "\x00\x00\x00"

_0a0900_data:
		.string "error: missing %s in RAY0%d.OLD !\n"
		.ascii  "\x00"

_0a0924_data:
		.string ".SEV"
		.ascii  "\x00\x00\x00"

_0a092c_data:
		.string ".MEV"
		.ascii  "\x00\x00\x00"

_0a0934_data:
		.string "MS_pir"
		.ascii  "\x00"

_0a093c_data:
		.string "_event:\n"
		.ascii  "\x00\x00\x00"

_0a0948_data:
		.string "ev_ty1 1,"
		.ascii  "\x00\x00"

_0a0954_data:
		.ascii  "\x2c\x00\x00\x00"

_0a0958_data:
		.string "MS_sample"
		.ascii  "\x00\x00"

_0a0964_data:
		.ascii  "\x0a\x0d\x00\x00"

_0a0968_data:
		.string "ev_end\n\r"
		.ascii  "\x00\x00\x00"

_0a0974_data:
		.string "_mev:\nincbin\t\"01.jun/"
		.ascii  "\x00\x00"

_0a098c_data:
		.string ".mev\"\ndcb.w "
		.ascii  "\x00\x00\x00"

_0a099c_data:
		.ascii  "\x2c\x30\x0a\x00"

_0a09a0_data:
		.string "_offlist:\ndc.w "

_0a09b0_data:
		.string "ev_end"
		.ascii  "\x00"

_0a09b8_data:
		.string "ev_ty1"
		.ascii  "\x00"

_0a09c0_data:
		.string "\ndcb.w "

_0a09c8_data:
		.string "event"
		.ascii  "\x00\x00"

_0a09d0_data:
		.string "MS_scroll_hm"
		.ascii  "\x00\x00\x00"

_0a09e0_data:
		.string "MS_scroll_hp"
		.ascii  "\x00\x00\x00"

_0a09f0_data:
		.string "MS_scroll_v"

_0a09fc_data:
		.string "MS_scroll_v2"
		.ascii  "\x00\x00\x00"

_0a0a0c_data:
		.string "MS_scroll_vp"
		.ascii  "\x00\x00\x00"

_0a0a1c_data:
		.string "MS_scroll_vm"
		.ascii  "\x00\x00\x00"

_0a0a2c_data:
		.string "MS_pierreAcorde"

_0a0a3c_data:
		.string "MS_ubi_mst_present1"

_0a0a50_data:
		.string "MS_ubi_rayman"
		.ascii  "\x00\x00"

_0a0a60_data:
		.string "MS_cym"
		.ascii  "\x00"

_0a0a68_data:
		.string "MS_ray_in_map"
		.ascii  "\x00\x00"

_0a0a78_data:
		.string "MS_pds_in_map"
		.ascii  "\x00\x00"

_0a0a88_data:
		.string "MS_compteur"

_0a0a94_data:
		.string "MS_compteur_anti"
		.ascii  "\x00\x00\x00"

_0a0aa8_data:
		.string "MS_WIZ"
		.ascii  "\x00"

_0a0ab0_data:
		.string "MS_ubi_mst_scroll"
		.ascii  "\x00\x00"

_0a0ac4_data:
		.string ".BMP"
		.ascii  "\x00\x00\x00"

_0a0acc_data:
		.string " set and save %s \n"
		.ascii  "\x00"

_0a0ae0_data:
		.string "ROTOTOTO.ZOB"
		.ascii  "\x00\x00\x00"

_0a0af0_data:
		.string "  ChOosE ThE ScALE fActOr wiTh THe RiGHt aRRoW kEy \n"
		.ascii  "\x00\x00\x00"

_0a0b28_data:
		.string "    %s\n"

_0a0b30_data:
		.string "  ChOosE ThE Color Mode wiTh THe RiGHt aRRoW kEy \n"
		.ascii  "\x00"

_0a0b64_data:
		.string "  Space required for the bitmap file %ld bytes\n"

_0a0b94_data:
		.string "  width:%ld   height:%ld\n"
		.ascii  "\x00\x00"

_0a0bb0_data:
		.string "  Do you want multi_files ?\n"
		.ascii  "\x00\x00\x00"

_0a0bd0_data:
		.string "  write line %d \r"
		.ascii  "\x00\x00"

_0a0be4_data:
		.string "  add object %s        \r"
		.ascii  "\x00\x00\x00"

_0a0c00_data:
		.string " facteur_reduction line %d       \r"
		.ascii  "\x00"

_0a0c24_data:
		.string "->Set and Save %s \n"

_0a0c38_data:
		.string "   of %d pixels width \n"

_0a0c50_data:
		.string "   of %d pixels height \n"
		.ascii  "\x00\x00\x00"

_0a0c6c_data:
		.string " hit a key Mister DANIEL\n"
		.ascii  "\x00\x00"

_0a0c88_data:
		.string "DANY"
		.ascii  "\x00\x00\x00"

_0a0c90_data:
		.string "    SaVe MaP In RaW FoRMAt  \n"
		.ascii  "\x00\x00"

_0a0cb0_data:
		.string " NaMe oF fILe ? (DEfAuLT:%s) \n"
		.ascii  "\x00"

_0a0cd0_data:
		.string "MS_ten"
		.ascii  "\x00"

_0a0cd8_data:
		.string "/%s/"
		.ascii  "\x00\x00\x00"

_0a0ce0_data:
		.string "%s color %d"

_0a0cec_data:
		.ascii  "\x25\x73\x00\x00"

_0a0cf0_data:
		.string "id %d  link %d  xl %d  yl %d"
		.ascii  "\x00\x00\x00"

_0a0d10_data:
		.string "index %d  x %d  y %d  b %d  t %d"
		.ascii  "\x00\x00\x00"

_0a0d34_data:
		.string " 'e' Enter  'q' Quit   the event editor. \n"
		.ascii  "\x00"

_0a0d60_data:
		.string " 'm' Enter/Quit the map editor. \n"
		.ascii  "\x00\x00"

_0a0d84_data:
		.string " 'i' Enter/Quit the init editor. \n"
		.ascii  "\x00"

_0a0da8_data:
		.string "      EVENT editor            *       MAP editor     *      INIT editor      \n"
		.ascii  "\x00"

_0a0df8_data:
		.string "  -Left mouse button          * -Left mouse button   * -Left mouse button\n"
		.ascii  "\x00"

_0a0e44_data:
		.string "  Move object under the mouse * Create a STOP block  * Deactivate link (red)\n"
		.ascii  "\x00\x00"

_0a0e94_data:
		.string "                              *                      *                       \n"
		.ascii  "\x00"

_0a0ee4_data:
		.string "  -Right mouse button         * -Right mouse button  * -Right mouse button\n"

_0a0f30_data:
		.string "  Choose object among the list* Erase a STOP block   * Activate link (yellow).\n"

_0a0f80_data:
		.string "                              *                      *                       \n"
		.ascii  "\x00"

_0a0fd0_data:
		.string " 's' Save the events ( & map) * 's' Save the map     * 's' Choose the initia\n"
		.ascii  "\x00\x00"

_0a1020_data:
		.string " '.' Kill all objects         *                      *      lization type\n"
		.ascii  "\x00"

_0a106c_data:
		.string " 'k' Kill object under mouse  *                      * '.' Kill all links\n"
		.ascii  "\x00"

_0a10b8_data:
		.string " 'n' Give info about object   *                      *\n"

_0a10f0_data:
		.string " 'b' Freeze all objects       *                      *\n"

_0a1128_data:
		.ascii  "\x0a\x00\x00\x00"

_0a112c_data:
		.string " Special Keys in EVENT editor\n"
		.ascii  "\x00"

_0a114c_data:
		.string " 'up or down arrow'     Change color or scroll samples per 50\n"
		.ascii  "\x00"

_0a118c_data:
		.string " 'right or left arrow'  Change frame (size,icon,number or sample)\n"
		.ascii  "\x00"

_0a11d0_data:
		.string " \n Hit a key to continue... \n"
		.ascii  "\x00\x00"

_0a11f0_data:
		.string " AlWayS ObJecT nAMed %s \n"
		.ascii  "\x00\x00"

_0a120c_data:
		.ascii  "\x59\x65\x73\x00"

_0a1210_data:
		.ascii  "\x4e\x6f\x00\x00"

_0a1214_data:
		.string "id:                      %d\ncategorie:               %d %s\ninitial coordinates:     (%d,%d)\ninitial machine state:   (%d,%d)\ncoordinates:             (%d,%d)\nmachine state:           (%d,%d)\nfollow_enabled:          %s\nisLinked:                %s\nfollow_sprite:           %d\nhitpoints_init:          %d\ninit_flag:               %d\nobj_type:                %d\nhit_sprite:              %d\ndisplayprio:             %d\n"

_0a13b4_data:
		.ascii  "\x5c\x5c\x00\x00"

_0a13b8_data:
		.string "ev_end"
		.ascii  "\x00"

_0a13c0_data:
		.string "ev_ty1"
		.ascii  "\x00"

_0a13c8_data:
		.string "MS_sample"
		.ascii  "\x00\x00"

_0a13d4_data:
		.string "%d * "
		.ascii  "\x00\x00"

_0a13dc_data:
		.ascii  "\x25\x64\x2c\x00"

_0a13e0_data:
		.ascii  "\x25\x73\x2c\x00"

_0a13e4_data:
		.ascii  "\x25\x64\x0a\x00"

_0a13e8_data:
		.fill   0x4

_0a13ec_data:
		.ascii  "\x4c\x45\x56\x00"

_0a13f0_data:
		.ascii  "\x52\x41\x59\x00"

_0a13f4_data:
		.ascii  "\x77\x74\x00\x00"

_0a13f8_data:
		.string "/ File created by Event Convert (editor) / \n"
		.ascii  "\x00\x00\x00"

_0a1428_data:
		.string "RAY,RAY.DES,\n"
		.ascii  "\x00\x00"

_0a1438_data:
		.string "%s.DES,%s.CMD,\n"

_0a1448_data:
		.ascii  "\x2a\x0a\x00\x00"

_0a144c_data:
		.ascii  "\x43\x4d\x44\x00"

_0a1450_data:
		.string "Erreur dans save_cmd %s : augmenter CMD_FILE_MAX_SIZE\n"
		.ascii  "\x00"

_0a1488_data:
		.ascii  "\x9c\x64\x65\x66"
		.fill   0x4

_0a1490_data:
		.ascii  "\x9c\x69\x66\x00"

_0a1494_data:
		.ascii  "\x9c"
		.string "endif"
		.ascii  "\x00"

_0a149c_data:
		.string "EVE.MLT"

_0a14a4_data:
		.ascii  "\x50\x49\x52\x00"

_0a14a8_data:
		.ascii  "\x2c\x00\x00\x00"

_0a14ac_data:
		.ascii  "\x2c\x0a\x00\x00"

_0a14b0_data:
		.ascii  "\x32\x35\x35\x00"

_0a14b4_data:
		.ascii  "\x0a\x00\x00\x00"

_0a14b8_data:
		.string "MS_edul_"
		.ascii  "\x00\x00\x00"

_0a14c4_data:
		.string "MS_educ_"
		.ascii  "\x00\x00\x00"

_0a14d0_data:
		.string "MS_icon_"
		.ascii  "\x00\x00\x00"

_0a14dc_data:
		.string "MS_mag_sequence"

_0a14ec_data:
		.string "MS_fee_sequence"

_0a14fc_data:
		.string "MS_mot"
		.ascii  "\x00"

_0a1504_data:
		.string "MS_freezer"
		.ascii  "\x00"

_0a1510_data:
		.string "MS_edu_dir"
		.ascii  "\x00"

_0a151c_data:
		.string "MS_pap_bouge"
		.ascii  "\x00\x00\x00"

_0a152c_data:
		.string "MS_pap_fixe"

_0a1538_data:
		.string "MS_pap_super"
		.ascii  "\x00\x00\x00"

_0a1548_data:
		.string "MS_wiz_comptage"

_0a1558_data:
		.string "MS_compteur"

_0a1564_data:
		.ascii  "\x25\x64\x00\x00"

_0a1568_data:
		.ascii  "\x30\x2c\x00\x00"

_0a156c_data:
		.string "always"
		.ascii  "\x00"

_0a1574_data:
		.string "always,\n"
		.ascii  "\x00\x00\x00"

_0a1580_data:
		.ascii  "\x2a\x00\x00\x00"

_0a1584_data:
		.string "event"
		.ascii  "\x00\x00"

_0a158c_data:
		.string ".SEV"
		.ascii  "\x00\x00\x00"

_0a1594_data:
		.string ".MEV"
		.ascii  "\x00\x00\x00"

_0a159c_data:
		.ascii  "\x2e\x5c\x00\x00"

_0a15a0_data:
		.ascii  "\x72\x62\x00\x00"

_0a15a4_data:
		.string "ERROR \n"

_0a15ac_data:
		.ascii  "\x61\x00\x00\x00"

_0a15b0_data:
		.ascii  "\x62\x00\x00\x00"

_0a15b4_data:
		.ascii  "\x64\x00\x00\x00"

_0a15b8_data:
		.ascii  "\x63\x00\x00\x00"

_0a15bc_data:
		.ascii  "\x0a\x25\x78\x00"

_0a15c0_data:
		.string "\n%x\n"
		.ascii  "\x00\x00\x00"

_0a15c8_data:
		.ascii   "carte d"
		.ascii  "\x82"
		.ascii   "tect"
		.ascii  "\x82"
		.string "e = %s \n"
		.ascii  "\x00\x00"

_0a15e0_data:
		.string "Nbr de bits par sample = %d\n"
		.ascii  "\x00\x00\x00"

_0a1600_data:
		.string "SNDH8B.DAT"
		.ascii  "\x00"

_0a160c_data:
		.ascii  "\x72\x62\x00\x00"

_0a1610_data:
		.string "SNDD8B.DAT"
		.ascii  "\x00"

_0a161c_data:
		.string "Not enough memory to load bank %s (%d).\n"
		.ascii  "\x00\x00\x00"

_0a1648_data:
		.string "SNDSMP.DAT"
		.ascii  "\x00"

_0a1654_data:
		.string "FNDTEXT"

_0a165c_data:
		.ascii  "\x5c\x00\x00\x00"

_0a1660_data:
		.string "VIGNET.DAT"
		.ascii  "\x00"

_0a166c_data:
		.ascii  "\x72\x62\x00\x00"

_0a1670_data:
		.string "%s : Can not open.\n"

_0a1684_data:
		.string ".DAT"
		.ascii  "\x00\x00\x00"

_0a168c_data:
		.string "REC%05d.TXT"

_0a1698_data:
		.string "RAY.DES"

_0a16a0_data:
		.ascii  "\x77\x00\x00\x00"

_0a16a4_data:
		.string "%5d, %5d, %3d, %-13s, %1d, %3d, %1d\n"
		.ascii  "\x00\x00\x00"

_0a16cc_data:
		.string "%s : Record %d"
		.ascii  "\x00"

_0a16dc_data:
		.ascii  "\x72\x00\x00\x00"

_0a16e0_data:
		.string "[%s]"
		.ascii  "\x00\x00\x00"

_0a16e8_data:
		.ascii  "\x77\x00\x00\x00"

_0a16ec_data:
		.ascii  "\x25\x73\x0a\x00"

_0a16f0_data:
		.string "%s=%s\n"
		.ascii  "\x00"

_0a16f8_data:
		.string "\n%s\n"
		.ascii  "\x00\x00\x00"

_0a1700_data:
		.string "Pas de Jumelle"
		.ascii  "\x00"

_0a1710_data:
		.string "Rayman's path directory too long."
		.ascii  "\x00\x00"

_0a1734_data:
		.string "%s : trop de fichiers des (update_des_file).\n"
		.ascii  "\x00\x00"

_0a1764_data:
		.string "%s : trop de fichiers eta (update_eta_file).\n"
		.ascii  "\x00\x00"

_0a1794_data:
		.string "%s : file not found (load_eta).\n"
		.ascii  "\x00\x00\x00"

_0a17b8_data:
		.string "NB_ETAT_MAX_PAR_OBJET < nb_etat(%d).\n"
		.ascii  "\x00\x00"

_0a17e0_data:
		.string "CRITICAL: loaded %s, which is not mentionned in any .DES file\n"
		.ascii  "\x00"

_0a1820_data:
		.string "%s : error opening file (load_obf).\n"
		.ascii  "\x00\x00\x00"

_0a1848_data:
		.string "Erreur d'allocation memoire dans LOAD_OBF"
		.ascii  "\x00\x00"

_0a1874_data:
		.string "%s : error opening file (load_obf2).\n"
		.ascii  "\x00\x00"

_0a189c_data:
		.string "Erreur d'allocation memoire dans LOAD_OBF2"
		.ascii  "\x00"

_0a18c8_data:
		.string "%s : error opening file (load_dat).\n"
		.ascii  "\x00\x00\x00"

_0a18f0_data:
		.string "augmenter la constante NB_WORLD_OBJ_TYPE_MAX (load_dat)."
		.ascii  "\x00\x00\x00"

_0a192c_data:
		.string "augmenter la constante NB_ANIM_OBJ_MAX (load_dat)."
		.ascii  "\x00"

_0a1960_data:
		.string "Erreur d'allocation memoire dans LOAD_DAT"
		.ascii  "\x00\x00"

_0a198c_data:
		.string "%s : error opening file (load_spr).\n"
		.ascii  "\x00\x00\x00"

_0a19b4_data:
		.string "Erreur d'allocation memoire dans LOAD_SPR"
		.ascii  "\x00\x00"

_0a19e0_data:
		.string "%s : Can not found in load_pcx.\n"
		.ascii  "\x00\x00\x00"

_0a1a04_data:
		.string "No memory allocated for it (load_pcx) !!"
		.ascii  "\x00\x00\x00"

_0a1a30_data:
		.string "%s : Can not open.\n"

_0a1a44_data:
		.string "%s : error opening file (load_pal_palette).\n"
		.ascii  "\x00\x00\x00"

_0a1a74_data:
		.string "%s : file not found (load_unimap).\n"

_0a1a98_data:
		.string "Mauvaise Map dans JUNGLE"
		.ascii  "\x00\x00\x00"

_0a1ab4_data:
		.string "Mauvaise Map dans MUSIC"

_0a1acc_data:
		.string "Mauvaise Map dans MOUNTAIN"
		.ascii  "\x00"

_0a1ae8_data:
		.string "Mauvaise Map dans IMAGE"

_0a1b00_data:
		.string "Mauvaise Map dans CAVE"
		.ascii  "\x00"

_0a1b18_data:
		.string "Mauvaise Map dans CAKE"
		.ascii  "\x00"

_0a1b30_data:
		.string "Map inexistante !"
		.ascii  "\x00\x00"

_0a1b44_data:
		.string "Erreur d'allocation memoire (pour MAP) dans LOAD_UNIMAP."
		.ascii  "\x00\x00\x00"

_0a1b80_data:
		.string "%s : file not found (load_eve).\n"
		.ascii  "\x00\x00\x00"

_0a1ba4_data:
		.string "ev_ty1"
		.ascii  "\x00"

_0a1bac_data:
		.string "%s : error opening file (load_obj).\n"
		.ascii  "\x00\x00\x00"

_0a1bd4_data:
		.string ".DAT"
		.ascii  "\x00\x00\x00"

_0a1bdc_data:
		.string "color_cvrt"
		.ascii  "\x00"

_0a1be8_data:
		.string ".OBF"
		.ascii  "\x00\x00\x00"

_0a1bf0_data:
		.string ".OBJ"
		.ascii  "\x00\x00\x00"

_0a1bf8_data:
		.string ".SPR"
		.ascii  "\x00\x00\x00"

_0a1c00_data:
		.string ".ETA"
		.ascii  "\x00\x00\x00"

_0a1c08_data:
		.string "%s : incoherence sur le nombre d'animes (load_obj).\n"
		.ascii  "\x00\x00\x00"

_0a1c40_data:
		.string "not memory allocated (change_to_bits_planes).\n"
		.ascii  "\x00"

_0a1c70_data:
		.string "No memory allocated (change_to_bits_planes_PLAN2)."
		.ascii  "\x00"

_0a1ca4_data:
		.string "%s : file not found (count_obj).\n"
		.ascii  "\x00\x00"

_0a1cc8_data:
		.ascii   "le fichier %s doit figur"
		.ascii  "\x82"
		.string " dans RAY%02d.WLD (find_obj2).\n"
		.ascii  "\x00\x00\x00"

_0a1d04_data:
		.string "%s : file not found (load_cmd).\n"
		.ascii  "\x00\x00\x00"

_0a1d28_data:
		.string "%s (%d): mauvais nom de fichier : %s (load_cmd).\n"
		.ascii  "\x00\x00"

_0a1d5c_data:
		.string "%s : erreur de syntaxe (load_cmd).\n"

_0a1d80_data:
		.string "always"
		.ascii  "\x00"

_0a1d88_data:
		.string "%s : file not found (count_obj).\n"
		.ascii  "\x00\x00"

_0a1dac_data:
		.string "RAY.DES"

_0a1db4_data:
		.string ".DES"
		.ascii  "\x00\x00\x00"

_0a1dbc_data:
		.string "No memory allocated (PLAN0FND_to_bits_planes)."
		.ascii  "\x00"

_0a1dec_data:
		.string "VIGNET.DAT"
		.ascii  "\x00"

_0a1df8_data:
		.ascii  "\x72\x62\x00\x00"

_0a1dfc_data:
		.string "MAP.INI"

_0a1e04_data:
		.string "World"
		.ascii  "\x00\x00"

_0a1e0c_data:
		.ascii  "\x4d\x61\x70\x00"

_0a1e10_data:
		.string "Error in INI file (World)."
		.ascii  "\x00"

_0a1e2c_data:
		.string "Track"
		.ascii  "\x00\x00"

_0a1e34_data:
		.ascii  "\x43\x44\x00\x00"

_0a1e38_data:
		.string "Filename"
		.ascii  "\x00\x00\x00"

_0a1e44_data:
		.string "LevelBackGround"

_0a1e54_data:
		.string "Error in INI file (LevelBackGround)."
		.ascii  "\x00\x00\x00"

_0a1e7c_data:
		.string "Error in INI file (LevelBackGround)."
		.ascii  "\x00\x00\x00"

_0a1ea4_data:
		.string "FIST"
		.ascii  "\x00\x00\x00"

_0a1eac_data:
		.string "Power"
		.ascii  "\x00\x00"

_0a1eb4_data:
		.string "Error in INI file (Power)."
		.ascii  "\x00"

_0a1ed0_data:
		.ascii  "\x52\x55\x4e\x00"

_0a1ed4_data:
		.string "HELICO"
		.ascii  "\x00"

_0a1edc_data:
		.string "SUPERHELICO"

_0a1ee8_data:
		.string "HANGING"

_0a1ef0_data:
		.string "SEED"
		.ascii  "\x00\x00\x00"

_0a1ef8_data:
		.fill   0x4

_0a1efc_data:
		.ascii  "\x4c\x45\x56\x00"

_0a1f00_data:
		.string "event"
		.ascii  "\x00\x00"

_0a1f08_data:
		.ascii  "\x52\x41\x59\x00"

_0a1f0c_data:
		.string "Impossible d'ouvrir le fichier en lecture : %s.\n"
		.ascii  "\x00\x00\x00"

_0a1f40_data:
		.string ".CMD"
		.ascii  "\x00\x00\x00"

_0a1f48_data:
		.string "level %d: %d is too many events (MAX_NB_OBJ_IN_MAP = %d max) !!\n"
		.ascii  "\x00\x00\x00"

_0a1f8c_data:
		.string ".map"
		.ascii  "\x00\x00\x00"

_0a1f94_data:
		.string ".pcx"
		.ascii  "\x00\x00\x00"

_0a1f9c_data:
		.ascii   "Pas de fond charg"
		.ascii  "\x82"
		.string " dans %s"
		.ascii  "\x00"

_0a1fb8_data:
		.string "%s : error opening file (update_obj).\n"
		.ascii  "\x00"

_0a1fe0_data:
		.string "%s : error opening file (update_world).\n"
		.ascii  "\x00\x00\x00"

_0a200c_data:
		.string "%s : file not found (count_obj).\n"
		.ascii  "\x00\x00"

_0a2030_data:
		.string "No memory allocated for it (LoadPcxInVignet) !!"

_0a2060_data:
		.string "No memory allocated for it (LoadPcxInVignet) !!"

_0a2090_data:
		.string "No memory allocated for it (LoadPcxOptions) !!"
		.ascii  "\x00"

_0a20c0_data:
		.string "No memory allocated for it (LoadPcxOptions) !!"
		.ascii  "\x00"

_0a20f0_data:
		.string "No memory allocated (LoadPlan0InVignet)."
		.ascii  "\x00\x00\x00"

_0a211c_data:
		.ascii  "\x72\x00\x00\x00"

_0a2120_data:
		.string "Create version binary file ==> "

_0a2140_data:
		.string "Ok (%d).\n"
		.ascii  "\x00\x00"

_0a214c_data:
		.string "Load with fast load.\n"
		.ascii  "\x00\x00"

_0a2164_data:
		.string "Create big rayman file ==> "

_0a2180_data:
		.string "OK.\n"
		.ascii  "\x00\x00\x00"

_0a2188_data:
		.string "Create fix file ==> "
		.ascii  "\x00\x00\x00"

_0a21a0_data:
		.string "Create general binary file ==> "

_0a21c0_data:
		.string "Ok.\n"
		.ascii  "\x00\x00\x00"

_0a21c8_data:
		.string "Create language binary file ==> "
		.ascii  "\x00\x00\x00"

_0a21ec_data:
		.string "Create samples name binary file ==> "
		.ascii  "\x00\x00\x00"

_0a2214_data:
		.string "Create world map binary file ==> "
		.ascii  "\x00\x00"

_0a2238_data:
		.string "\nDo you want to create all %d worlds files ? "
		.ascii  "\x00\x00"

_0a2268_data:
		.ascii  "\x0a\x00\x00\x00"

_0a226c_data:
		.string "  Do you want to create %s world's file ? "
		.ascii  "\x00"

_0a2298_data:
		.string "\nCreate world %d (%s) ==> "
		.ascii  "\x00"

_0a22b4_data:
		.string "nb_des:%d nb_loaded_eta:%d nb_world_obj_type_max:%d nb_anim_obj_max:%d\n"

_0a22fc_data:
		.string "Do you want to create all %d %s levels of this world (%s) ? "
		.ascii  "\x00\x00\x00"

_0a233c_data:
		.string "\r  From which level do you want to start (1..%d) ? %d     "
		.ascii  "\x00"

_0a2378_data:
		.string "\r  To which level do you want to finish (%d..%d) ? %d     "
		.ascii  "\x00"

_0a23b4_data:
		.string "Create %s level %2d (%s) ==> "
		.ascii  "\x00\x00"

_0a23d4_data:
		.string "%s Level %2d not found.\n"
		.ascii  "\x00\x00\x00"

_0a23f0_data:
		.string "You can delete %s from RAY%02d.WLD.\n"
		.ascii  "\x00\x00\x00"

_0a2418_data:
		.string "\n\nAll files created correctly.\n\n"
		.ascii  "\x00\x00\x00"

_0a243c_data:
		.string "Verify version binary file ==> "

_0a245c_data:
		.string "Error.\n"

_0a2464_data:
		.string "Verify big rayman file ==> "

_0a2480_data:
		.string "Verify fix file ==> "
		.ascii  "\x00\x00\x00"

_0a2498_data:
		.string "Verify general binary file ==> "

_0a24b8_data:
		.string "Verify language binary file ==> "
		.ascii  "\x00\x00\x00"

_0a24dc_data:
		.string "Verify samples name binary file ==> "
		.ascii  "\x00\x00\x00"

_0a2504_data:
		.string "Verify world map binary file ==> "
		.ascii  "\x00\x00"

_0a2528_data:
		.string "\nVerify %s world %d (%s) ==> "
		.ascii  "\x00\x00"

_0a2548_data:
		.ascii  "\x57\x4c\x44\x00"

_0a254c_data:
		.string "Mode X "

_0a2554_data:
		.ascii  "\x4f\x4b\x00\x00"

_0a2558_data:
		.string "Error"
		.ascii  "\x00\x00"

_0a2560_data:
		.string " ==> "
		.ascii  "\x00\x00"

_0a2568_data:
		.string "Mode Normal "
		.ascii  "\x00\x00\x00"

_0a2578_data:
		.string "Verify %s level %2d (%s) ==> "
		.ascii  "\x00\x00"

_0a2598_data:
		.string "Background OK.\n"

_0a25a8_data:
		.string "not found.\n"

_0a25b4_data:
		.string "\nAll files verified correctly.\n\n"
		.ascii  "\x00\x00\x00"

_0a25d8_data:
		.string "\nEvents of world %2d. \n"

_0a25f0_data:
		.ascii   "Trop d'"
		.ascii  "\x82"
		.ascii   "venements trouv"
		.ascii  "\x82\x73\x2e\x0a\x00"

_0a260c_data:
		.string "   %s.\n"

_0a2614_data:
		.string "EVNAME"
		.ascii  "\x00"

_0a261c_data:
		.fill   0x4

_0a2620_data:
		.ascii  "\x57\x4c\x44\x00"

_0a2624_data:
		.ascii  "\x52\x41\x59\x00"

_0a2628_data:
		.ascii  "\x72\x62\x00\x00"

_0a262c_data:
		.string "wldobj.data"

_0a2638_data:
		.string "WorldDefine"

_0a2644_data:
		.ascii  "\x4c\x45\x56\x00"

_0a2648_data:
		.string "LevelDefine"

_0a2654_data:
		.string "BackGroundDefineNormal"
		.ascii  "\x00"

_0a266c_data:
		.string "BackGroundDefineDiff"
		.ascii  "\x00\x00\x00"

_0a2684_data:
		.string "MapInfo"

_0a268c_data:
		.string "GrosPataiBlock"
		.ascii  "\x00"

_0a269c_data:
		.string "BlocksCode"
		.ascii  "\x00"

_0a26a8_data:
		.string "BlockNormal"

_0a26b4_data:
		.ascii  "\x6f\x62\x6a\x00"

_0a26b8_data:
		.string "Nom_Inconnu"

_0a26c4_data:
		.string "ALLFIX.DAT"
		.ascii  "\x00"

_0a26d0_data:
		.string "wldobj"
		.ascii  "\x00"

_0a26d8_data:
		.string "BIGRAY.DAT"
		.ascii  "\x00"

_0a26e4_data:
		.string "ENDFILE"

_0a26ec_data:
		.string "Can not find : %s."
		.ascii  "\x00"

_0a2700_data:
		.string "%s : Can not read %s."
		.ascii  "\x00\x00"

_0a2718_data:
		.string "PCMAP"
		.ascii  "\x00\x00"

_0a2720_data:
		.string "PATCH"
		.ascii  "\x00\x00"

_0a2728_data:
		.string "%s : Can not open.\n"

_0a273c_data:
		.string "%s : File checksum integrity fault in %s.\n"
		.ascii  "\x00"

_0a2768_data:
		.string "%s : File size integrity fault in %s.\n"
		.ascii  "\x00"

_0a2790_data:
		.string "File %s doesn't belong to Rayman Kit.\n"
		.ascii  "\x00"

_0a27b8_data:
		.string "File %s doesn't belong to Rayman Kit.\n"
		.ascii  "\x00"

_0a27e0_data:
		.string "No diff scroll in X mode (INIT_MAP)."
		.ascii  "\x00\x00\x00"

_0a2808_data:
		.string "Bad GameModeVideo in INIT_FND"
		.ascii  "\x00\x00"

_0a2828_data:
		.string "320x200"

_0a2830_data:
		.string "312x196"

_0a2838_data:
		.string "304x192"

_0a2840_data:
		.string "300x188"

_0a2848_data:
		.ascii  "\x36\x30\x00\x00"

_0a284c_data:
		.ascii  "\x35\x30\x00\x00"

_0a2850_data:
		.ascii  "\x33\x30\x00\x00"

_0a2854_data:
		.ascii  "\x32\x35\x00\x00"

_0a2858_data:
		.string "mode dieu"
		.ascii  "\x00\x00"

_0a2864_data:
		.ascii  "\x31\x00\x00\x00"

_0a2868_data:
		.ascii  "\x32\x00\x00\x00"

_0a286c_data:
		.ascii  "\x33\x00\x00\x00"

_0a2870_data:
		.ascii  "\x34\x00\x00\x00"

_0a2874_data:
		.ascii  "\x35\x00\x00\x00"

_0a2878_data:
		.ascii  "\x36\x00\x00\x00"

_0a287c_data:
		.ascii  "\x37\x00\x00\x00"

_0a2880_data:
		.ascii  "\x38\x00\x00\x00"

_0a2884_data:
		.ascii  "\x39\x00\x00\x00"

_0a2888_data:
		.ascii  "\x30\x00\x00\x00"

_0a288c_data:
		.ascii  "\x61\x00\x00\x00"

_0a2890_data:
		.ascii  "\x7a\x00\x00\x00"

_0a2894_data:
		.ascii  "\x65\x00\x00\x00"

_0a2898_data:
		.ascii  "\x72\x00\x00\x00"

_0a289c_data:
		.ascii  "\x74\x00\x00\x00"

_0a28a0_data:
		.ascii  "\x79\x00\x00\x00"

_0a28a4_data:
		.ascii  "\x75\x00\x00\x00"

_0a28a8_data:
		.ascii  "\x69\x00\x00\x00"

_0a28ac_data:
		.ascii  "\x6f\x00\x00\x00"

_0a28b0_data:
		.ascii  "\x70\x00\x00\x00"

_0a28b4_data:
		.ascii  "\x71\x00\x00\x00"

_0a28b8_data:
		.ascii  "\x73\x00\x00\x00"

_0a28bc_data:
		.ascii  "\x64\x00\x00\x00"

_0a28c0_data:
		.ascii  "\x66\x00\x00\x00"

_0a28c4_data:
		.ascii  "\x67\x00\x00\x00"

_0a28c8_data:
		.ascii  "\x68\x00\x00\x00"

_0a28cc_data:
		.ascii  "\x6a\x00\x00\x00"

_0a28d0_data:
		.ascii  "\x6b\x00\x00\x00"

_0a28d4_data:
		.ascii  "\x6c\x00\x00\x00"

_0a28d8_data:
		.ascii  "\x6d\x00\x00\x00"

_0a28dc_data:
		.ascii  "\x77\x00\x00\x00"

_0a28e0_data:
		.ascii  "\x78\x00\x00\x00"

_0a28e4_data:
		.ascii  "\x63\x00\x00\x00"

_0a28e8_data:
		.ascii  "\x76\x00\x00\x00"

_0a28ec_data:
		.ascii  "\x62\x00\x00\x00"

_0a28f0_data:
		.ascii  "\x6e\x00\x00\x00"

_0a28f4_data:
		.ascii  "\x3f\x00\x00\x00"

_0a28f8_data:
		.ascii  "\x2e\x00\x00\x00"

_0a28fc_data:
		.ascii  "\x3a\x00\x00\x00"

_0a2900_data:
		.ascii  "\x61\x2f\x00\x00"

_0a2904_data:
		.ascii  "\x62\x2f\x00\x00"

_0a2908_data:
		.ascii  "\x63\x2f\x00\x00"

_0a290c_data:
		.ascii  "\x64\x2f\x00\x00"

_0a2910_data:
		.string "COMMON.DAT"
		.ascii  "\x00"

_0a291c_data:
		.ascii  "\x72\x62\x00\x00"

_0a2920_data:
		.string "SCRIPT"
		.ascii  "\x00"

_0a2928_data:
		.string "load_data : Malloc error"
		.ascii  "\x00\x00\x00"

_0a2944_data:
		.ascii  "\x2f\x20\x2f\x00"

_0a2948_data:
		.ascii  "\x7c\x00\x00\x00"

_0a294c_data:
		.ascii  "\x6f\x6b\x00\x00"

_0a2950_data:
		.string "/%s/"
		.ascii  "\x00\x00\x00"

_0a2958_data:
		.string "/......./"
		.ascii  "\x00\x00"

_0a2964_data:
		.ascii  "\x2f\x2e\x2f\x00"

_0a2968_data:
		.string "/%d/"
		.ascii  "\x00\x00\x00"

_0a2970_data:
		.ascii  "\x2f\x00\x00\x00"

_0a2974_data:
		.ascii  "\x20\x3a\x20\x00"

_0a2978_data:
		.string "Error On MAX_ACTOBJ : build_active_table (MOTEUR.C)"

_0a29ac_data:
		.string "Memory error in draw_buffer.\n"
		.ascii  "\x00\x00"

_0a29cc_data:
		.string "Rayman Designer"

_0a29dc_data:
		.string "\n%s\n"
		.ascii  "\x00\x00\x00"

_0a29e4_data:
		.ascii  "\x56\x49\x45\x00"

_0a29e8_data:
		.string "MAGIC"
		.ascii  "\x00\x00"

_0a29f0_data:
		.string "Invalide block (%d) in Map :\nBlock No %d/%d (x=%d/%d ; y=%d/%d).\n"
		.ascii  "\x00\x00"

_0a2a34_data:
		.string "Error On MAX_ACTOBJ : level_alw in init_struct_level (OBJINIT.C)"
		.ascii  "\x00\x00\x00"

_0a2a78_data:
		.string "Error On MAX_ACTOBJ : level_obj in init_struct_level (OBJINIT.C)"
		.ascii  "\x00\x00\x00"

_0a2abc_data:
		.string "Augmenter MAX_NB_SCROLL_PER_MAP"

_0a2adc_data:
		.string "PCMAP"
		.ascii  "\x00\x00"

_0a2ae4_data:
		.ascii  "\x5c\x00\x00\x00"

_0a2ae8_data:
		.string "%s\\%s.%s"
		.ascii  "\x00\x00\x00"

_0a2af4_data:
		.string "%s.%s"
		.ascii  "\x00\x00"

_0a2afc_data:
		.string "%s\\%s%02d.%s"
		.ascii  "\x00\x00\x00"

_0a2b0c_data:
		.string "%s\\%s%02d"
		.ascii  "\x00\x00"

_0a2b18_data:
		.string "%s%02d.%s"
		.ascii  "\x00\x00"

_0a2b24_data:
		.string "%s%02d"
		.ascii  "\x00"

_0a2b2c_data:
		.string "RAYKIT"
		.ascii  "\x00"

_0a2b34_data:
		.ascii  "\x43\x46\x47\x00"

_0a2b38_data:
		.ascii  "\x45\x44\x55\x00"

_0a2b3c_data:
		.string "%s%s"
		.ascii  "\x00\x00\x00"

_0a2b44_data:
		.ascii  "\x53\x41\x56\x00"

_0a2b48_data:
		.string "DESIGN"
		.ascii  "\x00"

_0a2b50_data:
		.string "STATES"
		.ascii  "\x00"

_0a2b58_data:
		.string "GRFXDATA"
		.ascii  "\x00\x00\x00"

_0a2b64_data:
		.string "GRAPHICS"
		.ascii  "\x00\x00\x00"

_0a2b70_data:
		.ascii  "\x4d\x41\x50\x00"

_0a2b74_data:
		.ascii  "\x5f\x00\x00\x00"

_0a2b78_data:
		.string "MAPPER"
		.ascii  "\x00"

_0a2b80_data:
		.string "NEWBLOCS"
		.ascii  "\x00\x00\x00"

_0a2b8c_data:
		.fill   0x4

_0a2b90_data:
		.ascii  "\x44\x53\x50\x00"

_0a2b94_data:
		.string "DATA\\PRECOMP"
		.ascii  "\x00\x00\x00"

_0a2ba4_data:
		.string "DATA\\BIN"
		.ascii  "\x00\x00\x00"

_0a2bb0_data:
		.string "DATA\\WLDMAP"

_0a2bbc_data:
		.string "PANNEAU"

_0a2bc4_data:
		.string "APPARI"
		.ascii  "\x00"

_0a2bcc_data:
		.string "DISPARI"

_0a2bd4_data:
		.string "BALONUP"

_0a2bdc_data:
		.string "BALONDOW"
		.ascii  "\x00\x00\x00"

_0a2be8_data:
		.string "SET_SAMPLES_TABLE : must be used only once"
		.ascii  "\x00"

_0a2c14_data:
		.fill   0x4

_0a2c18_data:
		.string "SET_SAMPLE_FILENAME_DELAY_AND_STRING : must be used only once for a given sample id (%s id=%d)"
		.ascii  "\x00"

_0a2c78_data:
		.string "SET_SAMPLE_FILENAME_DELAY_AND_STRING : increase NB_SAMPLES at least to %d in DATA\\INCLUDE\\SMPCONST.INC"
		.ascii  "\x00"

_0a2ce0_data:
		.string "SET_SAMPLE_FILENAME_DELAY_AND_STRING : samples_table not allocated"
		.ascii  "\x00"

_0a2d24_data:
		.string "SNDSMP.DAT"
		.ascii  "\x00"

_0a2d30_data:
		.ascii  "\x72\x62\x00\x00"

_0a2d34_data:
		.string "Scanning"
		.ascii  "\x00\x00\x00"

_0a2d40_data:
		.string "ENDFILE"

_0a2d48_data:
		.string " %d %%\r"

_0a2d50_data:
		.ascii  "\x0a\x00\x00\x00"

_0a2d54_data:
		.string "Warning : Sample %d not initialized.\n"
		.ascii  "\x00\x00"

_0a2d7c_data:
		.string "Scanning timing : %d ticks\n"

_0a2d98_data:
		.string "TEST_SAMPLES_TABLE : samples_table not allocated"
		.ascii  "\x00\x00\x00"

_0a2dcc_data:
		.string "RESET_ALL_SAMPLES_DELAY : samples_table not allocated"
		.ascii  "\x00\x00"

_0a2e04_data:
		.string " Loading sample %8s : %u\n"
		.ascii  "\x00\x00"

_0a2e20_data:
		.string "LOAD_SAMPLE_WITH_CONCATENED_DATA : Sample id (%d) too large.\n"
		.ascii  "\x00\x00"

_0a2e60_data:
		.string "LOAD_SAMPLE_WITH_CONCATENED_DATA : samples_table not allocated."

_0a2ea0_data:
		.string "LOAD_SAMPLE : Sample id (%d) too large.\n"
		.ascii  "\x00\x00\x00"

_0a2ecc_data:
		.string "LOAD_SAMPLE : samples_table not allocated"
		.ascii  "\x00\x00"

_0a2ef8_data:
		.string "UNLOAD_SAMPLE : Sample id (%d) too large.\n"
		.ascii  "\x00"

_0a2f24_data:
		.string "UNLOAD_SAMPLE : samples_table not allocated"

_0a2f50_data:
		.string "UNLOAD_ALL_SAMPLES_USED_IN_A_MAP : samples_table not allocated"
		.ascii  "\x00"

_0a2f90_data:
		.string "PLAY_SAMPLE : Sample id (%d) too large.\n"
		.ascii  "\x00\x00\x00"

_0a2fbc_data:
		.string "PLAY_SAMPLE : samples_table not allocated"
		.ascii  "\x00\x00"

_0a2fe8_data:
		.string "BONNREP"

_0a2ff0_data:
		.string "GENDOOR"

_0a2ff8_data:
		.string "CHERCHE"

_0a3000_data:
		.string "TRONC"
		.ascii  "\x00\x00"

_0a3008_data:
		.string "TOTEM"
		.ascii  "\x00\x00"

_0a3010_data:
		.string "PONTXILO"
		.ascii  "\x00\x00\x00"

_0a301c_data:
		.string "CONTREB"

_0a3024_data:
		.string "PONTBOIS"
		.ascii  "\x00\x00\x00"

_0a3030_data:
		.string "PIERRE"
		.ascii  "\x00"

_0a3038_data:
		.string "CRAYON"
		.ascii  "\x00"

_0a3040_data:
		.string "REGLE"
		.ascii  "\x00\x00"

_0a3048_data:
		.string "ELECTRI1"
		.ascii  "\x00\x00\x00"

_0a3054_data:
		.string "ELECTRI2"
		.ascii  "\x00\x00\x00"

_0a3060_data:
		.string "ROULEAU"

_0a3068_data:
		.string "FRUIT"
		.ascii  "\x00\x00"

_0a3070_data:
		.string "Max Size samples : %u (%u)  World : %d  Level : %d\n"

_0a30a4_data:
		.fill   0x4

_0a30a8_data:
		.ascii  "\x2f\x7e\x2f\x00"

_0a30ac_data:
		.ascii  "\x2f\x20\x2f\x00"

_0a30b0_data:
		.string "/%c/"
		.ascii  "\x00\x00\x00"

_0a30b8_data:
		.ascii  "\x72\x00\x00\x00"

_0a30bc_data:
		.ascii  "\x72\x62\x00\x00"

_0a30c0_data:
		.ascii  "\x77\x62\x00\x00"

_0a30c4_data:
		.ascii  "\x72\x74\x00\x00"

_0a30c8_data:
		.string "%s : error opening file (OuvreDescriptif).\n"

_0a30f4_data:
		.string "Loading general script\n"

_0a310c_data:
		.string "SPECIAL.DAT"

_0a3118_data:
		.ascii  "\x72\x62\x00\x00"

_0a311c_data:
		.string "GENERAL"

_0a3124_data:
		.string "Memory error in credit's text."
		.ascii  "\x00"

_0a3144_data:
		.string "Must have credits vignet"
		.ascii  "\x00\x00\x00"

_0a3160_data:
		.ascii  "\x45\x4e\x44\x00"

_0a3164_data:
		.string "WORLDMAPNUMBER"
		.ascii  "\x00"

_0a3174_data:
		.string "Augmenter la constante NB_WORLD_MAX dans rayconst.h"

_0a31a8_data:
		.string "LOGOTRACK"
		.ascii  "\x00\x00"

_0a31b4_data:
		.string "BIGRAYTRACK"

_0a31c0_data:
		.string "CONTINUETRACK"
		.ascii  "\x00\x00"

_0a31d0_data:
		.string "MENUTRACK"
		.ascii  "\x00\x00"

_0a31dc_data:
		.string "CREDITSTRACK"
		.ascii  "\x00\x00\x00"

_0a31ec_data:
		.string "LOGOBACKGROUND"
		.ascii  "\x00"

_0a31fc_data:
		.string "TITLEBACKGROUND"

_0a320c_data:
		.string "BIGRAYBACKGROUND"
		.ascii  "\x00\x00\x00"

_0a3220_data:
		.string "CONTINUEBACKGROUND"
		.ascii  "\x00"

_0a3234_data:
		.string "GENERALMENUBACKGROUND"
		.ascii  "\x00\x00"

_0a324c_data:
		.string "OPTIONSMENUBACKGROUND"
		.ascii  "\x00\x00"

_0a3264_data:
		.string "SAVEMENUBACKGROUND"
		.ascii  "\x00"

_0a3278_data:
		.string "CREDITSMENUBACKGROUND"
		.ascii  "\x00\x00"

_0a3290_data:
		.string "PERFECTBONUSBACKGROUND"
		.ascii  "\x00"

_0a32a8_data:
		.string "PERFTIMEBONUSBACKGROUND"

_0a32c0_data:
		.string "ENDGAMEVIGNET"
		.ascii  "\x00\x00"

_0a32d0_data:
		.string "DIFFICULTYNUMBERLEVEL"
		.ascii  "\x00\x00"

_0a32e8_data:
		.string "Increase NB_MAX_DIFFICULTY_LEVEL in rayconst.h"
		.ascii  "\x00"

_0a3318_data:
		.string "DIFFICULTYLEVEL"

_0a3328_data:
		.string "difficulty level too high in general.dsp"
		.ascii  "\x00\x00\x00"

_0a3354_data:
		.string "Error in difficulty string"
		.ascii  "\x00"

_0a3370_data:
		.string "FIXESNDBANK"

_0a337c_data:
		.string "TCHATCHPERDU"
		.ascii  "\x00\x00\x00"

_0a338c_data:
		.string "TCHATCHBONUSPERFECT"

_0a33a0_data:
		.string "TCHATCHQUIT"

_0a33ac_data:
		.string "TCHATCHERASE"
		.ascii  "\x00\x00\x00"

_0a33bc_data:
		.string "TCHATCHNIVEAU"
		.ascii  "\x00\x00"

_0a33cc_data:
		.string "TCHATCHQUITDOS"
		.ascii  "\x00"

_0a33dc_data:
		.string "TCHATCHENCOURAGE"
		.ascii  "\x00\x00\x00"

_0a33f0_data:
		.string "LANGUAGEFILE"
		.ascii  "\x00\x00\x00"

_0a3400_data:
		.string "LANGUAGEUSED"
		.ascii  "\x00\x00\x00"

_0a3410_data:
		.string "increase NOMBRE_MAX_LANGUE in rayconst.h"
		.ascii  "\x00\x00\x00"

_0a343c_data:
		.string "CREDITSTEXT"

_0a3448_data:
		.string "Memory error in credits."
		.ascii  "\x00\x00\x00"

_0a3464_data:
		.string "Real number of credits is different than read number of credits."
		.ascii  "\x00\x00\x00"

_0a34a8_data:
		.string "CREDITSVIGNET"
		.ascii  "\x00\x00"

_0a34b8_data:
		.string "Increase NB_MAX_CREDITS_VIGNET in rayconst.h"
		.ascii  "\x00\x00\x00"

_0a34e8_data:
		.string "Real number of credits vignet is different than read number of credits vignet."
		.ascii  "\x00"

_0a3538_data:
		.string "Unknown command (LoadGeneralFile) : %s"
		.ascii  "\x00"

_0a3560_data:
		.ascii  "\x7d\x00\x00\x00"

_0a3564_data:
		.ascii  "\x7b\x00\x00\x00"

_0a3568_data:
		.string "Number of credits vignet is not good."
		.ascii  "\x00\x00"

_0a3590_data:
		.string "Error in credits vignet"

_0a35a8_data:
		.string "  Memory for credits script : %d bytes\n"

_0a35d0_data:
		.string "Number of credits is not good."
		.ascii  "\x00"

_0a35f0_data:
		.string "Error in credits"
		.ascii  "\x00\x00\x00"

_0a3604_data:
		.string "Memory error in credit's text."
		.ascii  "\x00"

_0a3624_data:
		.string "Credit's text with text number must be \"\"."
		.ascii  "\x00"

_0a3650_data:
		.string "Credit's text without text number can not be \"\"."
		.ascii  "\x00\x00\x00"

_0a3684_data:
		.string "COMMON.DAT"
		.ascii  "\x00"

_0a3690_data:
		.fill   0x4

_0a3694_data:
		.string "WLDMAP"
		.ascii  "\x00"

_0a369c_data:
		.string "Memory Error in pastille demo."
		.ascii  "\x00"

_0a36bc_data:
		.string "  Memory for pastille demos script : %d bytes\n"
		.ascii  "\x00"

_0a36ec_data:
		.string "CDTRACK"

_0a36f4_data:
		.string "BACKGROUND"
		.ascii  "\x00"

_0a3700_data:
		.string "SELECTLEVELBACKGROUND"
		.ascii  "\x00\x00"

_0a3718_data:
		.string "WORLDSNUMBER"
		.ascii  "\x00\x00\x00"

_0a3728_data:
		.string "Increase NB_WORLD_MAX in rayconst.h"

_0a374c_data:
		.string "LEVELSNUMBER"
		.ascii  "\x00\x00\x00"

_0a375c_data:
		.string "Missing : number of world before number of level"
		.ascii  "\x00\x00\x00"

_0a3790_data:
		.string "Error in number of level"
		.ascii  "\x00\x00\x00"

_0a37ac_data:
		.string "DISPLAYTYPE"

_0a37b8_data:
		.string "BINOCULARS"
		.ascii  "\x00"

_0a37c4_data:
		.string "SAVEGAMESTRING"
		.ascii  "\x00"

_0a37d4_data:
		.string "SaveGameString sentence not defined"

_0a37f8_data:
		.string "GAMESAVEDSTRING"

_0a3808_data:
		.string "GameSavedString sentence not defined"
		.ascii  "\x00\x00\x00"

_0a3830_data:
		.string "NOSAVEGAMESTRING"
		.ascii  "\x00\x00\x00"

_0a3844_data:
		.string "NoSaveGameString sentence not defined"
		.ascii  "\x00\x00"

_0a386c_data:
		.string "MAPDEFINE"
		.ascii  "\x00\x00"

_0a3878_data:
		.string "Increase NB_PASTILLE_WORLDMAP_MAX in rayconst.h"

_0a38a8_data:
		.string "PARCHEMINDEFINE"

_0a38b8_data:
		.string "Error in parchemin"
		.ascii  "\x00"

_0a38cc_data:
		.string "LEVELLINK"
		.ascii  "\x00\x00"

_0a38d8_data:
		.string "HELPDEFINE"
		.ascii  "\x00"

_0a38e4_data:
		.string "Unknown command (AnalyseFichierWorldMap) : %s"
		.ascii  "\x00\x00"

_0a3914_data:
		.string "Error in pastille"
		.ascii  "\x00\x00"

_0a3928_data:
		.string "NO_VIGN"

_0a3930_data:
		.string "Pastille's world name not define"
		.ascii  "\x00\x00\x00"

_0a3954_data:
		.string "Pastille's level name not defined"
		.ascii  "\x00\x00"

_0a3978_data:
		.string "LevelLink over last pastille."
		.ascii  "\x00\x00"

_0a3998_data:
		.string "WORLD"
		.ascii  "\x00\x00"

_0a39a0_data:
		.string "DIFFICULTY"
		.ascii  "\x00"

_0a39ac_data:
		.string "Error between difficulty level in General file and worldmap file."
		.ascii  "\x00\x00"

_0a39f0_data:
		.string "RUNNINGDEMO"

_0a39fc_data:
		.string "Can not allocate memory for running demo pastille."
		.ascii  "\x00"

_0a3a30_data:
		.string "Error in running demo world"

_0a3a4c_data:
		.string "Error in running demo level"

_0a3a68_data:
		.string "No memory for running demo pastille."
		.ascii  "\x00\x00\x00"

_0a3a90_data:
		.string "increase NB_GAME_PLAY_PASTILLE_MAX in rayconst.h"
		.ascii  "\x00\x00\x00"

_0a3ac4_data:
		.string "increase NB_LEVEL_GAME_PLAY_MAX in rayconst.h"
		.ascii  "\x00\x00"

_0a3af4_data:
		.string "HelpDefine over last pastille."
		.ascii  "\x00"

_0a3b14_data:
		.string "Error between difficulty level in General file and worldmap file."
		.ascii  "\x00\x00"

_0a3b58_data:
		.string "Error in help define"
		.ascii  "\x00\x00\x00"

_0a3b70_data:
		.string "NO_HELP_VIGNET"
		.ascii  "\x00"

_0a3b80_data:
		.string "NO_HELP_SOUND"
		.ascii  "\x00\x00"

_0a3b90_data:
		.string "ENABLEPOWER"

_0a3b9c_data:
		.string "DISABLEPOWER"
		.ascii  "\x00\x00\x00"

_0a3bac_data:
		.string "Error in running demo pastille"
		.ascii  "\x00"

_0a3bcc_data:
		.string "Increase TAILLE_MAX_DEMO in RAYCONST.H.\n"
		.ascii  "\x00\x00\x00"

_0a3bf8_data:
		.ascii  "\x44\x53\x50\x00"

_0a3bfc_data:
		.string "WORLDPATH"
		.ascii  "\x00\x00"

_0a3c08_data:
		.string "WORLDPREFIX"

_0a3c14_data:
		.string "WORLDSNDBANK"
		.ascii  "\x00\x00\x00"

_0a3c24_data:
		.string "Unknown command (AnalyseFichierWorld) : %s"
		.ascii  "\x00"

_0a3c50_data:
		.string "Can't use Storm and FireFly in a map."
		.ascii  "\x00\x00"

_0a3c78_data:
		.string "Can't use Rain and Snow in a map."
		.ascii  "\x00\x00"

_0a3c9c_data:
		.string "Can't use Wind without Rain in a map."
		.ascii  "\x00\x00"

_0a3cc4_data:
		.string "LEVELBACKGROUND"

_0a3cd4_data:
		.string "Background filename not in world file."
		.ascii  "\x00"

_0a3cfc_data:
		.string "LEVELBACKGROUNDSCROLLDIFF"
		.ascii  "\x00\x00"

_0a3d18_data:
		.string "Background filename not in world file."
		.ascii  "\x00"

_0a3d40_data:
		.string "Unknown command (AnalyseFichierLevel) : %s"
		.ascii  "\x00"

_0a3d6c_data:
		.string "Error in power"
		.ascii  "\x00"

_0a3d7c_data:
		.string "FIST"
		.ascii  "\x00\x00\x00"

_0a3d84_data:
		.ascii  "\x52\x55\x4e\x00"

_0a3d88_data:
		.string "GRAP"
		.ascii  "\x00\x00\x00"

_0a3d90_data:
		.string "HELICO"
		.ascii  "\x00"

_0a3d98_data:
		.string "SUPERHELICO"

_0a3da4_data:
		.string "HANGING"

_0a3dac_data:
		.string "SEED"
		.ascii  "\x00\x00\x00"

_0a3db4_data:
		.string "SUPERSEED"
		.ascii  "\x00\x00"

_0a3dc0_data:
		.string "Unknow power."
		.ascii  "\x00\x00"

_0a3dd0_data:
		.string "Loading samples script\n"

_0a3de8_data:
		.string "SMPNAMES"
		.ascii  "\x00\x00\x00"

_0a3df4_data:
		.string "NBSAMPLES"
		.ascii  "\x00\x00"

_0a3e00_data:
		.string "SAMPLE"
		.ascii  "\x00"

_0a3e08_data:
		.string "Error in sample"

_0a3e18_data:
		.string "Unknown command (AnalyseFichierSamplesName) : %s"
		.ascii  "\x00\x00\x00"

_0a3e4c_data:
		.string "Erreur dans l'appel de la fonction LoadBackGroundFile."
		.ascii  "\x00"

_0a3e84_data:
		.string "TYPEBACKGROUND"
		.ascii  "\x00"

_0a3e94_data:
		.string "Unknown background type."
		.ascii  "\x00\x00\x00"

_0a3eb0_data:
		.string "TYPESCROLLY"

_0a3ebc_data:
		.string "X mode not available with diff scroll."
		.ascii  "\x00"

_0a3ee4_data:
		.string "TYPESCROLLX"

_0a3ef0_data:
		.string "X mode not available with diff scroll."
		.ascii  "\x00"

_0a3f18_data:
		.string "REPETITIONSPEEDY"
		.ascii  "\x00\x00\x00"

_0a3f2c_data:
		.string "X mode not available with diff scroll."
		.ascii  "\x00"

_0a3f54_data:
		.string "TYPESCROLLNORMAL"
		.ascii  "\x00\x00\x00"

_0a3f68_data:
		.string "NORMALSPEED"

_0a3f74_data:
		.string "VitesseNormal not available with diff scroll."
		.ascii  "\x00\x00"

_0a3fa4_data:
		.string "BANDDEFINE"
		.ascii  "\x00"

_0a3fb0_data:
		.string "Increase NB_MAX_BANDE_SCROLL_DIFF in rayconst.h"

_0a3fe0_data:
		.string "BandDefine not available with normal background."
		.ascii  "\x00\x00\x00"

_0a4014_data:
		.string "SPRITEDEFINE"
		.ascii  "\x00\x00\x00"

_0a4024_data:
		.string "SpriteDefine not available with normal background."
		.ascii  "\x00"

_0a4058_data:
		.string "Unknown command (AnalyseFichierBackGround) : %s"

_0a4088_data:
		.string "BandDefine over number of band."

_0a40a8_data:
		.string "Error in Banddefine"

_0a40bc_data:
		.string "increase NB_MAX_SPRITE_SCROLL_DIFF in rayconst.h."
		.ascii  "\x00\x00"

_0a40f0_data:
		.string "Error in Spritedefine"
		.ascii  "\x00\x00"

_0a4108_data:
		.string "Loading text script\n"
		.ascii  "\x00\x00\x00"

_0a4120_data:
		.string "%s : Malloc error for %s.\n"
		.ascii  "\x00"

_0a413c_data:
		.string "NUMBEROFLANGUAGES"
		.ascii  "\x00\x00"

_0a4150_data:
		.string "increase NOMBRE_MAX_LANGUE in rayconst.h"
		.ascii  "\x00\x00\x00"

_0a417c_data:
		.string "error between LangueUtilisee and NombreLangues"
		.ascii  "\x00"

_0a41ac_data:
		.string "LANGUAGENAMES"
		.ascii  "\x00\x00"

_0a41bc_data:
		.string "Missing NumberOfLanguages."
		.ascii  "\x00"

_0a41d8_data:
		.string "Error in Language's name"
		.ascii  "\x00\x00\x00"

_0a41f4_data:
		.string "KEYBOARDTYPE"
		.ascii  "\x00\x00\x00"

_0a4204_data:
		.string "Error in keyboard type."

_0a421c_data:
		.string "AZERTY"
		.ascii  "\x00"

_0a4224_data:
		.string "QWERTY"
		.ascii  "\x00"

_0a422c_data:
		.string "Unknown keyboard type."
		.ascii  "\x00"

_0a4244_data:
		.string "TEXTDEFINE"
		.ascii  "\x00"

_0a4250_data:
		.string "Memory error : can not allocate language."
		.ascii  "\x00\x00"

_0a427c_data:
		.string "Language error : %d not used in list."
		.ascii  "\x00\x00"

_0a42a4_data:
		.string "Unknown command (AnalyseFichierLangue) : %s"

_0a42d0_data:
		.string "  Memory for language script : %d bytes\n"
		.ascii  "\x00\x00\x00"

_0a42fc_data:
		.string "Error in language script"
		.ascii  "\x00\x00\x00"

_0a4318_data:
		.string "One sentence is out of array (see NB_LAST_TEXT in script)."
		.ascii  "\x00"

_0a4354_data:
		.string "more than one sentence have the same number."
		.ascii  "\x00\x00\x00"

_0a4384_data:
		.string "Error in Language script"
		.ascii  "\x00\x00\x00"

_0a43a0_data:
		.string "Memory error in sentence loading."
		.ascii  "\x00\x00"

_0a43c4_data:
		.ascii  "\x4b\x49\x54\x00"

_0a43c8_data:
		.string "VERSION"

_0a43d0_data:
		.string "increase NB_VERSIONS_MAX in rayconst.h"
		.ascii  "\x00"

_0a43f8_data:
		.string "Error in version script"

_0a4410_data:
		.string "error in version script"

_0a4428_data:
		.string "Unknown command (AnalyseFichierVersion) : %s"
		.ascii  "\x00\x00\x00"

_0a4458_data:
		.string "Error in EventName script"
		.ascii  "\x00\x00"

_0a4474_data:
		.string "Memory error in EventName loading."
		.ascii  "\x00"

_0a4498_data:
		.string "Memory error in EventName loading."
		.ascii  "\x00"

_0a44bc_data:
		.string "Can not do Hot effect and Diff scroll in a map."

_0a44ec_data:
		.string "Increase NBMAXBANDE_CHALEUR."
		.ascii  "\x00\x00\x00"

_0a450c_data:
		.string "MAP.INI"

_0a4514_data:
		.string "Level"
		.ascii  "\x00\x00"

_0a451c_data:
		.string "Game"
		.ascii  "\x00\x00\x00"

_0a4524_data:
		.string "EMPTY"
		.ascii  "\x00\x00"

_0a452c_data:
		.string "Title"
		.ascii  "\x00\x00"

_0a4534_data:
		.ascii  "\x4d\x61\x70\x00"

_0a4538_data:
		.fill   0x4

_0a453c_data:
		.string "Author"
		.ascii  "\x00"

_0a4544_data:
		.string "Comment"

_0a454c_data:
		.string "FIST"
		.ascii  "\x00\x00\x00"

_0a4554_data:
		.string "Power"
		.ascii  "\x00\x00"

_0a455c_data:
		.string "HANGING"

_0a4564_data:
		.ascii  "\x52\x55\x4e\x00"

_0a4568_data:
		.string "SEED"
		.ascii  "\x00\x00\x00"

_0a4570_data:
		.string "HELICO"
		.ascii  "\x00"

_0a4578_data:
		.string "SUPERHELICO"

_0a4584_data:
		.string "/map %d/"
		.ascii  "\x00\x00\x00"

_0a4590_data:
		.string "/%s/"
		.ascii  "\x00\x00\x00"

_0a4598_data:
		.ascii  "\x25\x73\x00\x00"

_0a459c_data:
		.ascii  "\x58\x00\x00\x00"

_0a45a0_data:
		.string "Original Map"
		.ascii  "\x00\x00\x00"

_0a45b0_data:
		.string "World"
		.ascii  "\x00\x00"

_0a45b8_data:
		.string "%d:%02d"

_0a45c0_data:
		.string "JUNGLE"
		.ascii  "\x00"

_0a45c8_data:
		.ascii  "\x4a\x55\x4e\x00"

_0a45cc_data:
		.string "MUSIC"
		.ascii  "\x00\x00"

_0a45d4_data:
		.ascii  "\x4d\x55\x53\x00"

_0a45d8_data:
		.string "MOUNTAIN"
		.ascii  "\x00\x00\x00"

_0a45e4_data:
		.ascii  "\x4d\x4f\x4e\x00"

_0a45e8_data:
		.string "IMAGE"
		.ascii  "\x00\x00"

_0a45f0_data:
		.ascii  "\x49\x4d\x41\x00"

_0a45f4_data:
		.string "CAVE"
		.ascii  "\x00\x00\x00"

_0a45fc_data:
		.ascii  "\x43\x41\x56\x00"

_0a4600_data:
		.string "CAKE"
		.ascii  "\x00\x00\x00"

_0a4608_data:
		.ascii  "\x43\x41\x4b\x00"

_0a460c_data:
		.string "Information sur le bloc_malloc.\n"
		.ascii  "\x00\x00\x00"

_0a4630_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e fixes                           : %u\n"
		.ascii  "\x00\x00"

_0a466c_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e fixes   (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0a46b4_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e mondes                          : %u\n"
		.ascii  "\x00\x00"

_0a46f0_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e mondes  (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0a4738_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e maps                            : %u\n"
		.ascii  "\x00\x00"

_0a4774_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e maps    (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0a47bc_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e sprites                         : %u\n"
		.ascii  "\x00\x00"

_0a47f8_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e sprites (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0a4840_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82\x65\x20\x82"
		.string "diteur                         : %u\n"
		.ascii  "\x00\x00"

_0a487c_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82\x65\x20\x82"
		.string "diteur (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0a48c4_data:
		.string "Information sur le temp_malloc.\n"
		.ascii  "\x00\x00\x00"

_0a48e8_data:
		.ascii   "   - Taille de la m"
		.ascii  "\x82"
		.ascii   "moire allou"
		.ascii  "\x82"
		.string "e            : %u\n"
		.ascii  "\x00"

_0a491c_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e                 : %u (%u*1024L)\n"
		.ascii  "\x00\x00"

_0a495c_data:
		.string "Left memory = %d\n"
		.ascii  "\x00\x00"

_0a4970_data:
		.ascii  "\x66\x69\x78\x00"

_0a4974_data:
		.string "world"
		.ascii  "\x00\x00"

_0a497c_data:
		.string "level"
		.ascii  "\x00\x00"

_0a4984_data:
		.string "sprite"
		.ascii  "\x00"

_0a498c_data:
		.string "edit"
		.ascii  "\x00\x00\x00"

_0a4994_data:
		.string "SaveEvent"
		.ascii  "\x00\x00"

_0a49a0_data:
		.string "EventCv"

_0a49a8_data:
		.string "unknown mem"

_0a49b4_data:
		.string "Memory error in block_malloc : %s = %p, size = %ul.\n"
		.ascii  "\x00\x00\x00"

_0a49ec_data:
		.string "Can not allocate %d bytes in memory.\n"
		.ascii  "\x00\x00"

_0a4a14_data:
		.string "not enough memory in pool.\nMemory error in tmp_malloc : size = %ul.\n"
		.ascii  "\x00\x00\x00"

_0a4a5c_data:
		.ascii  "\x3a\x20\x00\x00"

_0a4a60_data:
		.string "hmidet.386"
		.ascii  "\x00"

_0a4a6c_data:
		.string "acos"

_0a4a71_data:
		.string "asin"

_0a4a76_data:
		.string "sqrt"

_0a4a7b_data:
		.ascii  "\x65\x78\x70\x00"

_0a4a7f_data:
		.string "cosh"

_0a4a84_data:
		.string "sinh"

_0a4a89_data:
		.ascii  "\x70\x6f\x77\x00"

_0a4a8d_data:
		.string "acosh"

_0a4a93_data:
		.string "log2"

_0a4a98_data:
		.ascii  "\x6c\x6f\x67\x00"

_0a4a9c_data:
		.string "log10"

_0a4aa2_data:
		.string "atanh"

_0a4aa8_data:
		.string "atan2"

_0a4aae_data:
		.string "ipow"

_0a4ab3_data:
		.string "dpowi"

_0a4ab9_data:
		.ascii  "\x63\x6f\x73\x00"

_0a4abd_data:
		.ascii  "\x73\x69\x6e\x00"

_0a4ac1_data:
		.ascii  "\x74\x61\x6e\x00"

_0a4ac5_data:
		.ascii  "\x79\x30\x00"

_0a4ac8_data:
		.ascii  "\x79\x31\x00"

_0a4acb_data:
		.ascii  "\x79\x6e\x00"

_0a4ace_data:
		.ascii  "\x6d\x6f\x64\x00"

_0a4ad2_data:
		.string "cotan"

_0a4ad8_data:
		.string "Error 0"

_0a4ae0_data:
		.string "No such file or directory"

_0a4afa_data:
		.string "Argument list too big"

_0a4b10_data:
		.string "Exec format error"

_0a4b22_data:
		.string "Bad file number"

_0a4b32_data:
		.string "Not enough memory"

_0a4b44_data:
		.string "Permission denied"

_0a4b56_data:
		.string "File exists"

_0a4b62_data:
		.string "Cross-device link"

_0a4b74_data:
		.string "Invalid argument"

_0a4b85_data:
		.string "File table overflow"

_0a4b99_data:
		.string "Too many open files"

_0a4bad_data:
		.string "No space left on device"

_0a4bc5_data:
		.string "Argument too large"

_0a4bd8_data:
		.string "Result too large"

_0a4be9_data:
		.string "Resource deadlock would occur"

_0a4c07_data:
		.string "unknown error"
		.ascii  "\x00\x00\x00"

_0a4c18_data:
		.string "Error Code Does Not Indicate An Error"

_0a4c3e_data:
		.string "Specified Driver Is Not Loaded"

_0a4c5d_data:
		.string "Specified Pointer Is NULL"

_0a4c77_data:
		.string "Detection System Is Already Initialized"

_0a4c9f_data:
		.string "File Open Failure"

_0a4cb1_data:
		.string "Memory Allocation Failure"

_0a4ccb_data:
		.string "Invalid Driver ID"

_0a4cdd_data:
		.string "Driver Not Found"

_0a4cee_data:
		.string "Detection System Failed To Find Hardware"

_0a4d17_data:
		.string "Driver Already Loaded Using Specified Handle"

_0a4d44_data:
		.string "Invalid Handle"

_0a4d53_data:
		.string "No Handles Available"

_0a4d68_data:
		.string "Hardware Already Paused"

_0a4d80_data:
		.string "Hardware Not Paused"

_0a4d94_data:
		.string "Data Is Not Valid"

_0a4da6_data:
		.string "HMI*.386 File Open Failure"

_0a4dc1_data:
		.string "Incorrect Port"

_0a4dd0_data:
		.string "Incorrect IRQ"

_0a4dde_data:
		.string "Incorrect DMA"

_0a4dec_data:
		.string "Incorrect DMA/IRQ"
		.ascii  "\x00\x00"

_0a4e00_data:
		.string "hmidrv.386"
		.ascii  "\x00"

_0a4e0c_data:
		.string "Floating-point support not loaded\r\n"

_0a4e30_data:
		.string "Not enough memory to allocate file structures\r\n"

_0a4e60_data:
		.string "Domain error"

_0a4e6d_data:
		.string "Argument singularity"

_0a4e82_data:
		.string "Overflow range error"

_0a4e97_data:
		.string "Underflow range error"

_0a4ead_data:
		.string "Total loss of significance"

_0a4ec8_data:
		.string "Partial loss of significance"

_0a4ee5_data:
		.string " in "
		.ascii  "\x00\x00"

_0a4eec_data:
		.ascii  "\x3a\x8c\x30\xe2\x8e\x79\x45\x3e"

_0a4ef4_data:
		.ascii  "\x54\x5a\x00\x00"

_0a4ef8_data:
		.ascii  "\x69\x6e\x66\x00"

_0a4efc_data:
		.ascii  "\x6e\x61\x6e\x00"

_0a4f00_data:
		.string "ABNORMAL TERMINATION\r\n"
		.ascii  "\x00"

_0a4f18_data:
		.ascii  "\x00\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x03\x03\x03\x03\x03\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x0a\x0c\x0c\x0c\x0c\x0c\x0c"
		.ascii  "\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c"
		.ascii  "\x0c"
		.ascii   "8888888888"
		.ascii  "\x0c\x0c\x0c\x0c\x0c\x0c\x0c"
		.ascii   "XXXXXXHHHHHHHHHHHHHHHHHHHH"
		.ascii  "\x0c\x0c\x0c\x0c\x0c\x0c\x98\x98"
		.ascii  "\x98\x98\x98\x98\x88\x88\x88\x88"
		.ascii  "\x88\x88\x88\x88\x88\x88\x88\x88"
		.ascii  "\x88\x88\x88\x88\x88\x88\x88\x88"
		.ascii  "\x0c\x0c\x0c\x0c\x01"
		.fill   0x83

_0a501c_data:
		.ascii  "\x49\xad\x30\x70\xc7\x52\xe9\x3c"
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x6a\xbd"
		.ascii  "\x08\x6d\xa8\x13\x46\x12\xe6\x3d"
		.ascii  "\xe5\x44\xf5\x67\x45\xe6\x5a\xbe"
		.ascii  "\x36\xc7\x56\xa5\xe3\x1d\xc7\x3e"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\x2a\xbf"
		.ascii  "\x11\x11\x11\x11\x11\x11\x81"
		.ascii   "?SUUUUU"
		.ascii  "\xc5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0a5064_data:
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x2a\x3d"
		.ascii  "\x9a\x7c\xc0\xa8\x74\x39\xa9\xbd"
		.ascii  "\x98\xd8\xf8\xef\xd8\xee\x21\x3e"
		.ascii  "\x5c\x9f\x78\xb7\x4f\x7e\x92\xbe"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\xfa\x3e"
		.ascii  "\x17\x6c\xc1\x16\x6c\xc1\x56\xbf"
		.ascii   "TUUUUU"
		.ascii  "\xa5\x3f"
		.fill   0x6
		.ascii  "\xe0\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0a50ac_data:
		.fill   0x4
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x03\x00\x00\x00\x04\x00\x00\x00"
		.ascii  "\x04\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x06\x00\x00\x00"

_0a50d0_data:
		.ascii  "\x11\x00\x00\x00\x12\x00\x00\x00"
		.ascii  "\x10\x00\x00\x00"

_0a50dc_data:
		.ascii  "\x10\x89\xf9\x6c\x58\xb5\xf0"
		.ascii   "?|Q}<"
		.ascii  "\xb8\x72\xf1\x3f\x15\xb7\x31\x0a"
		.ascii  "\xfe\x06\xf3\x3f\xcc\x3b\x7f\x66"
		.ascii  "\x9e\xa0\xf6\x3f"

_0a50fc_data:
		.fill   0x4

_0a5100_data:
		.ascii  "\x00\x00\xf0\x7f"

_0a5104_data:
		.ascii  "\xc3\x1c\x98\xfc\x38\xba\xa6\x3f"
		.ascii  "\x21\x00\x01\x61\xd3\x98\xb0\xbf"
		.ascii  "\xa5\x98\xcd\x45\xc0\xa8\xb3\x3f"
		.ascii  "\x73\x4d\xa1\x33\x77\x45\xb7\xbf"
		.ascii  "\x62\xa5\xf2\xe4\xc4\x71\xbc\x3f"
		.ascii  "\x8b\xb3\x5b\x8e\x24\x49\xc2\xbf"
		.ascii  "\x76\x9d\x92\x99\x99\x99\xc9\x3f"
		.ascii  "\xf0"
		.ascii   "RUUUU"
		.ascii  "\xd5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0a514c_data:
		.fill   0x4
		.long   _0a4e60_data
		.long   _0a4e6d_data
		.long   _0a4e82_data
		.long   _0a4e97_data
		.long   _0a4ead_data
		.ascii  "\xc8\x4e"

_0a5166_data:
		.ascii  "\x0a\x00"

_0a5168_data:
		.ascii  "\x00\x00"

_0a516a_data:
		.ascii  "\x1f\x00\x3b\x00\x5a\x00\x78\x00"
		.ascii  "\x97\x00\xb5\x00\xd4\x00\xf3\x00"
		.ascii  "\x11\x01\x30\x01\x4e\x01"

_0a5180_data:
		.ascii  "\x6d\x01"

_0a5182_data:
		.ascii  "\x00\x00\x1f\x00\x3c\x00\x5b\x00"
		.ascii  "\x79\x00\x98\x00\xb6\x00\xd5\x00"
		.ascii  "\xf4\x00\x12\x01\x31\x01\x4f\x01"
		.ascii  "\x6e\x01"

_0a519c_data:
		.fill   0x4

_0a51a0_data:
		.ascii  "\x00\x00\xf0\x7f"

_0a51a4_data:
		.fill   0x4

_0a51a8_data:
		.ascii  "\x00\x00\xf0\xff"

_0a51ac_data:
		.ascii  "\xff\xff\xff\xff"

_0a51b0_data:
		.ascii  "\xff\xff\xef\x7f"

_0a51b4_data:
		.ascii  "\xff\xff\xff\xff"

_0a51b8_data:
		.ascii  "\xff\xff\xef\xff"

_0a51bc_data:
		.ascii  "\x29\xbd\x56\xb3\x15\x44\xe9\xbf"
		.ascii  "\xee\xaf\x16"
		.ascii   " Jb0@"
		.ascii  "\x9a\xb5\xb3\x12\xff\x07\x50\xc0"

_0a51d4_data:
		.fill   0x6
		.ascii  "\xf0\x3f\x0e\xce\x67\x4b\x80\xd5"
		.ascii  "\x41\xc0\x7f\x26\x15\xfa\x83\x80"
		.ascii  "\x73\x40\x77\x90\x0d\x9c\xfe\x0b"
		.ascii  "\x88\xc0"

_0a51f4_data:
		.ascii  "\xd8\x00"

_0a51f6_data:
		.ascii  "\xc6\xf9\xc6\x40"

_0a51fa_data:
		.ascii  "\xe9\x34\xc7\x6c\x6c\x00\x12\x4e"
		.ascii  "\x83\xcc"
		.string "=@[V6"
		.ascii  "\xce\xc9\x14\x88\x87\xe1\x24\x4b"
		.ascii  "\x1b\x00\x02\x84\xfe\xe4\x71\xd9"
		.ascii  "\x89\x45\x0e\x00\x00\x00\x90\x1e"
		.ascii  "\xc4\xbc\xd6\x42\x08"
		.fill   0x5
		.ascii  "\x84\xd7\x97\x41\x04"
		.fill   0x6
		.ascii  "\x88\xc3\x40\x01"
		.fill   0x7
		.ascii  "\x24\x40"
		.fill   0xc

_0a5250_data:
		.ascii  "\x00\x00"

_0a5252_data:
		.ascii  "\x00\x00"

_0a5254_data:
		.ascii  "\x00\x00"

_0a5256_data:
		.ascii  "\x00\x00"

_0a5258_data:
		.ascii  "\x00\x00"

_0a525a_data:
		.ascii  "\x00\x00"

_0a525c_data:
		.ascii  "\x00"

_0a525d_data:
		.ascii  "\x00\x20\x42\xc2\x42\x42\xc2\xc2"
		.ascii  "\x04\x0b\x00\x00\x00\x02\x03\x13"
		.ascii  "\x00\x00\x4a\xca\x4a\x4a\xca\xca"
		.fill   0x6
		.ascii  "\x0b\x00"
		.ascii   "                                "

_0a529d_data:
		.ascii  "\x28"

_0a529e_data:
		.ascii  "\x80"

_0a529f_data:
		.ascii  "\x03"

_0a52a0_data:
		.ascii  "\x23\x04\x00\x03\x02\x00\x00\x02"
		.ascii  "\x42\x21\x80\x21\x42\x04\x00\x02"
		.ascii  "\x42\x00\x80\x03\x02\x08\x10\x47"
		.ascii  "\x26\x08\x00\x02\x02\x00\x11\x43"
		.ascii  "\x20\x28\x80\x03\x23\x18\x80\x01"
		.ascii  "\x02\x05\x00\x00\x4a\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x04\x81\x02"
		.ascii  "\x02\x04\x81\x02\x02\x04\x80\x03"
		.ascii  "\x02\x01\x00\x20\x4a\x28\x91\x03"
		.ascii  "\x03\x20\x80\x02\x02\x00\x81\x03"
		.ascii  "\x02\x40\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x00\x02\x02\x00\x40\x02"
		.ascii  "\x02\x00\xc0\x02\x02\x00\x41\x02"
		.ascii  "\x02\x00\x40\x02\x02\x00\x80\x03"
		.ascii  "\x02\x01\x00\x00\x42\x08\x80\x02"
		.ascii  "\x02\x09\xb0\x22\x42\x00\x81\x03"
		.ascii  "\x02\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\x00\x03\x02\x01\x80\x03"
		.ascii  "\x42\x09\x80\x23\x42\x08\x90\x03"
		.ascii  "\x03\x08\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x08\x81\x02\x02\x00\x80\x03"
		.ascii  "\x02\x08\x10\x03\x22\x04\x80\x02"
		.ascii  "\x02\x00\x81\x02\x02\x98\xb0\x00"
		.ascii  "\x03\x09\x90\x23\x42\x19\x90\x23"
		.ascii  "\x42\x28\x90\x03\x02\x00\x80\x02"
		.ascii  "\x02\x20\x80\x02\x02\x28\x80\x03"
		.ascii  "\x03\x28\x80\x02\x03\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\xb1\x02\x02\x00\x80\x00"
		.ascii  "\x42\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x04\x01\x02\x02\x00\xc0\x02"
		.ascii  "\x02\x08\x10\x03\x23\x28\x80\x03"
		.ascii  "\x03\x09\x80\x03\x43\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x05\x00\x20\x48\x00\x00\x12"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x09\x80\x23\x42\x00\x00\x03"
		.ascii  "\x02\x20\x88\x13\x03\x00\x00\x12"
		.ascii  "\x22\x09\x00\x20\x42\x00\x00\x02"
		.ascii  "\x02\x00\x00\x02\x03\x00\x81\x02"
		.ascii  "\x02\x00\x01\x02\x42\x00\x01\x02"
		.ascii  "\x42\x00\x80\x03\x02\x01\x80\x23"
		.ascii  "\x42\x01\x80\x23\x42\x01\x80\x23"
		.ascii  "\x42\x01\x80\x23\x42\x11\x00\x00"
		.ascii  "\x42\x00\x00\x02\x42\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x04\x00\x00\x42\x28\x80\x13"
		.ascii  "\x03\x08\x00\x02\x02\x09\x80\x23"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x02"
		.ascii  "\x02\x08\x80\x02\x02\x08\x81\x03"
		.ascii  "\x02\x08\x00\x02\x02\x01\xb0\x12"
		.ascii  "\x42\x00\x00\x06\x32\x01\x00\x22"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x03"
		.ascii  "\x02\x08\x80\x02\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x80\x03"
		.ascii  "\x03\x09\x80\x23\x42\x00\x80\x03"
		.ascii  "\x02\x09\x80\x23\x42\x09\x90\x23"
		.ascii  "\x43\x28\x90\x0b\x23\x00\x00\x12"
		.ascii  "\x42\x00\x88\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x07\x02\x05\x10\x63"
		.ascii  "\x42\x00\x80\x03\x02\x28\x80\x02"
		.ascii  "\x03\x00\x00\x03\x02\x00\x11\x43"
		.ascii  "\x20\x00\x80\x03\x02\x01\x00\x02"
		.ascii  "\x42\x00\x00\x12\x22\x00\x89\x03"
		.ascii  "\x02\x05\x00\x22\x42\x00\x81\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x02\x12"
		.ascii  "\x22\x11\x00\x00\x4a\x00\x82\x01"
		.ascii  "\x42\x08\x80\x02\x02\x09\x00\x23"
		.ascii  "\x42\x28\x80\x03\x03\x00\x80\x03"
		.ascii  "\x42\x04\x00\x03\x02\x00\x80\x03"
		.ascii  "\x02\x0a\x80\x03\x22\x20\xc0\x03"
		.ascii  "\x03\x00\x80\x03\x02\x00\x89\x03"
		.ascii  "\x02\x00\x89\x03\x02\x08\x80\x03"
		.ascii  "\x03\x10\x00\x00\x02\x00\x80\x03"
		.ascii  "\x02\x00\x08\x03\x02\x00\x08\x03"
		.ascii  "\x02\x00\x02\x12\x22\x00\x01\x02"
		.ascii  "\x42\x00\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x23\x00\x00\x02"
		.ascii  "\x02\x00\x10\x43\x20\x00\xb0\x03"
		.ascii  "\x03\x00\xb8\x13\x03\x00\x80\x03"
		.ascii  "\x02\x05\x00\x03\x42\x28\x80\x1b"
		.ascii  "\x03\x00\x80\x03\x02\x28\x90\x02"
		.ascii  "\x03\x08\x00\x02\x02\x08\x00\x06"
		.ascii  "\x12\x00\x11\x47\x26\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x28\x90\x02"
		.ascii  "\x03\x08\x80\x03\x03\x01\x00\x22"
		.ascii  "\x42\x00\x80\x03\x02\x08\x00\x02"
		.ascii  "\x02\x08\x81\x03\x02\x00\x80\x03"
		.ascii  "\x02\x08\x00\x02\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x28\x10\x03\x03\x09\xb0\x22"
		.ascii  "\x42\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x05\x00\x03"
		.ascii  "\x42\x00\x80\x03\x02\x19\x80\x02"
		.ascii  "\x42\x19\x80\x02\x42\x01\x00\x02"
		.ascii  "\x42\x00\x80\x01\x00\x01\x00\x02"
		.ascii  "\x4a\x09\x90\x13\x42\x09\x90\x13"
		.ascii  "\x42\x00\x80\x03\x02\x28\x80\x02"
		.ascii  "\x03\x00\x80\x03\x02\x00\x10\x83"
		.ascii  "\x42\x11\x80\x22\x4a\x00\x80\x03"
		.ascii  "\x02\x08\x80\x03\x03\x00\x80\x03"
		.ascii  "\x02\x10\x80\x02\x02\x10\xa0\x02"
		.ascii  "\x02\x01\x00\x02\x42\x01\x00\x22"
		.ascii  "\x42\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x28\x90\x02\x03\x28\x90\x02"
		.ascii  "\x03\x98\xb0\x00\x02\x00\x80\x03"
		.ascii  "\x02\x08\x00\x02\x02\x08\x00\x02"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x08\x00\x02"
		.ascii  "\x42\x08\x00\x03\x02\x00\x00\x02"
		.ascii  "\x02\x00\xc0\x03\x42\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x08\x00\x06"
		.ascii  "\x12\x08\xc0\x06\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x02\x02\x00\x80\x03"
		.ascii  "\x42\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x08\x00\x02"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x04\x00\x02\x42\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x88\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x81\x02"
		.ascii  "\x02\x00\x80\x03\x02\x00\x81\x02"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x82\x03\x22\x00\x80\x03"
		.ascii  "\x02\x20\x80\x03\x02\x20\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x00\x06\x02\x00\x80\x03"
		.ascii  "\x02\x00\x00\x02\x02\x00\x00\x06"
		.ascii  "\x02\x00\x40\x02\x02\x00\x00\x12"
		.ascii  "\x02\x00\x00\x12\x02"

_0a56fd_data:
		.ascii  "\x00"

_0a56fe_data:
		.fill   0x10
		.ascii  "\xb0\xff"
		.fill   0x6
		.ascii  "\xfa\x00\x00\x00\xfa\x00\x00\x00"
		.ascii  "\xc4\xff\xc4\xff"
		.fill   0x4
		.ascii  "\x96"
		.fill   0xb
		.ascii  "\xc4\xff"
		.fill   0x8
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x34
		.ascii  "\x96\x00\xce\xff"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x16
		.ascii  "\xc2\x01\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0x1d
		.ascii  "\x96\x00\xce\xff"
		.fill   0x12
		.ascii  "\xb0\xff"
		.fill   0xe
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0x1d
		.ascii  "\xce\xff\xce\xff\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x8
		.ascii  "\xc8\x00\x00\x00\xc8"
		.fill   0x7
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0x2b
		.ascii  "\xc2\x01"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x19
		.ascii  "\xc8\x00\xc8"
		.fill   0x1b
		.ascii  "\xce\xff\xce\xff\xce\xff"
		.fill   0x46
		.ascii  "\xce\xff\xce\xff"

_0a592e_data:
		.fill   0x4c
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\x2c\x01"
		.fill   0x38
		.ascii  "\x78\x00\xce\xff\x00\x00\x96"
		.fill   0x5
		.ascii  "\xc8\x00\xc8"
		.fill   0xb
		.ascii  "\x5e\x01\xce\xff"
		.fill   0x8
		.ascii  "\xc8\x00\x8c"
		.fill   0x29
		.ascii  "\x32\x00\x00\x00\xce\xff"
		.fill   0x1e
		.ascii  "\x78\x00\x00\x00\xce\xff"
		.fill   0x6
		.ascii  "\x64\x00\x2c\x01\x00\x00\xc8"
		.fill   0x5
		.ascii  "\x78"
		.fill   0xd
		.ascii  "\x96\x00\x96\x00\x00\x00\xce\xff"
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\x78\x00\x78"
		.fill   0x5
		.ascii  "\x78\x00\x00\x00\xc8"
		.fill   0x7
		.ascii  "\x14\x00\x14"
		.fill   0x9
		.ascii  "\xc8"
		.fill   0x2b
		.ascii  "\x5e\x01"
		.fill   0xa
		.ascii  "\x96"
		.fill   0xd
		.ascii  "\x64\x00\x96"
		.fill   0x9
		.ascii  "\xc8\x00\xc8"
		.fill   0x1d
		.ascii  "\x14\x00\x14"
		.fill   0x4b

_0a5b5e_data:
		.ascii  "\x54\x00\x2c\x00\x0d\x11\x04\xff"
		.ascii  "\x03\x00\x04\x00\x03\x0d\x03\x00"
		.ascii  "\x0c\x00\x0b\x00\x10\x10\x03\x04"
		.ascii  "\x07\x00\x06\x00\x1a\x19\x01\xff"
		.ascii  "\x02\x00\x01\x00\x08\x0d\x03\x02"
		.ascii  "\x4c\x00\x3f\x00\x0a\x16\x01\xff"
		.ascii  "\x05\x00\x08\x00\x0c\x08\x03\x00"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x06\x00\x05\x00\x0a\x0b\x03\x00"
		.ascii  "\xa0\xff\x00\x00\xfa\x80\x01\xff"
		.ascii  "\x4a\x00\x49\x00\x0d\x11\x01\xff"
		.ascii  "\x08\x00\x09\x00\x13\x13\x03\x00"
		.ascii  "\x0e\x00\x01\x00\x0e\x2c\x03\x00"
		.ascii  "\x08\x00\x09\x00\x13\x13\x03\x00"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x40\x00\x30\x00\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x0b\x00\x0a\x00"
		.ascii  "\x10\x10\x03\x00\x10\x00\x1a\x00"
		.ascii  "\x30\x26\x03\x00\x0b\x00\x0b\x00"
		.ascii  "\x10\x10\x03\x00\x01\x00\xf9\xff"
		.ascii  "\x0c\x22\x03\x02\x08\x00\x06\x00"
		.ascii  "\x14\x14\x03\x00\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x4b\x00\x3a\x00"
		.ascii  "\x0c\x0c\x01\xff\x0a\x00\x06\x00"
		.ascii  "\x10\x13\x03\x00\x0b\x00\x07\x00"
		.ascii  "\x0e\x11\x03\x01\x0a\x00\x08\x00"
		.ascii  "\x11\x10\x03\x02\x18\x00\x18\x00"
		.ascii  "\x36\x35\x03\x04\x4c\x00\x3c\x00"
		.ascii  "\x08\x09\x01\xff\x15\x00\x14\x00"
		.ascii  "\x38\x38\x03\x00\x3f\x00\x28\x00"
		.ascii  "\x2b\x2d\x01\xff\x7b\x00\x82\x00"
		.ascii  "\x2b\x2d\x01\xff\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x4a\x00\x49\x00"
		.ascii  "\x0d\x11\x01\xff\x46\x00\x44\x00"
		.ascii  "\x0e\x0c\x01\xff\x0f\x00\x03\x00"
		.ascii  "\x0c\x2a\x03\x00\x6d\x00\x33\x00"
		.ascii  "\x36\x38\x01\xff\x6f\x00\x98\x00"
		.ascii  "\x33\x17\x01\xff\x4f\x00\x53\x00"
		.ascii  "\x74\x26\x01\xff\x32\x00\x72\x00"
		.ascii  "\x34\x0f\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\x00\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x44\x00\x35\x00"
		.ascii  "\x21\x22\x01\xff\x04\x00\x01\x00"
		.ascii  "\x10\x1c\x03\x02\x09\x00\x09\x00"
		.ascii  "\x24\x09\x03\x00\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x47\x00\x31\x00"
		.ascii  "\x12\x06\x01\xff"
		.fill   0x4
		.ascii  "\x4b\x50\x03\x02\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x07\x00\x05\x00"
		.ascii  "\x13\x13\x01\xff\x02\x00\x01\x00"
		.ascii  "\x08\x0d\x03\x02\x4c\x00\x3f\x00"
		.ascii  "\x0a\x16\x01\xff\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x02\x00\xff\xff"
		.ascii  "\x02\x1b\x03\x01\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\xfa\xff\x7f\xff"
		.ascii  "\x16\x8b\x03\x03\x03\x00\x02\x00"
		.ascii  "\x16\x05\x03\x01\x69\x00\xa8\x00"
		.ascii  "\x30\x3c\x01\xff\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x02\x00\x02\x00"
		.ascii  "\x02\x28\x03\x01\x01\x00\x01\x00"
		.ascii  "\x1f\x02\x03\x01\x00\x00\x50\x00"
		.ascii  "\x80\x01\x01\xff\x40\x00\x00\x00"
		.ascii  "\x20\x80\x01\xff\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x54\x00\x2a\x00"
		.ascii  "\x0d\x62\x04\xff\x05\x00\x01\x00"
		.ascii  "\x02\x13\x03\x00\x10\x00\xe8\xff"
		.ascii  "\x02\x51\x03\x00\x01\x00\x0a\x00"
		.ascii  "\x0e\x10\x04\xff"
		.fill   0x2d0

_0a619e_data:
		.fill   0xd
		.ascii  "\x10\x02\x08\x03\x08\x04\x10\x06"
		.ascii  "\x08\x00\x00\x07\x10\x09\x08\x0a"
		.ascii  "\x10\x0c\x08"
		.fill   0x28
		.ascii  "\x0d\x08\x0e\x08\x00\x00\x0f\x08"
		.ascii  "\x10\x08\x11\x08\x12\x08"
		.fill   0x4
		.ascii  "\x13\x08\x00\x00\x14\x08"
		.fill   0x4
		.ascii  "\x15\x20\x19\x08\x1a\x08\x1b\x08"
		.fill   0xe
		.ascii  "\x1c\x08"
		.fill   0xe
		.ascii  "\x1d\x08"
		.fill   0x16
		.ascii  "\x1e\x08"
		.fill   0x10
		.ascii  "\x1f\x08\x20\x08\x21\x08"
		.fill   0x4
		.ascii  "\x22\x08"
		.fill   0xa
		.ascii  "\x23\x20\x27\x08"
		.fill   0x8
		.ascii  "\x28\x08\x00\x00\x29\x08\x00\x00"
		.ascii  "\x2a\x08"
		.fill   0x8
		.ascii  "\x2b\x08\x2c\x08\x2d\x08"
		.fill   0x6
		.ascii  "\x2e\x08\x2f\x08\x30\x08\x00\x00"
		.ascii  "\x31\x08\x32\x18\x35\x10"
		.fill   0xa
		.ascii  "\x37\x08"
		.fill   0x4
		.ascii  "\x38\x08"
		.fill   0x4
		.ascii  "\x39\x08"
		.fill   0x8
		.ascii  "\x3a\x08\x00\x00\x3b\x20"
		.fill   0x6
		.ascii  "\x3f\x08\x40\x08"
		.fill   0x6
		.ascii  "\x41\x08"
		.fill   0x8
		.ascii  "\x42\x08"
		.fill   0x6
		.ascii  "\x43\x10\x00\x00\x45\x08\x46\x08"
		.fill   0xa
		.ascii  "\x47\x10\x49\x08\x4a\x10\x00\x00"
		.ascii  "\x4c\x10\x4e\x10"
		.fill   0x8
		.ascii  "\x50\x10\x52\x08"
		.fill   0x4
		.ascii  "\x53\x08\x54\x08\x00\x00\x55\x08"
		.fill   0x1c
		.ascii  "\x56\x08"
		.fill   0xa
		.ascii  "\x57\x08"
		.fill   0x18
		.ascii  "\x58\x10\x5a\x10\x5c\x20\x00\x00"
		.ascii  "\x60\x08\x61\x08"
		.fill   0x6
		.ascii  "\x62\x08\x00\x00\x63\x08"
		.fill   0x6
		.ascii  "\x64\x10\x66\x10\x68\x10\x6a\x10"
		.fill   0xc
		.ascii  "\x6c\x08"
		.fill   0x32
		.ascii  "\x6d\x08"
		.fill   0x8

_0a63d0_data:
		.long   _02bfdc_func

_0a63d4_data:
		.long   _067f08_func

_0a63d8_data:
		.long   _02b6a0_func

_0a63dc_data:
		.long   _067ff4_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _0694dc_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _066fe4_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _024ec8_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _025090_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _02d838_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02d7ac_func
		.long   _02d838_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _067d8c_func
		.long   _02b6a0_func
		.long   _067e88_func
		.long   _066490_func
		.long   _06a580_func
		.long   _06a7b0_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _026898_func
		.long   _0267d0_func
		.long   _02b6a0_func
		.long   _026838_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _026898_func
		.long   _0267d0_func
		.long   _02b6a0_func
		.long   _026838_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _067ad8_func
		.long   _067d20_func
		.long   _02b6a0_func
		.long   _067d84_func
		.long   _066490_func
		.long   _06824c_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bc64_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bc64_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _07f700_func
		.long   _080058_func
		.long   _02b6a0_func
		.long   _0801c4_func
		.long   _066490_func
		.long   _07eb04_func
		.long   _07f2b8_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _066964_func
		.long   _066a38_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _067064_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _07ce78_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _07e8f8_func
		.long   _07eaa0_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02bb24_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _067574_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _07f7cc_func
		.long   _080058_func
		.long   _02b6a0_func
		.long   _0801c4_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bc64_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _07eb04_func
		.long   _07f2b8_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bc64_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _059954_func
		.long   _059cfc_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05a080_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _067a68_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _067ac4_func
		.long   _066490_func
		.long   _07eee0_func
		.long   _080120_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _0681c4_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _027a74_func
		.long   _027934_func
		.long   _02b6a0_func
		.long   _027a1c_func
		.long   _066490_func
		.long   _027a74_func
		.long   _027934_func
		.long   _02b6a0_func
		.long   _027a1c_func
		.long   _066490_func
		.long   _02d5bc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bc64_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _01d444_func
		.long   _01d5d4_func
		.long   _02b6a0_func
		.long   _01d698_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _07eb04_func
		.long   _07f2b8_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _0802e0_func
		.long   _0805c4_func
		.long   _02b6a0_func
		.long   _080634_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _067338_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _07ef6c_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02e0d0_func
		.long   _029fe4_jump
		.long   _02e954_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _06722c_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02c098_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02c960_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _069e54_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _066ef4_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02d924_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _057f08_func
		.long   _05831c_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _066e54_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _06a1b0_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bc64_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02bb0c_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _07ffe8_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _07fec8_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02c578_func
		.long   _029fe4_jump
		.long   _02c5e8_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _0270d0_func
		.long   _0279a4_func
		.long   _02b6a0_func
		.long   _027a48_func
		.long   _066490_func
		.long   _0272c4_func
		.long   _0279a4_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _027360_func
		.long   _0279a4_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _07d10c_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _07e8f8_func
		.long   _07eaa0_func
		.long   _02b6a0_func
		.long   _080204_func
		.long   _066490_func
		.long   _02101c_func
		.long   _021054_func
		.long   _02136c_func
		.long   _021104_func
		.long   _020cf4_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _0679bc_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _066d78_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _066d4c_func
		.long   _066d64_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02d8d8_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _06a2a8_func
		.long   _06a434_func
		.long   _02b6a0_func
		.long   _06a800_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _067028_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02d7ac_func
		.long   _02d838_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _067518_func
		.long   _029fe4_jump
		.long   _067538_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bc64_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bc64_func
		.long   _02bce0_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _066d90_func
		.long   _066dc8_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02d554_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02c098_func
		.long   _02c2fc_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02cb28_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _059de8_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05a000_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _066e98_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _068088_func
		.long   _06811c_func
		.long   _02b6a0_func
		.long   _068178_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bc64_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bc64_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02cbe4_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02ce14_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _067094_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _080738_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _080aa0_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _0672cc_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _066c28_func
		.long   _067d8c_func
		.long   _02b6a0_func
		.long   _067e88_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _080ae4_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02d7ac_func
		.long   _02d838_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02e458_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02e458_func
		.long   _029fe4_jump
		.long   _02e954_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _07ebbc_func
		.long   _080120_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _068600_func
		.long   _0688d0_func
		.long   _02b6a0_func
		.long   _068a0c_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _02d838_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02cf38_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02cf38_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _068600_func
		.long   _0688d0_func
		.long   _02b6a0_func
		.long   _068a0c_func
		.long   _066490_func
		.long   _02cbe4_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bc64_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _01c980_func
		.long   _01cda8_func
		.long   _02b6a0_func
		.long   _01cec0_func
		.long   _066490_func
		.long   _01cf7c_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _0208f4_func
		.long   _029fe4_jump
		.long   _020b44_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _020b44_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _06f620_unknown
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02cfb4_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02f660_func
		.long   _02f9f0_func
		.long   _02b6a0_func
		.long   _02fa34_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _0681e0_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02fa8c_func
		.long   _029fe4_jump
		.long   _02fd6c_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _058360_func
		.long   _0584e8_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02d26c_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02d424_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02d4bc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _068600_func
		.long   _0688d0_func
		.long   _02b6a0_func
		.long   _068a0c_func
		.long   _066490_func
		.long   _068600_func
		.long   _0688d0_func
		.long   _02b6a0_func
		.long   _068a0c_func
		.long   _066490_func
		.long   _059954_func
		.long   _059cfc_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02ff5c_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02cf38_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02cf38_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _068408_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _0684fc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _0734a8_func
		.long   _029fe4_jump
		.long   _0737e8_unknown
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _060fe4_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _060e80_func
		.long   _029fe4_jump
		.long   _060f08_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _03b948_func
		.long   _029fe4_jump
		.long   _03b9bc_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _04ee58_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _04edcc_func
		.long   _066490_func
		.long   _04ef28_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _04eee8_func
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _06858c_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _0685c4_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _067490_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _0674fc_func
		.long   _02b6a0_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _0673a4_func
		.long   _05c980_unknown
		.long   _066490_func
		.long   _02bfdc_func
		.long   _029fe4_jump
		.long   _06741c_func
		.long   _05c980_unknown
		.ascii  "\x90\x64"

_0a79ae_data:
		.ascii  "\x06\x00\x00\x00\x03\x00\x07\x00"
		.ascii  "\x0a\x00\x0d\x00\x10\x00\x13\x00"
		.ascii  "\x16\x00\x19\x00\x1c\x00\x1f\x00"
		.ascii  "\x22\x00\x25\x00\x28\x00\x2a\x00"
		.ascii  "\x2c\x00"

_0a79d0_data:
		.ascii  "\x08\x08\x08\x08\x08\x08\x08\x08"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"

_0a7ad0_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xc4\xff\xe6\xff"
		.ascii  "\x08\x00\x20\x00\x4b\x00\x20\x00"
		.ascii  "\x08\x00\xe6\xff\xc4\xff"

_0a7af6_data:
		.ascii  "\xff\xff"
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x30\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00"

_0a7b1e_data:
		.ascii  "\x00\x00"

_0a7b20_data:
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x3c\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00\x00\x00"

_0a7b48_data:
		.ascii  "\x00\x00\x57\x03\x39\x03\x00\x00"
		.ascii  "\xff\xfc\x1a\xfd\xff\xff\xb2\x02"
		.ascii  "\x9a\x02\x00\x00\x93\xfd\xa9\xfd"
		.ascii  "\xff\xff\x2d\x02\x19\x02\x00\x00"
		.ascii  "\x0b\xfe\x1c\xfe\xff\xff\xc1\x01"
		.ascii  "\xb2\x01\x00\x00\x6b\xfe\x79\xfe"
		.ascii  "\xff\xff\x6b\x01\x5e\x01\x00\x00"
		.ascii  "\xb9\xfe\xc5\xfe\xff\xff\x24\x01"
		.ascii  "\x1a\x01\x00\x00\xf8\xfe\x01\xff"
		.ascii  "\xff\xff\xec\x00\xe4\x00\x00\x00"
		.ascii  "\x2b\xff\x32\xff\xff\xff\xbe\x00"
		.ascii  "\xb8\x00\x00\x00\x54\xff\x5a\xff"
		.ascii  "\xff\xff\x99\x00\x94\x00\x00\x00"
		.ascii  "\x75\xff\x7a\xff\xff\xff\x7c\x00"
		.ascii  "\x78\x00\x00\x00\x90\xff\x94\xff"
		.ascii  "\xff\xff\x50\x00\x80\x7f"

_0a7bc6_data:
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"

_0a7c26_data:
		.ascii  "\xff\x00\x00\x00\xfd\xff\xfa\xff"
		.ascii  "\xf8\xff\xf7\xff\xf6\xff\xf7\xff"
		.ascii  "\xf9\xff\xfb\xff\xfe\xff\x02\x00"
		.ascii  "\x06\x00\x07\x00"

_0a7c42_data:
		.ascii  "\x04\x00\x09\x00\x00\x00\x07\x00"
		.ascii  "\x05\x00"

_0a7c4c_data:
		.ascii  "\x80"
		.ascii   "~}|zyxwutsrponmljihgfecba`_^]\\[ZYXWVUTSRQPONNMLKJIIHGFFEDDCBAA@@"

_0a7c8d_data:
		.ascii  "\x00"

_0a7c8e_data:
		.ascii  "\x00\x00"

_0a7c90_data:
		.ascii  "\xff\xff"

_0a7c92_data:
		.ascii  "\x00"

_0a7c93_data:
		.ascii  "\x00"

_0a7c94_data:
		.fill   0x4

_0a7c98_data:
		.ascii  "\x00\x00\x0a\x00"

_0a7c9c_data:
		.ascii  "\xff"

_0a7c9d_data:
		.ascii  "\xff\x00\x00"

_0a7ca0_data:
		.fill   0x4

_0a7ca4_data:
		.fill   0x4

_0a7ca8_data:
		.ascii  "\x4d"

_0a7ca9_data:
		.ascii  "\x48"

_0a7caa_data:
		.ascii  "\x4b"

_0a7cab_data:
		.ascii  "\x50"

_0a7cac_data:
		.ascii  "\x38"

_0a7cad_data:
		.ascii  "\x1d"

_0a7cae_data:
		.ascii  "\x2d\x00"

_0a7cb0_data:
		.long   _0a7caa_data

_0a7cb4_data:
		.long   _0a7ca9_data

_0a7cb8_data:
		.long   _0a7ca8_data

_0a7cbc_data:
		.long   _0a7cab_data

_0a7cc0_data:
		.long   _0a7cad_data

_0a7cc4_data:
		.long   _0a7cac_data

_0a7cc8_data:
		.long   _0a7cae_data

_0a7ccc_data:
		.ascii   "KHMP"
		.ascii  "\x1d\x38\x2d"

_0a7cd3_data:
		.ascii  "\x00"

_0a7cd4_data:
		.ascii  "\x00\x00"

_0a7cd6_data:
		.ascii  "\x00\x00"

_0a7cd8_data:
		.ascii  "\x01\x00"

_0a7cda_data:
		.ascii  "\x00\x00"

_0a7cdc_data:
		.ascii  "\x00\x00"

_0a7cde_data:
		.ascii  "\x00"

_0a7cdf_data:
		.ascii  "\x01"

_0a7ce0_data:
		.ascii  "\x01\x00"

_0a7ce2_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_0a7cf2_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_0a7d02_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_0a7d12_data:
		.ascii  "\xff\x00\xff\x00"

_0a7d16_data:
		.ascii  "\xff\x00\xff\x00"

_0a7d1a_data:
		.ascii  "\xff\x00"

_0a7d1c_data:
		.ascii  "\xff\x00"

_0a7d1e_data:
		.ascii  "\xff\x00\xff\x00"

_0a7d22_data:
		.ascii  "\x00"

_0a7d23_data:
		.ascii  "\x00"

_0a7d24_data:
		.ascii  "\x00\x00"

_0a7d26_data:
		.ascii  "\x01\x00"

_0a7d28_data:
		.ascii  "\x01"

_0a7d29_data:
		.ascii  "\x00"

_0a7d2a_data:
		.fill   0xa

_0a7d34_data:
		.fill   0x4

_0a7d38_data:
		.fill   0x4

_0a7d3c_data:
		.ascii  "\xff\xff\x00\x00"

_0a7d40_data:
		.fill   0x4

_0a7d44_data:
		.fill   0x4

_0a7d48_data:
		.fill   0x4

_0a7d4c_data:
		.fill   0x4

_0a7d50_data:
		.fill   0xc
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e

_0a963c_data:
		.fill   0xe

_0a964a_data:
		.fill   0xc

_0a9656_data:
		.fill   0x4

_0a965a_data:
		.fill   0x4

_0a965e_data:
		.fill   0x4

_0a9662_data:
		.fill   0x4

_0a9666_data:
		.fill   0x4

_0a966a_data:
		.fill   0x4

_0a966e_data:
		.fill   0x4

_0a9672_data:
		.fill   0x10

_0a9682_data:
		.fill   0x4
		.ascii  "\x80\x3e\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x80\xbb\x00\x00"

_0a9692_data:
		.ascii  "\x00"

_0a9693_data:
		.ascii  "\x00"

_0a9694_data:
		.ascii  "\x00"

_0a9695_data:
		.ascii  "\x00"

_0a9696_data:
		.ascii  "\x00"

_0a9697_data:
		.fill   0x191

_0a9828_data:
		.fill   0x4
		.ascii  "\x40\x01\x00\x00\x80\x02\x00\x00"
		.ascii  "\xc0\x03\x00\x00\x00\x05\x00\x00"
		.ascii  "\x40\x06\x00\x00\x80\x07\x00\x00"
		.ascii  "\xc0\x08\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x40\x0b\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xc0\x0d\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x40\x10\x00\x00\x80\x11\x00\x00"
		.ascii  "\xc0\x12\x00\x00\x00\x14\x00\x00"
		.ascii  "\x40\x15\x00\x00\x80\x16\x00\x00"
		.ascii  "\xc0\x17\x00\x00\x00\x19\x00\x00"
		.ascii  "\x40\x1a\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xc0\x1c\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x40\x1f\x00\x00\x80\x20\x00\x00"
		.ascii  "\xc0\x21\x00\x00\x00\x23\x00\x00"
		.ascii  "\x40\x24\x00\x00\x80\x25\x00\x00"
		.ascii  "\xc0\x26\x00\x00\x00\x28\x00\x00"
		.ascii  "\x40\x29\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xc0\x2b\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x40\x2e\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xc0\x30\x00\x00\x00\x32\x00\x00"
		.ascii  "\x40\x33\x00\x00\x80\x34\x00\x00"
		.ascii  "\xc0\x35\x00\x00\x00\x37\x00\x00"
		.ascii  "\x40\x38\x00\x00\x80\x39\x00\x00"
		.ascii  "\xc0\x3a\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x40\x3d\x00\x00\x80\x3e\x00\x00"
		.ascii  "\xc0\x3f\x00\x00\x00\x41\x00\x00"
		.ascii  "\x40\x42\x00\x00\x80\x43\x00\x00"
		.ascii  "\xc0\x44\x00\x00\x00\x46\x00\x00"
		.ascii  "\x40\x47\x00\x00\x80\x48\x00\x00"
		.ascii  "\xc0\x49\x00\x00\x00\x4b\x00\x00"
		.ascii  "\x40\x4c\x00\x00\x80\x4d\x00\x00"
		.ascii  "\xc0\x4e\x00\x00\x00\x50\x00\x00"
		.ascii  "\x40\x51\x00\x00\x80\x52\x00\x00"
		.ascii  "\xc0\x53\x00\x00\x00\x55\x00\x00"
		.ascii  "\x40\x56\x00\x00\x80\x57\x00\x00"
		.ascii  "\xc0\x58\x00\x00\x00\x5a\x00\x00"
		.ascii  "\x40\x5b\x00\x00\x80\x5c\x00\x00"
		.ascii  "\xc0\x5d\x00\x00\x00\x5f\x00\x00"
		.ascii  "\x40\x60\x00\x00\x80\x61\x00\x00"
		.ascii  "\xc0\x62\x00\x00\x00\x64\x00\x00"
		.ascii  "\x40\x65\x00\x00\x80\x66\x00\x00"
		.ascii  "\xc0\x67\x00\x00\x00\x69\x00\x00"
		.ascii  "\x40\x6a\x00\x00\x80\x6b\x00\x00"
		.ascii  "\xc0\x6c\x00\x00\x00\x6e\x00\x00"
		.ascii  "\x40\x6f\x00\x00\x80\x70\x00\x00"
		.ascii  "\xc0\x71\x00\x00\x00\x73\x00\x00"
		.ascii  "\x40\x74\x00\x00\x80\x75\x00\x00"
		.ascii  "\xc0\x76\x00\x00\x00\x78\x00\x00"
		.ascii  "\x40\x79\x00\x00\x80\x7a\x00\x00"
		.ascii  "\xc0\x7b\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x40\x7e\x00\x00\x80\x7f\x00\x00"
		.ascii  "\xc0\x80\x00\x00\x00\x82\x00\x00"
		.ascii  "\x40\x83\x00\x00\x80\x84\x00\x00"
		.ascii  "\xc0\x85\x00\x00\x00\x87\x00\x00"
		.ascii  "\x40\x88\x00\x00\x80\x89\x00\x00"
		.ascii  "\xc0\x8a\x00\x00\x00\x8c\x00\x00"
		.ascii  "\x40\x8d\x00\x00\x80\x8e\x00\x00"
		.ascii  "\xc0\x8f\x00\x00\x00\x91\x00\x00"
		.ascii  "\x40\x92\x00\x00\x80\x93\x00\x00"
		.ascii  "\xc0\x94\x00\x00\x00\x96\x00\x00"
		.ascii  "\x40\x97\x00\x00\x80\x98\x00\x00"
		.ascii  "\xc0\x99\x00\x00\x00\x9b\x00\x00"
		.ascii  "\x40\x9c\x00\x00\x80\x9d\x00\x00"
		.ascii  "\xc0\x9e\x00\x00\x00\xa0\x00\x00"
		.ascii  "\x40\xa1\x00\x00\x80\xa2\x00\x00"
		.ascii  "\xc0\xa3\x00\x00\x00\xa5\x00\x00"
		.ascii  "\x40\xa6\x00\x00\x80\xa7\x00\x00"
		.ascii  "\xc0\xa8\x00\x00\x00\xaa\x00\x00"
		.ascii  "\x40\xab\x00\x00\x80\xac\x00\x00"
		.ascii  "\xc0\xad\x00\x00\x00\xaf\x00\x00"
		.ascii  "\x40\xb0\x00\x00\x80\xb1\x00\x00"
		.ascii  "\xc0\xb2\x00\x00\x00\xb4\x00\x00"
		.ascii  "\x40\xb5\x00\x00\x80\xb6\x00\x00"
		.ascii  "\xc0\xb7\x00\x00\x00\xb9\x00\x00"
		.ascii  "\x40\xba\x00\x00\x80\xbb\x00\x00"
		.ascii  "\xc0\xbc\x00\x00\x00\xbe\x00\x00"
		.ascii  "\x40\xbf\x00\x00\x80\xc0\x00\x00"
		.ascii  "\xc0\xc1\x00\x00\x00\xc3\x00\x00"
		.ascii  "\x40\xc4\x00\x00\x80\xc5\x00\x00"
		.ascii  "\xc0\xc6\x00\x00\x00\xc8\x00\x00"
		.ascii  "\x40\xc9\x00\x00\x80\xca\x00\x00"
		.ascii  "\xc0\xcb\x00\x00\x00\xcd\x00\x00"
		.ascii  "\x40\xce\x00\x00\x80\xcf\x00\x00"
		.ascii  "\xc0\xd0\x00\x00\x00\xd2\x00\x00"
		.ascii  "\x40\xd3\x00\x00\x80\xd4\x00\x00"
		.ascii  "\xc0\xd5\x00\x00\x00\xd7\x00\x00"
		.ascii  "\x40\xd8\x00\x00\x80\xd9\x00\x00"
		.ascii  "\xc0\xda\x00\x00\x00\xdc\x00\x00"
		.ascii  "\x40\xdd\x00\x00\x80\xde\x00\x00"
		.ascii  "\xc0\xdf\x00\x00\x00\xe1\x00\x00"
		.ascii  "\x40\xe2\x00\x00\x80\xe3\x00\x00"
		.ascii  "\xc0\xe4\x00\x00\x00\xe6\x00\x00"
		.ascii  "\x40\xe7\x00\x00\x80\xe8\x00\x00"
		.ascii  "\xc0\xe9\x00\x00\x00\xeb\x00\x00"
		.ascii  "\x40\xec\x00\x00\x80\xed\x00\x00"
		.ascii  "\xc0\xee\x00\x00\x00\xf0\x00\x00"
		.ascii  "\x40\xf1\x00\x00\x80\xf2\x00\x00"
		.ascii  "\xc0\xf3\x00\x00\x00\xf5\x00\x00"
		.ascii  "\x40\xf6\x00\x00\x80\xf7\x00\x00"
		.ascii  "\xc0\xf8\x00\x00"

_0a9b48_data:
		.fill   0x320

_0a9e68_data:
		.fill   0x4

_0a9e6c_data:
		.fill   0x4

_0a9e70_data:
		.fill   0x4

_0a9e74_data:
		.fill   0x4

_0a9e78_data:
		.fill   0x4

_0a9e7c_data:
		.fill   0x4

_0a9e80_data:
		.fill   0x4

_0a9e84_data:
		.ascii  "\x08\x00\x00\x00"

_0a9e88_data:
		.ascii  "\x38\x01\x00\x00"

_0a9e8c_data:
		.fill   0x4

_0a9e90_data:
		.ascii  "\xc8\x00\x00\x00"

_0a9e94_data:
		.fill   0x8

_0a9e9c_data:
		.fill   0x4

_0a9ea0_data:
		.fill   0x4

_0a9ea4_data:
		.fill   0x4

_0a9ea8_data:
		.fill   0x4

_0a9eac_data:
		.ascii  "\x96"
		.ascii   "}ddd"

_0a9eb1_data:
		.ascii  "\x96"

_0a9eb2_data:
		.ascii  "\x00"

_0a9eb3_data:
		.ascii  "\x00"

_0a9eb4_data:
		.fill   0x4

_0a9eb8_data:
		.string "ABCDEFABCDEFABCDEFABCDEF"

_0a9ed1_data:
		.string "111111222222333333444444"
		.ascii  "\x00\x00"

_0a9eec_data:
		.ascii  "\x20"

_0a9eed_data:
		.ascii  "\x07"

_0a9eee_data:
		.ascii  "\x3f\x1f\x07\x3d\x20\x07\x3a\x21"
		.ascii  "\x07"
		.ascii   "8$\n5%"
		.ascii  "\x0c\x33\x2d\x0f\x30\x34\x11\x2e"
		.ascii  "\x2d\x0f\x30\x28\x0f\x33\x23\x0c"
		.ascii   "5#\n8 "
		.ascii  "\x07\x3a\x1e\x05\x3d\x1b\x05\x3d"
		.ascii  "\x20"

_0a9f1a_data:
		.ascii  "\x07\x3f"

_0a9f1c_data:
		.ascii  "\x00\x00"

_0a9f1e_data:
		.ascii  "\x00\x00"

_0a9f20_data:
		.ascii  "\x00\x00"

_0a9f22_data:
		.ascii  "\x00\x00"

_0a9f24_data:
		.ascii  "\x00\x00"

_0a9f26_data:
		.ascii  "\x00\x00"

_0a9f28_data:
		.ascii  "\x00\x00"

_0a9f2a_data:
		.ascii  "\x00\x00"

_0a9f2c_data:
		.ascii  "\x00\x00"

_0a9f2e_data:
		.ascii  "\x00"

_0a9f2f_data:
		.ascii  "\x00"

_0a9f30_data:
		.ascii  "\x09\x0f\x05\x13\x14\x0a\x15\x19"
		.ascii  "\x0a\x22\x1e"
		.string "\n$#\n'(\n)-\n)2\n.7\n1<\n3<\n6<\n8<\n;<\n=<\n?"
		.ascii  "\x00"

_0a9f60_data:
		.ascii  "\xfd\xff\xfe\xff\xff\xff\x00\x00"
		.ascii  "\x01\x00\x01\x00\x03\x00"

_0a9f6e_data:
		.ascii  "\xfd\xff\xfb\xff\xfc\xff\xfa\xff"
		.ascii  "\xfb\xff\xfd\xff\xfd\xff"
		.long   _0a054c_data
		.long   _0a0564_data
		.long   _0a0574_data
		.long   _0a0584_data
		.long   _0a0594_data
		.long   _0a05a0_data
		.long   _0a05c4_data
		.long   _0a05d0_data
		.long   _0a05e0_data
		.long   _0a05f4_data
		.long   _0a060c_data
		.long   _0a0618_data
		.long   _0a0624_data
		.long   _0a0634_data
		.long   _0a0634_data
		.long   _0a0640_data

_0a9fbc_data:
		.ascii  "\x01\x01\x02\x02\x02\x00\x00\x00"

_0a9fc4_data:
		.ascii  "\x82\x81\xb6\x84\x99"

_0a9fc9_data:
		.ascii  "\x82\x81\xb6\x84\x99"

_0a9fce_data:
		.ascii  "\x98\xb4\x8e\x85\x8f\x99"

_0a9fd4_data:
		.ascii  "\x98\xb4\x8e\x85\x8f\x99"

_0a9fda_data:
		.ascii  "\x98\xb0\x86\xa7\x84\x8f\x8e\x99"

_0a9fe2_data:
		.ascii  "\x98\xb0\x88\xa7\x84\x8f\x8e\x99"

_0a9fea_data:
		.ascii  "\x98\x83\x86\x85\x84\xb9\x8e\xb1"
		.ascii  "\x99"

_0a9ff3_data:
		.ascii  "\x98\x83\x88\x85\x84\xb9\x8e\xa4"
		.ascii  "\x99"

_0a9ffc_data:
		.ascii  "\x98\x8f\x86\xb1\x99"

_0aa001_data:
		.ascii  "\x98\x8f\x88\xa4\x99"

_0aa006_data:
		.ascii  "\x98\x9d\x90\x89\x84\xb9\x81\xb0"
		.ascii  "\x99"

_0aa00f_data:
		.ascii  "\x98\x9d\x90\x89\x84\xb9\x81\xb0"
		.ascii  "\x99"

_0aa018_data:
		.ascii  "\x98\x9d\x95\x89\x84\xb9\x81\xb0"
		.ascii  "\x99"

_0aa021_data:
		.ascii  "\x98\x9d\x95\x89\x84\xb9\x81\xb0"
		.ascii  "\x99"

_0aa02a_data:
		.ascii  "\x98\x90\x9d\x89\x84\xb9\x81\xb0"
		.ascii  "\x99"

_0aa033_data:
		.ascii  "\x98\x90\x9d\x89\x84\xb9\x81\xb0"
		.ascii  "\x99"

_0aa03c_data:
		.ascii  "\x89\x82\xa7\x81\x8e\x8f\x99"

_0aa043_data:
		.ascii  "\x89\x82\xa7\x81\x8e\x8f\x99"

_0aa04a_data:
		.ascii  "\x89\xa7\x84\xb6\xb0\x8e\xb4\x99"

_0aa052_data:
		.ascii  "\x89\xa7\x84\xb6\xb0\x8e\xb4\x99"

_0aa05a_data:
		.ascii  "\xb4\xa7\x81\xb5\x89\x81\xa7\x81"
		.ascii  "\xb7\x99"

_0aa064_data:
		.ascii  "\xb4\xa7\x81\xb5\x89\x81\xa7\x81"
		.ascii  "\xb7\x99"

_0aa06e_data:
		.ascii  "\x98\xa7\x81\xba\x82\x85\x86\xa6"
		.ascii  "\x99"

_0aa077_data:
		.ascii  "\x98\xa7\x81\x87\x82\x85\x88\xa6"
		.ascii  "\x99"

_0aa080_data:
		.ascii  "\x92\x82\xa7\x81\x99"

_0aa085_data:
		.ascii  "\x92\x82\xa7\x81\x99\x00\x00"

_0aa08c_data:
		.fill   0x4
		.long   _0a0688_data

_0aa094_data:
		.ascii  "\x00"

_0aa095_data:
		.ascii  "\x53\x00\x00"

_0aa098_data:
		.fill   0x4

_0aa09c_data:
		.fill   0x4

_0aa0a0_data:
		.ascii  "\x00"

_0aa0a1_data:
		.fill   0x6
		.ascii  "\x0a"

_0aa0a8_data:
		.ascii  "\x00\x00"

_0aa0aa_data:
		.ascii  "\xff\xff"

_0aa0ac_data:
		.ascii  "\x00\x00"

_0aa0ae_data:
		.ascii  "\x00\x00"

_0aa0b0_data:
		.fill   0x64

_0aa114_data:
		.fill   0x64

_0aa178_data:
		.ascii  "\xb0\x04"

_0aa17a_data:
		.ascii  "\x20"

_0aa17b_data:
		.ascii  "\x00"

_0aa17c_data:
		.ascii  "\x00"

_0aa17d_data:
		.ascii  "\x00"

_0aa17e_data:
		.ascii  "\x01\x00"

_0aa180_data:
		.ascii  "\x00\x00"

_0aa182_data:
		.ascii  "\x00\x00"

_0aa184_data:
		.ascii  "\x00\x00"

_0aa186_data:
		.ascii  "\x00\x00"

_0aa188_data:
		.fill   0x4

_0aa18c_data:
		.ascii  "\x3c"

_0aa18d_data:
		.ascii  "\x00"

_0aa18e_data:
		.ascii  "\x00"

_0aa18f_data:
		.ascii  "\x3c"

_0aa190_data:
		.ascii  "\x00"

_0aa191_data:
		.ascii  "\x00"

_0aa192_data:
		.ascii  "\x00\x00"

_0aa194_data:
		.fill   0x4

_0aa198_data:
		.ascii  "\x00\x01\x00\x00"

_0aa19c_data:
		.fill   0x4

_0aa1a0_data:
		.fill   0x4

_0aa1a4_data:
		.fill   0x8

_0aa1ac_data:
		.fill   0x4

_0aa1b0_data:
		.fill   0x4

_0aa1b4_data:
		.fill   0x4

_0aa1b8_data:
		.fill   0x4

_0aa1bc_data:
		.fill   0x4

_0aa1c0_data:
		.ascii  "\x00\x20"
		.fill   0xa
		.ascii  "\x01\x00\x00\x00\x11\x2b"
		.fill   0xa

_0aa1dc_data:
		.fill   0x4

_0aa1e0_data:
		.fill   0x2c

_0aa20c_data:
		.fill   0x4

_0aa210_data:
		.ascii  "\x00\x00"

_0aa212_data:
		.ascii  "\x00\x00\x0b\x00\x0c\x00\x0d\x00"
		.ascii  "\x0e\x00\x0f\x00\x10\x00\x10\x00"
		.ascii  "\x11\x00\x13\x00\x14\x00\x15\x00"
		.ascii  "\x16\x00\x17\x00\x19\x00\x1a\x00"
		.ascii  "\x1c\x00\x1e\x00\x20\x00\x21\x00"
		.ascii  "\x23\x00\x26\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00\x2f\x00\x32\x00\x35\x00"
		.ascii  "\x39\x00\x3c\x00\x40\x00\x43\x00"
		.ascii  "\x47\x00\x4c\x00\x50\x00\x55\x00"
		.ascii  "\x5a\x00\x60\x00\x65\x00\x6b\x00"
		.ascii  "\x72\x00\x78\x00\x80\x00\x87\x00"
		.ascii  "\x8f\x00\x98\x00\xa1\x00\xaa\x00"
		.ascii  "\xb5\x00\xbf\x00\xcb\x00\xd7\x00"
		.ascii  "\xe4\x00\xf1\x00\x00\x01\x0f\x01"
		.ascii  "\x1f\x01\x30\x01\x42\x01\x55\x01"
		.ascii  "\x6a\x01\x7f\x01\x96\x01\xae\x01"
		.ascii  "\xc8\x01\xe3\x01\x00\x02\x1e\x02"
		.ascii  "\x3e\x02\x60\x02\x85\x02\xab\x02"
		.ascii  "\xd4\x02\xff\x02\x2c\x03\x5d\x03"
		.ascii  "\x90\x03\xc6\x03\x00\x04\x3c\x04"
		.ascii  "\x7d\x04\xc1\x04\x0a\x05\x56\x05"
		.ascii  "\xa8\x05\xfe\x05\x59\x06\xba\x06"
		.ascii  "\x20\x07\x8d\x07\x00\x08\x79\x08"
		.ascii  "\xfa\x08\x83\x09\x15\x0a\xad\x0a"
		.ascii  "\x50\x0b\xfc\x0b\xb2\x0c\x74\x0d"
		.ascii  "\x41\x0e\x1a\x0f\x00\x10\xf3\x10"
		.ascii  "\xf5\x11\x06\x13\x28\x14\x5b\x15"
		.ascii  "\xa0\x16\xf9\x17\x65\x19\xe8\x1a"
		.ascii  "\x82\x1c\x34\x1e\x00\x20\xe7\x21"
		.ascii  "\xeb"
		.ascii   "#\r&Q("
		.ascii  "\xb7\x2a\x41\x2d\xf2\x2f\xcb\x32"
		.ascii  "\xd1\x35\x04\x39\x68\x3c\x00\x40"
		.ascii  "\xce\x43\xd6\x47"

_0aa314_data:
		.fill   0x4

_0aa318_data:
		.fill   0x4

_0aa31c_data:
		.fill   0x4

_0aa320_data:
		.ascii  "\x00"

_0aa321_data:
		.ascii  "\x00"

_0aa322_data:
		.ascii  "\xff\xff"

_0aa324_data:
		.ascii  "\xff\xff"

_0aa326_data:
		.ascii  "\xff\xff"

_0aa328_data:
		.ascii  "\x00"

_0aa329_data:
		.ascii  "\x00"

_0aa32a_data:
		.ascii  "\x00\x00"

_0aa32c_data:
		.ascii  "\x00\x00"

_0aa32e_data:
		.ascii  "\x00\x00"

_0aa330_data:
		.fill   0x4

_0aa334_data:
		.fill   0x4

_0aa338_data:
		.long   _041cd8_jump

_0aa33c_data:
		.long   _041cec_jump

_0aa340_data:
		.long   _041d00_jump

_0aa344_data:
		.long   _041d00_jump

_0aa348_data:
		.ascii  "\x00"

_0aa349_data:
		.ascii  "\x00\x00\x00\x01\x00\x15\x00\x9c"
		.ascii  "\xff\x08\x00\x01\x00\x00\x00\x12"
		.ascii  "\x00\xa0\x00\x08\x00\x03\x00\x2a"
		.ascii  "\x00\x13\x00\x0e\x00\x01\x00\x15"
		.ascii  "\x00\x9c\xff\x08\x00\x06\x00\x0f"
		.ascii  "\x00\x12\x00\x4a\x01\x0e\x00\x00"
		.ascii  "\x00\x15\x00\x4a\x01\x08\x00\x06"
		.ascii  "\x00\x10\x00\x12\x00\x88\xff\x0e"
		.ascii  "\x00\x00\x00\x15\x00\x40\x01\x08"
		.ascii  "\x00\x01\x00\x00\x00\x12\x00\xf8"
		.ascii  "\xff\x08\x00\x03\x00\x29\x00\x13"
		.ascii  "\x00\x0e\x00\x00\x00\x15\x00\x64"
		.ascii  "\x00\x08\x00\x03\x00\x2b\x00\x13"
		.ascii  "\x00\x08\x00\x03\x00\x2c\x00\x13"
		.ascii  "\x00\x0e\x00\x00\x00\x15\x00\xc8"
		.ascii  "\x00\x08\x00\x03\x00\x2f\x00\x13"
		.ascii  "\x00\x08\x00\x03\x00\x30\x00\x13"
		.ascii  "\x00\x11\x00\x12\x00\x14\x00\xf8"
		.ascii  "\xff\x11\x00\x1e\x00\x14\x00\xf0"
		.ascii  "\xff\x11\x00\x2d\x00\x14\x00\xe0"
		.ascii  "\xff\x11\x00\x3c\x00\x14\x00\xc0"
		.ascii  "\xff\x11\x00\x41\x00\x14\x00\x00"
		.ascii  "\x00\x13\x00\x0e\x00\x00\x00"

_0aa400_data:
		.fill   0x4

_0aa404_data:
		.fill   0x4

_0aa408_data:
		.fill   0x4

_0aa40c_data:
		.fill   0x4
		.long   _0b92f8_data
		.long   _0b94a8_data
		.long   _0b6e48_data
		.long   _0b9410_data
		.ascii  "\x14\x11\x0c"

_0aa423_data:
		.ascii  "\x00"
		.ascii   "ABCDEFABCDEFABCDEFABCDEF"

_0aa43c_data:
		.ascii  "\x00"
		.string "111111222222333333444444"
		.ascii  "\x00\x00"

_0aa458_data:
		.ascii  "\x2f"

_0aa459_data:
		.fill   0x63
		.long   _0a2828_data
		.long   _0a2830_data
		.long   _0a2838_data
		.ascii  "\x40\x28"

_0aa4ca_data:
		.ascii  "\x0a\x00\x04\x00\x0c\x00\x14\x00"

_0aa4d2_data:
		.ascii  "\x18\x00\x40\x01\x38\x01\x30\x01"

_0aa4da_data:
		.ascii  "\x2c\x01\x00\x00\x08\x00\x10\x00"

_0aa4e2_data:
		.ascii  "\x14\x00\xc8\x00\xc0\x00\xb8\x00"
		.ascii  "\xb4\x00"
		.long   _0a2848_data
		.long   _0a284c_data
		.long   _0a2850_data
		.long   _0a2854_data
		.long   _0a2858_data

_0aa500_data:
		.ascii  "\x00"

_0aa501_data:
		.ascii  "\x00"

_0aa502_data:
		.ascii  "\x00"

_0aa503_data:
		.ascii  "\x00"

_0aa504_data:
		.ascii  "\x40\x00\x00\x00"

_0aa508_data:
		.fill   0x8
		.long   _0a2864_data
		.long   _0a2868_data
		.long   _0a286c_data
		.long   _0a2870_data
		.long   _0a2874_data
		.long   _0a2878_data
		.long   _0a287c_data
		.long   _0a2880_data
		.long   _0a2884_data
		.long   _0a2888_data
		.fill   0x10
		.long   _0a288c_data
		.long   _0a2890_data
		.long   _0a2894_data
		.long   _0a2898_data
		.long   _0a289c_data
		.long   _0a28a0_data
		.long   _0a28a4_data
		.long   _0a28a8_data
		.long   _0a28ac_data
		.long   _0a28b0_data
		.fill   0x10
		.long   _0a28b4_data
		.long   _0a28b8_data
		.long   _0a28bc_data
		.long   _0a28c0_data
		.long   _0a28c4_data
		.long   _0a28c8_data
		.long   _0a28cc_data
		.long   _0a28d0_data
		.long   _0a28d4_data
		.long   _0a28d8_data
		.fill   0x10
		.long   _0a28dc_data
		.long   _0a28e0_data
		.long   _0a28e4_data
		.long   _0a28e8_data
		.long   _0a28ec_data
		.long   _0a28f0_data
		.long   _0a28f4_data
		.long   _0a28f8_data
		.long   _0a28fc_data
		.fill   0x5c
		.long   _0a2874_data
		.fill   0xcc

_0aa708_data:
		.fill   0x8
		.long   _0a2864_data
		.long   _0a2868_data
		.long   _0a286c_data
		.long   _0a2870_data
		.long   _0a2874_data
		.long   _0a2878_data
		.long   _0a287c_data
		.long   _0a2880_data
		.long   _0a2884_data
		.long   _0a2888_data
		.fill   0x10
		.long   _0a28b4_data
		.long   _0a28dc_data
		.long   _0a2894_data
		.long   _0a2898_data
		.long   _0a289c_data
		.long   _0a28a0_data
		.long   _0a28a4_data
		.long   _0a28a8_data
		.long   _0a28ac_data
		.long   _0a28b0_data
		.fill   0x10
		.long   _0a288c_data
		.long   _0a28b8_data
		.long   _0a28bc_data
		.long   _0a28c0_data
		.long   _0a28c4_data
		.long   _0a28c8_data
		.long   _0a28cc_data
		.long   _0a28d0_data
		.long   _0a28d4_data
		.long   _0a28fc_data
		.fill   0x10
		.long   _0a2890_data
		.long   _0a28e0_data
		.long   _0a28e4_data
		.long   _0a28e8_data
		.long   _0a28ec_data
		.long   _0a28f0_data
		.long   _0a28d8_data
		.fill   0x4
		.long   _0a28f8_data
		.long   _0a28f4_data
		.fill   0x5c
		.long   _0a2874_data
		.fill   0xc8

_0aa908_data:
		.fill   0x4

_0aa90c_data:
		.fill   0x4

_0aa910_data:
		.fill   0x4

_0aa914_data:
		.ascii  "\x10\x17\x18\x16\x19"

_0aa919_data:
		.ascii  "\x10\x11\x0f\x1a\x0b\x05"

_0aa91f_data:
		.ascii  "\x0d\x1a\x0e\x03"

_0aa923_data:
		.ascii  "\x0d\x1a\x0e\x04\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x13\x15\x04\x14\x0a\x1a\x0e\x02"

_0aa94b_data:
		.ascii  "\x0d\x1a\x0e\x04\x07\x00\x07\x00"
		.ascii  "\x0a\x1a\x0e\x04\x03"

_0aa958_data:
		.ascii  "\x07\x04\x07\x08\x0a\x1a\x0e\x0d"
		.ascii  "\x1a\x0e\x04\x02"

_0aa964_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x04"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02"

_0aa979_data:
		.ascii  "\x09\x00\x12\x15\x04\x14\x09\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x0d"
		.ascii  "\x0e\x04\x02"

_0aa98c_data:
		.ascii  "\x07\x08\x08\x08\x09\x00\x13\x15"
		.ascii  "\x04\x14\x09\x08\x12\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02\x00\x00\x00"

_0aa9a4_data:
		.long   _0aa91f_data

_0aa9a8_data:
		.long   _0aa923_data
		.long   _0aa91f_data
		.long   _0aa94b_data
		.long   _0aa958_data
		.long   _0aa964_data
		.long   _0aa979_data
		.long   _0aa98c_data
		.long   _0aa919_data
		.long   _0aa914_data

_0aa9cc_data:
		.fill   0x6
		.ascii  "\x01"
		.fill   0x5

_0aa9d8_data:
		.ascii  "\x00\x02\x00\x02\x00\x02\x00\x02"
		.ascii  "\x00\x02\x00\x02\xff\x01\xff\x01"
		.ascii  "\xfe\x01\xfd\x01\xfd\x01\xfc\x01"
		.ascii  "\xfb\x01\xfa\x01\xf9\x01\xf8\x01"
		.ascii  "\xf7\x01\xf5\x01\xf4\x01\xf3\x01"
		.ascii  "\xf1\x01\xf0\x01\xee\x01\xec\x01"
		.ascii  "\xea\x01\xe9\x01\xe7\x01\xe5\x01"
		.ascii  "\xe3\x01\xe0\x01\xde\x01\xdc\x01"
		.ascii  "\xda\x01\xd7\x01\xd5\x01\xd2\x01"
		.ascii  "\xcf\x01\xcd\x01\xca\x01\xc7\x01"
		.ascii  "\xc4\x01\xc1\x01\xbe\x01\xbb\x01"
		.ascii  "\xb8\x01\xb4\x01\xb1\x01\xae\x01"
		.ascii  "\xaa\x01\xa7\x01\xa3\x01\x9f\x01"
		.ascii  "\x9c\x01\x98\x01\x94\x01\x90\x01"
		.ascii  "\x8c\x01\x88\x01\x84\x01\x80\x01"
		.ascii  "\x7c\x01\x78\x01\x73\x01\x6f\x01"
		.ascii  "\x6b\x01\x66\x01\x62\x01\x5d\x01"
		.ascii  "\x58\x01\x54\x01\x4f\x01\x4a\x01"
		.ascii  "\x45\x01\x40\x01\x3c\x01\x37\x01"
		.ascii  "\x32\x01\x2c\x01\x27\x01\x22\x01"
		.ascii  "\x1d\x01\x18\x01\x12\x01\x0d\x01"
		.ascii  "\x08\x01\x02\x01\xfd\x00\xf7\x00"
		.ascii  "\xf2\x00\xec\x00\xe7\x00\xe1\x00"
		.ascii  "\xdb\x00\xd6\x00\xd0\x00\xca\x00"
		.ascii  "\xc4\x00\xbf\x00\xb9\x00\xb3\x00"
		.ascii  "\xad\x00\xa7\x00\xa1\x00\x9b\x00"
		.ascii  "\x95\x00\x8f\x00\x89\x00\x83\x00"
		.ascii  "\x7d\x00\x77\x00\x71\x00\x6b\x00"
		.ascii  "\x64\x00\x5e\x00\x58\x00\x52\x00"
		.ascii  "\x4c\x00\x45\x00\x3f\x00\x39\x00"
		.ascii  "\x33\x00\x2c\x00\x26\x00\x20\x00"
		.ascii  "\x1a\x00\x13\x00\x0d\x00\x07\x00"
		.ascii  "\x01\x00\x00\x00"

_0aaadc_data:
		.long   _064c38_func

_0aaae0_data:
		.long   _064d5c_jump

_0aaae4_data:
		.long   _064d94_jump
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064d94_jump
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064d94_jump
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064d94_jump
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064d94_jump
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064f44_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064f64_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064d94_jump
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064f24_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064f88_func
		.long   _064c34_jump
		.long   _064c34_jump
		.long   _064fc8_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064da4_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064f0c_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064f98_func
		.long   _064c34_jump
		.long   _064c34_jump
		.long   _064fc0_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _065010_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _065034_func
		.long   _064c58_func
		.long   _064d64_func
		.long   _0650d8_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _0650b0_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064da8_func
		.long   _064ce0_func
		.long   _064d8c_func
		.long   _064d94_jump
		.long   _064c94_func
		.long   _064d84_jump
		.long   _064eb4_func
		.long   _064c94_func
		.long   _064d84_jump
		.long   _064ee0_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064df4_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064df4_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064dc8_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064e14_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064e3c_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064e64_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064e8c_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _064d94_jump
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _065058_func
		.long   _064c38_func
		.long   _064d5c_jump
		.long   _065084_func
		.long   _064d4c_func
		.long   _064d98_func
		.ascii  "\x04\x50"

_0aac72_data:
		.ascii  "\x06\x00\x04\x00\x57\x01\x22\x00"
		.ascii  "\x6c\x01\xde\x00\x25\x02\xc8\x00"
		.ascii  "\xcd\x02\xcc\x03\x19\x01\xc6\x01"
		.ascii  "\x6f\x00\xca\x02\x41\x02\x2a\x00"
		.ascii  "\xa9\x00\x43\x03\xbd\x02\x0e\x03"
		.ascii  "\x4f\x03\xd6\x03\xe0\x00\xb5\x01"
		.ascii  "\xcf\x03\x5b\x03\xb1\x03\x3e\x03"
		.ascii  "\xcd\x01\x6b\x02\xa5\x02\x66\x02"
		.ascii  "\x32\x02\xe1\x02\x74\x00\x9f\x01"
		.ascii  "\x7c\x00\xaf\x02\xe6\x01\xf6\x01"
		.ascii  "\x41\x02\x60\x01\x79\x03\x0e\x01"
		.ascii  "\xb8\x00\xb1\x01\xc7\x02\xa7\x00"
		.ascii  "\x27\x02\x94\x02\x7e\x02\x03\x00"
		.ascii  "\x26\x03\x13\x01\xd8\x01\x8b\x01"
		.ascii  "\x81\x01\x53\x02\x69\x02\x1e\x01"
		.ascii  "\xae\x00\x38\x03\x2e\x01\x55\x01"
		.ascii  "\xa2\x01\xf6\x00\xa7\x01\x37\x00"
		.ascii  "\xf9\x01\xef\x03\x01\x00\xa3\x01"
		.ascii  "\x47\x00\x4b\x00\x04\x01\xe6\x03"
		.ascii  "\x6b\x01\x9e\x01\xc9\x00\xc9\x00"
		.ascii  "\xd8\x00\xff\x00\x08\x03\x8e\x03"
		.ascii  "\x9f\x03\xf1\x02\xd8\x01\x20\x02"
		.ascii  "\x24\x00\x85\x00\xd5\x01\xef\x01"
		.ascii  "\x63\x02\x03\x01\x75\x00\xce\x02"
		.ascii  "\x98\x02\x8b\x03\x80\x03\x2b\x00"
		.ascii  "\x36\x02\x0a\x02\x7b\x02\x15\x03"
		.ascii  "\x03\x01\xde\x00\xf1\x00\x57\x01"
		.ascii  "\x43\x02\x88\x00\x74\x02\x1f\x00"
		.ascii  "\xcb\x03\xd9\x00\x3b\x03\x84\x02"
		.ascii  "\xdc\x02\xed\x02\x35\x02\x49\x02"
		.ascii  "\xac\x00\x54\x01\x7a\x03\x4c\x03"
		.ascii  "\x75\x02\xd0\x03\xf7\x03\xed\x03"
		.ascii  "\xf3\x02\x0a\x02\x2e\x01\xdf\x02"
		.ascii  "\x24\x01\x8f\x02\xf8\x01\xb3\x00"
		.ascii  "\x3c\x02\x89\x01\x19\x03\x8e\x01"
		.ascii  "\x9a\x02\x82\x00\x94\x00\x58\x01"
		.ascii  "\xad\x03\x9e\x02\x98\x02\xd6\x02"
		.ascii  "\x9f\x02\xa5\x02\xe2\x02\xfd\x03"
		.ascii  "\xaf\x01\x3f\x02\x81\x01\xef\x03"
		.ascii  "\x0f\x00\xc4\x03\xcf\x01\xf3\x00"
		.ascii  "\x2f\x02\xfa\x01\x81\x02\xd4\x02"
		.ascii  "\x55\x02\x28\x03\xba\x01\x03\x00"
		.ascii  "\x57\x03\xdd\x02\xf2\x03\xd4\x01"
		.ascii  "\x69\x01\xc1\x03\x93\x02\x42\x02"
		.ascii  "\xcb\x02\xe4\x00\x3d\x01\x97\x03"
		.ascii  "\x49\x00\xd4\x03\x73\x02\x53\x00"
		.ascii  "\x63\x03\xe8\x02\xb2\x02\xb3\x03"
		.ascii  "\xf9\x01\x24\x01\xb9\x02\x3d\x01"
		.ascii  "\x6b\x01\x05\x03\xe8\x03\xaf\x03"
		.ascii  "\xfa\x00\xa4\x01\xa7\x03\xad\x01"
		.ascii  "\x5a\x01\x8b\x03\x95\x00\x94\x00"
		.ascii  "\x4a\x01\x9b\x00\x7f\x02\xcc\x03"
		.ascii  "\x13\x01\x66\x00\xeb\x03\xfb\x00"
		.ascii  "\xdd\x00\x57\x00\x1c\x02\x82\x03"
		.ascii  "\x9e\x03\x0f\x01\x75\x02\x93\x03"
		.ascii  "\x9f\x02\x55\x00\x10\x02\x4a\x03"
		.ascii  "\x64\x03\xf4\x02\x74\x02\x30\x02"
		.ascii  "\xe5\x03\xee\x03\x41\x00\x77\x01"
		.ascii  "\xeb\x02\x63\x00\xb9\x02\x5a\x01"
		.ascii  "\x76\x00\x84\x01\x02\x01\x04\x02"
		.ascii  "\x14\x00\xfc\x03\x01\x00\x54\x00"
		.ascii  "\xfd\x00\x2b\x02\xb0\x01\xe1\x00"
		.ascii  "\xd6\x01\x95\x00\xd1\x00\xa9\x01"
		.ascii  "\x09\x00\xdb\x01\xd2\x01\xba\x00"
		.ascii  "\x0a\x00"

_0aae74_data:
		.ascii  "\x07\x03\x1b\x07\x07\x03\x1b\x03"
		.ascii  "\x03\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x07\x03\x03\x03\x0f"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x0f"
		.ascii  "\x0b\x07\x03\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x07\x03\x07\x07"
		.ascii  "\x1b\x07\x07\x03\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x07\x07\x0b\x0b"
		.ascii  "\x03\x07\x03\x03\x0b\x07\x03\x03"
		.ascii  "\x07\x07\x07\x07\x00\x07\x07\x07"
		.ascii  "\x0f\x07\x1f\x07\x07\x03\x03\x03"
		.ascii  "\x03\x03\x03\x1b\x03\x07\x03\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x1b\x03\x03\x03\x07\x0f"
		.ascii  "\x07\x07\x07\x07\x07\x1b\x03\x07"
		.ascii  "\x1b\x07\x07\x07\x07\x07\x07\x0b"
		.ascii  "\x03\x0b\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x07\x07\x07\x07\x07\x0f"
		.ascii  "\x07\x1b\x07\x07\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x03\x03\x03\x07"
		.ascii  "\x07\x07\x03\x07\x03\x03\x03\x03"
		.ascii  "\x04\x04\x07\x03\x07\x07\x03\x07"
		.ascii  "\x07\x1b\x07\x03\x00\x0f\x07\x07"
		.ascii  "\x03\x07\x07\x07\x03\x07\x07\x03"
		.ascii  "\x07\x07\x07\x03\x07\x1b\x1f\x03"
		.ascii  "\x03\x03\x07\x03\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x07\x07\x07\x0f"
		.ascii  "\x03\x03\x07\x07\x04\x1b\x04\x07"
		.ascii  "\x07\x07\x03\x03\x03\x03\x0b\x07"

_0aaf74_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0xb
		.ascii  "\x14\x1c\x00\x01\x02\x00\x00\x00"
		.ascii  "\x22"
		.fill   0x12
		.ascii  "\x01\x07\x02"
		.fill   0x5
		.ascii  "\x1e\x0f\x00\x02\x00\x00\x01"
		.fill   0xd
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\x0a"
		.fill   0x5
		.ascii  "\x1e\x36"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x4
		.ascii  "\x1e\x3c\x00\x3c\x28"
		.fill   0x7
		.ascii  "\x14\x00\x3c\x01"
		.fill   0x4
		.ascii  "\x09"
		.fill   0x9
		.ascii  "\x0a\x00\x0b"
		.fill   0x4
		.ascii  "\x1f\x19\x1e"
		.fill   0x6
		.ascii  "\x28\x00\x4b\x00\x00\x00\x32"
		.fill   0x9
		.ascii  "\x50"
		.fill   0x6
		.ascii  "\x3c"
		.fill   0x18
		.ascii  "\x01\x00\x00\x0c"
		.fill   0xf
		.ascii  "\x1e"
		.fill   0x7
		.ascii  "\x2d"
		.fill   0xb
		.ascii  "\x0f\x46"
		.fill   0xa
		.ascii  "\x07\x14"
		.fill   0x4

_0ab074_data:
		.fill   0x2a
		.ascii  "\x41"
		.fill   0xd
		.ascii  "\x28"
		.fill   0x3f
		.ascii  "\x23"
		.fill   0x10
		.ascii  "\x15"
		.fill   0x3d
		.ascii  "\x28"
		.fill   0x26
		.ascii  "\x1d\x0f"
		.fill   0xb
		.ascii  "\x14"
		.fill   0x4

_0ab174_data:
		.fill   0x54
		.ascii  "\x2a"
		.fill   0x1b
		.ascii  "\x38"
		.fill   0x7f
		.ascii  "\x78"
		.fill   0x21
		.ascii  "\x89"
		.fill   0x7b
		.ascii  "\xc7"
		.fill   0x4d
		.ascii  "\xee\x00\x17"
		.fill   0x17
		.ascii  "\x46"
		.fill   0x9

_0ab374_data:
		.ascii  "\x00"

_0ab375_data:
		.ascii  "\xff"

_0ab376_data:
		.ascii  "\x00"

_0ab377_data:
		.ascii  "\x7f\x35\x0f\x00\x50\x35\x00\x00"
		.ascii  "\x5a\x35\xff\x00\x5a\x3c\xff\x00"
		.ascii  "\x7f\x35\x05\x00\x73\x37\x03\x00"
		.ascii  "\x32\x35\xff\x00\x50\x35\x08\x00"
		.ascii  "\x37\x35\x0c\x00\x32\x35\xff\x00"
		.ascii  "\x50\x48\x06\x00\x5a\x35\x08\x00"
		.ascii  "\x3c\x41\x01\x00\x3c"

_0ab3ac_data:
		.ascii  "\x35"

_0ab3ad_data:
		.ascii  "\x07"

_0ab3ae_data:
		.ascii  "\x00\x50"

_0ab3b0_data:
		.ascii  "\x3a"

_0ab3b1_data:
		.ascii  "\x0d"

_0ab3b2_data:
		.ascii  "\x00\x50\x36\x04\x00\x50\x35\x1f"
		.ascii  "\x00\x50\x37\x1e\x00\x50"

_0ab3c0_data:
		.ascii  "\x3e"

_0ab3c1_data:
		.ascii  "\x10"

_0ab3c2_data:
		.ascii  "\x00\x50\x32\x15\x00\x7f\x35\x16"
		.ascii  "\x00\x50\x31\x17\x00\x50\x3c\x19"
		.ascii  "\x00\x3c\x37\x18\x00\x4b\x35\x4c"
		.ascii  "\x00\x50\x35\xff\x00\x50\x38\x57"
		.ascii  "\x00\x50\x32\x47\x00\x7f\x35\x48"
		.ascii  "\x00\x41\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x50\x3c\x4b\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\x68\x00\x2d\x37\x4f"
		.ascii  "\x00\x3c\x36\x50\x00\x3c\x39\x51"
		.ascii  "\x00\x3c\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x1a\x00\x50\x35\x55"
		.ascii  "\x00\x3c\x35\x5d\x00\x28\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x64\x35\x5a\x00\x50"

_0ab430_data:
		.ascii  "\x35"

_0ab431_data:
		.ascii  "\x5b"

_0ab432_data:
		.ascii  "\x00\x3c\x35\x5c\x00\x0a\x35\x46"
		.ascii  "\x00\x46\x38\x1b\x00\x50\x33\x05"
		.ascii  "\x00\x50\x39\x60\x00\x50"

_0ab448_data:
		.ascii  "\x35"

_0ab449_data:
		.ascii  "\x01"

_0ab44a_data:
		.ascii  "\x00\x5a\x38\x56\x00\x50\x3c\x27"
		.ascii  "\x00\x50\x41\x27\x00\x50\x46\x27"
		.ascii  "\x00\x50\x35\x15\x00\x32\x35\x16"
		.ascii  "\x00\x3c\x35\x20\x00\x1e\x35\x21"
		.ascii  "\x00\x3c\x35\x6a\x00\x50\x35\x63"
		.ascii  "\x00\x50\x35\x6b\x00\x50\x35\x6b"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x54"
		.ascii  "\x00\x46\x35\x0c\x00\x28\x35\x0b"
		.ascii  "\x00\x46\x3a\x5e\x00\x50\x33\x5f"
		.ascii  "\x00\x7f\x35\x60\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x69"
		.ascii  "\x00\x2d\x35\x61\x00\x50\x35\x5f"
		.ascii  "\x00\x5f\x32\x15\x00\x7f\x35\x16"
		.ascii  "\x00\x50"

_0ab4b4_data:
		.ascii  "\x35"

_0ab4b5_data:
		.ascii  "\x52"

_0ab4b6_data:
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x54"
		.ascii  "\x00\x50\x35\x33\x00\x5f\x36\x34"
		.ascii  "\x00\x46\x35\x46\x00\x50\x35\x47"
		.ascii  "\x00\x28\x35\x48\x00\x3c\x38\x49"
		.ascii  "\x00\x7f\x35\x4a\x00\x50\x35\x4b"
		.ascii  "\x00\x50\x35\x3d\x00\x50\x35\x3e"
		.ascii  "\x00\x3c\x35\x36\x00\x50\x35\x37"
		.ascii  "\x00\x32\x30\x38\x00\x7f\x35\x4d"
		.ascii  "\x00\x50\x35\x4e\x00\x73\x35\x4f"
		.ascii  "\x00\x64\x35\x32\x00\x2d\x35\x50"
		.ascii  "\x00\x73\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x61"
		.ascii  "\x00\x7f\x35\x62\x00\x50\x35\x63"
		.ascii  "\x00\x50\x37\x64\x00\x7f\x35\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x47"
		.ascii  "\x00\x46\x37\x46\x00\x46\x31\x47"
		.ascii  "\x00\x46\x35\x67\x00\x50\x35\x4b"
		.ascii  "\x00\x73\x32\x5e\x00\x7f\x33\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x39\xff"
		.ascii  "\x00\x50\x35\x4b\x00\x78\x37\x4c"
		.ascii  "\x00\x7f\x35\x4d\x00\x6e\x35\x4e"
		.ascii  "\x00\x50\x35\x50\x00\x50\x38\x4f"
		.ascii  "\x00\x37\x37\x51\x00\x50\x3f\x52"
		.ascii  "\x00\x37\x35\xff\x00\x50\x3e\x54"
		.ascii  "\x00\x2d\x39\x55\x00\x50\x3c\x56"
		.ascii  "\x00\x50\x35\x57\x00\x5a\x35\x58"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x13"
		.ascii  "\x00\x25\x35\x0f\x00\x41\x35\x24"
		.ascii  "\x00\x5a\x35\x22\x00\x50\x35\x23"
		.ascii  "\x00\x50\x35\x62\x00\x2d\x37\x62"
		.ascii  "\x00\x2d\x35\xff\x00\x50\x35\x49"
		.ascii  "\x00\x50\x32\x4a\x00\x50\x41\x4b"
		.ascii  "\x00\x50\x35\x67\x00\x64\x32\x4c"
		.ascii  "\x00\x7f\x3b\x4d\x00\x28\x35\xff"
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x51\x00\x50\x35\xff"
		.ascii  "\x00\x50\x3d\x53\x00\x78\x35\x54"
		.ascii  "\x00\x2d\x35\x55\x00\x50\x35\x56"
		.ascii  "\x00\x50\x35\x33\x00\x5f\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x55\x35\x5a\x00\x37\x3c\x48"
		.ascii  "\x00\x46\x3c\x48\x00\x46\x35\x49"
		.ascii  "\x00\x50\x3c\x33\x00\x46\x35\xff"
		.ascii  "\x00\x50\x35\x3f\x00\x6e\x35\x4c"
		.ascii  "\x00\x50"

_0ab618_data:
		.ascii  "\x35"

_0ab619_data:
		.ascii  "\x4d"

_0ab61a_data:
		.ascii  "\x00\x37\x35\x4e\x00\x50\x35\x4f"
		.ascii  "\x00\x50\x35\x50\x00\x50\x32\xff"
		.ascii  "\x00\x50\x35\x52\x00\x50\x37\x53"
		.ascii  "\x00\x50\x30\x54\x00\x5a\x2e\x55"
		.ascii  "\x00\x50\x32\xff\x00\x50\x35\x56"
		.ascii  "\x00\x50\x35\x46\x00\x28\x35\x47"
		.ascii  "\x00\x28\x35\x48\x00\x50\x35\x49"
		.ascii  "\x00\x50\x32\x4a\x00\x7f\x35\x4b"
		.ascii  "\x00\x50\x35\x4c\x00\x50\x35\x4d"
		.ascii  "\x00\x50\x35\x4e\x00\x64\x35\x4f"
		.ascii  "\x00\x7f\x35\x50\x00\x50\x35\x51"
		.ascii  "\x00\x50\x32\x25\x00\x41\x35\x26"
		.ascii  "\x00\x3c\x35\x0b\x00\x50\x25\x68"
		.ascii  "\x00\x1e\x3c\xff\x00\x7f\x35\x08"
		.ascii  "\x00\x50\x35\x64\x00\x50\x38\x01"
		.ascii  "\x00\x50\x35\x35\x00\x32\x35\x3c"
		.ascii  "\x00\x2d\x35\x4c\x00\x50\x35\x62"
		.ascii  "\x00\x64\x35\x29\x00\x28\x35\x39"
		.ascii  "\x00\x50\x35\x28\x00\x64\x3c\x27"
		.ascii  "\x00\x69\x35\x62\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x4c\x00\x7f\x3c\x60"
		.ascii  "\x00\x50\x35\x2a\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x2b\x00\x50\x35\xff"
		.ascii  "\x00\x50\x2e\x5a\x00\x5a\x35\x5c"
		.ascii  "\x00\x50\x35\x5f\x00\x28\x35\x5e"
		.ascii  "\x00\x32\x35\x5e\x00\x50\x35\x52"
		.ascii  "\x00\x50\x35\x53\x00\x50\x32\x54"
		.ascii  "\x00\x46\x34\x4d\x00\x50\x38\x4a"
		.ascii  "\x00\x50\x32\x4a\x00\x50\x32\x5a"
		.ascii  "\x00\x7f\x35\x59\x00\x50\x35\x55"
		.ascii  "\x00\x50\x32\x56\x00\x7f\x35\x57"
		.ascii  "\x00\x50\x39\x58\x00\x50\x32\x4c"
		.ascii  "\x00\x50\x3c\xff\x00\x7f\x3c\xff"
		.ascii  "\x00\x7f\x35\x33\x00\x7f\x3c\x19"
		.ascii  "\x00\x3c\x32\x15\x00\x7f\x41\x16"
		.ascii  "\x00\x3c\x35\x5d\x00\x37\x35\x5e"
		.ascii  "\x00\x7f\x35\x5e\x00\x7f"

_0ab748_data:
		.ascii  "\x35"

_0ab749_data:
		.ascii  "\x5c"

_0ab74a_data:
		.ascii  "\x00\x28\x37\x5f\x00\x7f\x35\x37"
		.ascii  "\x00\x50\x46\x61\x00\x37\x3c\x61"
		.ascii  "\x00\x32\x3c\x67\x00\x50\x3a\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x13"
		.ascii  "\x00\x50\x37\x69\x00\x32\x3c\xff"
		.ascii  "\x00\x7f"

_0ab774_data:
		.fill   0x4
		.ascii  "\x01"
		.fill   0x14
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01"
		.fill   0x7
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x00\x00\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\x01\x01\x01\x01"
		.ascii  "\x00\x01\x00\x00\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01"

_0ab868_data:
		.ascii  "\x01\x00\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x00"

_0ab872_data:
		.ascii  "\x00\x01"

_0ab874_data:
		.ascii  "\x7f\x00"

_0ab876_data:
		.ascii  "\x7f"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x02\x04\x05\x07\x09\x0b\x0c"

_0ab888_data:
		.fill   0x4

_0ab88c_data:
		.fill   0x4

_0ab890_data:
		.fill   0x4

_0ab894_data:
		.ascii  "\x00\x00"

_0ab896_data:
		.ascii  "\x00\x00"

_0ab898_data:
		.fill   0x4

_0ab89c_data:
		.fill   0x4

_0ab8a0_data:
		.string "Scanning samples %8s : "

_0ab8b8_data:
		.fill   0x8

_0ab8c0_data:
		.fill   0x4

_0ab8c4_data:
		.fill   0x4

_0ab8c8_data:
		.fill   0x4

_0ab8cc_data:
		.fill   0xc

_0ab8d8_data:
		.fill   0x4

_0ab8dc_data:
		.fill   0x4

_0ab8e0_data:
		.fill   0x4
		.ascii  "\x04\x00\x00\x00\x08\x00\x00\x00"
		.ascii  "\x10\x00\x00\x00\x30\x00\x00\x00"
		.ascii  "\x50\x00\x00\x00\x70\x00\x00\x00"
		.ascii  "\x90\x00\x00\x00\xa0\x00\x00\x00"
		.ascii  "\xb4\x00\x00\x00\xa0\x00\x00\x00"
		.ascii  "\x90\x00\x00\x00\x70\x00\x00\x00"
		.ascii  "\x50\x00\x00\x00\x30\x00\x00\x00"
		.ascii  "\x10\x00\x00\x00"

_0ab920_data:
		.fill   0x4

_0ab924_data:
		.fill   0x4

_0ab928_data:
		.ascii  "\x00\x00"

_0ab92a_data:
		.ascii  "\x00\x00"

_0ab92c_data:
		.ascii  "\x01\x00"

_0ab92e_data:
		.ascii  "\x04\x00"

_0ab930_data:
		.ascii  "\x01\x00"

_0ab932_data:
		.ascii  "\x00\x00"

_0ab934_data:
		.ascii  "\x40\x01\x00\x00"

_0ab938_data:
		.fill   0x4

_0ab93c_data:
		.fill   0x4

_0ab940_data:
		.ascii  "\x00\x00"

_0ab942_data:
		.ascii  "\x00\x00"

_0ab944_data:
		.fill   0x4

_0ab948_data:
		.ascii  "\x00\x00"

_0ab94a_data:
		.ascii  "\x00\x00"

_0ab94c_data:
		.fill   0x4

_0ab950_data:
		.ascii  "\x00\x00"

_0ab952_data:
		.ascii  "\x00\x00"

_0ab954_data:
		.fill   0x4

_0ab958_data:
		.ascii  "\x00\x00"

_0ab95a_data:
		.ascii  "\x00\x00"

_0ab95c_data:
		.fill   0x4

_0ab960_data:
		.ascii  "\x00\x00"

_0ab962_data:
		.ascii  "\x00\x00"

_0ab964_data:
		.fill   0x4

_0ab968_data:
		.long   _085463_jump

_0ab96c_data:
		.long   _085463_jump

_0ab970_data:
		.long   _085463_jump

_0ab974_data:
		.fill   0x4

_0ab978_data:
		.ascii  "\x20\x00\x00\x00"

_0ab97c_data:
		.fill   0x4

_0ab980_data:
		.fill   0x4

_0ab984_data:
		.ascii  "\x01\x00\x00\x00"

_0ab988_data:
		.long   _08780f_func

_0ab98c_data:
		.long   _08781a_func

_0ab990_data:
		.long   _087825_func

_0ab994_data:
		.fill   0xc
		.ascii  "\x01"
		.fill   0xd

_0ab9ae_data:
		.fill   0x4

_0ab9b2_data:
		.fill   0x8
		.ascii  "\x02"

_0ab9bb_data:
		.ascii  "\x00\x00\x00\x01\x00\x00\x00"

_0ab9c2_data:
		.fill   0x6

_0ab9c8_data:
		.fill   0xc
		.ascii  "\x02"

_0ab9d5_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0x15
		.ascii  "\x03\x00\x00\x00\x03"
		.fill   0x15
		.ascii  "\x02\x00\x00\x00\x04"
		.fill   0x9

_0aba16_data:
		.fill   0x186

_0abb9c_data:
		.ascii  "\x61"

_0abb9d_data:
		.ascii  "\x00\x01\x00\x00"
		.long   _0e0ff4_data
		.ascii  "\x00\x00\x00"

_0abba8_data:
		.fill   0x4

_0abbac_data:
		.fill   0x4

_0abbb0_data:
		.fill   0x4

_0abbb4_data:
		.ascii  "\x00"

_0abbb5_data:
		.ascii  "\x00\x00\x00"

_0abbb8_data:
		.fill   0x4

_0abbbc_data:
		.fill   0x4

_0abbc0_data:
		.fill   0x4

_0abbc4_data:
		.fill   0x4

_0abbc8_data:
		.fill   0x4

_0abbcc_data:
		.fill   0x4

_0abbd0_data:
		.fill   0x4

_0abbd4_data:
		.fill   0x4

_0abbd8_data:
		.fill   0x4

_0abbdc_data:
		.fill   0x8

_0abbe4_data:
		.fill   0x4

_0abbe8_data:
		.ascii  "\x00\x00"

_0abbea_data:
		.ascii  "\x00"

_0abbeb_data:
		.ascii  "\x00"

_0abbec_data:
		.ascii  "\x00"

_0abbed_data:
		.fill   0x4

_0abbf1_data:
		.ascii  "\x00\x00"

_0abbf3_data:
		.ascii  "\x00"

_0abbf4_data:
		.ascii  "\x00"

_0abbf5_data:
		.ascii  "\x0c\xd0\x08"

_0abbf8_data:
		.fill   0x4
		.long   _0a4a6c_data
		.long   _0a4a71_data
		.long   _0a4a76_data
		.long   _0a4a7b_data
		.long   _0a4a7f_data
		.long   _0a4a84_data
		.long   _0a4a89_data
		.long   _0a4a8d_data
		.long   _0a4a93_data
		.long   _0a4a98_data
		.long   _0a4a9c_data
		.long   _0a4aa2_data
		.long   _0a4aa8_data
		.long   _0a4aae_data
		.long   _0a4ab3_data
		.long   _0a4ab9_data
		.long   _0a4abd_data
		.long   _0a4ac1_data
		.long   _0a4ac5_data
		.long   _0a4ac8_data
		.long   _0a4acb_data
		.long   _0a4ace_data
		.long   _0a4ad2_data

_0abc58_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f\x00\x00"

_0abc64_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xff\x3f"

_0abc6e_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f"

_0abc78_data:
		.ascii  "\x00"

_0abc79_data:
		.fill   0x4
		.ascii  "\x09\x01\x01\x0b\x06\x04\x05\x05"
		.ascii  "\x05\x02\x03\xff\xff\x07\x08\x06"
		.ascii  "\x08\x01\xff"

_0abc90_data:
		.fill   0x4

_0abc94_data:
		.ascii  "\x14\x00\x00\x00"

_0abc98_data:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x02"
		.fill   0x3f

_0abce8_data:
		.long   _0abc98_data
		.ascii  "\x0f\x00\x00\x00"

_0abcf0_data:
		.long   _0a4ad8_data
		.long   _0a4ae0_data
		.long   _0a4afa_data
		.long   _0a4b10_data
		.long   _0a4b22_data
		.long   _0a4b32_data
		.long   _0a4b44_data
		.long   _0a4b56_data
		.long   _0a4b62_data
		.long   _0a4b74_data
		.long   _0a4b85_data
		.long   _0a4b99_data
		.long   _0a4bad_data
		.long   _0a4bc5_data
		.long   _0a4bd8_data
		.long   _0a4be9_data

_0abd30_data:
		.ascii  "\x00\x00"

_0abd32_data:
		.string "Stack Overflow!\r\n"

_0abd44_data:
		.fill   0x4

_0abd48_data:
		.fill   0x14

_0abd5c_data:
		.fill   0x14

_0abd70_data:
		.fill   0x4

_0abd74_data:
		.fill   0x1a

_0abd8e_data:
		.fill   0x4

_0abd92_data:
		.fill   0x1a

_0abdac_data:
		.fill   0x14

_0abdc0_data:
		.fill   0x14

_0abdd4_data:
		.fill   0x4

_0abdd8_data:
		.fill   0x1a

_0abdf2_data:
		.fill   0x4

_0abdf6_data:
		.fill   0x1a

_0abe10_data:
		.fill   0x14

_0abe24_data:
		.fill   0x14

_0abe38_data:
		.fill   0x14

_0abe4c_data:
		.fill   0x14

_0abe60_data:
		.fill   0x14

_0abe74_data:
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xe8\x03\x00\x00"

_0abe88_data:
		.fill   0x14

_0abe9c_data:
		.fill   0x4

_0abea0_data:
		.fill   0x1a

_0abeba_data:
		.fill   0x14

_0abece_data:
		.fill   0x14

_0abee2_data:
		.fill   0x14

_0abef6_data:
		.fill   0x4

_0abefa_data:
		.fill   0x1a

_0abf14_data:
		.fill   0x4

_0abf18_data:
		.fill   0x3bc

_0ac2d4_data:
		.fill   0x4

_0ac2d8_data:
		.fill   0x1e

_0ac2f6_data:
		.fill   0x18

_0ac30e_data:
		.fill   0x24

_0ac332_data:
		.fill   0x19

_0ac34b_data:
		.fill   0x2b

_0ac376_data:
		.fill   0x220

_0ac596_data:
		.ascii  "\x01\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x07\x00\x00\x00"
		.ascii  "\xc2\x00\x00\x00\xc6\x00\x00\x00"
		.ascii  "\xca\x00\x00\x00\xce\x00\x00\x00"

_0ac5b6_data:
		.fill   0x5

_0ac5bb_data:
		.fill   0x4

_0ac5bf_data:
		.fill   0x4

_0ac5c3_data:
		.fill   0x4

_0ac5c7_data:
		.fill   0x4

_0ac5cb_data:
		.fill   0x4

_0ac5cf_data:
		.fill   0x4

_0ac5d3_data:
		.fill   0x4

_0ac5d7_data:
		.fill   0x4

_0ac5db_data:
		.fill   0x4

_0ac5df_data:
		.fill   0x4

_0ac5e3_data:
		.fill   0x4

_0ac5e7_data:
		.fill   0x4

_0ac5eb_data:
		.fill   0x4

_0ac5ef_data:
		.fill   0x4

_0ac5f3_data:
		.fill   0x4

_0ac5f7_data:
		.fill   0x4

_0ac5fb_data:
		.fill   0x4

_0ac5ff_data:
		.fill   0x13c

_0ac73b_data:
		.ascii  "\xff\xff\xff\xff"

_0ac73f_data:
		.fill   0x4

_0ac743_data:
		.fill   0x56

_0ac799_data:
		.fill   0x4

_0ac79d_data:
		.ascii  "\x00\x00"

_0ac79f_data:
		.fill   0x3c

_0ac7db_data:
		.fill   0x4

_0ac7df_data:
		.fill   0x3c

_0ac81b_data:
		.fill   0x4

_0ac81f_data:
		.ascii  "\x00\x00"

_0ac821_data:
		.fill   0x3e

_0ac85f_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"

_0ac86f_data:
		.ascii  "\x00"

_0ac870_data:
		.fill   0xff

_0ac96f_data:
		.fill   0xff

_0aca6e_data:
		.fill   0x4

_0aca72_data:
		.fill   0x20

_0aca92_data:
		.fill   0x8

_0aca9a_data:
		.fill   0x4

_0aca9e_data:
		.fill   0x24

_0acac2_data:
		.fill   0x4

_0acac6_data:
		.fill   0x5

_0acacb_data:
		.ascii  "\x00\x00\x00"

_0acace_data:
		.fill   0x4

_0acad2_data:
		.fill   0x4

_0acad6_data:
		.ascii  "\x00\x00"

_0acad8_data:
		.fill   0x4

_0acadc_data:
		.ascii  "\x00\x00"

_0acade_data:
		.fill   0x4

_0acae2_data:
		.fill   0x4

_0acae6_data:
		.fill   0x4

_0acaea_data:
		.fill   0x4

_0acaee_data:
		.fill   0x4

_0acaf2_data:
		.fill   0x4

_0acaf6_data:
		.ascii  "\x00\x00"

_0acaf8_data:
		.fill   0x3c

_0acb34_data:
		.ascii  "\x00"

_0acb35_data:
		.fill   0x2f

_0acb64_data:
		.long   _0a4c18_data
		.long   _0a4c3e_data
		.long   _0a4c5d_data
		.long   _0a4c77_data
		.long   _0a4c9f_data
		.long   _0a4cb1_data
		.long   _0a4ccb_data
		.long   _0a4cdd_data
		.long   _0a4cee_data
		.long   _0a4d17_data
		.long   _0a4d44_data
		.long   _0a4d53_data
		.long   _0a4d68_data
		.long   _0a4d80_data
		.long   _0a4d94_data
		.long   _0a4da6_data
		.long   _0a4dc1_data
		.long   _0a4dd0_data
		.long   _0a4dde_data
		.long   _0a4dec_data

_0acbb4_data:
		.fill   0x14

_0acbc8_data:
		.fill   0x4

_0acbcc_data:
		.fill   0xc

_0acbd8_data:
		.fill   0x4

_0acbdc_data:
		.fill   0x4

_0acbe0_data:
		.fill   0x4

_0acbe4_data:
		.fill   0x4

_0acbe8_data:
		.fill   0x4

_0acbec_data:
		.fill   0x4

_0acbf0_data:
		.fill   0xc

_0acbfc_data:
		.fill   0x20

_0acc1c_data:
		.fill   0xc

_0acc28_data:
		.fill   0x24

_0acc4c_data:
		.fill   0x4

_0acc50_data:
		.fill   0x5

_0acc55_data:
		.ascii  "\x00\x00\x00"

_0acc58_data:
		.fill   0x4

_0acc5c_data:
		.fill   0x4

_0acc60_data:
		.fill   0x4

_0acc64_data:
		.fill   0x4

_0acc68_data:
		.fill   0x8

_0acc70_data:
		.fill   0x4

_0acc74_data:
		.fill   0x4

_0acc78_data:
		.ascii  "\x00\x00"

_0acc7a_data:
		.long   _0adc8a_data

_0acc7e_data:
		.fill   0x4

_0acc82_data:
		.fill   0x4

_0acc86_data:
		.fill   0x1004

_0adc8a_data:
		.fill   0x4

_0adc8e_data:
		.fill   0x4

_0adc92_data:
		.ascii  "\x00\x00"

_0adc94_data:
		.fill   0x4

_0adc98_data:
		.fill   0x4

_0adc9c_data:
		.fill   0x4

_0adca0_data:
		.fill   0x4

_0adca4_data:
		.fill   0x50

_0adcf4_data:
		.fill   0x4

_0adcf8_data:
		.fill   0x4

_0adcfc_data:
		.fill   0x4

_0add00_data:
		.fill   0x4

_0add04_data:
		.fill   0x3c

_0add40_data:
		.fill   0x50

_0add90_data:
		.fill   0x4

_0add94_data:
		.fill   0x4

_0add98_data:
		.fill   0x4

_0add9c_data:
		.fill   0x4

_0adda0_data:
		.fill   0x4

_0adda4_data:
		.long   _09075a_func

_0adda8_data:
		.long   _09075a_func

_0addac_data:
		.long   _0924b2_func

_0addb0_data:
		.fill   0x4

_0addb4_data:
		.fill   0x4

_0addb8_data:
		.fill   0x8
		.ascii  "\x02\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03"
		.fill   0x13

_0adddc_data:
		.fill   0x4

_0adde0_data:
		.fill   0x4

_0adde4_data:
		.ascii  "\x01\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x13

_0ade00_data:
		.ascii  "\x50\x46\x00\x00"

_0ade04_data:
		.ascii  "\x10\x0e\x00\x00"

_0ade08_data:
		.ascii  "\x01\x00\x00\x00"

_0ade0c_data:
		.ascii  "\x45\x53\x54"
		.fill   0x1c

_0ade2b_data:
		.ascii  "\x45\x44\x54"
		.fill   0x1c
		.long   _0ade0c_data

_0ade4e_data:
		.long   _0ade2b_data

_0ade52_data:
		.ascii  "\x01"
		.fill   0x5

_0ade58_data:
		.ascii  "\x01\x00\x00\x00"

_0ade5c_data:
		.ascii  "\x10\x00\x00\x00"

_0ade60_data:
		.long   _091932_jump

_0ade64_data:
		.long   _091932_jump

_0ade68_data:
		.ascii  "\x7f\x12\x00\x00"

_0ade6c_data:
		.fill   0x4

_0ade70_data:
		.ascii  "\x00\x00"

_0ade72_data:
		.fill   0x4

_0ade76_data:
		.ascii  "\x00\x00"

_0ade78_data:
		.fill   0x4

_0ade7c_data:
		.ascii  "\x00\x00"

_0ade7e_data:
		.fill   0x4

_0ade82_data:
		.ascii  "\x00\x00"

_0ade84_data:
		.fill   0x4

_0ade88_data:
		.ascii  "\x11\x00\x00\x00"

_0ade8c_data:
		.fill   0x4

_0ade90_data:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"

_0ade98_data:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x01\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00"

_0adec4_data:
		.long   _092e06_func

_0adec8_data:
		.ascii  "\x00\x20"
		.long   _08d00d_func
		.ascii  "\x00\x20"
		.long   _08d028_func
		.ascii  "\x00\x20"
		.long   _08e5e3_func
		.ascii  "\x00\x20"
		.long   _08ffb7_func
		.ascii  "\x00\x02"
		.long   _0907b0_func
		.ascii  "\x00\x20"
		.long   _0909c4_func
		.ascii  "\x00\x20"
		.long   _08e588_func
		.ascii  "\x00\x03"
		.long   _090bd5_func
		.ascii  "\x00\x20"
		.long   _0924fc_func

_0adefe_data:
		.ascii  "\x00\x20"
		.long   _090a3b_func

_0adf04_data:
		.ascii  "\x00\x01\x00\x00\x04\x00\x00\x07"
		.ascii  "\x00\x00\x0a\x00\x00\x0d\x00\x00"

_0adf14_data:
		.ascii  "\x00\x00\x70\x3f"

_0adf18_data:
		.ascii  "\x00\x00\x88\x3f"

_0adf1c_data:
		.ascii  "\x00\x00\x00\x5f"

_0adf20_data:
		.long   _08dd89_func
		.long   _08dd8f_func
		.long   _08dd94_jump
		.long   _08dd9a_func
		.long   _08dd9f_jump
		.long   _08dda5_func
		.long   _08ddab_func
		.long   _08ddb1_func
		.long   _08ddb7_func
		.long   _08ddd3_func
		.long   _08ddd8_jump
		.long   _08ddee_func
		.long   _08ddf3_jump
		.long   _08de0f_func
		.long   _08de1f_func
		.long   _08de33_func
		.long   _08de43_func
		.long   _08de63_func
		.long   _08de68_jump
		.long   _08de82_func
		.long   _08de87_jump
		.long   _08dea7_func
		.long   _08debb_func
		.long   _08ded3_func
		.long   _08dee7_func
		.long   _08df07_func
		.long   _08df0c_jump
		.long   _08df26_func
		.long   _08df2b_jump
		.long   _08df4b_func
		.long   _08df5f_func
		.long   _08df77_func
		.long   _08df8b_func
		.long   _08dfab_func
		.long   _08dfb0_jump
		.long   _08dfca_func
		.long   _08dfcf_jump
		.long   _08dfef_func
		.long   _08e003_func
		.long   _08e01b_func
		.long   _08e02f_func
		.long   _08e04f_func
		.long   _08e054_jump
		.long   _08e06e_func
		.long   _08e073_jump
		.long   _08e093_func
		.long   _08e0a7_func
		.long   _08e0bf_func
		.long   _08e0d3_func
		.long   _08e0f3_func
		.long   _08e0f8_jump
		.long   _08e112_func
		.long   _08e117_jump
		.long   _08e137_func
		.long   _08e14b_func
		.long   _08e163_func
		.long   _08e177_func
		.long   _08e197_func
		.long   _08e19c_jump
		.long   _08e1b6_func
		.long   _08e1bb_jump
		.long   _08e1db_func
		.long   _08e1ef_func
		.long   _08e207_func

_0ae020_data:
		.ascii  "\x00\x01\x00\x00\x04\x00\x00\x07"
		.ascii  "\x00\x00\x0a\x00\x00\x0d\x00\x00"

_0ae030_data:
		.ascii  "\x00\x00\x70\x3f"

_0ae034_data:
		.ascii  "\x00\x00\x00\x5f"

_0ae038_data:
		.fill   0x6
		.ascii  "\xf0\x3f"
		.fill   0x6
		.ascii  "\xf0\xbf"

_0ae048_data:
		.long   _092d60_func
		.long   _092d6b_func
		.long   _092d78_func
		.long   _092d8b_func
		.long   _092da0_func
		.long   _092db3_func
		.long   _092dc8_func
		.long   _092ddb_func

_0ae068_data:
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\x00\x40"

_0ae072_data:
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xff\x3f"

_0ae07c_data:
		.ascii  "\x00\x00\x80\x41"

_0ae080_data:
		.ascii  "\x00\x00\x80\x3d"

_0ae084_data:
		.ascii  "\xa8\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
		.ascii  "\xfd\xbf"

_0ae08e_data:
		.ascii  "\x6e\x2d\xcc\xcc\xcc\xcc\xcc\xcc"
		.ascii  "\xfc\x3f"

_0ae098_data:
		.ascii  "\x92\x48\xf9\x41\x92\x24\x49\x92"
		.ascii  "\xfc\xbf"

_0ae0a2_data:
		.ascii  "\x92\xc5\xec\xcd\x97\x38\x8e\xe3"
		.ascii  "\xfb\x3f"

_0ae0ac_data:
		.ascii  "\xdd\x5d\x62\xc1\x7b\xc1\x2d\xba"
		.ascii  "\xfb\xbf"

_0ae0b6_data:
		.ascii  "\x54\x48\x8e\xc7\xc7\x77\x80\x9c"
		.ascii  "\xfb\x3f"

_0ae0c0_data:
		.fill   0x10
		.ascii  "\x37\x4e\xef\x67\xb9\xdd\xaa\xff"
		.ascii  "\xfa\x3f"
		.fill   0x6
		.ascii   "3n{a"
		.ascii  "\xd5\xd4\xad\xfe\xfb\x3f"
		.fill   0x6
		.ascii  "\x35\x11\xd8\x72\x5e\xda\xcb\xbd"
		.ascii  "\xfc\x3f"
		.fill   0x6
		.ascii  "\x15\xeb\x06\x64\xc9\xaf\xdb\xfa"
		.ascii  "\xfc\x3f"
		.fill   0x6
		.ascii   "j^^?"
		.ascii  "\xb8\xb9\x13\x9b\xfd\x3f"
		.fill   0x6
		.ascii  "\x74\x84\xf7\x26\x0f\xca\xb0\xb7"
		.ascii  "\xfd\x3f"
		.fill   0x6
		.ascii  "\xb6\xe5\x1f\x61\x1e\x76\x27\xd3"
		.ascii  "\xfd\x3f"
		.fill   0x6
		.ascii  "\x45\x7b\xda"
		.ascii   "\r+8c"
		.ascii  "\xed\xfd\x3f"
		.fill   0x6
		.ascii  "\x2a\x7e\x86\xd9\xa6\xf4\x2b\x83"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x9b\x9f\xf5\xf7\x5e\x5d\x00\x8f"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x20\xda\xbd\x71\xe6\x80\x2f\x9a"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x24\x09\xf7\x34\x19\x7d\xbc\xa4"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x80\xc0\xd8\xb4\x38\x4c\xac\xae"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x74\x9e\x31\xc2\x2b\x3e\x05\xb8"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x41\x66\x52\xac\xb8\x85\xce\xc0"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f"
		.fill   0x6

_0ae1d0_data:
		.fill   0x10

_0ae1e0_data:
		.fill   0x4

_0ae1e4_data:
		.fill   0x4

_0ae1e8_data:
		.fill   0x4

_0ae1ec_data:
		.fill   0x4

_0ae1f0_data:
		.fill   0x30

_0ae220_data:
		.ascii  "\x00"

_0ae221_data:
		.ascii  "\x00\x00\x00"

_0ae224_data:
		.fill   0x10

_0ae234_data:
		.ascii  "\x00\x00"

_0ae236_data:
		.ascii  "\x00\x00"

_0ae238_data:
		.ascii  "\x00"

_0ae239_data:
		.ascii  "\x00"

_0ae23a_data:
		.fill   0x41e

_0ae658_data:
		.ascii  "\x00"

_0ae659_data:
		.ascii  "\x00"

_0ae65a_data:
		.ascii  "\x00"

_0ae65b_data:
		.ascii  "\x00"

_0ae65c_data:
		.ascii  "\x00\x00"

_0ae65e_data:
		.ascii  "\x00\x00"

_0ae660_data:
		.ascii  "\x00\x00"

_0ae662_data:
		.fill   0xa

_0ae66c_data:
		.ascii  "\x00"

_0ae66d_data:
		.ascii  "\x00"

_0ae66e_data:
		.ascii  "\x00\x00"

_0ae670_data:
		.ascii  "\x00\x00"

_0ae672_data:
		.ascii  "\x00\x00"

_0ae674_data:
		.fill   0x4

_0ae678_data:
		.fill   0x4

_0ae67c_data:
		.fill   0x4

_0ae680_data:
		.fill   0x4

_0ae684_data:
		.fill   0x4

_0ae688_data:
		.fill   0x4

_0ae68c_data:
		.fill   0x4c

_0ae6d8_data:
		.fill   0x4

_0ae6dc_data:
		.fill   0x8

_0ae6e4_data:
		.fill   0x14

_0ae6f8_data:
		.fill   0xc8

_0ae7c0_data:
		.fill   0x78

_0ae838_data:
		.fill   0xc8

_0ae900_data:
		.fill   0x78

_0ae978_data:
		.fill   0x78

_0ae9f0_data:
		.fill   0xc8

_0aeab8_data:
		.fill   0x78

_0aeb30_data:
		.fill   0xc8

_0aebf8_data:
		.fill   0x100

_0aecf8_data:
		.fill   0x100

_0aedf8_data:
		.fill   0x100

_0aeef8_data:
		.fill   0x100

_0aeff8_data:
		.fill   0x8

_0af000_data:
		.fill   0x8

_0af008_data:
		.fill   0x20

_0af028_data:
		.fill   0x4

_0af02c_data:
		.fill   0x4

_0af030_data:
		.fill   0x4

_0af034_data:
		.fill   0x4

_0af038_data:
		.ascii  "\x00\x00"

_0af03a_data:
		.ascii  "\x00\x00"

_0af03c_data:
		.ascii  "\x00\x00"

_0af03e_data:
		.ascii  "\x00\x00"

_0af040_data:
		.ascii  "\x00\x00"

_0af042_data:
		.ascii  "\x00\x00"

_0af044_data:
		.ascii  "\x00\x00"

_0af046_data:
		.ascii  "\x00\x00"

_0af048_data:
		.fill   0x1800

_0b0848_data:
		.fill   0x2fc

_0b0b44_data:
		.fill   0x4

_0b0b48_data:
		.fill   0x12bc

_0b1e04_data:
		.fill   0x4

_0b1e08_data:
		.fill   0x1180

_0b2f88_data:
		.fill   0x60

_0b2fe8_data:
		.fill   0xe0

_0b30c8_data:
		.fill   0x300

_0b33c8_data:
		.fill   0x20

_0b33e8_data:
		.fill   0x20

_0b3408_data:
		.fill   0x20

_0b3428_data:
		.fill   0x300

_0b3728_data:
		.fill   0x5ff

_0b3d27_data:
		.ascii  "\x00"

_0b3d28_data:
		.ascii  "\x00"

_0b3d29_data:
		.fill   0x2ff

_0b4028_data:
		.ascii  "\x00"

_0b4029_data:
		.ascii  "\x00"

_0b402a_data:
		.fill   0x2fb

_0b4325_data:
		.ascii  "\x00"

_0b4326_data:
		.ascii  "\x00"

_0b4327_data:
		.ascii  "\x00"

_0b4328_data:
		.ascii  "\x00"

_0b4329_data:
		.ascii  "\x00"

_0b432a_data:
		.fill   0x2fe

_0b4628_data:
		.fill   0x700

_0b4d28_data:
		.fill   0x80

_0b4da8_data:
		.fill   0x680

_0b5428_data:
		.fill   0x4

_0b542c_data:
		.fill   0x4

_0b5430_data:
		.fill   0x160

_0b5590_data:
		.ascii  "\x00\x00"

_0b5592_data:
		.ascii  "\x00\x00"

_0b5594_data:
		.ascii  "\x00\x00"

_0b5596_data:
		.fill   0x202

_0b5798_data:
		.fill   0x88

_0b5820_data:
		.fill   0x280

_0b5aa0_data:
		.fill   0x1250

_0b6cf0_data:
		.fill   0x10

_0b6d00_data:
		.fill   0x58

_0b6d58_data:
		.fill   0x68

_0b6dc0_data:
		.fill   0x4

_0b6dc4_data:
		.fill   0x4

_0b6dc8_data:
		.fill   0x4

_0b6dcc_data:
		.fill   0x30

_0b6dfc_data:
		.ascii  "\x00\x00"

_0b6dfe_data:
		.fill   0x6

_0b6e04_data:
		.fill   0xc

_0b6e10_data:
		.fill   0xe

_0b6e1e_data:
		.fill   0xe

_0b6e2c_data:
		.ascii  "\x00"

_0b6e2d_data:
		.fill   0x17

_0b6e44_data:
		.fill   0x4

_0b6e48_data:
		.fill   0x4

_0b6e4c_data:
		.fill   0x4

_0b6e50_data:
		.fill   0x4

_0b6e54_data:
		.fill   0x2a

_0b6e7e_data:
		.ascii  "\x00\x00"

_0b6e80_data:
		.fill   0xc

_0b6e8c_data:
		.fill   0x28

_0b6eb4_data:
		.ascii  "\x00"

_0b6eb5_data:
		.fill   0x16

_0b6ecb_data:
		.ascii  "\x00"

_0b6ecc_data:
		.ascii  "\x00"

_0b6ecd_data:
		.fill   0x1102

_0b7fcf_data:
		.ascii  "\x00"

_0b7fd0_data:
		.fill   0x18

_0b7fe8_data:
		.fill   0xd0

_0b80b8_data:
		.ascii  "\x00\x00"

_0b80ba_data:
		.ascii  "\x00\x00"

_0b80bc_data:
		.ascii  "\x00"

_0b80bd_data:
		.ascii  "\x00"

_0b80be_data:
		.ascii  "\x00\x00"

_0b80c0_data:
		.fill   0xd0

_0b8190_data:
		.ascii  "\x00\x00"

_0b8192_data:
		.ascii  "\x00\x00"

_0b8194_data:
		.ascii  "\x00"

_0b8195_data:
		.ascii  "\x00"

_0b8196_data:
		.ascii  "\x00\x00"

_0b8198_data:
		.fill   0xc8

_0b8260_data:
		.fill   0x6

_0b8266_data:
		.ascii  "\x00\x00"

_0b8268_data:
		.ascii  "\x00\x00"

_0b826a_data:
		.ascii  "\x00\x00"

_0b826c_data:
		.ascii  "\x00"

_0b826d_data:
		.ascii  "\x00"

_0b826e_data:
		.ascii  "\x00"

_0b826f_data:
		.ascii  "\x00"

_0b8270_data:
		.fill   0xce

_0b833e_data:
		.ascii  "\x00\x00"

_0b8340_data:
		.ascii  "\x00\x00"

_0b8342_data:
		.ascii  "\x00\x00"

_0b8344_data:
		.fill   0xd4

_0b8418_data:
		.ascii  "\x00\x00"

_0b841a_data:
		.fill   0xd6

_0b84f0_data:
		.ascii  "\x00\x00"

_0b84f2_data:
		.fill   0xd6

_0b85c8_data:
		.ascii  "\x00\x00"

_0b85ca_data:
		.fill   0xd6

_0b86a0_data:
		.ascii  "\x00\x00"

_0b86a2_data:
		.fill   0xd6

_0b8778_data:
		.ascii  "\x00\x00"

_0b877a_data:
		.fill   0xd6

_0b8850_data:
		.ascii  "\x00\x00"

_0b8852_data:
		.fill   0xd6

_0b8928_data:
		.ascii  "\x00\x00"

_0b892a_data:
		.fill   0x6

_0b8930_data:
		.fill   0xd0

_0b8a00_data:
		.ascii  "\x00\x00"

_0b8a02_data:
		.ascii  "\x00\x00"

_0b8a04_data:
		.ascii  "\x00"

_0b8a05_data:
		.ascii  "\x00"

_0b8a06_data:
		.ascii  "\x00"

_0b8a07_data:
		.ascii  "\x00"

_0b8a08_data:
		.fill   0xc8

_0b8ad0_data:
		.ascii  "\x00\x00"

_0b8ad2_data:
		.ascii  "\x00\x00"

_0b8ad4_data:
		.ascii  "\x00\x00"

_0b8ad6_data:
		.ascii  "\x00\x00"

_0b8ad8_data:
		.ascii  "\x00\x00"

_0b8ada_data:
		.ascii  "\x00\x00"

_0b8adc_data:
		.ascii  "\x00"

_0b8add_data:
		.ascii  "\x00"

_0b8ade_data:
		.ascii  "\x00"

_0b8adf_data:
		.ascii  "\x00"

_0b8ae0_data:
		.fill   0xca

_0b8baa_data:
		.fill   0x6

_0b8bb0_data:
		.ascii  "\x00\x00"

_0b8bb2_data:
		.ascii  "\x00\x00\x00"

_0b8bb5_data:
		.ascii  "\x00"

_0b8bb6_data:
		.ascii  "\x00\x00"

_0b8bb8_data:
		.fill   0xc8

_0b8c80_data:
		.ascii  "\x00\x00"

_0b8c82_data:
		.ascii  "\x00\x00"

_0b8c84_data:
		.ascii  "\x00\x00"

_0b8c86_data:
		.ascii  "\x00\x00"

_0b8c88_data:
		.ascii  "\x00\x00"

_0b8c8a_data:
		.ascii  "\x00\x00"

_0b8c8c_data:
		.ascii  "\x00"

_0b8c8d_data:
		.ascii  "\x00"

_0b8c8e_data:
		.ascii  "\x00"

_0b8c8f_data:
		.ascii  "\x00"

_0b8c90_data:
		.fill   0xca

_0b8d5a_data:
		.fill   0x6

_0b8d60_data:
		.ascii  "\x00\x00"

_0b8d62_data:
		.ascii  "\x00\x00\x00"

_0b8d65_data:
		.ascii  "\x00"

_0b8d66_data:
		.fill   0x50e

_0b9274_data:
		.fill   0x4

_0b9278_data:
		.fill   0x80

_0b92f8_data:
		.fill   0x4

_0b92fc_data:
		.fill   0x4

_0b9300_data:
		.fill   0x4

_0b9304_data:
		.fill   0x18

_0b931c_data:
		.fill   0x4

_0b9320_data:
		.fill   0x4

_0b9324_data:
		.fill   0x8

_0b932c_data:
		.ascii  "\x00\x00"

_0b932e_data:
		.ascii  "\x00\x00"

_0b9330_data:
		.fill   0x4

_0b9334_data:
		.ascii  "\x00\x00"

_0b9336_data:
		.ascii  "\x00\x00"

_0b9338_data:
		.ascii  "\x00\x00"

_0b933a_data:
		.ascii  "\x00\x00"

_0b933c_data:
		.fill   0x4

_0b9340_data:
		.ascii  "\x00\x00"

_0b9342_data:
		.fill   0x4

_0b9346_data:
		.ascii  "\x00\x00"

_0b9348_data:
		.ascii  "\x00\x00"

_0b934a_data:
		.ascii  "\x00\x00"

_0b934c_data:
		.fill   0x6

_0b9352_data:
		.ascii  "\x00\x00"

_0b9354_data:
		.ascii  "\x00\x00"

_0b9356_data:
		.fill   0x6

_0b935c_data:
		.ascii  "\x00"

_0b935d_data:
		.ascii  "\x00"

_0b935e_data:
		.ascii  "\x00"

_0b935f_data:
		.ascii  "\x00"

_0b9360_data:
		.ascii  "\x00"

_0b9361_data:
		.ascii  "\x00"

_0b9362_data:
		.ascii  "\x00\x00"

_0b9364_data:
		.ascii  "\x00"

_0b9365_data:
		.ascii  "\x00"

_0b9366_data:
		.ascii  "\x00"

_0b9367_data:
		.ascii  "\x00"

_0b9368_data:
		.ascii  "\x00"

_0b9369_data:
		.ascii  "\x00\x00\x00"

_0b936c_data:
		.ascii  "\x00"

_0b936d_data:
		.ascii  "\x00"

_0b936e_data:
		.ascii  "\x00\x00"

_0b9370_data:
		.ascii  "\x00\x00"

_0b9372_data:
		.ascii  "\x00"

_0b9373_data:
		.ascii  "\x00\x00"

_0b9375_data:
		.fill   0x4

_0b9379_data:
		.ascii  "\x00\x00"

_0b937b_data:
		.ascii  "\x00\x00"

_0b937d_data:
		.ascii  "\x00\x00\x00"

_0b9380_data:
		.fill   0x88

_0b9408_data:
		.ascii  "\x00\x00"

_0b940a_data:
		.ascii  "\x00\x00"

_0b940c_data:
		.fill   0x4

_0b9410_data:
		.ascii  "\x00\x00"

_0b9412_data:
		.ascii  "\x00\x00"

_0b9414_data:
		.fill   0x4

_0b9418_data:
		.ascii  "\x00\x00"

_0b941a_data:
		.ascii  "\x00\x00"

_0b941c_data:
		.fill   0x4

_0b9420_data:
		.fill   0xc

_0b942c_data:
		.fill   0x28

_0b9454_data:
		.ascii  "\x00\x00"

_0b9456_data:
		.ascii  "\x00\x00"

_0b9458_data:
		.fill   0x8

_0b9460_data:
		.fill   0x2c

_0b948c_data:
		.ascii  "\x00"

_0b948d_data:
		.ascii  "\x00\x00"

_0b948f_data:
		.ascii  "\x00"

_0b9490_data:
		.ascii  "\x00"

_0b9491_data:
		.ascii  "\x00\x00\x00"

_0b9494_data:
		.fill   0xf

_0b94a3_data:
		.ascii  "\x00\x00"

_0b94a5_data:
		.ascii  "\x00\x00\x00"

_0b94a8_data:
		.fill   0x8

_0b94b0_data:
		.fill   0x3c

_0b94ec_data:
		.fill   0x44

_0b9530_data:
		.fill   0x28

_0b9558_data:
		.fill   0x4

_0b955c_data:
		.fill   0x5c

_0b95b8_data:
		.fill   0x4

_0b95bc_data:
		.fill   0x4

_0b95c0_data:
		.fill   0x20

_0b95e0_data:
		.fill   0x4

_0b95e4_data:
		.fill   0xa

_0b95ee_data:
		.ascii  "\x00\x00"

_0b95f0_data:
		.fill   0x8

_0b95f8_data:
		.ascii  "\x00\x00"

_0b95fa_data:
		.fill   0x8

_0b9602_data:
		.fill   0x6

_0b9608_data:
		.ascii  "\x00\x00"

_0b960a_data:
		.fill   0xa

_0b9614_data:
		.fill   0x10

_0b9624_data:
		.ascii  "\x00"

_0b9625_data:
		.ascii  "\x00"

_0b9626_data:
		.ascii  "\x00"

_0b9627_data:
		.ascii  "\x00"

_0b9628_data:
		.ascii  "\x00"

_0b9629_data:
		.fill   0x7

_0b9630_data:
		.ascii  "\x00\x00"

_0b9632_data:
		.ascii  "\x00"

_0b9633_data:
		.ascii  "\x00\x00"

_0b9635_data:
		.fill   0x4

_0b9639_data:
		.ascii  "\x00\x00"

_0b963b_data:
		.ascii  "\x00\x00"

_0b963d_data:
		.ascii  "\x00\x00\x00"

_0b9640_data:
		.fill   0x8

_0b9648_data:
		.fill   0x3c

_0b9684_data:
		.fill   0x36

_0b96ba_data:
		.ascii  "\x00"

_0b96bb_data:
		.ascii  "\x00\x00"

_0b96bd_data:
		.fill   0xb

_0b96c8_data:
		.fill   0x4650

_0bdd18_data:
		.fill   0x578

_0be290_data:
		.fill   0x708

_0be998_data:
		.fill   0x578

_0bef10_data:
		.fill   0x40

_0bef50_data:
		.fill   0xf0

_0bf040_data:
		.fill   0xf0

_0bf130_data:
		.fill   0x190

_0bf2c0_data:
		.fill   0x4

_0bf2c4_data:
		.fill   0x4

_0bf2c8_data:
		.fill   0x4

_0bf2cc_data:
		.ascii  "\x00"

_0bf2cd_data:
		.ascii  "\x00"

_0bf2ce_data:
		.ascii  "\x00"

_0bf2cf_data:
		.fill   0x21

_0bf2f0_data:
		.fill   0x4

_0bf2f4_data:
		.fill   0x4

_0bf2f8_data:
		.fill   0x4

_0bf2fc_data:
		.ascii  "\x00"

_0bf2fd_data:
		.ascii  "\x00"

_0bf2fe_data:
		.ascii  "\x00\x00"

_0bf300_data:
		.fill   0x4

_0bf304_data:
		.fill   0x4

_0bf308_data:
		.fill   0x4

_0bf30c_data:
		.fill   0x4

_0bf310_data:
		.fill   0x4

_0bf314_data:
		.fill   0x4

_0bf318_data:
		.fill   0x4

_0bf31c_data:
		.fill   0x4

_0bf320_data:
		.fill   0x4

_0bf324_data:
		.fill   0x64

_0bf388_data:
		.ascii  "\x00\x00"

_0bf38a_data:
		.ascii  "\x00"

_0bf38b_data:
		.ascii  "\x00"

_0bf38c_data:
		.fill   0x9

_0bf395_data:
		.fill   0x9

_0bf39e_data:
		.ascii  "\x00"

_0bf39f_data:
		.fill   0x6

_0bf3a5_data:
		.ascii  "\x00"

_0bf3a6_data:
		.ascii  "\x00\x00"

_0bf3a8_data:
		.ascii  "\x00\x00"

_0bf3aa_data:
		.ascii  "\x00\x00"

_0bf3ac_data:
		.ascii  "\x00\x00"

_0bf3ae_data:
		.ascii  "\x00\x00"

_0bf3b0_data:
		.ascii  "\x00"

_0bf3b1_data:
		.ascii  "\x00"

_0bf3b2_data:
		.ascii  "\x00"

_0bf3b3_data:
		.ascii  "\x00"

_0bf3b4_data:
		.ascii  "\x00"

_0bf3b5_data:
		.ascii  "\x00"

_0bf3b6_data:
		.ascii  "\x00"

_0bf3b7_data:
		.ascii  "\x00"

_0bf3b8_data:
		.ascii  "\x00"

_0bf3b9_data:
		.ascii  "\x00"

_0bf3ba_data:
		.ascii  "\x00\x00"

_0bf3bc_data:
		.ascii  "\x00\x00"

_0bf3be_data:
		.fill   0x7

_0bf3c5_data:
		.ascii  "\x00\x00"

_0bf3c7_data:
		.ascii  "\x00"

_0bf3c8_data:
		.fill   0x3c

_0bf404_data:
		.fill   0x1f

_0bf423_data:
		.fill   0xee9

_0c030c_data:
		.ascii  "\x00\x00"

_0c030e_data:
		.ascii  "\x00\x00"

_0c0310_data:
		.ascii  "\x00\x00"

_0c0312_data:
		.ascii  "\x00\x00"

_0c0314_data:
		.fill   0x9

_0c031d_data:
		.fill   0xb37

_0c0e54_data:
		.fill   0x4

_0c0e58_data:
		.fill   0x4

_0c0e5c_data:
		.fill   0x4

_0c0e60_data:
		.fill   0x4

_0c0e64_data:
		.fill   0x4

_0c0e68_data:
		.fill   0x4

_0c0e6c_data:
		.fill   0x4

_0c0e70_data:
		.fill   0x4

_0c0e74_data:
		.fill   0x4

_0c0e78_data:
		.fill   0x4

_0c0e7c_data:
		.fill   0x4

_0c0e80_data:
		.fill   0x4

_0c0e84_data:
		.fill   0x4

_0c0e88_data:
		.fill   0x4

_0c0e8c_data:
		.fill   0x4

_0c0e90_data:
		.fill   0x4

_0c0e94_data:
		.fill   0x4

_0c0e98_data:
		.fill   0x4

_0c0e9c_data:
		.fill   0x4

_0c0ea0_data:
		.fill   0x4

_0c0ea4_data:
		.fill   0x4

_0c0ea8_data:
		.ascii  "\x00\x00"

_0c0eaa_data:
		.ascii  "\x00\x00"

_0c0eac_data:
		.ascii  "\x00\x00"

_0c0eae_data:
		.ascii  "\x00\x00"

_0c0eb0_data:
		.ascii  "\x00\x00"

_0c0eb2_data:
		.ascii  "\x00\x00"

_0c0eb4_data:
		.fill   0x4

_0c0eb8_data:
		.ascii  "\x00\x00"

_0c0eba_data:
		.ascii  "\x00\x00"

_0c0ebc_data:
		.fill   0x4

_0c0ec0_data:
		.fill   0x4

_0c0ec4_data:
		.fill   0x4

_0c0ec8_data:
		.fill   0x4

_0c0ecc_data:
		.fill   0x4

_0c0ed0_data:
		.fill   0x4

_0c0ed4_data:
		.fill   0x4

_0c0ed8_data:
		.fill   0x4

_0c0edc_data:
		.fill   0x4

_0c0ee0_data:
		.fill   0x4

_0c0ee4_data:
		.fill   0x4

_0c0ee8_data:
		.fill   0x4

_0c0eec_data:
		.fill   0x4

_0c0ef0_data:
		.fill   0x4

_0c0ef4_data:
		.fill   0x4

_0c0ef8_data:
		.fill   0x4

_0c0efc_data:
		.fill   0x8

_0c0f04_data:
		.fill   0x8

_0c0f0c_data:
		.fill   0x8

_0c0f14_data:
		.fill   0x4

_0c0f18_data:
		.fill   0x4

_0c0f1c_data:
		.fill   0x4

_0c0f20_data:
		.fill   0x4

_0c0f24_data:
		.fill   0x8

_0c0f2c_data:
		.fill   0x4

_0c0f30_data:
		.fill   0x4

_0c0f34_data:
		.fill   0x4

_0c0f38_data:
		.fill   0x4

_0c0f3c_data:
		.fill   0x4

_0c0f40_data:
		.fill   0x4

_0c0f44_data:
		.fill   0x4

_0c0f48_data:
		.fill   0x4

_0c0f4c_data:
		.fill   0x4

_0c0f50_data:
		.fill   0x4

_0c0f54_data:
		.fill   0x4

_0c0f58_data:
		.fill   0x4

_0c0f5c_data:
		.fill   0x4

_0c0f60_data:
		.ascii  "\x00\x00"

_0c0f62_data:
		.ascii  "\x00\x00"

_0c0f64_data:
		.ascii  "\x00\x00"

_0c0f66_data:
		.ascii  "\x00\x00"

_0c0f68_data:
		.ascii  "\x00\x00"

_0c0f6a_data:
		.ascii  "\x00\x00"

_0c0f6c_data:
		.ascii  "\x00\x00"

_0c0f6e_data:
		.ascii  "\x00\x00"

_0c0f70_data:
		.fill   0x8

_0c0f78_data:
		.fill   0x4

_0c0f7c_data:
		.fill   0x4

_0c0f80_data:
		.fill   0x4

_0c0f84_data:
		.fill   0x4

_0c0f88_data:
		.fill   0x4

_0c0f8c_data:
		.fill   0x4

_0c0f90_data:
		.fill   0x4

_0c0f94_data:
		.fill   0x4

_0c0f98_data:
		.fill   0x4

_0c0f9c_data:
		.fill   0x4

_0c0fa0_data:
		.fill   0x4

_0c0fa4_data:
		.fill   0x4

_0c0fa8_data:
		.fill   0x4

_0c0fac_data:
		.fill   0x4

_0c0fb0_data:
		.fill   0x4

_0c0fb4_data:
		.fill   0x4

_0c0fb8_data:
		.fill   0x4

_0c0fbc_data:
		.fill   0x4

_0c0fc0_data:
		.fill   0x4

_0c0fc4_data:
		.fill   0x4

_0c0fc8_data:
		.fill   0x4

_0c0fcc_data:
		.fill   0x4

_0c0fd0_data:
		.fill   0x4

_0c0fd4_data:
		.fill   0x4

_0c0fd8_data:
		.fill   0x4

_0c0fdc_data:
		.fill   0x4

_0c0fe0_data:
		.fill   0x4

_0c0fe4_data:
		.fill   0x4

_0c0fe8_data:
		.fill   0x4

_0c0fec_data:
		.fill   0x4

_0c0ff0_data:
		.fill   0x4

_0c0ff4_data:
		.fill   0x4

_0c0ff8_data:
		.fill   0x8

_0c1000_data:
		.fill   0x4

_0c1004_data:
		.fill   0xc

_0c1010_data:
		.fill   0x8

_0c1018_data:
		.fill   0x4

_0c101c_data:
		.fill   0x4

_0c1020_data:
		.fill   0x8

_0c1028_data:
		.fill   0x4

_0c102c_data:
		.fill   0x8

_0c1034_data:
		.fill   0x4

_0c1038_data:
		.fill   0x4

_0c103c_data:
		.fill   0x4

_0c1040_data:
		.fill   0x4

_0c1044_data:
		.fill   0x8

_0c104c_data:
		.fill   0x4

_0c1050_data:
		.fill   0x4

_0c1054_data:
		.fill   0xc

_0c1060_data:
		.fill   0x4

_0c1064_data:
		.fill   0x4

_0c1068_data:
		.fill   0xc

_0c1074_data:
		.fill   0x4

_0c1078_data:
		.fill   0x4

_0c107c_data:
		.fill   0x4

_0c1080_data:
		.fill   0x4

_0c1084_data:
		.fill   0x4

_0c1088_data:
		.fill   0x4

_0c108c_data:
		.fill   0x4

_0c1090_data:
		.fill   0x4

_0c1094_data:
		.ascii  "\x00\x00"

_0c1096_data:
		.ascii  "\x00\x00"

_0c1098_data:
		.ascii  "\x00\x00"

_0c109a_data:
		.fill   0x10

_0c10aa_data:
		.ascii  "\x00\x00"

_0c10ac_data:
		.fill   0x62

_0c110e_data:
		.ascii  "\x00\x00"

_0c1110_data:
		.fill   0x4

_0c1114_data:
		.fill   0x4

_0c1118_data:
		.fill   0x4

_0c111c_data:
		.fill   0x4

_0c1120_data:
		.fill   0x4

_0c1124_data:
		.ascii  "\x00\x00"

_0c1126_data:
		.ascii  "\x00\x00"

_0c1128_data:
		.fill   0x4

_0c112c_data:
		.fill   0x4

_0c1130_data:
		.fill   0x4

_0c1134_data:
		.fill   0x4

_0c1138_data:
		.fill   0x4

_0c113c_data:
		.fill   0x4

_0c1140_data:
		.fill   0x4

_0c1144_data:
		.fill   0x4

_0c1148_data:
		.fill   0x4

_0c114c_data:
		.ascii  "\x00\x00"

_0c114e_data:
		.ascii  "\x00\x00"

_0c1150_data:
		.ascii  "\x00\x00"

_0c1152_data:
		.ascii  "\x00\x00"

_0c1154_data:
		.ascii  "\x00"

_0c1155_data:
		.ascii  "\x00"

_0c1156_data:
		.ascii  "\x00"

_0c1157_data:
		.ascii  "\x00"

_0c1158_data:
		.ascii  "\x00"

_0c1159_data:
		.ascii  "\x00\x00\x00"

_0c115c_data:
		.fill   0x7c

_0c11d8_data:
		.fill   0x4

_0c11dc_data:
		.fill   0x583

_0c175f_data:
		.ascii  "\x00"

_0c1760_data:
		.fill   0x5

_0c1765_data:
		.ascii  "\x00\x00\x00"

_0c1768_data:
		.fill   0x60c

_0c1d74_data:
		.fill   0x4

_0c1d78_data:
		.fill   0x3c

_0c1db4_data:
		.fill   0x4

_0c1db8_data:
		.fill   0x4

_0c1dbc_data:
		.ascii  "\x00"

_0c1dbd_data:
		.ascii  "\x00"

_0c1dbe_data:
		.fill   0x50

_0c1e0e_data:
		.fill   0x140

_0c1f4e_data:
		.fill   0x4

_0c1f52_data:
		.fill   0x4

_0c1f56_data:
		.fill   0x4

_0c1f5a_data:
		.fill   0x4

_0c1f5e_data:
		.fill   0x4

_0c1f62_data:
		.fill   0x4

_0c1f66_data:
		.fill   0x4

_0c1f6a_data:
		.fill   0x1e4

_0c214e_data:
		.fill   0x5

_0c2153_data:
		.fill   0x5

_0c2158_data:
		.fill   0x4

_0c215c_data:
		.fill   0x9

_0c2165_data:
		.ascii  "\x00"

_0c2166_data:
		.fill   0x9

_0c216f_data:
		.fill   0x9

_0c2178_data:
		.fill   0x9

_0c2181_data:
		.fill   0x9

_0c218a_data:
		.fill   0x9

_0c2193_data:
		.fill   0x9

_0c219c_data:
		.fill   0x9

_0c21a5_data:
		.fill   0x9

_0c21ae_data:
		.fill   0x9

_0c21b7_data:
		.fill   0x9

_0c21c0_data:
		.fill   0x9

_0c21c9_data:
		.fill   0x9

_0c21d2_data:
		.fill   0x4

_0c21d6_data:
		.fill   0x48

_0c221e_data:
		.ascii  "\x00"

_0c221f_data:
		.fill   0x32

_0c2251_data:
		.ascii  "\x00\x00\x00"

_0c2254_data:
		.fill   0x4

_0c2258_data:
		.ascii  "\x00\x00"

_0c225a_data:
		.fill   0x54

_0c22ae_data:
		.fill   0x4

_0c22b2_data:
		.fill   0xae4

_0c2d96_data:
		.fill   0xd

_0c2da3_data:
		.fill   0x4

_0c2da7_data:
		.fill   0x9

_0c2db0_data:
		.fill   0x1e

_0c2dce_data:
		.fill   0x31

_0c2dff_data:
		.ascii  "\x00"

_0c2e00_data:
		.fill   0x5a

_0c2e5a_data:
		.fill   0x32

_0c2e8c_data:
		.fill   0x96

_0c2f22_data:
		.ascii  "\x00"

_0c2f23_data:
		.ascii  "\x00"

_0c2f24_data:
		.ascii  "\x00"

_0c2f25_data:
		.ascii  "\x00"

_0c2f26_data:
		.ascii  "\x00"

_0c2f27_data:
		.fill   0x17

_0c2f3e_data:
		.ascii  "\x00\x00"

_0c2f40_data:
		.ascii  "\x00\x00"

_0c2f42_data:
		.ascii  "\x00"

_0c2f43_data:
		.ascii  "\x00"

_0c2f44_data:
		.ascii  "\x00"

_0c2f45_data:
		.ascii  "\x00"

_0c2f46_data:
		.ascii  "\x00"

_0c2f47_data:
		.ascii  "\x00"

_0c2f48_data:
		.ascii  "\x00"

_0c2f49_data:
		.ascii  "\x00"

_0c2f4a_data:
		.fill   0xc6

_0c3010_data:
		.ascii  "\x00\x00"

_0c3012_data:
		.ascii  "\x00\x00"

_0c3014_data:
		.ascii  "\x00\x00"

_0c3016_data:
		.ascii  "\x00\x00"

_0c3018_data:
		.ascii  "\x00\x00"

_0c301a_data:
		.ascii  "\x00\x00"

_0c301c_data:
		.ascii  "\x00\x00"

_0c301e_data:
		.ascii  "\x00\x00"

_0c3020_data:
		.ascii  "\x00\x00"

_0c3022_data:
		.ascii  "\x00\x00"

_0c3024_data:
		.ascii  "\x00\x00"

_0c3026_data:
		.ascii  "\x00\x00"

_0c3028_data:
		.ascii  "\x00\x00"

_0c302a_data:
		.ascii  "\x00\x00"

_0c302c_data:
		.ascii  "\x00\x00"

_0c302e_data:
		.ascii  "\x00\x00"

_0c3030_data:
		.ascii  "\x00\x00"

_0c3032_data:
		.ascii  "\x00\x00"

_0c3034_data:
		.ascii  "\x00\x00"

_0c3036_data:
		.ascii  "\x00\x00"

_0c3038_data:
		.fill   0x4

_0c303c_data:
		.ascii  "\x00\x00"

_0c303e_data:
		.ascii  "\x00\x00"

_0c3040_data:
		.ascii  "\x00\x00"

_0c3042_data:
		.ascii  "\x00\x00"

_0c3044_data:
		.ascii  "\x00\x00"

_0c3046_data:
		.ascii  "\x00\x00"

_0c3048_data:
		.ascii  "\x00\x00"

_0c304a_data:
		.ascii  "\x00\x00"

_0c304c_data:
		.ascii  "\x00\x00"

_0c304e_data:
		.ascii  "\x00\x00"

_0c3050_data:
		.ascii  "\x00\x00"

_0c3052_data:
		.ascii  "\x00\x00"

_0c3054_data:
		.ascii  "\x00\x00"

_0c3056_data:
		.ascii  "\x00\x00"

_0c3058_data:
		.ascii  "\x00\x00"

_0c305a_data:
		.ascii  "\x00\x00"

_0c305c_data:
		.ascii  "\x00\x00"

_0c305e_data:
		.ascii  "\x00\x00"

_0c3060_data:
		.ascii  "\x00\x00"

_0c3062_data:
		.ascii  "\x00\x00"

_0c3064_data:
		.ascii  "\x00\x00"

_0c3066_data:
		.ascii  "\x00\x00"

_0c3068_data:
		.ascii  "\x00\x00"

_0c306a_data:
		.ascii  "\x00\x00"

_0c306c_data:
		.ascii  "\x00\x00"

_0c306e_data:
		.ascii  "\x00\x00"

_0c3070_data:
		.ascii  "\x00\x00"

_0c3072_data:
		.ascii  "\x00\x00"

_0c3074_data:
		.ascii  "\x00\x00"

_0c3076_data:
		.ascii  "\x00\x00"

_0c3078_data:
		.ascii  "\x00\x00"

_0c307a_data:
		.ascii  "\x00\x00"

_0c307c_data:
		.ascii  "\x00\x00"

_0c307e_data:
		.ascii  "\x00\x00"

_0c3080_data:
		.ascii  "\x00\x00"

_0c3082_data:
		.ascii  "\x00\x00"

_0c3084_data:
		.ascii  "\x00\x00"

_0c3086_data:
		.ascii  "\x00\x00"

_0c3088_data:
		.ascii  "\x00\x00"

_0c308a_data:
		.ascii  "\x00\x00"

_0c308c_data:
		.ascii  "\x00\x00"

_0c308e_data:
		.ascii  "\x00\x00"

_0c3090_data:
		.ascii  "\x00\x00"

_0c3092_data:
		.ascii  "\x00\x00"

_0c3094_data:
		.ascii  "\x00\x00"

_0c3096_data:
		.ascii  "\x00\x00"

_0c3098_data:
		.ascii  "\x00\x00"

_0c309a_data:
		.ascii  "\x00\x00"

_0c309c_data:
		.ascii  "\x00\x00"

_0c309e_data:
		.ascii  "\x00\x00"

_0c30a0_data:
		.ascii  "\x00\x00"

_0c30a2_data:
		.ascii  "\x00\x00"

_0c30a4_data:
		.ascii  "\x00\x00"

_0c30a6_data:
		.ascii  "\x00\x00"

_0c30a8_data:
		.ascii  "\x00\x00"

_0c30aa_data:
		.ascii  "\x00\x00"

_0c30ac_data:
		.ascii  "\x00\x00"

_0c30ae_data:
		.ascii  "\x00\x00"

_0c30b0_data:
		.ascii  "\x00\x00"

_0c30b2_data:
		.ascii  "\x00\x00"

_0c30b4_data:
		.ascii  "\x00\x00"

_0c30b6_data:
		.ascii  "\x00\x00"

_0c30b8_data:
		.ascii  "\x00\x00"

_0c30ba_data:
		.ascii  "\x00\x00"

_0c30bc_data:
		.ascii  "\x00\x00"

_0c30be_data:
		.ascii  "\x00\x00"

_0c30c0_data:
		.ascii  "\x00\x00"

_0c30c2_data:
		.ascii  "\x00\x00"

_0c30c4_data:
		.ascii  "\x00\x00"

_0c30c6_data:
		.ascii  "\x00\x00"

_0c30c8_data:
		.ascii  "\x00\x00"

_0c30ca_data:
		.fill   0x4

_0c30ce_data:
		.fill   0x4

_0c30d2_data:
		.ascii  "\x00\x00"

_0c30d4_data:
		.ascii  "\x00\x00"

_0c30d6_data:
		.ascii  "\x00\x00"

_0c30d8_data:
		.ascii  "\x00\x00"

_0c30da_data:
		.ascii  "\x00"

_0c30db_data:
		.ascii  "\x00"

_0c30dc_data:
		.ascii  "\x00\x00"

_0c30de_data:
		.ascii  "\x00\x00"

_0c30e0_data:
		.ascii  "\x00\x00"

_0c30e2_data:
		.ascii  "\x00\x00"

_0c30e4_data:
		.ascii  "\x00\x00"

_0c30e6_data:
		.ascii  "\x00\x00"

_0c30e8_data:
		.ascii  "\x00\x00"

_0c30ea_data:
		.ascii  "\x00\x00"

_0c30ec_data:
		.ascii  "\x00\x00"

_0c30ee_data:
		.ascii  "\x00\x00"

_0c30f0_data:
		.ascii  "\x00\x00"

_0c30f2_data:
		.ascii  "\x00\x00"

_0c30f4_data:
		.ascii  "\x00\x00"

_0c30f6_data:
		.ascii  "\x00\x00"

_0c30f8_data:
		.ascii  "\x00\x00"

_0c30fa_data:
		.ascii  "\x00\x00"

_0c30fc_data:
		.ascii  "\x00\x00"

_0c30fe_data:
		.ascii  "\x00\x00"

_0c3100_data:
		.ascii  "\x00\x00"

_0c3102_data:
		.ascii  "\x00\x00"

_0c3104_data:
		.ascii  "\x00\x00"

_0c3106_data:
		.ascii  "\x00\x00"

_0c3108_data:
		.ascii  "\x00\x00"

_0c310a_data:
		.ascii  "\x00\x00"

_0c310c_data:
		.ascii  "\x00\x00"

_0c310e_data:
		.ascii  "\x00\x00"

_0c3110_data:
		.ascii  "\x00\x00"

_0c3112_data:
		.ascii  "\x00\x00"

_0c3114_data:
		.ascii  "\x00\x00"

_0c3116_data:
		.ascii  "\x00\x00"

_0c3118_data:
		.ascii  "\x00\x00"

_0c311a_data:
		.ascii  "\x00\x00"

_0c311c_data:
		.ascii  "\x00\x00"

_0c311e_data:
		.ascii  "\x00\x00"

_0c3120_data:
		.ascii  "\x00\x00"

_0c3122_data:
		.ascii  "\x00\x00"

_0c3124_data:
		.ascii  "\x00\x00"

_0c3126_data:
		.ascii  "\x00\x00"

_0c3128_data:
		.ascii  "\x00\x00"

_0c312a_data:
		.ascii  "\x00\x00"

_0c312c_data:
		.ascii  "\x00\x00"

_0c312e_data:
		.ascii  "\x00\x00"

_0c3130_data:
		.ascii  "\x00\x00"

_0c3132_data:
		.ascii  "\x00\x00"

_0c3134_data:
		.ascii  "\x00\x00"

_0c3136_data:
		.ascii  "\x00\x00"

_0c3138_data:
		.ascii  "\x00\x00"

_0c313a_data:
		.ascii  "\x00\x00"

_0c313c_data:
		.ascii  "\x00\x00"

_0c313e_data:
		.ascii  "\x00\x00"

_0c3140_data:
		.ascii  "\x00\x00"

_0c3142_data:
		.ascii  "\x00\x00"

_0c3144_data:
		.ascii  "\x00\x00"

_0c3146_data:
		.ascii  "\x00\x00"

_0c3148_data:
		.ascii  "\x00\x00"

_0c314a_data:
		.ascii  "\x00\x00"

_0c314c_data:
		.ascii  "\x00\x00"

_0c314e_data:
		.ascii  "\x00\x00"

_0c3150_data:
		.ascii  "\x00\x00"

_0c3152_data:
		.ascii  "\x00\x00"

_0c3154_data:
		.ascii  "\x00\x00"

_0c3156_data:
		.ascii  "\x00\x00"

_0c3158_data:
		.ascii  "\x00\x00"

_0c315a_data:
		.ascii  "\x00\x00"

_0c315c_data:
		.ascii  "\x00\x00"

_0c315e_data:
		.ascii  "\x00\x00"

_0c3160_data:
		.ascii  "\x00\x00"

_0c3162_data:
		.ascii  "\x00\x00"

_0c3164_data:
		.ascii  "\x00\x00"

_0c3166_data:
		.ascii  "\x00\x00"

_0c3168_data:
		.ascii  "\x00\x00"

_0c316a_data:
		.ascii  "\x00\x00"

_0c316c_data:
		.ascii  "\x00\x00"

_0c316e_data:
		.ascii  "\x00\x00"

_0c3170_data:
		.ascii  "\x00\x00"

_0c3172_data:
		.ascii  "\x00\x00"

_0c3174_data:
		.ascii  "\x00\x00"

_0c3176_data:
		.ascii  "\x00\x00"

_0c3178_data:
		.ascii  "\x00\x00"

_0c317a_data:
		.ascii  "\x00\x00"

_0c317c_data:
		.ascii  "\x00\x00"

_0c317e_data:
		.ascii  "\x00\x00"

_0c3180_data:
		.ascii  "\x00\x00"

_0c3182_data:
		.fill   0x8

_0c318a_data:
		.fill   0x4

_0c318e_data:
		.ascii  "\x00\x00"

_0c3190_data:
		.ascii  "\x00\x00"

_0c3192_data:
		.ascii  "\x00\x00"

_0c3194_data:
		.ascii  "\x00\x00"

_0c3196_data:
		.ascii  "\x00\x00"

_0c3198_data:
		.fill   0x10

_0c31a8_data:
		.ascii  "\x00\x00"

_0c31aa_data:
		.ascii  "\x00\x00"

_0c31ac_data:
		.ascii  "\x00\x00"

_0c31ae_data:
		.ascii  "\x00"

_0c31af_data:
		.ascii  "\x00"

_0c31b0_data:
		.ascii  "\x00"

_0c31b1_data:
		.ascii  "\x00\x00"

_0c31b3_data:
		.ascii  "\x00"

_0c31b4_data:
		.ascii  "\x00"

_0c31b5_data:
		.ascii  "\x00"

_0c31b6_data:
		.ascii  "\x00"

_0c31b7_data:
		.ascii  "\x00"

_0c31b8_data:
		.ascii  "\x00"

_0c31b9_data:
		.ascii  "\x00\x00"

_0c31bb_data:
		.fill   0x15

_0c31d0_data:
		.fill   0x9

_0c31d9_data:
		.fill   0x9

_0c31e2_data:
		.fill   0x9

_0c31eb_data:
		.fill   0x9

_0c31f4_data:
		.fill   0x9

_0c31fd_data:
		.fill   0x9

_0c3206_data:
		.fill   0x9

_0c320f_data:
		.fill   0xff

_0c330e_data:
		.fill   0x8

_0c3316_data:
		.ascii  "\x00"

_0c3317_data:
		.fill   0x8

_0c331f_data:
		.fill   0x25

_0c3344_data:
		.ascii  "\x00\x00\x00"

_0c3347_data:
		.ascii  "\x00"

_0c3348_data:
		.ascii  "\x00"

_0c3349_data:
		.ascii  "\x00"

_0c334a_data:
		.ascii  "\x00"

_0c334b_data:
		.ascii  "\x00"

_0c334c_data:
		.ascii  "\x00"

_0c334d_data:
		.ascii  "\x00"

_0c334e_data:
		.ascii  "\x00"

_0c334f_data:
		.ascii  "\x00"

_0c3350_data:
		.ascii  "\x00\x00"

_0c3352_data:
		.ascii  "\x00\x00"

_0c3354_data:
		.fill   0xa

_0c335e_data:
		.fill   0x5

_0c3363_data:
		.ascii  "\x00"

_0c3364_data:
		.ascii  "\x00"

_0c3365_data:
		.ascii  "\x00"

_0c3366_data:
		.ascii  "\x00"

_0c3367_data:
		.ascii  "\x00"

_0c3368_data:
		.ascii  "\x00"

_0c3369_data:
		.ascii  "\x00"

_0c336a_data:
		.ascii  "\x00"

_0c336b_data:
		.ascii  "\x00"

_0c336c_data:
		.ascii  "\x00"

_0c336d_data:
		.ascii  "\x00"

_0c336e_data:
		.ascii  "\x00"

_0c336f_data:
		.ascii  "\x00"

_0c3370_data:
		.ascii  "\x00"

_0c3371_data:
		.ascii  "\x00"

_0c3372_data:
		.ascii  "\x00"

_0c3373_data:
		.ascii  "\x00"

_0c3374_data:
		.ascii  "\x00"

_0c3375_data:
		.ascii  "\x00"

_0c3376_data:
		.ascii  "\x00"

_0c3377_data:
		.ascii  "\x00"

_0c3378_data:
		.ascii  "\x00"

_0c3379_data:
		.ascii  "\x00"

_0c337a_data:
		.ascii  "\x00"

_0c337b_data:
		.ascii  "\x00"

_0c337c_data:
		.ascii  "\x00"

_0c337d_data:
		.ascii  "\x00"

_0c337e_data:
		.ascii  "\x00"

_0c337f_data:
		.ascii  "\x00"

_0c3380_data:
		.ascii  "\x00"

_0c3381_data:
		.ascii  "\x00"

_0c3382_data:
		.ascii  "\x00"

_0c3383_data:
		.ascii  "\x00"

_0c3384_data:
		.ascii  "\x00"

_0c3385_data:
		.ascii  "\x00"

_0c3386_data:
		.ascii  "\x00"

_0c3387_data:
		.ascii  "\x00"

_0c3388_data:
		.ascii  "\x00"

_0c3389_data:
		.ascii  "\x00"

_0c338a_data:
		.ascii  "\x00"

_0c338b_data:
		.ascii  "\x00"

_0c338c_data:
		.ascii  "\x00"

_0c338d_data:
		.ascii  "\x00"

_0c338e_data:
		.ascii  "\x00"

_0c338f_data:
		.ascii  "\x00"

_0c3390_data:
		.ascii  "\x00"

_0c3391_data:
		.ascii  "\x00"

_0c3392_data:
		.ascii  "\x00"

_0c3393_data:
		.ascii  "\x00"

_0c3394_data:
		.ascii  "\x00"

_0c3395_data:
		.ascii  "\x00"

_0c3396_data:
		.ascii  "\x00"

_0c3397_data:
		.ascii  "\x00"

_0c3398_data:
		.ascii  "\x00"

_0c3399_data:
		.ascii  "\x00"

_0c339a_data:
		.ascii  "\x00"

_0c339b_data:
		.ascii  "\x00"

_0c339c_data:
		.ascii  "\x00"

_0c339d_data:
		.ascii  "\x00"

_0c339e_data:
		.ascii  "\x00"

_0c339f_data:
		.ascii  "\x00"

_0c33a0_data:
		.ascii  "\x00"

_0c33a1_data:
		.ascii  "\x00"

_0c33a2_data:
		.ascii  "\x00"

_0c33a3_data:
		.ascii  "\x00"

_0c33a4_data:
		.ascii  "\x00"

_0c33a5_data:
		.ascii  "\x00"

_0c33a6_data:
		.ascii  "\x00"

_0c33a7_data:
		.ascii  "\x00"

_0c33a8_data:
		.ascii  "\x00"

_0c33a9_data:
		.ascii  "\x00"

_0c33aa_data:
		.ascii  "\x00"

_0c33ab_data:
		.ascii  "\x00"

_0c33ac_data:
		.ascii  "\x00"

_0c33ad_data:
		.ascii  "\x00"

_0c33ae_data:
		.ascii  "\x00"

_0c33af_data:
		.ascii  "\x00\x00\x00"

_0c33b2_data:
		.ascii  "\x00"

_0c33b3_data:
		.ascii  "\x00"

_0c33b4_data:
		.ascii  "\x00"

_0c33b5_data:
		.ascii  "\x00"

_0c33b6_data:
		.ascii  "\x00"

_0c33b7_data:
		.ascii  "\x00"

_0c33b8_data:
		.ascii  "\x00"

_0c33b9_data:
		.ascii  "\x00"

_0c33ba_data:
		.ascii  "\x00"

_0c33bb_data:
		.ascii  "\x00"

_0c33bc_data:
		.ascii  "\x00"

_0c33bd_data:
		.ascii  "\x00"

_0c33be_data:
		.ascii  "\x00\x00"

_0c33c0_data:
		.ascii  "\x00"

_0c33c1_data:
		.ascii  "\x00"

_0c33c2_data:
		.ascii  "\x00"

_0c33c3_data:
		.ascii  "\x00"

_0c33c4_data:
		.ascii  "\x00"

_0c33c5_data:
		.ascii  "\x00"

_0c33c6_data:
		.ascii  "\x00"

_0c33c7_data:
		.ascii  "\x00"

_0c33c8_data:
		.ascii  "\x00"

_0c33c9_data:
		.ascii  "\x00"

_0c33ca_data:
		.ascii  "\x00"

_0c33cb_data:
		.ascii  "\x00"

_0c33cc_data:
		.ascii  "\x00"

_0c33cd_data:
		.ascii  "\x00"

_0c33ce_data:
		.ascii  "\x00"

_0c33cf_data:
		.ascii  "\x00"

_0c33d0_data:
		.ascii  "\x00"

_0c33d1_data:
		.ascii  "\x00"

_0c33d2_data:
		.ascii  "\x00"

_0c33d3_data:
		.ascii  "\x00"

_0c33d4_data:
		.ascii  "\x00"

_0c33d5_data:
		.ascii  "\x00"

_0c33d6_data:
		.ascii  "\x00"

_0c33d7_data:
		.ascii  "\x00"

_0c33d8_data:
		.ascii  "\x00"

_0c33d9_data:
		.ascii  "\x00"

_0c33da_data:
		.ascii  "\x00"

_0c33db_data:
		.ascii  "\x00"

_0c33dc_data:
		.ascii  "\x00"

_0c33dd_data:
		.ascii  "\x00"

_0c33de_data:
		.ascii  "\x00"

_0c33df_data:
		.ascii  "\x00"

_0c33e0_data:
		.ascii  "\x00"

_0c33e1_data:
		.ascii  "\x00"

_0c33e2_data:
		.ascii  "\x00\x00"

_0c33e4_data:
		.ascii  "\x00"

_0c33e5_data:
		.ascii  "\x00"

_0c33e6_data:
		.ascii  "\x00\x00"

_0c33e8_data:
		.fill   0x4

_0c33ec_data:
		.fill   0x4

_0c33f0_data:
		.fill   0xa9c

_0c3e8c_data:
		.fill   0x4

_0c3e90_data:
		.fill   0x28

_0c3eb8_data:
		.fill   0x24

_0c3edc_data:
		.fill   0x4

_0c3ee0_data:
		.fill   0x4

_0c3ee4_data:
		.fill   0x4fc

_0c43e0_data:
		.ascii  "\x00"

_0c43e1_data:
		.fill   0x17

_0c43f8_data:
		.ascii  "\x00\x00"

_0c43fa_data:
		.ascii  "\x00\x00"

_0c43fc_data:
		.fill   0xbb80

_0cff7c_data:
		.fill   0x4000

_0d3f7c_data:
		.ascii  "\x00"

_0d3f7d_data:
		.ascii  "\x00"

_0d3f7e_data:
		.fill   0x5e

_0d3fdc_data:
		.ascii  "\x00"

_0d3fdd_data:
		.ascii  "\x00"

_0d3fde_data:
		.fill   0x10

_0d3fee_data:
		.ascii  "\x00"

_0d3fef_data:
		.ascii  "\x00"

_0d3ff0_data:
		.fill   0x28c

_0d427c_data:
		.ascii  "\x00\x00"

_0d427e_data:
		.ascii  "\x00\x00"

_0d4280_data:
		.ascii  "\x00\x00"

_0d4282_data:
		.ascii  "\x00\x00"

_0d4284_data:
		.ascii  "\x00\x00"

_0d4286_data:
		.ascii  "\x00\x00"

_0d4288_data:
		.ascii  "\x00\x00"

_0d428a_data:
		.ascii  "\x00\x00"

_0d428c_data:
		.fill   0x4

_0d4290_data:
		.ascii  "\x00\x00"

_0d4292_data:
		.ascii  "\x00\x00"

_0d4294_data:
		.ascii  "\x00\x00"

_0d4296_data:
		.ascii  "\x00\x00"

_0d4298_data:
		.ascii  "\x00\x00"

_0d429a_data:
		.fill   0x6

_0d42a0_data:
		.fill   0x4

_0d42a4_data:
		.fill   0x4

_0d42a8_data:
		.fill   0x4

_0d42ac_data:
		.fill   0x4

_0d42b0_data:
		.fill   0x4

_0d42b4_data:
		.fill   0x4

_0d42b8_data:
		.fill   0x4

_0d42bc_data:
		.fill   0x4

_0d42c0_data:
		.fill   0x4

_0d42c4_data:
		.fill   0x4

_0d42c8_data:
		.fill   0x4

_0d42cc_data:
		.fill   0x4

_0d42d0_data:
		.fill   0x4

_0d42d4_data:
		.ascii  "\x00\x00"

_0d42d6_data:
		.fill   0x4

_0d42da_data:
		.ascii  "\x00\x00"

_0d42dc_data:
		.fill   0x4

_0d42e0_data:
		.ascii  "\x00\x00"

_0d42e2_data:
		.fill   0x4

_0d42e6_data:
		.ascii  "\x00\x00"

_0d42e8_data:
		.fill   0x4

_0d42ec_data:
		.ascii  "\x00\x00"

_0d42ee_data:
		.fill   0x4

_0d42f2_data:
		.ascii  "\x00\x00"

_0d42f4_data:
		.fill   0x4

_0d42f8_data:
		.ascii  "\x00\x00"

_0d42fa_data:
		.fill   0x4

_0d42fe_data:
		.ascii  "\x00\x00"

_0d4300_data:
		.fill   0x4

_0d4304_data:
		.ascii  "\x00\x00"

_0d4306_data:
		.fill   0x4

_0d430a_data:
		.ascii  "\x00\x00"

_0d430c_data:
		.fill   0x4

_0d4310_data:
		.ascii  "\x00\x00"

_0d4312_data:
		.fill   0x4

_0d4316_data:
		.ascii  "\x00\x00"

_0d4318_data:
		.ascii  "\x00\x00"

_0d431a_data:
		.ascii  "\x00\x00"

_0d431c_data:
		.ascii  "\x00\x00"

_0d431e_data:
		.fill   0x6

_0d4324_data:
		.fill   0x6

_0d432a_data:
		.fill   0x4

_0d432e_data:
		.ascii  "\x00\x00"

_0d4330_data:
		.ascii  "\x00\x00"

_0d4332_data:
		.ascii  "\x00\x00"

_0d4334_data:
		.ascii  "\x00"

_0d4335_data:
		.ascii  "\x00"

_0d4336_data:
		.ascii  "\x00"

_0d4337_data:
		.fill   0x4

_0d433b_data:
		.fill   0x4

_0d433f_data:
		.fill   0x18c

_0d44cb_data:
		.fill   0x4

_0d44cf_data:
		.fill   0x190

_0d465f_data:
		.fill   0x190

_0d47ef_data:
		.fill   0x163

_0d4952_data:
		.ascii  "\x00"

_0d4953_data:
		.fill   0x1a

_0d496d_data:
		.ascii  "\x00"

_0d496e_data:
		.ascii  "\x00"

_0d496f_data:
		.ascii  "\x00"

_0d4970_data:
		.ascii  "\x00"

_0d4971_data:
		.ascii  "\x00"

_0d4972_data:
		.ascii  "\x00"

_0d4973_data:
		.ascii  "\x00"

_0d4974_data:
		.fill   0x4

_0d4978_data:
		.fill   0x4

_0d497c_data:
		.fill   0x4

_0d4980_data:
		.fill   0x4

_0d4984_data:
		.fill   0x4

_0d4988_data:
		.fill   0x4

_0d498c_data:
		.fill   0x4

_0d4990_data:
		.fill   0x4

_0d4994_data:
		.fill   0x4

_0d4998_data:
		.fill   0x4

_0d499c_data:
		.fill   0x4

_0d49a0_data:
		.fill   0x4

_0d49a4_data:
		.fill   0x4

_0d49a8_data:
		.ascii  "\x00\x00\x00"

_0d49ab_data:
		.ascii  "\x00"

_0d49ac_data:
		.fill   0x7ff

_0d51ab_data:
		.ascii  "\x00"

_0d51ac_data:
		.fill   0x8

_0d51b4_data:
		.ascii  "\x00\x00"

_0d51b6_data:
		.ascii  "\x00\x00"

_0d51b8_data:
		.ascii  "\x00\x00"

_0d51ba_data:
		.ascii  "\x00\x00"

_0d51bc_data:
		.fill   0xa

_0d51c6_data:
		.ascii  "\x00"

_0d51c7_data:
		.fill   0x7

_0d51ce_data:
		.ascii  "\x00\x00"

_0d51d0_data:
		.ascii  "\x00\x00"

_0d51d2_data:
		.ascii  "\x00\x00"

_0d51d4_data:
		.fill   0x4

_0d51d8_data:
		.ascii  "\x00"

_0d51d9_data:
		.ascii  "\x00"

_0d51da_data:
		.fill   0x2fe

_0d54d8_data:
		.fill   0x4

_0d54dc_data:
		.fill   0x4

_0d54e0_data:
		.ascii  "\x00\x00"

_0d54e2_data:
		.fill   0x4

_0d54e6_data:
		.ascii  "\x00\x00"

_0d54e8_data:
		.fill   0x4

_0d54ec_data:
		.fill   0x4

_0d54f0_data:
		.ascii  "\x00\x00"

_0d54f2_data:
		.ascii  "\x00\x00"

_0d54f4_data:
		.ascii  "\x00\x00"

_0d54f6_data:
		.ascii  "\x00\x00"

_0d54f8_data:
		.ascii  "\x00"

_0d54f9_data:
		.ascii  "\x00"

_0d54fa_data:
		.ascii  "\x00"

_0d54fb_data:
		.ascii  "\x00"

_0d54fc_data:
		.ascii  "\x00\x00"

_0d54fe_data:
		.ascii  "\x00\x00"

_0d5500_data:
		.ascii  "\x00\x00"

_0d5502_data:
		.ascii  "\x00\x00"

_0d5504_data:
		.fill   0x4

_0d5508_data:
		.fill   0xa

_0d5512_data:
		.fill   0xa

_0d551c_data:
		.ascii  "\x00\x00"

_0d551e_data:
		.ascii  "\x00\x00"

_0d5520_data:
		.ascii  "\x00\x00"

_0d5522_data:
		.ascii  "\x00\x00"

_0d5524_data:
		.ascii  "\x00\x00"

_0d5526_data:
		.ascii  "\x00\x00"

_0d5528_data:
		.ascii  "\x00\x00"

_0d552a_data:
		.ascii  "\x00\x00"

_0d552c_data:
		.ascii  "\x00\x00"

_0d552e_data:
		.ascii  "\x00\x00"

_0d5530_data:
		.ascii  "\x00\x00"

_0d5532_data:
		.ascii  "\x00\x00"

_0d5534_data:
		.ascii  "\x00\x00"

_0d5536_data:
		.ascii  "\x00\x00"

_0d5538_data:
		.ascii  "\x00\x00"

_0d553a_data:
		.ascii  "\x00\x00"

_0d553c_data:
		.ascii  "\x00\x00"

_0d553e_data:
		.ascii  "\x00\x00"

_0d5540_data:
		.ascii  "\x00\x00"

_0d5542_data:
		.ascii  "\x00\x00"

_0d5544_data:
		.ascii  "\x00\x00"

_0d5546_data:
		.ascii  "\x00"

_0d5547_data:
		.ascii  "\x00"

_0d5548_data:
		.ascii  "\x00"

_0d5549_data:
		.ascii  "\x00"

_0d554a_data:
		.ascii  "\x00"

_0d554b_data:
		.ascii  "\x00"

_0d554c_data:
		.ascii  "\x00"

_0d554d_data:
		.ascii  "\x00"

_0d554e_data:
		.ascii  "\x00"

_0d554f_data:
		.ascii  "\x00"

_0d5550_data:
		.ascii  "\x00"

_0d5551_data:
		.ascii  "\x00"

_0d5552_data:
		.ascii  "\x00"

_0d5553_data:
		.ascii  "\x00"

_0d5554_data:
		.ascii  "\x00"

_0d5555_data:
		.ascii  "\x00"

_0d5556_data:
		.ascii  "\x00"

_0d5557_data:
		.fill   0x29

_0d5580_data:
		.fill   0x4

_0d5584_data:
		.fill   0x4

_0d5588_data:
		.fill   0x4bc

_0d5a44_data:
		.fill   0x18

_0d5a5c_data:
		.fill   0x4

_0d5a60_data:
		.fill   0x4

_0d5a64_data:
		.ascii  "\x00\x00"

_0d5a66_data:
		.ascii  "\x00\x00"

_0d5a68_data:
		.ascii  "\x00\x00"

_0d5a6a_data:
		.ascii  "\x00\x00"

_0d5a6c_data:
		.ascii  "\x00\x00"

_0d5a6e_data:
		.ascii  "\x00\x00"

_0d5a70_data:
		.fill   0xf

_0d5a7f_data:
		.ascii  "\x00"

_0d5a80_data:
		.ascii  "\x00"

_0d5a81_data:
		.ascii  "\x00"

_0d5a82_data:
		.fill   0x2fe

_0d5d80_data:
		.fill   0x4

_0d5d84_data:
		.fill   0x4

_0d5d88_data:
		.ascii  "\x00"

_0d5d89_data:
		.ascii  "\x00"

_0d5d8a_data:
		.ascii  "\x00"

_0d5d8b_data:
		.ascii  "\x00"

_0d5d8c_data:
		.ascii  "\x00"

_0d5d8d_data:
		.ascii  "\x00\x00\x00"

_0d5d90_data:
		.fill   0x4

_0d5d94_data:
		.fill   0x4

_0d5d98_data:
		.fill   0x4

_0d5d9c_data:
		.fill   0x7f4

_0d6590_data:
		.fill   0x4

_0d6594_data:
		.fill   0x4

_0d6598_data:
		.fill   0x4

_0d659c_data:
		.fill   0x7f4

_0d6d90_data:
		.fill   0x4

_0d6d94_data:
		.fill   0x4

_0d6d98_data:
		.fill   0x4

_0d6d9c_data:
		.fill   0x8

_0d6da4_data:
		.fill   0x24

_0d6dc8_data:
		.fill   0x40

_0d6e08_data:
		.fill   0x8

_0d6e10_data:
		.fill   0x4

_0d6e14_data:
		.ascii  "\x00\x00"

_0d6e16_data:
		.ascii  "\x00\x00"

_0d6e18_data:
		.fill   0x4

_0d6e1c_data:
		.fill   0x1f4

_0d7010_data:
		.fill   0x64

_0d7074_data:
		.fill   0x1e

_0d7092_data:
		.fill   0x8ce

_0d7960_data:
		.fill   0x80

_0d79e0_data:
		.fill   0x4

_0d79e4_data:
		.fill   0x4

_0d79e8_data:
		.ascii  "\x00\x00"

_0d79ea_data:
		.fill   0x4

_0d79ee_data:
		.ascii  "\x00\x00"

_0d79f0_data:
		.ascii  "\x00\x00"

_0d79f2_data:
		.ascii  "\x00\x00"

_0d79f4_data:
		.ascii  "\x00\x00"

_0d79f6_data:
		.ascii  "\x00\x00"

_0d79f8_data:
		.ascii  "\x00\x00"

_0d79fa_data:
		.ascii  "\x00\x00"

_0d79fc_data:
		.fill   0x4

_0d7a00_data:
		.ascii  "\x00\x00"

_0d7a02_data:
		.ascii  "\x00\x00"

_0d7a04_data:
		.fill   0x8

_0d7a0c_data:
		.fill   0x4

_0d7a10_data:
		.fill   0x4

_0d7a14_data:
		.fill   0x4

_0d7a18_data:
		.fill   0x4

_0d7a1c_data:
		.fill   0x4

_0d7a20_data:
		.fill   0x4

_0d7a24_data:
		.fill   0x4

_0d7a28_data:
		.fill   0x4

_0d7a2c_data:
		.fill   0x4

_0d7a30_data:
		.fill   0x4

_0d7a34_data:
		.fill   0x4

_0d7a38_data:
		.fill   0x4

_0d7a3c_data:
		.fill   0x4

_0d7a40_data:
		.fill   0x4

_0d7a44_data:
		.fill   0x4

_0d7a48_data:
		.fill   0x4

_0d7a4c_data:
		.fill   0x4

_0d7a50_data:
		.fill   0x4

_0d7a54_data:
		.fill   0x4

_0d7a58_data:
		.fill   0x1c

_0d7a74_data:
		.fill   0x1c

_0d7a90_data:
		.fill   0x40

_0d7ad0_data:
		.fill   0x1f58

_0d9a28_data:
		.fill   0x12c4

_0dacec_data:
		.fill   0x64

_0dad50_data:
		.fill   0x2070

_0dcdc0_data:
		.ascii  "\x00"

_0dcdc1_data:
		.ascii  "\x00"

_0dcdc2_data:
		.fill   0x2fe

_0dd0c0_data:
		.fill   0x300

_0dd3c0_data:
		.ascii  "\x00"

_0dd3c1_data:
		.ascii  "\x00"

_0dd3c2_data:
		.fill   0x2fe

_0dd6c0_data:
		.fill   0x300

_0dd9c0_data:
		.fill   0x4

_0dd9c4_data:
		.fill   0x4

_0dd9c8_data:
		.fill   0x4

_0dd9cc_data:
		.fill   0x4

_0dd9d0_data:
		.fill   0x4

_0dd9d4_data:
		.fill   0x4

_0dd9d8_data:
		.fill   0x4

_0dd9dc_data:
		.fill   0x4

_0dd9e0_data:
		.fill   0x4

_0dd9e4_data:
		.fill   0x4

_0dd9e8_data:
		.fill   0x4

_0dd9ec_data:
		.fill   0x4

_0dd9f0_data:
		.ascii  "\x00"

_0dd9f1_data:
		.fill   0x7

_0dd9f8_data:
		.ascii  "\x00\x00"

_0dd9fa_data:
		.ascii  "\x00\x00"

_0dd9fc_data:
		.ascii  "\x00\x00"

_0dd9fe_data:
		.ascii  "\x00\x00"

_0dda00_data:
		.ascii  "\x00\x00"

_0dda02_data:
		.ascii  "\x00\x00"

_0dda04_data:
		.ascii  "\x00\x00"

_0dda06_data:
		.ascii  "\x00\x00"

_0dda08_data:
		.ascii  "\x00\x00"

_0dda0a_data:
		.ascii  "\x00\x00"

_0dda0c_data:
		.ascii  "\x00\x00"

_0dda0e_data:
		.ascii  "\x00"

_0dda0f_data:
		.ascii  "\x00"

_0dda10_data:
		.ascii  "\x00"

_0dda11_data:
		.ascii  "\x00\x00"

_0dda13_data:
		.ascii  "\x00"

_0dda14_data:
		.ascii  "\x00"

_0dda15_data:
		.ascii  "\x00"

_0dda16_data:
		.ascii  "\x00"

_0dda17_data:
		.ascii  "\x00"

_0dda18_data:
		.ascii  "\x00"

_0dda19_data:
		.ascii  "\x00"

_0dda1a_data:
		.fill   0x6

_0dda20_data:
		.fill   0x4

_0dda24_data:
		.fill   0x4

_0dda28_data:
		.fill   0x4

_0dda2c_data:
		.fill   0x4

_0dda30_data:
		.ascii  "\x00\x00"

_0dda32_data:
		.ascii  "\x00\x00"

_0dda34_data:
		.fill   0x292

_0ddcc6_data:
		.ascii  "\x00\x00"

_0ddcc8_data:
		.fill   0xc

_0ddcd4_data:
		.fill   0x6

_0ddcda_data:
		.fill   0x6

_0ddce0_data:
		.fill   0x4

_0ddce4_data:
		.fill   0x80

_0ddd64_data:
		.fill   0x4c

_0dddb0_data:
		.fill   0x4

_0dddb4_data:
		.ascii  "\x00"

_0dddb5_data:
		.ascii  "\x00\x00\x00"

_0dddb8_data:
		.fill   0x4

_0dddbc_data:
		.fill   0x8

_0dddc4_data:
		.fill   0x4

_0dddc8_data:
		.fill   0x4

_0dddcc_data:
		.fill   0x4

_0dddd0_data:
		.fill   0xc

_0ddddc_data:
		.fill   0x4

_0ddde0_data:
		.fill   0x4

_0ddde4_data:
		.fill   0x4

_0ddde8_data:
		.fill   0x4

_0dddec_data:
		.ascii  "\x00\x00"

_0dddee_data:
		.ascii  "\x00\x00"

_0dddf0_data:
		.fill   0x8

_0dddf8_data:
		.fill   0x4

_0dddfc_data:
		.fill   0x4

_0dde00_data:
		.fill   0xc

_0dde0c_data:
		.fill   0x4

_0dde10_data:
		.fill   0x40

_0dde50_data:
		.fill   0x3e

_0dde8e_data:
		.ascii  "\x00\x00"

_0dde90_data:
		.ascii  "\x00\x00"

_0dde92_data:
		.ascii  "\x00\x00"

_0dde94_data:
		.ascii  "\x00\x00"

_0dde96_data:
		.ascii  "\x00\x00"

_0dde98_data:
		.ascii  "\x00\x00"

_0dde9a_data:
		.ascii  "\x00\x00"

_0dde9c_data:
		.ascii  "\x00\x00"

_0dde9e_data:
		.ascii  "\x00\x00"

_0ddea0_data:
		.fill   0x4

_0ddea4_data:
		.fill   0xdc

_0ddf80_data:
		.ascii  "\x00\x00"

_0ddf82_data:
		.ascii  "\x00\x00"

_0ddf84_data:
		.ascii  "\x00\x00"

_0ddf86_data:
		.fill   0x17a

_0de100_data:
		.fill   0x20

_0de120_data:
		.fill   0x4

_0de124_data:
		.ascii  "\x00\x00"

_0de126_data:
		.fill   0x4

_0de12a_data:
		.fill   0x6

_0de130_data:
		.fill   0x4

_0de134_data:
		.fill   0x4

_0de138_data:
		.fill   0xc

_0de144_data:
		.fill   0x4

_0de148_data:
		.ascii  "\x00"

_0de149_data:
		.ascii  "\x00\x00\x00"

_0de14c_data:
		.fill   0x4

_0de150_data:
		.fill   0x4

_0de154_data:
		.fill   0x4

_0de158_data:
		.fill   0x4

_0de15c_data:
		.fill   0x4

_0de160_data:
		.ascii  "\x00"

_0de161_data:
		.ascii  "\x00\x00"

_0de163_data:
		.ascii  "\x00\x00"

_0de165_data:
		.ascii  "\x00\x00"

_0de167_data:
		.ascii  "\x00\x00"

_0de169_data:
		.ascii  "\x00\x00"

_0de16b_data:
		.ascii  "\x00\x00"

_0de16d_data:
		.ascii  "\x00\x00"

_0de16f_data:
		.ascii  "\x00\x00"

_0de171_data:
		.ascii  "\x00"

_0de172_data:
		.ascii  "\x00"

_0de173_data:
		.ascii  "\x00\x00"

_0de175_data:
		.ascii  "\x00\x00"

_0de177_data:
		.ascii  "\x00\x00"

_0de179_data:
		.ascii  "\x00\x00"

_0de17b_data:
		.ascii  "\x00\x00"

_0de17d_data:
		.ascii  "\x00\x00"

_0de17f_data:
		.fill   0x4

_0de183_data:
		.fill   0x7

_0de18a_data:
		.ascii  "\x00"

_0de18b_data:
		.ascii  "\x00"

_0de18c_data:
		.ascii  "\x00"

_0de18d_data:
		.ascii  "\x00"

_0de18e_data:
		.ascii  "\x00"

_0de18f_data:
		.ascii  "\x00"

_0de190_data:
		.ascii  "\x00"

_0de191_data:
		.fill   0x10

_0de1a1_data:
		.fill   0x10

_0de1b1_data:
		.fill   0x10

_0de1c1_data:
		.fill   0x4

_0de1c5_data:
		.fill   0x4

_0de1c9_data:
		.fill   0x4

_0de1cd_data:
		.fill   0x4

_0de1d1_data:
		.fill   0x9

_0de1da_data:
		.ascii  "\x00"

_0de1db_data:
		.ascii  "\x00"

_0de1dc_data:
		.fill   0x420

_0de5fc_data:
		.ascii  "\x00\x00\x00"

_0de5ff_data:
		.fill   0x14

_0de613_data:
		.fill   0xa

_0de61d_data:
		.ascii  "\x00"

_0de61e_data:
		.fill   0x58

_0de676_data:
		.fill   0x18

_0de68e_data:
		.ascii  "\x00\x00"

_0de690_data:
		.fill   0x4

_0de694_data:
		.fill   0x80

_0de714_data:
		.fill   0x7f

_0de793_data:
		.ascii  "\x00"

_0de794_data:
		.fill   0x3e8

_0deb7c_data:
		.fill   0x4

_0deb80_data:
		.fill   0x4

_0deb84_data:
		.fill   0x4

_0deb88_data:
		.fill   0x4

_0deb8c_data:
		.fill   0x4

_0deb90_data:
		.fill   0x4

_0deb94_data:
		.fill   0x4

_0deb98_data:
		.fill   0x4

_0deb9c_data:
		.fill   0x4

_0deba0_data:
		.fill   0x4

_0deba4_data:
		.ascii  "\x00\x00\x00"

_0deba7_data:
		.ascii  "\x00"

_0deba8_data:
		.fill   0x136

_0decde_data:
		.ascii  "\x00"

_0decdf_data:
		.fill   0x134

_0dee13_data:
		.ascii  "\x00"

_0dee14_data:
		.fill   0x124

_0def38_data:
		.fill   0xc

_0def44_data:
		.fill   0x6

_0def4a_data:
		.ascii  "\x00"

_0def4b_data:
		.fill   0x5

_0def50_data:
		.ascii  "\x00\x00"

_0def52_data:
		.ascii  "\x00\x00"

_0def54_data:
		.ascii  "\x00\x00"

_0def56_data:
		.ascii  "\x00\x00"

_0def58_data:
		.ascii  "\x00"

_0def59_data:
		.ascii  "\x00\x00\x00"

_0def5c_data:
		.fill   0x4

_0def60_data:
		.fill   0x4

_0def64_data:
		.fill   0x1c04

_0e0b68_data:
		.ascii  "\x00\x00"

_0e0b6a_data:
		.ascii  "\x00\x00"

_0e0b6c_data:
		.ascii  "\x00\x00"

_0e0b6e_data:
		.ascii  "\x00\x00"

_0e0b70_data:
		.ascii  "\x00\x00"

_0e0b72_data:
		.ascii  "\x00\x00"

_0e0b74_data:
		.fill   0x4

_0e0b78_data:
		.ascii  "\x00\x00"

_0e0b7a_data:
		.ascii  "\x00\x00"

_0e0b7c_data:
		.ascii  "\x00\x00"

_0e0b7e_data:
		.ascii  "\x00\x00"

_0e0b80_data:
		.fill   0x4

_0e0b84_data:
		.fill   0xc

_0e0b90_data:
		.fill   0x4

_0e0b94_data:
		.fill   0x4

_0e0b98_data:
		.fill   0xef

_0e0c87_data:
		.ascii  "\x00"

_0e0c88_data:
		.fill   0x10

_0e0c98_data:
		.fill   0x4

_0e0c9c_data:
		.fill   0x8

_0e0ca4_data:
		.fill   0x1c

_0e0cc0_data:
		.fill   0xe

_0e0cce_data:
		.ascii  "\x00\x00"

_0e0cd0_data:
		.fill   0x4

_0e0cd4_data:
		.ascii  "\x00\x00"

_0e0cd6_data:
		.fill   0x31

_0e0d07_data:
		.ascii  "\x00"

_0e0d08_data:
		.ascii  "\x00"

_0e0d09_data:
		.ascii  "\x00"

_0e0d0a_data:
		.ascii  "\x00"

_0e0d0b_data:
		.fill   0x15

_0e0d20_data:
		.fill   0x4

_0e0d24_data:
		.fill   0x8

_0e0d2c_data:
		.fill   0x1c

_0e0d48_data:
		.fill   0xe

_0e0d56_data:
		.ascii  "\x00\x00"

_0e0d58_data:
		.fill   0x4

_0e0d5c_data:
		.ascii  "\x00\x00"

_0e0d5e_data:
		.fill   0x31

_0e0d8f_data:
		.ascii  "\x00"

_0e0d90_data:
		.ascii  "\x00"

_0e0d91_data:
		.ascii  "\x00"

_0e0d92_data:
		.ascii  "\x00"

_0e0d93_data:
		.fill   0x15

_0e0da8_data:
		.fill   0x4

_0e0dac_data:
		.fill   0x8

_0e0db4_data:
		.fill   0x1c

_0e0dd0_data:
		.fill   0xe

_0e0dde_data:
		.ascii  "\x00\x00"

_0e0de0_data:
		.fill   0x4

_0e0de4_data:
		.ascii  "\x00\x00"

_0e0de6_data:
		.fill   0x31

_0e0e17_data:
		.ascii  "\x00"

_0e0e18_data:
		.ascii  "\x00"

_0e0e19_data:
		.ascii  "\x00"

_0e0e1a_data:
		.ascii  "\x00"

_0e0e1b_data:
		.fill   0x15

_0e0e30_data:
		.fill   0x4

_0e0e34_data:
		.fill   0x8

_0e0e3c_data:
		.fill   0x1c

_0e0e58_data:
		.fill   0xe

_0e0e66_data:
		.ascii  "\x00\x00"

_0e0e68_data:
		.fill   0x4

_0e0e6c_data:
		.ascii  "\x00\x00"

_0e0e6e_data:
		.fill   0x31

_0e0e9f_data:
		.ascii  "\x00"

_0e0ea0_data:
		.ascii  "\x00"

_0e0ea1_data:
		.ascii  "\x00"

_0e0ea2_data:
		.ascii  "\x00"

_0e0ea3_data:
		.fill   0x13

_0e0eb6_data:
		.ascii  "\x00\x00"

_0e0eb8_data:
		.ascii  "\x00\x00\x00"

_0e0ebb_data:
		.ascii  "\x00"

_0e0ebc_data:
		.fill   0x4

_0e0ec0_data:
		.ascii  "\x00\x00"

_0e0ec2_data:
		.ascii  "\x00\x00"

_0e0ec4_data:
		.ascii  "\x00\x00"

_0e0ec6_data:
		.ascii  "\x00\x00"

_0e0ec8_data:
		.fill   0x47

_0e0f0f_data:
		.fill   0x18

_0e0f27_data:
		.ascii  "\x00"

_0e0f28_data:
		.fill   0x18

_0e0f40_data:
		.ascii  "\x00"

_0e0f41_data:
		.ascii  "\x00"

_0e0f42_data:
		.ascii  "\x00"

_0e0f43_data:
		.ascii  "\x00"

_0e0f44_data:
		.ascii  "\x00"

_0e0f45_data:
		.ascii  "\x00"

_0e0f46_data:
		.ascii  "\x00"

_0e0f47_data:
		.ascii  "\x00"

_0e0f48_data:
		.ascii  "\x00"

_0e0f49_data:
		.ascii  "\x00"

_0e0f4a_data:
		.fill   0x6

_0e0f50_data:
		.fill   0x4

_0e0f54_data:
		.fill   0x4

_0e0f58_data:
		.fill   0x80

_0e0fd8_data:
		.ascii  "\x00\x00\x00"

_0e0fdb_data:
		.ascii  "\x00"

_0e0fdc_data:
		.fill   0x10

_0e0fec_data:
		.fill   0x4

_0e0ff0_data:
		.fill   0x4

_0e0ff4_data:
		.fill   0x4

_0e0ff8_data:
		.fill   0x4

_0e0ffc_data:
		.fill   0x4

_0e1000_data:
		.fill   0x4

_0e1004_data:
		.fill   0x4

_0e1008_data:
		.fill   0x4

_0e100c_data:
		.fill   0x4

_0e1010_data:
		.fill   0x4

_0e1014_data:
		.fill   0x4

_0e1018_data:
		.fill   0x24

_0e103c_data:
		.ascii  "\x00\x00"

_0e103e_data:
		.ascii  "\x00\x00"

_0e1040_data:
		.fill   0x400

_0e1440_data:
		.fill   0xbf0

_0e2030_data:
		.fill   0x1410
