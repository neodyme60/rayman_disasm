.code32
.text
.globl main
main:
		jmp	_0799ec_func

.data

_010003_data:
		.ascii  "\x90\x90\x90\x90\x90\x90\x90\x90"
		.ascii  "\x90\x90\x90\x90\x90"

.text



_010010_func:
		pusha  
		mov    $_0107bb_func,%edi
		add    $0x00005a,%edi
		mov    $0xfffffec0,%eax

	_01001e_jump:
		mov    %eax,(%edi)
		add    $0x000060,%edi
		add    $0x000004,%eax
		jne    _01001e_jump
		mov    $_090008_data,%edi
		mov    $0x0000c8,%cl

	_01002f_jump:
		movl   $0x00ffff,(%edi)
		movl   $0x000000,0x000004(%edi)
		add    $0x000020,%edi
		dec    %cl
		jne    _01002f_jump
		popa   
		ret    



_010045_func:
		pusha  
		mov    %eax,_091932_data
		mov    %esi,%eax
		add    $0x000004,%eax
		mov    %eax,_091908_data
		mov    (%esi),%eax
		mov    %eax,_091916_data
		xor    %eax,%eax
		mov    0x00002a(%esi),%al
		sub    0x000024(%esi),%al
		mov    %eax,_091922_data
		neg    %eax
		mov    %eax,_091926_data
		xor    %eax,%eax
		mov    0x000027(%esi),%al
		sub    0x000025(%esi),%al
		mov    %eax,_09192a_data
		neg    %eax
		mov    %eax,_09192e_data
		mov    %esi,%ebx
		mov    $0x000003,%cl
		add    $0x000004,%ebx
		add    $0x000010,%esi
		mov    0x000004(%ebx),%eax
		mov    %eax,%edx

	_010093_jump:
		mov    (%esi),%edi
		cmp    %eax,%edi
		jge    _01009b_jump
		mov    %edi,%eax

	_01009b_jump:
		cmp    %edx,%edi
		jle    _0100a1_jump
		mov    %edi,%edx

	_0100a1_jump:
		add    $0x000008,%esi
		dec    %cl
		jne    _010093_jump
		cmp    $0x0000c8,%eax
		jge    _01263e_jump
		or     %edx,%edx
		js     _01263e_jump
		or     %eax,%eax
		jns    _0100c1_jump
		xor    %eax,%eax

	_0100c1_jump:
		mov    %eax,_090004_data
		cmp    $0x0000c8,%edx
		jb     _0100d3_jump
		mov    $0x0000c7,%edx

	_0100d3_jump:
		sub    %eax,%edx
		inc    %edx
		mov    %edx,_09193e_data
		mov    (%ebx),%esi
		mov    0x000004(%ebx),%ecx
		mov    0x000018(%ebx),%ebp
		mov    0x00001c(%ebx),%edi
		or     %ecx,%ecx
		jns    _0100f3_jump
		or     %edi,%edi
		js     _01022e_jump

	_0100f3_jump:
		cmp    $0x0000c8,%ecx
		jl     _010107_jump
		cmp    $0x0000c8,%edi
		jge    _01022e_jump

	_010107_jump:
		mov    0x000026(%ebx),%ah
		sub    %ebp,%esi
		mov    0x000027(%ebx),%al
		mov    _091926_data,%edx
		sub    %edi,%ecx
		jns    _010129_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000020(%ebx),%ah
		neg    %esi
		mov    0x000021(%ebx),%al
		neg    %edx

	_010129_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0101f9_func
		mov    %al,_010216_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_010223_jump
		mov    %ax,_010198_data
		or     %edx,%edx
		jns    _010162_jump
		sub    $0x000002,%edx

	_010162_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_01021a_jump
		mov    %ax,_0101b0_func
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _0101c6_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
		data16 		.byte 0x0000b8

.data

_010198_data:
		.ascii  "\xff\xff\xf7\xe7\x66\x89\xc2\xc1"
		.ascii  "\xe2\x10\xc1\xe8\x10\x00\xc7\x52"
		.ascii  "\x66\x89\xf0\xc1\xe0\x10\x66\xb8"

_0101b0_data:
		.ascii  "\xff\xff\xf7\xe7\x5a\x66\x89\xc2"
		.ascii  "\xc1\xe8\x10\x66\x01\xc5\x29\xf9"
		.ascii  "\x58\xbf\xac\x26\x00\x00"

_0101c6_data:
		.ascii  "\x57\x01\xcf\x81\xff\x74\x27\x00"
		.ascii  "\x00\x72\x08\x81\xef\x74\x27\x00"
		.ascii  "\x00\x29\xf9\x5f\xc1\xe7\x05"

_0101dd_data:
		.ascii  "\x66\x39\xaf"
		.long   _042a88_unknown
		.ascii  "\x76\x14\x66\x89\xaf"
		.long   _042a88_unknown
		.ascii  "\x88\xbf"
		.long   _042a90_unknown
		.ascii  "\xc6\x87"
		.long   _042a98_unknown

.text



_0101f9_func:
		add    %ah,0x000039(%esi)
		scas   %es:(%edi),%eax
		mov    %gs,(%edx)
		add    $0x000000,%al
		jae    _010217_jump
		mov    %bp,0x042a8c(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		mov    %bh,0x042a94(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		movb   $0x000000,0x042a9c(%edi) /* Warning: address points to a valid object/reloc, but no label found */

	_010217_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _0101dd_jump

	_01022e_jump:
		mov    _091908_data,%ebx
		mov    0x000018(%ebx),%esi
		mov    0x00001c(%ebx),%ecx
		mov    0x000010(%ebx),%ebp
		mov    0x000014(%ebx),%edi
		or     %ecx,%ecx
		jns    _01024c_jump
		or     %edi,%edi
		js     _010387_jump

	_01024c_jump:
		cmp    $0x0000c8,%ecx
		jl     _010260_jump
		cmp    $0x0000c8,%edi
		jge    _010387_jump

	_010260_jump:
		mov    0x000024(%ebx),%al
		sub    %ebp,%esi
		mov    0x000025(%ebx),%ah
		mov    _09192e_data,%edx
		sub    %edi,%ecx
		jns    _010282_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000026(%ebx),%al
		neg    %esi
		mov    0x000027(%ebx),%ah
		neg    %edx

	_010282_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_01034c_jump
		mov    %al,_010369_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_01037c_jump
		mov    %ax,_0102f1_jump
		or     %edx,%edx
		jns    _0102bb_jump
		sub    $0x000002,%edx

	_0102bb_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_010373_jump
		mov    %ax,_010309_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _01031f_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0102f1_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_010309_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_01031f_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _010332_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_010332_jump:
		pop    %edi
		shl    $0x000005,%edi

	_010336_jump:
		cmp    %bp,_042a88_unknown(%edi)
		jbe    _010353_jump
		mov    %bp,_042a88_unknown(%edi)
		movb   $0x0000ff,_042a90_unknown(%edi)
		mov    %bh,_042a98_unknown(%edi)

	_010353_jump:
		cmp    %bp,0x042a8c(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		jae    _010370_jump
		mov    %bp,0x042a8c(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		movb   $0x0000ff,0x042a94(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		mov    %bh,0x042a9c(%edi) /* Warning: address points to a valid object/reloc, but no label found */

	_010370_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _010336_jump

	_010387_jump:
		mov    _091908_data,%ebx
		mov    0x000010(%ebx),%esi
		mov    0x000014(%ebx),%ecx
		mov    0x000008(%ebx),%ebp
		mov    0x00000c(%ebx),%edi
		or     %ecx,%ecx
		jns    _0103a5_jump
		or     %edi,%edi
		js     _0104e0_jump

	_0103a5_jump:
		cmp    $0x0000c8,%ecx
		jl     _0103b9_jump
		cmp    $0x0000c8,%edi
		jge    _0104e0_jump

	_0103b9_jump:
		mov    0x000023(%ebx),%al
		sub    %ebp,%esi
		mov    0x000022(%ebx),%ah
		mov    _091922_data,%edx
		sub    %edi,%ecx
		jns    _0103db_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000025(%ebx),%al
		neg    %esi
		mov    0x000024(%ebx),%ah
		neg    %edx

	_0103db_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0104ab_jump
		mov    %al,_0104c8_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_0104d5_jump
		mov    %ax,_01044a_jump
		or     %edx,%edx
		jns    _010414_jump
		sub    $0x000002,%edx

	_010414_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_0104cc_jump
		mov    %ax,_010462_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _010478_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_01044a_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_010462_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_010478_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _01048b_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_01048b_jump:
		pop    %edi
		shl    $0x000005,%edi

	_01048f_jump:
		cmp    %bp,_042a88_unknown(%edi)
		jbe    _0104ac_jump
		mov    %bp,_042a88_unknown(%edi)
		mov    %bh,_042a90_unknown(%edi)
		movb   $0x0000ff,_042a98_unknown(%edi)

	_0104ac_jump:
		cmp    %bp,0x042a8c(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		jae    _0104c9_jump
		mov    %bp,0x042a8c(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		mov    %bh,0x042a94(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		movb   $0x0000ff,0x042a9c(%edi) /* Warning: address points to a valid object/reloc, but no label found */

	_0104c9_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _01048f_jump

	_0104e0_jump:
		mov    _091908_data,%ebx
		mov    (%ebx),%ebp
		mov    0x000004(%ebx),%edi
		mov    0x000008(%ebx),%esi
		mov    0x00000c(%ebx),%ecx
		or     %ecx,%ecx
		jns    _0104fd_jump
		or     %edi,%edi
		js     _010638_jump

	_0104fd_jump:
		cmp    $0x0000c8,%ecx
		jl     _010511_jump
		cmp    $0x0000c8,%edi
		jge    _010638_jump

	_010511_jump:
		mov    0x000020(%ebx),%al
		sub    %ebp,%esi
		mov    0x000021(%ebx),%ah
		mov    _09192a_data,%edx
		sub    %edi,%ecx
		jns    _010533_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000022(%ebx),%al
		neg    %esi
		mov    0x000023(%ebx),%ah
		neg    %edx

	_010533_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0105fd_jump
		mov    %al,_01061a_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_01062d_jump
		mov    %ax,_0105a2_jump
		or     %edx,%edx
		jns    _01056c_jump
		sub    $0x000002,%edx

	_01056c_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_010624_jump
		mov    %ax,_0105ba_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _0105d0_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0105a2_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_0105ba_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_0105d0_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _0105e3_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_0105e3_jump:
		pop    %edi
		shl    $0x000005,%edi

	_0105e7_jump:
		cmp    %bp,_042a88_unknown(%edi)
		jbe    _010604_jump
		mov    %bp,_042a88_unknown(%edi)
		movb   $0x000000,_042a90_unknown(%edi)
		mov    %bh,_042a98_unknown(%edi)

	_010604_jump:
		cmp    %bp,0x042a8c(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		jae    _010621_jump
		mov    %bp,0x042a8c(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		movb   $0x000000,0x042a94(%edi) /* Warning: address points to a valid object/reloc, but no label found */
		mov    %bh,0x042a9c(%edi) /* Warning: address points to a valid object/reloc, but no label found */

	_010621_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _0105e7_jump

	_010638_jump:
		mov    _090004_data,%ebp
		mov    %ebp,%esi
		shl    $0x000002,%esi
		add    %ebp,%esi
		shl    $0x000006,%esi
		shl    $0x000005,%ebp
		add    _091932_data,%esi
		mov    %esi,_091936_data
		mov    %ebp,_09193a_data

	_01065d_jump:
		mov    _09193a_data,%ebp
		mov    _090008_data(%ebp),%edi
		movw   $0x00ffff,_090008_data(%ebp)
		mov    _09000c_data(%ebp),%ecx
		movw   $0x000000,_09000c_data(%ebp)
		cmp    $0x007e40,%edi
		jae    _012621_jump
		cmp    $0x007d00,%ecx
		jb     _012621_jump
		sub    %edi,%ecx
		inc    %ecx
		mov    _09001c_data(%ebp),%edx
		mov    _090018_data(%ebp),%esi
		shl    $0x000010,%ecx
		sub    %esi,%edx
		xor    %eax,%eax
		inc    %edx
		shl    $0x000008,%esi
		idiv   %ecx
		mov    %eax,%ebx
		mov    _090014_data(%ebp),%edx
		mov    _090010_data(%ebp),%eax
		sub    %eax,%edx
		add    %eax,%esi
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,%dx
		shl    $0x000010,%edx
		mov    %bx,%ax
		rol    $0x000010,%eax
		shr    $0x000010,%ebx
		mov    %bl,%dl
		mov    %si,%bx
		xor    %esi,%esi
		shr    $0x000010,%ecx
		sub    $0x007d00,%edi
		jns    _01070b_jump
		mov    %eax,%ebp
		mov    %edx,%esi
		neg    %edi
		sub    %edi,%ecx
		mul    %edi
		add    %eax,%ebx
		adc    %dl,%bh
		mov    %esi,%eax
		mul    %edi
		add    %dl,%bl
		add    %al,%bh
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ebp,%eax
		xor    %edi,%edi

	_01070b_jump:
		mov    %edi,%ebp
		add    %ecx,%edi
		cmp    $0x000140,%edi
		jb     _01071f_jump
		sub    $0x000140,%edi
		sub    %edi,%ecx

	_01071f_jump:
		mov    %ebp,%edi
		add    _091936_data,%edi
		mov    %edi,%ebp
		and    $0x000003,%ebp
		sub    %bp,%cx
		jns    _010738_jump
		add    %bp,%cx
		mov    %ecx,%ebp
		xor    %ecx,%ecx

	_010738_jump:
		add    %ebp,%edi
		push   %ecx
		mov    %bp,%cx
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_01079b_func,%ecx
		neg    %ecx
		jmp    *%ecx



_01079b_func:
		pop    %ecx
		push   %ecx
		shr    $0x000002,%ecx
		lea    (%edi,%ecx,4),%edi
		mov    %cx,%bp
		shl    $0x000005,%bp
		shl    $0x000007,%cx
		sub    %bp,%cx
		sub    $_0125bb_jump,%ecx
		neg    %ecx
		jmp    *%ecx



_0107bb_func:
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh

	_0125bb_jump:
		pop    %ecx
		and    $0x000003,%ecx
		add    %ecx,%edi
		mov    %cx,%bp
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_012621_jump,%ecx
		neg    %ecx
		jmp    *%ecx

	_012621_jump:
		addl   $0x000140,_091936_data
		addl   $0x000020,_09193a_data
		decl   _09193e_data
		jne    _01065d_jump

	_01263e_jump:
		popa   
		ret    



_01268a_func:
		pushaw 
		cld    
		sub    $0x000050,%ebx
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000001,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126a9_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126a9_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000002,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126d3_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126d3_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000004,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126fd_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126fd_jump
		pop    %esi
		add    %edx,%esi
		mov    $0x0ab000,%edi
		mov    $0x000008,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_012726_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _012726_jump
		popaw  
		ret    



_012748_func:
		pusha  
		mov    $0x000000,%ah
		int    $0x00001a
		shl    $0x000010,%ecx
		and    $0x00ffff,%edx
		add    %ecx,%edx
		mov    %edx,(%esi)
		popa   
		ret    



_012783_func:
		mov    $0x0003c4,%edx
		mov    $0x000f02,%eax
		out    %ax,(%dx)
		mov    $0x000fa0,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		ret    

_012799_switch:
		.long   0

_01279d_switch:
		.long   0


	_0127a1_jump:
		add    %dl,-0x000077(%ebp)
		or     $_01279d_switch,%eax
		mov    %eax,%ebp
		mov    %edx,%ecx
		and    $0x0000ff,%ecx
		mov    %ecx,_012799_switch
		and    $0x00ff00,%edx
		mov    %dh,_0127a1_jump
		mov    $0x000001,%ah
		mov    %edi,%ecx
		and    $0x000003,%ecx
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000001,%ch
		sub    _01279d_switch,%esi
		mov    $0x000002,%al
		out    %ax,(%dx)

	_0127de_jump:
		push   %ecx
		push   %edi
		add    _01279d_switch,%esi
		push   %esi
		push   %ebp

	_0127e8_jump:
		push   %edi
		push   %esi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %esi
		pop    %edi
		add    $0x000050,%edi
		add    _012799_switch,%esi
		dec    %ebp
		jne    _0127e8_jump
		pop    %ebp
		pop    %esi
		pop    %edi
		call   _012ca7_func
		mov    _0127a1_jump,%ch
		shl    %ch
		cmp    $0x000010,%ch
		jne    _01282c_jump
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		inc    %esi
		mov    $0x000001,%ch

	_01282c_jump:
		mov    %ch,_0127a1_jump
		pop    %ecx
		shl    %ch
		cmp    $0x000010,%ch
		jne    _0127de_jump
		pop    %ebp
		ret    



_01283c_func:
		push   %dx
		mov    $0x0003c4,%dx
		and    $0x00ffff,%eax
		mov    %al,%ah
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %dx
		ret    



_0129c7_func:
		push   %ebp
		push   %ebp
		movl   $0x000000,(%esp)
		push   %ecx
		push   %ebx
		mov    %ecx,%ebx
		add    $0x004600,%ebx
		sub    $0x000080,%edx
		mov    $0x000000,%cl
		jmp    _012a02_jump

	_0129e4_jump:
		addl   $0x000500,(%esp)
		cmp    %ebx,(%esp)
		jb     _0129f7_jump
		subl   $0x004600,(%esp)

	_0129f7_jump:
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _012b45_jump

	_012a02_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000001,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		jmp    _012a20_jump

	_012a1e_jump:
		inc    %cl

	_012a20_jump:
		cmp    $0x000014,%cl
		jge    _012b35_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		cmp    $0x000000,%di
		jne    _012b27_jump
		cmp    $0x000000,%bx
		jne    _012aaa_jump
		push   %edi
		push   %ecx
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    0x000014(%esp),%ecx
		push   %edx
		mov    0x00001c(%esp),%edx
		push   %eax
		push   %ebx
		push   %edx
		mov    %edi,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		mov    %al,%bl
		mov    %ecx,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		cmp    %bl,%al
		je     _012a76_jump
		stc    
		jmp    _012a77_jump

	_012a76_jump:
		clc    

	_012a77_jump:
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %edx
		pop    %ecx
		pop    %edi
		jae    _012a90_jump
		cmpl   $0x000050,0x000014(%esp)
		je     _012aa1_jump
		movl   $0x000050,0x000014(%esp)
		jmp    _012af7_jump

	_012a90_jump:
		cmpl   $0x000000,0x000014(%esp)
		je     _012aa1_jump
		movl   $0x000000,0x000014(%esp)
		jmp    _012af7_jump

	_012aa1_jump:
		incl   0x00000c(%edx,%ebp,1)
		jmp    _012b27_jump

	_012aaa_jump:
		movl   $0x000000,0x000014(%esp)
		push   %edi
		push   %ecx
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    0x000014(%esp),%ecx
		push   %edx
		mov    0x00001c(%esp),%edx
		push   %eax
		push   %ebx
		push   %edx
		mov    %edi,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		mov    %al,%bl
		mov    %ecx,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		cmp    %bl,%al
		je     _012ae6_jump
		stc    
		jmp    _012ae7_jump

	_012ae6_jump:
		clc    

	_012ae7_jump:
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %edx
		pop    %ecx
		pop    %edi
		jae    _012af7_jump
		movl   $0x000050,0x000014(%esp)

	_012af7_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		sub    0x00001c(%esp),%edi
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		incl   0x00000c(%edx,%ebp,1)
		jmp    _012b27_jump

	_012b27_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012a1e_jump

	_012b35_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		pop    %ebx
		pop    %ecx
		jmp    _0129e4_jump

	_012b45_jump:
		pop    %ebx
		pop    %ecx
		pop    %ebp
		pop    %ebp
		ret    



_012b4a_func:
		push   %ebp
		push   %ebx
		mov    %ecx,%ebx
		sub    $0x000080,%edx
		mov    $0x000000,%cl
		jmp    _012b66_jump

	_012b58_jump:
		add    %ebx,(%esp)
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _012be7_jump

	_012b66_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000000,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		jmp    _012b84_jump

	_012b82_jump:
		inc    %cl

	_012b84_jump:
		cmp    $0x000014,%cl
		jge    _012bd7_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		cmp    $0x000000,%di
		je     _012bcc_jump
		cmp    $0x000000,%bx
		je     _012ba4_jump

	_012b9e_jump:
		incl   0x00000c(%edx,%ebp,1)
		jmp    _012bcc_jump

	_012ba4_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		jmp    _012b9e_jump

	_012bcc_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012b82_jump

	_012bd7_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		pop    %ebx
		pop    %ecx
		jmp    _012b58_jump

	_012be7_jump:
		pop    %ebx
		pop    %ebp
		ret    



_012bea_func:
		push   %ebp
		push   %ebx
		mov    %ecx,%ebx
		sub    $0x000080,%edx
		add    $0x000078,%eax
		add    %edi,%eax
		mov    $0x00000e,%cl
		jmp    _012c05_jump

	_012bfd_jump:
		dec    %cl
		je     _012ca4_jump

	_012c05_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000000,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		add    $0x000006,%eax
		add    $0x000004,%esi
		addl   $0x000004,0x00000c(%esp)
		jmp    _012c2e_jump

	_012c2c_jump:
		inc    %cl

	_012c2e_jump:
		cmp    $0x000013,%cl
		jge    _012c8c_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		je     _012c47_jump
		or     %bx,%bx
		je     _012c57_jump
		incl   0x00000c(%edx,%ebp,1)

	_012c47_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		addl   $0x000004,0x00000c(%esp)
		jmp    _012c2c_jump

	_012c57_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		addl   $0x000004,0x000014(%esp)
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		incl   0x00000c(%edx,%ebp,1)
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012c2c_jump

	_012c8c_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		addl   $0x0004b0,0x000008(%esp)
		pop    %ebx
		pop    %ecx
		jmp    _012bfd_jump

	_012ca4_jump:
		pop    %ebx
		pop    %ebp
		ret    



_012ca7_func:
		shl    %ah
		cmp    $0x000010,%ah
		jne    _012cb1_jump
		inc    %edi
		mov    $0x000001,%ah

	_012cb1_jump:
		out    %ax,(%dx)
		ret    



_012cb4_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012ce4_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		mov    %esi,%edx
		mov    %dl,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012d15_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000007,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012d45_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000008,(%edi)
		movb   $0x000007,0x000050(%edi)
		call   _012ca7_func
		movb   $0x000007,(%edi)
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012d85_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		call   _012ca7_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012ca7_func
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012dd2_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012e02_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		call   _012ca7_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012e7e_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		call   _012ca7_func
		movb   $0x000004,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012eb7_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012ca7_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012f33_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012ca7_func
		movb   $0x000002,(%edi)
		movb   $0x000005,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _012ca7_func
		movb   $0x000004,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012f8a_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _012ca7_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _012ca7_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _012ca7_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _012ca7_func
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_013064_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000004,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000003,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		movb   $0x000004,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000002,(%edi)
		movb   $0x000004,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _012ca7_func
		movb   $0x000003,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_01325e_func:
		femms  
		or     $0x000008,%al

	_013262_jump:
		sgdtl  (%ebx)
		pop    %es



_013266_func:
		pusha  
		cmp    $0x000000,%ebx
		jle    _01332c_jump
		cmp    $0x000000,%ecx
		jle    _01332c_jump
		shl    $0x000004,%edx
		add    %edx,%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %edx
		add    %esi,%ecx
		mov    %esi,%eax
		shr    $0x000002,%esi
		and    $0x000003,%eax
		je     _0132c7_jump
		push   %edi
		push   %ebx
		mov    _01325e_func(%eax),%al
		mov    %ecx,%ebx
		shr    $0x000002,%ebx
		cmp    %esi,%ebx
		jne    _0132b6_jump
		mov    %ecx,%ebx
		and    $0x000003,%ebx
		mov    _013262_jump(%ebx),%ah
		and    %ah,%al

	_0132b6_jump:
		pop    %ebx
		out    %al,(%dx)
		add    %esi,%edi
		mov    %ebx,%eax

	_0132bc_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _0132bc_jump
		pop    %edi
		inc    %esi

	_0132c7_jump:
		mov    %ecx,%eax
		shr    $0x000002,%eax
		sub    %esi,%eax
		jl     _01332c_jump
		je     _01330e_jump
		push   %edi
		push   %ecx
		push   %ebx
		add    %esi,%edi
		mov    %eax,%ecx
		mov    $0x000050,%esi
		mov    $0x00000f,%al
		sub    %ecx,%esi
		out    %al,(%dx)
		xor    %eax,%eax
		push   %edx
		mov    %ecx,%edx
		shr    $0x000002,%ecx
		and    $0x000003,%edx
		jne    _0132fd_jump
		mov    %ecx,%edx

	_0132f2_jump:
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		add    %esi,%edi
		dec    %ebx
		jne    _0132f2_jump
		jmp    _01330a_jump

	_0132fd_jump:
		push   %ecx
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		rep stos %al,%es:(%edi)
		pop    %ecx
		add    %esi,%edi
		dec    %ebx
		jne    _0132fd_jump

	_01330a_jump:
		pop    %edx
		pop    %ebx
		pop    %ecx
		pop    %edi

	_01330e_jump:
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		and    $0x000003,%eax
		je     _01332c_jump
		mov    _013262_jump(%eax),%al
		add    %ecx,%edi
		out    %al,(%dx)
		mov    %ebx,%eax

	_013323_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _013323_jump

	_01332c_jump:
		popa   
		ret    



_01332e_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		pop    %ebp
		pop    %ecx
		push   %edi
		mov    %ecx,%ebx
		inc    %ebx

	_01335e_jump:
		movb   $0x0000ff,(%edi)
		add    $0x000050,%edi
		dec    %ebx
		jne    _01335e_jump
		pop    %edi
		call   _012ca7_func
		mov    %ecx,%ebx
		dec    %ebp
		push   %ecx
		mov    %ecx,%ebx
		shl    $0x000006,%ecx
		shl    $0x000004,%ebx
		add    %ecx,%ebx

	_01337b_jump:
		movb   $0x0000ff,(%edi)
		movb   $0x0000ff,(%edi,%ebx,1)
		call   _012ca7_func
		dec    %ebp
		jne    _01337b_jump
		pop    %ecx
		inc    %ecx

	_01338c_jump:
		movb   $0x0000ff,(%edi)
		add    $0x000050,%edi
		dec    %ecx
		jne    _01338c_jump
		pop    %edi
		pop    %ebp
		ret    



_013429_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		jmp    _013457_jump

	_013446_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _0139af_jump

	_013457_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_01345f_jump:
		cmp    $0x000000,%ecx
		je     _0139a8_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _013479_jump
		sub    0x000018(%esp),%esi

	_013479_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _01375d_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _013685_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _013904_jump

	_013685_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _013904_jump

	_01375d_jump:
		test   $0x000002,%edi
		je     _013904_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_013904_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _013998_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_013998_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _01345f_jump

	_0139a8_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013446_jump

	_0139af_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_0139b6_func:
		push   %ebp
		mov    %esi,%ebp
		push   %edx
		push   %eax
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		and    $0x0000fc,%al
		or     $0x000001,%al
		out    %al,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		mov    $0x00000f,%ah
		out    %ax,(%dx)
		mov    %ecx,%edi
		mov    $0x0ab000,%esi
		add    $0x000502,%edi
		add    $0x000502,%esi
		mov    $0x0000b8,%ecx

	_0139ee_jump:
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		add    $0x00004c,%edi
		add    $0x00004c,%esi
		dec    %ecx
		jne    _0139ee_jump
		cli    
		xor    %ecx,%ecx
		jmp    _013a11_jump

	_013a00_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000c,%cl
		jge    _013ad0_jump

	_013a11_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_013a19_jump:
		cmp    $0x000000,%ecx
		je     _013ac9_jump
		push   %ecx
		mov    0x000000(%ebp),%esi
		mov    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		or     %ecx,%ecx
		je     _013abf_jump
		shl    $0x000002,%ecx
		add    $0x000001,%ecx
		mov    %ecx,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		mov    %eax,%edx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_013abf_jump:
		pop    %ecx
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _013a19_jump

	_013ac9_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013a00_jump

	_013ad0_jump:
		push   %edx
		push   %eax
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		and    $0x0000fc,%al
		out    %al,(%dx)
		pop    %eax
		pop    %edx
		pop    %ebp
		sti    
		ret    



_013ae4_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		mov    $0x000000,%cl
		jmp    _013b14_jump

	_013b03_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _01406c_jump

	_013b14_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_013b1c_jump:
		cmp    $0x000000,%ecx
		je     _014065_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _013b36_jump
		sub    0x000018(%esp),%esi

	_013b36_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _013e1a_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _013d42_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _013fc1_jump

	_013d42_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _013fc1_jump

	_013e1a_jump:
		test   $0x000002,%edi
		je     _013fc1_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_013fc1_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _014055_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_014055_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _013b1c_jump

	_014065_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013b03_jump

	_01406c_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_014073_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		mov    $0x000000,%cl
		jmp    _0140a3_jump

	_014092_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000c,%cl
		jge    _0145fb_jump

	_0140a3_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_0140ab_jump:
		cmp    $0x000000,%ecx
		je     _0145f4_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _0140c5_jump
		sub    0x000018(%esp),%esi

	_0140c5_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _0143a9_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _0142d1_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _014550_jump

	_0142d1_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _014550_jump

	_0143a9_jump:
		test   $0x000002,%edi
		je     _014550_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_014550_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _0145e4_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0145e4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _0140ab_jump

	_0145f4_jump:
		pop    %ebp
		pop    %ecx
		jmp    _014092_jump

	_0145fb_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_014602_func:
		push   %ebp
		push   %ecx
		push   %ecx
		mov    %ecx,%ebp
		mov    %edx,%esi
		mov    $0x0000f0,%ecx
		movl   $0x00000e,0x000004(%esp)
		jmp    _014629_jump

	_014618_jump:
		decl   0x000004(%esp)
		je     _014661_jump
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _014661_jump
		add    0x000008(%ebx),%edi

	_014629_jump:
		push   %ebx
		push   %esi
		xor    %ebx,%ebx
		movl   $0x000014,0x000008(%esp)
		jmp    _014643_jump

	_014637_jump:
		add    $0x000006,%esi
		add    $0x000004,%edi
		decl   0x000008(%esp)
		je     _01465d_jump

	_014643_jump:
		mov    0x000004(%esi),%bl
		cmp    $0x000002,%bl
		jne    _014637_jump
		mov    (%esi),%bx
		mov    0x000000(%ebp,%ebx,4),%edx
		cmp    $0x000000,%edx
		je     _014637_jump
		push   %edi
		call   *%edx
		pop    %edi
		jmp    _014637_jump

	_01465d_jump:
		pop    %esi
		pop    %ebx
		jmp    _014618_jump

	_014661_jump:
		pop    %ecx
		pop    %ecx
		pop    %ebp
		ret    



_014665_func:
		push   %ebp
		push   %ecx
		push   %ecx
		mov    %ecx,%ebp
		mov    %edx,%esi
		mov    $0x0000f0,%ecx
		add    0x000008(%ebx),%edi
		add    $0x000050,%edi
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _0146d2_jump
		movl   $0x00000c,0x000004(%esp)
		jmp    _01469a_jump

	_014689_jump:
		decl   0x000004(%esp)
		je     _0146d2_jump
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _0146d2_jump
		add    0x000008(%ebx),%edi

	_01469a_jump:
		push   %ebx
		push   %esi
		xor    %ebx,%ebx
		movl   $0x000014,0x000008(%esp)
		jmp    _0146b4_jump

	_0146a8_jump:
		add    $0x000006,%esi
		add    $0x000004,%edi
		decl   0x000008(%esp)
		je     _0146ce_jump

	_0146b4_jump:
		mov    0x000004(%esi),%bl
		cmp    $0x000002,%bl
		jne    _0146a8_jump
		mov    (%esi),%bx
		mov    0x000000(%ebp,%ebx,4),%edx
		cmp    $0x000000,%edx
		je     _0146a8_jump
		push   %edi
		call   *%edx
		pop    %edi
		jmp    _0146a8_jump

	_0146ce_jump:
		pop    %esi
		pop    %ebx
		jmp    _014689_jump

	_0146d2_jump:
		pop    %ecx
		pop    %ecx
		pop    %ebp
		ret    



_01474b_func:
		pusha  
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_01476c_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _01476c_jump
		popa   
		ret    



_0147b5_func:
		pusha  
		push   %edi
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_0147d7_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _0147d7_jump
		pop    %edi
		cld    
		xor    %eax,%eax
		mov    $0x000140,%ecx
		rep stos %eax,%es:(%edi)
		add    $0x003700,%edi
		mov    $0x0000a0,%ecx
		rep stos %eax,%es:(%edi)
		popa   
		ret    



_014838_func:
		push   %edx
		mov    $0x0003d4,%dx
		mov    $0x00000c,%al
		out    %ax,(%dx)
		pop    %edx
		ret    



_0148da_func:
		pusha  
		mov    $0x000013,%ax
		int    $0x000010
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09195e_data
		mov    $0x0003ce,%dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09195f_data
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_091960_data
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_091961_data
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_091962_data
		mov    $0x0003d4,%dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_091963_data
		popa   
		ret    



_01493d_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09195e_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09195f_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091960_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091961_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091962_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091963_data,%al
		out    %al,(%dx)
		popa   
		ret    



_014996_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09195e_data,%al
		and    $0x0000ef,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09195f_data,%al
		and    $0x0000fd,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091960_data,%al
		and    $0x0000f7,%al
		or     $0x000004,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091961_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091962_data,%al
		and    $0x0000bf,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091963_data,%al
		or     $0x000040,%al
		out    %al,(%dx)
		popa   
		ret    



_0149fb_func:
		pusha  
		mov    $0x000000,%eax
		mov    $0x000050,%ebx
		mov    $0x000140,%ecx
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		popa   
		ret    



_014a43_func:
		pusha  
		mov    $0x000050,%ebp
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		popa   
		ret    



_014acd_func:
		pusha  
		mov    $0x000003,%ax
		int    $0x000010
		popa   
		ret    

_014dfc_switch:
		.long   0

_014e00_switch:
		.long   0

_014e04_switch:
		.long   0

_014e08_switch:
		.long   0

_014e0c_switch:
		.long   0

_014e10_switch:
		.long   0

_014e14_switch:
		.long   0

_014e18_switch:
		.long   0

_014e1c_switch:
		.long   0

_014e20_switch:
		.long   0

_014e24_switch:
		.long   0

_014e28_switch:
		.long   0

_014e2c_switch:
		.long   0

_014e30_switch:
		.long   0




_014e34_func:
		pusha  
		dec    %esi
		mov    %esi,_014e1c_switch
		push   %ecx
		push   %edi
		mov    0x000020(%ecx),%ebx
		mov    0x000024(%ecx),%edx
		sar    $0x000002,%ebx
		mov    $0xa1a1a1a1,%eax
		inc    %ebx

	_014e4d_jump:
		mov    %ebx,%ecx
		rep stos %eax,%es:(%edi)
		dec    %edx
		jne    _014e4d_jump
		pop    %edi
		pop    %ecx
		mov    (%ecx),%eax
		mov    0x000004(%ecx),%ebx
		mov    %eax,_014dfc_switch
		mov    %ebx,_014e00_switch
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%ebx
		mov    %eax,_014e04_switch
		mov    %ebx,_014e08_switch
		mov    0x000010(%ecx),%eax
		mov    0x000014(%ecx),%ebx
		mov    %eax,_014e0c_switch
		mov    %ebx,_014e10_switch
		mov    0x000018(%ecx),%eax
		mov    0x00001c(%ecx),%ebx
		mov    %eax,_014e14_switch
		mov    %ebx,_014e18_switch
		mov    %ebx,%edx
		add    %eax,%edx
		mov    %edx,_014e30_switch
		mov    0x00002c(%ecx),%ebx
		mov    0x000030(%ecx),%eax
		mov    %ebx,_014e2c_switch
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014e30_switch
		mov    %eax,_014e28_switch
		mov    _014e1c_switch,%esi
		add    0x000028(%ecx),%edi
		mov    _014e04_switch,%eax
		mov    _014e08_switch,%ebx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %edx,%edx
		cmp    %ebx,%eax
		jbe    _014fb8_jump
		mov    _014e18_switch,%ebx
		push   %eax
		mov    _014e2c_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014e04_switch
		mov    %eax,_014e24_switch
		mov    %eax,_014e20_switch
		pop    %eax
		xor    %edx,%edx

	_014f07_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_014f12_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x0000a1,(%edi)
		jne    _014f22_jump
		mov    %dh,(%edi)

	_014f22_jump:
		add    _014e24_switch,%ebx
		add    _014e08_switch,%ecx
		cmp    %eax,%ebp
		jge    _014f4e_jump
		add    _014dfc_switch,%edi
		cmp    _014e04_switch,%ecx
		jbe    _014f12_jump
		add    _014e00_switch,%edi
		sub    _014e04_switch,%ecx
		jmp    _014f12_jump

	_014f4e_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _014e1c_switch,%esi
		add    _014e14_switch,%ecx
		add    _014e10_switch,%edi
		add    _014e28_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_014f70_jump:
		je     _014f7b_jump
		add    _014e2c_switch,%esi
		dec    %edx
		jmp    _014f70_jump

	_014f7b_jump:
		mov    _014e20_switch,%edx
		mov    %edx,_014e24_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _01508d_jump
		cmp    $0x000000,%ecx
		jle    _014f07_jump
		add    _014e0c_switch,%edi
		dec    %ebp
		sub    _014e30_switch,%ecx
		sub    _014e10_switch,%edi
		subl   $0x000040,_014e24_switch
		jmp    _014f07_jump

	_014fb8_jump:
		mov    _014e2c_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014e08_switch
		mov    %eax,_014e24_switch
		mov    %eax,_014e20_switch
		xor    %edx,%edx
		mov    _014e14_switch,%ebx
		mov    _014e08_switch,%eax

	_014fe0_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_014feb_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x000081,(%edi)
		jne    _014ffb_jump
		mov    %dh,(%edi)

	_014ffb_jump:
		add    _014e24_switch,%ebx
		add    _014e04_switch,%ecx
		cmp    %eax,%ebp
		jge    _015024_jump
		add    _014e00_switch,%edi
		cmp    $0x000000,%ecx
		jle    _014feb_jump
		add    _014dfc_switch,%edi
		sub    _014e08_switch,%ecx
		jmp    _014feb_jump

	_015024_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _014e1c_switch,%esi
		add    _014e18_switch,%ecx
		add    _014e0c_switch,%edi
		add    _014e28_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_015046_jump:
		je     _015051_jump
		add    _014e2c_switch,%esi
		dec    %edx
		jmp    _015046_jump

	_015051_jump:
		mov    _014e20_switch,%edx
		mov    %edx,_014e24_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _01508d_jump
		cmp    _014e14_switch,%ecx
		jle    _014fe0_jump
		add    _014e10_switch,%edi
		dec    %ebp
		sub    _014e30_switch,%ecx
		sub    _014e0c_switch,%edi
		subl   $0x000040,_014e24_switch
		jmp    _014fe0_jump

	_01508d_jump:
		popa   
		ret    



_0150c3_func:
		push   %ecx
		mov    $0x003e80,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		ret    



_0150cd_func:
		imul   $0x000180,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		movw   $0x000c00,0x000001(%edi)
		movl   $0xc0e0a00,0x000180(%edi)
		movl   $0x0a0900,0x000300(%edi)
		movw   $0x000000,0x000481(%edi)
		ret    



_0150fb_func:
		pusha  
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		mov    $0x000000,%eax
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_015112_jump:
		push   %ecx
		mov    %edx,%ecx
		test   $0x000001,%ecx
		je     _01511f_jump
		stos   %al,%es:(%edi)
		dec    %ecx

	_01511f_jump:
		test   $0x000002,%ecx
		je     _01512c_jump
		stos   %ax,%es:(%edi)
		sub    $0x000002,%ecx

	_01512c_jump:
		sar    $0x000002,%ecx
		rep stos %eax,%es:(%edi)
		add    %ebx,%edi
		pop    %ecx
		loop   _015112_jump
		popa   
		ret    



_015138_func:
		cmp    $0x000002,%eax
		je     _01517d_jump
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		mov    %edi,%esi
		add    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_015156_jump:
		push   %ecx
		mov    %edx,%ecx

	_015159_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		sub    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _01516d_jump
		mov    %ah,%al
		and    $0x0000e0,%al

	_01516d_jump:
		mov    %al,(%edi)
		inc    %edi
		inc    %esi
		dec    %ecx
		jne    _015159_jump
		add    %ebx,%edi
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _015156_jump
		ret    

	_01517d_jump:
		add    %ecx,%ebx
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %edx,%edi
		add    %esi,%edi
		sub    $0x000141,%edi
		mov    %edi,%esi
		sub    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_0151a0_jump:
		push   %ecx
		mov    %edx,%ecx

	_0151a3_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		add    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _0151b7_jump
		mov    %ah,%al
		or     $0x00001f,%al

	_0151b7_jump:
		mov    %al,(%edi)
		dec    %edi
		dec    %esi
		dec    %ecx
		jne    _0151a3_jump
		sub    %ebx,%edi
		sub    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0151a0_jump
		ret    



_0151c7_func:
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		dec    %edx
		mov    %ecx,%ebx
		push   %edi

	_0151d5_jump:
		mov    %al,(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _0151d5_jump
		mov    %edx,%ecx
		sub    $0x000140,%edi
		inc    %edi
		xchg   %al,%ah
		rep stos %al,%es:(%edi)
		add    $0x00013f,%edi
		sub    %edx,%edi
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		pop    %edi
		xchg   %al,%ah
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		mov    %ebx,%ecx
		dec    %ecx
		mov    %ah,%al
		add    $0x00013f,%edi

	_01520d_jump:
		mov    %al,(%edi)
		mov    %al,-0x00013f(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _01520d_jump
		mov    %al,-0x00013f(%edi)
		ret    



_015225_func:
		imul   0x000004(%esp),%ebx
		add    %ebx,%esi
		add    %eax,%esi
		imul   $0x000140,%edx,%edx
		add    %edx,%edi
		add    %ecx,%edi
		mov    $0x000140,%ebx
		sub    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edx
		sub    0x000008(%esp),%edx
		mov    0x00000c(%esp),%eax

	_01524d_jump:
		mov    0x000008(%esp),%ecx
		test   $0x000001,%ecx
		je     _01525b_jump
		movsb  %ds:(%esi),%es:(%edi)
		dec    %ecx

	_01525b_jump:
		test   $0x000002,%ecx
		je     _015268_jump
		movsw  %ds:(%esi),%es:(%edi)
		sub    $0x000002,%ecx

	_015268_jump:
		sar    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %ebx,%edi
		add    %edx,%esi
		dec    %eax
		jne    _01524d_jump
		ret    $0x00000c



_015277_func:
		push   %ecx
		push   %eax
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    %esi,%edi
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    

	_015292_jump:
		inc    %eax
		add    %eax,(%eax)
	_015296_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)



_01529a_func:
		push   %ecx
		push   %eax
		mov    $0x003e80,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    



_0152a8_func:
		pusha  
		sub    $0x000004,%esp
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_0152b6_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _015292_jump,%ebx
		add    _015296_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _0152b6_jump
		add    $0x000004,%esp
		popa   
		ret    



_0152d3_func:
		pusha  
		mov    $0x000140,%ebx
		lea    0x000140(%edx),%eax
		shr    %ecx

	_0152e1_jump:
		movl   $0x000000,(%edi)
		movl   $0x000000,(%edi,%edx,1)
		mov    %edi,%esi
		movl   $0x000000,(%edi,%ebx,1)
		movl   $0x000000,(%edi,%eax,1)
		dec    %ecx
		lea    (%esi,%ebx,2),%edi
		jne    _0152e1_jump
		popa   
		ret    



_015306_func:
		pusha  
		cmp    $0x000000,%ecx
		jle    _015346_jump
		cmp    $0x000000,%ebx
		jle    _015346_jump
		sub    $0x000008,%esp
		mov    %ebx,0x000004(%esp)
		mov    %edx,%eax
		mov    %ecx,%ebx
		mov    %esi,%ebp
		shr    $0x000002,%ebx
		and    $0x000003,%ecx
		jne    _015327_jump
		inc    %ebx

	_015327_jump:
		mov    %edi,(%esp)
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		lea    0x000000(%ebp,%edx,1),%esi
		mov    (%esp),%edi
		add    %eax,%edx
		add    _015292_jump,%edi
		decl   0x000004(%esp)
		jne    _015327_jump
		add    $0x000008,%esp

	_015346_jump:
		popa   
		ret    



_015348_func:
		pusha  
		mov    0x000200(%esi),%eax
		sub    $0x000004,%esp
		movl   $0x000004,(%esp)

	_015359_jump:
		test   $0x40000000,%eax
		jne    _0153a4_jump
		test   $0x80000000,%eax
		jne    _0154b7_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_0153a4_jump:
		add    _015292_jump,%edi
		add    $0x000010,%esi
		test   $0x10000000,%eax
		jne    _0153f8_jump
		test   $0x20000000,%eax
		jne    _0154d2_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_0153f8_jump:
		add    _015292_jump,%edi
		add    $0x000010,%esi
		test   $0x4000000,%eax
		jne    _01544c_jump
		test   $0x8000000,%eax
		jne    _0154ed_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_01544c_jump:
		add    _015292_jump,%edi
		add    $0x000010,%esi
		test   $0x1000000,%eax
		jne    _0154a0_jump
		test   $0x2000000,%eax
		jne    _015508_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_0154a0_jump:
		add    _015292_jump,%edi
		add    $0x000010,%esi
		shl    $0x000008,%eax
		decl   (%esp)
		jne    _015359_jump
		jmp    _015520_jump

	_0154b7_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _0153a4_jump

	_0154d2_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _0153f8_jump

	_0154ed_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _01544c_jump

	_015508_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _0154a0_jump

	_015520_jump:
		add    $0x000004,%esp
		popa   
		ret    



_015525_func:
		pusha  
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		mov    0x000010(%esi),%ebx
		mov    0x000014(%esi),%ecx
		mov    0x000018(%esi),%edx
		mov    0x00001c(%esi),%ebp
		mov    %ebx,0x000140(%edi)
		mov    %ecx,0x000144(%edi)
		mov    %edx,0x000148(%edi)
		mov    %ebp,0x00014c(%edi)
		mov    0x000020(%esi),%ebx
		mov    0x000024(%esi),%ecx
		mov    0x000028(%esi),%edx
		mov    0x00002c(%esi),%ebp
		mov    %ebx,0x000280(%edi)
		mov    %ecx,0x000284(%edi)
		mov    %edx,0x000288(%edi)
		mov    %ebp,0x00028c(%edi)
		mov    0x000030(%esi),%ebx
		mov    0x000034(%esi),%ecx
		mov    0x000038(%esi),%edx
		mov    0x00003c(%esi),%ebp
		mov    %ebx,0x0003c0(%edi)
		mov    %ecx,0x0003c4(%edi)
		mov    %edx,0x0003c8(%edi)
		mov    %ebp,0x0003cc(%edi)
		mov    0x000040(%esi),%ebx
		mov    0x000044(%esi),%ecx
		mov    0x000048(%esi),%edx
		mov    0x00004c(%esi),%ebp
		mov    %ebx,0x000500(%edi)
		mov    %ecx,0x000504(%edi)
		mov    %edx,0x000508(%edi)
		mov    %ebp,0x00050c(%edi)
		mov    0x000050(%esi),%ebx
		mov    0x000054(%esi),%ecx
		mov    0x000058(%esi),%edx
		mov    0x00005c(%esi),%ebp
		mov    %ebx,0x000640(%edi)
		mov    %ecx,0x000644(%edi)
		mov    %edx,0x000648(%edi)
		mov    %ebp,0x00064c(%edi)
		mov    0x000060(%esi),%ebx
		mov    0x000064(%esi),%ecx
		mov    0x000068(%esi),%edx
		mov    0x00006c(%esi),%ebp
		mov    %ebx,0x000780(%edi)
		mov    %ecx,0x000784(%edi)
		mov    %edx,0x000788(%edi)
		mov    %ebp,0x00078c(%edi)
		mov    0x000070(%esi),%ebx
		mov    0x000074(%esi),%ecx
		mov    0x000078(%esi),%edx
		mov    0x00007c(%esi),%ebp
		mov    %ebx,0x0008c0(%edi)
		mov    %ecx,0x0008c4(%edi)
		mov    %edx,0x0008c8(%edi)
		mov    %ebp,0x0008cc(%edi)
		mov    0x000080(%esi),%ebx
		mov    0x000084(%esi),%ecx
		mov    0x000088(%esi),%edx
		mov    0x00008c(%esi),%ebp
		mov    %ebx,0x000a00(%edi)
		mov    %ecx,0x000a04(%edi)
		mov    %edx,0x000a08(%edi)
		mov    %ebp,0x000a0c(%edi)
		mov    0x000090(%esi),%ebx
		mov    0x000094(%esi),%ecx
		mov    0x000098(%esi),%edx
		mov    0x00009c(%esi),%ebp
		mov    %ebx,0x000b40(%edi)
		mov    %ecx,0x000b44(%edi)
		mov    %edx,0x000b48(%edi)
		mov    %ebp,0x000b4c(%edi)
		mov    0x0000a0(%esi),%ebx
		mov    0x0000a4(%esi),%ecx
		mov    0x0000a8(%esi),%edx
		mov    0x0000ac(%esi),%ebp
		mov    %ebx,0x000c80(%edi)
		mov    %ecx,0x000c84(%edi)
		mov    %edx,0x000c88(%edi)
		mov    %ebp,0x000c8c(%edi)
		mov    0x0000b0(%esi),%ebx
		mov    0x0000b4(%esi),%ecx
		mov    0x0000b8(%esi),%edx
		mov    0x0000bc(%esi),%ebp
		mov    %ebx,0x000dc0(%edi)
		mov    %ecx,0x000dc4(%edi)
		mov    %edx,0x000dc8(%edi)
		mov    %ebp,0x000dcc(%edi)
		mov    0x0000c0(%esi),%ebx
		mov    0x0000c4(%esi),%ecx
		mov    0x0000c8(%esi),%edx
		mov    0x0000cc(%esi),%ebp
		mov    %ebx,0x000f00(%edi)
		mov    %ecx,0x000f04(%edi)
		mov    %edx,0x000f08(%edi)
		mov    %ebp,0x000f0c(%edi)
		mov    0x0000d0(%esi),%ebx
		mov    0x0000d4(%esi),%ecx
		mov    0x0000d8(%esi),%edx
		mov    0x0000dc(%esi),%ebp
		mov    %ebx,0x001040(%edi)
		mov    %ecx,0x001044(%edi)
		mov    %edx,0x001048(%edi)
		mov    %ebp,0x00104c(%edi)
		mov    0x0000e0(%esi),%ebx
		mov    0x0000e4(%esi),%ecx
		mov    0x0000e8(%esi),%edx
		mov    0x0000ec(%esi),%ebp
		mov    %ebx,0x001180(%edi)
		mov    %ecx,0x001184(%edi)
		mov    %edx,0x001188(%edi)
		mov    %ebp,0x00118c(%edi)
		mov    0x0000f0(%esi),%ebx
		mov    0x0000f4(%esi),%ecx
		mov    0x0000f8(%esi),%edx
		mov    0x0000fc(%esi),%ebp
		mov    %ebx,0x0012c0(%edi)
		mov    %ecx,0x0012c4(%edi)
		mov    %edx,0x0012c8(%edi)
		mov    %ebp,0x0012cc(%edi)
		popa   
		ret    

_0157ba_switch:
		.long   0




_0157be_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_0157ba_switch
		cmp    _0ce53c_data,%eax
		jl     _01580d_jump
		add    %eax,%edx
		cmp    _0ce540_data,%edx
		ja     _0157f6_jump
		mov    $0x000004,%cl

	_0157dc_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0ce534_data,%ebx
		jl     _015846_jump

	_0157e8_jump:
		add    %ebx,%edx
		cmp    _0ce538_data,%edx
		ja     _015832_jump

	_0157f2_jump:
		clc    
		ret    

	_0157f4_jump:
		stc    
		ret    

	_0157f6_jump:
		cmp    _0ce540_data,%eax
		jae    _0157f4_jump
		mov    _0ce540_data,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _015893_jump

	_01580d_jump:
		sub    _0ce53c_data,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0157f4_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		lea    (%esi,%eax,1),%esi
		lea    (%edi,%eax,1),%edi
		mov    _0ce53c_data,%eax
		shr    $0x000002,%cl
		jmp    _0157dc_jump

	_015832_jump:
		cmp    _0ce538_data,%ebx
		jae    _0157f4_jump
		mov    _0ce538_data,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0157f2_jump

	_015846_jump:
		add    %ebx,%edx
		cmp    _0ce534_data,%edx
		jle    _0157f4_jump
		xor    %edx,%edx
		sub    _0ce534_data,%ebx
		mov    %ch,%dl
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _0157ba_switch,%eax
		mul    %bx
		add    %eax,%esi
		mov    _015292_jump,%eax
		mul    %bx
		add    %eax,%edi

	_01587b_jump:
		shll   $0x000002,0x000008(%esp)
		dec    %ebx
		jne    _01587b_jump
		pop    %eax
		mov    _0ce534_data,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _0157e8_jump

	_015893_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _0157dc_jump
		inc    %cl
		jmp    _0157dc_jump



_0158aa_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		mov    0x000200(%esi),%ebp
		mov    %ebp,(%esp)
		call   _0157be_func
		jb     _015a3d_jump
		mov    (%esp),%eax
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _01595f_jump
		cmp    $0x000002,%cl
		je     _0159c0_jump
		cmp    $0x000001,%cl
		je     _015a09_jump

	_0158e9_jump:
		test   $0x40000000,%eax
		jne    _01590d_jump
		test   $0x80000000,%eax
		je     _015924_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)

	_01590d_jump:
		add    _015292_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _0158e9_jump
		jmp    _015a3d_jump

	_015924_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)
		jmp    _01590d_jump

	_01595f_jump:
		test   $0x40000000,%eax
		jne    _01597d_jump
		test   $0x80000000,%eax
		je     _015994_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)

	_01597d_jump:
		add    _015292_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _01595f_jump
		jmp    _015a3d_jump

	_015994_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x000008(%esi),%ebx
		and    %ecx,0x000008(%edi)
		or     %ebx,0x000008(%edi)
		jmp    _01597d_jump

	_0159c0_jump:
		test   $0x40000000,%eax
		jne    _0159d8_jump
		test   $0x80000000,%eax
		je     _0159ec_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)

	_0159d8_jump:
		add    _015292_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _0159c0_jump
		jmp    _015a3d_jump

	_0159ec_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		jmp    _0159d8_jump

	_015a09_jump:
		test   $0x40000000,%eax
		jne    _015a1b_jump
		test   $0x80000000,%eax
		je     _015a2f_jump
		mov    (%esi),%ebx
		mov    %ebx,(%edi)

	_015a1b_jump:
		add    _015292_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _015a09_jump
		jmp    _015a3d_jump

	_015a2f_jump:
		mov    0x000100(%esi),%ecx
		mov    (%esi),%ebx
		and    %ecx,(%edi)
		or     %ebx,(%edi)
		jmp    _015a1b_jump

	_015a3d_jump:
		add    $0x000005,%esp
		popa   
		ret    



_015a42_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		movl   $0x000000,(%esp)
		call   _0157be_func
		jb     _015ae8_jump
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _015a97_jump
		cmp    $0x000002,%cl
		je     _015ab8_jump
		cmp    $0x000001,%cl
		je     _015ad3_jump

	_015a70_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		add    _015292_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _015a70_jump
		jmp    _015ae8_jump

	_015a97_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		add    _015292_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _015a97_jump
		jmp    _015ae8_jump

	_015ab8_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		add    _015292_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _015ab8_jump
		jmp    _015ae8_jump

	_015ad3_jump:
		mov    (%esi),%ebx
		mov    %ebx,(%edi)
		add    _015292_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _015ad3_jump
		jmp    _015ae8_jump

	_015ae8_jump:
		add    $0x000005,%esp
		popa   
		ret    



_015aed_func:
		pusha  
		add    _091af4_data(,%ebx,4),%eax
		mov    %esi,%edx
		mov    %dl,(%edi,%eax,1)
		popa   
		ret    

_015afc_switch:
		.long   0

_015b00_switch:
		.long   0

_015b04_switch:
		.long   0

_015b08_switch:
		.long   0




_015b0c_func:
		mov    %eax,_015afc_switch
		mov    %ebx,_015b00_switch
		mov    %ecx,_015b04_switch
		mov    %edx,_015b08_switch
		ret    



_015b24_func:
		push   %eax
		push   %edi
		cmp    _015b04_switch,%eax
		jl     _015b51_jump
		cmp    _015b08_switch,%eax
		ja     _015b51_jump
		cmp    _015afc_switch,%ebx
		jl     _015b51_jump
		cmp    _015b00_switch,%ebx
		ja     _015b51_jump
		add    _091af4_data(,%ebx,4),%eax
		movb   $0x000005,(%edi,%eax,1)

	_015b51_jump:
		pop    %edi
		pop    %eax
		ret    



_015b54_func:
		push   %eax
		push   %edi
		cmp    _015b04_switch,%eax
		jl     _015b81_jump
		cmp    _015b08_switch,%eax
		ja     _015b81_jump
		cmp    _015afc_switch,%ebx
		jl     _015b81_jump
		cmp    _015b00_switch,%ebx
		ja     _015b81_jump
		add    _091af4_data(,%ebx,4),%eax
		movb   $0x000007,(%edi,%eax,1)

	_015b81_jump:
		pop    %edi
		pop    %eax
		ret    



_015b84_func:
		push   %edi
		push   %eax
		cmp    _015b04_switch,%eax
		jl     _015bbd_jump
		cmp    _015b08_switch,%eax
		ja     _015bbd_jump
		cmp    _015afc_switch,%ebx
		jl     _015bbd_jump
		cmp    _015b00_switch,%ebx
		ja     _015bbd_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000807,(%edi)
		movw   $0x000706,0x000140(%edi)

	_015bbd_jump:
		pop    %eax
		pop    %edi
		ret    



_015bc0_func:
		push   %edi
		push   %eax
		cmp    _015b04_switch,%eax
		jl     _015c06_jump
		cmp    _015b08_switch,%eax
		ja     _015c06_jump
		cmp    _015afc_switch,%ebx
		jl     _015c06_jump
		cmp    _015b00_switch,%ebx
		ja     _015c06_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000608,0x000140(%edi)
		movb   $0x000006,0x000142(%edi)
		movb   $0x000006,0x000001(%edi)
		movb   $0x000006,0x000281(%edi)

	_015c06_jump:
		pop    %eax
		pop    %edi
		ret    



_015c09_func:
		push   %edi
		push   %eax
		cmp    _015b04_switch,%eax
		jl     _015c36_jump
		cmp    _015b08_switch,%eax
		ja     _015c36_jump
		cmp    _015afc_switch,%ebx
		jl     _015c36_jump
		cmp    _015b00_switch,%ebx
		ja     _015c36_jump
		add    _091af4_data(,%ebx,4),%eax
		movb   $0x000003,(%edi,%eax,1)

	_015c36_jump:
		pop    %eax
		pop    %edi
		ret    



_015c39_func:
		push   %edi
		push   %eax
		cmp    _015b04_switch,%eax
		jl     _015c87_jump
		cmp    _015b08_switch,%eax
		ja     _015c87_jump
		cmp    _015afc_switch,%ebx
		jl     _015c87_jump
		cmp    _015b00_switch,%ebx
		ja     _015c87_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000505,0x000001(%edi)
		movl   $0x5070705,0x000140(%edi)
		movl   $0x5070705,0x000280(%edi)
		movw   $0x000505,0x0003c1(%edi)

	_015c87_jump:
		pop    %eax
		pop    %edi
		ret    



_015c8a_func:
		push   %edi
		push   %eax
		cmp    _015b04_switch,%eax
		jl     _015cc0_jump
		cmp    _015b08_switch,%eax
		ja     _015cc0_jump
		cmp    _015afc_switch,%ebx
		jl     _015cc0_jump
		cmp    _015b00_switch,%ebx
		ja     _015cc0_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movb   $0x000005,0x000140(%edi)
		movb   $0x000004,0x000001(%edi)

	_015cc0_jump:
		pop    %eax
		pop    %edi
		ret    



_015cc3_func:
		push   %edi
		push   %eax
		cmp    _015b04_switch,%eax
		jl     _015d11_jump
		cmp    _015b08_switch,%eax
		ja     _015d11_jump
		cmp    _015afc_switch,%ebx
		jl     _015d11_jump
		cmp    _015b00_switch,%ebx
		ja     _015d11_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000001(%edi)
		movl   $0x6080806,0x000140(%edi)
		movl   $0x6080806,0x000280(%edi)
		movw   $0x000606,0x0003c1(%edi)

	_015d11_jump:
		pop    %eax
		pop    %edi
		ret    



_015d14_func:
		push   %edi
		push   %eax
		cmp    _015b04_switch,%eax
		jl     _015d5e_jump
		cmp    _015b08_switch,%eax
		ja     _015d5e_jump
		cmp    _015afc_switch,%ebx
		jl     _015d5e_jump
		cmp    _015b00_switch,%ebx
		ja     _015d5e_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000204,0x000001(%edi)
		movw   $0x000305,0x000140(%edi)
		movb   $0x000002,0x000142(%edi)
		movw   $0x000603,0x000280(%edi)

	_015d5e_jump:
		pop    %eax
		pop    %edi
		ret    



_015d61_func:
		push   %edi
		push   %eax
		cmp    _015b04_switch,%eax
		jl     _015dd5_jump
		cmp    _015b08_switch,%eax
		ja     _015dd5_jump
		cmp    _015afc_switch,%ebx
		jl     _015dd5_jump
		cmp    _015b00_switch,%ebx
		ja     _015dd5_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000002(%edi)
		movl   $0x7080807,0x000141(%edi)
		movl   $0x8080806,0x000280(%edi)
		movl   $0x8080806,0x0003c0(%edi)
		movl   $0x7080807,0x000501(%edi)
		movw   $0x000606,0x000642(%edi)
		movw   $0x000608,0x000284(%edi)
		movw   $0x000608,0x0003c4(%edi)

	_015dd5_jump:
		pop    %eax
		pop    %edi
		ret    



_015dd8_func:
		push   %edi
		push   %eax
		cmp    _015b04_switch,%eax
		jl     _015e32_jump
		cmp    _015b08_switch,%eax
		ja     _015e32_jump
		cmp    _015afc_switch,%ebx
		jl     _015e32_jump
		cmp    _015b00_switch,%ebx
		ja     _015e32_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000203,0x000002(%edi)
		movb   $0x000003,0x000141(%edi)
		movw   $0x000402,0x000142(%edi)
		movw   $0x000405,0x000280(%edi)
		movb   $0x000003,0x000282(%edi)
		movw   $0x000604,0x0003c0(%edi)

	_015e32_jump:
		pop    %eax
		pop    %edi
		ret    

	_015e35_jump:
		inc    %eax
		add    %eax,(%eax)
	_015e39_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)

_015e3d_switch:
		.long   0




_015e41_func:
		pusha  
		cli    
		cld    
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0c6996_data
		sbbw   $0x000000,_0c6996_data
		shr    %al
		movw   $0x000001,_0c6998_data
		sbbw   $0x000000,_0c6998_data
		shr    %al
		movw   $0x000001,_0c699a_data
		sbbw   $0x000000,_0c699a_data
		shr    %al
		movw   $0x000001,_0c699c_data
		sbbw   $0x000000,_0c699c_data
		mov    _095b34_data,%ax
		cmp    $0x000001,%ax
		je     _015f12_jump
		and    $0x000003,%ebx
		jne    _015ef6_jump
		movw   $0x000000,_0ce840_data
		movw   $0x000000,_0ce842_data
		mov    $0x0007d0,%ebx
		call   _01735b_func
		mov    %eax,_015e3d_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015ecf_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0ce840_data,%ax
		je     _015f15_jump

	_015ede_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0ce842_data,%ax
		je     _015f28_jump

	_015eec_jump:
		dec    %ebx
		je     _015ef6_jump
		and    $0x000003,%ebp
		jne    _015ecf_jump
		jmp    _015f12_jump

	_015ef6_jump:
		mov    _0ce828_data,%bx
		mov    %bx,_0ce840_data
		mov    _0ce82a_data,%bx
		mov    %bx,_0ce842_data

	_015f12_jump:
		sti    
		popa   
		ret    

	_015f15_jump:
		call   _01735b_func
		sub    _015e3d_switch,%eax
		mov    %ax,_0ce840_data
		jmp    _015ede_jump

	_015f28_jump:
		call   _01735b_func
		sub    _015e3d_switch,%eax
		mov    %ax,_0ce842_data
		jmp    _015eec_jump



_015f3b_func:
		pusha  
		cli    
		cld    
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0c699a_data
		sbbw   $0x000000,_0c699a_data
		shr    %al
		movw   $0x000001,_0c699c_data
		sbbw   $0x000000,_0c699c_data
		shr    %al
		movw   $0x000001,_0c6996_data
		sbbw   $0x000000,_0c6996_data
		shr    %al
		movw   $0x000001,_0c6998_data
		sbbw   $0x000000,_0c6998_data
		mov    _095b34_data,%ax
		cmp    $0x000001,%ax
		je     _015f12_jump
		and    $0x00000c,%ebx
		jne    _015ff4_jump
		movw   $0x000000,_0ce840_data
		movw   $0x000000,_0ce842_data
		mov    $0x0007d0,%ebx
		call   _01735b_func
		mov    %eax,_015e3d_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015fcd_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0ce840_data,%ax
		je     _016013_jump

	_015fdc_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0ce842_data,%ax
		je     _016026_jump

	_015fea_jump:
		dec    %ebx
		je     _015ff4_jump
		and    $0x00000c,%ebp
		jne    _015fcd_jump
		jmp    _016010_jump

	_015ff4_jump:
		mov    _0ce828_data,%bx
		mov    %bx,_0ce840_data
		mov    _0ce82a_data,%bx
		mov    %bx,_0ce842_data

	_016010_jump:
		sti    
		popa   
		ret    

	_016013_jump:
		call   _01735b_func
		sub    _015e3d_switch,%eax
		mov    %ax,_0ce840_data
		jmp    _015fdc_jump

	_016026_jump:
		call   _01735b_func
		sub    _015e3d_switch,%eax
		mov    %ax,_0ce842_data
		jmp    _015fea_jump



_016039_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0ce840_data
		movw   $0x000000,_0ce842_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0c6996_data
		sbbw   $0x000000,_0c6996_data
		shr    %al
		movw   $0x000001,_0c6998_data
		sbbw   $0x000000,_0c6998_data
		shr    %al
		movw   $0x000001,_0c699a_data
		sbbw   $0x000000,_0c699a_data
		shr    %al
		movw   $0x000001,_0c699c_data
		sbbw   $0x000000,_0c699c_data
		and    $0x000003,%ebx
		jne    _0160d8_jump
		mov    $0x0007d0,%ebx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_0160b1_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		je     _0160c0_jump
		incw   _0ce840_data

	_0160c0_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		je     _0160ce_jump
		incw   _0ce842_data

	_0160ce_jump:
		dec    %ebx
		je     _0160d8_jump
		and    $0x000003,%ebp
		jne    _0160b1_jump
		jmp    _0160f4_jump

	_0160d8_jump:
		mov    _0ce828_data,%bx
		mov    %bx,_0ce840_data
		mov    _0ce82a_data,%bx
		mov    %bx,_0ce842_data

	_0160f4_jump:
		sti    
		popa   
		ret    



_0160f7_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0ce840_data
		movw   $0x000000,_0ce842_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0c699a_data
		sbbw   $0x000000,_0c699a_data
		shr    %al
		movw   $0x000001,_0c699c_data
		sbbw   $0x000000,_0c699c_data
		shr    %al
		movw   $0x000001,_0c6996_data
		sbbw   $0x000000,_0c6996_data
		shr    %al
		movw   $0x000001,_0c6998_data
		sbbw   $0x000000,_0c6998_data
		and    $0x00000c,%ebx
		jne    _0161a4_jump
		mov    $0x0007d0,%ebx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_01616f_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0ce840_data,%ax
		je     _016185_jump
		incw   _0ce840_data

	_016185_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0ce842_data,%ax
		je     _01619a_jump
		incw   _0ce842_data

	_01619a_jump:
		dec    %ebx
		je     _0161a4_jump
		and    $0x00000c,%ebp
		jne    _01616f_jump
		jmp    _0161c0_jump

	_0161a4_jump:
		mov    _0ce828_data,%bx
		mov    %bx,_0ce840_data
		mov    _0ce82a_data,%bx
		mov    %bx,_0ce842_data

	_0161c0_jump:
		sti    
		popa   
		ret    



_0161c3_func:
		pusha  
		cli    
		cld    
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_0161d2_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%ebp
		je     _0161ec_jump
		mov    %eax,%ebp
		and    $0x000002,%ebp
		je     _0161ec_jump
		dec    %ebx
		jne    _0161d2_jump
		popa   
		mov    $0x000000,%eax
		jmp    _0161f2_jump

	_0161ec_jump:
		popa   
		mov    $0x000001,%eax

	_0161f2_jump:
		sti    
		ret    



_0161f4_func:
		pusha  
		cli    
		cld    
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_016203_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%ebp
		je     _01621d_jump
		mov    %eax,%ebp
		and    $0x000008,%ebp
		je     _01621d_jump
		dec    %ebx
		jne    _016203_jump
		popa   
		mov    $0x000000,%eax
		jmp    _016223_jump

	_01621d_jump:
		popa   
		mov    $0x000001,%eax

	_016223_jump:
		sti    
		ret    



_016225_func:
		pusha  
		cli    
		cld    
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		movw   $0x000000,_0ce840_data
		movw   $0x000000,_0ce842_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		shr    $0x000005,%al
		movw   $0x000001,_0c6996_data
		sbbw   $0x000000,_0c6996_data
		shr    %al
		movw   $0x000001,_0c6998_data
		sbbw   $0x000000,_0c6998_data
		shr    %al
		movw   $0x000001,_0c699a_data
		sbbw   $0x000000,_0c699a_data
		shr    %al
		movw   $0x000001,_0c699c_data
		sbbw   $0x000000,_0c699c_data
		mov    0x000004(%esp),%eax
		and    $0x000003,%ebp
		jne    _016373_jump
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %eax,0x000004(%esp)
		call   _01735b_func
		mov    %eax,_015e3d_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)
		mov    0x000004(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%edx

	_0162c3_jump:
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000004(%esp)
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0ce840_data,%ax
		je     _0163b7_jump

	_0162e2_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0ce842_data,%ax
		je     _0163cd_jump

	_0162f4_jump:
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%eax
		and    $0x000003,%ebp
		je     _016399_jump
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _015e35_jump,%ebx
		add    _015e39_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _0162c3_jump
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx

	_016326_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0ce840_data,%ax
		je     _0163e3_jump

	_016339_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0ce842_data,%ax
		je     _0163f9_jump

	_01634b_jump:
		dec    %ebx
		je     _016355_jump
		and    $0x000003,%ebp
		jne    _016326_jump
		jmp    _016371_jump

	_016355_jump:
		mov    _0ce828_data,%bx
		mov    %bx,_0ce840_data
		mov    _0ce82a_data,%bx
		mov    %bx,_0ce842_data

	_016371_jump:
		jmp    _0163b1_jump

	_016373_jump:
		mov    _0ce828_data,%bx
		mov    %bx,_0ce840_data
		mov    _0ce82a_data,%bx
		mov    %bx,_0ce842_data
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_016399_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _015e35_jump,%ebx
		add    _015e39_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _016399_jump

	_0163b1_jump:
		add    $0x00000c,%esp
		sti    
		popa   
		ret    

	_0163b7_jump:
		call   _01735b_func
		sub    _015e3d_switch,%eax
		mov    %ax,_0ce840_data
		jmp    _0162e2_jump

	_0163cd_jump:
		call   _01735b_func
		sub    _015e3d_switch,%eax
		mov    %ax,_0ce842_data
		jmp    _0162f4_jump

	_0163e3_jump:
		call   _01735b_func
		sub    _015e3d_switch,%eax
		mov    %ax,_0ce840_data
		jmp    _016339_jump

	_0163f9_jump:
		call   _01735b_func
		sub    _015e3d_switch,%eax
		mov    %ax,_0ce842_data
		jmp    _01634b_jump



_01640f_func:
		pusha  
		cli    
		cld    
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		movw   $0x000000,_0ce840_data
		movw   $0x000000,_0ce842_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		shr    $0x000005,%al
		movw   $0x000001,_0c6996_data
		sbbw   $0x000000,_0c6996_data
		shr    %al
		movw   $0x000001,_0c6998_data
		sbbw   $0x000000,_0c6998_data
		shr    %al
		movw   $0x000001,_0c699a_data
		sbbw   $0x000000,_0c699a_data
		shr    %al
		movw   $0x000001,_0c699c_data
		sbbw   $0x000000,_0c699c_data
		mov    0x000004(%esp),%eax
		and    $0x00000c,%ebp
		jne    _01655d_jump
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %eax,0x000004(%esp)
		call   _01735b_func
		mov    %eax,_015e3d_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)
		mov    0x000004(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%edx

	_0164ad_jump:
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000004(%esp)
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0ce840_data,%ax
		je     _0165a1_jump

	_0164cc_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0ce842_data,%ax
		je     _0165b7_jump

	_0164de_jump:
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%eax
		and    $0x00000c,%ebp
		je     _016583_jump
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _015e35_jump,%ebx
		add    _015e39_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _0164ad_jump
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx

	_016510_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0ce840_data,%ax
		je     _0165cd_jump

	_016523_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0ce842_data,%ax
		je     _0165e3_jump

	_016535_jump:
		dec    %ebx
		je     _01653f_jump
		and    $0x00000c,%ebp
		jne    _016510_jump
		jmp    _01655b_jump

	_01653f_jump:
		mov    _0ce828_data,%bx
		mov    %bx,_0ce840_data
		mov    _0ce82a_data,%bx
		mov    %bx,_0ce842_data

	_01655b_jump:
		jmp    _01659b_jump

	_01655d_jump:
		mov    _0ce828_data,%bx
		mov    %bx,_0ce840_data
		mov    _0ce82a_data,%bx
		mov    %bx,_0ce842_data
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_016583_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _015e35_jump,%ebx
		add    _015e39_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _016583_jump

	_01659b_jump:
		add    $0x00000c,%esp
		sti    
		popa   
		ret    

	_0165a1_jump:
		call   _01735b_func
		sub    _015e3d_switch,%eax
		mov    %ax,_0ce840_data
		jmp    _0164cc_jump

	_0165b7_jump:
		call   _01735b_func
		sub    _015e3d_switch,%eax
		mov    %ax,_0ce842_data
		jmp    _0164de_jump

	_0165cd_jump:
		call   _01735b_func
		sub    _015e3d_switch,%eax
		mov    %ax,_0ce840_data
		jmp    _016523_jump

	_0165e3_jump:
		call   _01735b_func
		sub    _015e3d_switch,%eax
		mov    %ax,_0ce842_data
		jmp    _016535_jump

	_0165f9_jump:
		or     %al,(%eax)
		add    %al,(%eax)

	_0165fd_jump:
		cmp    %al,(%ecx)
		add    %al,(%eax)

_016601_switch:
		.long   0


	_016605_jump:
		enter  $0x000000,$0x000000



_016609_func:
		movl   $0x000008,_0165f9_jump
		movl   $0x000138,_0165fd_jump
		movl   $0x000000,_016601_switch
		movl   $0x0000c8,_016605_jump
		ret    



_016632_func:
		push   %ebp
		push   %edi
		mov    _0165f9_jump,%ebp
		mov    %ebp,(%eax)
		mov    _0165fd_jump,%edi
		mov    %edi,(%ebx)
		mov    _016601_switch,%ebp
		mov    %ebp,(%ecx)
		mov    _016605_jump,%edi
		mov    %edi,(%edx)
		pop    %edi
		pop    %ebp
		ret    



_01666f_func:
		cmp    $0x000000,%eax
		jge    _016679_jump
		mov    $0x000000,%eax

	_016679_jump:
		cmp    $0x000140,%eax
		jle    _016685_jump
		mov    $0x000140,%eax

	_016685_jump:
		mov    %eax,_0165f9_jump
		cmp    $0x000000,%ebx
		jge    _016694_jump
		mov    $0x000000,%ebx

	_016694_jump:
		cmp    $0x000140,%ebx
		jle    _0166a1_jump
		mov    $0x000140,%ebx

	_0166a1_jump:
		mov    %ebx,_0165fd_jump
		cmp    $0x000000,%ecx
		jge    _0166b1_jump
		mov    $0x000000,%ecx

	_0166b1_jump:
		cmp    $0x0000c8,%ecx
		jle    _0166be_jump
		mov    $0x0000c8,%ecx

	_0166be_jump:
		mov    %ecx,_016601_switch
		cmp    $0x000000,%edx
		jge    _0166ce_jump
		mov    $0x000000,%edx

	_0166ce_jump:
		cmp    $0x0000c8,%edx
		jle    _0166db_jump
		mov    $0x0000c8,%edx

	_0166db_jump:
		mov    %edx,_016605_jump
		ret    



_0166e2_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092138_data
		cmp    _0165f9_jump,%eax
		jl     _01672c_jump

	_0166f4_jump:
		add    %eax,%edx
		cmp    _0165fd_jump,%edx
		ja     _016718_jump

	_0166fe_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _016601_switch,%ebx
		jl     _01675e_jump

	_01670a_jump:
		add    %ebx,%edx
		cmp    _016605_jump,%edx
		ja     _01674a_jump

	_016714_jump:
		clc    
		ret    

	_016716_jump:
		stc    
		ret    

	_016718_jump:
		cmp    _0165fd_jump,%eax
		jae    _016716_jump
		mov    _0165fd_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _0166fe_jump

	_01672c_jump:
		sub    _0165f9_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _016716_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		add    %eax,%esi
		mov    _0165f9_jump,%eax
		jmp    _0166f4_jump

	_01674a_jump:
		cmp    _016605_jump,%ebx
		jae    _016716_jump
		mov    _016605_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _016714_jump

	_01675e_jump:
		add    %ebx,%edx
		cmp    _016601_switch,%edx
		jle    _016716_jump
		sub    _016601_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _092138_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _016601_switch,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _01670a_jump



_016798_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092138_data
		cmp    _0165f9_jump,%eax
		jl     _0167e9_jump

	_0167aa_jump:
		add    %eax,%edx
		cmp    _0165fd_jump,%edx
		ja     _0167cd_jump

	_0167b4_jump:
		movzbl %ch,%edx
		cmp    _016601_switch,%ebx
		jl     _016819_jump

	_0167bf_jump:
		add    %ebx,%edx
		cmp    _016605_jump,%edx
		ja     _016805_jump

	_0167c9_jump:
		clc    
		ret    

	_0167cb_jump:
		stc    
		ret    

	_0167cd_jump:
		cmp    _0165fd_jump,%eax
		jae    _0167cb_jump
		mov    _0165fd_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		add    _092138_data,%esi
		sub    %edx,%esi
		jmp    _0167b4_jump

	_0167e9_jump:
		sub    _0165f9_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0167cb_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    _0165f9_jump,%eax
		jmp    _0167aa_jump

	_016805_jump:
		cmp    _016605_jump,%ebx
		jae    _0167cb_jump
		mov    _016605_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0167c9_jump

	_016819_jump:
		add    %ebx,%edx
		cmp    _016601_switch,%edx
		jle    _0167cb_jump
		sub    _016601_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _092138_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _016601_switch,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _0167bf_jump

_016853_switch:
		.long   0

_016857_switch:
		.long   0




_01685b_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092138_data
		jmp    _016872_jump



_016867_func:
		call   _0166e2_func
		jb     _0169cd_jump

	_016872_jump:
		push   %ebp
		mov    _092138_data,%edx
		mov    %edx,_016853_switch
		add    _091e14_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _091e14_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $0x0000ff,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0168f3_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016857_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_0168cf_jump:
		xor    %ebp,%ebp

	_0168d1_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0168db_jump
		mov    %ah,(%edi)

	_0168db_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0168d1_jump
		add    _016857_switch,%edi
		add    _016853_switch,%esi
		cmp    %ebx,%edi
		jb     _0168cf_jump
		pop    %edi
		pop    %esi

	_0168f3_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01693e_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016857_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016917_jump
		inc    %edi
		mov    $0x000001,%al

	_016917_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_01691a_jump:
		xor    %ebp,%ebp

	_01691c_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016926_jump
		mov    %ah,(%edi)

	_016926_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _01691c_jump
		add    _016857_switch,%edi
		add    _016853_switch,%esi
		cmp    %ebx,%edi
		jb     _01691a_jump
		pop    %edi
		pop    %esi

	_01693e_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016989_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016857_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016962_jump
		inc    %edi
		mov    $0x000001,%al

	_016962_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_016965_jump:
		xor    %ebp,%ebp

	_016967_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016971_jump
		mov    %ah,(%edi)

	_016971_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016967_jump
		add    _016857_switch,%edi
		add    _016853_switch,%esi
		cmp    %ebx,%edi
		jb     _016965_jump
		pop    %edi
		pop    %esi

	_016989_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0169cc_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016857_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0169a9_jump
		inc    %edi
		mov    $0x000001,%al

	_0169a9_jump:
		out    %al,(%dx)

	_0169aa_jump:
		xor    %ebp,%ebp

	_0169ac_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0169b6_jump
		mov    %ah,(%edi)

	_0169b6_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0169ac_jump
		add    _016857_switch,%edi
		add    _016853_switch,%esi
		cmp    %ebx,%edi
		jb     _0169aa_jump

	_0169cc_jump:
		pop    %ebp

	_0169cd_jump:
		ret    



_0169ce_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092138_data
		jmp    _0169e5_jump



_0169da_func:
		call   _016798_func
		jb     _016b4b_jump

	_0169e5_jump:
		push   %ebp
		mov    _092138_data,%edx
		mov    %edx,_016853_switch
		add    _091e14_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _091e14_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $0x0000ff,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016a6b_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016857_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_016a47_jump:
		xor    %ebp,%ebp

	_016a49_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016a53_jump
		mov    %ah,(%edi)

	_016a53_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016a49_jump
		add    _016857_switch,%edi
		add    _016853_switch,%esi
		cmp    %ebx,%edi
		jb     _016a47_jump
		pop    %edi
		pop    %esi

	_016a6b_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016ab8_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016857_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016a91_jump
		inc    %edi
		mov    $0x000001,%al

	_016a91_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_016a94_jump:
		xor    %ebp,%ebp

	_016a96_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016aa0_jump
		mov    %ah,(%edi)

	_016aa0_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016a96_jump
		add    _016857_switch,%edi
		add    _016853_switch,%esi
		cmp    %ebx,%edi
		jb     _016a94_jump
		pop    %edi
		pop    %esi

	_016ab8_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016b05_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016857_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016ade_jump
		inc    %edi
		mov    $0x000001,%al

	_016ade_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_016ae1_jump:
		xor    %ebp,%ebp

	_016ae3_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016aed_jump
		mov    %ah,(%edi)

	_016aed_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016ae3_jump
		add    _016857_switch,%edi
		add    _016853_switch,%esi
		cmp    %ebx,%edi
		jb     _016ae1_jump
		pop    %edi
		pop    %esi

	_016b05_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016b4a_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016857_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016b27_jump
		inc    %edi
		mov    $0x000001,%al

	_016b27_jump:
		out    %al,(%dx)

	_016b28_jump:
		xor    %ebp,%ebp

	_016b2a_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016b34_jump
		mov    %ah,(%edi)

	_016b34_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016b2a_jump
		add    _016857_switch,%edi
		add    _016853_switch,%esi
		cmp    %ebx,%edi
		jb     _016b28_jump

	_016b4a_jump:
		pop    %ebp

	_016b4b_jump:
		ret    

_016b4c_switch:
		.long   0

_016b50_switch:
		.long   0




_016b54_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092134_data
		call   _0166e2_func
		jb     _016cea_jump
		push   %ebp
		mov    _092138_data,%edx
		mov    %edx,_016b4c_switch
		xor    %edx,%edx
		add    _091e14_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		and    $0x0000ff,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016bf7_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016b50_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _092134_data,%eax

	_016bd0_jump:
		xor    %ebp,%ebp

	_016bd2_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016bde_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016bde_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016bd2_jump
		add    _016b50_switch,%edi
		add    _016b4c_switch,%esi
		cmp    %ebx,%edi
		jb     _016bd0_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016bf7_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016c4b_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016b50_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016c1b_jump
		inc    %edi
		mov    $0x000001,%al

	_016c1b_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092134_data,%eax

	_016c24_jump:
		xor    %ebp,%ebp

	_016c26_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016c32_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016c32_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016c26_jump
		add    _016b50_switch,%edi
		add    _016b4c_switch,%esi
		cmp    %ebx,%edi
		jb     _016c24_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016c4b_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016c9f_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016b50_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016c6f_jump
		inc    %edi
		mov    $0x000001,%al

	_016c6f_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092134_data,%eax

	_016c78_jump:
		xor    %ebp,%ebp

	_016c7a_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016c86_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016c86_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016c7a_jump
		add    _016b50_switch,%edi
		add    _016b4c_switch,%esi
		cmp    %ebx,%edi
		jb     _016c78_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016c9f_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016ce9_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016b50_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016cbf_jump
		inc    %edi
		mov    $0x000001,%al

	_016cbf_jump:
		out    %al,(%dx)

	_016cc0_jump:
		xor    %ebp,%ebp
		mov    _092134_data,%eax

	_016cc7_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016cd3_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016cd3_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016cc7_jump
		add    _016b50_switch,%edi
		add    _016b4c_switch,%esi
		cmp    %ebx,%edi
		jb     _016cc0_jump

	_016ce9_jump:
		pop    %ebp

	_016cea_jump:
		ret    



_016ceb_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092134_data
		call   _016798_func
		jb     _016e8c_jump
		push   %ebp
		mov    _092138_data,%edx
		mov    %edx,_016b4c_switch
		xor    %edx,%edx
		add    _091e14_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		and    $0x0000ff,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016d93_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016b50_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _092134_data,%eax

	_016d6c_jump:
		xor    %ebp,%ebp

	_016d6e_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016d7a_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016d7a_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016d6e_jump
		add    _016b50_switch,%edi
		add    _016b4c_switch,%esi
		cmp    %ebx,%edi
		jb     _016d6c_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016d93_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016de9_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016b50_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016db9_jump
		inc    %edi
		mov    $0x000001,%al

	_016db9_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092134_data,%eax

	_016dc2_jump:
		xor    %ebp,%ebp

	_016dc4_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016dd0_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016dd0_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016dc4_jump
		add    _016b50_switch,%edi
		add    _016b4c_switch,%esi
		cmp    %ebx,%edi
		jb     _016dc2_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016de9_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016e3f_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016b50_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016e0f_jump
		inc    %edi
		mov    $0x000001,%al

	_016e0f_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092134_data,%eax

	_016e18_jump:
		xor    %ebp,%ebp

	_016e1a_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016e26_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016e26_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016e1a_jump
		add    _016b50_switch,%edi
		add    _016b4c_switch,%esi
		cmp    %ebx,%edi
		jb     _016e18_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016e3f_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016e8b_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016b50_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016e61_jump
		inc    %edi
		mov    $0x000001,%al

	_016e61_jump:
		out    %al,(%dx)
		mov    _092134_data,%eax

	_016e67_jump:
		xor    %ebp,%ebp

	_016e69_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016e75_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016e75_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016e69_jump
		add    _016b50_switch,%edi
		add    _016b4c_switch,%esi
		cmp    %ebx,%edi
		jb     _016e67_jump

	_016e8b_jump:
		pop    %ebp

	_016e8c_jump:
		ret    



_016e8d_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092138_data
		jmp    _016ea5_jump

	_016e99_jump:
		call   _0166e2_func
		jb     _016f11_jump
		cmp    $0x000000,%cl
		jbe    _016f11_jump

	_016ea5_jump:
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092138_data,%edx
		xor    %eax,%eax

	_016eda_jump:
		xor    %ebp,%ebp

	_016edc_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016ef9_jump
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016edc_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016eda_jump
		pop    %ebp
		ret    

	_016ef9_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		cmp    %ecx,%ebp
		jl     _016edc_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016eda_jump
		pop    %ebp

	_016f11_jump:
		ret    



_016f12_func:
		call   _0166e2_func
		jb     _016f6f_jump
		cmp    $0x000000,%cl
		jbe    _016f6f_jump
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092138_data,%edx

	_016f51_jump:
		xor    %ebp,%ebp

	_016f53_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _016f5d_jump
		mov    %al,(%edi,%ebp,1)

	_016f5d_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016f53_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016f51_jump
		pop    %ebp

	_016f6f_jump:
		ret    



_016f71_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092138_data
		jmp    _016f89_jump

	_016f7d_jump:
		call   _016798_func
		jb     _016ffc_jump
		cmp    $0x000000,%cl
		jbe    _016ffc_jump

	_016f89_jump:
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092138_data,%edx
		xor    %eax,%eax

	_016fbe_jump:
		xor    %ebp,%ebp
		push   %edi

	_016fc1_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016fe1_jump
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016fc1_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016fbe_jump
		pop    %ebp
		ret    

	_016fe1_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		cmp    %ecx,%ebp
		jl     _016fc1_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016fbe_jump
		pop    %ebp

	_016ffc_jump:
		ret    



_016ffd_func:
		call   _016798_func
		jb     _01705e_jump
		cmp    $0x000000,%cl
		jbe    _01705e_jump
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092138_data,%edx

	_01703c_jump:
		xor    %ebp,%ebp
		push   %edi

	_01703f_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _01704a_jump
		mov    %al,-0x000001(%edi,%ecx,1)

	_01704a_jump:
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _01703f_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _01703c_jump
		pop    %ebp

	_01705e_jump:
		ret    



_01705f_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092134_data
		call   _0166e2_func
		jb     _0170fd_jump
		cmp    $0x000000,%cl
		jbe    _0170fe_jump
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092138_data,%edx
		mov    _092134_data,%ah

	_0170b9_jump:
		xor    %ebp,%ebp

	_0170bb_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _0170da_jump
		or     %ah,%al
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _0170bb_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _0170b9_jump
		pop    %ebp
		ret    

	_0170da_jump:
		and    $0x0000ff,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		mov    _092134_data,%ah
		cmp    %ecx,%ebp
		jl     _0170bb_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _0170b9_jump
		pop    %ebp

	_0170fd_jump:
		ret    

	_0170fe_jump:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092134_data
		call   _016798_func
		jb     _0171a3_jump
		cmp    $0x000000,%cl
		jbe    _0171a3_jump
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092138_data,%edx
		mov    _092134_data,%ah

	_017158_jump:
		xor    %ebp,%ebp
		push   %edi

	_01715b_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _01717d_jump
		or     %ah,%al
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _01715b_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _017158_jump
		pop    %ebp
		ret    

	_01717d_jump:
		and    $0x0000ff,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		mov    _092134_data,%ah
		cmp    %ecx,%ebp
		jl     _01715b_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _017158_jump
		pop    %ebp

	_0171a3_jump:
		ret    

_0171a4_switch:
		.long   0




_0171a8_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_0171a4_switch
		cmp    _0165f9_jump,%eax
		jl     _0171f5_jump
		add    %eax,%edx
		cmp    _0165fd_jump,%edx
		ja     _0171e1_jump
		shr    $0x000002,%cl

	_0171c7_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _016601_switch,%ebx
		jl     _01722f_jump

	_0171d3_jump:
		add    %ebx,%edx
		cmp    _016605_jump,%edx
		ja     _01721b_jump

	_0171dd_jump:
		clc    
		ret    

	_0171df_jump:
		stc    
		ret    

	_0171e1_jump:
		cmp    _0165fd_jump,%eax
		jae    _0171df_jump
		mov    _0165fd_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _017269_jump

	_0171f5_jump:
		push   %eax
		sub    _0165f9_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0171df_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    %eax,%edx
		pop    %eax
		add    %edx,%eax
		add    %edx,0x000004(%esp)
		add    %edx,%esi
		shr    $0x000002,%cl
		jmp    _0171c7_jump

	_01721b_jump:
		cmp    _016605_jump,%ebx
		jae    _0171df_jump
		mov    _016605_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0171dd_jump

	_01722f_jump:
		add    %ebx,%edx
		cmp    _016601_switch,%edx
		jle    _0171df_jump
		sub    _016601_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _0171a4_switch,%eax
		mul    %bx
		add    %eax,%esi
		add    %eax,0x000008(%esp)
		pop    %eax
		mov    _016601_switch,%ebx
		jmp    _0171d3_jump

	_017269_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _0171c7_jump
		inc    %cl
		jmp    _0171c7_jump



_017281_func:
		sub    $0x00000c,%esp
		mov    %edx,(%esp)
		call   _0171a8_func
		jb     _0172fa_jump
		cmp    $0x000000,%cl
		jbe    _0172fa_jump
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		mov    %ebx,0x000004(%esp)
		add    %eax,%edi
		mov    (%esp),%edx
		and    $0x0000ff,%ecx
		push   %ebp
		xor    %ebx,%ebx

	_0172c9_jump:
		xor    %ebp,%ebp

	_0172cb_jump:
		mov    (%esi,%ebp,4),%eax
		cmp    $0x000000,%eax
		je     _0172dc_jump
		mov    (%edx,%ebp,4),%ebx
		and    %ebx,(%edi,%ebp,4)
		or     %eax,(%edi,%ebp,4)

	_0172dc_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _0172cb_jump
		add    $0x000140,%edi
		add    _0171a4_switch,%esi
		add    _0171a4_switch,%edx
		cmp    0x000008(%esp),%edi
		jb     _0172c9_jump
		pop    %ebp

	_0172fa_jump:
		add    $0x00000c,%esp
		ret    



_0172fe_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_017304_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		je     _017304_jump
		pop    %eax
		pop    %edx
		ret    



_01730e_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_017314_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		jne    _017314_jump
		pop    %eax
		pop    %edx
		ret    



_01731e_func:
		push   %eax
		in     $0x000061,%al
		or     $0x000003,%al
		out    %al,$0x000061
		movl   $0x00ffff,_09213c_data
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    _09213c_data,%eax
		out    %al,$0x000042
		mov    %ah,%al
		out    %al,$0x000042
		pop    %eax
		ret    



_017340_func:
		push   %eax
		in     $0x000061,%al
		and    $0x0000fc,%al
		out    %al,$0x000061
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    $0x000000,%al
		out    %al,$0x000042
		out    %al,$0x000042
		pop    %eax
		ret    

_017353_switch:
		.long   0

_017357_switch:
		.long   0




_01735b_func:
		push   %ebx
		mov    $0x000080,%eax
		out    %al,$0x000043
		nop
		in     $0x000042,%al
		mov    %al,%ah
		in     $0x000042,%al
		xchg   %al,%ah
		mov    _09213c_data,%ebx
		sub    %eax,%ebx
		mov    %ebx,%eax
		cmp    _017353_switch,%eax
		jg     _017396_jump
		jne    _01738a_jump
		movl   $0x000000,_09213c_data

	_01738a_jump:
		mov    _09213c_data,%ebx
		add    %ebx,_017357_switch

	_017396_jump:
		mov    %eax,_017353_switch
		add    _017357_switch,%eax
		pop    %ebx
		ret    



_0173a3_func:
		mov    $0xffffffff,%ecx
		cmpl   $0x000000,_09213c_data
		jne    _0173b2_jump
		inc    %ecx

	_0173b2_jump:
		call   _01735b_func
		inc    %ecx
		cmp    %ebx,%eax
		jle    _0173b2_jump
		ret    



_0173bd_func:
		movl   $0x000000,_017357_switch
		movl   $0x000000,_017353_switch
		ret    



_0173e0_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %ebx,%edi
		xor    %ah,%ah
		xor    %dh,%dh
		and    $0x00000f,%al
		and    $0x00000f,%dl
		mov    %ax,_0ce848_data
		mov    %dx,_0ce84a_data
		mov    _0ce848_data,%esi
		mov    $0x000010,%ebx
		sar    $0x000010,%esi
		sub    %esi,%ebx
		lea    0x000000(,%ebx,4),%ebp
		add    %ebx,%ebp
		mov    _0ce846_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cd000_data,%edx
		sub    %eax,%edx
		movswl %di,%eax
		add    $0x000010,%eax
		sub    %ebx,%eax
		mov    %eax,_0ce850_data
		movswl %cx,%eax
		add    $0x000010,%eax
		sub    %esi,%eax
		shl    $0x000004,%ebp
		mov    %eax,_0ce854_data
		mov    _0ce850_data,%eax
		add    %edx,%ebp
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0c94e8_data,%ebx
		shr    $0x000002,%ebx
		imul   %edx,%ebx
		mov    _0ce850_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    _0c94dc_data,%eax
		mov    _0c94e4_data,%ecx
		add    %eax,%ebx
		mov    _0ce854_data,%eax
		imul   %ecx,%eax
		add    %eax,%ebx
		mov    _0ce848_data,%ax
		xor    %ah,%ah
		and    $0x000003,%al
		movswl %ax,%ecx
		mov    $0x000003,%eax
		sub    %ecx,%eax
		sub    $0x0004ff,%ebp
		mov    %eax,%ecx
		mov    $0x000001,%eax
		mov    %ebp,_0ce84c_data
		shl    %cl,%eax
		mov    %ebx,_0ce858_data
		mov    %eax,_0ce85c_data
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0174d4_func:
		push   %edx
		mov    %al,%dl
		cmpb   $0x000000,_0ce86d_data
		je     _0174f1_jump
		xor    %eax,%eax
		mov    _0c2612_data,%al
		cmp    $0x000001,%eax
		je     _0174f1_jump
		call   _069334_func

	_0174f1_jump:
		mov    $_0c695c_data,%eax
		call   _03e724_func
		cmpb   $0x000000,_0c2612_data
		jne    _017519_jump
		call   _04fde8_func
		cmpb   $0x000000,_0c2612_data
		jne    _01751e_jump
		call   _04ff7c_func
		jmp    _01751e_jump

	_017519_jump:
		call   _0509a0_func

	_01751e_jump:
		call   _043c70_func
		test   %dl,%dl
		jne    _017531_jump
		mov    $_0ce580_data,%eax
		call   _051cfc_func

	_017531_jump:
		pop    %edx
		ret    



_017534_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,0x000004(%esp)
		movb   $0x000001,_0c11ae_data
		call   _050b30_func

	_01754d_jump:
		xor    %eax,%eax
		mov    _0c2502_data,%al
		test   %eax,%eax
		je     _0179bf_jump
		cmpw   $0x000000,_0c251c_data
		jne    _0179bf_jump
		cmpw   $0x000000,_0c251e_data
		jne    _0179bf_jump
		xor    %eax,%eax
		mov    _0cdb18_data,%al
		cmp    $0x000002,%eax
		je     _0179bf_jump
		cmpb   $0x000000,_0c6b77_data
		je     _017596_jump
		call   _0172fe_func

	_017596_jump:
		cmpb   $0x000000,_0c6b76_data
		je     _0175a7_jump
		call   _01735b_func
		mov    %eax,(%esp)

	_0175a7_jump:
		cmpb   $0x000000,_0c6b76_data
		je     _0175bc_jump
		mov    (%esp),%edx
		movzwl _0c6b74_data,%ebp
		add    %edx,%ebp

	_0175bc_jump:
		call   _04a6e4_func
		cmpw   $0x000000,_0c1b24_data
		jne    _0175d0_jump
		call   _03a080_func

	_0175d0_jump:
		call   _039288_func
		cmpw   $0x000000,_095b30_data
		jne    _01763e_jump
		cmpw   $0x000000,_0ce816_data
		jne    _01763e_jump
		mov    _0ce534_data,%eax
		mov    _0ce534_data,%edi
		mov    _0ce53c_data,%ebx
		shl    $0x000008,%eax
		shl    $0x000006,%edi
		mov    _0cdf2c_data,%esi
		add    %eax,%edi
		mov    _095afc_data,%ecx
		add    %ebx,%edi
		xor    %edx,%edx
		add    %edi,%esi
		add    %ecx,%edi
		mov    _0ce540_data,%ecx
		mov    _0ce538_data,%eax
		sub    %ebx,%ecx
		mov    _0ce534_data,%ebx
		mov    _0ce81d_data,%dl
		sub    %ebx,%eax
		cmp    $0x000001,%edx
		jne    _01767e_jump
		call   *_0cdf44_data
		jmp    _017683_jump

	_01763e_jump:
		xor    %eax,%eax
		mov    _0ce81d_data,%al
		cmp    $0x000001,%eax
		jne    _017668_jump
		mov    $0x000140,%ecx
		mov    _0ce538_data,%eax
		mov    _095afc_data,%edi
		mov    _0cdf2c_data,%esi
		call   *_0cdf44_data
		jmp    _017683_jump

	_017668_jump:
		mov    $0x000140,%ecx
		mov    _0ce538_data,%eax
		mov    _095afc_data,%edi
		mov    _0cdf2c_data,%esi

	_01767e_jump:
		call   _0152a8_func

	_017683_jump:
		cmpb   $0x000000,_0c6b76_data
		je     _017691_jump
		call   _01735b_func

	_017691_jump:
		cmpb   $0x000000,_0c697c_data
		je     _01769f_jump
		call   _0695e4_func

	_01769f_jump:
		xor    %eax,%eax
		mov    _0ce81d_data,%al
		test   %eax,%eax
		jne    _0176af_jump
		call   _03e3d0_func

	_0176af_jump:
		mov    _0c6b7e_data,%dl
		inc    %dl
		xor    %ecx,%ecx

	_0176b9_jump:
		dec    %dl
		cmp    $0x0000ff,%dl
		je     _0176c9_jump
		mov    %ecx,%eax
		call   _0174d4_func
		jmp    _0176b9_jump

	_0176c9_jump:
		cmpb   $0x000000,_0c6b76_data
		je     _0176d7_jump
		call   _01735b_func

	_0176d7_jump:
		call   _043ce8_func
		cmpb   $0x000000,_095b32_data
		je     _017749_jump
		cmpb   $0x000000,_0ce86f_data
		je     _017749_jump
		mov    _0c24aa_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c94e2_data,%bx
		mov    _0c94e0_data,%dx
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		call   _06d938_func
		xor    %eax,%eax
		mov    _0ce534_data,%cx
		mov    _0ce538_data,%ax
		xor    %ebx,%ebx
		push   %eax
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ce540_data,%ax
		mov    _0ce53c_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0c94e2_data,%dx
		mov    _0c94e0_data,%ax
		call   _06ccb8_func
		jmp    _01775b_jump

	_017749_jump:
		mov    _0cd000_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e88,%ecx
		rep stos %eax,%es:(%edi)

	_01775b_jump:
		cmpw   $0x000000,_0c51d2_data
		je     _01778c_jump
		mov    _0ce540_data,%edx
		mov    _0ce53c_data,%ecx
		mov    _0ce538_data,%ebx
		mov    _0ce534_data,%eax
		sub    $0x000004,%edx
		sub    $0x000006,%ebx
		call   _015b0c_func
		call   _019abc_func

	_01778c_jump:
		mov    $_0ce580_data,%edx
		mov    _0cdf2c_data,%eax
		call   _0524d0_func
		call   _01ada8_func
		cmpb   $0x000000,_0c6b76_data
		je     _0177ae_jump
		call   _01735b_func

	_0177ae_jump:
		call   _0197b4_func
		cmpb   $0x000000,_0c6b76_data
		je     _0177c1_jump
		call   _01735b_func

	_0177c1_jump:
		call   _01a0e8_func
		xor    %eax,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    _0ce538_data,%ax
		xor    %edx,%edx
		push   %eax
		xor    %eax,%eax
		mov    _0ce534_data,%cx
		mov    _0ce540_data,%ax
		mov    _0ce53c_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0c94e2_data,%dx
		mov    _0c94e0_data,%ax
		call   _06d5d8_func
		cmpw   $0x000000,_0c51d2_data
		je     _01780f_jump
		call   _019ecc_func

	_01780f_jump:
		mov    _0cdf2c_data,%eax
		call   _044164_func
		mov    _0cdf2c_data,%edx
		mov    _0ce534_data,%eax
		mov    _0ce53c_data,%ecx
		shl    $0x000008,%eax
		add    %ecx,%edx
		add    %eax,%edx
		mov    _0ce534_data,%eax
		shl    $0x000006,%eax
		add    %edx,%eax
		sub    $0x000004,%eax
		mov    %eax,_0ce56c_data
		mov    _0ce540_data,%eax
		mov    _0ce534_data,%edi
		sub    %ecx,%eax
		mov    _0ce538_data,%ecx
		lea    0x000004(%eax),%edx
		sub    %edi,%ecx
		mov    _0ce56c_data,%edi
		call   _0152d3_func
		cmpb   $0x000000,_0c3324_data
		je     _017876_jump
		call   _01ae74_func
		jmp    _017880_jump

	_017876_jump:
		mov    _0c4768_data,%eax
		call   _019268_func

	_017880_jump:
		mov    _0c4768_data,%eax
		call   _01b50c_func
		cmpb   $0x000000,_0cd10f_data
		je     _017898_jump
		call   _033db8_func

	_017898_jump:
		mov    $0x000001,%eax
		call   _03dffc_func
		test   %al,%al
		je     _0178d6_jump
		cmpw   $0x000000,_0c1b24_data
		jne    _0178d6_jump
		cmpb   $0x000000,_0ce815_data
		jne    _0178d6_jump
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		je     _0178d6_jump
		cmpb   $0x000000,_0cdb18_data
		jne    _0178d6_jump
		movb   $0x000001,_0ce815_data

	_0178d6_jump:
		call   _03e0a4_func
		test   %ax,%ax
		jne    _017926_jump
		call   _03e030_func
		test   %ax,%ax
		jne    _017926_jump
		call   _03e118_func
		test   %ax,%ax
		jne    _017926_jump
		call   _03e18c_func
		test   %ax,%ax
		jne    _017926_jump
		call   _03e200_func
		test   %ax,%ax
		jne    _017926_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _017926_jump
		call   _03e2d0_func
		test   %ax,%ax
		jne    _017926_jump
		call   _03e338_func
		test   %ax,%ax
		je     _01792d_jump

	_017926_jump:
		xor    %eax,%eax
		mov    %eax,_0ce908_data

	_01792d_jump:
		mov    _0ce908_data,%edx
		inc    %edx
		mov    %edx,_0ce908_data
		cmp    $0x005460,%edx
		jl     _017952_jump
		mov    $0x000001,%ah
		xor    %ecx,%ecx
		mov    %ah,_0c6994_data
		mov    %ecx,_0ce908_data

	_017952_jump:
		cmpb   $0x000000,_0c6994_data
		je     _017960_jump
		call   _036530_func

	_017960_jump:
		mov    0x000004(%esp),%eax
		call   _035270_func
		cmpb   $0x000000,_0c6b76_data
		je     _01754d_jump
		mov    %ebp,%ebx
		call   _0173a3_func
		test   %ecx,%ecx
		jne    _01754d_jump
		mov    $0x000001,%eax
		call   _0174d4_func
		mov    _0c1ba0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0179a3_jump
		incw   _0c1ba2_data

	_0179a3_jump:
		call   _044224_func
		cmpb   $0x000000,_0c6b77_data
		je     _01754d_jump
		call   _01730e_func
		jmp    _01754d_jump

	_0179bf_jump:
		xor    %bh,%bh
		mov    %bh,_0c11ae_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0179d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0ce86d_data
		je     _0179f2_jump
		xor    %eax,%eax
		mov    _0c2612_data,%al
		cmp    $0x000001,%eax
		je     _0179f2_jump
		call   _069334_func

	_0179f2_jump:
		mov    $_0c695c_data,%eax
		call   _03e724_func
		cmpb   $0x000000,_0c2612_data
		jne    _017a1a_jump
		call   _04fde8_func
		cmpb   $0x000000,_0c2612_data
		jne    _017a1f_jump
		call   _04ff7c_func
		jmp    _017a1f_jump

	_017a1a_jump:
		call   _0509a0_func

	_017a1f_jump:
		cmpb   $0x000000,_0c2612_data
		jne    _017a50_jump
		mov    _0c24b0_data,%ecx
		mov    _0c24ae_data,%ebx
		mov    _0c24ac_data,%edx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03860c_func

	_017a50_jump:
		cmpb   $0x000000,_0ce86f_data
		je     _017a79_jump
		call   _044964_func
		mov    _0c94ce_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _017a82_jump
		mov    _0c94e2_data,%ax
		add    %ax,_0c94d0_data
		jmp    _017a82_jump

	_017a79_jump:
		xor    %edx,%edx
		mov    %dx,_0c94d0_data

	_017a82_jump:
		cmpb   $0x000000,_095b32_data
		je     _017ad4_jump
		cmpb   $0x000000,_0ce86f_data
		je     _017ad4_jump
		mov    _0c24aa_data,%esi
		sar    $0x000010,%esi
		mov    $0x000003,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0c94e0_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0c94ce_data,%ecx
		sar    $0x000010,%ecx
		movswl %dx,%ebx
		mov    _0c24ac_data,%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		jmp    _017ae9_jump

	_017ad4_jump:
		mov    _0c24ac_data,%edx
		mov    _0c24aa_data,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax

	_017ae9_jump:
		call   _0173e0_func
		mov    _0c24ac_data,%edx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _038e64_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_017b0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebp
		movb   $0x000001,_0c11ae_data
		call   _050b30_func

	_017b23_jump:
		xor    %eax,%eax
		mov    _0c2502_data,%al
		test   %eax,%eax
		je     _017dda_jump
		cmpw   $0x000000,_0c251c_data
		jne    _017dda_jump
		cmpw   $0x000000,_0c251e_data
		jne    _017dda_jump
		xor    %eax,%eax
		mov    _0cdb18_data,%al
		cmp    $0x000002,%eax
		je     _017dda_jump
		call   _037fc0_func
		cmpb   $0x000000,_0c6b76_data
		je     _017b74_jump
		call   _01735b_func
		mov    %eax,(%esp)

	_017b74_jump:
		cmpb   $0x000000,_0c6b76_data
		je     _017b8b_jump
		xor    %esi,%esi
		mov    (%esp),%edx
		mov    _0c6b74_data,%si
		add    %edx,%esi

	_017b8b_jump:
		call   _04a6e4_func
		cmpw   $0x000000,_0c1b24_data
		jne    _017b9f_jump
		call   _03a080_func

	_017b9f_jump:
		call   _039288_func
		cmpb   $0x000000,_0c697c_data
		je     _017bb2_jump
		call   _0695e4_func

	_017bb2_jump:
		cmpl   $0x000001,_0c4764_data
		jne    _017bd1_jump
		mov    _0c24ac_data,%edx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0382a8_func

	_017bd1_jump:
		call   _03e3d0_func
		mov    _0c6b7e_data,%dl
		inc    %dl

	_017bde_jump:
		dec    %dl
		cmp    $0x0000ff,%dl
		je     _017bec_jump
		call   _0179d4_func
		jmp    _017bde_jump

	_017bec_jump:
		cmpb   $0x000000,_0c6b76_data
		je     _017bfa_jump
		call   _01735b_func

	_017bfa_jump:
		cmpb   $0x000000,_095b32_data
		je     _017c24_jump
		cmpb   $0x000000,_0ce86f_data
		je     _017c24_jump
		mov    _0c24ac_data,%edx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0388cc_func
		jmp    _017c41_jump

	_017c24_jump:
		mov    _0cd000_data,%edi
		mov    $0x0003ce,%edx
		mov    $0x000a04,%ax
		out    %ax,(%dx)
		mov    $0x000000,%eax
		mov    $0x000fa0,%ecx
		rep stos %eax,%es:(%edi)

	_017c41_jump:
		cmpw   $0x000000,_0c51d2_data
		je     _017c50_jump
		call   _019abc_func

	_017c50_jump:
		mov    _0c24ac_data,%edx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _038988_func
		call   _01ada8_func
		cmpb   $0x000000,_0c6b76_data
		je     _017c79_jump
		call   _01735b_func

	_017c79_jump:
		call   _0197b4_func
		cmpb   $0x000000,_0c6b76_data
		je     _017c8c_jump
		call   _01735b_func

	_017c8c_jump:
		call   _01a0e8_func
		cmpw   $0x000000,_0c51d2_data
		je     _017ca0_jump
		call   _019ecc_func

	_017ca0_jump:
		cmpb   $0x000000,_0c3324_data
		je     _017cb0_jump
		call   _01ae74_func
		jmp    _017cba_jump

	_017cb0_jump:
		mov    _0c4768_data,%eax
		call   _019268_func

	_017cba_jump:
		mov    _0c4768_data,%eax
		call   _01b50c_func
		cmpb   $0x000000,_0ce860_data
		je     _017cda_jump
		mov    _0cd000_data,%edi
		call   _0147b5_func
		jmp    _017ce5_jump

	_017cda_jump:
		mov    _0cd000_data,%edi
		call   _01474b_func

	_017ce5_jump:
		cmpb   $0x000000,_0cd10f_data
		je     _017cf3_jump
		call   _033db8_func

	_017cf3_jump:
		call   _03e0a4_func
		test   %ax,%ax
		jne    _017d43_jump
		call   _03e030_func
		test   %ax,%ax
		jne    _017d43_jump
		call   _03e118_func
		test   %ax,%ax
		jne    _017d43_jump
		call   _03e18c_func
		test   %ax,%ax
		jne    _017d43_jump
		call   _03e200_func
		test   %ax,%ax
		jne    _017d43_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _017d43_jump
		call   _03e2d0_func
		test   %ax,%ax
		jne    _017d43_jump
		call   _03e338_func
		test   %ax,%ax
		je     _017d4b_jump

	_017d43_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0ce908_data

	_017d4b_jump:
		mov    _0ce908_data,%edi
		inc    %edi
		mov    %edi,_0ce908_data
		cmp    $0x005460,%edi
		jl     _017d70_jump
		mov    $0x000001,%bh
		xor    %edx,%edx
		mov    %bh,_0c6994_data
		mov    %edx,_0ce908_data

	_017d70_jump:
		cmpb   $0x000000,_0c6994_data
		je     _017d87_jump
		cmpb   $0x000000,_0ce815_data
		jne    _017d87_jump
		call   _036530_func

	_017d87_jump:
		mov    %ebp,%eax
		call   _035270_func
		cmpb   $0x000000,_0c6b76_data
		je     _017b23_jump
		mov    %esi,%ebx
		call   _0173a3_func
		test   %ecx,%ecx
		jne    _017b23_jump
		call   _0179d4_func
		mov    _0c1ba0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _017dc3_jump
		incw   _0c1ba2_data

	_017dc3_jump:
		cmpb   $0x000000,_0c6b77_data
		je     _017b23_jump
		call   _01730e_func
		jmp    _017b23_jump

	_017dda_jump:
		xor    %dl,%dl
		mov    %dl,_0c11ae_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_017f58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		call   _074b70_func
		mov    $0x3eb00000,%ecx
		mov    %eax,%esi
		xor    %ebx,%ebx
		call   _07956f_func
		call   _07975f_func
		push   %edx
		push   %eax
		push   $_0bf64c_data
		call   _0798fc_func
		mov    _0ce870_data,%al
		add    $0x00000c,%esp
		cmp    $0x000081,%al
		jb     _01801e_jump
		jbe    _017fb3_jump
		cmp    $0x000082,%al
		jbe    _017fc2_jump
		cmp    $0x000083,%al
		je     _017fe0_jump
		jmp    _01802a_jump

	_017fa1_jump:
		push   $_0bf66f_data
		call   _0798fc_func
		add    $0x000004,%esp
		jmp    _01802a_jump

	_017fb3_jump:
		push   $_0bf685_data
		call   _0798fc_func
		add    $0x000004,%esp
		jmp    _01802a_jump

	_017fc2_jump:
		push   $_0bf6a2_data
		call   _0798fc_func
		add    $0x000004,%esp
		jmp    _01802a_jump

	_017fd1_jump:
		push   $_0bf6c3_data
		call   _0798fc_func
		add    $0x000004,%esp
		jmp    _01802a_jump

	_017fe0_jump:
		xor    %eax,%eax
		mov    _0ce871_data,%al
		cmp    $0x000004,%eax
		jne    _018005_jump
		xor    %edx,%edx
		mov    _0ce872_data,%dl
		push   %edx
		push   %eax
		push   $_0bf6e0_data
		call   _0798fc_func
		add    $0x00000c,%esp
		jmp    _01802a_jump

	_018005_jump:
		xor    %edx,%edx
		mov    _0ce872_data,%dl
		push   %edx
		push   %eax
		push   $_0bf6f6_data
		call   _0798fc_func
		add    $0x00000c,%esp
		jmp    _01802a_jump

	_01801e_jump:
		test   %al,%al
		jbe    _017fa1_jump
		cmp    $0x000001,%al
		je     _017fd1_jump

	_01802a_jump:
		xor    %ah,%ah
		mov    %ah,_0ce860_data
		cmp    $0x200000,%esi
		jae    _018044_jump
		mov    $_0bf711_data,%eax
		call   _01f878_func

	_018044_jump:
		cmp    $0x400000,%esi
		jae    _0180b8_jump
		mov    $0x000001,%bl
		mov    $0x007000,%ebp
		mov    $0x04ec00,%eax
		xor    %dl,%dl
		mov    $0x0d0400,%ecx
		mov    %dl,_0cdf40_data
		mov    %dl,_0cdf90_data
		mov    %bl,_0ce86d_data
		mov    %bl,_0ce86e_data
		mov    %dl,_0ce86c_data
		mov    %dl,_0ce86f_data
		mov    %bl,_095b01_data
		mov    %dl,_0ce860_data
		mov    %ebp,_0c6b5c_data
		mov    %eax,_0c6b60_data
		mov    %ecx,_0c6b6c_data
		mov    $0x062c00,%edx
		mov    $0x032800,%ebx
		mov    %edx,_0c6b64_data
		mov    %ebx,_0c6b68_data
		jmp    _018123_jump

	_0180b8_jump:
		mov    $0x000001,%dl
		mov    $0x04ec00,%ebx
		mov    $0x0f4c00,%ecx
		mov    $0x047c00,%esi
		mov    $0x0d0400,%edi
		mov    %dl,_0cdf40_data
		mov    %ebx,_0c6b60_data
		mov    %ecx,_0c6b64_data
		xor    %dh,%dh
		mov    %esi,_0c6b68_data
		mov    %dh,_0cdf90_data
		mov    %dl,_0ce86d_data
		mov    %dl,_0ce86e_data
		mov    %dh,_0ce86c_data
		mov    %dl,_0ce86f_data
		mov    %dh,_095b01_data
		mov    %dl,_0ce860_data
		mov    $0x021000,%edx
		mov    %edi,_0c6b6c_data
		mov    %edx,_0c6b5c_data

	_018123_jump:
		cmpb   $0x000000,_0ce86d_data
		je     _01815a_jump
		call   _078cb0_func
		test   %eax,%eax
		je     _018143_jump
		xor    %dh,%dh
		mov    %dh,_0ce86e_data
		mov    %dh,_0ce86d_data

	_018143_jump:
		call   _078d20_func
		test   %eax,%eax
		je     _01815a_jump
		xor    %bh,%bh
		mov    %bh,_0ce86e_data
		mov    %bh,_0ce86d_data

	_01815a_jump:
		push   $_0bf724_data
		call   _0798fc_func
		mov    _0cdf40_data,%ch
		add    $0x000004,%esp
		test   %ch,%ch
		je     _018178_jump
		push   $_0bf726_data
		jmp    _01817d_jump

	_018178_jump:
		push   $_0bf744_data

	_01817d_jump:
		call   _0798fc_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0ce86d_data
		je     _0181a5_jump
		cmpb   $0x000000,_0c697c_data
		je     _01819e_jump
		push   $_0bf75c_data
		jmp    _0181ba_jump

	_01819e_jump:
		push   $_0bf771_data
		jmp    _0181ba_jump

	_0181a5_jump:
		cmpb   $0x000000,_0c697c_data
		je     _0181b5_jump
		push   $_0bf78b_data
		jmp    _0181ba_jump

	_0181b5_jump:
		push   $_0bf7a5_data

	_0181ba_jump:
		call   _0798fc_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0ce86f_data
		je     _0181da_jump
		push   $_0bf7bd_data
		call   _0798fc_func
		add    $0x000004,%esp
		jmp    _0181e7_jump

	_0181da_jump:
		push   $_0bf7d4_data
		call   _0798fc_func
		add    $0x000004,%esp

	_0181e7_jump:
		push   $_0bf7e4_data
		mov    $0x000064,%esi
		call   _0798fc_func
		xor    %edx,%edx
		add    $0x000004,%esp

	_0181fb_jump:
		call   _07991e_func
		test   %eax,%eax
		je     _018214_jump

	_018204_jump:
		call   _07991e_func
		test   %eax,%eax
		je     _018223_jump
		call   _079935_func
		jmp    _018204_jump

	_018214_jump:
		mov    %esi,%eax
		inc    %edx
		call   _079952_func
		cmp    $0x000028,%edx
		jl     _0181fb_jump
		jmp    _018204_jump

	_018223_jump:
		push   $_0bf7e6_data
		call   _0798fc_func
		add    $0x000004,%esp
		call   _01823c_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01823c_func:
		push   %edx
		mov    $0x000300,%edx
		mov    $0x000010,%eax
		call   _07538c_func
		mov    %eax,_0c919c_data
		test   %eax,%eax
		jne    _01825f_jump
		mov    $_0bf7e8_data,%eax
		call   _01f878_func

	_01825f_jump:
		mov    $0x000008,%edx
		mov    $0x000200,%eax
		call   _07538c_func
		mov    %eax,_0c51d4_data
		test   %eax,%eax
		jne    _018281_jump
		mov    $_0bf808_data,%eax
		call   _01f878_func

	_018281_jump:
		mov    _0cdf40_data,%ah
		test   %ah,%ah
		sete   %al
		mov    %al,_095b01_data
		pop    %edx
		ret    



_018294_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		call   _03a354_func
		mov    $0x0b8000,%edx
		push   $_0bf857_data
		mov    $_0bf828_data,%ebp
		mov    $_0bf835_data,%ebx
		call   _0798fc_func
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		add    $0x000004,%esp

	_0182c6_jump:
		add    $0x000002,%edx
		movb   $0x00001e,-0x000001(%edx)
		cmp    $0x0b80a0,%edx
		jne    _0182c6_jump
		mov    (%esp),%ebx
		mov    %ebp,%esi
		xor    %edx,%edx
		jmp    _0182e8_jump

	_0182de_jump:
		add    $0x000002,%ebx
		mov    (%esi),%cl
		inc    %esi
		inc    %edx
		mov    %cl,-0x000002(%ebx)

	_0182e8_jump:
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%edx
		jb     _0182de_jump
		mov    (%esp),%edx
		mov    0x000004(%esp),%esi
		xor    %ebx,%ebx
		jmp    _018316_jump

	_018303_jump:
		mov    (%esi),%cl
		mov    0x00005f(%edx),%ah
		add    $0x000002,%edx
		inc    %esi
		or     $0x000080,%ah
		mov    %cl,0x00005c(%edx)
		inc    %ebx
		mov    %ah,0x00005d(%edx)

	_018316_jump:
		mov    0x000004(%esp),%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%ebx
		jb     _018303_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018334_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    $_0bf85a_data,%eax
		mov    $_0ce872_data,%edx
		call   _079957_jump
		call   _018294_func
		mov    $_0ce871_data,%eax
		mov    $_0ce710_data,%edi
		call   _074a30_func
		mov    %al,_0ce870_data
		mov    $0x000001,%ah
		mov    (%esi),%esi
		mov    %ah,_0ce90c_data
		push   %edi

	_01836b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _018383_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _01836b_jump

	_018383_jump:
		pop    %edi
		call   _01838c_func
		pop    %edi
		pop    %esi
		ret    



_01838c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    %ah,(%esp)
		call   _061e38_func
		mov    _0ce90c_data,%al
		mov    %al,_0c697c_data
		test   %al,%al
		je     _0183bf_jump
		push   $_0bf865_data
		call   _0798fc_func
		add    $0x000004,%esp
		call   _069760_func

	_0183bf_jump:
		call   _017f58_func
		mov    $0x000001,%dh
		mov    $0x000140,%ebx
		mov    %dh,_0c6995_data
		call   _03e978_func
		mov    $_03e9b8_func,%eax
		xor    %ecx,%ecx
		call   _0799ad_func
		mov    $_017340_func,%eax
		mov    $0x0000c8,%edx
		call   _0799ad_func
		xor    %eax,%eax
		call   _01666f_func
		xor    %bl,%bl
		mov    %bl,_0cd106_data
		call   _04f8a4_func
		call   _034968_func
		call   _067f64_func
		call   _0345b0_func
		call   _044a20_func
		call   _034a70_func
		mov    $0x000003,%bh
		mov    _0c697c_data,%cl
		mov    %bh,_0cd102_data
		test   %cl,%cl
		je     _018435_jump
		call   _01cf64_func

	_018435_jump:
		mov    $0x000140,%ebp
		mov    $0x000001,%edi

	_01843f_jump:
		cmpb   $0x000000,_0c2596_data
		jne    _0186d2_jump
		call   _0352ec_jump
		call   _05ef08_func
		call   _051dd8_func
		call   _0341a8_func
		cmpb   $0x000000,_0c2595_data
		jne    _0186b6_jump

	_01846d_jump:
		mov    _0c24f6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _0186b6_jump
		cmpw   $0x000000,_0c251e_data
		je     _0186b6_jump
		call   _061e38_func
		call   _061780_func
		call   _016609_func
		call   _033aec_func
		mov    $0x0000c8,%edx
		mov    %ebp,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01666f_func
		call   _034e64_func
		cmpb   $0x000000,_0ce86d_data
		je     _0184d3_jump
		cmpb   $0x000000,_0ce86e_data
		jne    _0184d3_jump
		mov    _0c261c_data,%eax
		sar    $0x000010,%eax
		call   _078f64_func

	_0184d3_jump:
		cmpb   $0x000000,_0c2595_data
		jne    _018686_jump
		cmpw   $0x000000,_0c251e_data
		jne    _018686_jump
		cmpw   $0x000000,_0c251c_data
		je     _018686_jump
		call   _0173bd_func
		call   _034f74_func
		mov    %esp,%eax
		call   _034a10_func
		mov    _0c251a_data,%eax
		sar    $0x000010,%eax
		call   _04f9ec_func
		call   _036fa4_func
		call   _0713e8_func
		call   _0398d8_func
		cmpb   $0x000000,_0c2595_data
		jne    _018677_jump

	_018536_jump:
		mov    _0c251c_data,%si
		test   %si,%si
		jne    _018677_jump
		cmpw   $0x000000,_0c251e_data
		jne    _018677_jump
		call   _0352ec_jump
		call   _04fcd4_func
		call   _04fd20_func
		call   _0345e4_func
		xor    %eax,%eax
		mov    $0x000001,%bh
		mov    _095b01_data,%al
		mov    %bh,_0cdb18_data
		test   %eax,%eax
		jne    _0185be_jump
		call   _044c18_func
		xor    %eax,%eax
		mov    _0c7998_data,%al
		call   _03a364_func
		xor    %eax,%eax
		mov    _0ce81a_data,%al
		call   _044b60_func
		call   _052850_func
		mov    %esp,%eax
		mov    %si,_095b34_data
		mov    $0x000001,%esi
		call   _017534_func
		mov    %si,_095b34_data
		call   _0528b4_func
		jmp    _018636_jump

	_0185be_jump:
		call   _016609_func
		xor    %eax,%eax
		mov    _0c7998_data,%al
		call   _03a230_func
		xor    %eax,%eax
		mov    _0ce81a_data,%al
		call   _044b60_func
		mov    _0c24ac_data,%edx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0382a8_func
		mov    _0c94e8_data,%edx
		mov    _0c94e4_data,%ebx
		mov    _0c94dc_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %dx,_095b34_data
		call   _017b0c_func
		mov    _0c2595_data,%cl
		mov    %bx,_095b34_data
		test   %cl,%cl
		jne    _018636_jump
		call   _0394c8_func

	_018636_jump:
		cmpb   $0x000000,_0ce86d_data
		je     _018644_jump
		call   _067fc0_func

	_018644_jump:
		mov    $0x0000c8,%edx
		xor    %eax,%eax
		mov    %ebp,%ebx
		mov    _0c7998_data,%al
		xor    %ecx,%ecx
		call   _03a364_func
		xor    %eax,%eax
		call   _01666f_func
		call   _060240_func
		call   _0345e4_func
		cmpb   $0x000000,_0c2595_data
		je     _018536_jump

	_018677_jump:
		call   _04fbe8_func
		call   _0352ec_jump
		jmp    _0184d3_jump

	_018686_jump:
		cmpb   $0x000000,_0c697c_data
		je     _018694_jump
		call   _01cf64_func

	_018694_jump:
		call   _0352ec_jump
		cmpb   $0x000000,_0cdb18_data
		je     _0186a9_jump
		movb   $0x000001,_0c2595_data

	_0186a9_jump:
		cmpb   $0x000000,_0c2595_data
		je     _01846d_jump

	_0186b6_jump:
		call   _0352f0_func
		cmpb   $0x000000,_0cdb18_data
		je     _01843f_jump
		call   _0343f0_func
		jmp    _01843f_jump

	_0186d2_jump:
		cmpb   $0x000000,_0c697c_data
		je     _0186e0_jump
		call   _069798_func

	_0186e0_jump:
		cmpb   $0x000000,_0ce86d_data
		je     _0186f3_jump
		call   _067fc0_func
		call   _0791cc_func

	_0186f3_jump:
		call   _035310_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018710_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		mov    %bl,0x00000c(%esp)
		mov    %cl,0x000014(%esp)
		mov    _0c25d8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _0188d3_jump
		mov    _0c25da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _0188d3_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    _0c25ec_data,%edx
		movsbl (%ebx,%eax,1),%eax
		add    _0c25f0_data,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x00000e,%edx
		sbb    %edx,%eax
		sar    $0x00000e,%eax
		mov    _0c25dc_data,%di
		mov    %eax,%ecx
		mov    0x000028(%esi),%dx
		mov    _0c25da_data,%ax
		mov    0x00002c(%esi),%bx
		sub    %edx,%eax
		sub    %ebx,%edi
		shl    $0x000004,%eax
		shl    $0x000004,%edi
		mov    %ax,0x000004(%esp)
		test   %ax,%ax
		jne    _0187bd_jump
		test   %di,%di
		je     _0188d3_jump

	_0187bd_jump:
		test   %ecx,%ecx
		je     _0188d3_jump
		movswl %di,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _0187d0_jump
		neg    %eax

	_0187d0_jump:
		mov    %eax,%ebx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0187df_jump
		neg    %eax

	_0187df_jump:
		cmp    %ebx,%eax
		jge    _0187e5_jump
		mov    %ebx,%eax

	_0187e5_jump:
		mov    %eax,%edx
		mov    %ecx,%ebx
		cwtl   
		mov    $0x000004,%cl
		cmp    %ebx,%eax
		jle    _0187f2_jump
		mov    %ebx,%eax

	_0187f2_jump:
		mov    %eax,(%esp)
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		mov    (%esp),%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x000004(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000004,%cl
		mov    %ax,0x000008(%esp)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0188df_jump
		xor    %eax,%eax
		mov    $0x0000ff,%ebx
		mov    0x00000c(%esp),%al
		mov    0x00003e(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		mov    %edx,%ebx
		imul   %eax,%ebx
		mov    0x000006(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00000c(%esp),%al
		imul   %eax,%edx
		add    %ebx,%edx
		mov    $0x0000ff,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _018893_jump
		cmp    (%esp),%ebp
		jg     _018893_jump
		movb   $0x0000ff,0x000014(%esp)

	_018893_jump:
		xor    %eax,%eax
		mov    $0x0000ff,%ebx
		mov    0x000014(%esp),%al
		mov    0x000040(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		mov    %edx,%ebx
		imul   %eax,%ebx
		xor    %eax,%eax
		movswl %cx,%edx
		mov    0x000014(%esp),%al
		imul   %eax,%edx
		add    %ebx,%edx
		mov    $0x0000ff,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_0188d3_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_0188df_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0188e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0c25d8_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		cmp    $0xffff8300,%ebx
		jne    _01891e_jump
		mov    _0c25da_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffff8300,%ebx
		jne    _01891e_jump
		mov    0x000046(%edx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _018943_jump
		jmp    _01893e_jump

	_01891e_jump:
		mov    _0c25d8_data,%ebx
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jne    _018943_jump
		mov    _0c25da_data,%ebx
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%ebx
		cmp    %esi,%ebx
		jne    _018943_jump

	_01893e_jump:
		mov    $0x000001,%eax

	_018943_jump:
		test   %ax,%ax
		je     _01894f_jump
		movb   $0x000001,_0c25e4_data

	_01894f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0189c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ebx,%ebx
		mov    0x00002c(%eax),%cx
		mov    0x000069(%eax),%bl
		movzbw 0x000068(%eax),%si
		add    %ecx,%ebx
		mov    0x000028(%eax),%dx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%esi

	_0189e4_jump:
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_0921f8_data(%edx)
		jne    _018a21_jump
		mov    _0c2522_data,%edx
		sar    $0x000010,%edx
		movswl %bx,%ecx
		add    $0x0000c8,%edx
		cmp    %edx,%ecx
		jg     _018a21_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		jmp    _0189e4_jump

	_018a21_jump:
		and    $0x0000f0,%bl
		and    $0x00000f,%esi
		mov    %ebx,%ecx
		movswl %si,%edx
		and    $0x0000ff,%eax
		xor    %ebx,%ebx
		call   _023ee4_func
		add    %ecx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018a40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c2526_data,%dx
		mov    _0c25d4_data,%bx
		mov    _0c25d2_data,%cx
		mov    _0c2524_data,%di
		xor    %eax,%eax
		mov    _095b01_data,%al
		test   %eax,%eax
		jne    _018acc_jump
		mov    _0ce53c_data,%eax
		neg    %eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _018a89_jump
		mov    _0ce53c_data,%cx
		neg    %ecx
		add    $0x000008,%ecx

	_018a89_jump:
		movswl %dx,%eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _018a9b_jump
		mov    %edx,%ecx
		add    $0x000008,%ecx

	_018a9b_jump:
		mov    _0ce53c_data,%eax
		neg    %eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _018ab8_jump
		mov    _0ce53c_data,%bx
		neg    %ebx
		add    $0x000008,%ebx

	_018ab8_jump:
		movswl %dx,%eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _018aec_jump
		mov    %edx,%ebx
		add    $0x000008,%ebx
		jmp    _018aec_jump

	_018acc_jump:
		movswl %cx,%eax
		test   %eax,%eax
		jge    _018ad5_jump
		xor    %ecx,%ecx

	_018ad5_jump:
		cmp    %dx,%cx
		jle    _018adc_jump
		mov    %edx,%ecx

	_018adc_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _018ae5_jump
		xor    %ebx,%ebx

	_018ae5_jump:
		cmp    %dx,%bx
		jle    _018aec_jump
		mov    %edx,%ebx

	_018aec_jump:
		mov    _0c25d4_data,%esi
		mov    _0ce534_data,%eax
		sar    $0x000010,%esi
		neg    %eax
		cmp    %eax,%esi
		jge    _018b0e_jump
		mov    _0ce534_data,%ax
		neg    %eax
		mov    %ax,_0c25d6_data

	_018b0e_jump:
		mov    _0c25d6_data,%ax
		cmp    %di,%ax
		jle    _018b20_jump
		mov    %di,_0c25d6_data

	_018b20_jump:
		mov    _0c25d6_data,%esi
		mov    _0ce534_data,%eax
		sar    $0x000010,%esi
		neg    %eax
		cmp    %eax,%esi
		jge    _018b42_jump
		mov    _0ce534_data,%ax
		neg    %eax
		mov    %ax,_0c25d8_data

	_018b42_jump:
		mov    _0c25d8_data,%ax
		cmp    %di,%ax
		jle    _018b54_jump
		mov    %di,_0c25d8_data

	_018b54_jump:
		mov    %di,_0c2524_data
		mov    %cx,_0c25d2_data
		mov    %bx,_0c25d4_data
		mov    %dx,_0c2526_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018b80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ebp),%eax
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		and    $0x00003f,%dh
		mov    %dx,0x000010(%esp)
		mov    0x00000e(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006b(%ebp),%dl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,0x000004(%esp)
		xor    %edx,%edx
		mov    _0cd000_data,%eax
		mov    %edx,0x000014(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _018cd5_jump

	_018bdf_jump:
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		cmp    $0x000100,%eax
		jne    _018c07_jump
		cmp    $0x000005,%ecx
		jne    _018c07_jump
		xor    %eax,%eax
		mov    0x00006a(%ebp),%al
		cmp    $0x000010,%eax
		jg     _018c07_jump
		cmp    $0x00000e,%eax
		jl     _018c07_jump
		mov    $0xfffffff0,%eax
		jmp    _018c09_jump

	_018c07_jump:
		xor    %eax,%eax

	_018c09_jump:
		mov    0x000004(%esp),%edi
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x000068(%ebp),%dl
		mov    0x000001(%edi),%cl
		add    %edx,%edx
		sub    %ecx,%edx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x000005(%ebx),%dl
		sub    %edx,%ecx
		mov    0x000036(%ebp),%di
		add    %ecx,%eax
		add    %edi,%eax

	_018c2c_jump:
		mov    0x000081(%ebp),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    0x000004(%esp),%edi
		xor    %ecx,%ecx
		and    $0x0000ff,%edx
		mov    (%edi),%cl
		xor    %ecx,%edx
		jne    _018c52_jump
		mov    _0cdf48_data,%edx
		jmp    _018c58_jump

	_018c52_jump:
		mov    _0cdf50_data,%edx

	_018c58_jump:
		mov    %edx,(%esp)
		movswl %ax,%edx
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		movswl %si,%ecx
		call   _01d4b4_func
		movswl %ax,%esi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d44c_func
		mov    %eax,%edi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%edi
		call   _01d44c_func
		add    %edi,%eax
		xor    %edi,%edi
		mov    (%ebx),%edx
		mov    %ax,%di
		mov    0x000008(%ebp),%eax
		add    %edx,%eax
		mov    %eax,0x000008(%esp)
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ecx,%ebx
		mov    %al,%dl
		mov    %edi,%ecx
		mov    0x00000c(%esp),%edi
		mov    %esi,%eax
		mov    0x000008(%esp),%esi
		call   *(%esp)

	_018cc1_jump:
		mov    0x000014(%esp),%eax
		mov    0x000004(%esp),%ebx
		inc    %eax
		add    $0x000004,%ebx
		mov    %eax,0x000014(%esp)
		mov    %ebx,0x000004(%esp)

	_018cd5_jump:
		xor    %ecx,%ecx
		mov    0x00000e(%esp),%eax
		mov    0x000014(%esp),%cx
		sar    $0x000010,%eax
		cmp    %eax,%ecx
		jge    _018d48_jump
		mov    0x000004(%esp),%edx
		xor    %eax,%eax
		mov    0x000038(%ebp),%bx
		mov    0x000002(%edx),%al
		add    %ebx,%eax
		movswl %ax,%edx
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		call   _01d4f0_func
		mov    0x000004(%esp),%edx
		mov    %eax,%esi
		xor    %ah,%ah
		mov    0x000003(%edx),%al
		test   %ax,%ax
		je     _018cc1_jump
		and    $0x00ffff,%eax
		imul   $0x00000c,%eax,%eax
		mov    0x000000(%ebp),%ebx
		add    %eax,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _018cc1_jump
		testb  $0x000008,0x000081(%ebp)
		jne    _018bdf_jump
		mov    0x000004(%esp),%edx
		xor    %eax,%eax
		mov    0x000036(%ebp),%cx
		mov    0x000001(%edx),%al
		add    %ecx,%eax
		jmp    _018c2c_jump

	_018d48_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_018d51_jump:
		ret    



_018d54_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x00001c(%esp),%dl
		xor    %edx,%eax
		je     _018d93_jump
		mov    _0cdf48_data,%eax
		jmp    _018d98_jump

	_018d93_jump:
		mov    _0cdf50_data,%eax

	_018d98_jump:
		mov    %eax,(%esp)
		mov    0x000058(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d4f0_func
		movswl %ax,%ecx
		mov    0x000058(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d4b4_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d44c_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d44c_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0cd000_data,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %ecx,%ebx
		movzbl %al,%ebp
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %ebp,%edx
		mov    0x000004(%esp),%edi
		call   *(%esp)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_018e20_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x00001c(%esp),%dl
		xor    %edx,%eax
		je     _018e5f_jump
		mov    _0cdf4c_data,%eax
		jmp    _018e64_jump

	_018e5f_jump:
		mov    _0cdf54_data,%eax

	_018e64_jump:
		mov    %eax,(%esp)
		mov    0x000058(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d4f0_func
		movswl %ax,%ecx
		mov    0x000058(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d4b4_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d44c_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d44c_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0cd000_data,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %ecx,%ebx
		movzbl %al,%ebp
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %ebp,%edx
		mov    0x000004(%esp),%edi
		call   *(%esp)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_018eec_func:
		cmpb   $0x000000,_0c1f02_data
		je     _018d51_jump
		mov    _0c1ef0_data,%eax
		jmp    _018b80_func



_018f04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    _0c260a_data,%eax
		mov    $0x000001,%edx
		sar    $0x000010,%eax
		mov    %dx,_0c2610_data
		cmp    $0xffffffff,%eax
		je     _018f9d_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %esi,%eax
		mov    _0c1b34_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x00007f(%esi),%al
		test   %eax,%eax
		jne    _018f9d_jump
		xor    %eax,%eax
		mov    $0x00003d,%edx
		mov    0x000068(%esi),%al
		lea    0x000008(%esp),%ecx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x000005,%edx
		mov    0x000074(%esi),%al
		lea    0x000004(%esp),%ebx
		sub    %eax,%edx
		mov    %esp,%eax
		mov    %dx,0x000038(%esi)
		lea    0x00000c(%esp),%edx
		call   _016632_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _01666f_func
		mov    %esi,%eax
		call   _018b80_func
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		call   _01666f_func

	_018f9d_jump:
		mov    _0c260c_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _019023_jump
		mov    %edx,%esi
		shl    $0x000005,%esi
		add    %edx,%esi
		mov    _0c1b34_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x00007f(%esi),%al
		test   %eax,%eax
		jne    _019023_jump
		xor    %eax,%eax
		mov    $0x000042,%edx
		mov    0x000068(%esi),%al
		lea    0x000008(%esp),%ecx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x00000e,%edx
		mov    0x000074(%esi),%al
		lea    0x000004(%esp),%ebx
		sub    %eax,%edx
		mov    %esp,%eax
		mov    %dx,0x000038(%esi)
		lea    0x00000c(%esp),%edx
		call   _016632_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _01666f_func
		mov    %esi,%eax
		call   _018b80_func
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		call   _01666f_func

	_019023_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01902c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    _095b01_data,%al
		test   %eax,%eax
		jne    _019048_jump
		mov    $0x000004,%edi
		jmp    _01904d_jump

	_019048_jump:
		mov    $0x000008,%edi

	_01904d_jump:
		cmpb   $0x000000,_0c25e1_data
		je     _019223_jump
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		jne    _0190ae_jump
		jmp    _019223_jump

	_019068_jump:
		movb   $0x00002c,0x000004(%esp)
		jmp    _0191e8_jump

	_019072_jump:
		movb   $0x00006c,0x000004(%esp)
		jmp    _0191e8_jump

	_01907c_jump:
		movb   $0x00006e,0x000004(%esp)
		jmp    _0191e8_jump

	_019086_jump:
		movb   $0x000071,0x000004(%esp)
		jmp    _0191e8_jump

	_019090_jump:
		movb   $0x00006d,0x000004(%esp)
		jmp    _0191e8_jump

	_01909a_jump:
		movb   $0x000070,0x000004(%esp)
		jmp    _0191e8_jump

	_0190a4_jump:
		movb   $0x00006f,0x000004(%esp)
		jmp    _0191e8_jump

	_0190ae_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000077(%esi),%al
		mov    0x000076(%esi),%dl
		mov    %eax,%ebx
		sub    %edx,%ebx
		imul   $0x000006,%ebx,%edx
		mov    $0x00001d,%ebx
		sub    %eax,%ebx
		imul   $0x000006,%ebx,%eax
		mov    %eax,(%esp)
		mov    _0ce538_data,%ax
		sub    $0x000013,%eax
		movswl %ax,%ecx
		mov    _0ce53c_data,%ax
		sub    $0x000004,%eax
		add    %edi,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003d,%edx
		movswl %ax,%ebx
		mov    _0c1ef0_data,%eax
		call   _018d54_func
		mov    _0ce538_data,%ax
		sub    $0x000014,%eax
		movswl %ax,%ecx
		mov    _0ce53c_data,%ax
		sub    $0x000004,%eax
		add    %edi,%eax
		mov    (%esp),%ebx
		add    $0x000015,%eax
		push   $0x000001
		sub    %ebx,%eax
		mov    $0x00003c,%edx
		movswl %ax,%ebx
		mov    _0c1ef0_data,%eax
		call   _018d54_func
		mov    0x000060(%esi),%ax
		cmp    $0x0000bb,%ax
		jb     _0191a2_jump
		jbe    _019086_jump
		cmp    $0x0000da,%ax
		jb     _01917e_jump
		jbe    _01909a_jump
		cmp    $0x0000e3,%ax
		jb     _01916f_jump
		jbe    _019068_jump
		cmp    $0x0000e7,%ax
		je     _01909a_jump
		jmp    _0191e8_jump

	_01916f_jump:
		cmp    $0x0000df,%ax
		je     _01909a_jump
		jmp    _0191e8_jump

	_01917e_jump:
		cmp    $0x0000d4,%ax
		jb     _019196_jump
		jbe    _01909a_jump
		cmp    $0x0000d5,%ax
		je     _01907c_jump
		jmp    _0191e8_jump

	_019196_jump:
		cmp    $0x0000c6,%ax
		je     _019072_jump
		jmp    _0191e8_jump

	_0191a2_jump:
		cmp    $0x00004a,%ax
		jb     _0191d2_jump
		jbe    _0190a4_jump
		cmp    $0x000096,%ax
		jb     _0191c6_jump
		jbe    _019090_jump
		cmp    $0x0000b4,%ax
		je     _0190a4_jump
		jmp    _0191e8_jump

	_0191c6_jump:
		cmp    $0x000062,%ax
		je     _01907c_jump
		jmp    _0191e8_jump

	_0191d2_jump:
		cmp    $0x00002e,%ax
		jb     _0191e8_jump
		jbe    _019072_jump
		cmp    $0x000032,%ax
		je     _019068_jump

	_0191e8_jump:
		push   $0x000001
		mov    _0ce538_data,%ax
		xor    %edx,%edx
		mov    _0ce53c_data,%si
		mov    0x000008(%esp),%dl
		sub    $0x00001e,%eax
		add    %esi,%edi
		movswl %ax,%ecx
		mov    _0c1ef0_data,%eax
		sub    $0x000004,%edi
		call   _01f8bc_func
		xor    %edx,%edx
		movswl %di,%ebx
		mov    %al,%dl
		mov    _0c1ef0_data,%eax
		call   _018d54_func

	_019223_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019268_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _0192a8_jump
		mov    _0c51c8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0195db_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0c1b34_data,%eax
		shl    $0x000002,%esi
		add    %esi,%eax
		call   _02770c_func
		jmp    _0195db_jump

	_0192a8_jump:
		call   _03c438_func
		xor    %eax,%eax
		mov    _0c2502_data,%al
		cmp    $0x000040,%eax
		je     _0192cc_jump
		cmpw   $0x000000,_0ce816_data
		jne    _0192cc_jump
		movw   $0x00012c,_0ce816_data

	_0192cc_jump:
		mov    _0ce814_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0192df_jump
		decw   _0ce816_data

	_0192df_jump:
		cmpw   $0x000000,_095b30_data
		jne    _0192f7_jump
		cmpw   $0x000000,_0ce816_data
		je     _0195db_jump

	_0192f7_jump:
		xor    %edx,%edx
		mov    $0x000023,%esi
		mov    _095b01_data,%dl
		mov    $0x00004d,%eax
		test   %edx,%edx
		jne    _019446_jump
		cmpl   $0x000010,_0ce53c_data
		jg     _019327_jump
		cmpl   $0x000005,_0ce534_data
		jle    _019446_jump

	_019327_jump:
		cmpw   $0x000000,_0c2610_data
		je     _019344_jump
		mov    $0x000055,%eax
		xor    %ebx,%ebx
		mov    $0x00002d,%esi
		mov    %bx,_0c2610_data

	_019344_jump:
		mov    _0ce534_data,%edx
		movswl %si,%ecx
		sub    $0x000005,%edx
		cmp    %ecx,%edx
		jge    _0193a0_jump
		push   $0x000000
		mov    _0ce532_data,%ecx
		movswl %ax,%ebx
		xor    %edx,%edx
		push   $0x0000ff
		mov    $0x00000d,%eax
		sar    $0x000010,%ecx
		add    $0x000005,%esi
		call   _01a19c_func
		push   $0x000000
		mov    _0ce534_data,%cx
		mov    _0ce53c_data,%ax
		mov    _0ce532_data,%edx
		push   $0x0000ff
		sub    $0x00000f,%eax
		sub    %ecx,%esi
		sar    $0x000010,%edx
		movswl %si,%ecx
		movswl %ax,%ebx
		jmp    _0193ac_jump

	_0193a0_jump:
		push   $0x000000
		movswl %ax,%ebx
		push   $0x0000ff
		xor    %edx,%edx

	_0193ac_jump:
		mov    $0x00000d,%eax
		call   _01a19c_func
		mov    _0ce534_data,%eax
		sub    $0x000005,%eax
		cmp    $0x000017,%eax
		jge    _019426_jump
		push   $0x000000
		mov    $0x000044,%ebx
		mov    _0ce534_data,%ax
		mov    $0x000004,%edx
		sub    $0x000004,%eax
		push   $0x0000ff
		movswl %ax,%ecx
		mov    $0x0000f1,%eax
		call   _01a19c_func
		mov    $0x00001c,%eax
		mov    _0ce534_data,%si
		push   $0x000000
		sub    %esi,%eax
		mov    _0ce540_data,%dx
		movswl %ax,%ecx
		mov    $0x000138,%eax
		push   $0x0000ff
		sub    %edx,%eax
		mov    _0ce532_data,%edx
		movswl %ax,%ebx
		mov    _0ce53e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		jmp    _019441_jump

	_019426_jump:
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $0x0000ff
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax

	_019441_jump:
		call   _01a19c_func

	_019446_jump:
		mov    _0c2508_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0c1b34_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmp    $0xfffffffe,%edi
		jne    _019568_jump
		push   $0x000001
		mov    $0x000005,%ecx
		mov    $0x000010,%ebx
		mov    $0x00001b,%edx
		mov    %esi,%eax
		call   _018e20_func
		push   $0x000001
		mov    $0x000005,%ecx
		mov    $0x0000f4,%ebx
		mov    $0x000038,%edx
		mov    %esi,%eax
		call   _018e20_func
		push   $0x000001
		mov    $0x000005,%ecx
		mov    _0c24fa_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x000037,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018e20_func
		push   $0x000001
		mov    $0x000005,%ecx
		mov    _0c24fb_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x000046,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018e20_func
		xor    %eax,%eax
		mov    _0c1bc2_data,%al
		cmp    $0x0000ff,%eax
		je     _019533_jump
		cmpb   $0x000000,_0c2595_data
		jne    _019533_jump
		push   $0x000001
		mov    $0x00001b,%ecx
		mov    _0c24fd_data,%al
		xor    %edx,%edx
		add    $0x000011,%al
		mov    $0x000023,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018e20_func
		xor    %eax,%eax
		mov    _0c2501_data,%al
		cmp    $0x000004,%eax
		jne    _019533_jump
		push   $0x000001
		mov    $0x00001b,%ecx
		mov    _0c24fc_data,%al
		xor    %edx,%edx
		add    $0x000014,%al
		mov    $0x00003b,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018e20_func

	_019533_jump:
		push   $0x000001
		mov    $0x000005,%ecx
		mov    _0c24ff_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x000114,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018e20_func
		push   $0x000001
		mov    $0x000005,%ecx
		mov    _0c2500_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x000122,%ebx
		jmp    _0195b3_jump

	_019568_jump:
		push   $0x000001
		mov    $0x0000a2,%ecx
		mov    $0x00000e,%ebx
		mov    $0x000038,%edx
		mov    %esi,%eax
		call   _018e20_func
		push   $0x000001
		mov    $0x0000a2,%ecx
		mov    _0c24ff_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x00002e,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018e20_func
		push   $0x000001
		mov    $0x0000a2,%ecx
		mov    _0c2500_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x00003c,%ebx

	_0195b3_jump:
		mov    %al,%dl
		mov    %esi,%eax
		call   _018e20_func
		mov    _0c260a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0195d6_jump
		mov    _0c260c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0195db_jump

	_0195d6_jump:
		call   _018f04_func

	_0195db_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0195e4_func:
		push   %ebx
		push   %edi
		mov    _0c94f0_data,%edi
		movswl %dx,%ebx
		cwtl   
		sub    $0x000002,%ebx
		call   _0150cd_func
		pop    %edi
		pop    %ebx
		ret    



_019644_func:
		push   %esi
		mov    0x000006(%esp),%esi
		sar    $0x000010,%esi
		push   %esi
		movswl %cx,%ecx
		push   $0x000007
		add    $0x000008,%ebx
		add    $0x000008,%eax
		push   %ecx
		movswl %bx,%ecx
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_0195e4_func,%eax
		call   _01f404_func
		pop    %esi
		ret    $0x000004



_019674_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		xor    %ecx,%ecx
		and    $0x00003f,%dh
		mov    %dx,%cx
		xor    %edx,%edx
		mov    0x00006b(%ebp),%dl
		imul   %ecx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    %bl,%al
		test   %eax,%eax
		jne    _0196cd_jump
		mov    $0x000005,%ebx
		mov    $0x000003,%eax
		mov    %ebx,0x000010(%esp)
		jmp    _0196d8_jump

	_0196cd_jump:
		mov    $0x000002,%edx
		xor    %eax,%eax
		mov    %edx,0x000010(%esp)

	_0196d8_jump:
		mov    0x000010(%esp),%ecx
		mov    %eax,0x00000c(%esp)
		cmp    %cx,%ax
		jmp    _0196f5_jump

	_0196e5_jump:
		mov    0x00000c(%esp),%esi
		inc    %esi
		mov    0x000010(%esp),%edi
		mov    %esi,0x00000c(%esp)
		cmp    %di,%si

	_0196f5_jump:
		ja     _0197ab_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%ax
		mov    0x000004(%esp),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    0x000003(%eax),%bl
		imul   $0x00000c,%ebx,%ebx
		xor    %edx,%edx
		mov    0x000038(%ebp),%cx
		mov    0x000002(%eax),%dl
		add    %edx,%ecx
		mov    0x000000(%ebp),%edx
		add    %edx,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _0196e5_jump
		mov    0x000001(%eax),%al
		mov    0x000036(%ebp),%si
		xor    %ah,%ah
		add    %eax,%esi
		mov    0x000058(%ebp),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d4f0_func
		movswl %ax,%ecx
		mov    0x000058(%ebp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   _01d4b4_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d44c_func
		mov    %eax,%esi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%esi
		call   _01d44c_func
		add    %esi,%eax
		and    $0x00ffff,%eax
		mov    (%ebx),%esi
		mov    %eax,0x000008(%esp)
		add    0x000008(%ebp),%esi
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ecx,%ebx
		mov    0x000008(%esp),%ecx
		mov    %al,%dl
		mov    %edi,%eax
		mov    (%esp),%edi
		call   *_0cdf48_data
		jmp    _0196e5_jump

	_0197ab_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0197b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		movw   $0x000007,0x000010(%esp)
		mov    $0x001000,%ebp
		jmp    _0199b5_jump

	_0197ce_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000051,%eax
		jne    _0197f0_jump
		mov    $0x000001,%ebx
		mov    _0cd000_data,%edx
		mov    %esi,%eax
		call   _019674_func
		jmp    _0198a1_jump

	_0197f0_jump:
		cmp    $0x0000fe,%eax
		jne    _019845_jump
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _019803_jump
		neg    %eax

	_019803_jump:
		mov    _094732_data(,%eax,2),%edx
		mov    0x000073(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		shl    $0x000009,%edx
		cmp    $0x000000,%eax
		je     _019824_jump
		mov    $0x000001,%eax
		jg     _019824_jump
		neg    %eax

	_019824_jump:
		neg    %eax
		imul   %eax,%edx
		mov    $0x000168,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ebp,%ecx
		movswl %ax,%edx
		mov    %ebp,%ebx
		mov    %esi,%eax
		call   _01bb54_func
		jmp    _0198a1_jump

	_019845_jump:
		cmp    $0x0000fc,%eax
		je     _01985e_jump
		cmp    $0x0000fb,%eax
		je     _01985e_jump
		cmp    $0x0000ad,%eax
		jne    _01993c_jump

	_01985e_jump:
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%eax
		call   _016632_func
		mov    $0x0000a0,%edx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		call   _01666f_func
		mov    %esi,%eax
		call   _018b80_func
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		call   _01666f_func

	_0198a1_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0c23c0_data(,%eax,2),%esi
		sar    $0x000010,%esi
		imul   $0x000084,%esi,%esi
		mov    _0c1b34_data,%eax
		add    %eax,%esi
		cmp    _0c248a_data,%di
		jge    _019948_jump

	_0198c9_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _0198ec_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000080,_092238_data(,%eax,4)
		je     _0198ec_jump
		mov    %esi,%eax
		call   _01902c_func

	_0198ec_jump:
		mov    0x00000e(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00007e(%esi),%al
		cmp    %edx,%eax
		jne    _0198a1_jump
		xor    %edx,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00009d,%eax
		jne    _0197ce_jump
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _0197ce_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jne    _0197ce_jump
		cmpl   $0x00012c,0x000028(%esi)
		jl     _0198a1_jump

	_01993c_jump:
		mov    %esi,%eax
		call   _018b80_func
		jmp    _0198a1_jump

	_019948_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _0199f2_jump
		mov    _0c6b7c_data,%ecx
		mov    _0c1ba0_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		lea    0x000000(,%ecx,2),%eax
		mov    %ebx,%edx
		lea    0x000002(%eax),%esi
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %esi
		cmp    %ecx,%edx
		jle    _01998f_jump
		cmp    $0x00005a,%ebx
		jle    _0199b0_jump
		testb  $0x000001,_0c3316_data
		jne    _0199b0_jump

	_01998f_jump:
		testb  $0x000004,_0c1bcd_data
		je     _0199b0_jump
		cmpl   $0x000000,_0c1b70_data
		je     _0199b0_jump
		mov    $_0c1b4c_data,%eax
		call   _018b80_func
		call   _018eec_func

	_0199b0_jump:
		decw   0x000010(%esp)

	_0199b5_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jl     _019a44_jump
		mov    _0c23c0_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%esi
		mov    _0c248a_data,%cx
		xor    %edi,%edi
		add    %eax,%esi
		test   %cx,%cx
		jle    _019948_jump
		jmp    _0198c9_jump

	_0199f2_jump:
		cmp    $0x000002,%eax
		jne    _0199b0_jump
		xor    %eax,%eax
		mov    _0c251a_data,%al
		test   %eax,%eax
		je     _0199b0_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _019a09_jump

	_019a08_jump:
		inc    %ecx

	_019a09_jump:
		xor    %edx,%edx
		movswl %cx,%eax
		mov    _0c251a_data,%dl
		cmp    %edx,%eax
		jge    _0199b0_jump
		mov    _0c2514_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		add    %edx,%eax
		cmp    0x000024(%eax),%esi
		je     _019a08_jump
		mov    _0cd000_data,%edx
		mov    %esi,%ebx
		call   _019674_func
		jmp    _019a08_jump

	_019a44_jump:
		mov    _0c23c0_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c248a_data,%bx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		add    %edx,%eax
		test   %bx,%bx
		jg     _019a91_jump
		jmp    _019ab2_jump

	_019a6e_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0c23c0_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		add    %edx,%eax
		cmp    %si,%di
		jl     _019a98_jump
		jmp    _019ab2_jump

	_019a91_jump:
		mov    _0c248a_data,%si

	_019a98_jump:
		xor    %edx,%edx
		mov    0x00007e(%eax),%dl
		test   %edx,%edx
		jne    _019a6e_jump
		mov    0x000060(%eax),%dx
		cmp    $0x0000f5,%edx
		jne    _019a6e_jump
		call   _018b80_func

	_019ab2_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019abc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    $0x0000aa,%edx
		mov    _0c2614_data,%ax
		mov    $0x000003,%ebx
		mov    %eax,0x000004(%esp)
		mov    _0c2616_data,%ax
		mov    $0x000020,%ecx
		mov    %eax,0x000008(%esp)
		mov    $0x0000a0,%eax
		mov    %bx,0x000010(%esp)
		call   _01d43c_func
		mov    $0x000006,%edx
		mov    %cx,0x00000c(%esp)
		mov    %dx,(%esp)
		mov    $0x010000,%ebp
		jmp    _019b22_jump

	_019b0c_jump:
		mov    0x000010(%esp),%eax
		mov    0x00000c(%esp),%edx
		inc    %eax
		add    $0x000020,%edx
		mov    %ax,0x000010(%esp)
		mov    %dx,0x00000c(%esp)

	_019b22_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x0000c0,%eax
		jge    _019eac_jump
		lea    0x000100(%eax),%ebx
		mov    %ebp,%edx
		mov    %ebp,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		decw   (%esp)
		mov    %eax,%esi
		movswl %ax,%edx
		mov    _0c2612_data,%eax
		mov    %edx,%ebx
		sar    $0x000010,%eax
		imul   %eax,%ebx
		sar    $0x000008,%ebx
		sub    %ebx,%eax
		mov    %ax,0x000034(%esp)
		mov    _0c2614_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000008,%edx
		mov    0x00000e(%esp),%ebx
		sub    %edx,%eax
		sar    $0x000010,%ebx
		mov    %ax,0x000030(%esp)
		mov    _0c51d6_data(,%ebx,2),%eax
		sar    $0x000010,%eax
		mov    _0c51d4_data,%edx
		shl    $0x000003,%eax
		mov    _0c51e8_data(,%ebx,2),%cx
		add    %eax,%edx
		mov    _0c51d8_data(,%ebx,2),%ax
		mov    _0c2520_data,%ebx
		sar    $0x000010,%ebx
		add    %eax,%ecx
		cmp    $0x000001,%ebx
		je     _019d90_jump
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    $0x000005,%ebx
		jne    _019c1d_jump
		mov    %eax,0x000024(%esp)
		cmp    %cx,%ax
		jge    _019b0c_jump

	_019bd1_jump:
		mov    (%edx),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		imul   %eax,%ebx
		mov    0x00002e(%esp),%edi
		sar    $0x000010,%edi
		sar    $0x000008,%ebx
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %edi,%eax
		mov    0x000032(%esp),%edi
		sar    $0x000008,%eax
		sar    $0x000010,%edi
		add    %edi,%eax
		mov    _0cd000_data,%edi
		call   *_0cdf74_data
		mov    0x000024(%esp),%ebx
		inc    %ebx
		add    $0x000008,%edx
		mov    %ebx,0x000024(%esp)
		cmp    %bx,%cx
		jle    _019b0c_jump
		jmp    _019bd1_jump

	_019c1d_jump:
		cmp    $0x000004,%ebx
		jne    _019c7b_jump
		mov    %eax,0x000028(%esp)
		cmp    %cx,%ax
		jge    _019b0c_jump

	_019c2f_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %eax,%edi
		mov    0x000032(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cd000_data,%edi
		call   *_0cdf70_data
		mov    0x000028(%esp),%edi
		inc    %edi
		add    $0x000008,%edx
		mov    %edi,0x000028(%esp)
		cmp    %di,%cx
		jle    _019b0c_jump
		jmp    _019c2f_jump

	_019c7b_jump:
		cmp    $0x000003,%ebx
		jne    _019cd9_jump
		mov    %eax,0x00001c(%esp)
		cmp    %cx,%ax
		jge    _019b0c_jump

	_019c8d_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %eax,%edi
		mov    0x000032(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cd000_data,%edi
		call   *_0cdf6c_data
		mov    0x00001c(%esp),%eax
		inc    %eax
		add    $0x000008,%edx
		mov    %eax,0x00001c(%esp)
		cmp    %ax,%cx
		jle    _019b0c_jump
		jmp    _019c8d_jump

	_019cd9_jump:
		cmp    $0x000002,%ebx
		jne    _019d37_jump
		mov    %eax,0x00002c(%esp)
		cmp    %cx,%ax
		jge    _019b0c_jump

	_019ceb_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %eax,%edi
		mov    0x000032(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cd000_data,%edi
		call   *_0cdf68_data
		mov    0x00002c(%esp),%ebx
		inc    %ebx
		add    $0x000008,%edx
		mov    %ebx,0x00002c(%esp)
		cmp    %bx,%cx
		jle    _019b0c_jump
		jmp    _019ceb_jump

	_019d37_jump:
		mov    %eax,0x000038(%esp)
		cmp    %cx,%ax
		jge    _019b0c_jump

	_019d44_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %edi,%eax
		mov    0x000032(%esp),%edi
		sar    $0x000008,%eax
		sar    $0x000010,%edi
		add    %edi,%eax
		mov    _0cd000_data,%edi
		call   *_0cdf64_data
		mov    0x000038(%esp),%edi
		inc    %edi
		add    $0x000008,%edx
		mov    %edi,0x000038(%esp)
		cmp    %di,%cx
		jle    _019b0c_jump
		jmp    _019d44_jump

	_019d90_jump:
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    $0x000005,%ebx
		jne    _019df5_jump
		mov    %eax,0x000014(%esp)
		cmp    %cx,%ax
		jge    _019b0c_jump

	_019da9_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %eax,%edi
		mov    0x000032(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cd000_data,%edi
		call   *_0cdf84_data
		mov    0x000014(%esp),%eax
		inc    %eax
		add    $0x000008,%edx
		mov    %eax,0x000014(%esp)
		cmp    %ax,%cx
		jle    _019b0c_jump
		jmp    _019da9_jump

	_019df5_jump:
		cmp    $0x000002,%ebx
		jle    _019e53_jump
		mov    %eax,0x000018(%esp)
		cmp    %cx,%ax
		jge    _019b0c_jump

	_019e07_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %eax,%edi
		mov    0x000032(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cd000_data,%edi
		call   *_0cdf88_data
		mov    0x000018(%esp),%ebx
		inc    %ebx
		add    $0x000008,%edx
		mov    %ebx,0x000018(%esp)
		cmp    %bx,%cx
		jle    _019b0c_jump
		jmp    _019e07_jump

	_019e53_jump:
		mov    %eax,0x000020(%esp)
		cmp    %cx,%ax
		jge    _019b0c_jump

	_019e60_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %eax,%edi
		mov    0x000032(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cd000_data,%edi
		call   *_0cdf8c_data
		mov    0x000020(%esp),%edi
		inc    %edi
		add    $0x000008,%edx
		mov    %edi,0x000020(%esp)
		cmp    %di,%cx
		jle    _019b0c_jump
		jmp    _019e60_jump

	_019eac_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,_0c2614_data
		mov    0x000008(%esp),%eax
		mov    %ax,_0c2616_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019ecc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    _0c2614_data,%ax
		mov    %eax,0x000020(%esp)
		mov    _0c2616_data,%ax
		mov    $0x0000aa,%edx
		mov    %eax,0x00001c(%esp)
		mov    $0x0000a0,%eax
		mov    $0xffffffc0,%ebx
		call   _01d43c_func
		xor    %edx,%edx
		mov    %bx,0x000004(%esp)
		mov    %dx,0x000024(%esp)
		jmp    _019f21_jump

	_019f0b_jump:
		mov    0x000024(%esp),%ecx
		mov    0x000004(%esp),%esi
		inc    %ecx
		add    $0x000020,%esi
		mov    %cx,0x000024(%esp)
		mov    %si,0x000004(%esp)

	_019f21_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000020,%eax
		jge    _01a0c9_jump
		mov    0x000022(%esp),%edi
		sar    $0x000010,%edi
		mov    _0c51d6_data(,%edi,2),%edx
		mov    _0c51d4_data,%ecx
		sar    $0x000010,%edx
		lea    0x000100(%eax),%esi
		shl    $0x000003,%edx
		mov    $0x010000,%eax
		add    %edx,%ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%esi
		movswl %ax,%edx
		mov    _0c2612_data,%eax
		mov    %edx,%ebp
		sar    $0x000010,%eax
		imul   %eax,%ebp
		sar    $0x000008,%ebp
		sub    %ebp,%eax
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    %ax,0x000010(%esp)
		mov    _0c2614_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000008,%edx
		mov    _0c2520_data,%ebx
		sub    %edx,%eax
		sar    $0x000010,%ebx
		mov    %ax,0x000014(%esp)
		mov    _0c51e8_data(,%edi,2),%dx
		mov    _0c51d8_data(,%edi,2),%ax
		add    %eax,%edx
		cmp    $0x000001,%ebx
		je     _01a070_jump
		test   %edi,%edi
		jne    _01a017_jump
		mov    %eax,0x000008(%esp)
		cmp    %dx,%ax
		jge    _019f0b_jump

	_019fcb_jump:
		mov    (%ecx),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		imul   %eax,%ebx
		mov    0x000012(%esp),%edi
		sar    $0x000010,%edi
		sar    $0x000008,%ebx
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %edi,%eax
		mov    0x00000e(%esp),%edi
		sar    $0x000008,%eax
		sar    $0x000010,%edi
		add    %edi,%eax
		mov    _0cd000_data,%edi
		call   *_0cdf7c_data
		mov    0x000008(%esp),%eax
		inc    %eax
		add    $0x000008,%ecx
		mov    %eax,0x000008(%esp)
		cmp    %ax,%dx
		jle    _019f0b_jump
		jmp    _019fcb_jump

	_01a017_jump:
		mov    %eax,0x00000c(%esp)
		cmp    %dx,%ax
		jge    _019f0b_jump

	_01a024_jump:
		mov    (%ecx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %edi,%eax
		mov    0x00000e(%esp),%edi
		sar    $0x000008,%eax
		sar    $0x000010,%edi
		add    %edi,%eax
		mov    _0cd000_data,%edi
		call   *_0cdf78_data
		mov    0x00000c(%esp),%ebx
		inc    %ebx
		add    $0x000008,%ecx
		mov    %ebx,0x00000c(%esp)
		cmp    %bx,%dx
		jle    _019f0b_jump
		jmp    _01a024_jump

	_01a070_jump:
		mov    %eax,0x000018(%esp)
		cmp    %dx,%ax
		jge    _019f0b_jump

	_01a07d_jump:
		mov    (%ecx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %eax,%edi
		mov    0x00000e(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cd000_data,%edi
		call   *_0cdf80_data
		mov    0x000018(%esp),%edi
		inc    %edi
		add    $0x000008,%ecx
		mov    %edi,0x000018(%esp)
		cmp    %di,%dx
		jle    _019f0b_jump
		jmp    _01a07d_jump

	_01a0c9_jump:
		mov    0x000020(%esp),%eax
		mov    %ax,_0c2614_data
		mov    0x00001c(%esp),%eax
		mov    %ax,_0c2616_data
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a0e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    %dx,(%esp)
		jmp    _01a0fc_jump

	_01a0f8_jump:
		incw   (%esp)

	_01a0fc_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0x000008,%edx
		jge    _01a193_jump
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0c574e_data(%edx)
		je     _01a0f8_jump
		add    $_0c54ce_data,%edx
		xor    %ecx,%ecx
		jmp    _01a155_jump

	_01a126_jump:
		and    $0x00007f,%bl
		and    $0x0000ff,%ebx
		sar    $0x000005,%eax
		add    $0x000004,%ebx
		add    %eax,%ebx

	_01a137_jump:
		mov    _0cd000_data,%edi
		movzbl %bl,%esi
		movswl (%edx),%eax
		mov    (%edx),%ebx
		sar    $0x000006,%eax
		sar    $0x000016,%ebx
		call   *_0cdf60_data

	_01a151_jump:
		add    $0x00000a,%edx
		inc    %ecx

	_01a155_jump:
		movswl %cx,%eax
		cmp    $0x000040,%eax
		jge    _01a0f8_jump
		mov    0x000009(%edx),%bl
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000080,%eax
		jl     _01a151_jump
		mov    (%edx),%esi
		mov    _0ce554_data,%eax
		sar    $0x000010,%esi
		shl    $0x000006,%eax
		cmp    %eax,%esi
		jle    _01a151_jump
		xor    %eax,%eax
		mov    0x000006(%edx),%al
		test   %eax,%eax
		jge    _01a187_jump
		neg    %eax

	_01a187_jump:
		cwtl   
		cmp    $0x000080,%eax
		jl     _01a126_jump
		mov    $0x000058,%bl
		jmp    _01a137_jump

	_01a193_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a19c_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %ax,0x000008(%esp)
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000004(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01a1d3_jump
		mov    0x000008(%esp),%eax
		xor    %ecx,%ecx
		add    %eax,%ebx
		mov    %cx,0x000008(%esp)
		mov    %bx,0x00000c(%esp)
		jmp    _01a1e1_jump

	_01a1d3_jump:
		cmp    $0x000140,%eax
		jle    _01a1e1_jump
		movw   $0x000140,0x000008(%esp)

	_01a1e1_jump:
		mov    0x000006(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x000140,%eax
		jle    _01a208_jump
		mov    $0x000140,%eax
		mov    0x000008(%esp),%esi
		sub    %esi,%eax
		mov    %ax,0x00000c(%esp)

	_01a208_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01a229_jump
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		xor    %ebx,%ebx
		add    %eax,%edx
		mov    %bx,(%esp)
		mov    %dx,0x000004(%esp)
		jmp    _01a236_jump

	_01a229_jump:
		cmp    $0x0000c8,%eax
		jle    _01a236_jump
		movw   $0x0000c8,(%esp)

	_01a236_jump:
		mov    -0x000002(%esp),%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		cmp    $0x0000c8,%eax
		jle    _01a25c_jump
		mov    $0x0000c8,%eax
		mov    (%esp),%ecx
		sub    %ecx,%eax
		mov    %ax,0x000004(%esp)

	_01a25c_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01a3e3_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01a3e3_jump
		xor    %eax,%eax
		mov    0x00001c(%esp),%al
		cmp    $0x0000ff,%eax
		jne    _01a31d_jump
		xor    %eax,%eax
		mov    _095b00_data,%al
		cmp    $0x000001,%eax
		jne    _01a2c0_jump
		mov    0x00000a(%esp),%ecx
		mov    0x000002(%esp),%ebx
		mov    -0x000002(%esp),%edx
		mov    0x000006(%esp),%esi
		mov    _0cd000_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%esi
		call   _013266_func
		jmp    _01a31d_jump

	_01a2c0_jump:
		cmpb   $0x000000,0x000020(%esp)
		je     _01a2f6_jump
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%esi
		xor    %eax,%eax
		mov    _0cd000_data,%edi
		mov    0x000020(%esp),%al
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _015138_func
		jmp    _01a31d_jump

	_01a2f6_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%eax
		mov    _0cd000_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _0150fb_func

	_01a31d_jump:
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		cmp    $0x000001,%eax
		jne    _01a377_jump
		xor    %eax,%eax
		mov    _095b00_data,%al
		cmp    $0x000001,%eax
		jne    _01a360_jump
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%eax
		mov    _0cd000_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _01332e_func
		jmp    _01a3e3_jump

	_01a360_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%esi
		mov    $0x002026,%eax
		jmp    _01a3cc_jump

	_01a377_jump:
		cmp    $0x000002,%eax
		jne    _01a3e3_jump
		xor    %eax,%eax
		mov    _095b00_data,%al
		cmp    $0x000001,%eax
		jne    _01a3b7_jump
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%eax
		mov    _0cd000_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _01332e_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01a3b7_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%esi
		mov    $0x002620,%eax

	_01a3cc_jump:
		mov    _0cd000_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _0151c7_func

	_01a3e3_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01a3ec_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,(%esp)
		mov    %dx,0x000018(%esp)
		mov    %cl,0x000028(%esp)
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000002,%eax
		jne    _01a426_jump
		mov    $0x00000f,%ecx
		mov    $0x000001,%esi
		mov    $0x000008,%edi
		mov    %ecx,0x000024(%esp)
		mov    %si,0x000010(%esp)
		mov    %di,0x000014(%esp)
		jmp    _01a467_jump

	_01a426_jump:
		cmp    $0x000001,%eax
		jne    _01a44a_jump
		mov    $0x000017,%edi
		mov    $0x000003,%eax
		mov    $0x00000a,%edx
		mov    %edi,0x000024(%esp)
		mov    %ax,0x000010(%esp)
		mov    %dx,0x000014(%esp)
		jmp    _01a467_jump

	_01a44a_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%esi
		mov    %edx,0x000024(%esp)
		mov    %cx,0x000010(%esp)
		mov    %si,0x000014(%esp)

	_01a467_jump:
		mov    0x000018(%esp),%eax
		mov    %ax,0x00000c(%esp)
		mov    (%esp),%eax
		mov    (%eax),%dl
		mov    %ebx,0x000020(%esp)
		test   %dl,%dl
		je     _01a645_jump
		xor    %eax,%eax
		mov    %ax,0x00001c(%esp)
		jmp    _01a5dc_jump

	_01a48d_jump:
		cmp    $0x000020,%dh
		jne    _01a4a5_jump
		mov    0x000014(%esp),%eax
		mov    0x00000c(%esp),%edx
		add    %eax,%edx
		xor    %bl,%bl
		mov    %dx,0x00000c(%esp)
		jmp    _01a4b0_jump

	_01a4a5_jump:
		xor    %eax,%eax
		mov    %dh,%al
		call   _01eff4_func
		mov    %al,%bl

	_01a4b0_jump:
		xor    %ecx,%ecx
		mov    %bl,%cl
		test   %ecx,%ecx
		jne    _01a589_jump
		jmp    _01a5d7_jump

	_01a4c1_jump:
		cmp    $0x000001,%esi
		jne    _01a4c9_jump
		add    $0x000029,%bl

	_01a4c9_jump:
		xor    %eax,%eax
		mov    %bl,%al
		imul   $0x00000c,%eax,%eax
		mov    _0c2498_data,%ebp
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x000020(%esp),%edx
		mov    0x000006(%ebp),%al
		sub    %eax,%edx
		movswl %dx,%ebx
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    0x00000a(%esp),%eax
		shl    $0x000008,%edx
		sar    $0x000010,%eax
		add    %edi,%edx
		mov    _0c249c_data,%ecx
		mov    0x000000(%ebp),%esi
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    _0cd000_data,%edi
		mov    0x00003c(%esp),%cl
		and    $0x00ffff,%edx
		mov    %ecx,0x000004(%esp)
		mov    %edx,%ecx
		mov    0x000004(%esp),%edx
		call   *_0cdf58_data
		jmp    _01a5af_jump

	_01a529_jump:
		imul   $0x00000c,%ecx,%ecx
		mov    _0c248c_data,%ebp
		add    %ecx,%ebp
		xor    %edx,%edx
		mov    0x000020(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000004(%esp)
		xor    %dh,%dh
		mov    _0cd000_data,%edi
		mov    0x000006(%ebp),%dl
		mov    _0c2490_data,%ecx
		shl    $0x000008,%edx
		mov    0x000000(%ebp),%esi
		add    %edx,%eax
		xor    %edx,%edx
		add    %ecx,%esi
		mov    %ax,%dx
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    0x00003c(%esp),%al
		mov    %edx,%ecx
		mov    %eax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		mov    0x000008(%esp),%edx
		call   *_0cdf58_data
		jmp    _01a5af_jump

	_01a589_jump:
		movzbl 0x000028(%esp),%esi
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _01eed4_func
		mov    %eax,%edi
		mov    0x000028(%esp),%dl
		cmp    $0x000001,%dl
		jbe    _01a4c1_jump
		cmp    $0x000002,%dl
		je     _01a529_jump

	_01a5af_jump:
		mov    0x000009(%ebp),%al
		and    $0x00000f,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebp),%dl
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		mov    0x00000a(%esp),%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sub    %edx,%eax
		add    %eax,%ecx
		mov    %cx,0x00000c(%esp)

	_01a5d7_jump:
		incw   0x00001c(%esp)

	_01a5dc_jump:
		mov    0x00001a(%esp),%esi
		mov    (%esp),%ecx
		sar    $0x000010,%esi
		add    %esi,%ecx
		mov    (%ecx),%dh
		test   %dh,%dh
		je     _01a645_jump
		cmp    $0x00002f,%dh
		jne    _01a48d_jump
		mov    0x00000e(%esp),%ecx
		mov    0x000012(%esp),%ebx
		xor    %eax,%eax
		mov    %esi,%edx
		mov    0x000028(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp),%eax
		call   _01f0a4_func
		cwtl   
		mov    0x000016(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %dx,0x00000c(%esp)
		cmp    $0x000001,%esi
		jle    _01a635_jump
		mov    0x000024(%esp),%eax
		add    %eax,0x000020(%esp)

	_01a635_jump:
		xor    %bl,%bl
		xor    %ecx,%ecx
		mov    %bl,%cl
		test   %ecx,%ecx
		jne    _01a589_jump
		jmp    _01a5d7_jump

	_01a645_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01a650_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,(%esp)
		mov    %dx,0x00000c(%esp)
		mov    %cl,0x00001c(%esp)
		xor    %ah,%ah
		mov    %ah,0x000020(%esp)
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000002,%eax
		jne    _01a690_jump
		mov    $0x00000f,%edi
		mov    $0x000001,%eax
		mov    $0x000008,%edx
		mov    %edi,0x000008(%esp)
		mov    %ax,0x000014(%esp)
		mov    %dx,0x000004(%esp)
		jmp    _01a6d1_jump

	_01a690_jump:
		cmp    $0x000001,%eax
		jne    _01a6b4_jump
		mov    $0x000017,%eax
		mov    $0x000003,%edx
		mov    $0x00000a,%ecx
		mov    %eax,0x000008(%esp)
		mov    %dx,0x000014(%esp)
		mov    %cx,0x000004(%esp)
		jmp    _01a6d1_jump

	_01a6b4_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%edi
		mov    %edx,0x000008(%esp)
		mov    %cx,0x000014(%esp)
		mov    %di,0x000004(%esp)

	_01a6d1_jump:
		mov    (%esp),%eax
		mov    0x00000c(%esp),%edi
		mov    (%eax),%dl
		mov    %ebx,0x000018(%esp)
		test   %dl,%dl
		je     _01a86c_jump
		xor    %ebx,%ebx
		mov    %bx,0x000010(%esp)
		jmp    _01a800_jump

	_01a6f2_jump:
		cmp    $0x000020,%dh
		jne    _01a703_jump
		add    0x000004(%esp),%edi
		xor    %cl,%cl
		mov    %cl,0x000020(%esp)
		jmp    _01a713_jump

	_01a703_jump:
		mov    %dh,%al
		and    $0x0000ff,%eax
		call   _01eff4_func
		mov    %al,0x000020(%esp)

	_01a713_jump:
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		test   %edx,%edx
		jne    _01a7b6_jump
		jmp    _01a7fb_jump

	_01a726_jump:
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    _0c2498_data,%esi
		add    %eax,%esi
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000024(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0c249c_data,%edx
		call   _01be34_func
		jmp    _01a7dd_jump

	_01a76f_jump:
		movzbl 0x000020(%esp),%esi
		imul   $0x00000c,%esi,%esi
		mov    _0c248c_data,%eax
		add    %eax,%esi
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000024(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0c2490_data,%edx
		call   _01be34_func
		jmp    _01a7dd_jump

	_01a7b6_jump:
		movzbl 0x00001c(%esp),%ebp
		mov    %ebp,%eax
		call   _01eed4_func
		lea    0x000020(%esp),%edx
		mov    %ebp,%eax
		call   _01f094_func
		mov    0x00001c(%esp),%al
		cmp    $0x000001,%al
		jbe    _01a726_jump
		cmp    $0x000002,%al
		je     _01a76f_jump

	_01a7dd_jump:
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		add    %edx,%eax
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx
		movswl %di,%edi
		sub    %edx,%eax
		add    %eax,%edi

	_01a7fb_jump:
		incw   0x000010(%esp)

	_01a800_jump:
		mov    0x00000e(%esp),%ebp
		mov    (%esp),%eax
		sar    $0x000010,%ebp
		add    %ebp,%eax
		mov    (%eax),%dh
		test   %dh,%dh
		je     _01a86c_jump
		cmp    $0x00002f,%dh
		jne    _01a6f2_jump
		mov    0x000012(%esp),%ecx
		mov    0x000002(%esp),%ebx
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    0x00001c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp),%eax
		call   _01f0a4_func
		cwtl   
		mov    0x00000a(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,%edi
		cmp    $0x000001,%ebp
		jle    _01a856_jump
		mov    0x000008(%esp),%eax
		add    %eax,0x000018(%esp)

	_01a856_jump:
		xor    %ch,%ch
		mov    %ch,0x000020(%esp)
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		test   %edx,%edx
		jne    _01a7b6_jump
		jmp    _01a7fb_jump

	_01a86c_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000010



_01a878_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x00000c(%esp)
		xor    %ah,%ah
		mov    %ah,0x000028(%esp)
		xor    %eax,%eax
		mov    0x00003c(%esp),%al
		cmp    $0x000002,%eax
		jne    _01a8b7_jump
		mov    $0x00000f,%edi
		mov    $0x000001,%eax
		mov    $0x000008,%edx
		mov    %edi,0x000024(%esp)
		mov    %ax,0x000008(%esp)
		mov    %dx,0x00001c(%esp)
		jmp    _01a8f8_jump

	_01a8b7_jump:
		cmp    $0x000001,%eax
		jne    _01a8db_jump
		mov    $0x000017,%eax
		mov    $0x000003,%edx
		mov    $0x00000a,%esi
		mov    %eax,0x000024(%esp)
		mov    %dx,0x000008(%esp)
		mov    %si,0x00001c(%esp)
		jmp    _01a8f8_jump

	_01a8db_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%esi
		mov    $0x00000c,%edi
		mov    %edx,0x000024(%esp)
		mov    %si,0x000008(%esp)
		mov    %di,0x00001c(%esp)

	_01a8f8_jump:
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000010(%esp)
		mov    0x000004(%esp),%eax
		mov    (%eax),%dl
		mov    %ebx,0x000018(%esp)
		test   %dl,%dl
		je     _01ab17_jump
		xor    %ebx,%ebx
		mov    %cx,0x000014(%esp)
		mov    %bx,0x000020(%esp)
		jmp    _01aaa4_jump

	_01a924_jump:
		cmp    $0x000020,%dh
		jne    _01a93a_jump
		mov    0x00001c(%esp),%eax
		add    %ax,0x000010(%esp)
		xor    %cl,%cl
		mov    %cl,0x000028(%esp)
		jmp    _01a94a_jump

	_01a93a_jump:
		mov    %dh,%al
		and    $0x0000ff,%eax
		call   _01eff4_func
		mov    %al,0x000028(%esp)

	_01a94a_jump:
		xor    %edx,%edx
		mov    0x000028(%esp),%dl
		test   %edx,%edx
		jne    _01aa18_jump
		jmp    _01aa8e_jump

	_01a95d_jump:
		xor    %edx,%edx
		mov    0x000028(%esp),%dl
		imul   $0x00000c,%edx,%edx
		mov    _0c2498_data,%ebp
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x000018(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		add    %ebx,%eax
		mov    0x00000e(%esp),%edi
		movswl %ax,%ebx
		xor    %ah,%ah
		xor    %ecx,%ecx
		mov    %dl,%al
		sar    $0x000010,%edi
		shl    $0x000008,%eax
		mov    0x000000(%ebp),%edx
		add    %esi,%eax
		mov    _0c249c_data,%esi
		mov    %ax,%cx
		mov    _0cd000_data,%eax
		add    %edx,%esi
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    0x000040(%esp),%dl
		mov    %edi,%eax
		mov    (%esp),%edi
		call   *_0cdf58_data
		jmp    _01aa65_jump

	_01a9bc_jump:
		movzbl 0x000028(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0c248c_data,%edx
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x000018(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		add    %ebx,%eax
		movswl %ax,%ebx
		xor    %ah,%ah
		mov    0x000006(%ebp),%al
		shl    $0x000008,%eax
		xor    %ecx,%ecx
		add    %esi,%eax
		mov    %ax,%cx
		mov    0x000000(%ebp),%esi
		mov    _0c2490_data,%eax
		mov    _0cd000_data,%edi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x00000e(%esp),%edx
		mov    0x000040(%esp),%al
		sar    $0x000010,%edx
		mov    %eax,(%esp)
		mov    %edx,%eax
		mov    (%esp),%edx
		call   *_0cdf58_data
		jmp    _01aa65_jump

	_01aa18_jump:
		xor    %ebx,%ebx
		mov    0x00003c(%esp),%bl
		mov    %ebx,%eax
		call   _01eed4_func
		lea    0x000028(%esp),%edx
		mov    %eax,%esi
		mov    %ebx,%eax
		call   _01f094_func
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000005,%cl
		call   _053270_func
		test   %ax,%ax
		js     _01aa4a_jump
		sar    %cl,%ax
		jmp    _01aa53_jump

	_01aa4a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01aa53_jump:
		cmp    $0x000001,%bl
		jbe    _01a95d_jump
		cmp    $0x000002,%bl
		je     _01a9bc_jump

	_01aa65_jump:
		mov    0x000009(%ebp),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebp),%al
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000010(%esp)

	_01aa8e_jump:
		mov    0x000014(%esp),%edi
		mov    0x000020(%esp),%eax
		add    $0x000020,%edi
		inc    %eax
		mov    %di,0x000014(%esp)
		mov    %ax,0x000020(%esp)

	_01aaa4_jump:
		mov    0x00001e(%esp),%esi
		mov    0x000004(%esp),%eax
		sar    $0x000010,%esi
		add    %esi,%eax
		mov    (%eax),%dh
		test   %dh,%dh
		je     _01ab17_jump
		cmp    $0x00002f,%dh
		jne    _01a924_jump
		mov    0x000006(%esp),%ecx
		mov    0x00001a(%esp),%ebx
		xor    %eax,%eax
		mov    %esi,%edx
		mov    0x00003c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000008(%esp),%eax
		call   _01f0a4_func
		cwtl   
		mov    0x00000a(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %dx,0x000010(%esp)
		cmp    $0x000001,%esi
		jle    _01aafe_jump
		mov    0x000024(%esp),%eax
		add    %eax,0x000018(%esp)

	_01aafe_jump:
		xor    %ch,%ch
		mov    %ch,0x000028(%esp)
		xor    %edx,%edx
		mov    0x000028(%esp),%dl
		test   %edx,%edx
		jne    _01aa18_jump
		jmp    _01aa8e_jump

	_01ab17_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01ab20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x0000c8(%eax),%ax
		mov    0x0000ca(%esi),%di
		mov    0x0000cc(%esi),%bx
		mov    0x0000ce(%esi),%dx
		mov    0x0000d5(%esi),%cl
		sub    $0x000003,%eax
		sub    $0x000003,%edi
		add    $0x000006,%ebx
		add    $0x000006,%edx
		test   %cl,%cl
		je     _01abec_jump
		xor    %ecx,%ecx
		mov    0x0000d6(%esi),%cl
		push   %ecx
		movswl %bx,%ebx
		cwtl   
		push   $0x0000ff
		movswl %dx,%ecx
		movswl %di,%edx
		call   _01a19c_func
		xor    %eax,%eax
		mov    0x0000d6(%esi),%al
		cmp    $0x000001,%eax
		jne    _01abb3_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		dec    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		dec    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		jmp    _01ac35_jump

	_01abb3_jump:
		cmp    $0x000002,%eax
		jne    _01ac12_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		inc    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		inc    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01a3ec_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01abec_jump:
		cmpb   $0x000000,0x0000d6(%esi)
		je     _01ac12_jump
		xor    %ecx,%ecx
		mov    0x0000d6(%esi),%cl
		push   %ecx
		movswl %bx,%ebx
		cwtl   
		push   $0x0000fe
		movswl %dx,%ecx
		movswl %di,%edx
		call   _01a19c_func

	_01ac12_jump:
		mov    0x0000d0(%esi),%ebx
		mov    0x0000ce(%esi),%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d7(%esi),%al
		sar    $0x000010,%edx
		push   %eax
		mov    0x0000d4(%esi),%cl

	_01ac35_jump:
		mov    %esi,%eax
		call   _01a3ec_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ac44_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		xor    %eax,%eax
		mov    _095b00_data,%al
		cmp    $0x000001,%eax
		jne    _01ac69_jump
		mov    $0x003e80,%ecx
		mov    _0cd000_data,%edi
		call   _012783_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ac69_jump:
		mov    $0x00fa00,%ebx
		mov    _0cdf2c_data,%eax
		xor    %edx,%edx
		call   _079cd0_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ac80_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,0x000010(%esp)
		mov    _0c6956_data,%eax
		mov    %esp,%edi
		sar    $0x000010,%eax
		mov    $_0c68e0_data,%edx
		shl    $0x000002,%eax
		mov    $_095b3c_data,%esi
		add    %eax,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    (%edx),%ah
		mov    %edx,%ecx
		inc    %ah
		mov    0x000001(%edx),%bl
		mov    %ah,(%edx)
		cmp    %bl,%ah
		jbe    _01acdc_jump
		mov    $0x000007,%eax
		call   _061dd0_func
		mov    %eax,%ebx
		mov    $0x000005,%eax
		movb   $0x000000,(%edx)
		call   _061dd0_func
		mov    %al,0x000001(%edx)
		mov    %bl,0x000002(%edx)
		mov    %bl,0x000003(%edx)

	_01acdc_jump:
		mov    0x000008(%esp),%edx
		mov    _0c24ac_data,%bx
		mov    0x000002(%ecx),%al
		sub    %ebx,%edx
		mov    _0c24ae_data,%si
		mov    %edx,%ebx
		mov    0x000010(%esp),%edx
		sub    %esi,%edx
		xor    %ah,%ah
		mov    %edx,%esi
		add    %eax,%ebx
		add    %eax,%esi
		movswl %bx,%eax
		test   %eax,%eax
		jle    _01ad8a_jump
		mov    $0x000140,%edx
		sub    %eax,%edx
		test   %edx,%edx
		jle    _01ad8a_jump
		movswl %si,%ebx
		test   %ebx,%ebx
		jle    _01ad8a_jump
		mov    $0x0000c8,%edx
		sub    %ebx,%edx
		test   %edx,%edx
		jle    _01ad8a_jump
		xor    %edx,%edx
		mov    0x000003(%ecx),%dl
		xor    %ecx,%ecx
		mov    (%esp,%edx,1),%cl
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		mov    _0c1ef0_data,%ecx
		shl    $0x000002,%edx
		mov    (%ecx),%esi
		add    %esi,%edx
		movzbw 0x000006(%edx),%si
		shl    $0x000008,%esi
		mov    %esi,0x00000c(%esp)
		mov    0x00000c(%esp),%edi
		movzbw 0x000005(%edx),%si
		mov    _0cd000_data,%ebp
		add    %edi,%esi
		xor    %edi,%edi
		mov    0x000008(%ecx),%ecx
		mov    %si,%di
		mov    (%edx),%esi
		mov    0x00000a(%edx),%dl
		add    %ecx,%esi
		shr    $0x000004,%dl
		and    $0x0000ff,%edx
		mov    %edi,%ecx
		mov    %ebp,%edi
		call   *_0cdf48_data

	_01ad8a_jump:
		mov    _0c6956_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00001e,%eax
		jge    _01ad9e_jump
		incw   _0c6958_data

	_01ad9e_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01ada8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000007,%eax
		jne    _01ae69_jump
		testb  $0x000004,_0c1bcd_data
		je     _01ae69_jump
		mov    _0c2608_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		lea    0x000008(%esp),%ecx
		add    %esi,%eax
		mov    _0c1b34_data,%esi
		shl    $0x000002,%eax
		lea    0x000004(%esp),%ebx
		add    %eax,%esi
		mov    %esp,%eax
		xor    %edx,%edx
		push   %eax
		lea    0x000010(%esp),%eax
		mov    %dx,_0c6958_data
		push   %eax
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		call   _01da90_func
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		mov    0x000006(%esp),%edx
		add    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		add    %edx,%eax
		sub    $0x000006,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000074(%esi),%al
		push   $0x000080
		add    %ecx,%eax
		push   $0x000005
		cwtl   
		movswl %bx,%ecx
		push   %eax
		movswl %dx,%ebx
		mov    $_01ac80_func,%eax
		movswl %di,%edx
		call   _01f404_func

	_01ae69_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ae74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000d8,%esp
		push   $0x000000
		mov    $0x000010,%ecx
		mov    $0x000140,%ebx
		push   $0x0000ff
		xor    %edx,%edx
		xor    %eax,%eax
		call   _01a19c_func
		push   $0x000000
		mov    $0x000028,%ecx
		mov    $0x000140,%ebx
		push   $0x0000ff
		mov    $0x0000a0,%edx
		xor    %eax,%eax
		call   _01a19c_func
		xor    %edx,%edx
		mov    _0c331e_data,%dl
		cmp    $0x0000ff,%edx
		je     _01afdf_jump
		mov    _0c3320_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		add    %esi,%eax
		mov    _0c1b34_data,%ebp
		shl    $0x000002,%eax
		add    %eax,%ebp
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $0x0000d8,%ecx
		sub    %edx,%eax
		mov    $_0c3326_data,%esi
		shl    $0x000003,%eax
		mov    %esp,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01afdf_jump
		testb  $0x000004,0x000081(%ebp)
		je     _01afd8_jump
		xor    %eax,%eax
		mov    $0x0000be,%edx
		mov    0x000069(%ebp),%al
		sub    %eax,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000038(%ebp)
		mov    0x000068(%ebp),%bl
		add    0x000036(%ebp),%bx
		mov    0x0000c6(%esp),%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		lea    -0x000008(%edx),%esi
		cmp    %eax,%esi
		jle    _01af81_jump
		mov    0x0000ca(%esp),%edi
		sar    $0x000010,%edi
		add    %eax,%edi
		cmp    %edi,%edx
		jge    _01af81_jump
		mov    %esi,%edx
		sub    %eax,%edx
		mov    $0x000007,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cwtl   
		xor    %dh,%dh
		mov    %dh,(%esp,%eax,1)
		jmp    _01af9e_jump

	_01af81_jump:
		mov    0x0000c6(%esp),%edx
		mov    0x0000ca(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jl     _01afa5_jump

	_01af9e_jump:
		mov    %esp,%eax
		call   _01ab20_func

	_01afa5_jump:
		xor    %eax,%eax
		mov    0x000038(%ebp),%cx
		mov    0x000069(%ebp),%al
		push   $0x000000
		add    %ecx,%eax
		push   $0x0000ff
		sub    $0x000014,%eax
		mov    $0x000012,%ecx
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x00001e,%ebx
		call   _01a19c_func
		mov    %ebp,%eax
		call   _018b80_func
		jmp    _01afdf_jump

	_01afd8_jump:
		mov    %esp,%eax
		call   _01ab20_func

	_01afdf_jump:
		xor    %edx,%edx
		mov    _0c331f_data,%dl
		cmp    $0x0000ff,%edx
		je     _01b02b_jump
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $_0c3326_data,%esi
		sub    %edx,%eax
		mov    $0x0000d8,%ecx
		shl    $0x000003,%eax
		mov    %esp,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01b02b_jump
		mov    %esp,%eax
		call   _01ab20_func

	_01b02b_jump:
		add    $0x0000d8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b038_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		movswl %dx,%ebp
		shl    $0x000002,%ebp
		xor    %ebx,%ebx
		mov    _0c51a8_data(%ebp),%bl
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%eax
		mov    %ebx,%edx
		mov    %ax,0x000004(%esp)
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    _0cd0ae_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		add    $0x00001c,%edx
		mov    %dx,0x000008(%esp)
		mov    _0cd0a2_data,%dx
		push   $0x000001
		add    %edx,%eax
		movswl %si,%ebx
		sub    $0x000017,%eax
		mov    $0x00001b,%edx
		movswl %ax,%ecx
		mov    $_0c1de0_data,%eax
		call   _018d54_func
		mov    _0c1de0_data,%eax
		mov    0x000149(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd0ae_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cd0a2_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0c1de0_data,%eax
		call   _018d54_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0c1de0_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd0ae_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cd0a2_data,%cx
		xor    %edx,%edx
		add    %ecx,%eax
		mov    0x00000c(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0c1de0_data,%eax
		call   _018d54_func
		xor    %edx,%edx
		mov    _0c51ab_data(%ebp),%dl
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x00001c,%edx
		mov    %dx,0x000008(%esp)
		mov    _0c1de0_data,%eax
		mov    0x000155(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd0ae_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cd0a2_data,%dx
		add    $0x00000a,%esi
		add    %edx,%eax
		movswl %si,%ebx
		sub    $0x000017,%eax
		mov    $0x000039,%edx
		movswl %ax,%ecx
		mov    $_0c2624_data,%eax
		call   _018d54_func
		mov    _0c2624_data,%edx
		xor    %eax,%eax
		mov    0x0002b1(%edx),%al
		add    %eax,%esi
		mov    _0cd0ae_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cd0a2_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x00000c(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0c1de0_data,%eax
		call   _018d54_func
		xor    %edx,%edx
		mov    _0c51aa_data(%ebp),%dl
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		shl    $0x000003,%ebx
		add    %ebx,%edx
		shl    $0x000002,%edx
		mov    $0x000066,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000064,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x00000a,%ecx
		add    $0x00001c,%eax
		mov    %ebx,%edx
		mov    %ax,(%esp)
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%edx
		mov    %dx,0x000004(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%edx
		mov    _0c1de0_data,%eax
		mov    %dx,0x000008(%esp)
		mov    0x0001c1(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd0ae_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		xor    %edx,%edx
		mov    _0cd0a2_data,%cx
		mov    0x000004(%esp),%dl
		add    %ecx,%eax
		add    $0x00000a,%esi
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0c1de0_data,%eax
		call   _018d54_func
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1de0_data,%edx
		mov    0x000005(%edx,%eax,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd0ae_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cd0a2_data,%dx
		movswl %si,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    $0x000017,%eax
		mov    0x000008(%esp),%dl
		movswl %ax,%ecx
		mov    $_0c1de0_data,%eax
		call   _018d54_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0c1de0_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd0ae_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cd0a2_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x00000c(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0c1de0_data,%eax
		call   _018d54_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0c1de0_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd0ae_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000002
		mov    _0cd0a2_data,%cx
		movswl %si,%edx
		add    %ecx,%eax
		mov    $0x000001,%ecx
		movswl %ax,%ebx
		mov    $_0bff42_data,%eax
		call   _01a3ec_func
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01b380_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cd0b6_data,%dx
		mov    _0cd0ae_data,%ax
		dec    %edx
		add    $0x000017,%eax
		imul   %edx,%eax
		mov    _0cd0a2_data,%dx
		push   $0x000000
		add    %edx,%eax
		mov    $0x00000a,%ebx
		sub    $0x000017,%eax
		mov    $0x000002,%edx
		movswl %ax,%ecx
		mov    $_0c2624_data,%eax
		call   _018d54_func
		mov    _0c2624_data,%eax
		xor    %edx,%edx
		mov    0x00001e(%eax),%dl
		add    $0x000018,%eax
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cd0a2_data,%edx
		sar    $0x000010,%edx
		sub    $0x00000b,%edx
		sub    %eax,%edx
		mov    _0cd0b8_data,%ax
		dec    %eax
		imul   $0x000064,%eax,%eax
		push   $0x000000
		movswl %dx,%ecx
		mov    $0x000002,%edx
		movswl %ax,%ebx
		mov    $_0c2624_data,%eax
		call   _018d54_func
		mov    _0cd0c0_data,%bx
		test   %bx,%bx
		je     _01b445_jump
		mov    %ebx,%edx
		mov    _0cd0ae_data,%ax
		dec    %edx
		add    $0x000017,%eax
		imul   %edx,%eax
		mov    _0cd0a2_data,%cx
		push   $0x000000
		add    %ecx,%eax
		mov    $0x00000a,%ebx
		sub    $0x000017,%eax
		mov    $0x000001,%edx
		movswl %ax,%ecx
		mov    $_0c2624_data,%eax
		call   _018d54_func

	_01b445_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b50c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    _0c2508_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmp    $0xfffffffe,%ebx
		je     _01b724_jump
		mov    $0x00003c,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%edx
		mov    $0x00000a,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    $0x000258,%edi
		mov    %dl,0x000014(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%edx
		mov    $0x00000a,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    $0x001770,%edi
		mov    %dl,0x000018(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000a2,%ebx
		mov    %dl,0x000020(%esp)
		xor    %ah,%ah
		mov    $0x00010c,%edx
		mov    %ah,0x000024(%esp)
		mov    _0cd9fc_data,%eax
		call   _01a3ec_func
		mov    0x00001c(%esp),%dl
		test   %dl,%dl
		je     _01b5dd_jump
		push   $0x000001
		mov    %dl,%al
		mov    $0x0000a4,%ecx
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x00010e,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d54_func
		movb   $0x00000f,0x000020(%esp)

	_01b5dd_jump:
		movzbw 0x000020(%esp),%di
		mov    %edi,%eax
		add    $0x00010e,%eax
		push   $0x000001
		movswl %ax,%ebx
		mov    0x00001c(%esp),%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x0000a4,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		add    $0x00011d,%edi
		call   _018d54_func
		push   $0x000001
		mov    0x000018(%esp),%al
		mov    $0x0000a4,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		movswl %di,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d54_func
		mov    _0c4764_data,%edx
		cmp    $0x000064,%edx
		jg     _01b6df_jump
		xor    %eax,%eax
		mov    _0c51b6_data,%al
		push   %eax
		mov    _0cd9f0_data,%edi
		push   %edi
		lea    0x000008(%esp),%eax
		xor    %esi,%esi
		push   %eax
		mov    %esi,_0c1b70_data
		call   _079cfb_func
		xor    %eax,%eax
		mov    _0c24d0_data,%al
		add    $0x00000c,%esp
		cmp    $0x000004,%eax
		jge    _01b724_jump
		mov    _095b39_data,%al
		mov    _095b38_data,%bl
		add    %al,%bl
		xor    %eax,%eax
		mov    %bl,%al
		mov    %bl,_095b38_data
		cmp    $0x000005,%eax
		jle    _01b69c_jump
		mov    _095b39_data,%ch
		mov    $0x000005,%al
		neg    %ch
		mov    %al,_095b38_data
		mov    %ch,_095b39_data
		jmp    _01b6b6_jump

	_01b69c_jump:
		test   %eax,%eax
		jne    _01b6b6_jump
		mov    _095b39_data,%bh
		mov    $0x000001,%cl
		neg    %bh
		mov    %cl,_095b38_data
		mov    %bh,_095b39_data

	_01b6b6_jump:
		xor    %eax,%eax
		mov    $0x000002,%ecx
		mov    _095b38_data,%al
		mov    $0x000064,%ebx
		push   %eax
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01a3ec_func
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01b6df_jump:
		cmp    $0x0000a0,%edx
		jg     _01b724_jump
		cmp    $0x000078,%edx
		jle    _01b724_jump
		mov    $_0bff44_data,%esi
		mov    %esp,%edi
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		push   %edi

	_01b6fe_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _01b716_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _01b6fe_jump

	_01b716_jump:
		pop    %edi
		push   $0x000005
		xor    %ecx,%ecx
		lea    0x000004(%esp),%eax
		call   _01a3ec_func

	_01b724_jump:
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b730_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		mov    _0c45b4_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000ff,%eax
		jne    _01b786_jump
		xor    %eax,%eax
		mov    _0cd77c_data,%al
		test   %eax,%eax
		je     _01b76b_jump
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b6,%ebx
		mov    $0x0000b5,%edx
		mov    $_0bff4b_data,%eax
		jmp    _01b8a8_jump

	_01b76b_jump:
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b6,%ebx
		mov    $0x0000b5,%edx
		mov    $_0bff59_data,%eax
		jmp    _01b8a8_jump

	_01b786_jump:
		push   $0x000001
		mov    $0x0000a2,%ecx
		mov    $0x000092,%ebx
		mov    $0x00001b,%edx
		mov    $_0c1de0_data,%eax
		call   _018d54_func
		push   $0x000000
		mov    $0x000022,%ecx
		mov    $0x000016,%ebx
		push   $0x0000ff
		mov    $0x0000a2,%edx
		mov    $0x000092,%eax
		call   _01a19c_func
		xor    %ebx,%ebx
		mov    _0cd104_data,%bl
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x0000bc,%ebx
		mov    0x000004(%esp),%al
		mov    %dx,0x000008(%esp)
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x0000a2,%ecx
		mov    %al,%dl
		mov    $_0c1de0_data,%eax
		call   _018d54_func
		push   $0x000001
		mov    0x000008(%esp),%al
		mov    $0x0000a2,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x0000cb,%ebx
		mov    %al,%dl
		mov    $_0c1de0_data,%eax
		call   _018d54_func
		mov    _0c45b4_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x000034,%ebx
		mov    0x000004(%esp),%al
		mov    %dx,0x000008(%esp)
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x0000a2,%ecx
		mov    %al,%dl
		mov    $_0c1de0_data,%eax
		call   _018d54_func
		push   $0x000001
		mov    0x000008(%esp),%al
		mov    $0x0000a2,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x000043,%ebx
		mov    %al,%dl
		mov    $_0c1de0_data,%eax
		call   _018d54_func
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b8,%ebx
		mov    $0x000058,%edx
		mov    $_0bff63_data,%eax

	_01b8a8_jump:
		call   _01a3ec_func
		mov    $_0c1b4c_data,%eax
		call   _018b80_func
		mov    $_0c1d5c_data,%eax
		call   _018b80_func
		testb  $0x000004,_0c26a5_data
		je     _01b8d4_jump
		mov    $_0c2624_data,%eax
		call   _018b80_func

	_01b8d4_jump:
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b8dc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    0x000078(%esp),%esi
		mov    %eax,0x000054(%esp)
		mov    %edx,0x00003c(%esp)
		mov    0x00007c(%esp),%eax
		mov    0x000088(%esp),%edi
		mov    %ebx,%edx
		mov    %di,0x000064(%esp)
		cmp    %bx,%si
		jge    _01b913_jump
		mov    0x000080(%esp),%edi
		mov    %esi,%edx
		mov    %di,0x000064(%esp)

	_01b913_jump:
		mov    0x000080(%esp),%edi
		cmp    %di,%dx
		jle    _01b926_jump
		mov    %edi,%edx
		mov    %si,0x000064(%esp)

	_01b926_jump:
		mov    0x000088(%esp),%edi
		cmp    %di,%dx
		jle    _01b939_jump
		mov    %edi,%edx
		mov    %bx,0x000064(%esp)

	_01b939_jump:
		mov    0x00008c(%esp),%edi
		mov    %cx,0x00005c(%esp)
		mov    %di,0x000060(%esp)
		cmp    %cx,%ax
		jge    _01b960_jump
		mov    0x000084(%esp),%edi
		mov    %ax,0x00005c(%esp)
		mov    %di,0x000060(%esp)

	_01b960_jump:
		mov    0x000084(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01b978_jump
		mov    %di,0x00005c(%esp)
		mov    %ax,0x000060(%esp)

	_01b978_jump:
		mov    0x00008c(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01b990_jump
		mov    %di,0x00005c(%esp)
		mov    %cx,0x000060(%esp)

	_01b990_jump:
		mov    0x000062(%esp),%edi
		sar    $0x000010,%edi
		cwtl   
		mov    %edi,0x000034(%esp)
		movswl %si,%esi
		mov    0x000034(%esp),%ebp
		movswl %dx,%edi
		mov    %eax,0x000034(%esp)
		sub    %edi,%ebp
		movswl %cx,%eax
		mov    %ebp,%edi
		mov    0x000034(%esp),%ebp
		mov    %esi,0x000034(%esp)
		sub    %eax,%ebp
		movswl %bx,%esi
		mov    %ebp,%eax
		mov    0x000034(%esp),%ebp
		sub    %esi,%ebp
		mov    %ebp,0x000050(%esp)
		test   %eax,%eax
		jge    _01b9da_jump
		mov    %edi,%esi
		neg    %esi
		neg    %eax
		mov    %esi,0x000040(%esp)
		jmp    _01b9de_jump

	_01b9da_jump:
		mov    %edi,0x000040(%esp)

	_01b9de_jump:
		cmpl   $0x000000,0x000050(%esp)
		jge    _01b9fa_jump
		mov    0x000050(%esp),%ebp
		mov    $0xffffffff,%esi
		neg    %ebp
		mov    %esi,0x00004c(%esp)
		mov    %ebp,0x000050(%esp)
		jmp    _01ba02_jump

	_01b9fa_jump:
		movl   $0x000001,0x00004c(%esp)

	_01ba02_jump:
		mov    0x000082(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,0x000034(%esp)
		mov    0x000034(%esp),%ebp
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		mov    0x00007e(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x000034(%esp)
		movswl %bx,%ebp
		mov    %ebp,0x000038(%esp)
		mov    0x000034(%esp),%ebp
		sub    0x000038(%esp),%ebp
		mov    %ebp,0x000058(%esp)
		test   %esi,%esi
		jge    _01ba49_jump
		mov    %edi,%ebp
		neg    %ebp
		neg    %esi
		mov    %ebp,0x000048(%esp)
		jmp    _01ba4d_jump

	_01ba49_jump:
		mov    %edi,0x000048(%esp)

	_01ba4d_jump:
		cmpl   $0x000000,0x000058(%esp)
		jge    _01ba62_jump
		movl   $0xffffffff,0x000044(%esp)
		negl   0x000058(%esp)
		jmp    _01ba6a_jump

	_01ba62_jump:
		movl   $0x000001,0x000044(%esp)

	_01ba6a_jump:
		test   %eax,%eax
		jne    _01ba6f_jump
		inc    %eax

	_01ba6f_jump:
		test   %esi,%esi
		jne    _01ba74_jump
		inc    %esi

	_01ba74_jump:
		mov    0x00004c(%esp),%ebp
		mov    %eax,0x00000c(%esp)
		mov    0x000044(%esp),%eax
		mov    %ebp,(%esp)
		mov    0x000040(%esp),%ebp
		mov    %eax,0x000010(%esp)
		mov    0x000048(%esp),%eax
		mov    %ebp,0x000004(%esp)
		mov    0x000050(%esp),%ebp
		mov    %eax,0x000014(%esp)
		mov    0x000058(%esp),%eax
		mov    %ebp,0x000008(%esp)
		mov    0x00005a(%esp),%ebp
		mov    %eax,0x000018(%esp)
		mov    0x00005e(%esp),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		sub    %ebp,%eax
		mov    %eax,0x000024(%esp)
		movswl %cx,%eax
		sub    %ebp,%eax
		mov    %edi,0x000020(%esp)
		imul   %eax,%edi
		movswl %dx,%ecx
		movswl %bx,%eax
		mov    %esi,0x00001c(%esp)
		sub    %ecx,%eax
		mov    %ecx,0x000038(%esp)
		add    %edi,%eax
		mov    0x000054(%esp),%ecx
		mov    %eax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		mov    %eax,0x00002c(%esp)
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		mov    %eax,0x000030(%esp)
		mov    0x00003c(%esp),%esi
		mov    (%ecx),%ecx
		mov    _0caa78_data,%edi
		add    %ecx,%esi
		mov    %esp,%ecx
		mov    0x00005c(%esp),%ebx
		call   _014e34_func
		mov    0x000060(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000064(%esp),%eax
		shl    $0x000008,%ebx
		sub    %edx,%eax
		xor    %ecx,%ecx
		add    %ebx,%eax
		mov    %ax,%cx
		mov    0x000054(%esp),%eax
		mov    _0cd000_data,%edi
		mov    _0caa78_data,%esi
		mov    0x00000a(%eax),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ebp,%ebx
		mov    %al,%dl
		mov    0x000038(%esp),%eax
		call   *_0cdf48_data
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000018



_01bb54_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000060,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x00005c(%esp)
		mov    %bx,0x000028(%esp)
		mov    %cx,0x000024(%esp)
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esp),%edx
		shl    $0x000002,%eax
		mov    0x000004(%edx),%edx
		add    %eax,%edx
		mov    0x000008(%edx),%ax
		mov    %edx,0x00000c(%esp)
		and    $0x00003f,%ah
		mov    0x000004(%esp),%ebx
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    0x00006b(%ebx),%dl
		imul   %edx,%eax
		mov    0x00000c(%esp),%edx
		shl    $0x000002,%eax
		mov    (%edx),%edx
		add    %eax,%edx
		mov    %edx,(%esp)
		testb  $0x000020,0x000081(%ebx)
		je     _01bc17_jump
		lea    0x000018(%esp),%eax
		lea    0x000010(%esp),%ecx
		xor    %edx,%edx
		push   %eax
		lea    0x000038(%esp),%eax
		mov    0x000075(%ebx),%dl
		push   %eax
		mov    %ebx,%eax
		lea    0x000044(%esp),%ebx
		call   _01da90_func
		mov    0x00003a(%esp),%edx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x000004(%esp),%ebx
		sub    %eax,%edx
		mov    0x000032(%esp),%eax
		add    $0x000008,%edx
		sar    $0x000011,%eax
		mov    _0c24ae_data,%cx
		add    %edx,%eax
		mov    0x000010(%esp),%edx
		mov    %eax,0x00001c(%esp)
		xor    %eax,%eax
		sub    %ecx,%edx
		mov    0x000074(%ebx),%al
		add    %eax,%edx
		mov    %edx,0x00002c(%esp)
		jmp    _01bc7f_jump

	_01bc17_jump:
		lea    0x000058(%esp),%eax
		lea    0x000038(%esp),%ecx
		lea    0x000054(%esp),%ebx
		push   %eax
		lea    0x000034(%esp),%edx
		mov    0x000008(%esp),%eax
		call   _01d610_func
		mov    0x000030(%esp),%eax
		sub    _0c24ac_data,%ax
		mov    0x000054(%esp),%ebx
		add    $0x000008,%eax
		mov    0x000036(%esp),%edx
		mov    %ax,0x000030(%esp)
		mov    _0c24ae_data,%ax
		sar    $0x000011,%edx
		sub    %eax,%ebx
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		mov    %bx,0x000054(%esp)
		add    %edx,%eax
		mov    0x000052(%esp),%edx
		mov    %eax,0x00001c(%esp)
		mov    0x000056(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		add    %edx,%eax
		mov    %eax,0x00002c(%esp)

	_01bc7f_jump:
		xor    %esi,%esi
		mov    %si,0x000020(%esp)
		jmp    _01bc8d_jump

	_01bc88_jump:
		incw   0x000020(%esp)

	_01bc8d_jump:
		mov    0x00000c(%esp),%eax
		mov    0x000008(%eax),%ax
		xor    %edx,%edx
		and    $0x00003f,%ah
		mov    %ax,%dx
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _01be2a_jump
		mov    (%esp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %edx,%edx
		mov    0x000003(%esi),%dl
		xor    %eax,%eax
		mov    %dl,%al
		test   %eax,%eax
		je     _01bc88_jump
		movswl %dx,%eax
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%esp),%ebp
		mov    0x000004(%esp),%edx
		mov    0x000004(%esp),%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x000036(%edx),%di
		xor    %edx,%edx
		mov    0x000038(%ebx),%cx
		mov    0x000002(%esi),%dl
		xor    %ebx,%ebx
		add    %ecx,%edx
		add    %eax,%ebp
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    0x000001(%esi),%al
		mov    0x000005(%ebp),%cl
		add    %edi,%eax
		mov    0x00001c(%esp),%edi
		mov    %eax,%esi
		mov    0x000006(%ebp),%bl
		sub    %edi,%esi
		add    %ecx,%eax
		mov    %si,0x000014(%esp)
		mov    %si,0x00004c(%esp)
		sub    %edi,%eax
		mov    0x00002c(%esp),%esi
		mov    0x000026(%esp),%edi
		mov    %ax,0x000044(%esp)
		sar    $0x000010,%edi
		mov    %edx,%eax
		mov    %edi,%ecx
		sub    %esi,%eax
		add    %ebx,%edx
		mov    %ax,0x000040(%esp)
		mov    %ax,0x000048(%esp)
		sub    %esi,%edx
		mov    0x000022(%esp),%eax
		mov    0x00005a(%esp),%esi
		mov    %dx,0x000050(%esp)
		lea    0x000040(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,0x000008(%esp)
		push   %eax
		mov    %esi,%ebx
		lea    0x000018(%esp),%eax
		call   _01bfbc_func
		mov    0x000008(%esp),%ebx
		lea    0x000048(%esp),%edx
		lea    0x000044(%esp),%eax
		push   %ebx
		mov    %edi,%ecx
		mov    %esi,%ebx
		call   _01bfbc_func
		mov    0x000008(%esp),%ecx
		lea    0x000050(%esp),%edx
		lea    0x00004c(%esp),%eax
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _01bfbc_func
		mov    0x00001c(%esp),%eax
		mov    0x000014(%esp),%edx
		mov    0x000044(%esp),%ebx
		mov    0x00004c(%esp),%ecx
		mov    0x000040(%esp),%esi
		mov    0x000048(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x00002c(%esp),%eax
		mov    %dx,0x000014(%esp)
		mov    %bx,0x000044(%esp)
		mov    0x000050(%esp),%edx
		add    %eax,%esi
		add    %eax,%edi
		add    %eax,%edx
		mov    %di,0x000048(%esp)
		mov    %dx,0x000050(%esp)
		mov    %edi,%eax
		mov    0x000050(%esp),%edi
		mov    %ebx,%edx
		sub    %esi,%eax
		mov    0x000014(%esp),%ebx
		add    %edi,%eax
		sub    %ebx,%edx
		cwtl   
		add    %ecx,%edx
		push   %eax
		movswl %dx,%eax
		push   %eax
		mov    0x000056(%esp),%eax
		sar    $0x000010,%eax
		mov    %cx,0x000054(%esp)
		push   %eax
		mov    0x000056(%esp),%eax
		mov    %si,0x00004c(%esp)
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%ebx
		push   %eax
		mov    0x000056(%esp),%eax
		mov    0x00004e(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000056(%esp),%eax
		mov    0x000018(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000008(%edx),%edx
		mov    %ebp,%eax
		call   _01b8dc_func
		jmp    _01bc88_jump

	_01be2a_jump:
		add    $0x000060,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01be34_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		movswl %bx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		sar    %eax
		add    %edx,%eax
		mov    %eax,0x000008(%esp)
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %al,%dl
		movswl %cx,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000008(%esi),%dl
		inc    %eax
		sar    %edx
		add    %edx,%eax
		mov    0x000008(%esp),%edx
		mov    %eax,0x00001c(%esp)
		mov    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		add    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000020(%esp),%eax
		mov    0x00001c(%esp),%edi
		mov    %ax,0x000014(%esp)
		mov    %ecx,%eax
		mov    0x000036(%esp),%ebp
		sub    %edi,%eax
		sar    $0x000010,%ebp
		mov    %ax,0x000024(%esp)
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    %ebp,%ebx
		mov    0x000006(%esi),%al
		lea    0x000024(%esp),%edx
		add    %eax,%ecx
		mov    0x00003e(%esp),%eax
		sub    %edi,%ecx
		mov    0x00003a(%esp),%edi
		sar    $0x000010,%eax
		mov    %cx,0x000018(%esp)
		mov    %eax,0x000004(%esp)
		push   %eax
		sar    $0x000010,%edi
		lea    0x000024(%esp),%eax
		mov    %edi,%ecx
		call   _01bfbc_func
		mov    0x000004(%esp),%ebx
		lea    0x000010(%esp),%edx
		lea    0x00000c(%esp),%eax
		push   %ebx
		mov    %edi,%ecx
		mov    %ebp,%ebx
		call   _01bfbc_func
		mov    0x000004(%esp),%ecx
		lea    0x000018(%esp),%edx
		lea    0x000014(%esp),%eax
		push   %ecx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _01bfbc_func
		mov    0x000008(%esp),%eax
		mov    0x000020(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000014(%esp),%ecx
		mov    0x000024(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x00001c(%esp),%eax
		mov    %dx,0x000020(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000014(%esp)
		mov    0x000010(%esp),%edx
		mov    0x000018(%esp),%ebx
		mov    0x000020(%esp),%ecx
		add    %eax,%edi
		add    %eax,%edx
		add    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %dx,0x000010(%esp)
		mov    0x000014(%esp),%edx
		sub    %ecx,%eax
		add    %eax,%edx
		mov    0x000010(%esp),%eax
		sub    %edi,%eax
		add    %ebx,%eax
		cwtl   
		push   %eax
		movswl %dx,%eax
		mov    %bx,0x00001c(%esp)
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    %di,0x000030(%esp)
		push   %eax
		mov    0x00001e(%esp),%eax
		mov    0x000032(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x00001e(%esp),%eax
		mov    0x000032(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01b8dc_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01bfbc_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		movswl %cx,%edx
		movswl (%eax),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		mov    0x000016(%esp),%edx
		mov    %eax,%ecx
		sar    $0x000010,%edx
		movswl (%esi),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		mov    %esp,%edx
		mov    %ax,0x000008(%esp)
		movswl %bx,%eax
		lea    0x000004(%esp),%ebx
		call   _053308_func
		mov    0x000002(%esp),%ebx
		movswl %cx,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    0x000006(%esp),%eax
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		imul   %eax,%ecx
		sub    %ecx,%ebx
		sar    $0x000009,%ebx
		mov    %bx,(%edi)
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   %edx,%eax
		add    %ebx,%eax
		sar    $0x000009,%eax
		mov    %ax,(%esi)
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01c040_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    0x000010(%esp),%ebp
		movzbl 0x00006d(%eax),%esi
		lea    0x000000(,%esi,4),%edi
		mov    0x00000c(%eax),%esi
		add    %esi,%edi
		movzbl 0x00006c(%eax),%esi
		mov    (%edi),%edi
		shl    $0x000003,%esi
		add    %edi,%esi
		testb  $0x000040,0x000007(%esi)
		je     _01c08b_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000026,%eax
		mov    %ax,(%ebx)
		movw   $0x000015,(%ecx)
		movw   $0x00001e,0x000000(%ebp)
		jmp    _01c0d9_jump

	_01c08b_jump:
		testb  $0x000080,0x000007(%esi)
		je     _01c0b8_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000056,%eax
		mov    %ax,(%ebx)
		movw   $0x000022,(%ecx)
		movw   $0x00000a,0x000000(%ebp)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_01c0b8_jump:
		mov    0x000028(%eax),%si
		add    $0x000047,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000047,%eax
		mov    %ax,(%ebx)
		movw   $0x00001d,(%ecx)
		movw   $0x000013,0x000000(%ebp)

	_01c0d9_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01c0e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _01d704_func
		mov    %ax,0x000010(%esp)
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d82c_func
		mov    0x00006d(%edi),%dl
		mov    %ax,0x000018(%esp)
		test   %edx,%edx
		jne    _01c120_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x00001b,%edx
		je     _01c13c_jump
		cmp    $0x000018,%edx
		je     _01c13c_jump
		cmp    $0x00001e,%edx
		je     _01c13c_jump
		cmp    $0x00000b,%edx
		je     _01c13c_jump

	_01c120_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		cmp    $0x000001,%edx
		jne    _01c1eb_jump
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x000002,%edx
		jne    _01c1eb_jump

	_01c13c_jump:
		cmpb   $0x000000,_0c1f02_data
		je     _01c211_jump
		mov    _0c1ef0_data,%edx
		xor    %eax,%eax
		mov    0x000068(%edx),%al
		mov    0x000028(%edx),%bx
		xor    %ecx,%ecx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %bx,0x00000c(%esp)
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%bx
		mov    0x000074(%edx),%cl
		add    %ebx,%eax
		xor    %edx,%edx
		add    %ebx,%ecx
		mov    0x000068(%edi),%dl
		mov    0x000028(%edi),%bx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    %bx,0x00001c(%esp)
		mov    0x000069(%edi),%dl
		add    0x00002c(%edi),%dx
		xor    %ebx,%ebx
		mov    0x00002c(%edi),%si
		mov    0x000074(%edi),%bl
		add    %esi,%ebx
		add    $0x000005,%edx
		sub    $0x000005,%ebx
		cmp    %dx,%ax
		jle    _01c1a9_jump
		cmp    %dx,%cx
		jg     _01c211_jump

	_01c1a9_jump:
		cmp    %bx,%ax
		jge    _01c1b3_jump
		cmp    %bx,%cx
		jl     _01c211_jump

	_01c1b3_jump:
		mov    0x00001a(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		lea    0x00003c(%edx),%ecx
		cmp    %ecx,%ebx
		jg     _01c211_jump
		sub    $0x00003c,%edx
		cmp    %edx,%ebx
		jl     _01c211_jump
		mov    $0x000019,%ebx
		mov    %edi,%eax
		movw   $0x000000,0x000040(%edi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%edi)
		call   _01d6f8_func
		jmp    _01c211_jump

	_01c1eb_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		test   %edx,%edx
		jne    _01c211_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x00001a,%edx
		jne    _01c211_jump
		cmpb   $0x000000,_0c1f02_data
		jne    _01c211_jump
		mov    $0x00001b,%edx
		mov    %edi,%eax
		call   _01d6e8_func

	_01c211_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		cmp    $0x000001,%edx
		jne    _01c28f_jump
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x000002,%edx
		jne    _01c28f_jump
		mov    %edi,%eax
		call   _04aad8_func
		xor    %edx,%edx
		mov    %edi,%eax
		call   _024278_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000001,_0921f8_data(%edx)
		je     _01c288_jump
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		sub    %edx,%ebx
		mov    %bl,%al
		xor    %edx,%edx
		mov    0x000081(%edi),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%cl
		mov    $0x000018,%ebx
		or     %al,%cl
		mov    %edi,%eax
		mov    %cl,0x000081(%edi)
		call   _01d6f8_func
		mov    %edi,%eax
		call   _04aad8_func

	_01c288_jump:
		mov    %edi,%eax
		call   _0248b8_func

	_01c28f_jump:
		mov    0x000016(%esp),%ecx
		mov    0x00000e(%esp),%esi
		mov    %edi,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		mov    %ecx,%ebx
		mov    %esi,%edx
		call   _01d9a4_func
		test   %ax,%ax
		je     _01c36e_jump
		mov    %ecx,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _02d280_func
		test   %ax,%ax
		je     _01c36e_jump
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		cmp    $0x000001,%edx
		jne    _01c329_jump
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x000002,%edx
		jne    _01c329_jump
		mov    $0x000015,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		sub    %edx,%ebx
		mov    0x000081(%edi),%ch
		mov    %bl,%al
		movw   $0x000000,0x000040(%edi)
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		movw   $0x000000,0x000042(%edi)
		mov    %ch,%ah
		or     %al,%ah
		mov    %ah,0x000081(%edi)
		jmp    _01c4e2_jump

	_01c329_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		cmp    $0x000002,%edx
		jne    _01c4e2_jump
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x000003,%edx
		je     _01c34f_jump
		cmp    $0x000001,%edx
		je     _01c34f_jump
		cmp    $0x000002,%edx
		jne    _01c4e2_jump

	_01c34f_jump:
		mov    $0x00000c,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000040(%edi)
		movw   $0x000000,0x000042(%edi)
		jmp    _01c4e2_jump

	_01c36e_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		cmp    $0x000002,%edx
		jne    _01c39c_jump
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x000001,%edx
		jne    _01c39c_jump
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		test   %edx,%edx
		jne    _01c39c_jump
		movw   $0x000000,0x000040(%edi)
		movw   $0x00fff6,0x000042(%edi)
		jmp    _01c4e2_jump

	_01c39c_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		test   %edx,%edx
		jne    _01c4e2_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x000014,%edx
		jne    _01c4e2_jump
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x00001b,%edx
		jne    _01c4e2_jump
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _01c3ec_jump
		jmp    _01c4e2_jump

	_01c3dc_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _01c4e2_jump

	_01c3ec_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x0000c4,%edx
		jne    _01c3dc_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01c3dc_jump
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		push   %edx
		lea    0x000018(%esp),%edx
		lea    0x00000c(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000002,%edx
		call   _01da90_func
		andb   $0x0000f7,0x000081(%esi)
		mov    0x000006(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    0x000012(%esp),%edx
		sar    $0x000011,%edx
		add    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		xor    %edx,%edx
		mov    0x000002(%esp),%ebx
		mov    0x000069(%esi),%dl
		sar    $0x000010,%ebx
		sub    %edx,%ebx
		mov    -0x000002(%esp),%edx
		movw   $0x000000,0x000040(%esi)
		movw   $0x000020,0x000042(%esi)
		sar    $0x000011,%edx
		movl   $0x000001,0x000024(%esi)
		add    %edx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    0x000081(%esi),%dh
		mov    0x00002c(%esi),%ax
		or     $0x000004,%dh
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		call   _01f7d4_func
		mov    0x000081(%esi),%bl
		xor    %edx,%edx
		or     $0x000010,%bl
		mov    _0c1bb9_data,%dl
		mov    %bl,0x000081(%esi)
		lea    0x000000(,%edx,4),%ebx
		mov    _0c1b58_data,%edx
		movw   $0x00ffff,0x000046(%esi)
		add    %ebx,%edx
		movw   $0x000000,0x000048(%esi)
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    _0c1bb8_data,%bl
		mov    0x000007(%edx,%ebx,8),%cl
		test   $0x000040,%cl
		setne  %al
		mov    %al,_0ce910_data
		mov    %esi,%eax
		call   _01c744_func

	_01c4e2_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		test   %edx,%edx
		jne    _01c521_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x000014,%edx
		je     _01c4fd_jump
		cmp    $0x00000d,%edx
		je     _01c4fd_jump
		cmp    $0x000017,%edx
		jne    _01c521_jump

	_01c4fd_jump:
		mov    _0c1b74_data,%ebx
		mov    0x000028(%edi),%ecx
		lea    0x000081(%edi),%edx
		cmp    %ecx,%ebx
		setg   %al
		mov    (%edx),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		mov    %ch,%ah
		or     %al,%ah
		mov    %ah,(%edx)

	_01c521_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c52c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    0x000076(%eax),%ah
		dec    %ah
		mov    %ah,0x000076(%ecx)
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _01c5b9_jump
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01c563_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000c,%eax
		je     _01c586_jump
		cmp    $0x00000d,%eax
		je     _01c586_jump
		cmp    $0x000017,%eax
		je     _01c586_jump
		cmp    $0x000014,%eax
		je     _01c586_jump

	_01c563_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _01c58d_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _01c586_jump
		cmp    $0x000003,%eax
		je     _01c586_jump
		cmp    $0x00001c,%eax
		je     _01c586_jump
		cmp    $0x000007,%eax
		jne    _01c58d_jump

	_01c586_jump:
		mov    $0x000013,%ebx
		jmp    _01c592_jump

	_01c58d_jump:
		mov    $0x000012,%ebx

	_01c592_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%bl
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01c5b9_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _01c5cd_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _01c5fc_jump

	_01c5cd_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01c61b_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000b,%eax
		je     _01c5fc_jump
		cmp    $0x00001d,%eax
		je     _01c5fc_jump
		cmp    $0x00001a,%eax
		je     _01c5fc_jump
		cmp    $0x000019,%eax
		je     _01c5fc_jump
		cmp    $0x00001b,%eax
		je     _01c5fc_jump
		cmp    $0x000018,%eax
		je     _01c5fc_jump
		cmp    $0x00001e,%eax
		jne    _01c61b_jump

	_01c5fc_jump:
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01c61b_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01c664_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000c,%eax
		je     _01c63b_jump
		cmp    $0x00000d,%eax
		je     _01c63b_jump
		cmp    $0x000017,%eax
		je     _01c63b_jump
		cmp    $0x000014,%eax
		jne    _01c664_jump

	_01c63b_jump:
		mov    _0c1b74_data,%edx
		cmp    0x000028(%ecx),%edx
		jle    _01c64f_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _01c656_jump

	_01c64f_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_01c656_jump:
		mov    $0x000011,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_01c664_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01c668_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _01c68f_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00000d,%edx
		je     _01c681_jump
		cmp    $0x00000c,%edx
		jne    _01c68f_jump

	_01c681_jump:
		mov    $0x000014,%edx
		call   _01d6e8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c68f_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _01c6a0_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00000b,%edx
		je     _01c6c9_jump

	_01c6a0_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _01c6b1_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00001e,%edx
		je     _01c6c9_jump

	_01c6b1_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _01c73f_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000002,%edx
		jne    _01c73f_jump

	_01c6c9_jump:
		mov    _0c1b74_data,%edx
		cmp    0x000028(%eax),%edx
		setg   %dl
		mov    %edx,%ebx
		mov    0x000081(%eax),%dl
		shl    $0x000004,%dl
		and    $0x0000ff,%ebx
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		cmp    %ebx,%edx
		setne  %dl
		and    $0x0000ff,%edx
		je     _01c73f_jump
		mov    _0c1b74_data,%ebx
		mov    0x000028(%eax),%ecx
		lea    0x000081(%eax),%edx
		cmp    %ecx,%ebx
		setg   %bl
		and    $0x0000ff,%ebx
		and    $0x000001,%bl
		mov    (%edx),%bh
		and    $0x0000f7,%bh
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%edx)
		mov    $0x000018,%ebx
		movw   $0x000000,0x000040(%eax)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%eax)
		call   _01d6f8_func

	_01c73f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c744_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		cmp    $0x000001,%eax
		je     _01c9c5_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%di
		mov    0x000068(%esi),%al
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%al
		add    %edx,%eax
		sub    %edi,%eax
		mov    _0ce910_data,%dh
		mov    %eax,%edi
		test   %dh,%dh
		je     _01c7a7_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b78_data,%cx
		mov    _0c1bb5_data,%al
		add    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		jmp    _01c7c4_jump

	_01c7a7_jump:
		xor    %eax,%eax
		mov    _0c1bb5_data,%al
		mov    _0c1b78_data,%ebx
		sar    %eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%ebx

	_01c7c4_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _01c7cd_jump
		neg    %eax

	_01c7cd_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _01c7d8_jump
		neg    %eax

	_01c7d8_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		mov    _0c1b78_data,%ecx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    _0c1bb5_data,%al
		add    %ebp,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c98a_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b74_data,%ebp
		mov    _0c1bb4_data,%al
		add    %ebp,%eax
		cmp    %edx,%eax
		jle    _01c836_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		je     _01c872_jump

	_01c836_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0c1b74_data,%ecx
		mov    _0c1bb4_data,%dl
		add    %ecx,%edx
		cmp    %eax,%edx
		jge    _01c98a_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01c98a_jump

	_01c872_jump:
		mov    -0x000002(%esp),%ebp
		sar    $0x000010,%ebp
		test   %ebp,%ebp
		jle    _01c89d_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_01c89d_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01c8bb_jump
		mov    $0x000001,%eax
		jg     _01c8bb_jump
		neg    %eax

	_01c8bb_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01c8c3_jump
		mov    %ebx,%eax

	_01c8c3_jump:
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jge    _01c8cb_jump
		mov    %ebx,%eax

	_01c8cb_jump:
		mov    %ax,0x000042(%esi)
		test   %ax,%ax
		je     _01c90e_jump
		mov    0x00003e(%esi),%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01c8f2_jump
		mov    $0x000001,%eax
		jg     _01c8f2_jump
		neg    %eax

	_01c8f2_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01c8fa_jump
		mov    %ebx,%eax

	_01c8fa_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01c905_jump
		mov    %ebx,%eax

	_01c905_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c9f5_jump

	_01c90e_jump:
		testb  $0x000008,0x000081(%esi)
		je     _01c952_jump
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setg   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $0x0000ff,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01c941_jump
		mov    %ebx,%eax

	_01c941_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01c949_jump
		mov    %ebx,%eax

	_01c949_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c9f5_jump

	_01c952_jump:
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setl   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $0x0000ff,%ecx
		sar    $0x000010,%eax
		add    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01c97c_jump
		mov    %ebx,%eax

	_01c97c_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01c984_jump
		mov    %ebx,%eax

	_01c984_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c9f5_jump

	_01c98a_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01c99d_jump
		mov    %ebx,%eax

	_01c99d_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01c9a8_jump
		mov    %ebx,%eax

	_01c9a8_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01c9bf_jump
		mov    %ebx,%eax

	_01c9bf_jump:
		mov    %ax,0x000042(%esi)
		jmp    _01c9f5_jump

	_01c9c5_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0c1b74_data,%ebx
		mov    _0c1bb4_data,%dl
		add    %ebx,%edx
		cmp    %eax,%edx
		jle    _01c9ec_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _01c9f5_jump

	_01c9ec_jump:
		jge    _01c9f5_jump
		orb    $0x000008,0x000081(%esi)

	_01c9f5_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _01ca29_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _01ca29_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01ca20_jump
		mov    $0xffffffff,%eax
		jmp    _01ca25_jump

	_01ca20_jump:
		mov    $0x000001,%eax

	_01ca25_jump:
		mov    %ax,0x000040(%esi)

	_01ca29_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01ca35_jump
		neg    %eax

	_01ca35_jump:
		cwtl   
		mov    0x000040(%esi),%ebx
		lea    0x000000(,%eax,4),%ecx
		sar    $0x000010,%ebx
		sub    %eax,%ecx
		cmp    %ebx,%ecx
		jge    _01ca4f_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _01ca84_jump

	_01ca4f_jump:
		lea    0x000000(,%ebx,4),%edx
		lea    0x000000(,%eax,4),%ebp
		sub    %ebx,%edx
		cmp    %edx,%ebp
		jge    _01ca69_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _01ca84_jump

	_01ca69_jump:
		shl    $0x000002,%ebx
		cmp    %ebx,%ecx
		jge    _01ca76_jump
		movb   $0x00000b,0x00006b(%esi)
		jmp    _01ca84_jump

	_01ca76_jump:
		cmp    %edx,%eax
		jge    _01ca80_jump
		movb   $0x00000a,0x00006b(%esi)
		jmp    _01ca84_jump

	_01ca80_jump:
		movb   $0x000009,0x00006b(%esi)

	_01ca84_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01caad_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01caad_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _01cad1_jump

	_01caad_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01cad1_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _01cad1_jump
		orb    $0x000008,0x000081(%esi)

	_01cad1_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cadc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000007,%eax
		jne    _01cb0a_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%dl
		mov    %dl,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cb0a_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		test   %edx,%edx
		jne    _01cb25_jump
		test   %eax,%eax
		jne    _01cb25_jump
		movw   $0x000000,0x000052(%ecx)

	_01cb25_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%al
		jbe    _01cb38_jump
		cmp    $0x000002,%al
		je     _01cc40_jump

	_01cb34_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cb38_jump:
		and    $0x0000ff,%eax
		jne    _01cb48_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01cb4f_jump

	_01cb48_jump:
		orb    $0x000008,0x000081(%ecx)

	_01cb4f_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		movw   $0x000001,0x000050(%ecx)
		test   %eax,%eax
		jne    _01cb73_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func

	_01cb73_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _01cb34_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _01cbd4_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01cbb8_jump
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000008,%ah
		mov    $0x000002,%edx
		mov    %ah,0x000081(%ecx)
		jmp    _01cbcd_jump

	_01cbb8_jump:
		mov    0x000081(%ecx),%al
		mov    $0x000001,%ebx
		and    $0x0000f7,%al
		xor    %edx,%edx
		mov    %al,0x000081(%ecx)

	_01cbcd_jump:
		mov    %ecx,%eax
		call   _056614_func

	_01cbd4_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		mov    %ecx,%eax
		call   _0248b8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cbe6_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000004,%eax
		jne    _01cbf6_jump
		movw   $0x000000,0x000052(%ecx)

	_01cbf6_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000008,%eax
		jne    _01cb34_jump
		mov    %ecx,%eax
		call   _024404_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cc0f_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		jne    _01cc2f_jump
		mov    %ecx,%eax
		call   _04aad8_func
		jmp    _01cc35_jump

	_01cc2f_jump:
		movw   $0x000000,0x000040(%ecx)

	_01cc35_jump:
		mov    %ecx,%eax
		call   _0248b8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cc40_jump:
		mov    0x00006d(%ecx),%al
		test   %al,%al
		jbe    _01cbe6_jump
		cmp    $0x000001,%al
		je     _01cc0f_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cc50_func:
		push   %edx
		mov    %eax,%edx
		call   _01cadc_func
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		test   %eax,%eax
		jne    _01cc80_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000003,%eax
		jne    _01cc80_jump
		mov    0x000050(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _01cc80_jump
		mov    %edx,%eax
		call   _01cc84_func
		movw   $0x000001,0x000052(%edx)

	_01cc80_jump:
		pop    %edx
		ret    



_01cc84_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _01ccb7_jump
		jmp    _01cdc3_jump

	_01cca7_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _01cdc3_jump

	_01ccb7_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000042,%edx
		jne    _01cca7_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01cca7_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%dh
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%dh
		je     _01ccfb_jump
		mov    $0xfffffffd,%edx
		jmp    _01cd00_jump

	_01ccfb_jump:
		mov    $0x000003,%edx

	_01cd00_jump:
		mov    %dx,0x000040(%esi)
		lea    0x000008(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x000008(%esp),%edx
		lea    0x000010(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000003,%edx
		call   _01da90_func
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%edx
		mov    -0x000002(%esp),%ebx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		movb   $0x000004,0x00007e(%esi)
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000028(%esi),%ax
		mov    0x000069(%esi),%bl
		mov    %ax,0x00003c(%esi)
		sub    %ebx,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		movb   $0x000000,0x00006d(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		movb   $0x000009,0x00006c(%esi)
		call   _056614_func
		mov    %esi,%eax
		call   _01df3c_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f7d4_func
		mov    0x000081(%esi),%bh
		movb   $0x000009,0x00006b(%esi)
		and    $0x0000bf,%bh
		mov    %bh,0x000081(%esi)

	_01cdc3_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cdcc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _01ce02_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01ce02_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01ce26_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _01ce22_jump
		cmp    $0x000003,%eax
		je     _01ce22_jump
		cmp    $0x000004,%eax
		je     _01ce22_jump
		cmp    $0x000005,%eax
		jne    _01ce26_jump

	_01ce22_jump:
		movb   $0x0000ff,0x00007c(%ecx)

	_01ce26_jump:
		mov    _0c1ef0_data,%eax
		movw   $0x000000,0x000050(%ecx)
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01ce55_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _056614_func
		orb    $0x000008,0x000081(%ecx)
		jmp    _01ce6a_jump

	_01ce55_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _056614_func
		andb   $0x0000f7,0x000081(%ecx)

	_01ce6a_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _0566b0_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		movb   $0x000000,0x00006b(%ecx)
		call   _0566b0_func
		pop    %ecx
		pop    %ebx
		ret    



_01ce94_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _01cf1c_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _01cf1c_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _01cf1c_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		movb   $0x000000,0x00006b(%ecx)
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _01ceee_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ebx
		or     $0x000008,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    $0x000003,%edx
		jmp    _01cf06_jump

	_01ceee_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		and    $0x0000f7,%ah
		mov    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax

	_01cf06_jump:
		call   _056614_func
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _0566b0_func

	_01cf1c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cf20_func:
		ret    



_01cf24_func:
		push   %edx
		cmpb   $0x000000,_0ce810_data
		je     _01cf36_jump
		xor    %dl,%dl
		mov    %dl,_0c697c_data

	_01cf36_jump:
		cmpb   $0x000000,_0c697c_data
		je     _01cf49_jump
		mov    $0x000002,%eax
		call   _0772fc_func

	_01cf49_jump:
		pop    %edx
		mov    %eax,%eax



_01cf4c_func:
		ret    



_01cf50_func:
		cmpb   $0x000000,_0ce86d_data
		je     _01cf4c_func
		mov    $0x000008,%eax
		jmp    _069584_jump



_01cf64_func:
		cmpb   $0x000000,_0c697c_data
		je     _01cf4c_func
		call   _0753b0_func
		and    $0x0000ff,%eax
		jmp    _0770ac_func



_01cfa0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c1b36_data,%eax
		mov    _0c1b34_data,%esi
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		mov    %eax,(%esp)
		test   %eax,%eax
		jle    _01d005_jump

	_01cfbf_jump:
		mov    %ecx,%edx
		and    $0x00000f,%edx
		mov    %ecx,%edi
		mov    0x000081(%esi),%dh
		mov    0x000024(%esi),%eax
		shl    $0x000005,%dh
		xor    %ebx,%ebx
		shr    $0x000007,%dh
		add    %eax,%eax
		mov    %dh,%bl
		sar    $0x000004,%edi
		add    %eax,%ebx
		lea    0x000000(,%edi,4),%eax
		and    $0x0000ff,%edx
		add    $_0c135c_data,%eax
		inc    %ecx
		call   _0531a0_func
		mov    (%esp),%ebx
		add    $0x000084,%esi
		cmp    %ebx,%ecx
		jl     _01cfbf_jump

	_01d005_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d010_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0c1b36_data,%ebp
		mov    _0c1b34_data,%esi
		sar    $0x000010,%ebp
		xor    %edi,%edi
		test   %ebp,%ebp
		jle    _01d08d_jump
		jmp    _01d03b_jump

	_01d030_jump:
		inc    %edi
		add    $0x000084,%esi
		cmp    %ebp,%edi
		jge    _01d08d_jump

	_01d03b_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00003a,%eax
		je     _01d030_jump
		mov    %edi,%eax
		mov    %edi,%edx
		sar    $0x000004,%eax
		and    $0x00000f,%edx
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		shl    $0x000002,%eax
		and    $0x0000ff,%edx
		add    $_0c135c_data,%eax
		call   _0531d4_func
		mov    (%esp),%eax
		mov    %eax,0x000024(%esi)
		mov    0x000004(%esp),%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000fb,%ah
		shl    $0x000002,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _01d030_jump

	_01d08d_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01d098_switch:
		.long   _01d292_case
		.long   _01d2aa_case
		.long   _01d2b3_case
		.long   _01d298_case

_01d0a8_switch:
		.long   _01d310_case
		.long   _01d328_case
		.long   _01d331_case
		.long   _01d316_case




_01d0b8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %bl,0x000020(%esp)
		mov    %ecx,0x000018(%esp)
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		shl    $0x000002,%eax
		mov    0x00000c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%edi),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		xor    %edx,%edx
		mov    0x000002(%ebp),%dl
		mov    0x000005(%ebp),%al
		mov    %dx,0x00001c(%esp)
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00006b(%edi),%dl
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0c24c8_data(%eax)
		jne    _01d19c_jump
		mov    0x00001a(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ebx
		mov    0x00000a(%ebx,%eax,4),%bl
		testb  $0x000010,0x000007(%ebp)
		je     _01d12d_jump
		mov    $0xffffffff,%eax
		jmp    _01d132_jump

	_01d12d_jump:
		mov    $0x000001,%eax

	_01d132_jump:
		xor    %ecx,%ecx
		movswl %dx,%edx
		mov    %bl,%cl
		add    %eax,%edx
		dec    %ecx
		movswl %dx,%eax
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jl     _01d150_jump
		cmp    %ecx,%eax
		jg     _01d150_jump
		mov    $0x000001,%eax
		jmp    _01d152_jump

	_01d150_jump:
		xor    %eax,%eax

	_01d152_jump:
		test   %eax,%eax
		jne    _01d19c_jump
		mov    0x000003(%ebp),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000004(%ebp),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000002(%edx),%al
		mov    %al,%bl
		mov    %ax,0x00001c(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ebx
		mov    0x000007(%edx),%cl
		mov    0x00000a(%ebx,%eax,4),%al
		test   $0x000010,%cl
		je     _01d19a_jump
		xor    %edx,%edx
		mov    %al,%dl
		dec    %edx
		jmp    _01d19c_jump

	_01d19a_jump:
		xor    %edx,%edx

	_01d19c_jump:
		xor    %eax,%eax
		mov    0x00006b(%edi),%al
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00006a(%edi),%al
		lea    0x00000c(%esp),%ecx
		mov    %ax,0x000014(%esp)
		mov    0x00001c(%esp),%al
		mov    %esp,%ebx
		mov    %al,0x00006a(%edi)
		lea    0x000010(%esp),%eax
		mov    %dl,0x00006b(%edi)
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000028(%esp),%dl
		mov    %edi,%eax
		call   _01da90_func
		mov    0x000014(%esp),%al
		mov    %al,0x00006a(%edi)
		mov    0x000004(%esp),%al
		mov    %al,0x00006b(%edi)
		mov    0x000018(%esp),%edx
		mov    (%esp),%ecx
		mov    0x000028(%esi),%bx
		add    %edx,%ecx
		sub    %ebx,%ecx

	_01d1f4_jump:
		movswl %cx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _01d1ff_jump
		neg    %eax

	_01d1ff_jump:
		cmp    $0x000010,%eax
		jl     _01d236_jump
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _01d214_jump
		mov    $0x000001,%eax
		jg     _01d214_jump
		neg    %eax

	_01d214_jump:
		shl    $0x000004,%eax
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    %edx,%eax
		mov    %ebx,0x000028(%esi)
		cmp    $0x000000,%eax
		je     _01d22f_jump
		mov    $0x000001,%eax
		jg     _01d22f_jump
		neg    %eax

	_01d22f_jump:
		shl    $0x000004,%eax
		sub    %eax,%ecx
		jmp    _01d1f4_jump

	_01d236_jump:
		mov    0x00000c(%esp),%ebx
		mov    0x000034(%esp),%eax
		mov    0x00002c(%esi),%dx
		add    %eax,%ebx
		sub    %edx,%ebx

	_01d246_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _01d251_jump
		neg    %eax

	_01d251_jump:
		cmp    $0x000010,%eax
		jl     _01d288_jump
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _01d266_jump
		mov    $0x000001,%eax
		jg     _01d266_jump
		neg    %eax

	_01d266_jump:
		shl    $0x000004,%eax
		mov    0x00002c(%esi),%ebp
		add    %eax,%ebp
		mov    %edx,%eax
		mov    %ebp,0x00002c(%esi)
		cmp    $0x000000,%eax
		je     _01d281_jump
		mov    $0x000001,%eax
		jg     _01d281_jump
		neg    %eax

	_01d281_jump:
		shl    $0x000004,%eax
		sub    %eax,%ebx
		jmp    _01d246_jump

	_01d288_jump:
		test   %cx,%cx
		jne    _01d2c2_jump
		jmp    _01d306_jump

	_01d292_case:
		add    0x000040(%edi),%cx
		jmp    _01d306_jump

	_01d298_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ecx
		call   _04aa54_func
		add    %eax,%ecx
		jmp    _01d306_jump

	_01d2aa_case:
		add    0x000040(%edi),%cx
		shl    $0x000004,%ecx
		jmp    _01d306_jump

	_01d2b3_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		call   _04aa54_func
		add    %eax,%ecx
		jmp    _01d306_jump

	_01d2c2_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		mov    _092239_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		mov    _092239_data(,%eax,4),%al
		shl    $0x000003,%dl
		shl    $0x000003,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %eax,%eax
		and    $0x0000ff,%edx
		add    %edx,%eax
		cmp    $0x000003,%eax
		ja     _01d306_jump
		jmp    *%cs:_01d098_switch(,%eax,4)

	_01d306_jump:
		test   %bx,%bx
		jne    _01d340_jump
		jmp    _01d384_jump

	_01d310_case:
		add    0x000042(%edi),%bx
		jmp    _01d384_jump

	_01d316_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ebx
		call   _04aa54_func
		add    %eax,%ebx
		jmp    _01d384_jump

	_01d328_case:
		add    0x000042(%edi),%bx
		shl    $0x000004,%ebx
		jmp    _01d384_jump

	_01d331_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		call   _04aa54_func
		add    %eax,%ebx
		jmp    _01d384_jump

	_01d340_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		mov    _092239_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		mov    _092239_data(,%eax,4),%al
		shl    $0x000002,%dl
		shl    $0x000002,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %eax,%eax
		and    $0x0000ff,%edx
		add    %edx,%eax
		cmp    $0x000003,%eax
		ja     _01d384_jump
		jmp    *%cs:_01d0a8_switch(,%eax,4)

	_01d384_jump:
		mov    %cx,0x000040(%esi)
		mov    %bx,0x000042(%esi)
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01d398_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0c1b34_data,%eax
		mov    _0c1b38_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jg     _01d3bf_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01d3b4_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %bx,%dx
		jge    _01d3c5_jump

	_01d3bf_jump:
		cmp    0x000060(%eax),%cx
		jne    _01d3b4_jump

	_01d3c5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d3cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0c1b34_data,%eax
		mov    _0c1b38_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jg     _01d3f3_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01d3e8_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %bx,%dx
		jge    _01d3ff_jump

	_01d3f3_jump:
		cmp    0x000060(%eax),%cx
		jne    _01d3e8_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _01d3e8_jump

	_01d3ff_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d404_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		add    (%ecx),%dx
		mov    0x00002c(%eax),%ax
		and    $0x00000f,%dh
		mov    0x00003e(%esi),%di
		mov    %eax,%esi
		movswl %dx,%eax
		sar    $0x000003,%eax
		cwtl   
		sub    %edi,%esi
		call   _0532c0_func
		movswl %ax,%edi
		movswl %bx,%eax
		imul   %edi,%eax
		sar    $0x000009,%eax
		mov    %dx,(%ecx)
		sub    %esi,%eax
		pop    %edi
		pop    %esi
		ret    



_01d43c_func:
		mov    %ax,_0c2614_data
		mov    %dx,_0c2616_data
		ret    



_01d44c_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cmpb   $0x000000,_0c261a_data
		jne    _01d45e_jump
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_01d45e_jump:
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d48c_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%ecx
		imul   %ecx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d4b4_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0c2612_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d4f0_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0c2614_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d52c_func:
		mov    %al,_0c261a_data
		ret    



_01d534_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0c2612_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		shl    $0x000008,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d56c_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0c2614_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		shl    $0x000008,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d5a4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		mov    %dl,%ch
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00006c(%ebx),%dl
		mov    (%eax),%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000002(%eax),%dl
		mov    0x000005(%eax),%cl
		lea    0x000000(,%edx,4),%eax
		and    $0x00000f,%cl
		sub    %edx,%eax
		mov    0x000004(%ebx),%edx
		movzbw %cl,%si
		mov    0x00000a(%edx,%eax,4),%dx
		imul   %esi,%edx
		xor    %eax,%eax
		mov    %ch,%al
		imul   %eax,%edx
		xor    %eax,%eax
		mov    %cl,%al
		mov    _0c24c8_data(%eax),%al
		xor    %ah,%ah
		sub    %eax,%edx
		inc    %edx
		movswl %dx,%eax
		test   %eax,%eax
		jg     _01d609_jump
		mov    $0x000001,%eax

	_01d609_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01d610_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x000004(%ebx,%edx,4),%edx
		xor    %ebx,%ebx
		mov    0x00006b(%eax),%bl
		shl    $0x000002,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%edx),%bl
		mov    %bx,(%ecx)
		xor    %ebx,%ebx
		mov    0x000018(%esp),%ebp
		mov    0x000003(%edx),%bl
		mov    %bx,0x000000(%ebp)
		testb  $0x000008,0x000081(%eax)
		jne    _01d66c_jump
		xor    %ebx,%ebx
		mov    (%edx),%bl
		mov    %ebx,(%esp)
		mov    (%esp),%ecx
		mov    0x000028(%eax),%bx
		add    %ecx,%ebx
		mov    %bx,(%esi)
		jmp    _01d69f_jump

	_01d66c_jump:
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		add    %ebx,%ebx
		mov    %ebx,(%esp)
		mov    0x000028(%eax),%bx
		add    (%esp),%ebx
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		mov    (%edx),%bl
		mov    %ebx,0x000004(%esp)
		mov    (%esp),%ebx
		sub    0x000004(%esp),%ebx
		mov    %ebx,0x000004(%esp)
		mov    (%ecx),%bx
		mov    0x000004(%esp),%ecx
		sub    %ebx,%ecx
		mov    %cx,(%esi)

	_01d69f_jump:
		mov    0x000001(%edx),%dl
		mov    0x00002c(%eax),%ax
		xor    %dh,%dh
		add    %edx,%eax
		mov    %ax,(%edi)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01d6e8_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006c(%eax)
		ret    



_01d6f0_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006d(%eax)
		ret    



_01d6f8_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006d(%eax)
		mov    %bl,0x00006c(%eax)
		ret    



_01d704_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00008a,%ax
		jb     _01d7e9_jump
		jbe    _01d7ab_jump
		cmp    $0x0000ae,%ax
		jb     _01d7c6_jump
		jbe    _01d792_jump
		cmp    $0x0000bd,%ax
		jb     _01d7b9_jump
		jbe    _01d769_jump
		cmp    $0x0000e1,%ax
		jb     _01d743_jump
		cmp    $0x0000e2,%ax
		jbe    _01d792_jump

	_01d743_jump:
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d74a_jump:
		mov    $0x000040,%eax
		pop    %edx
		ret    

	_01d751_jump:
		mov    _0c2522_data,%ax
		mov    %eax,%edx
		cmp    $0x000001,%ax
		jb     _01d743_jump
		jbe    _01d743_jump
		cmp    $0x000002,%ax
		je     _01d74a_jump
		jmp    _01d743_jump

	_01d769_jump:
		mov    $0x000012,%eax
		pop    %edx
		ret    

	_01d770_jump:
		mov    _0c2522_data,%ax
		cmp    $0x000001,%ax
		jb     _01d769_jump
		jbe    _01d769_jump
		cmp    $0x000002,%ax
		jmp    _01d769_jump

	_01d784_jump:
		mov    $0x000046,%eax
		pop    %edx
		ret    

	_01d78b_jump:
		mov    $0x000080,%eax
		pop    %edx
		ret    

	_01d792_jump:
		mov    $0x000050,%eax
		pop    %edx
		ret    

	_01d799_jump:
		mov    0x000075(%edx),%al
		cmp    $0x000005,%al
		jb     _01d743_jump
		cmp    $0x000007,%al
		jbe    _01d792_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d7ab_jump:
		mov    $0x000068,%eax
		pop    %edx
		ret    

	_01d7b2_jump:
		mov    $0x000024,%eax
		pop    %edx
		ret    

	_01d7b9_jump:
		cmp    $0x0000b8,%ax
		je     _01d792_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d7c6_jump:
		cmp    $0x00008c,%ax
		jb     _01d743_jump
		jbe    _01d7b2_jump
		cmp    $0x00009a,%ax
		jb     _01d743_jump
		cmp    $0x00009b,%ax
		jbe    _01d7ab_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d7e9_jump:
		cmp    $0x000031,%ax
		jb     _01d80a_jump
		jbe    _01d78b_jump
		cmp    $0x00006a,%ax
		jb     _01d743_jump
		jbe    _01d784_jump
		cmp    $0x00007b,%ax
		je     _01d799_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d80a_jump:
		cmp    $0x000016,%ax
		jb     _01d743_jump
		jbe    _01d751_jump
		cmp    $0x00002d,%ax
		je     _01d770_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    



_01d82c_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000060(%eax),%ax
		cmp    $0x00008c,%ax
		jb     _01d94c_jump
		jbe    _01d8fe_jump
		cmp    $0x0000b8,%ax
		jb     _01d92c_jump
		jbe    _01d908_jump
		cmp    $0x0000c3,%ax
		jb     _01d91c_jump
		jbe    _01d912_jump
		cmp    $0x0000e1,%ax
		jb     _01d874_jump
		cmp    $0x0000e2,%ax
		jbe    _01d908_jump

	_01d874_jump:
		mov    $0x000028,%edx

	_01d879_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d87e_jump:
		mov    _0c2522_data,%ax
		mov    %eax,%edx
		cmp    $0x000001,%ax
		jb     _01d874_jump
		jbe    _01d874_jump
		cmp    $0x000002,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d89c_jump:
		mov    _0c2522_data,%ax
		mov    %eax,%edx
		cmp    $0x000001,%ax
		jb     _01d8b0_jump
		jbe    _01d8b0_jump
		cmp    $0x000002,%ax

	_01d8b0_jump:
		mov    $0x000012,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d8ba_jump:
		mov    0x000040(%ebx),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jle    _01d8ce_jump

	_01d8c4_jump:
		mov    $0x000040,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d8ce_jump:
		mov    $0x00004e,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d8d8_jump:
		mov    $0x000048,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d8e2_jump:
		mov    0x000075(%ebx),%al
		cmp    $0x000005,%al
		jb     _01d879_jump
		jbe    _01d8d8_jump
		cmp    $0x000007,%al
		jbe    _01d8ba_jump
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d8f4_jump:
		mov    $0x000068,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d8fe_jump:
		mov    $0x000020,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d908_jump:
		mov    $0x000060,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d912_jump:
		mov    $0x00005a,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d91c_jump:
		cmp    $0x0000bd,%ax
		je     _01d8b0_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d92c_jump:
		cmp    $0x00009a,%ax
		jb     _01d874_jump
		cmp    $0x00009b,%ax
		jbe    _01d8f4_jump
		cmp    $0x0000ae,%ax
		je     _01d908_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d94c_jump:
		cmp    $0x000031,%ax
		jb     _01d97e_jump
		jbe    _01d8c4_jump
		cmp    $0x00007b,%ax
		jb     _01d970_jump
		jbe    _01d8e2_jump
		cmp    $0x00008a,%ax
		je     _01d8f4_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d970_jump:
		cmp    $0x00006a,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d97e_jump:
		cmp    $0x000016,%ax
		jb     _01d874_jump
		jbe    _01d87e_jump
		cmp    $0x00002d,%ax
		je     _01d89c_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_01d9a4_func:
		push   %ecx
		push   %esi
		movswl %bx,%ebx
		movswl %dx,%edx
		mov    0x00002c(%eax),%ecx
		mov    0x000028(%eax),%esi
		add    %ecx,%ebx
		add    %esi,%edx
		sar    $0x000004,%ebx
		sar    $0x000004,%edx
		movswl %bx,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _01e4d8_func
		and    $0x0000ff,%eax
		mov    _0921f8_data(%eax),%al
		shl    $0x000002,%al
		shr    $0x000007,%al
		xor    %ah,%ah

	_01d9dc_jump:
		pop    %esi
		pop    %ecx
		ret    



_01d9e0_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %ebx,%edx
		mov    0x000008(%esi),%bx
		and    $0x00003f,%bh
		xor    %ecx,%ecx
		and    $0x00ffff,%ebx
		mov    0x00006b(%eax),%cl
		imul   %ecx,%ebx
		lea    0x000000(,%ebx,4),%ecx
		mov    (%esi),%ebx
		mov    0x000008(%edx),%si
		and    $0x003fff,%esi
		movzwl %si,%ebp
		movswl %di,%esi
		imul   %ebp,%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x000075(%eax),%cl
		mov    (%edx),%edx
		shl    $0x000002,%ecx
		shl    $0x000002,%esi
		add    %ecx,%ebx
		add    %esi,%edx
		movzbl 0x000003(%ebx),%esi
		add    %edx,%ecx
		lea    0x000000(,%esi,4),%edx
		sub    %esi,%edx
		mov    (%eax),%esi
		movzbw 0x000005(%esi,%edx,4),%si
		testb  $0x000008,0x000081(%eax)
		je     _01da6a_jump
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		add    %edx,%edx
		sub    %esi,%edx
		mov    %edx,%edi
		movzbw 0x000001(%ecx),%si
		sub    %esi,%edi
		mov    %edi,%esi
		movzbw 0x000001(%ebx),%di
		sub    %edi,%edx
		jmp    _01da74_jump

	_01da6a_jump:
		xor    %edx,%edx
		movzbw 0x000001(%ecx),%si
		mov    0x000001(%ebx),%dl

	_01da74_jump:
		mov    0x000002(%ebx),%bl
		mov    0x000002(%ecx),%cl
		xor    %bh,%bh
		xor    %ch,%ch
		sub    %esi,%edx
		sub    %ecx,%ebx
		mov    %dx,0x00004e(%eax)
		mov    %bx,0x00004c(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01da90_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ebx
		add    %ebx,%edx
		mov    0x000008(%edx),%bx
		xor    %ecx,%ecx
		and    $0x00003f,%bh
		mov    %bx,%cx
		xor    %ebx,%ebx
		mov    0x00006b(%eax),%bl
		imul   %ecx,%ebx
		mov    (%edx),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%dl
		mov    %dl,%cl
		mov    %dl,0x000008(%esp)
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    (%eax),%ecx
		add    %ecx,%edx
		cmpb   $0x000000,0x000008(%esp)
		je     _01dbcb_jump
		cmpb   $0x000000,0x000004(%edx)
		je     _01dbcb_jump
		xor    %ecx,%ecx
		mov    0x000007(%edx),%cl
		mov    0x000020(%esp),%ebp
		mov    %cx,0x000000(%ebp)
		xor    %ecx,%ecx
		mov    0x000024(%esp),%ebp
		mov    0x000008(%edx),%cl
		mov    %cx,0x000000(%ebp)
		mov    0x000081(%eax),%cl
		shl    $0x000004,%cl
		shr    $0x000007,%cl
		movzbl %cl,%ebp
		mov    0x00000b(%edx),%cl
		shl    $0x000005,%cl
		shr    $0x000007,%cl
		mov    %cl,0x00000c(%esp)
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%cl
		xor    %ebp,%ecx
		je     _01db82_jump
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %ecx,(%esp)
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		mov    (%esp),%ebp
		and    $0x0000ff,%ecx
		add    %ecx,%ebp
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		add    %ecx,%ecx
		sub    %ebp,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    (%esp),%ebp
		mov    0x000005(%edx),%cl
		sub    %ecx,%ebp
		mov    %ebp,%ecx
		mov    0x000028(%eax),%ebp
		jmp    _01db96_jump

	_01db82_jump:
		mov    0x000001(%ebx),%cl
		mov    0x000028(%eax),%ebp
		add    %ecx,%ebp
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		and    $0x0000ff,%ecx

	_01db96_jump:
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		mov    (%esp),%ecx
		mov    %cx,(%esi)
		mov    0x000002(%ebx),%bl
		mov    0x000009(%edx),%dl
		and    $0x0000ff,%ebx
		shr    $0x000004,%dl
		and    $0x0000ff,%edx
		add    %ebx,%edx
		add    0x00002c(%eax),%edx
		mov    $0x000001,%al
		mov    %dx,(%edi)
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01dbcb_jump:
		xor    %al,%al
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01dbd8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    0x00001c(%esp),%ebp
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		mov    %eax,0x000004(%esp)
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%edx),%eax
		add    (%esp),%eax
		testb  $0x000040,0x000007(%eax)
		je     _01dc35_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00000e,0x000000(%ebp)
		jmp    _01dcf4_jump

	_01dc35_jump:
		mov    0x000004(%esp),%eax
		cmp    $0x000005,%eax
		jne    _01dc66_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00002e,0x000000(%ebp)
		jmp    _01dcf4_jump

	_01dc66_jump:
		cmp    $0x000007,%eax
		jne    _01dcd1_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00006b(%esi),%al
		mov    %al,%dl
		cmp    $0x000020,%edx
		jle    _01dc7c_jump
		sub    $0x000020,%eax

	_01dc7c_jump:
		cwtl   
		cmp    $0x000009,%eax
		jle    _01dcac_jump
		cmp    $0x000017,%eax
		jge    _01dcac_jump
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,(%ebx)
		movw   $0x000024,(%ecx)
		movw   $0x000014,0x000000(%ebp)
		jmp    _01dcf4_jump

	_01dcac_jump:
		mov    0x000028(%esi),%ax
		add    $0x000046,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000014,(%ecx)
		movw   $0x000028,0x000000(%ebp)
		jmp    _01dcf4_jump

	_01dcd1_jump:
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000018,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x000036,0x000000(%ebp)

	_01dcf4_jump:
		cmpw   $0x000000,0x00005a(%esi)
		je     _01dd94_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    %eax,0x000008(%esp)
		mov    0x000028(%esi),%ax
		add    0x000008(%esp),%eax
		mov    %ax,0x000008(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		call   _01d43c_func
		mov    0x000058(%esi),%eax
		movswl (%edi),%edx
		sar    $0x000010,%eax
		call   _01d4b4_func
		mov    %ax,(%edi)
		mov    0x000058(%esi),%eax
		movswl (%ebx),%edx
		sar    $0x000010,%eax
		call   _01d4f0_func
		mov    %ax,(%ebx)
		mov    0x000058(%esi),%eax
		movswl (%ecx),%edx
		sar    $0x000010,%eax
		call   _01d48c_func
		mov    %ax,(%ecx)
		mov    0x000058(%esi),%eax
		movswl 0x000000(%ebp),%edx
		sar    $0x000010,%eax
		call   _01d48c_func
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x000038(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000036(%esi),%cx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		cwtl   
		call   _01d43c_func

	_01dd94_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01dda0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		movw   $0x000006,0x000008(%esp)
		lea    0x000004(%esp),%edx
		push   %edx
		mov    %edi,%edx
		call   _01d610_func
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		cmp    $0x000002,%edx
		jne    _01dde1_jump
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		test   %edx,%edx
		je     _01ddda_jump
		cmp    $0x000004,%edx
		jne    _01dde1_jump

	_01ddda_jump:
		movw   $0x000003,0x000008(%esp)

	_01dde1_jump:
		mov    0x00001c(%esp),%edx
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		push   %edx
		mov    %esi,%eax
		mov    0x00000a(%esp),%edx
		push   %ebx
		sar    $0x000010,%edx
		mov    %edi,%ebx
		call   _01da90_func
		mov    (%edi),%ax
		mov    0x000020(%esp),%edx
		sub    $0x000007,%eax
		mov    %ax,(%edx)
		mov    0x00001c(%esp),%edx
		mov    0x000000(%ebp),%ax
		mov    (%edx),%cx
		mov    0x000024(%esp),%edx
		add    %ecx,%eax
		mov    %ax,(%edx)
		mov    (%esp),%eax
		mov    (%eax),%ax
		mov    0x000028(%esp),%edx
		add    $0x00000e,%eax
		mov    %ax,(%edx)
		mov    0x000002(%esp),%edx
		mov    0x00002c(%esp),%eax
		sar    $0x000011,%edx
		mov    %dx,(%eax)
		mov    (%edi),%ax
		add    $0x000004,%eax
		mov    (%esp),%edx
		mov    %ax,(%edi)
		subw   $0x000008,(%edx)
		mov    0x000000(%ebp),%cx
		add    $0x000004,%ecx
		mov    0x00001c(%esp),%edx
		mov    %cx,0x000000(%ebp)
		subw   $0x000008,(%edx)
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _01de73_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000010,%edx
		je     _01de84_jump

	_01de73_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _01de9a_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000013,%edx
		jne    _01de9a_jump

	_01de84_jump:
		mov    0x00001c(%esp),%ecx
		mov    (%esp),%eax
		push   %ecx
		mov    %edi,%ebx
		xor    %edx,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    %esi,%eax
		call   _01da90_func

	_01de9a_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000014



_01dea4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0c1b74_data,%ebx
		mov    _0c1bb4_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		xor    %ebx,%ebx
		sub    %ecx,%edx
		mov    0x000068(%eax),%bl
		sub    %ebx,%edx
		test   %edx,%edx
		jle    _01ded2_jump
		orb    $0x000008,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ded2_jump:
		andb   $0x0000f7,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01dee0_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x000009,%ax
		jb     _01df23_jump
		jbe    _01defd_jump
		cmp    $0x000090,%ax
		jb     _01df10_jump
		jbe    _01defd_jump
		cmp    $0x0000a5,%ax
		jne    _01df10_jump

	_01defd_jump:
		mov    0x00007b(%edx),%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    

	_01df10_jump:
		mov    0x00007b(%edx),%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		setge  %al
		xor    %ah,%ah
		pop    %edx
		ret    

	_01df23_jump:
		cmp    $0x000003,%ax
		je     _01defd_jump
		mov    0x00007b(%edx),%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		setge  %al
		xor    %ah,%ah
		pop    %edx
		ret    



_01df3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c24ae_data,%bx
		mov    0x00002c(%eax),%dx
		sub    %ebx,%edx
		mov    %dx,0x000038(%eax)
		mov    _0c24ac_data,%cx
		mov    0x000028(%eax),%dx
		sub    %ecx,%edx
		add    $0x000008,%edx
		mov    %dx,0x000036(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01df68_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		movb   $0x0000ff,(%esp)
		mov    0x000060(%ecx),%ax
		cmp    $0x000046,%ax
		jb     _01e427_jump
		jbe    _01e1be_jump
		cmp    $0x00009c,%ax
		jb     _01e403_jump
		jbe    _01e32a_jump
		cmp    $0x0000c3,%ax
		jb     _01e3f4_jump
		jbe    _01e35c_jump
		cmp    $0x0000d9,%ax
		je     _01e28c_jump
		jmp    _01e47c_jump

	_01dfb7_jump:
		xor    %eax,%eax
		mov    0x000075(%ecx),%al
		cmp    $0x000001,%eax
		je     _01dfd4_jump
		cmp    $0x000002,%eax
		je     _01dfd4_jump
		cmp    $0x000004,%eax
		je     _01dfd4_jump
		cmp    $0x000007,%eax
		jne    _01e47c_jump

	_01dfd4_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01dfed_jump
		movb   $0x000003,(%esp)
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e47c_jump

	_01dfed_jump:
		cmp    $0x000001,%eax
		jne    _01e47c_jump
		movb   $0x000002,(%esp)
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e006_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e053_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		je     _01e47c_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _01e47c_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000005,%eax
		je     _01e47c_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000004,%eax
		je     _01e47c_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000006,%eax
		je     _01e47c_jump

	_01e053_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01e06c_jump
		movb   $0x000001,(%esp)
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e06c_jump:
		cmp    $0x000001,%eax
		jne    _01e47c_jump
		xor    %dl,%dl
		mov    %dl,(%esp)
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e086_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e0a4_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		je     _01e47c_jump
		cmp    $0x000001,%eax
		je     _01e47c_jump

	_01e0a4_jump:
		mov    0x000081(%ecx),%bh
		test   $0x000010,%bh
		je     _01e0e8_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01e0cc_jump
		movb   $0x000001,(%esp)
		mov    %bh,%ah
		or     $0x000008,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e0cc_jump:
		cmp    $0x000001,%eax
		jne    _01e47c_jump
		xor    %bl,%bl
		mov    %bl,(%esp)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e0e8_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01e105_jump
		movb   $0x000006,(%esp)
		mov    %bh,%dh
		or     $0x000008,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e105_jump:
		cmp    $0x000001,%eax
		jne    _01e47c_jump
		movb   $0x000005,(%esp)
		mov    %bh,%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e122_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e137_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		je     _01e47c_jump

	_01e137_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01e159_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000001,%dh
		or     $0x000008,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e159_jump:
		cmp    $0x000001,%eax
		jne    _01e47c_jump
		mov    0x000081(%ecx),%dl
		xor    %ah,%ah
		and    $0x0000f7,%dl
		mov    %ah,(%esp)
		mov    %dl,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e17b_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01e19c_jump
		mov    0x000081(%ecx),%al
		mov    $0x000005,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e19c_jump:
		cmp    $0x000001,%eax
		jne    _01e47c_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000004,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e1be_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e1d3_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _01e47c_jump

	_01e1d3_jump:
		testb  $0x000010,0x000081(%ecx)
		je     _01e47c_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01e1f9_jump
		movb   $0x000001,(%esp)
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e1f9_jump:
		cmp    $0x000001,%eax
		jne    _01e47c_jump
		xor    %dl,%dl
		mov    %dl,(%esp)
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e213_jump:
		mov    0x000081(%ecx),%bl
		test   $0x000010,%bl
		je     _01e47c_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01e240_jump
		mov    %bl,%dl
		mov    $0x000001,%ah
		or     $0x000008,%dl
		mov    %ah,(%esp)
		mov    %dl,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e240_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%eax
		jne    _01e47c_jump
		xor    %bh,%bh
		mov    %bl,%al
		and    $0x0000f7,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e262_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01e27b_jump
		orb    $0x000008,0x000081(%ecx)
		movb   $0x000002,(%esp)
		jmp    _01e47c_jump

	_01e27b_jump:
		andb   $0x0000f7,0x000081(%ecx)
		xor    %ah,%ah
		mov    %ah,(%esp)
		jmp    _01e47c_jump

	_01e28c_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _01e2a8_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e2af_jump

	_01e2a8_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_01e2af_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e2c4_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		je     _01e47c_jump

	_01e2c4_jump:
		mov    $0x000003,%al
		movw   $0x000000,0x00004a(%ecx)
		mov    %al,(%esp)
		jmp    _01e47c_jump

	_01e2d4_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e2e9_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _01e47c_jump

	_01e2e9_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _01e31a_jump
		orb    $0x000008,0x000081(%ecx)
		movb   $0x000003,(%esp)
		jmp    _01e47c_jump

	_01e31a_jump:
		andb   $0x0000f7,0x000081(%ecx)
		movb   $0x000002,(%esp)
		jmp    _01e47c_jump

	_01e32a_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01e343_jump
		movb   $0x000002,(%esp)
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e343_jump:
		cmp    $0x000001,%eax
		jne    _01e47c_jump
		movb   $0x000001,(%esp)
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01e47c_jump

	_01e35c_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e371_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000018,%eax
		je     _01e47c_jump

	_01e371_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e386_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000012,%eax
		je     _01e47c_jump

	_01e386_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e39b_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000013,%eax
		je     _01e47c_jump

	_01e39b_jump:
		mov    $0x000018,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%ecx),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%ecx)
		and    $0x000001,%al
		mov    %bl,%bh
		shl    $0x000003,%al
		movw   $0x000000,0x000042(%ecx)
		or     %al,%bh
		mov    0x000042(%ecx),%ax
		mov    %bh,0x000081(%ecx)
		mov    %ax,0x000040(%ecx)
		jmp    _01e47c_jump

	_01e3f4_jump:
		cmp    $0x0000a5,%ax
		je     _01e086_jump
		jmp    _01e47c_jump

	_01e403_jump:
		cmp    $0x00007b,%ax
		jb     _01e41b_jump
		jbe    _01dfb7_jump
		cmp    $0x000098,%ax
		je     _01e2d4_jump
		jmp    _01e47c_jump

	_01e41b_jump:
		cmp    $0x000064,%ax
		je     _01e2af_jump
		jmp    _01e47c_jump

	_01e427_jump:
		cmp    $0x000023,%ax
		jb     _01e45b_jump
		jbe    _01e17b_jump
		cmp    $0x00003c,%ax
		jb     _01e44f_jump
		cmp    $0x00003d,%ax
		jbe    _01e213_jump
		cmp    $0x000041,%ax
		je     _01e262_jump
		jmp    _01e47c_jump

	_01e44f_jump:
		cmp    $0x00002b,%ax
		je     _01e17b_jump
		jmp    _01e47c_jump

	_01e45b_jump:
		cmp    $0x000009,%ax
		jb     _01e473_jump
		jbe    _01e086_jump
		cmp    $0x000014,%ax
		je     _01e122_jump
		jmp    _01e47c_jump

	_01e473_jump:
		test   %ax,%ax
		je     _01e006_jump

	_01e47c_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x0000ff,%eax
		je     _01e4ce_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000010,_092239_data(,%eax,4)
		je     _01e4a9_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _04aa54_func
		cwtl   
		sub    %eax,0x000028(%ecx)
		jmp    _01e4b7_jump

	_01e4a9_jump:
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_01e4b7_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		movw   $0x000000,0x000040(%ecx)
		call   _056614_func

	_01e4ce_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e4d8_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    _0c24e2_data,%ecx
		movswl %ax,%esi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    %esi,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01e4fb_jump
		cmp    %ecx,%eax
		jg     _01e4fb_jump
		mov    $0x000001,%eax
		jmp    _01e4fd_jump

	_01e4fb_jump:
		xor    %eax,%eax

	_01e4fd_jump:
		test   %eax,%eax
		je     _01e550_jump
		mov    _0c24e4_data,%ecx
		movswl %dx,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01e521_jump
		cmp    %ecx,%eax
		jg     _01e521_jump
		mov    $0x000001,%eax
		jmp    _01e523_jump

	_01e521_jump:
		xor    %eax,%eax

	_01e523_jump:
		test   %eax,%eax
		je     _01e550_jump
		mov    _0c24e2_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		add    %esi,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_01e550_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01e558_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000017,%eax
		jne    _01e57f_jump
		testb  $0x000002,_0c3315_data
		je     _01e57b_jump
		mov    $0x000004,%dl
		jmp    _01e581_jump

	_01e57b_jump:
		mov    $0x000008,%dl
		jmp    _01e581_jump

	_01e57f_jump:
		mov    $0x000010,%dl

	_01e581_jump:
		movzbw 0x000068(%esi),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%edi
		mov    0x00002c(%esi),%bx
		add    %eax,%ebx
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    %ebx,0x000010(%esp)
		test   %ax,%ax
		js     _01e5a9_jump
		sar    %cl,%ax
		jmp    _01e5b2_jump

	_01e5a9_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e5b2_jump:
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %ax,0x00000c(%esp)
		mov    %edi,%eax
		test   %ax,%ax
		js     _01e5c7_jump
		sar    %cl,%ax
		jmp    _01e5d0_jump

	_01e5c7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e5d0_jump:
		mov    %ax,0x000008(%esp)
		mov    %ax,0x000004(%esp)
		mov    %edi,%eax
		xor    %dh,%dh
		mov    $0x000004,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _01e5ec_jump
		sar    %cl,%ax
		jmp    _01e5f5_jump

	_01e5ec_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e5f5_jump:
		mov    %ax,(%esp)
		mov    %edi,%eax
		mov    $0x000004,%cl
		add    %edx,%eax
		test   %ax,%ax
		js     _01e609_jump
		sar    %cl,%ax
		jmp    _01e612_jump

	_01e609_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e612_jump:
		mov    %ax,0x000014(%esp)
		mov    %ebx,%eax
		mov    0x000006(%esp),%ecx
		dec    %eax
		sar    $0x000010,%ecx
		movswl %ax,%edx
		mov    %ecx,%eax
		movswl %bx,%ebx
		call   _01e4d8_func
		mov    %al,0x000065(%esi)
		mov    -0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		call   _01e4d8_func
		mov    %al,0x000063(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _01e677_jump
		mov    0x000010(%esp),%eax
		xor    %ah,%ah
		and    $0x00000f,%edi
		and    $0x00000f,%al
		mov    %ebx,%edx
		movswl %ax,%ebp
		mov    %ecx,%eax
		movswl %di,%edi
		call   _01e4d8_func
		and    $0x0000ff,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _023f00_func
		cwtl   
		jmp    _01e685_jump

	_01e677_jump:
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01e4d8_func
		and    $0x0000ff,%eax

	_01e685_jump:
		mov    0x00000a(%esp),%edx
		mov    %al,0x000062(%esi)
		mov    0x000012(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01e4d8_func
		mov    %al,0x000064(%esi)
		mov    0x00000c(%esp),%eax
		inc    %eax
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _01e4d8_func
		mov    %al,0x000066(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e6e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _01e558_func
		movzbw 0x000068(%ebx),%si
		mov    0x000028(%ebx),%dx
		movzbw 0x000069(%ebx),%di
		xor    %eax,%eax
		mov    0x00002c(%ebx),%cx
		mov    0x000060(%ebx),%ax
		add    %edx,%esi
		add    %ecx,%edi
		cmp    $0x000017,%eax
		je     _01e729_jump
		jmp    _01e76b_jump

	_01e716_jump:
		movb   $0x000001,_0c259c_data
		jmp    _01e76b_jump

	_01e71f_jump:
		xor    %ah,%ah
		mov    %ah,_0c259c_data
		jmp    _01e76b_jump

	_01e729_jump:
		mov    $0xffffffff,%eax
		mov    _0c1bae_data,%cl
		mov    %ax,_0c1b9c_data
		cmp    $0x00000c,%cl
		jb     _01e761_jump
		jbe    _01e716_jump
		cmp    $0x000012,%cl
		jb     _01e757_jump
		cmp    $0x000017,%cl
		jbe    _01e71f_jump
		cmp    $0x000019,%cl
		jbe    _01e76b_jump
		cmp    $0x00001e,%cl
		je     _01e71f_jump
		jmp    _01e76b_jump

	_01e757_jump:
		cmp    $0x00000e,%cl
		jb     _01e76b_jump
		cmp    $0x00000f,%cl
		jmp    _01e769_jump

	_01e761_jump:
		cmp    $0x000002,%cl
		jb     _01e76b_jump
		cmp    $0x000007,%cl

	_01e769_jump:
		jbe    _01e716_jump

	_01e76b_jump:
		xor    %eax,%eax
		mov    0x000062(%ebx),%al
		testb  $0x000002,_0921f8_data(%eax)
		jne    _01e9ff_jump
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x000017,%eax
		jne    _01e7a6_jump
		mov    _0c1b9e_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		jmp    _01e7bb_jump

	_01e7a6_jump:
		movswl %di,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func

	_01e7bb_jump:
		xor    %edx,%edx
		mov    0x00006d(%ebx),%dl
		cmp    $0x000002,%edx
		jne    _01e7ea_jump
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_0921f8_data(%edx)
		jne    _01e7ea_jump
		movswl %di,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func

	_01e7ea_jump:
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_0921f8_data(%edx)
		je     _01e7fe_jump
		xor    %ah,%ah
		jmp    _01ea04_jump

	_01e7fe_jump:
		xor    %eax,%eax
		mov    0x000064(%ebx),%al
		mov    _0921f8_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,2),%edx
		xor    %eax,%eax
		mov    0x000063(%ebx),%al
		mov    _0921f8_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    %al,%cl
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000003,%eax
		jne    _01e850_jump
		mov    %esi,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		cmp    $0x000008,%ax
		jge    _01e84e_jump
		mov    $0x000001,%cl
		jmp    _01e850_jump

	_01e84e_jump:
		mov    $0x000002,%cl

	_01e850_jump:
		test   %cl,%cl
		je     _01e9ff_jump
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		dec    %cl
		cmp    $0x000017,%eax
		jne    _01e8f9_jump
		xor    %eax,%eax
		mov    _0c259c_data,%al
		cmp    $0x000001,%eax
		jne    _01e9ff_jump
		test   %cl,%cl
		je     _01e882_jump
		add    $0x000010,%esi
		jmp    _01e885_jump

	_01e882_jump:
		sub    $0x000010,%esi

	_01e885_jump:
		movswl %di,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		jne    _01e9ff_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _01e8d8_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%cl
		je     _01e8d2_jump
		movw   $0x000000,0x000050(%ebx)
		jmp    _01e8d8_jump

	_01e8d2_jump:
		movw   $0x000001,0x000050(%ebx)

	_01e8d8_jump:
		test   %cl,%cl
		setne  %al
		and    $0x0000ff,%eax
		inc    %eax
		mov    _0c1bae_data(%eax),%al
		mov    %al,_0c1bae_data
		xor    %eax,%eax
		mov    0x000062(%ebx),%al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01e8f9_jump:
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		cmp    %cl,%dl
		je     _01e9ff_jump
		xor    %edx,%edx
		mov    0x00006d(%ebx),%dl
		cmp    $0x000002,%edx
		je     _01e9ff_jump
		test   %eax,%eax
		jne    _01e939_jump
		mov    0x000081(%ebx),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _01e9f4_jump

	_01e939_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x000009,%eax
		je     _01e9f4_jump
		cmp    $0x0000a5,%eax
		je     _01e9f4_jump
		cmp    $0x000014,%eax
		je     _01e9f4_jump
		cmp    $0x000023,%eax
		je     _01e9f4_jump
		cmp    $0x00002b,%eax
		je     _01e9f4_jump
		cmp    $0x00003c,%eax
		je     _01e9f4_jump
		cmp    $0x00003d,%eax
		je     _01e9f4_jump
		cmp    $0x000041,%eax
		jne    _01e990_jump
		cmpw   $0x000000,0x000050(%ebx)
		jne    _01e9f4_jump

	_01e990_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x000046,%eax
		je     _01e9f4_jump
		cmp    $0x000064,%eax
		je     _01e9f4_jump
		cmp    $0x0000d9,%eax
		je     _01e9f4_jump
		cmp    $0x000098,%eax
		je     _01e9f4_jump
		cmp    $0x00009c,%eax
		je     _01e9f4_jump
		cmp    $0x0000c3,%eax
		je     _01e9f4_jump
		cmp    $0x00007b,%eax
		jne    _01e9ff_jump
		xor    %eax,%eax
		mov    0x000075(%ebx),%al
		cmp    $0x000001,%eax
		je     _01e9e3_jump
		cmp    $0x000004,%eax
		je     _01e9e3_jump
		cmp    $0x000007,%eax
		jne    _01e9ff_jump
		xor    %eax,%eax
		mov    0x00007d(%ebx),%al
		cmp    $0x000002,%eax
		jne    _01e9ff_jump

	_01e9e3_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		test   %eax,%eax
		jne    _01e9f4_jump
		mov    0x00006c(%ebx),%al
		cmp    $0x000004,%eax
		je     _01e9ff_jump

	_01e9f4_jump:
		mov    %ebx,%eax
		call   _01df68_func
		movb   $0x00000f,0x000062(%ebx)

	_01e9ff_jump:
		xor    %eax,%eax
		mov    0x000062(%ebx),%al

	_01ea04_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ea0c_func:
		movb   $0x000000,0x000071(%eax)
		movb   $0x000000,0x000072(%eax)
		ret    



_01ea18_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _01ea3b_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01ea32_jump
		neg    %eax

	_01ea32_jump:
		cmp    $0x000020,%eax
		jge    _01ea3b_jump
		add    %dx,0x000040(%ecx)

	_01ea3b_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000006,%eax
		jne    _01ea64_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _01ea59_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _01ea8d_jump

	_01ea59_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		jmp    _01ea81_jump

	_01ea64_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _01ea78_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _01ea8d_jump

	_01ea78_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_01ea81_jump:
		call   _01d6f8_func
		mov    %ecx,%eax
		call   _01ea0c_func

	_01ea8d_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01ea90_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%edx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		testb  $0x000010,0x000007(%ebx,%eax,8)
		je     _01eabd_jump
		xor    %eax,%eax
		mov    0x00006b(%edx),%al
		test   %eax,%eax
		jmp    _01eae7_jump

	_01eabd_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%edx),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    0x000004(%edx),%eax
		mov    0x00000a(%ebx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %ebx,%ebx
		dec    %eax
		mov    0x00006b(%edx),%bl
		cmp    %eax,%ebx

	_01eae7_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _01eb78_jump
		xor    %ebx,%ebx
		mov    0x00006d(%edx),%bl
		mov    0x00000c(%edx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _01eb78_jump
		mov    0x000081(%edx),%ch
		mov    %eax,0x000024(%edx)
		mov    _0c25ae_data,%eax
		and    $0x0000fb,%ch
		sar    $0x000010,%eax
		mov    %ch,0x000081(%edx)
		cmp    $0x000005,%eax
		jne    _01eb4d_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x0000a1,%eax
		je     _01eb58_jump

	_01eb4d_jump:
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _01f804_func

	_01eb58_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x0000aa,%eax
		je     _01eb6a_jump
		cmp    $0x00004b,%eax
		jne    _01eb78_jump

	_01eb6a_jump:
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_01eb78_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01eb7c_func:
		push   %ebx
		push   %edx
		mov    0x000076(%eax),%dl
		mov    _0c1f03_data,%dh
		cmp    %dh,%dl
		jae    _01eb92_jump
		movb   $0x000000,0x000076(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_01eb92_jump:
		mov    %dl,%bl
		sub    %dh,%bl
		mov    %bl,0x000076(%eax)
		pop    %edx
		pop    %ebx
		ret    



_01eb9c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %cx,0x000010(%esp)
		movw   $0x000000,(%edx)
		xor    %eax,%eax
		movw   $0x000000,(%ebx)
		mov    _0c1bb4_data,%al
		mov    0x00004e(%esi),%dx
		mov    0x000028(%esi),%bx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000068(%esi),%al
		mov    0x00004c(%esi),%cx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x00001c(%esp)
		mov    _0c1bb5_data,%al
		mov    0x00002c(%esi),%dx
		add    %ecx,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		mov    0x00001a(%esp),%ecx
		sub    %edx,%eax
		sar    $0x000010,%ecx
		mov    %ax,0x000014(%esp)
		mov    %ecx,%eax
		mov    0x000012(%esp),%ebx
		test   %eax,%eax
		jge    _01ec08_jump
		neg    %eax

	_01ec08_jump:
		mov    %eax,%edx
		sar    $0x000010,%ebx
		mov    %ax,0x00000c(%esp)
		mov    %ebx,%eax
		test   %eax,%eax
		jge    _01ec1a_jump
		neg    %eax

	_01ec1a_jump:
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%eax
		mov    %ax,0x000008(%esp)
		test   %ecx,%ecx
		je     _01ed32_jump
		test   %ebx,%ebx
		je     _01ed32_jump
		cmp    %ax,%dx
		jle    _01eccf_jump
		mov    0x000002(%esp),%eax
		mov    %ecx,%edx
		sar    $0x000010,%eax
		sar    $0x00001f,%edx
		mov    %eax,(%esp)
		mov    %ecx,%eax
		idivl  (%esp)
		mov    %eax,0x000018(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,0x000020(%esp)
		test   %ecx,%ecx
		jle    _01ec73_jump
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01ec7c_jump

	_01ec73_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01ec7c_jump:
		mov    0x000032(%esp),%edx
		mov    %ax,(%edi)
		mov    0x000012(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000000(%ebp)
		cwtl   
		test   %eax,%eax
		jne    _01edbd_jump
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01ecbd_jump
		mov    $0x000010,%eax
		jmp    _01ecc2_jump

	_01ecbd_jump:
		mov    $0xfffffff0,%eax

	_01ecc2_jump:
		movswl (%edi),%edx
		add    %eax,%edx
		mov    %dx,(%edi)
		jmp    _01edbd_jump

	_01eccf_jump:
		movswl %dx,%eax
		mov    %eax,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,0x000020(%esp)
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,0x000018(%esp)
		test   %ebx,%ebx
		jle    _01ecfe_jump
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01ed07_jump

	_01ecfe_jump:
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01ed07_jump:
		mov    0x00000e(%esp),%edx
		mov    %ax,0x000000(%ebp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,(%edi)
		jmp    _01edbd_jump

	_01ed32_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _01ed82_jump
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01ed53_jump
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax
		jmp    _01ed5a_jump

	_01ed53_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax

	_01ed5a_jump:
		mov    %ax,(%edi)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01ed72_jump
		movl   $0x000001,0x000018(%esp)
		jmp    _01ed7a_jump

	_01ed72_jump:
		movl   $0xffffffff,0x000018(%esp)

	_01ed7a_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x000020(%esp)
		jmp    _01edbd_jump

	_01ed82_jump:
		jle    _01ed8d_jump
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01ed96_jump

	_01ed8d_jump:
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01ed96_jump:
		mov    %ax,0x000000(%ebp)
		mov    0x000012(%esp),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    %ebx,0x000018(%esp)
		test   %eax,%eax
		jle    _01edb5_jump
		movl   $0x000001,0x000020(%esp)
		jmp    _01edbd_jump

	_01edb5_jump:
		movl   $0xffffffff,0x000020(%esp)

	_01edbd_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _01edd7_jump
		movswl (%edi),%eax
		test   %eax,%eax
		jg     _01edf4_jump

	_01edd7_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01ee05_jump
		movswl (%edi),%eax
		test   %eax,%eax
		jge    _01ee05_jump

	_01edf4_jump:
		negw   (%edi)
		movswl 0x000000(%ebp),%eax
		test   %eax,%eax
		jne    _01ee05_jump
		movw   $0x000002,0x000000(%ebp)

	_01ee05_jump:
		mov    0x000018(%esp),%eax
		mov    0x00004e(%esi),%bx
		add    %eax,%eax
		add    %eax,%ebx
		mov    0x000020(%esp),%eax
		mov    0x00004c(%esi),%cx
		add    %eax,%eax
		mov    %bx,0x00004e(%esi)
		add    %eax,%ecx
		mov    %cx,0x00004c(%esi)
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01eed4_func:
		push   %ebx
		cmp    $0x000001,%al
		jbe    _01eee4_jump
		cmp    $0x000002,%al
		je     _01ef0d_jump

	_01eedd_jump:
		xor    %eax,%eax
		mov    0x000005(%ebx),%al
		pop    %ebx
		ret    

	_01eee4_jump:
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01eef1_jump
		add    $0x000029,%dl

	_01eef1_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c2498_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		jmp    _01eedd_jump

	_01ef0d_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c248c_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000005(%ebx),%al
		pop    %ebx
		ret    



_01ef30_func:
		push   %ebx
		cmp    $0x000001,%al
		jbe    _01ef4c_jump
		cmp    $0x000002,%al
		je     _01ef73_jump

	_01ef39_jump:
		mov    0x000009(%ebx),%dl
		xor    %eax,%eax
		and    $0x00000f,%dl
		mov    0x000007(%ebx),%al
		xor    %ebx,%ebx
		mov    %dl,%bl
		add    %ebx,%eax
		pop    %ebx
		ret    

	_01ef4c_jump:
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01ef59_jump
		add    $0x000029,%dl

	_01ef59_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c2498_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		jmp    _01ef39_jump

	_01ef73_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c248c_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000009(%ebx),%dl
		xor    %eax,%eax
		and    $0x00000f,%dl
		mov    0x000007(%ebx),%al
		xor    %ebx,%ebx
		mov    %dl,%bl
		add    %ebx,%eax
		pop    %ebx
		ret    



_01efa0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0c3326_data,%ebx
		xor    %edx,%edx

	_01efac_jump:
		imul   $0x0000d8,%edx,%ecx
		mov    $_0bff68_data,%esi
		mov    %ebx,%edi
		push   %edi

	_01efba_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _01efd2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _01efba_jump

	_01efd2_jump:
		pop    %edi
		xor    %ah,%ah
		add    $0x0000d8,%ebx
		mov    %ah,_0c33fb_data(%ecx)
		inc    %edx
		mov    %ah,_0c33fc_data(%ecx)
		cmp    $0x000009,%edx
		jle    _01efac_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01eff4_func:
		xor    %ah,%ah
		cmp    $0x000061,%al
		jb     _01f003_jump
		cmp    $0x00007a,%al
		ja     _01f003_jump
		mov    %al,%ah
		sub    $0x00005d,%ah

	_01f003_jump:
		cmp    $0x000030,%al
		jb     _01f010_jump
		cmp    $0x000039,%al
		ja     _01f010_jump
		mov    %al,%ah
		sub    $0x000012,%ah

	_01f010_jump:
		cmp    $0x00002e,%al
		jb     _01f073_jump
		jbe    _01f037_jump
		cmp    $0x00005e,%al
		jb     _01f066_jump
		jbe    _01f04b_jump
		cmp    $0x00007e,%al
		jb     _01f05f_jump
		jbe    _01f046_jump
		cmp    $0x0000f8,%al
		je     _01f050_jump
		mov    %ah,%al
		ret    

	_01f02d_jump:
		mov    $0x000001,%ah
		mov    %ah,%al
		ret    

	_01f032_jump:
		mov    $0x000002,%ah
		mov    %ah,%al
		ret    

	_01f037_jump:
		mov    $0x000003,%ah
		mov    %ah,%al
		ret    

	_01f03c_jump:
		mov    $0x000028,%ah
		mov    %ah,%al
		ret    

	_01f041_jump:
		mov    $0x000029,%ah
		mov    %ah,%al
		ret    

	_01f046_jump:
		mov    $0x00002c,%ah
		mov    %ah,%al
		ret    

	_01f04b_jump:
		mov    $0x00002b,%ah
		mov    %ah,%al
		ret    

	_01f050_jump:
		mov    $0x00002a,%ah
		mov    %ah,%al
		ret    

	_01f055_jump:
		mov    $0x00002d,%ah
		mov    %ah,%al
		ret    

	_01f05a_jump:
		mov    $0x00002e,%ah
		mov    %ah,%al
		ret    

	_01f05f_jump:
		cmp    $0x00007c,%al
		je     _01f05a_jump
		mov    %ah,%al
		ret    

	_01f066_jump:
		cmp    $0x00003a,%al
		jb     _01f090_jump
		jbe    _01f03c_jump
		cmp    $0x00003f,%al
		je     _01f02d_jump
		mov    %ah,%al
		ret    

	_01f073_jump:
		cmp    $0x000025,%al
		jb     _01f086_jump
		jbe    _01f04b_jump
		cmp    $0x000027,%al
		jb     _01f090_jump
		jbe    _01f041_jump
		cmp    $0x00002a,%al
		je     _01f055_jump
		mov    %ah,%al
		ret    

	_01f086_jump:
		cmp    $0x000021,%al
		jb     _01f090_jump
		jbe    _01f032_jump
		cmp    $0x000023,%al
		je     _01f046_jump

	_01f090_jump:
		mov    %ah,%al
		ret    



_01f094_func:
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01f0a1_jump
		addb   $0x000029,(%edx)

	_01f0a1_jump:
		ret    



_01f0a4_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %ecx,(%esp)
		mov    %edx,%ecx
		xor    %ebx,%ebx

	_01f0b4_jump:
		inc    %ecx
		movswl %cx,%eax
		add    %esi,%eax
		mov    (%eax),%dl
		test   %dl,%dl
		je     _01f0f4_jump
		cmp    $0x00002f,%dl
		je     _01f0f4_jump
		cmp    $0x000020,%dl
		jne    _01f0ce_jump
		add    %edi,%ebx
		jmp    _01f0b4_jump

	_01f0ce_jump:
		mov    %dl,%al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		call   _01eff4_func
		mov    %al,%dl
		test   %edx,%edx
		je     _01f0b4_jump
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		call   _01ef30_func
		sub    (%esp),%eax
		add    %eax,%ebx
		jmp    _01f0b4_jump

	_01f0f4_jump:
		mov    %ebx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01f100_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000ec,%esp
		mov    %eax,%ebp
		mov    0x0000d4(%eax),%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,0x0000c8(%esp)
		mov    %dx,0x0000dc(%esp)
		mov    %edx,0x0000d0(%esp)
		mov    %al,0x0000e8(%esp)
		xor    %eax,%eax
		mov    %edx,0x0000e4(%esp)
		mov    0x0000e8(%esp),%al
		mov    %edx,0x0000cc(%esp)
		cmp    $0x000002,%eax
		jne    _01f178_jump
		mov    $0x00000f,%edx
		mov    $0x000001,%ecx
		mov    $0x000008,%esi
		mov    %edx,0x0000e0(%esp)
		mov    %ecx,0x0000d8(%esp)
		mov    %esi,0x0000d4(%esp)
		jmp    _01f1c7_jump

	_01f178_jump:
		cmp    $0x000001,%eax
		jne    _01f1a3_jump
		mov    $0x000017,%esi
		mov    $0x000003,%edi
		mov    $0x00000a,%eax
		mov    %esi,0x0000e0(%esp)
		mov    %edi,0x0000d8(%esp)
		mov    %eax,0x0000d4(%esp)
		jmp    _01f1c7_jump

	_01f1a3_jump:
		mov    $0x000024,%eax
		mov    $0x000003,%edx
		mov    $0x00000c,%ecx
		mov    %eax,0x0000e0(%esp)
		mov    %edx,0x0000d8(%esp)
		mov    %ecx,0x0000d4(%esp)

	_01f1c7_jump:
		mov    $0x0000c8,%ecx
		mov    %esp,%edi
		mov    %ebp,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01f362_jump
		xor    %ecx,%ecx
		jmp    _01f24c_jump

	_01f1ee_jump:
		cmp    $0x000020,%dl
		jne    _01f20f_jump
		mov    0x0000d4(%esp),%esi
		mov    0x0000e4(%esp),%edi
		xor    %al,%al
		inc    %edi
		add    %esi,%ebx
		mov    %edi,0x0000e4(%esp)
		jmp    _01f21b_jump

	_01f20f_jump:
		mov    %dl,%al
		and    $0x0000ff,%eax
		call   _01eff4_func

	_01f21b_jump:
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _01f24b_jump
		xor    %eax,%eax
		mov    0x0000e8(%esp),%al
		mov    0x0000d8(%esp),%esi
		call   _01ef30_func
		mov    0x0000e4(%esp),%edx
		sub    %esi,%eax
		inc    %edx
		add    %eax,%ebx
		mov    %edx,0x0000e4(%esp)

	_01f24b_jump:
		inc    %ecx

	_01f24c_jump:
		movswl %cx,%eax
		mov    (%esp,%eax,1),%dl
		test   %dl,%dl
		je     _01f2b8_jump
		cmp    $0x00002f,%dl
		jne    _01f1ee_jump
		mov    $0x000001,%eax
		mov    0x0000dc(%esp),%edx
		mov    0x0000c8(%esp),%esi
		add    %eax,%edx
		mov    %eax,0x0000cc(%esp)
		mov    %dx,0x0000dc(%esp)
		cmp    %si,%bx
		jle    _01f28c_jump
		mov    %bx,0x0000c8(%esp)

	_01f28c_jump:
		mov    0x0000e4(%esp),%eax
		mov    0x0000d0(%esp),%edi
		xor    %ebx,%ebx
		cmp    %di,%ax
		jle    _01f2a8_jump
		mov    %eax,0x0000d0(%esp)

	_01f2a8_jump:
		xor    %eax,%eax
		mov    %eax,0x0000e4(%esp)
		xor    %al,%al
		jmp    _01f21b_jump

	_01f2b8_jump:
		mov    0x0000da(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _01f2e0_jump
		mov    0x0000dc(%esp),%eax
		inc    %eax
		mov    %bx,0x0000c8(%esp)
		mov    %ax,0x0000dc(%esp)
		jmp    _01f2e8_jump

	_01f2e0_jump:
		decw   0x0000dc(%esp)

	_01f2e8_jump:
		cmpw   $0x000000,0x0000cc(%esp)
		je     _01f311_jump
		mov    0x0000ce(%ebp),%edx
		mov    0x0000c6(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		sub    %eax,%edx
		mov    %dx,0x0000c8(%ebp)
		jmp    _01f31f_jump

	_01f311_jump:
		mov    0x0000d0(%ebp),%ax
		mov    %ax,0x0000c8(%ebp)

	_01f31f_jump:
		mov    0x0000c8(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x0000cc(%ebp)
		mov    0x0000e0(%esp),%ebx
		mov    0x0000d2(%ebp),%ax
		sub    %ebx,%eax
		add    $0x000002,%eax
		mov    %ax,0x0000ca(%ebp)
		mov    0x0000dc(%esp),%eax
		imul   %ebx,%eax
		sub    $0x000002,%eax
		mov    %ax,0x0000ce(%ebp)

	_01f362_jump:
		add    $0x0000ec,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01f370_switch:
		.long   _01f3bc_case
		.long   _01f3c2_case
		.long   _01f3c8_case
		.long   _01f3ce_case




_01f380_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		movswl %bx,%edx
		cmp    $0x0000ff,%edx
		jne    _01f3ae_jump
		xor    %al,%al
		jmp    _01f397_jump

	_01f395_jump:
		inc    %al

	_01f397_jump:
		xor    %edx,%edx
		mov    %al,%dl
		add    %ecx,%edx
		mov    (%edx),%ah
		test   %ah,%ah
		je     _01f3ae_jump
		cmp    $0x000024,%ah
		jne    _01f395_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    _01f395_jump

	_01f3ae_jump:
		movswl %bx,%edx
		cmp    $0x0000ff,%edx
		jne    _01f3d4_jump
		pop    %esi
		pop    %ecx
		ret    

	_01f3bc_case:
		movb   $0x000061,(%ecx)
		pop    %esi
		pop    %ecx
		ret    

	_01f3c2_case:
		movb   $0x000062,(%ecx)
		pop    %esi
		pop    %ecx
		ret    

	_01f3c8_case:
		movb   $0x000064,(%ecx)
		pop    %esi
		pop    %ecx
		ret    

	_01f3ce_case:
		movb   $0x000063,(%ecx)
		pop    %esi
		pop    %ecx
		ret    

	_01f3d4_jump:
		cmp    $0x000003,%si
		ja     _01d9dc_jump
		xor    %eax,%eax
		mov    %si,%ax
		add    %edx,%ecx
		jmp    *%cs:_01f370_switch(,%eax,4)



_01f3f0_func:
		push   %ebx
		push   %ecx
		mov    (%eax),%bx
		mov    (%edx),%cx
		mov    %bx,(%edx)
		mov    %cx,(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_01f404_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x000010(%esp)
		mov    %bx,0x00001c(%esp)
		mov    %cx,0x000024(%esp)
		mov    0x000040(%esp),%eax
		mov    0x00000e(%esp),%ecx
		mov    %eax,0x000014(%esp)
		mov    0x000022(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		mov    0x00001a(%esp),%esi
		mov    %eax,%ecx
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sub    %esi,%eax
		xor    %edi,%edi
		mov    %eax,%esi
		test   %ecx,%ecx
		je     _01f468_jump
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %eax,%eax
		jge    _01f45c_jump
		neg    %eax

	_01f45c_jump:
		cmp    $0x000001,%eax
		jge    _01f468_jump
		mov    $0x000001,%ebx
		jmp    _01f46a_jump

	_01f468_jump:
		xor    %ebx,%ebx

	_01f46a_jump:
		movswl %bx,%eax
		cmp    $0x000001,%eax
		jne    _01f5e8_jump
		test   %ecx,%ecx
		jge    _01f49f_jump
		lea    0x000024(%esp),%edx
		lea    0x000010(%esp),%eax
		mov    $0x000001,%edi
		call   _01f3f0_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x00001c(%esp),%eax
		neg    %esi
		call   _01f3f0_func
		jmp    _01f4b9_jump

	_01f49f_jump:
		jne    _01f4b9_jump
		test   %esi,%esi
		jge    _01f4b9_jump
		lea    0x00003c(%esp),%edx
		lea    0x00001c(%esp),%eax
		mov    $0x000001,%edi
		call   _01f3f0_func
		neg    %esi

	_01f4b9_jump:
		test   %esi,%esi
		jle    _01f4c6_jump
		movl   $0x000001,(%esp)
		jmp    _01f4d6_jump

	_01f4c6_jump:
		jge    _01f4d1_jump
		movl   $0xffffffff,(%esp)
		jmp    _01f4d6_jump

	_01f4d1_jump:
		xor    %ebp,%ebp
		mov    %ebp,(%esp)

	_01f4d6_jump:
		mov    %esi,%eax
		test   %eax,%eax
		jge    _01f4de_jump
		neg    %eax

	_01f4de_jump:
		mov    %eax,%esi
		lea    (%eax,%eax,1),%ebp
		add    %esi,%esi
		sub    %ecx,%eax
		mov    %si,0x00000c(%esp)
		add    %eax,%eax
		sub    %ecx,%ebp
		mov    %ax,0x000028(%esp)
		test   %di,%di
		je     _01f577_jump
		mov    0x000022(%esp),%edi
		mov    0x00000e(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edi,%eax
		imul   %edx,%eax
		negl   (%esp)
		mov    $0x000007,%cl
		mov    0x00003a(%esp),%esi
		test   %eax,%eax
		je     _01f529_jump
		sar    %cl,%eax
		jmp    _01f52f_jump

	_01f529_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f52f_jump:
		mov    0x000022(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi
		jmp    _01f55c_jump

	_01f53f_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax

	_01f546_jump:
		add    %eax,%ebp
		cmp    0x000014(%esp),%bx
		jle    _01f55b_jump
		movswl %si,%edx
		movswl %di,%eax
		call   *0x000004(%esp)
		xor    %ebx,%ebx

	_01f55b_jump:
		dec    %edi

	_01f55c_jump:
		cmp    %ecx,%edi
		jl     _01f762_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f53f_jump
		mov    0x000026(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%esi
		jmp    _01f546_jump

	_01f577_jump:
		mov    0x00000e(%esp),%edi
		mov    0x000022(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edi,%eax
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x00001a(%esp),%esi
		test   %eax,%eax
		je     _01f59f_jump
		sar    %cl,%eax
		jmp    _01f5a5_jump

	_01f59f_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f5a5_jump:
		mov    0x00000e(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi
		jmp    _01f5d2_jump

	_01f5b5_jump:
		mov    0x00000a(%esp),%eax

	_01f5b9_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000014(%esp),%bx
		jle    _01f5d1_jump
		movswl %si,%edx
		movswl %di,%eax
		call   *0x000004(%esp)
		xor    %ebx,%ebx

	_01f5d1_jump:
		inc    %edi

	_01f5d2_jump:
		cmp    %ecx,%edi
		jg     _01f762_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f5b5_jump
		add    (%esp),%esi
		mov    0x000026(%esp),%eax
		jmp    _01f5b9_jump

	_01f5e8_jump:
		test   %esi,%esi
		jge    _01f611_jump
		lea    0x000024(%esp),%edx
		lea    0x000010(%esp),%eax
		mov    $0x000001,%edi
		call   _01f3f0_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x00001c(%esp),%eax
		neg    %esi
		call   _01f3f0_func
		jmp    _01f62b_jump

	_01f611_jump:
		jne    _01f62b_jump
		test   %ecx,%ecx
		jge    _01f62b_jump
		lea    0x000024(%esp),%edx
		lea    0x000010(%esp),%eax
		mov    $0x000001,%edi
		call   _01f3f0_func
		neg    %ecx

	_01f62b_jump:
		test   %ecx,%ecx
		jle    _01f639_jump
		movl   $0x000001,0x000008(%esp)
		jmp    _01f64b_jump

	_01f639_jump:
		jge    _01f645_jump
		movl   $0xffffffff,0x000008(%esp)
		jmp    _01f64b_jump

	_01f645_jump:
		xor    %edx,%edx
		mov    %edx,0x000008(%esp)

	_01f64b_jump:
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _01f653_jump
		neg    %eax

	_01f653_jump:
		mov    %eax,%ecx
		lea    (%eax,%eax,1),%ebp
		add    %ecx,%ecx
		sub    %esi,%eax
		mov    %cx,0x000018(%esp)
		add    %eax,%eax
		sub    %esi,%ebp
		mov    %ax,0x000020(%esp)
		test   %di,%di
		je     _01f6f4_jump
		mov    0x000008(%esp),%edx
		mov    0x00003a(%esp),%esi
		neg    %edx
		mov    0x000042(%esp),%eax
		mov    %edx,0x000008(%esp)
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %esi,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x000022(%esp),%edi
		test   %eax,%eax
		je     _01f6a5_jump
		sar    %cl,%eax
		jmp    _01f6ab_jump

	_01f6a5_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f6ab_jump:
		mov    0x00003a(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi
		jmp    _01f6d8_jump

	_01f6bb_jump:
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax

	_01f6c2_jump:
		add    %eax,%ebp
		cmp    0x000014(%esp),%bx
		jle    _01f6d7_jump
		movswl %si,%edx
		movswl %di,%eax
		call   *0x000004(%esp)
		xor    %ebx,%ebx

	_01f6d7_jump:
		dec    %esi

	_01f6d8_jump:
		cmp    %ecx,%esi
		jl     _01f762_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f6bb_jump
		mov    0x00001e(%esp),%eax
		mov    0x000008(%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%edi
		jmp    _01f6c2_jump

	_01f6f4_jump:
		mov    0x00001a(%esp),%esi
		mov    0x00003a(%esp),%edx
		mov    0x000042(%esp),%eax
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %esi,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x00000e(%esp),%edi
		test   %eax,%eax
		je     _01f71c_jump
		sar    %cl,%eax
		jmp    _01f722_jump

	_01f71c_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f722_jump:
		mov    0x00001a(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi
		jmp    _01f74f_jump

	_01f732_jump:
		mov    0x000016(%esp),%eax

	_01f736_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000014(%esp),%bx
		jle    _01f74e_jump
		movswl %si,%edx
		movswl %di,%eax
		call   *0x000004(%esp)
		xor    %ebx,%ebx

	_01f74e_jump:
		inc    %esi

	_01f74f_jump:
		cmp    %ecx,%esi
		jg     _01f762_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f732_jump
		add    0x000008(%esp),%edi
		mov    0x00001e(%esp),%eax
		jmp    _01f736_jump

	_01f762_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01f76c_func:
		push   %edx
		mov    _0c331c_data,%ah
		mov    _0c331d_data,%dl
		and    $0x000000,%ah
		and    $0x0000f0,%dl
		mov    %ah,_0c331c_data
		mov    %dl,_0c331d_data
		pop    %edx
		ret    



_01f790_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1b58_data,%eax
		mov    (%eax),%edx
		mov    0x00000c(%eax),%ebx
		mov    0x000002(%edx),%cl
		mov    0x0001c2(%edx),%dl
		mov    %dl,0x0000a2(%ebx)
		mov    (%eax),%edx
		mov    0x0001c2(%edx),%bl
		mov    %bl,0x000002(%edx)
		mov    (%eax),%eax
		mov    %cl,0x0001c2(%eax)
		mov    $0x000001,%al
		mov    _0c259f_data,%ah
		sub    %ah,%al
		mov    %al,_0c259f_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f7d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1b40_data,%dx
		movswl %dx,%ebx
		lea    0x000000(,%ebx,2),%ecx
		inc    %edx
		mov    _0c1b3c_data,%ebx
		mov    0x000034(%eax),%ax
		mov    %dx,_0c1b40_data
		mov    %ax,(%ecx,%ebx,1)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f804_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    _0c1b40_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jg     _01f827_jump
		jmp    _01f83d_jump

	_01f81a_jump:
		mov    _0c1b40_data,%bx
		inc    %eax
		cmp    %bx,%ax
		jge    _01f83d_jump

	_01f827_jump:
		movswl %ax,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    _0c1b3c_data,%edx
		cmp    (%edx,%ebx,1),%cx
		jne    _01f81a_jump

	_01f83d_jump:
		mov    _0c1b40_data,%di
		cmp    %di,%ax
		jge    _01f871_jump
		mov    %edi,%edx
		dec    %edx
		mov    %dx,_0c1b40_data
		mov    _0c1b3e_data,%ebx
		sar    $0x000010,%ebx
		mov    _0c1b3c_data,%edx
		add    %ebx,%ebx
		lea    (%edx,%ebx,1),%ecx
		movswl %ax,%ebx
		mov    (%ecx),%ax
		mov    %ax,(%edx,%ebx,2)

	_01f871_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f878_func:
		push   %edx
		mov    %eax,%edx
		call   _03a354_func
		push   %edx
		push   $_0bff69_data
		xor    %edx,%edx
		call   _0798fc_func
		mov    _0c6995_data,%dl
		add    $0x000008,%esp
		cmp    $0x000001,%edx
		je     _01f8ad_jump
		push   $_0bff87_data
		call   _0798fc_func
		add    $0x000004,%esp
		call   _079935_func

	_01f8ad_jump:
		mov    $0xffffffff,%eax
		call   _079d2c_func
		pop    %edx
		ret    



_01f8bc_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %dl,(%esp)
		xor    %eax,%eax
		jmp    _01f8cb_jump

	_01f8ca_jump:
		inc    %eax

	_01f8cb_jump:
		xor    %ecx,%ecx
		movswl %ax,%edx
		mov    0x000044(%ebx),%cx
		cmp    %ecx,%edx
		jge    _01f8e8_jump
		imul   $0x00000c,%edx,%ecx
		mov    (%ebx),%edx
		mov    0x000004(%ecx,%edx,1),%dl
		cmp    (%esp),%dl
		jne    _01f8ca_jump
		jmp    _01f8ea_jump

	_01f8e8_jump:
		xor    %al,%al

	_01f8ea_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_01f8f0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    _0c25a6_data,%eax
		mov    _0c25a2_data,%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		movswl %si,%eax
		mov    _0c25a4_data,%ebx
		sub    %eax,%edx
		mov    _0c25a8_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000011,%eax
		add    %ebx,%eax
		movswl %di,%ebx
		sub    %ebx,%eax
		mov    %eax,%ebx
		movswl %dx,%eax
		test   %eax,%eax
		setg   %al
		mov    %al,0x000004(%esp)
		movswl %bx,%eax
		test   %eax,%eax
		setg   %al
		mov    %al,(%esp)
		cmpb   $0x000000,0x000004(%esp)
		jne    _01f94d_jump
		neg    %edx

	_01f94d_jump:
		cmpb   $0x000000,(%esp)
		jne    _01f955_jump
		neg    %ebx

	_01f955_jump:
		movswl %dx,%eax
		cmp    $0x0000c8,%eax
		jle    _01f991_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _01f96d_jump
		sar    %cl,%ax
		jmp    _01f976_jump

	_01f96d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01f976_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _01f986_jump
		sar    %cl,%ax
		jmp    _01f98f_jump

	_01f986_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01f98f_jump:
		mov    %eax,%ebx

	_01f991_jump:
		movswl %bx,%ebx
		test   %ebx,%ebx
		jne    _01f9c4_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _01f9a9_jump
		mov    $0x00001b,%eax
		jmp    _01fa62_jump

	_01f9a9_jump:
		movswl %dx,%eax
		test   %eax,%eax
		je     _01f9ba_jump
		mov    $0x000009,%eax
		jmp    _01fa62_jump

	_01f9ba_jump:
		mov    $0xffffffff,%eax
		jmp    _01fa62_jump

	_01f9c4_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cmpb   $0x000000,0x000004(%esp)
		je     _01fa22_jump
		cmpb   $0x000000,(%esp)
		je     _01fa0c_jump
		cwtl   
		cmp    $0x0000ff,%eax
		jle    _01f9fd_jump
		mov    $0x00001b,%eax
		jmp    _01fa62_jump

	_01f9fd_jump:
		mov    _094754_data(%eax),%al
		xor    %ah,%ah
		add    $0x00001b,%eax
		jmp    _01fa62_jump

	_01fa0c_jump:
		cwtl   
		cmp    $0x0000ff,%eax
		jle    _01fa18_jump
		xor    %eax,%eax
		jmp    _01fa62_jump

	_01fa18_jump:
		mov    _094754_data(%eax),%al
		xor    %ah,%ah
		jmp    _01fa62_jump

	_01fa22_jump:
		cmpb   $0x000000,(%esp)
		je     _01fa46_jump
		cwtl   
		cmp    $0x0000ff,%eax
		jle    _01fa37_jump
		mov    $0x000012,%eax
		jmp    _01fa62_jump

	_01fa37_jump:
		mov    _094754_data(%eax),%al
		xor    %ah,%ah
		add    $0x000012,%eax
		jmp    _01fa62_jump

	_01fa46_jump:
		cwtl   
		cmp    $0x0000ff,%eax
		jle    _01fa55_jump
		mov    $0x000009,%eax
		jmp    _01fa62_jump

	_01fa55_jump:
		mov    _094754_data(%eax),%al
		xor    %ah,%ah
		add    $0x000009,%eax

	_01fa62_jump:
		movswl %ax,%ebx
		movswl %di,%edx
		movswl %si,%eax
		call   _070d64_func
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01fa78_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x00000c(%esp),%edx
		push   %edx
		lea    0x000008(%esp),%edx
		lea    0x000004(%esp),%ecx
		push   %edx
		lea    0x000010(%esp),%ebx
		mov    $0x00000e,%edx
		call   _01da90_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x000006(%esp),%ebx
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000011,%eax
		add    %ebx,%eax
		cwtl   
		call   _01f8f0_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01facc_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x00000c(%esp),%edx
		push   %edx
		lea    0x000008(%esp),%edx
		lea    0x000004(%esp),%ecx
		push   %edx
		lea    0x000010(%esp),%ebx
		mov    $0x00000e,%edx
		call   _01da90_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x000006(%esp),%ebx
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000011,%eax
		add    %ebx,%eax
		cwtl   
		call   _01f8f0_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01fb20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x00000f,%edx
		mov    %esi,%eax
		call   _01da90_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		mov    -0x000002(%esp),%ebx
		add    %edx,%eax
		sar    $0x000011,%ebx
		movswl %ax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %ebx,%eax
		cwtl   
		call   _01f8f0_func
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x00000e,%edx
		mov    %esi,%eax
		call   _01da90_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x00000a(%esp),%ebx
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000011,%eax
		add    %ebx,%eax
		cwtl   
		call   _01f8f0_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01fbc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0c1b74_data,%ebx
		mov    _0c1bb4_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		mov    0x000068(%eax),%al
		sub    %ecx,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		test   %edx,%edx
		setg   %al
		xor    %ah,%ah
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01fd64_switch:
		.long   _020034_case
		.long   _020020_case
		.long   _02005e_case
		.long   _020034_case
		.long   _020020_case

_01fd78_switch:
		.long   _0200b9_case
		.long   _0200ac_case
		.long   _0201fb_case
		.long   _0200d3_case
		.long   _0200c6_case

_01fd8c_switch:
		.long   _01fe22_case
		.long   _01fea6_case
		.long   _01fea6_case
		.long   _01fe48_case
		.long   _01fef6_case
		.long   _01fef6_case
		.long   _01ff94_case
		.long   _020014_case
		.long   _020014_case
		.long   _01ffd4_case
		.long   _020014_case
		.long   _020014_case
		.long   _0200fa_case
		.long   _02010f_case
		.long   _020138_case




_01fdc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		movzbw 0x00006c(%eax),%si
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		sete   %dl
		mov    %esi,%eax
		sub    $0x000002,%eax
		mov    %dl,%dh
		cmp    $0x00000e,%ax
		ja     _0201fb_case
		and    $0x00ffff,%eax
		jmp    *%cs:_01fd8c_switch(,%eax,4)

	_01fe22_case:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x00000e,%eax
		jne    _0201fb_case
		test   %dl,%dl
		je     _0201fb_case
		mov    %ecx,%eax
		call   _01fb20_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fe48_case:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000016,%eax
		jne    _0201fb_case
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _01fe79_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _056614_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fe79_jump:
		mov    $0x000001,%eax
		call   _061dd0_func
		cwtl   
		test   %eax,%eax
		jne    _01ff7a_jump

	_01fe8c_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _056614_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fea6_case:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000013,%eax
		jne    _0201fb_case
		test   %dh,%dh
		je     _0201fb_case
		mov    _0c51cc_data,%di
		inc    %edi
		movswl %si,%eax
		mov    %di,_0c51cc_data
		cmp    $0x000004,%eax
		jne    _01feda_jump
		mov    %ecx,%eax
		call   _01facc_func

	_01feda_jump:
		movswl %si,%eax
		cmp    $0x000003,%eax
		jne    _0201fb_case
		mov    %ecx,%eax
		call   _01fa78_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fef6_case:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000014,%eax
		jne    _0201fb_case
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _01ff5a_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _056614_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ff27_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ff3c_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6e8_func
		mov    %bx,_0c51cc_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ff5a_jump:
		mov    _0c51cc_data,%ax
		cmp    $0x000001,%ax
		jb     _01ff6e_jump
		jbe    _01ff27_jump
		cmp    $0x000003,%ax
		je     _01ff3c_jump

	_01ff6e_jump:
		movswl %si,%eax
		cmp    $0x000006,%eax
		jne    _01fe8c_jump

	_01ff7a_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _056614_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ff94_case:
		mov    %ecx,%eax
		call   _01fbc0_func
		test   %ax,%ax
		je     _01ffba_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _056614_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ffba_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _056614_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ffd4_case:
		mov    %ecx,%eax
		call   _01fbc0_func
		test   %ax,%ax
		je     _01fffa_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _056614_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fffa_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _056614_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020014_case:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		cmp    $0x000014,%eax
		je     _020046_jump
		jmp    _020066_jump

	_020020_case:
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02002c_jump
		neg    %eax

	_02002c_jump:
		neg    %eax
		mov    %ax,0x000040(%ecx)
		jmp    _02005e_case

	_020034_case:
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020040_jump
		neg    %eax

	_020040_jump:
		mov    %ax,0x000040(%ecx)
		jmp    _02005e_case

	_020046_jump:
		mov    %esi,%eax
		sub    $0x000009,%eax
		cmp    $0x000004,%ax
		ja     _02005e_case
		and    $0x00ffff,%eax
		jmp    *%cs:_01fd64_switch(,%eax,4)

	_02005e_case:
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_020066_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000068(%ecx),%al
		mov    0x000069(%ecx),%bl
		mov    %ax,(%esp)
		mov    %al,%dl
		mov    %ecx,%eax
		movzbw 0x000069(%ecx),%di
		call   _02d280_func
		test   %ax,%ax
		je     _0201fb_case
		mov    -0x000002(%esp),%edx
		movswl %di,%ebx
		mov    %ecx,%eax
		sar    $0x000010,%edx
		call   _01d9a4_func
		test   %ax,%ax
		jne    _0200e0_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0200ac_case:
		movb   $0x000009,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0200b9_case:
		movb   $0x00000a,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0200c6_case:
		movb   $0x00000c,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0200d3_case:
		movb   $0x00000d,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0200e0_jump:
		sub    $0x000009,%esi
		cmp    $0x000004,%si
		ja     _0201fb_case
		xor    %eax,%eax
		mov    %si,%ax
		jmp    *%cs:_01fd78_switch(,%eax,4)

	_0200fa_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02010f_case:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x00001d,%eax
		jge    _020126_jump
		mov    $0xfffffffc,%eax
		jmp    _02012b_jump

	_020126_jump:
		mov    $0xfffffff8,%eax

	_02012b_jump:
		mov    %ax,0x000042(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020138_case:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movw   $0x00fff8,0x000042(%ecx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _020162_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _020185_jump

	_020162_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_020185_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _0201fb_case
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0201fb_case
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%edx
		add    %eax,%edx
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jge    _0201fb_case
		mov    $_0c1b4c_data,%eax
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    $0x000001,%edx
		mov    %bh,0x000081(%ecx)
		call   _06f8e4_func
		mov    %dx,_0c251c_data

	_0201fb_case:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020204_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		jne    _020233_jump
		xor    %edx,%edx
		mov    %dx,_0c51cc_data
		mov    0x000081(%eax),%dl
		and    $0x0000f7,%dl
		mov    $0x000001,%ebx
		mov    %dl,0x000081(%eax)
		mov    %ebx,%edx
		call   _056614_func

	_020233_jump:
		pop    %edx
		pop    %ebx
		ret    



_020238_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0x000002,%eax
		jne    _0202a6_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _01fbc0_func
		mov    0x00006c(%ebx),%dl
		mov    %eax,%ecx
		cmp    $0x000005,%edx
		je     _020273_jump
		cmp    $0x000006,%edx
		jne    _020261_jump
		cwtl   
		test   %eax,%eax
		je     _020273_jump

	_020261_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000007,%eax
		jne    _0202a6_jump
		movswl %cx,%eax
		cmp    $0x000001,%eax
		jne    _0202a6_jump

	_020273_jump:
		mov    0x000076(%ebx),%dl
		dec    %dl
		mov    _0c1ef0_data,%eax
		mov    %dl,0x000076(%ebx)
		xor    %edx,%edx
		mov    0x000036(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000038(%eax),%cx
		mov    0x000069(%eax),%dl
		call   _070a70_func
		add    %ecx,%edx
		movswl %bx,%eax
		movswl %dx,%edx
		call   _071164_func

	_0202a6_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0202ac_func:
		movw   $0x000028,_0c1ba2_data
		call   _01fbc0_func
		test   %ax,%ax
		je     _0202c5_jump
		mov    $0x000001,%eax
		ret    

	_0202c5_jump:
		mov    $0xffffffff,%eax
		ret    



_0202d0_func:
		push   %ebx
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0x000006,%eax
		jne    _020335_jump
		mov    0x00004e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _020335_jump
		mov    _0c1ef0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02030b_jump
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		mov    0x00003a(%ebx),%eax
		sar    $0x000010,%eax
		add    $0x000047,%eax
		jmp    _020320_jump

	_02030b_jump:
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		mov    0x00003a(%ebx),%eax
		sar    $0x000010,%eax
		sub    $0x000055,%eax

	_020320_jump:
		mov    %eax,0x000028(%ebx)
		movw   $0x000000,0x000056(%ebx)
		movw   $0x0000ff,0x000050(%ebx)
		movb   $0x0000ff,0x00006b(%ebx)
		pop    %ebx
		ret    

	_020335_jump:
		movswl %dx,%eax
		cmp    $0x000001,%eax
		jle    _02035f_jump
		mov    _0c1ef0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _020353_jump
		mov    $0x000007,%edx
		jmp    _020358_jump

	_020353_jump:
		mov    $0x000006,%edx

	_020358_jump:
		mov    %ebx,%eax
		call   _01d6e8_func

	_02035f_jump:
		pop    %ebx
		ret    

_020364_switch:
		.long   _020547_case
		.long   _020459_case
		.long   _020489_case
		.long   _0204ba_case
		.long   _0204eb_case
		.long   _020519_case

_02037c_switch:
		.long   _02082e_case
		.long   _020760_case
		.long   _0207c9_case
		.long   _02082e_case
		.long   _02082e_case




_020390_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,(%esp)
		decw   0x000050(%eax)
		mov    0x00004e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0203b3_jump
		mov    (%esp),%eax
		movw   $0x000000,0x000050(%eax)

	_0203b3_jump:
		xor    %eax,%eax
		mov    _0ce92a_data,%al
		cmp    $0x000003,%eax
		jne    _0205f1_jump
		mov    (%esp),%eax
		mov    _0c1b34_data,%esi
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    _0c1b38_data,%cx
		mov    %dl,0x000081(%eax)
		xor    %eax,%eax
		test   %cx,%cx
		jg     _020405_jump
		jmp    _02082e_case

	_0203f5_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %cx,%ax
		jge    _02082e_case

	_020405_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		cmp    $0x0000d3,%ebx
		jne    _0203f5_jump
		xor    %edi,%edi
		jmp    _02056f_jump

	_02041a_jump:
		mov    $0x000004,%eax
		mov    $0x000002,%edx
		call   _061dd0_func
		sub    %eax,%edx
		mov    %dx,0x000040(%esi)
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02043f_jump
		movw   $0x000001,0x000040(%esi)

	_02043f_jump:
		mov    $0x000003,%eax
		mov    $0xfffffffc,%edx
		call   _061dd0_func
		sub    %eax,%edx
		mov    %dx,0x000042(%esi)
		jmp    _0205d6_jump

	_020459_case:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movb   $0x00002b,0x000069(%esi)
		movb   $0x000019,0x000068(%esi)
		mov    0x000081(%esi),%al
		movb   $0x00001f,0x00006a(%esi)
		and    $0x0000f7,%al
		mov    %al,0x000081(%esi)
		jmp    _020568_jump

	_020489_case:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movb   $0x000011,0x000069(%esi)
		movb   $0x00000c,0x000068(%esi)
		mov    0x000081(%esi),%ch
		movb   $0x000021,0x00006a(%esi)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%esi)
		jmp    _020568_jump

	_0204ba_case:
		mov    $0x00000b,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movb   $0x000007,0x000069(%esi)
		movb   $0x000007,0x000068(%esi)
		mov    0x000081(%esi),%cl
		movb   $0x000022,0x00006a(%esi)
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%esi)
		jmp    _020568_jump

	_0204eb_case:
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movb   $0x00001c,0x000069(%esi)
		movb   $0x000011,0x000068(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x000020,0x00006a(%esi)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)
		jmp    _020568_jump

	_020519_case:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movb   $0x000011,0x000069(%esi)
		movb   $0x00000c,0x000068(%esi)
		mov    0x000081(%esi),%bl
		movb   $0x000021,0x00006a(%esi)
		or     $0x000008,%bl
		mov    %bl,0x000081(%esi)
		jmp    _020568_jump

	_020547_case:
		mov    $0x000015,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x000081(%esi),%ah
		movb   $0x000025,0x00006a(%esi)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)

	_020568_jump:
		add    $0x000084,%esi
		inc    %edi

	_02056f_jump:
		movswl %di,%ebp
		cmp    $0x000006,%ebp
		jge    _02082e_case
		lea    0x00000c(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    %ebp,%edx
		mov    0x000008(%esp),%eax
		call   _01da90_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000081(%esi),%dh
		mov    %eax,0x000028(%esi)
		or     $0x000004,%dh
		mov    0x00000e(%esp),%eax
		movl   $0x000001,0x000024(%esi)
		sar    $0x000010,%eax
		mov    %dh,0x000081(%esi)
		mov    %eax,0x00002c(%esi)
		test   %ebp,%ebp
		jne    _02041a_jump
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_0205d6_jump:
		movb   $0x000000,0x000071(%esi)
		movb   $0x000005,0x000072(%esi)
		cmp    $0x000005,%di
		ja     _020568_jump
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *%cs:_020364_switch(,%eax,4)

	_0205f1_jump:
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000007,%eax
		je     _02082e_case
		cmp    $0x000006,%eax
		je     _02082e_case
		cmp    $0x000003,%eax
		je     _02082e_case
		lea    0x00000c(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    0x000008(%esp),%eax
		call   _01da90_func
		push   $0x000020
		mov    0x000008(%esp),%ebx
		mov    0x000014(%esp),%ecx
		mov    0x00000c(%esp),%esi
		mov    0x000010(%esp),%edi
		mov    _0ce930_data,%eax
		push   $0x000020
		sar    $0x000010,%eax
		add    $0x000005,%ebx
		add    $0x000005,%ecx
		sub    $0x00000a,%esi
		sub    $0x00000a,%edi
		push   %eax
		mov    %bx,0x000010(%esp)
		mov    %cx,0x00001c(%esp)
		mov    %di,0x000018(%esp)
		mov    %si,0x000014(%esp)
		mov    0x000016(%esp),%ecx
		mov    0x000012(%esp),%ebx
		mov    _0ce92e_data,%eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _0206df_jump
		xor    %eax,%eax
		mov    _0ce92a_data,%al
		test   %eax,%eax
		jne    _0206df_jump
		movb   $0x000001,_0ce92a_data
		mov    (%esp),%eax
		movw   $0x000004,0x000056(%eax)
		incw   _0ce91c_data
		mov    _0ce91a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jl     _0206d6_jump
		decw   _0ce91c_data

	_0206d6_jump:
		xor    %ebx,%ebx
		mov    %bx,_0ce91e_data

	_0206df_jump:
		mov    (%esp),%eax
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		mov    (%esp),%edx
		lea    0x000000(,%ebx,4),%eax
		mov    0x000004(%edx),%edx
		sub    %ebx,%eax
		mov    0x00000a(%edx,%eax,4),%ax
		mov    (%esp),%ebx
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx
		jne    _020740_jump
		xor    %eax,%edx
		mov    0x00006d(%ebx),%dl
		mov    0x00000c(%ebx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _020740_jump
		mov    $0x000001,%al
		jmp    _020742_jump

	_020740_jump:
		xor    %al,%al

	_020742_jump:
		mov    (%esp),%edx
		mov    0x00006c(%edx),%ah
		sub    $0x000003,%ah
		cmp    $0x000004,%ah
		ja     _02082e_case
		xor    %edx,%edx
		mov    %ah,%dl
		jmp    *%cs:_02037c_switch(,%edx,4)

	_020760_case:
		test   %al,%al
		je     _02082e_case
		mov    (%esp),%eax
		incw   0x000056(%eax)
		mov    0x000054(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jge    _0207a3_jump
		mov    $0x000005,%edx
		mov    (%esp),%eax
		call   _01d6e8_func
		mov    (%esp),%eax
		mov    0x00003a(%eax),%eax
		sar    $0x000010,%eax
		mov    (%esp),%edx
		sub    $0x000055,%eax
		mov    %eax,0x000028(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0207a3_jump:
		mov    $0x000006,%edx
		mov    (%esp),%eax
		call   _01d6e8_func
		mov    (%esp),%eax
		mov    0x00003a(%eax),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		mov    %eax,0x000028(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0207c9_case:
		test   %al,%al
		je     _02082e_case
		mov    (%esp),%eax
		incw   0x000056(%eax)
		mov    0x000054(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jge    _020808_jump
		mov    $0x000004,%edx
		mov    (%esp),%eax
		call   _01d6e8_func
		mov    (%esp),%eax
		mov    0x00003a(%eax),%eax
		sar    $0x000010,%eax
		mov    (%esp),%edx
		add    $0x000047,%eax
		mov    %eax,0x000028(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020808_jump:
		mov    $0x000007,%edx
		mov    (%esp),%eax
		call   _01d6e8_func
		mov    (%esp),%eax
		mov    0x00003a(%eax),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		mov    %eax,0x000028(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02082e_case:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020838_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000040(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _020897_jump
		xor    %eax,%eax
		mov    0x00002c(%ebx),%edx
		mov    0x000069(%ebx),%al
		add    %edx,%eax
		cmp    $0x000108,%eax
		jle    _020897_jump
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,0x000040(%ebx)
		mov    0x000040(%ebx),%edx
		sar    $0x000010,%edx
		neg    %edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,0x000042(%ebx)
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02088d_jump
		movb   $0x0000ff,0x000072(%ebx)

	_02088d_jump:
		mov    $0x000005,%al
		mov    0x000071(%ebx),%ah
		sub    %ah,%al
		mov    %al,0x000071(%ebx)

	_020897_jump:
		pop    %edx
		pop    %ebx
		ret    



_02089c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    $0x000054,%eax
		call   _068d70_func
		mov    0x000028(%edx),%ebx
		movw   $0x00ffff,0x000040(%edx)
		add    $0x000014,%ebx
		mov    %edx,%eax
		mov    %ebx,0x000028(%edx)
		call   _072880_func
		mov    0x000028(%edx),%ecx
		movw   $0x000001,0x000040(%edx)
		sub    $0x000028,%ecx
		mov    %edx,%eax
		mov    %ecx,0x000028(%edx)
		call   _072880_func
		mov    0x000028(%edx),%esi
		add    $0x000014,%esi
		mov    %edx,%eax
		mov    %esi,0x000028(%edx)
		call   _0706e8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0208f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000032(%eax),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    0x000050(%ecx),%ax
		cmp    $0x000002,%ax
		jb     _0209bc_jump
		jbe    _020935_jump
		cmp    $0x000004,%ax
		je     _020967_jump
		jmp    _0209c5_jump

	_020920_jump:
		mov    $0x000003,%al
		mov    0x000071(%ecx),%bl
		movw   $0x00fffb,0x000042(%ecx)
		sub    %bl,%al
		mov    %al,0x000071(%ecx)
		jmp    _0209c5_jump

	_020935_jump:
		mov    $0x000003,%al
		mov    0x000071(%ecx),%dl
		movw   $0x00fffb,0x000042(%ecx)
		sub    %dl,%al
		mov    0x000081(%ecx),%dh
		mov    %al,0x000071(%ecx)
		test   $0x000008,%dh
		je     _020957_jump
		mov    $0xffffff7e,%eax
		jmp    _02095c_jump

	_020957_jump:
		mov    $0x000019,%eax

	_02095c_jump:
		add    0x000028(%ecx),%eax
		mov    %ax,_0ce916_data
		jmp    _0209c5_jump

	_020967_jump:
		mov    %ecx,%eax
		call   _02089c_func
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0c1b96_data,%dx
		jne    _0209c5_jump
		movw   $0x00ffff,_0c1b96_data
		mov    $0x000002,%ebx
		mov    $_0c1b4c_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d6f8_func
		mov    %ecx,%eax
		call   _024bd4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0209bc_jump:
		test   %ax,%ax
		je     _020920_jump

	_0209c5_jump:
		mov    %ecx,%eax
		call   _024bd4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0209d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _0209ff_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0209ef_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _020afc_jump

	_0209ff_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00007a,%edx
		jne    _0209ef_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0209ef_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    _0ce91e_data,%edx
		and    $0x0000ff,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _020a52_jump
		mov    0x000081(%ecx),%bl
		or     $0x000008,%bl
		mov    $0xffffffec,%edx
		mov    %bl,0x000081(%ecx)
		jmp    _020a66_jump

	_020a52_jump:
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    $0x000104,%edx
		mov    %ah,0x000081(%ecx)

	_020a66_jump:
		mov    %ecx,%eax
		call   _053c9c_func
		movswl %dx,%eax
		movw   $0x00ffff,0x000046(%ecx)
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    0x000081(%ecx),%bh
		sub    $0x000014,%eax
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bh
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		mov    %bh,0x000081(%ecx)
		call   _01f7d4_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		movb   $0x000002,0x00006d(%ecx)
		and    $0x0000bf,%al
		mov    %al,0x000081(%ecx)
		mov    0x000081(%ecx),%ah
		movb   $0x000002,0x00006c(%ecx)
		test   $0x000008,%ah
		je     _020ad7_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _020ae0_jump

	_020ad7_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_020ae0_jump:
		call   _056614_func
		mov    %ecx,%eax
		call   _01df3c_func
		mov    _0ce922_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _020afc_jump
		movb   $0x000001,0x000076(%ecx)

	_020afc_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020b04_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %dx,0x000004(%esp)
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _020b3b_jump
		jmp    _020e00_jump

	_020b2b_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _020e00_jump

	_020b3b_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000061,%edx
		jne    _020b2b_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _020b2b_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _020b61_jump
		andb   $0x0000df,0x000081(%esi)
		jmp    _020b68_jump

	_020b61_jump:
		orb    $0x000020,0x000081(%esi)

	_020b68_jump:
		cmpw   $0x000000,0x000004(%esp)
		sete   %al
		lea    0x000010(%esp),%ecx
		xor    %ah,%ah
		mov    0x000081(%esi),%bl
		mov    %eax,%edx
		and    $0x0000f7,%bl
		mov    %esp,%eax
		add    $0x000008,%edx
		mov    %bl,0x000081(%esi)
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		movswl %dx,%edx
		mov    %edi,%eax
		call   _01da90_func
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jne    _020c32_jump
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000011,%edx
		mov    0x000081(%edi),%bl
		add    %eax,%edx
		test   $0x000008,%bl
		je     _020bdc_jump
		mov    $0x000040,%eax
		jmp    _020be1_jump

	_020bdc_jump:
		mov    $0xffffffc0,%eax

	_020be1_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000028,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _020c03_jump
		mov    $0x00000c,%eax
		jmp    _020c08_jump

	_020c03_jump:
		mov    $0xfffffff4,%eax

	_020c08_jump:
		movw   $0x000000,0x000042(%esi)
		mov    %ax,0x000040(%esi)
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _020d7d_jump

	_020c32_jump:
		test   %edx,%edx
		jne    _020cbb_jump
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000011,%edx
		mov    0x000081(%edi),%ch
		add    %eax,%edx
		test   $0x000008,%ch
		je     _020c65_jump
		mov    $0x000009,%eax
		jmp    _020c6a_jump

	_020c65_jump:
		mov    $0xfffffff7,%eax

	_020c6a_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000028,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _020c8c_jump
		mov    $0x000002,%eax
		jmp    _020c91_jump

	_020c8c_jump:
		mov    $0xfffffffe,%eax

	_020c91_jump:
		movw   $0x00fffb,0x000042(%esi)
		mov    %ax,0x000040(%esi)
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _020d7d_jump

	_020cbb_jump:
		cmp    $0x000003,%edx
		jne    _020cf1_jump
		testb  $0x000008,0x000081(%edi)
		je     _020cd0_jump
		mov    $0x000078,%eax
		jmp    _020cd5_jump

	_020cd0_jump:
		mov    $0xffffffdc,%eax

	_020cd5_jump:
		mov    0x000028(%edi),%edx
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00002c(%edi),%edx
		sub    $0x0000b9,%edx
		movw   $0x000004,0x000042(%esi)
		jmp    _020d74_jump

	_020cf1_jump:
		cmp    $0x00000a,%edx
		jge    _020d1c_jump
		mov    _0c1b74_data,%eax
		mov    %eax,0x000028(%esi)
		cmp    $0x000028,%eax
		jge    _020d0a_jump
		movl   $0x000028,0x000028(%esi)

	_020d0a_jump:
		cmpl   $0x0000c8,0x000028(%esi)
		jle    _020d65_jump
		movl   $0x0000c8,0x000028(%esi)
		jmp    _020d65_jump

	_020d1c_jump:
		testb  $0x000008,0x000081(%edi)
		je     _020d48_jump
		xor    %eax,%eax
		mov    _0ce934_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		shl    $0x000003,%edx
		add    %eax,%edx
		mov    $0x0000f0,%eax
		add    %edx,%edx
		sub    %edx,%eax
		mov    %eax,0x000028(%esi)
		jmp    _020d65_jump

	_020d48_jump:
		xor    %eax,%eax
		mov    _0ce934_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		shl    $0x000003,%edx
		add    %eax,%edx
		add    %edx,%edx
		sub    $0x000014,%edx
		mov    %edx,0x000028(%esi)

	_020d65_jump:
		mov    0x00002c(%edi),%edx
		sub    $0x0000c8,%edx
		movw   $0x000000,0x000042(%esi)

	_020d74_jump:
		mov    %edx,0x00002c(%esi)
		movw   $0x000000,0x000040(%esi)

	_020d7d_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		movw   $0x000026,0x000056(%esi)
		cmp    $0x000003,%eax
		je     _020d95_jump
		movb   $0x00000a,0x000072(%esi)
		jmp    _020d99_jump

	_020d95_jump:
		movb   $0x000007,0x000072(%esi)

	_020d99_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _020da8_jump
		movb   $0x000003,0x000072(%esi)

	_020da8_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movb   $0x000002,0x00006d(%esi)
		mov    %ebx,%edx
		movb   $0x000006,0x00006c(%esi)
		call   _056614_func
		mov    %esi,%eax
		call   _01df3c_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f7d4_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		movb   $0x000000,0x000071(%esi)
		cmp    $0x00000a,%eax
		jge    _020dfa_jump
		mov    0x000004(%esp),%eax
		mov    %ax,0x000050(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_020dfa_jump:
		movw   $0x000004,0x000050(%esi)

	_020e00_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_020e08_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _020e33_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020e23_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _020eca_jump

	_020e33_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000061,%edx
		jne    _020e23_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _020e23_jump
		movl   $0xffffffd8,0x000028(%ecx)
		movl   $0x0000a0,0x00002c(%ecx)
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ax
		movw   $0x000026,0x000056(%ecx)
		add    $0x000019,%eax
		movb   $0x000003,0x000072(%ecx)
		mov    %ax,_0ce916_data
		mov    0x000081(%ecx),%ah
		movb   $0x000002,0x00006d(%ecx)
		and    $0x0000f7,%ah
		mov    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movb   $0x000006,0x00006c(%ecx)
		call   _056614_func
		mov    %ecx,%eax
		call   _01df3c_func
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000024,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f7d4_func
		movb   $0x000000,0x000071(%ecx)
		movw   $0x000002,0x000050(%ecx)

	_020eca_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020ed0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		call   _01df3c_func
		movl   $0x000000,0x000024(%edx)
		mov    $0x00000a,%bl
		movw   $0x000000,0x000050(%edx)
		mov    $0x000001,%cl
		mov    0x000081(%edx),%ah
		movb   $0x00000a,0x000072(%edx)
		xor    %esi,%esi
		or     $0x000004,%ah
		mov    %bl,_0c13e1_data
		mov    %cl,_0ce934_data
		mov    %si,_0ce920_data
		mov    %si,_0c25f6_data
		xor    %ebx,%ebx
		mov    %ah,0x000081(%edx)
		mov    $0xffffffff,%eax
		mov    %bx,_0ce918_data
		mov    %bx,_0ce91c_data
		mov    %bx,_0ce91e_data
		mov    %bx,_0ce914_data
		mov    %bx,_0ce926_data
		xor    %dl,%dl
		mov    %bx,_0ce92e_data
		mov    %dl,_0c13df_data
		mov    %dl,_0c13de_data
		mov    %ax,_0ce928_data
		xor    %bh,%bh
		mov    $0x00270f,%edx
		mov    %bh,_0ce92a_data
		mov    %dx,_0ce916_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020f7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpw   $0x000000,_0ce918_data
		je     _020fec_jump
		call   _02089c_func
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%bx
		cmp    _0c1b96_data,%bx
		jne    _020fd8_jump
		mov    $0xffffffff,%esi
		mov    $0x000002,%ebx
		mov    $_0c1b4c_data,%eax
		mov    %si,_0c1b96_data
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d6f8_func

	_020fd8_jump:
		xor    %edi,%edi
		mov    $0x00270f,%eax
		mov    %di,_0ce918_data
		mov    %ax,_0ce916_data

	_020fec_jump:
		mov    0x00004e(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _021017_jump
		decw   0x000056(%ecx)
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _021017_jump
		mov    0x000081(%ecx),%dl
		mov    %eax,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)

	_021017_jump:
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		mov    $0x000014,%eax
		test   %edx,%edx
		jge    _02102b_jump
		mov    $0xffffffec,%eax

	_02102b_jump:
		xor    %edx,%edx
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%dl
		cwtl   
		add    %ebx,%edx
		mov    0x00002c(%ecx),%ebx
		add    %edx,%eax
		add    $0x000028,%ebx
		mov    _0c24e2_data,%edx
		sar    $0x000004,%ebx
		sar    $0x000010,%edx
		imul   %ebx,%edx
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		jne    _0211be_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021080_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02109c_jump
		neg    %eax

	_02109c_jump:
		cmp    $0x00000c,%eax
		jne    _0210c7_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0210b2_jump
		mov    $0xfffffff3,%eax
		jmp    _0210b7_jump

	_0210b2_jump:
		mov    $0x00000d,%eax

	_0210b7_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0210c7_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0210d3_jump
		neg    %eax

	_0210d3_jump:
		cmp    $0x00000d,%eax
		jne    _0210fe_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0210e9_jump
		mov    $0xfffffff2,%eax
		jmp    _0210ee_jump

	_0210e9_jump:
		mov    $0x00000e,%eax

	_0210ee_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0210fe_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02110a_jump
		neg    %eax

	_02110a_jump:
		cmp    $0x00000e,%eax
		jne    _021135_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _021120_jump
		mov    $0xfffffff1,%eax
		jmp    _021125_jump

	_021120_jump:
		mov    $0x00000f,%eax

	_021125_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021135_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _021141_jump
		neg    %eax

	_021141_jump:
		cmp    $0x00000f,%eax
		jne    _0211d1_jump
		mov    %ecx,%eax
		call   _02089c_func
		mov    0x000081(%ecx),%bl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		mov    _0c1b96_data,%ax
		cmp    0x000034(%ecx),%ax
		jne    _0211d1_jump
		mov    $0xffffffff,%esi
		mov    $0x000002,%ebx
		mov    $_0c1b4c_data,%eax
		mov    %si,_0c1b96_data
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d6f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02119c_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _068654_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000002,0x000050(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0211be_jump:
		mov    0x000050(%ecx),%ax
		test   %ax,%ax
		jbe    _02119c_jump
		cmp    $0x000001,%ax
		je     _021080_jump

	_0211d1_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0211d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _02120b_jump
		jmp    _021335_jump

	_0211fb_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _021335_jump

	_02120b_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000079,%edx
		jne    _0211fb_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0211fb_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		movw   $0x000000,0x000042(%esi)
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02126a_jump
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw 0x000001(%edx,%eax,8),%ax
		jmp    _021283_jump

	_02126a_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw (%edx,%eax,8),%ax

	_021283_jump:
		mov    %ax,0x000040(%esi)
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000a,%edx
		mov    %edi,%eax
		call   _01da90_func
		testb  $0x000008,0x000081(%edi)
		je     _0212b3_jump
		mov    $0x000010,%eax
		jmp    _0212b8_jump

	_0212b3_jump:
		mov    $0xfffffff0,%eax

	_0212b8_jump:
		mov    0x000006(%esp),%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _056614_func
		mov    %esi,%eax
		call   _01df3c_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f7d4_func
		mov    %esi,%eax
		call   _0706e8_func

	_021335_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021340_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _021373_jump
		jmp    _02155c_jump

	_021363_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _02155c_jump

	_021373_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000087,%edx
		jne    _021363_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _021363_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		movw   $0x000000,0x000042(%esi)
		test   %edx,%edx
		jne    _0213c4_jump
		movw   $0x000007,0x000040(%esi)
		jmp    _0213ca_jump

	_0213c4_jump:
		movw   $0x00fff9,0x000040(%esi)

	_0213ca_jump:
		lea    0x000004(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000010(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000003,%edx
		call   _01da90_func
		testb  $0x000008,0x000081(%edi)
		jne    _0213f8_jump
		xor    %edx,%edx
		mov    %dx,0x00000c(%esp)

	_0213f8_jump:
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%edx
		mov    0x000028(%esi),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%esi)
		sub    $0x000008,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _056614_func
		mov    %esi,%eax
		call   _01df3c_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f7d4_func
		mov    0x000105(%esi),%bh
		mov    0x000081(%edi),%al
		and    $0x0000f7,%bh
		and    $0x000008,%al
		mov    %bh,%cl
		or     %al,%cl
		mov    %cl,0x000105(%esi)
		mov    0x000105(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		add    $0x000084,%esi
		mov    %al,%dl
		movw   $0x000000,0x000042(%esi)
		test   %edx,%edx
		jne    _0214b2_jump
		movw   $0x000007,0x000040(%esi)
		jmp    _0214b8_jump

	_0214b2_jump:
		movw   $0x00fff9,0x000040(%esi)

	_0214b8_jump:
		lea    0x000004(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000010(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000002,%edx
		call   _01da90_func
		testb  $0x000008,0x000081(%edi)
		jne    _0214e6_jump
		xor    %ebx,%ebx
		mov    %bx,0x00000c(%esp)

	_0214e6_jump:
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%edx
		mov    0x000028(%esi),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%esi)
		sub    $0x000008,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _056614_func
		mov    %esi,%eax
		call   _01df3c_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f7d4_func
		mov    %esi,%eax
		call   _0706e8_func

	_02155c_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi

	_021561_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_021584_switch:
		.long   _0215c2_case
		.long   _0215db_case
		.long   _0215f4_case
		.long   _02160e_case
		.long   _021628_case
		.long   _021641_case
		.long   _02165a_case
		.long   _021684_case




_0215a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0ce91a_data,%ax
		cmp    $0x000007,%ax
		ja     _021561_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_021584_switch(,%eax,4)

	_0215c2_case:
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movb   $0x000001,_0c13df_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0215db_case:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movb   $0x000002,_0c13df_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0215f4_case:
		mov    $0x000006,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000003,%ch
		call   _01d6f8_func
		mov    %ch,_0c13df_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02160e_case:
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000004,%cl
		call   _01d6f8_func
		mov    %cl,_0c13df_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021628_case:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movb   $0x000005,_0c13df_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021641_case:
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movb   $0x00000c,_0c13df_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02165a_case:
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		movb   $0x00000b,_0c13df_data
		mov    $0x000001,%dh
		movw   $0x000023,0x000056(%ecx)
		mov    %dh,_0ce934_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021684_case:
		mov    $0x000016,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movb   $0x00000d,_0c13df_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0216a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		incw   _0ce91e_data
		mov    _0ce91c_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0x000007,%ebx
		jge    _0216e0_jump
		mov    _0ce91a_data,%ecx
		sar    $0x000010,%ecx
		lea    0x000000(,%ecx,8),%eax
		shl    $0x000002,%ebx
		sub    %ecx,%eax
		mov    _095b44_data(%ebx,%eax,4),%ax
		mov    %ax,_0ce91a_data
		jmp    _0216e9_jump

	_0216e0_jump:
		movw   $0x0000ff,_0ce91a_data

	_0216e9_jump:
		mov    _0ce918_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000ff,%eax
		jne    _021721_jump
		mov    _0ce91a_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		xor    %esi,%esi
		mov    _095b44_data(,%eax,4),%ax
		mov    %si,_0ce91e_data
		mov    %ax,_0ce91a_data

	_021721_jump:
		mov    _0ce91a_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    _0ce91c_data,%eax
		sar    $0x000010,%eax
		mov    _095b46_data(%ebx,%eax,4),%al
		mov    %al,_0c13e1_data
		mov    %edx,%eax
		call   _0215a4_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02175c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0c13e1_data,%al
		test   %eax,%eax
		je     _021790_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _056614_func
		movb   $0x000006,_0c13df_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021790_jump:
		mov    %ecx,%eax
		call   _0216a0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02179c_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movw   $0x000000,0x000042(%eax)
		mov    $0x000006,%edx
		movw   $0x000000,0x000040(%eax)
		call   _024bd4_func
		mov    %ebx,%eax
		call   _01d6e8_func
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _04a984_func
		mov    %dx,_0c25f8_data
		pop    %edx
		pop    %ebx
		ret    

_0217d4_switch:
		.long   _021b2e_case
		.long   _021b9c_case
		.long   _021c19_case
		.long   _021d5c_case
		.long   _021dd8_case
		.long   _021e48_case
		.long   _021ec8_case
		.long   _021ef6_case
		.long   _021fbe_case
		.long   _022049_case
		.long   _0220ef_case
		.long   _0221d2_case
		.long   _0221f5_case
		.long   _022291_case




_02180c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		movb   $0x000001,_0c25e1_data
		mov    _0ce91e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _021856_jump
		decw   _0ce922_data
		mov    _0ce920_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _021856_jump
		mov    $0x000032,%ebx
		mov    %esi,%eax
		mov    %bx,_0ce922_data
		call   _0209d0_func
		decw   _0ce920_data

	_021856_jump:
		mov    %esp,%eax
		mov    $_0ce932_data,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $_0ce930_data,%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %esi,%eax
		call   _01da90_func
		mov    0x000028(%esi),%ax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _0218dd_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0218dd_jump
		movb   $0x000001,_0c13dd_data
		jmp    _0218e5_jump

	_0218dd_jump:
		xor    %dl,%dl
		mov    %dl,_0c13dd_data

	_0218e5_jump:
		xor    %eax,%eax
		mov    _0ce92a_data,%al
		cmp    $0x000002,%eax
		jne    _021948_jump
		cmpb   $0x000000,_0c13dd_data
		je     _021948_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000077(%esi),%al
		mov    0x000076(%esi),%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _021921_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _056614_func
		movb   $0x000007,_0c13df_data

	_021921_jump:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0ce92c_data,%bl
		mov    _0ce92b_data,%dl
		mov    $0x000001,%cl
		call   _01d6f8_func
		mov    _0ce92e_data,%al
		mov    %cl,_0c13e1_data
		mov    %al,0x000070(%esi)

	_021948_jump:
		xor    %eax,%eax
		mov    _0ce92a_data,%al
		cmp    $0x000001,%eax
		jne    _0219d8_jump
		mov    0x00006d(%esi),%al
		mov    $0x000009,%ebx
		mov    %al,_0ce92b_data
		mov    0x00006c(%esi),%al
		xor    %edx,%edx
		mov    %al,_0ce92c_data
		mov    %esi,%eax
		mov    $0x000002,%ch
		call   _01d6f8_func
		xor    %al,%al
		mov    %ch,_0ce92a_data
		mov    %al,_0c13dd_data
		mov    0x000076(%esi),%ah
		movw   $0x000000,0x000040(%esi)
		dec    %ah
		mov    %ah,0x000076(%esi)
		xor    %ah,%ah
		mov    0x000070(%esi),%al
		mov    %ax,_0ce92e_data
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000001,%eax
		jge    _0219d8_jump
		mov    $0x000003,%dl
		mov    $0x000014,%ebx
		mov    %esi,%eax
		mov    %dl,_0ce92a_data
		xor    %edx,%edx
		mov    $0x0001a4,%edi
		call   _01d6f8_func
		movw   $0x000000,0x000040(%esi)
		mov    $0x000001,%dh
		mov    %di,_0ce92e_data
		mov    %dh,_0c25a1_data

	_0219d8_jump:
		xor    %eax,%eax
		mov    _0ce92a_data,%al
		cmp    $0x000003,%eax
		jne    _022368_jump
		decw   _0ce92e_data
		mov    _0ce92c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jge    _0223a0_jump
		movb   $0x000001,_0c25a0_data
		mov    _0c331c_data,%bh
		mov    $0x0003e7,%edx
		or     $0x000008,%bh
		mov    %dx,_0ce92e_data
		mov    %bh,_0c331c_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021a2b_jump:
		andb   $0x0000f7,0x000081(%esi)

	_021a32_jump:
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		cmp    $0x000001,%eax
		jne    _021a43_jump
		orb    $0x000008,0x000081(%esi)

	_021a43_jump:
		mov    %esi,%eax
		call   _04aad8_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		je     _021a9d_jump
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    $0x000006,%edx
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000008,%cl
		call   _056614_func
		mov    %cl,_0c13df_data

	_021a9d_jump:
		xor    %eax,%eax
		mov    _0c13df_data,%al
		cmp    $0x000007,%eax
		jne    _021b22_jump
		testb  $0x000008,0x000081(%esi)
		je     _021abd_jump
		mov    $0x00000a,%eax
		jmp    _021ac2_jump

	_021abd_jump:
		mov    $0xfffffff6,%eax

	_021ac2_jump:
		mov    _0ce914_data,%edx
		sar    $0x000010,%edx
		add    $0x000004,%edx
		add    %edx,%eax
		cmp    0x000028(%esi),%eax
		jle    _021b22_jump
		testb  $0x000008,0x000081(%esi)
		je     _021ae5_jump
		mov    $0x00000a,%eax
		jmp    _021aea_jump

	_021ae5_jump:
		mov    $0xfffffff6,%eax

	_021aea_jump:
		mov    _0ce914_data,%edx
		sar    $0x000010,%edx
		sub    $0x000004,%edx
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jge    _021b22_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		movb   $0x000009,_0c13df_data

	_021b22_jump:
		mov    %esi,%eax
		call   _0248b8_func
		jmp    _022383_jump

	_021b2e_case:
		cmpb   $0x000000,_0ce934_data
		je     _021b4c_jump
		mov    $0x000001,%bl
		call   _020e08_func
		mov    %bl,_0c13de_data
		xor    %bh,%bh
		mov    %bh,_0ce934_data

	_021b4c_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		cmpb   $0x000000,_0c13de_data
		je     _022383_jump
		movb   $0x000000,0x00006b(%esi)
		mov    _095b46_data,%al
		xor    %ecx,%ecx
		mov    %al,_0c13e1_data
		mov    _095b44_data,%ax
		mov    %cx,_0ce91c_data
		mov    %ax,_0ce91a_data
		mov    %esi,%eax
		mov    %cx,_0ce91e_data
		call   _0215a4_func
		jmp    _022383_jump

	_021b9c_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000004,%eax
		jne    _021c00_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00000e,%eax
		jne    _021c00_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021c00_jump
		mov    _0c25f4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _021c00_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		mov    %bx,_0c25f6_data
		call   _020b04_func

	_021c00_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		mov    %esi,%eax
		call   _02175c_func
		jmp    _022383_jump

	_021c19_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000b,%eax
		jne    _021c65_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000017,%eax
		jne    _021c65_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021c65_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _020b04_func

	_021c65_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _021cf5_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		cmp    $0x00000e,%edx
		jne    _021cf5_jump
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%esi),%edx
		mov    (%edx,%ebx,1),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021cf5_jump
		mov    _0c25f4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _021cf5_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %dx,_0c25f6_data
		mov    $0x000003,%edx
		call   _020b04_func
		mov    _0ce922_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _021ce2_jump
		mov    $0x000003,%edx
		jmp    _021ce7_jump

	_021ce2_jump:
		mov    $0x000001,%edx

	_021ce7_jump:
		xor    %eax,%eax
		mov    _0c13e1_data,%al
		add    %edx,%eax
		mov    %al,_0c13e1_data

	_021cf5_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%eax
		jne    _021d2e_jump
		cmpb   $0x000000,_0c13dd_data
		je     _021d2e_jump
		mov    _0c13e1_data,%ch
		xor    %eax,%eax
		dec    %ch
		mov    %ch,%al
		mov    %ch,_0c13e1_data
		test   %eax,%eax
		je     _021d2e_jump
		mov    $0x00000a,%edx
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d6e8_func

	_021d2e_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000b,%eax
		jne    _022383_jump
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		mov    $0x00000b,%ah
		movw   $0x000023,0x000056(%esi)
		mov    %ah,_0c13df_data
		jmp    _022383_jump

	_021d5c_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%eax
		jne    _021dbf_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000040,%eax
		jne    _021dbf_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021dbf_jump
		mov    _0ce922_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		setne  %al
		and    $0x0000ff,%eax
		add    $0x000003,%eax
		mov    %ax,_0ce920_data
		xor    %eax,%eax
		mov    %ax,_0ce922_data

	_021dbf_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		mov    %esi,%eax
		call   _02175c_func
		jmp    _022383_jump

	_021dd8_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000007,%eax
		jne    _021e2f_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00002c,%eax
		jne    _021e2f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021e2f_jump
		mov    %esi,%eax
		call   _021340_func
		mov    0x000032(%esi),%edx
		mov    $0x000072,%eax
		sar    $0x000010,%edx
		call   _068654_func

	_021e2f_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		mov    %esi,%eax
		call   _02175c_func
		jmp    _022383_jump

	_021e48_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _021e9f_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000015,%eax
		jne    _021e9f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021e9f_jump
		mov    %esi,%eax
		call   _0211d8_func
		mov    0x000032(%esi),%edx
		mov    $0x000072,%eax
		sar    $0x000010,%edx
		call   _068654_func

	_021e9f_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d6e8_func
		movb   $0x00000a,_0c13df_data
		jmp    _022383_jump

	_021ec8_case:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		decb   _0c13e1_data
		xor    %eax,%eax
		mov    _0c13e1_data,%al
		test   %eax,%eax
		jne    _022383_jump
		mov    %esi,%eax
		call   _0216a0_func
		jmp    _022383_jump

	_021ef6_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000008,%eax
		jne    _021f44_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00000e,%eax
		jne    _021f44_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021f44_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _020b04_func
		jmp    _022383_jump

	_021f44_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		mov    _0c13e1_data,%cl
		xor    %eax,%eax
		dec    %cl
		mov    %cl,%al
		mov    %cl,_0c13e1_data
		test   %eax,%eax
		jne    _021fad_jump
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		testb  $0x000008,0x000081(%esi)
		je     _021f97_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _056614_func
		jmp    _022383_jump

	_021f97_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _056614_func
		jmp    _022383_jump

	_021fad_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		jmp    _022383_jump

	_021fbe_case:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000009,%eax
		je     _022383_jump
		cmpb   $0x000000,_0ce934_data
		jne    _022035_jump
		mov    _0ce91a_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		mov    _0ce91a_data,%ebx
		mov    _095b46_data(,%eax,4),%al
		sar    $0x000010,%ebx
		mov    %al,_0c13e1_data
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		mov    _095b44_data(,%eax,4),%ax
		xor    %edi,%edi
		mov    %ax,_0ce91a_data
		mov    %esi,%eax
		mov    %di,_0ce91e_data
		call   _0215a4_func
		jmp    _022383_jump

	_022035_jump:
		mov    %esi,%eax
		xor    %bl,%bl
		call   _0216a0_func
		mov    %bl,_0ce934_data
		jmp    _022383_jump

	_022049_case:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000014,%eax
		jne    _022090_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c24c8_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _022090_jump
		cmp    $0x000009,%eax
		je     _022090_jump
		movw   $0x000001,_0ce918_data

	_022090_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		xor    %eax,%eax
		mov    _0ce92a_data,%al
		cmp    $0x000002,%eax
		je     _022383_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		testb  $0x000008,0x000081(%esi)
		je     _0220d0_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		jmp    _0220da_jump

	_0220d0_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx

	_0220da_jump:
		mov    %esi,%eax
		call   _056614_func
		xor    %esi,%esi
		mov    %si,_0ce918_data
		jmp    _022383_jump

	_0220ef_case:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		movb   $0x000000,0x00006b(%esi)
		call   _01d6f8_func
		testb  $0x000008,0x000081(%esi)
		je     _021f97_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _056614_func
		jmp    _022383_jump

	_022131_jump:
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jle    _02216a_jump
		movw   $0x00fff8,0x000042(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x000000,0x000071(%esi)
		test   $0x000008,%bh
		je     _02215c_jump
		mov    $0x000004,%eax
		jmp    _022161_jump

	_02215c_jump:
		mov    $0xfffffffc,%eax

	_022161_jump:
		mov    %ax,0x000040(%esi)
		jmp    _022383_jump

	_02216a_jump:
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		testb  $0x000008,0x000081(%esi)
		je     _022186_jump
		mov    $0x000002,%eax
		jmp    _02218b_jump

	_022186_jump:
		mov    $0xfffffffe,%eax

	_02218b_jump:
		mov    %ax,0x000040(%esi)
		jmp    _022383_jump

	_022194_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		testb  $0x000008,0x000081(%esi)
		je     _021f97_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _056614_func
		jmp    _022383_jump

	_0221d2_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%al
		jb     _0221e8_jump
		jbe    _022131_jump
		cmp    $0x000006,%al
		je     _022194_jump
		jmp    _022383_jump

	_0221e8_jump:
		test   %al,%al
		je     _022131_jump
		jmp    _022383_jump

	_0221f5_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000004,%eax
		jne    _022260_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		cmp    $0x00000e,%edx
		jne    _022260_jump
		xor    %edx,%edx
		mov    0x00000c(%esi),%ebx
		mov    0x00006d(%esi),%dl
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _022260_jump
		mov    _0c25f4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _022260_jump
		xor    %eax,%eax
		mov    _0ce934_data,%al
		mov    $0x000001,%edx
		add    $0x00000a,%eax
		mov    %dx,_0c25f6_data
		movswl %ax,%edx
		mov    %esi,%eax
		call   _020b04_func
		incb   _0ce934_data

	_022260_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		xor    %eax,%eax
		mov    _0ce934_data,%al
		cmp    $0x000003,%eax
		jne    _022383_jump
		xor    %ah,%ah
		mov    %ah,_0ce934_data
		mov    %esi,%eax
		call   _02175c_func
		jmp    _022383_jump

	_022291_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000016,%eax
		jne    _022383_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		cmp    $0x00003f,%edx
		jne    _0222d8_jump
		xor    %edx,%edx
		mov    0x00000c(%esi),%ebx
		mov    0x00006d(%esi),%dl
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0222d8_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _020b04_func

	_0222d8_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00000e,%eax
		jne    _022331_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _022331_jump
		mov    _0c25f4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _022331_jump
		mov    $0x000001,%eax
		mov    $0x000003,%edx
		mov    %ax,_0c25f6_data
		mov    %esi,%eax
		call   _020b04_func

	_022331_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022383_jump
		mov    $0x00000b,%bh
		mov    $0x000001,%cl
		movw   $0x000023,0x000056(%esi)
		mov    %bh,_0c13df_data
		mov    %cl,_0ce934_data
		jmp    _022383_jump

	_022352_jump:
		mov    _0c13df_data,%al
		cmp    $0x00000d,%al
		ja     _022383_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0217d4_switch(,%eax,4)

	_022368_jump:
		mov    0x000070(%esi),%al
		cmp    $0x000001,%al
		jb     _02237b_jump
		jbe    _021a32_jump
		cmp    $0x000002,%al
		je     _022352_jump
		jmp    _022383_jump

	_02237b_jump:
		test   %al,%al
		je     _021a2b_jump

	_022383_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _0223a0_jump
		xor    %eax,%eax
		mov    _0ce92a_data,%al
		cmp    $0x000002,%eax
		jne    _0223a0_jump
		xor    %dh,%dh
		mov    %dh,_0ce92a_data

	_0223a0_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0223ac_func:
		push   %ebx
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0x000009,%eax
		jne    _0223d7_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		mov    $0x000007,%ah
		mov    $0x000002,%dl
		movb   $0x000000,0x00006b(%ebx)
		mov    %ah,_0c13df_data
		mov    %dl,_0c13e1_data

	_0223d7_jump:
		pop    %ebx
		ret    

_0223dc_switch:
		.long   _022661_case
		.long   _022783_case
		.long   _022815_case
		.long   _0228b4_case
		.long   _022bab_case
		.long   _022d95_case




_0223f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		movzbw 0x000068(%eax),%di
		mov    0x000028(%eax),%dx
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000074(%esi),%al
		add    %edx,%edi
		add    %ebx,%eax
		xor    %edx,%edx
		add    $0x000040,%eax
		mov    0x00006a(%esi),%dl
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _022478_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _022478_jump
		movb   $0x000001,_0c13dd_data
		jmp    _022480_jump

	_022478_jump:
		xor    %ah,%ah
		mov    %ah,_0c13dd_data

	_022480_jump:
		xor    %eax,%eax
		mov    _0c13df_data,%al
		cmp    $0x000002,%eax
		jge    _0224f6_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		je     _0224f6_jump
		mov    _0c25a2_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		mov    $0x000010,%ecx
		sub    %eax,%edx
		mov    $0xfffffff0,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _0224bf_jump
		cmp    %ecx,%eax
		jg     _0224bf_jump
		mov    $0x000001,%eax
		jmp    _0224c1_jump

	_0224bf_jump:
		xor    %eax,%eax

	_0224c1_jump:
		test   %eax,%eax
		je     _0224f6_jump
		mov    -0x000002(%esp),%eax
		mov    _0c25a4_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000020,%eax
		cmp    %eax,%edx
		jge    _0224f6_jump
		mov    $0x000010,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_0224f6_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022593_jump
		xor    %eax,%eax
		mov    _0c13df_data,%al
		test   %eax,%eax
		jne    _022516_jump
		movb   $0x000001,_0c13df_data

	_022516_jump:
		mov    %esi,%eax
		call   _04aad8_func
		xor    %eax,%eax
		mov    _0c13df_data,%al
		cmp    $0x000004,%eax
		jge    _022530_jump
		mov    %esi,%eax
		call   _0248b8_func

	_022530_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022593_jump
		xor    %eax,%eax
		mov    _0ce924_data,%edx
		mov    0x00006c(%esi),%al
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _022571_jump
		jmp    _022593_jump

	_02254e_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		jmp    _022593_jump

	_02255e_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		jmp    _022593_jump

	_022571_jump:
		mov    _0ce926_data,%ax
		cmp    $0x000002,%ax
		jb     _022585_jump
		jbe    _02254e_jump
		cmp    $0x000003,%ax
		je     _02255e_jump

	_022585_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func

	_022593_jump:
		mov    _0ce926_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jge    _022653_jump
		xor    %eax,%eax
		mov    _0c13df_data,%al
		test   %eax,%eax
		je     _022653_jump
		cmp    $0x000005,%eax
		je     _022653_jump
		mov    _0c25cc_data,%ax
		cmp    _0c2526_data,%ax
		jne    _0225e4_jump
		mov    _0c24aa_data,%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _0225dc_jump
		mov    %ebx,%eax

	_0225dc_jump:
		mov    %ax,_0c25cc_data
		jmp    _0225f2_jump

	_0225e4_jump:
		cmp    %ax,%di
		jle    _0225f2_jump
		movw   $0x000001,_0ce92e_data

	_0225f2_jump:
		cmpw   $0x000000,_0ce92e_data
		je     _022639_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022625_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    _0c25cc_data,%dx
		inc    %eax
		add    %eax,%edx
		mov    %dx,_0c25cc_data
		jmp    _022639_jump

	_022625_jump:
		mov    _0c25cc_data,%cx
		mov    0x000040(%esi),%ax
		add    %eax,%ecx
		mov    %cx,_0c25cc_data

	_022639_jump:
		mov    _0c13df_data,%al
		cmp    $0x000005,%al
		ja     _022fda_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0223dc_switch(,%eax,4)

	_022653_jump:
		mov    _0c2526_data,%ax
		mov    %ax,_0c25cc_data
		jmp    _022639_jump

	_022661_case:
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000002,_0921f8_data(%eax)
		jne    _022673_jump
		mov    $0x00003c,%al
		jmp    _022675_jump

	_022673_jump:
		mov    $0x000028,%al

	_022675_jump:
		xor    %edx,%edx
		mov    0x000062(%esi),%dl
		testb  $0x000002,_0921f8_data(%edx)
		jne    _0226e5_jump
		movswl %di,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    _0c25a2_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _022fda_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _022fda_jump
		mov    _0ce924_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _022fda_jump
		mov    0x000081(%esi),%al
		mov    $0x000001,%ebx
		or     $0x000008,%al
		mov    $0x000002,%edx
		mov    %al,0x000081(%esi)
		mov    %esi,%eax
		call   _01d6f8_func
		movw   $0x000002,0x000042(%esi)
		jmp    _022fda_jump

	_0226e5_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _022fda_jump
		mov    0x00006c(%esi),%dl
		test   %edx,%edx
		jne    _022fda_jump
		movswl %di,%edx
		and    $0x0000ff,%eax
		add    %eax,%edx
		mov    _0c25a2_data,%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _022750_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02271d_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022735_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022750_jump:
		movb   $0x000001,_0c13df_data
		mov    _0ce926_data,%ax
		cmp    $0x000002,%ax
		jb     _02276b_jump
		jbe    _02271d_jump
		cmp    $0x000003,%ax
		je     _022735_jump

	_02276b_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022783_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022fda_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		mov    _0c24e2_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		xor    %edx,%edx
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%dl
		add    %ecx,%edx
		sar    $0x000004,%edx
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24ec_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		jne    _022fda_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fff8,0x000042(%esi)
		movw   $0x000003,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022815_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022fda_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		mov    _0c24e2_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		sub    $0x000008,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		jne    _022fda_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    $0xffffffff,%ecx
		movw   $0x000000,0x000042(%esi)
		mov    %cx,_0ce928_data
		movw   $0x000000,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0228b4_case:
		mov    _0c25ca_data,%eax
		mov    $0x0015cc,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _0228c7_jump
		mov    %ebx,%eax

	_0228c7_jump:
		mov    _0c25a2_data,%edx
		mov    %ax,_0c25cc_data
		movswl %di,%eax
		sar    $0x000010,%edx
		add    $0x000020,%eax
		cmp    %eax,%edx
		jle    _0229da_jump
		mov    _0ce926_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0229da_jump
		mov    (%esp),%ecx
		cmp    _0c25a6_data,%cx
		jge    _0229da_jump
		mov    _0ce924_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _022937_jump
		jmp    _022967_jump

	_022914_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		jmp    _022959_jump

	_022924_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		jmp    _022959_jump

	_022937_jump:
		mov    _0ce926_data,%ax
		cmp    $0x000002,%ax
		jb     _02294b_jump
		jbe    _022914_jump
		cmp    $0x000003,%ax
		je     _022924_jump

	_02294b_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func

	_022959_jump:
		xor    %ebx,%ebx
		mov    %bx,_0ce928_data
		jmp    _0229da_jump

	_022967_jump:
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x0000c8,%eax
		jge    _0229ae_jump
		incw   0x000050(%esi)
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x0000c8,%eax
		jne    _0229ae_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		mov    %dx,_0ce926_data
		mov    $0x000001,%edx
		call   _01d6f8_func
		xor    %ebx,%ebx
		movw   $0x0000ff,0x000050(%esi)
		mov    %bx,_0ce928_data

	_0229ae_jump:
		mov    _0c24ac_data,%ax
		mov    %ax,_0c25cc_data
		cmp    %ax,%di
		jle    _0229da_jump
		mov    _0c1b8a_data,%ebx
		mov    $0x000001,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _0229d3_jump
		mov    %ebx,%eax

	_0229d3_jump:
		add    %ax,_0c25cc_data

	_0229da_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022a3f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _022a3f_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000010,%eax
		je     _022a1d_jump
		jmp    _022a3f_jump

	_0229fa_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		jmp    _022a3f_jump

	_022a0a_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		jmp    _022a3f_jump

	_022a1d_jump:
		mov    _0ce926_data,%ax
		cmp    $0x000002,%ax
		jb     _022a31_jump
		jbe    _0229fa_jump
		cmp    $0x000003,%ax
		je     _022a0a_jump

	_022a31_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func

	_022a3f_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022aa4_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _022aa4_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		je     _022a82_jump
		jmp    _022aa4_jump

	_022a5f_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		jmp    _022aa4_jump

	_022a6f_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		jmp    _022aa4_jump

	_022a82_jump:
		mov    _0ce926_data,%ax
		cmp    $0x000002,%ax
		jb     _022a96_jump
		jbe    _022a5f_jump
		cmp    $0x000003,%ax
		je     _022a6f_jump

	_022a96_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func

	_022aa4_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022fda_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		mov    _0c24e2_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		sub    $0x000008,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		jne    _022b29_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movw   $0x00fffa,0x000042(%esi)
		mov    %esi,%eax
		movw   $0x000003,0x000040(%esi)
		call   _01d6f8_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)

	_022b29_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		je     _022fda_jump
		mov    $0x000010,%ecx
		mov    _0c25a2_data,%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		mov    $0xfffffff0,%ebx
		sub    %edx,%eax
		cmp    %ebx,%eax
		jl     _022b5d_jump
		cmp    %ecx,%eax
		jg     _022b5d_jump
		mov    $0x000001,%eax
		jmp    _022b5f_jump

	_022b5d_jump:
		xor    %eax,%eax

	_022b5f_jump:
		test   %eax,%eax
		je     _022fda_jump
		mov    -0x000002(%esp),%eax
		mov    _0c25a4_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000020,%eax
		cmp    %eax,%edx
		jge    _022b85_jump
		mov    $0x000010,%ebx
		jmp    _022b8a_jump

	_022b85_jump:
		mov    $0x000001,%ebx

	_022b8a_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000042(%esi)
		mov    0x000042(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022bab_case:
		mov    _0c25d0_data,%ax
		cmp    _0ce932_data,%ax
		jle    _022bc4_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0c25d0_data

	_022bc4_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022c63_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _022c01_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _022c01_jump
		mov    $0x000001,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %bx,_0ce926_data
		xor    %ebx,%ebx
		call   _01d6f8_func
		jmp    _022c63_jump

	_022c01_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _022c63_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		jne    _022c63_jump
		incw   _0ce930_data
		mov    _0ce92e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jge    _022c42_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		mov    %dx,_0ce926_data
		mov    $0x000001,%edx
		call   _01d6f8_func
		jmp    _022c63_jump

	_022c42_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movb   $0x000005,_0c13df_data
		mov    _0c24ae_data,%ax
		mov    %ax,_0ce932_data

	_022c63_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022d24_jump
		testb  $0x000008,0x000081(%esi)
		je     _022c81_jump
		mov    $0x000010,%eax
		jmp    _022c86_jump

	_022c81_jump:
		mov    $0xfffffff0,%eax

	_022c86_jump:
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    _0c24e2_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ebx
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		jne    _022d24_jump
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		shl    $0x000004,%al
		movw   $0x000000,0x000040(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		and    $0x000001,%al
		mov    %bl,%bh
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		mov    $0x000005,%ebx
		call   _01d6f8_func

	_022d24_jump:
		mov    _0c25a6_data,%eax
		mov    _0c25a2_data,%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		movswl %di,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _022d44_jump
		neg    %eax

	_022d44_jump:
		cmp    $0x0000fa,%eax
		jle    _022fda_jump
		mov    _0c2524_data,%ax
		xor    %cl,%cl
		movl   $0x000000,0x000024(%esi)
		mov    %cl,_0c13e2_data
		mov    %ax,_0c25d0_data
		mov    0x000081(%esi),%ch
		mov    _0c2526_data,%ax
		and    $0x0000fb,%ch
		mov    %ax,_0c25cc_data
		mov    %cl,_0c13df_data
		mov    %ch,0x000081(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022d95_case:
		mov    _0ce926_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _022dc6_jump
		mov    _0ce932_data,%ax
		xor    %edx,%edx
		mov    _0ce928_data,%bx
		mov    _0c24cd_data,%dl
		inc    %ebx
		sub    %edx,%eax
		mov    %bx,_0ce928_data
		mov    %ax,_0c25d0_data

	_022dc6_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _022dfd_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _022dfd_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		jne    _022dfd_jump
		mov    $0x000003,%ecx
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %cx,_0ce926_data
		call   _01d6f8_func

	_022dfd_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _022e66_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _022e66_jump
		cmpb   $0x000000,_0c13dd_data
		je     _022e35_jump
		mov    $0x000002,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %dx,_0ce926_data
		mov    %ebx,%edx
		call   _01d6f8_func
		jmp    _022e66_jump

	_022e35_jump:
		xor    %ebx,%ebx
		mov    0x00006b(%esi),%bl
		cmp    $0x000015,%ebx
		jne    _022e66_jump
		mov    0x00000c(%esi),%ebx
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _022e66_jump
		movw   $0x00ffe2,_0ce928_data

	_022e66_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022f77_jump
		testb  $0x000008,0x000081(%esi)
		je     _022e84_jump
		mov    $0x000010,%eax
		jmp    _022e89_jump

	_022e84_jump:
		mov    $0xfffffff0,%eax

	_022e89_jump:
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		add    $0x000008,%eax
		mov    _0c24e2_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000004,%ebx
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		jne    _022f77_jump
		mov    _0ce924_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _022f2b_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movw   $0x00fffe,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		mov    _0c2524_data,%ax
		movb   $0x0000ff,0x000072(%esi)
		mov    %ax,_0c25d0_data
		mov    _0c2526_data,%ax
		movb   $0x000000,0x000071(%esi)
		mov    %ax,_0c25cc_data
		jmp    _022f77_jump

	_022f2b_jump:
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		shl    $0x000004,%al
		movw   $0x000000,0x000040(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		mov    $0x000005,%ebx
		call   _01d6f8_func

	_022f77_jump:
		mov    _0c25a6_data,%eax
		mov    _0c25a2_data,%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		movswl %di,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _022f97_jump
		neg    %eax

	_022f97_jump:
		cmp    $0x000190,%eax
		jle    _022fda_jump
		mov    _0c2524_data,%ax
		mov    0x000081(%esi),%cl
		xor    %bh,%bh
		movl   $0x000000,0x000024(%esi)
		mov    %bh,_0c13e2_data
		and    $0x0000fb,%cl
		mov    %bh,_0c13df_data
		mov    %ax,_0c25d0_data
		mov    _0c2526_data,%ax
		mov    %cl,0x000081(%esi)
		mov    %ax,_0c25cc_data

	_022fda_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi

	_022fdf_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022fe4_func:
		mov    0x000076(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0ce926_data
		ret    

_022ff0_switch:
		.long   _02301a_case
		.long   _023063_case
		.long   _023087_case
		.long   _0230ba_case




_023000_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    0x000040(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jg     _023133_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02301a_case:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02302b_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d6f8_func

	_023039_jump:
		mov    $0x000002,%dh
		mov    _0ce926_data,%ax
		mov    %dh,_0c13df_data
		mov    %ax,0x000040(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023050_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		jmp    _023039_jump

	_023063_case:
		mov    _0ce926_data,%ax
		cmp    $0x000002,%ax
		jb     _023077_jump
		jbe    _02302b_jump
		cmp    $0x000003,%ax
		je     _023050_jump

	_023077_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		jmp    _023039_jump

	_023087_case:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		mov    $0x000003,%dl
		mov    $0xffffffff,%eax
		mov    %dl,_0c13df_data
		mov    0x000028(%ecx),%edx
		movw   $0x000000,0x000050(%ecx)
		sub    $0x000020,%edx
		mov    %ax,_0ce926_data
		mov    %edx,0x000028(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0230ba_case:
		mov    $0x0002b3,%ebx
		mov    _0ce928_data,%dx
		mov    %ecx,%eax
		movb   $0x000005,0x000072(%ecx)
		inc    %edx
		movb   $0x000000,0x000071(%ecx)
		mov    %dx,_0ce928_data
		mov    $0x000002,%edx
		movw   $0x000002,0x000040(%ecx)
		call   _01d6e8_func
		mov    _0c24ae_data,%ax
		xor    %esi,%esi
		mov    %ax,_0c25d0_data
		mov    %bx,_0ce932_data
		mov    _0c25ce_data,%eax
		mov    %si,_0ce930_data
		sar    $0x000010,%eax
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x0002b3,%eax
		jge    _023120_jump
		mov    %bx,_0c25d0_data

	_023120_jump:
		mov    $0x000004,%ah
		movw   $0x000000,0x000042(%ecx)
		mov    %ah,_0c13df_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023133_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		call   _024bd4_func
		mov    _0c13df_data,%al
		cmp    $0x000003,%al
		ja     _022fdf_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_022ff0_switch(,%eax,4)



_023160_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jne    _0231c0_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0231c0_jump
		movb   $0x000001,_0c13dd_data
		jmp    _0231c8_jump

	_0231c0_jump:
		xor    %ah,%ah
		mov    %ah,_0c13dd_data

	_0231c8_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _023254_jump
		mov    %ecx,%eax
		call   _04aad8_func
		mov    %ecx,%eax
		call   _0248b8_func
		cmpb   $0x000000,_0c13dd_data
		je     _023254_jump
		xor    %eax,%eax
		mov    _0ce924_data,%edx
		mov    0x00006c(%ecx),%al
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _023232_jump
		jmp    _023254_jump

	_023209_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		jmp    _023254_jump

	_02321c_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		jmp    _023254_jump

	_023232_jump:
		mov    _0ce926_data,%ax
		cmp    $0x000002,%ax
		jb     _023246_jump
		jbe    _023209_jump
		cmp    $0x000003,%ax
		je     _02321c_jump

	_023246_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func

	_023254_jump:
		mov    _0c13df_data,%al
		test   %al,%al
		jbe    _02326a_jump
		cmp    $0x000001,%al
		je     _02333a_jump

	_023265_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02326a_jump:
		andb   $0x0000f7,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _023282_jump
		mov    %ecx,%eax
		call   _0248b8_func

	_023282_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _0232ae_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0232ae_jump
		mov    $0x000002,%edx
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %dx,_0ce926_data
		mov    %ebx,%edx
		call   _01d6f8_func

	_0232ae_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _023265_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%esi
		mov    0x000069(%ecx),%al
		add    %esi,%eax
		mov    _0c24e2_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %eax,%edx
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%eax
		mov    0x000068(%ecx),%bl
		sub    $0x000008,%eax
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24ec_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		jne    _023265_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		movb   $0x000005,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		movw   $0x00fffe,0x000040(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02333a_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _023265_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		add    $0x000008,%eax
		mov    _0c24e2_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		jne    _023265_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000042(%ecx)
		mov    $0x000002,%bh
		movw   $0x000000,0x000040(%ecx)
		mov    %bh,_0c13df_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0233c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000040(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jg     _023428_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0233d8_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d6f8_func

	_0233e6_jump:
		movb   $0x000001,_0c13df_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0233f1_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		jmp    _0233e6_jump

	_023404_jump:
		mov    _0ce926_data,%ax
		cmp    $0x000002,%ax
		jb     _023418_jump
		jbe    _0233d8_jump
		cmp    $0x000003,%ax
		je     _0233f1_jump

	_023418_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		jmp    _0233e6_jump

	_023428_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		call   _0248b8_func
		mov    _0c13df_data,%al
		test   %al,%al
		je     _023404_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023448_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000081(%eax),%ah
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    0x00006a(%ebx),%dl
		mov    %ah,0x000081(%ebx)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ebx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx
		jne    _0234c1_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ebx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		lea    0x000000(,%eax,8),%ecx
		mov    (%edx),%eax
		mov    0x000005(%ecx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0234c1_jump
		movb   $0x000001,_0c13dd_data
		jmp    _0234c9_jump

	_0234c1_jump:
		xor    %dl,%dl
		mov    %dl,_0c13dd_data

	_0234c9_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		test   %eax,%eax
		jne    _023530_jump
		xor    %edx,%edx
		mov    0x00006c(%ebx),%dl
		cmp    $0x000007,%edx
		jne    _023512_jump
		xor    %ecx,%ecx
		mov    0x00006b(%ebx),%cl
		cmp    $0x00002c,%ecx
		jne    _023512_jump
		lea    0x000000(,%eax,4),%ecx
		mov    0x00000c(%ebx),%eax
		mov    (%ecx,%eax,1),%eax
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _023512_jump
		mov    %ebx,%eax
		call   _021340_func

	_023512_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _023530_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		test   %eax,%eax
		jne    _023530_jump
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _01d6e8_func

	_023530_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023534_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x000070(%eax),%al
		test   %al,%al
		jbe    _02354a_jump
		cmp    $0x000001,%al
		je     _023551_jump

	_023545_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02354a_jump:
		andb   $0x0000f7,0x000081(%esi)

	_023551_jump:
		xor    %edx,%edx
		mov    0x000070(%esi),%dl
		cmp    $0x000001,%edx
		jne    _023562_jump
		orb    $0x000008,0x000081(%esi)

	_023562_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _04aad8_func
		mov    0x000069(%esi),%dl
		add    0x00002c(%esi),%edx
		mov    _0c24e2_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		xor    %edx,%edx
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%dl
		add    %ecx,%edx
		sar    $0x000004,%edx
		add    %ebx,%edx
		movswl %dx,%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0c24ec_data,%ebx
		movw   $0x000000,0x000042(%esi)
		mov    0x000002(%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000020,_0921f8_data(%edx)
		je     _023545_jump
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _0235e3_jump
		jmp    _02367f_jump

	_0235d3_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _02367f_jump

	_0235e3_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x000073,%ebx
		jne    _0235d3_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0235d3_jump
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%edx)
		mov    0x000028(%esi),%ebx
		sub    $0x000020,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%esi),%ebx
		mov    0x000028(%edx),%ax
		sub    $0x000030,%ebx
		mov    %ax,0x00003c(%edx)
		mov    %ebx,0x00002c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		call   _01df3c_func
		mov    0x000081(%edx),%cl
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f7d4_func
		movw   $0x0000ff,0x000056(%edx)
		movw   $0x00001e,0x000050(%edx)
		movw   $0x00001e,0x000052(%edx)
		movb   $0x000000,0x00006d(%edx)
		movb   $0x000004,0x00006c(%edx)
		movb   $0x000000,0x00006b(%edx)
		movw   $0x00ffff,0x000046(%edx)
		movw   $0x000000,0x000048(%edx)

	_02367f_jump:
		mov    0x000081(%esi),%ch
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02369c_func:
		push   %edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%dl
		jb     _0236ac_jump
		jbe    _0236b6_jump
		cmp    $0x000003,%dl
		je     _0236ae_jump

	_0236ac_jump:
		pop    %edx
		ret    

	_0236ae_jump:
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_0236b6_jump:
		movw   $0x000000,0x000042(%eax)
		pop    %edx
		ret    



_0236c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    _0c1b44_data,%edx
		movswl (%edx),%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		mov    _0c1b48_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jg     _02371a_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0236f4_jump:
		inc    %eax
		mov    _0c1b44_data,%ecx
		movswl %ax,%edx
		movswl (%ecx,%edx,2),%edx
		imul   $0x000084,%edx,%edx
		mov    _0c1b34_data,%ecx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _023721_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02371a_jump:
		mov    _0c1b48_data,%si

	_023721_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000082,%edx
		jne    _0236f4_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0236f4_jump
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000028(%ebx),%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%ebx),%edx
		movw   $0x000000,0x000042(%ecx)
		mov    %edx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    0x000042(%ecx),%ax
		xor    %edx,%edx
		mov    0x00006e(%ecx),%bl
		mov    0x00006f(%ecx),%dl
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01d6f8_func
		mov    %ecx,%eax
		call   _01df3c_func
		mov    %ecx,%eax
		call   _01dea4_func
		movw   $0x00ffff,0x000046(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000048(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f7d4_func
		andb   $0x0000bf,0x000081(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0237a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		testb  $0x000004,0x00007d(%eax)
		je     _02382c_jump
		mov    %ecx,%eax
		call   _01d704_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _01d82c_func
		movswl %di,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _023800_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02d280_func
		test   %ax,%ax
		je     _023800_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _056614_func

	_023800_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00003e(%ecx),%esi
		mov    0x00004a(%ecx),%ax
		sar    $0x000010,%esi
		mov    %ax,0x000042(%ecx)
		test   %esi,%esi
		jle    _023823_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _02382c_jump

	_023823_jump:
		jge    _02382c_jump
		andb   $0x0000f7,0x000081(%ecx)

	_02382c_jump:
		testb  $0x000008,0x00007d(%ecx)
		je     _023842_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_023842_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023848_func:
		push   %ebx
		push   %edx
		xor    %ebx,%ebx
		mov    0x000070(%eax),%bl
		mov    $0x0000ff,%dl
		test   %ebx,%ebx
		jne    _023868_jump
		mov    0x000081(%eax),%bl
		or     $0x000008,%bl
		mov    $0x000003,%dl
		mov    %bl,0x000081(%eax)
		jmp    _023876_jump

	_023868_jump:
		cmp    $0x000001,%ebx
		jne    _023876_jump
		mov    $0x000002,%dl
		andb   $0x0000f7,0x000081(%eax)

	_023876_jump:
		and    $0x0000ff,%edx
		cmp    $0x0000ff,%edx
		je     _02388e_jump
		mov    $0x000001,%ebx
		call   _056614_func

	_02388e_jump:
		pop    %edx
		pop    %ebx
		ret    



_023894_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		xor    %ecx,%ecx
		mov    0x00006d(%eax),%cl
		test   %ecx,%ecx
		jne    _0238ba_jump
		mov    0x00006c(%eax),%cl
		cmp    $0x000004,%ecx
		jne    _0238ba_jump
		call   _04aad8_func
		negw   0x000040(%esi)
		jmp    _0239de_jump

	_0238ba_jump:
		xor    %ecx,%ecx
		mov    0x000070(%esi),%cl
		test   %ecx,%ecx
		jne    _0238cc_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _0238d3_jump

	_0238cc_jump:
		orb    $0x000008,0x000081(%esi)

	_0238d3_jump:
		testb  $0x000002,0x00007d(%esi)
		je     _023923_jump
		mov    %esi,%eax
		call   _04aad8_func
		xor    %edx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _024278_func
		mov    %al,%cl
		testb  $0x000001,_0921f8_data(%ecx)
		je     _02391c_jump
		xor    %ecx,%ecx
		mov    0x000070(%esi),%cl
		test   %ecx,%ecx
		jne    _02390b_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _023915_jump

	_02390b_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_023915_jump:
		mov    %esi,%eax
		call   _056614_func

	_02391c_jump:
		mov    %esi,%eax
		call   _0248b8_func

	_023923_jump:
		testb  $0x000001,0x00007d(%esi)
		je     _0239cb_jump
		mov    $0x000028,%ebx
		lea    0x00004a(%esi),%ecx
		mov    $0x000030,%edx
		mov    %esi,%eax
		call   _01d404_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01d704_func
		mov    %eax,%edi
		mov    %esi,%eax
		call   _01d82c_func
		movswl %di,%edi
		movswl %ax,%ecx
		mov    %edi,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _0239c4_jump
		mov    %ecx,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _02d280_func
		test   %ax,%ax
		je     _0239c4_jump
		mov    0x00003e(%esi),%ecx
		mov    0x000028(%esi),%edx
		sar    $0x000010,%ecx
		sub    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000070(%esi),%cl
		mov    %edx,0x000028(%esi)
		test   %ecx,%ecx
		jne    _0239ac_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _056614_func
		orb    $0x000008,0x000081(%esi)
		jmp    _0239c4_jump

	_0239ac_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _056614_func
		andb   $0x0000f7,0x000081(%esi)

	_0239c4_jump:
		mov    %esi,%eax
		call   _04aad8_func

	_0239cb_jump:
		testb  $0x000010,0x00007d(%esi)
		je     _0239de_jump
		mov    %esi,%eax
		call   _04aad8_func
		movw   $0x000000,0x000042(%esi)

	_0239de_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0239e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		testb  $0x000010,0x00007d(%eax)
		je     _023aad_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _023a05_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _023a21_jump

	_023a05_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _023aad_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _023aad_jump

	_023a21_jump:
		xor    %eax,%eax
		mov    0x00007f(%esi),%al
		cmp    $0x0000ff,%eax
		jne    _023a60_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _023a4d_jump
		cmp    %ecx,%eax
		jg     _023a4d_jump
		mov    $0x000001,%eax
		jmp    _023a4f_jump

	_023a4d_jump:
		xor    %eax,%eax

	_023a4f_jump:
		test   %eax,%eax
		jne    _023a5a_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _023aad_jump

	_023a5a_jump:
		movb   $0x00003c,0x00007f(%esi)
		jmp    _023aad_jump

	_023a60_jump:
		test   %eax,%eax
		jne    _023aa0_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		testb  $0x000008,0x000081(%esi)
		je     _023a87_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _023a91_jump

	_023a87_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_023a91_jump:
		mov    %esi,%eax
		call   _056614_func
		movw   $0x000000,0x000042(%esi)
		jmp    _023aad_jump

	_023aa0_jump:
		mov    %al,%dl
		movw   $0x000000,0x000042(%esi)
		dec    %dl
		mov    %dl,0x00007f(%esi)

	_023aad_jump:
		xor    %eax,%eax
		mov    0x000075(%esi),%al
		cmp    $0x000004,%eax
		jne    _023b33_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _023acc_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _023ae0_jump

	_023acc_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _023b33_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _023b33_jump

	_023ae0_jump:
		cmpb   $0x000000,0x00007b(%esi)
		je     _023b22_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _023b06_jump
		cmp    %ecx,%eax
		jg     _023b06_jump
		mov    $0x000001,%eax
		jmp    _023b08_jump

	_023b06_jump:
		xor    %eax,%eax

	_023b08_jump:
		test   %eax,%eax
		je     _023b33_jump
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000042(%esi)
		jmp    _023b33_jump

	_023b22_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func

	_023b33_jump:
		testb  $0x000002,0x00007d(%esi)
		je     _023b7d_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _023b7d_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _023b7d_jump
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		test   %eax,%eax
		jne    _023b6c_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _023b76_jump

	_023b6c_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_023b76_jump:
		mov    %esi,%eax
		call   _056614_func

	_023b7d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023b84_func:
		push   %edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%dl
		jb     _023ba4_jump
		jbe    _023b9b_jump
		cmp    $0x000014,%dl
		jb     _023b9b_jump
		jbe    _023b9d_jump
		cmp    $0x00001e,%dl
		je     _023bab_jump

	_023b9b_jump:
		pop    %edx
		ret    

	_023b9d_jump:
		call   _0237a8_func
		pop    %edx
		ret    

	_023ba4_jump:
		call   _023894_func
		pop    %edx
		ret    

	_023bab_jump:
		call   _0239e4_func
		pop    %edx
		ret    



_023bb4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _023c3f_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    _0c1ef0_data,%edx
		movw   $0x000000,0x000042(%ecx)
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _023c0b_jump
		jle    _023bf9_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _023c12_jump

	_023bf9_jump:
		testb  $0x000008,0x000081(%edx)
		je     _023c0b_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _023c12_jump

	_023c0b_jump:
		orb    $0x000008,0x000081(%ecx)

	_023c12_jump:
		mov    %ecx,%eax
		call   _0236c0_func
		testb  $0x000008,0x000081(%ecx)
		je     _023c2e_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _023c38_jump

	_023c2e_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx

	_023c38_jump:
		mov    %ecx,%eax
		call   _056614_func

	_023c3f_jump:
		pop    %ecx
		pop    %ebx
		ret    

_023c44_switch:
		.long   _023e73_case
		.long   _023def_case
		.long   _023cc6_case
		.long   _023eb4_case
		.long   _023eb4_case
		.long   _023c80_case




_023c5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000075(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _023eb4_case
		and    $0x0000ff,%eax
		jmp    *%cs:_023c44_switch(,%eax,4)

	_023c80_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _023eb4_case
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _023eb4_case
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _023eb4_case
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _056614_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023cc6_case:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _023eb4_case
		mov    %esp,%eax
		lea    0x000004(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007a(%esi),%al
		mov    0x00000c(%esp),%ebx
		add    %edx,%eax
		mov    0x000002(%esp),%edx
		sub    %eax,%ebx
		sar    $0x000011,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		mov    %eax,%ecx
		add    %eax,%ecx
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000004(%esp)
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x00007a(%esi),%al
		add    %eax,%edi
		mov    %di,(%esp)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _023eb4_case
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _023eb4_case
		mov    _0c25a8_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c25a6_data,%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    _0c25a4_data,%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000012(%esp),%edx
		push   %eax
		mov    _0c25a2_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _023eb4_case
		xor    %edx,%edx
		mov    _0c25a6_data,%ax
		mov    0x000074(%esi),%dl
		sub    %edx,%eax
		mov    %ax,0x000050(%esi)
		mov    0x00002c(%esi),%eax
		mov    0x00004e(%esi),%edx
		sub    $0x000010,%eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jge    _023eb4_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01dea4_func
		mov    %esi,%eax
		call   _056614_func
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%edx
		movb   $0x000006,0x000072(%esi)
		dec    %edx
		mov    %edx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023def_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _023eb4_case
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _023eb4_case
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _023eb4_case
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dea4_func
		mov    _0c1bc0_data,%dl
		add    _0c1b78_data,%dx
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		mov    %dx,0x000050(%esi)
		mov    0x00002c(%esi),%eax
		mov    0x00004e(%esi),%edx
		sub    $0x000010,%eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jge    _023eb4_case
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _056614_func
		movb   $0x000006,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebx
		movb   $0x0000ff,0x00007f(%esi)
		dec    %ebx
		mov    %ebx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023e73_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _023eb4_case
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _023eb4_case
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _023eb4_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01dea4_func
		mov    %esi,%eax
		call   _056614_func
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ecx
		movb   $0x000006,0x000072(%esi)
		dec    %ecx
		mov    %ecx,0x00002c(%esi)

	_023eb4_case:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023ec0_func:
		movswl %dx,%edx
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		call   _01e4d8_func
		and    $0x0000ff,%eax
		cmp    $0x00000f,%eax
		sete   %al
		xor    %ah,%ah
		ret    



_023ee4_func:
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		movswl %ax,%esi
		movswl %bx,%edx
		movswl %cx,%eax
		call   *_0cdd2c_data(,%esi,4)
		sub    %ebx,%eax
		pop    %esi
		pop    %ecx
		ret    



_023f00_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		cwtl   
		call   _023ee4_func
		cwtl   
		test   %eax,%eax
		jle    _023f16_jump
		xor    %ecx,%ecx

	_023f16_jump:
		mov    %ecx,%eax
		pop    %ecx
		ret    

_023f1c_switch:
		.long   _024066_case
		.long   _024066_case
		.long   _0240e0_case
		.long   _0240ef_case
		.long   _024105_case
		.long   _024105_case
		.long   _02411f_case
		.long   _02411f_case
		.long   _024066_case
		.long   _02417d_case
		.long   _024066_case
		.long   _024071_case
		.long   _024071_case
		.long   _024071_case
		.long   _02417d_case
		.long   _02417d_case
		.long   _024071_case
		.long   _024071_case
		.long   _0240e0_case
		.long   _0240ef_case
		.long   _024105_case
		.long   _024105_case
		.long   _02411f_case
		.long   _02411f_case
		.long   _024066_case
		.long   _024066_case
		.long   _024071_case
		.long   _024071_case
		.long   _024071_case
		.long   _024071_case
		.long   _02417d_case




_023f98_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dl,0x000008(%esp)
		xor    %edx,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edi),%ax
		mov    %edx,(%esp)
		cmp    $0x000017,%eax
		jne    _024020_jump
		testb  $0x000002,_0c3315_data
		je     _024020_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    0x000008(%esp),%al
		test   %ax,%ax
		js     _023fda_jump
		sar    %cl,%ax
		jmp    _023fe3_jump

	_023fda_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_023fe3_jump:
		mov    _0c1bb9_data,%dl
		mov    _0c1b58_data,%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    (%ecx),%ecx
		mov    _0c1bb8_data,%dl
		mov    %al,0x000008(%esp)
		testb  $0x000040,0x000007(%ecx,%edx,8)
		jne    _024020_jump
		test   %al,%al
		je     _024017_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    _02401c_jump

	_024017_jump:
		mov    $0x000001,%edx

	_02401c_jump:
		mov    %dl,0x000008(%esp)

	_024020_jump:
		movzbw 0x000068(%edi),%si
		xor    %eax,%eax
		mov    0x000028(%edi),%dx
		mov    0x000069(%edi),%al
		add    %edx,%esi
		mov    0x00002c(%edi),%dx
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000014,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func
		cmp    $0x00001e,%al
		ja     _024071_case
		and    $0x0000ff,%eax
		jmp    *%cs:_023f1c_switch(,%eax,4)

	_024066_case:
		mov    $0x000008,%eax
		sub    0x000042(%edi),%ax
		add    %eax,%ebx

	_024071_case:
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    0x000008(%esp),%dl
		test   %ax,%ax
		js     _024083_jump
		sar    %cl,%ax
		jmp    _02408c_jump

	_024083_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02408c_jump:
		sub    %al,%dl
		xor    %eax,%eax
		mov    %dl,%al
		mov    %dl,0x000008(%esp)
		cmp    $0x000080,%eax
		jle    _0240a3_jump
		xor    %dh,%dh
		mov    %dh,0x000008(%esp)

	_0240a3_jump:
		mov    $0x000004,%cl
		mov    %esi,%eax
		mov    0x000004(%esp),%edi
		test   %ax,%ax
		js     _0240b5_jump
		sar    %cl,%ax
		jmp    _0240be_jump

	_0240b5_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0240be_jump:
		sub    %ebx,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %ax,%ax
		js     _0240ce_jump
		sar    %cl,%ax
		jmp    _0240d7_jump

	_0240ce_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0240d7_jump:
		xor    %ebx,%ebx
		xor    %cl,%cl
		jmp    _024233_jump

	_0240e0_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _024071_case
		add    $0x000011,%ebx
		jmp    _024071_case

	_0240ef_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _024071_case
		add    $0x000011,%ebx
		jmp    _024071_case

	_024105_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _024117_jump
		add    $0x000011,%ebx
		jmp    _024071_case

	_024117_jump:
		add    $0x000002,%ebx
		jmp    _024071_case

	_02411f_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _024117_jump
		add    $0x000011,%ebx
		jmp    _024071_case

	_024131_jump:
		add    $0x000008,%ebx

	_024134_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func
		cmp    $0x000008,%al
		jb     _02420e_jump
		jbe    _024198_jump
		cmp    $0x000013,%al
		jb     _0241f0_jump
		jbe    _0241b6_jump
		cmp    $0x000016,%al
		jb     _0241cc_jump
		cmp    $0x000017,%al
		jbe    _02421c_jump
		cmp    $0x000019,%al
		jbe    _024198_jump
		jmp    _0241e8_jump

	_02417d_case:
		mov    0x000062(%edi),%al
		cmp    $0x000003,%al
		jb     _024192_jump
		jbe    _024131_jump
		cmp    $0x000012,%al
		jb     _024134_jump
		jbe    _024131_jump
		cmp    $0x000013,%al
		je     _024131_jump
		jmp    _024134_jump

	_024192_jump:
		cmp    $0x000002,%al
		je     _024131_jump
		jmp    _024134_jump

	_024198_jump:
		add    $0x000009,%ebx
		jmp    _024071_case

	_0241a0_jump:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _024071_case
		add    $0x000019,%ebx
		jmp    _024071_case

	_0241b6_jump:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _024071_case
		add    $0x000019,%ebx
		jmp    _024071_case

	_0241cc_jump:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _024117_jump
		add    $0x000011,%ebx
		jmp    _024071_case

	_0241e2_jump:
		inc    %ebx
		jmp    _024071_case

	_0241e8_jump:
		add    $0x000008,%ebx
		jmp    _024071_case

	_0241f0_jump:
		cmp    $0x00000c,%al
		jb     _024202_jump
		jbe    _0241e2_jump
		cmp    $0x000012,%al
		je     _0241a0_jump
		add    $0x000008,%ebx
		jmp    _024071_case

	_024202_jump:
		cmp    $0x00000a,%al
		je     _024198_jump
		add    $0x000008,%ebx
		jmp    _024071_case

	_02420e_jump:
		cmp    $0x000002,%al
		jb     _024198_jump
		jbe    _0241a0_jump
		cmp    $0x000004,%al
		jb     _0241b6_jump
		cmp    $0x000005,%al
		jbe    _0241cc_jump

	_02421c_jump:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _024117_jump
		add    $0x000011,%ebx
		jmp    _024071_case

	_024232_jump:
		inc    %ebx

	_024233_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		cmp    %eax,%ebx
		jg     _024260_jump
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		sub    %ebx,%eax
		mov    %edi,%edx
		shl    $0x000004,%eax
		sub    %eax,%edx
		movswl %dx,%edx
		movswl %si,%eax
		call   _023ec0_func
		test   %ax,%ax
		je     _024232_jump
		inc    %cl
		jmp    _024232_jump

	_024260_jump:
		test   %cl,%cl
		je     _02426b_jump
		movl   $0x00000f,(%esp)

	_02426b_jump:
		mov    (%esp),%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024278_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _024295_jump
		mov    $0x000001,%eax
		jg     _024295_jump
		neg    %eax

	_024295_jump:
		mov    %eax,%ecx
		cwtl   
		test   %eax,%eax
		je     _0243f5_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000017,%eax
		jne    _0242dc_jump
		mov    _0c3315_data,%ah
		mov    $0x000004,%dh
		test   $0x000002,%ah
		je     _0242c1_jump
		mov    $0x000008,%eax
		mov    $0x000002,%dh
		jmp    _0242c6_jump

	_0242c1_jump:
		mov    $0x00000e,%eax

	_0242c6_jump:
		mov    _0c1b9a_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _0242e1_jump
		xor    %ebx,%ebx
		mov    %dh,%bl
		sub    %ebx,%eax
		jmp    _0242e1_jump

	_0242dc_jump:
		mov    $0x00000e,%eax

	_0242e1_jump:
		movswl %cx,%ebx
		test   %ebx,%ebx
		jge    _0242ea_jump
		neg    %eax

	_0242ea_jump:
		test   %dl,%dl
		je     _0242f0_jump
		neg    %eax

	_0242f0_jump:
		cwtl   
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    0x000028(%esi),%di
		mov    %ebx,0x000028(%esi)
		test   %dl,%dl
		jne    _024330_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		mov    _092239_data(,%edx,4),%bl
		mov    0x000040(%esi),%ax
		test   $0x000010,%bl
		je     _02432c_jump
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _024323_jump
		sar    %cl,%ax
		jmp    _02432c_jump

	_024323_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02432c_jump:
		cwtl   
		sub    %eax,0x000028(%esi)

	_024330_jump:
		testb  $0x000020,0x000081(%esi)
		je     _024359_jump
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		jmp    _02435f_jump

	_024359_jump:
		xor    %edx,%edx
		mov    %edx,0x000008(%esp)

	_02435f_jump:
		mov    0x000008(%esp),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		add    %ebx,%eax
		sub    %eax,%edx
		mov    $0x000004,%cl
		mov    %edx,%eax
		xor    %ebx,%ebx
		test   %ax,%ax
		js     _024381_jump
		sar    %cl,%ax
		jmp    _02438a_jump

	_024381_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02438a_jump:
		mov    0x000060(%esi),%bx
		mov    %eax,%edx
		cmp    $0x000017,%ebx
		jne    _0243d2_jump
		xor    %ebx,%ebx
		mov    _0c1bb9_data,%bl
		mov    _0c1b58_data,%ecx
		shl    $0x000002,%ebx
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    (%ebx),%ebx
		mov    _0c1bb8_data,%cl
		testb  $0x000040,0x000007(%ebx,%ecx,8)
		je     _0243d2_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    %dl,%al
		test   %ax,%ax
		js     _0243c9_jump
		sar    %cl,%ax
		jmp    _0243d2_jump

	_0243c9_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0243d2_jump:
		test   %al,%al
		je     _0243d8_jump
		dec    %al

	_0243d8_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _023f98_func
		mov    %al,%dl
		movswl %di,%eax
		mov    %eax,0x000028(%esi)
		mov    %dl,%al
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0243f5_jump:
		xor    %dl,%dl
		mov    %dl,%al
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024404_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000002,_0921f8_data(%eax)
		jne    _024768_jump
		mov    0x000060(%ecx),%ax
		cmp    $0x000028,%ax
		jb     _02471d_jump
		jbe    _024688_jump
		cmp    $0x00007a,%ax
		jb     _02470d_jump
		jbe    _024688_jump
		cmp    $0x0000a5,%ax
		jb     _02474a_jump
		jbe    _024675_jump
		cmp    $0x0000ac,%ax
		je     _0246ec_jump
		jmp    _02474a_jump

	_02445f_jump:
		call   _062020_func
		xor    %eax,%eax
		mov    _0c2506_data,%al
		cmp    $0x00000c,%eax
		je     _02474a_jump
		xor    %eax,%eax
		mov    _0c2508_data,%al
		cmp    $0x00000c,%eax
		je     _02474a_jump
		xor    %eax,%eax
		mov    _0c2507_data,%al
		cmp    $0x00000c,%eax
		je     _02474a_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000005,%eax
		je     _02474a_jump
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b58_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1bb8_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _0244ec_jump
		xor    %edx,%edx
		mov    _0c1b84_data,%bx
		mov    %dx,_0c1b8e_data
		mov    _0c1b78_data,%edx
		add    $0x000010,%ebx
		add    $0x000010,%edx
		mov    %bx,_0c1b84_data
		mov    %edx,_0c1b78_data

	_0244ec_jump:
		cmpb   $0x000000,_0c51b4_data
		je     _024528_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _024519_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000028,%eax
		jne    _024519_jump
		mov    $0x00001a,%ebx
		mov    $0x000002,%edx
		jmp    _0245da_jump

	_024519_jump:
		mov    $0x00001c,%ebx
		mov    $0x000002,%edx
		jmp    _0245da_jump

	_024528_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		jne    _02456b_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000009,%eax
		je     _024545_jump
		cmp    $0x00000b,%eax
		jne    _02456b_jump

	_024545_jump:
		mov    _0c1bcd_data,%ah
		test   $0x000008,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,_0c1bcd_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0c1bcd_data

	_02456b_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _024579_jump
		neg    %eax

	_024579_jump:
		cmp    $0x000002,%eax
		jg     _0245c6_jump
		xor    %eax,%eax
		call   _062ad4_func
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000040,0x000007(%ebx,%eax,1)
		jne    _0245ba_jump
		mov    $0x000018,%ebx
		mov    $0x000002,%edx
		jmp    _0245da_jump

	_0245ba_jump:
		mov    $0x000021,%ebx
		mov    $0x000002,%edx
		jmp    _0245da_jump

	_0245c6_jump:
		mov    $0x000001,%eax
		mov    $0x000020,%ebx
		mov    $0x000002,%edx
		call   _062ad4_func

	_0245da_jump:
		mov    %ecx,%eax
		call   _01d6f8_func
		xor    %eax,%eax
		xor    %esi,%esi
		mov    _0c259c_data,%al
		mov    %si,_0c24f4_data
		test   %eax,%eax
		je     _0245ff_jump
		cmpw   $0x000000,_0c2598_data
		je     _02460d_jump

	_0245ff_jump:
		movw   $0x000001,_0c1b94_data
		jmp    _02474a_jump

	_02460d_jump:
		mov    %si,_0c1b94_data
		jmp    _02474a_jump

	_024619_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _056614_func
		jmp    _02474a_jump

	_02463d_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6f0_func
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _024664_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		jmp    _02474a_jump

	_024664_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		jmp    _02474a_jump

	_024675_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		jmp    _02474a_jump

	_024688_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _056614_func
		movb   $0x000007,0x000072(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _02474a_jump

	_0246a8_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _056614_func
		jmp    _02474a_jump

	_0246bb_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movb   $0x0000ff,0x00007c(%ecx)
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _056614_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _02474a_jump

	_0246ec_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _056614_func
		jmp    _02474a_jump

	_02470d_jump:
		cmp    $0x000041,%ax
		jb     _02474a_jump
		jbe    _0246bb_jump
		cmp    $0x000064,%ax
		je     _0246a8_jump
		jmp    _02474a_jump

	_02471d_jump:
		cmp    $0x000003,%ax
		jb     _024741_jump
		jbe    _024619_jump
		cmp    $0x000009,%ax
		jb     _02474a_jump
		jbe    _024675_jump
		cmp    $0x000017,%ax
		je     _02445f_jump
		jmp    _02474a_jump

	_024741_jump:
		test   %ax,%ax
		je     _02463d_jump

	_02474a_jump:
		movw   $0x000000,0x000052(%ecx)
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		movb   $0x000000,0x000071(%ecx)
		cmp    $0x000028,%eax
		je     _024768_jump
		cmp    $0x00007a,%eax
		je     _024768_jump
		movb   $0x000000,0x000072(%ecx)

	_024768_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_024770_func:
		push   %ebx
		push   %edx
		xor    %ebx,%ebx
		mov    0x000062(%eax),%bl
		xor    %dl,%dl
		cmp    $0x000009,%ebx
		jne    _0247a2_jump
		mov    0x000040(%eax),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jl     _0247a2_jump
		mov    0x000060(%eax),%ax
		and    $0x00ffff,%eax
		cmp    $0x000017,%eax
		je     _0247a0_jump
		testb  $0x000008,_09223a_data(,%eax,4)
		je     _0247a2_jump

	_0247a0_jump:
		mov    $0x000001,%dl

	_0247a2_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ebx
		ret    



_0247a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000062(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000009,%edx
		jne    _024834_jump
		mov    0x000040(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jl     _024834_jump
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		cmp    $0x000017,%edx
		jne    _024823_jump
		mov    $0x000001,%cl
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %cl,_0c2503_data
		call   _01d6f8_func
		call   _062d1c_func
		mov    $0xffffffff,%edx
		mov    $0x0000f9,%eax
		call   _068654_func
		mov    $0x00000c,%edx
		mov    _0c1b8e_data,%bx
		mov    $_0c1b4c_data,%eax
		sub    $0x000003,%ebx
		mov    %dx,_0c24f4_data
		mov    %bx,_0c1b8e_data
		call   _0716a8_func
		jmp    _024834_jump

	_024823_jump:
		testb  $0x000008,_09223a_data(,%edx,4)
		je     _024834_jump
		call   _02d2c4_func
		mov    $0x000001,%cl

	_024834_jump:
		mov    %cl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_02483c_switch:
		.long   _024a7e_case
		.long   _024a7e_case
		.long   _024a34_case
		.long   _024a40_case
		.long   _024a47_case
		.long   _024a58_case
		.long   _024a69_case
		.long   _024a72_case
		.long   _024a7e_case
		.long   _0249e2_case
		.long   _024a7e_case
		.long   _024a7e_case
		.long   _024ada_case
		.long   _024a7e_case
		.long   _0249e2_case
		.long   _0249e2_case
		.long   _024a7e_case
		.long   _024a7e_case
		.long   _024a34_case
		.long   _024a40_case
		.long   _024a47_case
		.long   _024a58_case
		.long   _024a69_case
		.long   _024a72_case
		.long   _024a7e_case
		.long   _024a7e_case
		.long   _024a7e_case
		.long   _024a7e_case
		.long   _024a7e_case
		.long   _024a7e_case
		.long   _0249e2_case




_0248b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		testb  $0x000001,_09223a_data(,%edx,4)
		jne    _0248dc_jump
		cmp    $0x000017,%edx
		jne    _024bc9_jump

	_0248dc_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000010,_092239_data(,%eax,4)
		je     _024900_jump
		cmp    $0x000017,%eax
		je     _024900_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _04aa54_func
		mov    %eax,%edi
		jmp    _024904_jump

	_024900_jump:
		mov    0x000040(%ecx),%di

	_024904_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x00000c(%esp)
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%dx
		add    %eax,%edx
		mov    0x00000c(%esp),%eax
		mov    %dx,0x000008(%esp)
		mov    %edx,%ebx
		xor    %ah,%ah
		xor    %dh,%bh
		and    $0x00000f,%al
		xor    %edx,%edx
		and    $0x00000f,%bl
		mov    0x000060(%ecx),%dx
		add    %edi,%eax
		cmp    $0x000017,%edx
		jne    _02497d_jump
		mov    _0c1b9a_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _02497d_jump
		movswl %di,%edx
		test   %edx,%edx
		jle    _02495c_jump
		mov    $0x00000f,%eax
		jmp    _024960_jump

	_02495c_jump:
		jge    _024960_jump
		xor    %eax,%eax

	_024960_jump:
		xor    %edx,%edx
		mov    0x000062(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0cdb2c_data(%esi)
		mov    %eax,%ebx
		jmp    _024993_jump

	_02497d_jump:
		xor    %edx,%edx
		mov    0x000062(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0cdb2c_data(%esi)

	_024993_jump:
		sub    %ebx,%eax
		mov    0x000008(%esp),%ebx
		add    %eax,%ebx
		mov    %ax,0x000010(%esp)
		movswl %bx,%eax
		mov    0x00000c(%esp),%esi
		sar    $0x000004,%eax
		add    %edi,%esi
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		mov    %eax,(%esp)
		xor    %bh,%bh
		mov    (%esp),%eax
		and    $0x00000f,%bl
		cwtl   
		and    $0x00000f,%esi
		call   _01e4d8_func
		mov    %al,0x000014(%esp)
		cmp    $0x00001e,%al
		ja     _024a7e_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02483c_switch(,%eax,4)

	_0249e2_case:
		mov    0x000006(%esp),%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sub    $0x000010,%eax
		mov    0x00000a(%esp),%ebp
		sar    $0x000004,%eax
		sar    $0x000010,%ebp
		movswl %ax,%edx
		movswl %di,%eax
		add    %ebp,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%edi
		movswl %bx,%edx
		movswl %si,%eax
		call   *_0cdc2c_data(%edi)
		mov    %ebx,%edx
		sub    $0x000010,%edx
		add    %eax,%edx
		jmp    _024ae0_jump

	_024a34_case:
		mov    $0x00000f,%edx
		sub    %esi,%edx
		jmp    _024ae0_jump

	_024a40_case:
		mov    %esi,%edx
		jmp    _024ae0_jump

	_024a47_case:
		movswl %si,%eax
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _024ae0_jump

	_024a58_case:
		movswl %si,%eax
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _024ae0_jump

	_024a69_case:
		movswl %si,%eax
		sar    %eax
		mov    %eax,%edx
		jmp    _024ae0_jump

	_024a72_case:
		movswl %si,%eax
		sar    %eax
		add    $0x000008,%eax
		mov    %eax,%edx
		jmp    _024ae0_jump

	_024a7e_case:
		mov    0x000008(%esp),%eax
		mov    0x000010(%esp),%edx
		mov    0x00000c(%esp),%esi
		add    %edx,%eax
		add    %esi,%edi
		add    $0x000010,%eax
		mov    %edi,%edx
		mov    %eax,%esi
		xor    %dh,%dh
		cwtl   
		and    $0x00000f,%dl
		sar    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		movswl %ax,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%esi
		cwtl   
		sub    $0x000010,%esi
		call   _01e4d8_func
		movzbl %al,%edi
		mov    0x000002(%esp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   *_0cdd2c_data(,%edi,4)
		mov    %eax,%edx
		sub    %esi,%edx
		movswl %dx,%eax
		cmp    $0x000002,%eax
		jle    _024ade_jump

	_024ada_case:
		mov    %ebx,%edx
		jmp    _024ae0_jump

	_024ade_jump:
		add    %ebx,%edx

	_024ae0_jump:
		mov    %ecx,%eax
		call   _0247a8_func
		test   %al,%al
		jne    _024bc9_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000017,%eax
		jne    _024bb6_jump
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _024b6c_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _024b6c_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _024b23_jump
		neg    %eax

	_024b23_jump:
		cmp    $0x000002,%eax
		jle    _024b6c_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _024b34_jump
		neg    %eax

	_024b34_jump:
		cmp    $0x000010,%eax
		jge    _024b6c_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		testb  $0x000002,_0921f8_data(%eax)
		jne    _024b6c_jump
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000042(%ecx),%si
		call   _01d6f8_func
		movb   $0x000001,_0c2503_data
		call   _062d1c_func
		mov    %si,0x000042(%ecx)
		jmp    _024bc9_jump

	_024b6c_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _024b84_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000020,%eax
		je     _024bc9_jump

	_024b84_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _024b9c_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000026,%eax
		je     _024bc9_jump

	_024b9c_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _024bb8_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000016,%eax
		je     _024bc9_jump
		jmp    _024bb8_jump

	_024bb6_jump:
		je     _024bc9_jump

	_024bb8_jump:
		add    0x000010(%esp),%edx
		sub    %ebx,%edx
		mov    %ecx,%eax
		mov    %dx,0x000042(%ecx)
		call   _024404_func

	_024bc9_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_024bd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		mov    0x000028(%ebx),%dx
		mov    0x00002c(%ebx),%si
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    0x000069(%ebx),%cl
		mov    0x000068(%ebx),%al
		add    %esi,%ecx
		add    %edx,%eax
		mov    %ecx,%esi
		mov    %eax,%edi
		movswl %cx,%edx
		and    $0x00fff0,%esi
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		and    $0x00000f,%edi
		call   _01e4d8_func
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%ebp
		xor    %edx,%edx
		movswl %di,%eax
		call   *_0cde2c_data(%ebp)
		xor    %edx,%edx
		mov    0x000060(%ebx),%dx
		cmp    $0x000017,%edx
		je     _024c46_jump
		movswl %si,%edx
		cwtl   
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%ebx)
		jmp    _024c4e_jump

	_024c46_jump:
		add    %esi,%eax
		sub    %ecx,%eax
		mov    %ax,0x000042(%ebx)

	_024c4e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_024c58_func:
		mov    %edx,%eax
		inc    %eax
		ret    



_024c5c_func:
		mov    $0x00000f,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		lea    0x000000(%eax),%eax

	_024c68_jump:
		ret    



_024c6c_func:
		cwtl   
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_024c7c_func:
		cwtl   
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_024c8c_func:
		cwtl   
		sar    %eax
		ret    



_024c90_func:
		cwtl   
		sar    %eax
		add    $0x000008,%eax
		ret    

	_024c98_jump:
		mov    %edx,%eax
		ret    

	_024c9c_jump:
		xor    %eax,%eax
		ret    

	_024ca0_jump:
		mov    $0x000010,%eax
		ret    

_024ca8_switch:
		.long   _024d54_case
		.long   _024d54_case
		.long   _024d89_case
		.long   _024dae_case
		.long   _024dd3_case
		.long   _024df8_case
		.long   _024e22_case
		.long   _024e49_case
		.long   _024d54_case
		.long   _024e99_case
		.long   _024d54_case
		.long   _024d54_case
		.long   _024e6b_case
		.long   _024d54_case
		.long   _024e99_case
		.long   _024e99_case
		.long   _024d54_case
		.long   _024d54_case
		.long   _024d89_case
		.long   _024dae_case
		.long   _024dd3_case
		.long   _024df8_case
		.long   _024e22_case
		.long   _024e49_case
		.long   _024d54_case
		.long   _024d54_case
		.long   _024d54_case
		.long   _024d54_case
		.long   _024d54_case
		.long   _024d54_case
		.long   _024e99_case




_024d24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_024c5c_func,%esi
		mov    $_024c68_jump,%edi
		mov    $_024c6c_func,%ecx
		xor    %al,%al
		mov    $_024c90_func,%ebp
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000040,%edx
		jl     _024ed0_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_024d54_case:
		xor    %edx,%edx
		mov    %al,%dl
		movl   $_024c58_func,_0cdb2c_data(,%edx,4)
		movl   $_024ca0_jump,_0cdc2c_data(,%edx,4)
		movl   $_024c98_jump,_0cdd2c_data(,%edx,4)
		movl   $_024c9c_jump,_0cde2c_data(,%edx,4)
		jmp    _024ebe_jump

	_024d89_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,_0cdb2c_data(,%edx,4)
		mov    %esi,_0cdc2c_data(,%edx,4)
		mov    %esi,_0cdd2c_data(,%edx,4)
		mov    %esi,_0cde2c_data(,%edx,4)
		jmp    _024ebe_jump

	_024dae_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edi,_0cdb2c_data(,%edx,4)
		mov    %edi,_0cdc2c_data(,%edx,4)
		mov    %edi,_0cdd2c_data(,%edx,4)
		mov    %edi,_0cde2c_data(,%edx,4)
		jmp    _024ebe_jump

	_024dd3_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ecx,_0cdb2c_data(,%edx,4)
		mov    %ecx,_0cdc2c_data(,%edx,4)
		mov    %ecx,_0cdd2c_data(,%edx,4)
		mov    %ecx,_0cde2c_data(,%edx,4)
		jmp    _024ebe_jump

	_024df8_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_024c7c_func,%ebx
		mov    %ebx,_0cdb2c_data(,%edx,4)
		mov    %ebx,_0cdc2c_data(,%edx,4)
		mov    %ebx,_0cdd2c_data(,%edx,4)
		mov    %ebx,_0cde2c_data(,%edx,4)
		jmp    _024ebe_jump

	_024e22_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_024c8c_func,%ebx
		mov    %ebx,_0cdb2c_data(,%edx,4)
		mov    %ebx,_0cdc2c_data(,%edx,4)
		mov    %ebx,_0cdd2c_data(,%edx,4)
		mov    %ebx,_0cde2c_data(,%edx,4)
		jmp    _024ebe_jump

	_024e49_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebp,_0cdb2c_data(,%edx,4)
		mov    %ebp,_0cdc2c_data(,%edx,4)
		mov    %ebp,_0cdd2c_data(,%edx,4)
		mov    %ebp,_0cde2c_data(,%edx,4)
		jmp    _024ebe_jump

	_024e6b_case:
		movl   $_024c98_jump,_0cdb2c_data(,%edx,4)
		movl   $_024ca0_jump,_0cdc2c_data(,%edx,4)
		movl   $_024c98_jump,_0cdd2c_data(,%edx,4)
		movl   $_024c9c_jump,_0cde2c_data(,%edx,4)
		jmp    _024ebe_jump

	_024e99_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_024c9c_jump,%ebx
		mov    %ebx,_0cdb2c_data(,%edx,4)
		mov    %ebx,_0cdc2c_data(,%edx,4)
		mov    %ebx,_0cdd2c_data(,%edx,4)
		mov    %ebx,_0cde2c_data(,%edx,4)

	_024ebe_jump:
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000040,%edx
		jl     _024ed0_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_024ed0_jump:
		cmp    $0x00001e,%al
		ja     _024d54_case
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    *%cs:_024ca8_switch(,%ebx,4)



_024ef0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		mov    %eax,%ecx
		mov    _0d6c44_data,%eax
		mov    %eax,0x000018(%esp)
		call   _010010_func
		mov    0x000018(%esp),%eax
		movw   $0x000000,0x000006(%eax)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _024f22_jump
		mov    %ebx,%eax

	_024f22_jump:
		mov    0x000018(%esp),%ebx
		mov    %ax,0x000008(%ebx)
		movswl %dx,%ebx
		test   %ebx,%ebx
		jl     _024f3e_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _024f3c_jump
		mov    %ebx,%eax

	_024f3c_jump:
		jmp    _024f4d_jump

	_024f3e_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _024f4b_jump
		mov    %ebx,%eax

	_024f4b_jump:
		neg    %eax

	_024f4d_jump:
		mov    0x000018(%esp),%edx
		mov    %ax,0x00000a(%edx)
		xor    %eax,%eax
		mov    $0x000046,%ebx
		mov    %cx,%ax
		cmp    %ebx,%eax
		jle    _024f65_jump
		mov    %ebx,%eax

	_024f65_jump:
		mov    %eax,%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jge    _024f72_jump
		mov    %ebx,%eax

	_024f72_jump:
		mov    %al,0x00000c(%edx)
		xor    %eax,%eax
		mov    0x000001(%edx),%al
		call   _07956f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x400921fb,%edx
		call   _079d5a_func
		mov    %edx,0x000010(%esp)
		mov    0x000018(%esp),%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%edx),%al
		call   _07956f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x401921fb,%edx
		call   _079d5a_func
		mov    $0xbff921fb,%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000018(%esp),%eax
		mov    %edx,0x000024(%esp)
		mov    $0x54524550,%edx
		mov    0x000020(%eax),%eax
		mov    %ebx,0x000020(%esp)
		mov    %eax,0x000028(%esp)
		xor    %ah,%ah
		mov    %edx,0x000008(%esp)
		mov    %ah,0x000034(%esp)
		jmp    _02501b_jump

	_024fe6_jump:
		mov    0x000008(%esp),%eax
		mov    0x000020(%esp),%edx
		mov    (%esp),%ebx
		mov    0x000010(%esp),%ecx
		call   _0795a8_func
		mov    %edx,0x000020(%esp)
		mov    0x000034(%esp),%dl
		inc    %dl
		mov    %eax,0x000008(%esp)
		mov    %dl,0x000034(%esp)
		mov    %dl,%al
		mov    0x000018(%esp),%edx
		cmp    0x000001(%edx),%al
		ja     _025135_jump

	_02501b_jump:
		mov    0x000018(%esp),%edx
		xor    %eax,%eax
		mov    0x00000c(%edx),%al
		call   _07956f_func
		mov    %eax,%ebx
		mov    %edx,%edi
		mov    0x000008(%esp),%eax
		mov    0x000020(%esp),%edx
		call   _07a199_func
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %ebx,%eax
		mov    %edi,%edx
		mov    %esi,%ebx
		call   _07975f_func
		mov    %edx,0x00002c(%esp)
		mov    0x000018(%esp),%edx
		mov    %eax,0x000014(%esp)
		xor    %eax,%eax
		mov    0x00000c(%edx),%al
		call   _07956f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000008(%esp),%eax
		mov    0x000020(%esp),%edx
		call   _07a1c0_func
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%eax
		mov    %ecx,%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07975f_func
		mov    %eax,0x00001c(%esp)
		mov    %edx,0x000030(%esp)
		xor    %esi,%esi
		xor    %bh,%bh
		xor    %edi,%edi
		mov    %bh,0x000040(%esp)

	_025093_jump:
		mov    %esi,%eax
		mov    %edi,%edx
		call   _07a199_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00001c(%esp),%eax
		mov    0x000030(%esp),%edx
		call   _07a208_func
		mov    %eax,%ebp
		mov    %edx,0x00000c(%esp)
		call   _07975f_func
		call   _07a21c_func
		mov    0x000028(%esp),%edx
		mov    %ax,(%edx)
		mov    0x000014(%esp),%eax
		mov    0x00002c(%esp),%edx
		call   _07a21c_func
		mov    0x000028(%esp),%edx
		mov    %ax,0x000002(%edx)
		mov    %esi,%eax
		mov    %edi,%edx
		call   _07a1c0_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00000c(%esp),%edx
		mov    %ebp,%eax
		call   _07975f_func
		call   _07a21c_func
		mov    0x000028(%esp),%edx
		mov    0x000004(%esp),%ebx
		lea    0x00000a(%edx),%ecx
		mov    %ax,0x000004(%edx)
		mov    %ecx,0x000028(%esp)
		mov    %esi,%eax
		mov    %edi,%edx
		mov    0x000024(%esp),%ecx
		call   _0795a8_func
		mov    %eax,%esi
		mov    0x000040(%esp),%al
		mov    %edx,%edi
		inc    %al
		mov    0x000018(%esp),%edx
		mov    %al,0x000040(%esp)
		cmp    (%edx),%al
		ja     _024fe6_jump
		jmp    _025093_jump

	_025135_jump:
		mov    0x000018(%esp),%eax
		mov    0x000018(%esp),%ebx
		xor    %ecx,%ecx
		mov    0x000002(%eax),%dx
		mov    0x000024(%ebx),%ebx
		test   %dx,%dx
		jbe    _025195_jump

	_02514b_jump:
		xor    %edx,%edx
		mov    0x000018(%esp),%esi
		mov    %cx,%dx
		movzbl (%esi),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ecx,%edx
		add    %eax,%edx
		mov    %edx,%eax
		mov    %dx,(%ebx)
		inc    %edx
		mov    0x000018(%esp),%esi
		mov    %dx,0x000002(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %eax,%edx
		add    $0x000002,%edx
		mov    %dx,0x000004(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %edx,%eax
		inc    %eax
		mov    %ax,0x000006(%ebx)
		inc    %ecx
		mov    0x000002(%esi),%si
		add    $0x000034,%ebx
		cmp    %si,%cx
		jb     _02514b_jump

	_025195_jump:
		mov    0x000018(%esp),%eax
		mov    _0d6c3a_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ecx,%ecx
		mov    _0d6c3c_data,%edx
		mov    %al,%bh
		mov    0x000018(%esp),%eax
		sar    $0x000010,%edx
		mov    0x000001(%eax),%cl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x000018(%esp),%edx
		mov    %al,0x00003c(%esp)
		xor    %cl,%cl
		mov    0x000018(%esp),%eax
		mov    %cl,0x000038(%esp)
		mov    0x000001(%edx),%ch
		mov    0x000024(%eax),%eax
		test   %ch,%ch
		jbe    _0252a8_jump
		jmp    _025201_jump

	_0251ea_jump:
		mov    0x000038(%esp),%dl
		inc    %dl
		mov    0x000018(%esp),%ecx
		mov    %dl,0x000038(%esp)
		cmp    0x000001(%ecx),%dl
		jae    _0252a8_jump

	_025201_jump:
		mov    0x000018(%esp),%edx
		mov    (%edx),%cl
		xor    %bl,%bl
		test   %cl,%cl
		jbe    _0251ea_jump
		jmp    _02526f_jump

	_02520f_jump:
		xor    %esi,%esi
		mov    %dx,%si
		cmp    $0x0000a0,%esi
		jge    _025228_jump
		mov    0x000018(%esp),%esi
		mov    0x000018(%esi),%esi
		mov    %esi,0x000008(%eax)
		jmp    _025238_jump

	_025228_jump:
		mov    0x000018(%esp),%esi
		mov    0x00001c(%esi),%esi
		sub    $0x0000a0,%edx
		mov    %esi,0x000008(%eax)

	_025238_jump:
		mov    %dl,0x00002e(%eax)
		mov    %dl,0x00002c(%eax)
		mov    0x00003c(%esp),%dh
		add    %cl,%dh
		dec    %dh
		mov    %dh,0x000031(%eax)
		mov    %dh,0x00002f(%eax)
		add    %bh,%dl
		mov    %cl,0x000033(%eax)
		dec    %dl
		mov    %dl,0x000032(%eax)
		mov    %dl,0x000030(%eax)
		mov    0x000018(%esp),%edx
		mov    %cl,0x00002d(%eax)
		inc    %bl
		mov    (%edx),%ch
		add    $0x000034,%eax
		cmp    %ch,%bl
		jae    _0251ea_jump

	_02526f_jump:
		xor    %dh,%dh
		xor    %ch,%ch
		mov    %bl,%dl
		mov    %bh,%cl
		imul   %ecx,%edx
		movzbw 0x000038(%esp),%si
		mov    0x00003c(%esp),%cl
		imul   %esi,%ecx
		mov    _0d6c3a_data,%esi
		sar    $0x000010,%esi
		cmp    $0x000100,%esi
		jg     _02520f_jump
		mov    0x000018(%esp),%esi
		mov    0x000018(%esi),%esi
		mov    %esi,0x000008(%eax)
		jmp    _025238_jump

	_0252a8_jump:
		mov    0x000018(%esp),%eax
		movb   $0x000001,0x00000d(%eax)
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0252b8_case:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0d6c44_data,%edx
		test   %edx,%edx
		je     _0252f3_jump
		mov    0x000020(%edx),%ebx
		test   %ebx,%ebx
		je     _0252d4_jump
		mov    %ebx,%eax
		call   _07539c_func

	_0252d4_jump:
		mov    0x000024(%edx),%ecx
		test   %ecx,%ecx
		je     _0252e2_jump
		mov    %ecx,%eax
		call   _07539c_func

	_0252e2_jump:
		mov    _0d6c44_data,%esi
		test   %esi,%esi
		je     _0252f3_jump
		mov    %esi,%eax
		call   _07539c_func

	_0252f3_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0252f8_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,0x000004(%esp)
		mov    %ebx,(%esp)
		mov    %cx,0x000008(%esp)
		mov    $0x000100,%edx
		mov    $0x0000c8,%ebx
		mov    $0x000020,%eax
		xor    %cl,%cl
		mov    %dx,_0d6c3c_data
		xor    %edx,%edx
		mov    %bx,_0d6c3e_data
		mov    %dx,_0d6c42_data
		mov    0x00001c(%esp),%edx
		mov    %ax,_0d6c40_data
		test   %edx,%edx
		je     _025427_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _025427_jump
		mov    $0x00003c,%eax
		call   _075384_func
		mov    %eax,%edx
		mov    %eax,_0d6c44_data
		test   %eax,%eax
		je     _025427_jump
		mov    %eax,%esi
		xor    %ebx,%ebx
		mov    $0x000002,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _02537b_jump
		mov    %ebx,%eax

	_02537b_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    0x000004(%esp),%bx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _02538f_jump
		mov    %ebx,%eax

	_02538f_jump:
		mov    %al,0x000001(%edx)
		mov    0x000004(%esp),%eax
		imul   %edi,%eax
		mov    %ax,0x000002(%edx)
		mov    0x000004(%esp),%eax
		inc    %edi
		inc    %eax
		imul   %eax,%edi
		mov    0x00001c(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx)
		mov    0x000020(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000014(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		mov    %di,0x000004(%edx)
		call   _075384_func
		mov    %eax,0x000024(%edx)
		test   %eax,%eax
		je     _025427_jump
		xor    %ebx,%ebx
		mov    0x000004(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		call   _075384_func
		mov    %eax,0x000020(%edx)
		test   %eax,%eax
		je     _025427_jump
		mov    _0cdf30_data,%eax
		mov    %eax,0x000018(%edx)
		mov    _0d6c3a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000100,%eax
		jg     _025418_jump
		movl   $0x000000,0x00001c(%edx)
		jmp    _025425_jump

	_025418_jump:
		mov    _0cdf30_data,%eax
		add    $0x00c800,%eax
		mov    %eax,0x00001c(%edx)

	_025425_jump:
		mov    $0x000001,%cl

	_025427_jump:
		test   %cl,%cl
		je     _0254b1_jump
		mov    _0d6c3a_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0x000100,%ebx
		jg     _025469_jump
		mov    _0d6c40_data,%edi
		sar    $0x000010,%edi
		lea    0x000000(,%edi,4),%eax
		mov    0x000018(%esi),%edx
		add    %edi,%eax
		mov    0x000010(%esi),%esi
		shl    $0x000006,%eax
		add    %eax,%esi
		mov    _0d6c3e_data,%eax
		sar    $0x000010,%eax
		add    %esi,%eax
		jmp    _025489_jump

	_025469_jump:
		mov    $0x0000a0,%ebx
		mov    0x000018(%esi),%edx
		mov    0x000010(%esi),%eax
		call   _073a90_func
		mov    $0x0000a0,%ebx
		mov    0x000010(%esi),%eax
		mov    0x00001c(%esi),%edx
		add    $0x0000a0,%eax

	_025489_jump:
		call   _073a90_func
		mov    0x000006(%esp),%edx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000018(%esp),%bx
		mov    (%esp),%ax
		sar    $0x000010,%edx
		call   _024ef0_func
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_0254b1_jump:
		call   _0252b8_case
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_0254c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    _0d6c44_data,%esi
		xor    %eax,%eax
		mov    0x00000d(%esi),%al
		mov    0x000020(%esi),%ecx
		cmp    $0x000001,%eax
		jne    _025671_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _0254f6_jump
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		mov    %eax,0x00000c(%esp)
		jmp    _025508_jump

	_0254f6_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%dx
		mov    0x000006(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x00000c(%esp)

	_025508_jump:
		mov    _0d6c3a_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0d6c3c_data,%edx
		mov    %al,0x000038(%esp)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000001(%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %al,0x000034(%esp)
		mov    _0d6c40_data,%eax
		sar    $0x000010,%eax
		xor    %bl,%bl
		sub    $0x000064,%eax
		mov    %bl,0x000024(%esp)
		mov    %eax,0x000004(%esp)
		jmp    _025575_jump

	_025550_jump:
		mov    0x000004(%esp),%edx
		mov    0x000024(%esp),%bh
		xor    %eax,%eax
		inc    %bh
		mov    0x000034(%esp),%al
		mov    %bh,0x000024(%esp)
		add    %eax,%edx
		mov    0x000001(%esi),%ah
		mov    %edx,0x000004(%esp)
		cmp    %ah,%bh
		ja     _025625_jump

	_025575_jump:
		mov    _0d6c3e_data,%ebp
		xor    %dl,%dl
		sar    $0x000010,%ebp
		mov    %dl,0x00002c(%esp)
		sub    $0x0000a0,%ebp

	_02558a_jump:
		mov    0x000002(%ecx),%ebx
		movswl (%ecx),%edx
		sar    $0x000010,%ebx
		shl    $0x000009,%edx
		add    $0x000200,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    (%ecx),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%edx
		mov    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %ebp,%edx
		mov    0x00000c(%esp),%eax
		sub    %edi,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%ax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		add    $0x0000a0,%edi
		mov    0x000004(%esp),%edx
		add    %edi,%eax
		mov    0x00000c(%esp),%edi
		sub    %ebx,%edx
		imul   %edi,%edx
		mov    %ax,0x000006(%ecx)
		mov    %edx,%eax
		xor    %edi,%edi
		sar    $0x00001f,%edx
		mov    0x000008(%esi),%di
		idiv   %edi
		add    $0x00000a,%ecx
		add    $0x000064,%ebx
		mov    0x00002c(%esp),%dh
		add    %ebx,%eax
		inc    %dh
		mov    %ax,-0x000002(%ecx)
		xor    %eax,%eax
		mov    %dh,0x00002c(%esp)
		mov    0x000038(%esp),%al
		mov    (%esi),%bl
		add    %eax,%ebp
		cmp    %bl,%dh
		ja     _025550_jump
		jmp    _02558a_jump

	_025625_jump:
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025631_jump
		neg    %eax

	_025631_jump:
		mov    0x000006(%esi),%bx
		add    %eax,%ebx
		mov    0x000008(%esi),%cx
		mov    %bx,0x000006(%esi)
		cmp    %cx,%bx
		jbe    _025995_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02565b_jump
		movb   $0x000002,0x00000d(%esi)
		jmp    _025995_jump

	_02565b_jump:
		movw   $0x000000,0x000006(%esi)
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025671_jump:
		cmp    $0x000002,%eax
		jne    _0256be_jump
		movw   $0x0000a0,0x000028(%esi)
		movw   $0x000064,0x00002a(%esi)
		movw   $0x000008,0x00002c(%esi)
		movw   $0x00000a,0x00002e(%esi)
		movb   $0x000000,0x000034(%esi)
		movb   $0x000000,0x000035(%esi)
		movb   $0x000000,0x000036(%esi)
		movw   $0x000000,0x000030(%esi)
		movw   $0x000000,0x000032(%esi)
		movb   $0x000000,0x00000d(%esi)
		movw   $0x000000,0x000006(%esi)
		movw   $0x0003e8,0x000008(%esi)
		movb   $0x000000,0x000037(%esi)
		movb   $0x000000,0x000038(%esi)

	_0256be_jump:
		cmpb   $0x000000,0x000036(%esi)
		je     _0256d7_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0256d0_jump
		neg    %eax

	_0256d0_jump:
		shl    $0x000002,%eax
		add    %ax,0x000032(%esi)

	_0256d7_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x000140,%edx
		add    $0x000004,%eax
		sub    %eax,%edx
		mov    0x00002e(%esi),%bx
		mov    %edx,%eax
		xor    %edx,%edx
		inc    %ebx
		mov    0x000028(%esi),%dx
		mov    %bx,0x00002e(%esi)
		cmp    %eax,%edx
		jle    _025724_jump
		xor    %eax,%eax
		mov    0x000035(%esi),%al
		test   %eax,%eax
		jne    _025724_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		movb   $0x000001,0x000035(%esi)
		inc    %eax
		mov    0x000038(%esi),%dl
		mov    %ax,0x00002c(%esi)
		test   %dl,%dl
		je     _02571e_jump
		movb   $0x000001,0x000037(%esi)

	_02571e_jump:
		movb   $0x000001,0x000038(%esi)
		jmp    _025771_jump

	_025724_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00000c(%esi),%al
		mov    0x000028(%esi),%dx
		add    $0x000004,%eax
		cmp    %eax,%edx
		jge    _025750_jump
		xor    %eax,%eax
		mov    0x000035(%esi),%al
		test   %eax,%eax
		jne    _025750_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		movb   $0x000001,0x000035(%esi)
		dec    %eax
		mov    %ax,0x00002c(%esi)
		jmp    _025771_jump

	_025750_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00000c(%esi),%dl
		mov    0x000028(%esi),%ax
		add    $0x000004,%edx
		cmp    %edx,%eax
		jg     _02576d_jump
		mov    $0x000140,%ebx
		sub    %edx,%ebx
		cmp    %ebx,%eax
		jge    _025771_jump

	_02576d_jump:
		movb   $0x000000,0x000035(%esi)

	_025771_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x0000c8,%edx
		add    $0x000003,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		cmp    %edx,%eax
		jle    _0257b3_jump
		xor    %eax,%eax
		mov    0x000034(%esi),%al
		test   %eax,%eax
		jne    _0257b3_jump
		mov    0x000037(%esi),%al
		test   %eax,%eax
		jne    _0257b3_jump
		mov    0x00002e(%esi),%ax
		movb   $0x000001,0x000034(%esi)
		neg    %eax
		movb   $0x000001,0x000036(%esi)
		add    $0x000002,%eax
		mov    %ax,0x00002e(%esi)
		jmp    _0257e3_jump

	_0257b3_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x0000c8,%ebx
		lea    0x000003(%eax),%edx
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    0x00002a(%esi),%dx
		cmp    %ebx,%edx
		jg     _0257d2_jump
		movb   $0x000000,0x000034(%esi)
		jmp    _0257e3_jump

	_0257d2_jump:
		add    $0x0000cb,%eax
		cmp    %eax,%edx
		jl     _0257e3_jump
		mov    0x000008(%esi),%ax
		mov    %ax,0x000006(%esi)

	_0257e3_jump:
		mov    0x00002a(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025804_jump
		neg    %eax

	_025804_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ax
		add    %edx,%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%edx
		mov    %ax,0x000028(%esi)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025834_jump
		neg    %eax

	_025834_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		add    %edx,%eax
		mov    %ax,0x00002a(%esi)
		lea    0x000020(%esp),%ebx
		mov    0x00002e(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _053308_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000008(%esp)
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000020(%esp),%ebx
		mov    %eax,0x000010(%esp)
		mov    0x000030(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _053308_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000014(%esp)
		mov    0x00001e(%esp),%eax
		xor    %dh,%dh
		sar    $0x000010,%eax
		mov    %dh,0x000030(%esp)
		mov    %eax,0x000018(%esp)
		jmp    _0258b2_jump

	_02589d_jump:
		mov    0x000030(%esp),%bh
		inc    %bh
		mov    0x000001(%esi),%ah
		mov    %bh,0x000030(%esp)
		cmp    %ah,%bh
		ja     _025958_jump

	_0258b2_jump:
		xor    %dl,%dl
		mov    %dl,0x000028(%esp)

	_0258b8_jump:
		mov    0x000014(%esp),%ebx
		movswl (%ecx),%eax
		imul   %eax,%ebx
		mov    (%ecx),%edx
		sar    $0x000010,%edx
		mov    %ebx,(%esp)
		mov    0x000018(%esp),%ebx
		imul   %edx,%ebx
		add    (%esp),%ebx
		mov    0x000018(%esp),%ebp
		imul   %eax,%ebp
		mov    0x000014(%esp),%eax
		imul   %edx,%eax
		mov    0x000002(%ecx),%edi
		mov    %ebp,%edx
		sar    $0x000010,%edi
		sub    %eax,%edx
		neg    %edi
		mov    %edx,%eax
		mov    0x000008(%esp),%edx
		imul   %edi,%edx
		mov    0x000010(%esp),%ebp
		sar    $0x000009,%eax
		imul   %eax,%ebp
		add    %ebp,%edx
		imul   0x000010(%esp),%edi
		imul   0x000008(%esp),%eax
		sub    %eax,%edi
		sar    $0x000009,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		movzwl 0x000028(%esi),%ebp
		mov    %ebx,%edx
		add    %ebp,%eax
		sar    $0x00001f,%edx
		mov    %ax,0x000006(%ecx)
		mov    %ebx,%eax
		idiv   %edi
		movzwl 0x00002a(%esi),%ebp
		add    $0x00000a,%ecx
		add    %ebp,%eax
		mov    0x000028(%esp),%dh
		mov    %ax,-0x000002(%ecx)
		inc    %dh
		mov    (%esi),%bl
		mov    %dh,0x000028(%esp)
		cmp    %bl,%dh
		ja     _02589d_jump
		jmp    _0258b8_jump

	_025958_jump:
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025964_jump
		neg    %eax

	_025964_jump:
		mov    0x000030(%esi),%cx
		add    %eax,%eax
		add    %eax,%ecx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		mov    %cx,0x000030(%esi)
		test   %eax,%eax
		jge    _02597c_jump
		neg    %eax

	_02597c_jump:
		mov    0x000006(%esi),%di
		add    %eax,%edi
		mov    0x000008(%esi),%dx
		mov    %di,0x000006(%esi)
		cmp    %dx,%di
		jbe    _025995_jump
		movw   $0x000000,0x000006(%esi)

	_025995_jump:
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0259a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    _0d6c44_data,%eax
		xor    %edi,%edi
		mov    %eax,0x00000c(%esp)
		mov    0x000020(%eax),%ecx
		mov    0x000002(%eax),%bx
		mov    0x000024(%eax),%edx
		test   %bx,%bx
		jbe    _025aea_jump
		lea    0x000008(%edx),%ebx

	_0259d2_jump:
		xor    %eax,%eax
		mov    (%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%esi
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%esi
		mov    %esi,0x000010(%esp)
		mov    0x000004(%ecx,%eax,1),%esi
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000018(%esp)
		xor    %eax,%eax
		mov    0x000004(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%esi
		mov    %esi,0x00001c(%esp)
		lea    (%ecx,%eax,1),%esi
		mov    0x000004(%esi),%eax
		sar    $0x000010,%eax
		dec    %eax
		mov    %eax,0x000014(%esp)
		xor    %eax,%eax
		mov    0x000002(%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		dec    %ebp
		mov    %ebp,0x000024(%esp)
		mov    0x000010(%esp),%ebp
		mov    0x000006(%ecx,%eax,1),%eax
		sub    0x000014(%esp),%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000004(%esp)
		mov    0x000018(%esp),%ebp
		sub    %eax,%ebp
		mov    %ebp,(%esp)
		mov    0x000004(%esp),%ebp
		imul   (%esp),%ebp
		mov    0x000006(%esi),%esi
		sar    $0x000010,%esi
		mov    %ebp,0x000004(%esp)
		mov    0x000020(%esp),%ebp
		sub    %esi,%ebp
		mov    %ebp,(%esp)
		mov    0x00001c(%esp),%ebp
		sub    0x000024(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    (%esp),%ebp
		imul   0x000008(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000004(%esp),%ebp
		cmp    0x000008(%esp),%ebp
		jge    _025ad2_jump
		mov    %esi,0x000020(%edx)
		mov    0x000010(%esp),%ebp
		mov    %eax,0x000028(%edx)
		mov    0x000024(%esp),%esi
		mov    %ebp,0x00000c(%edx)
		mov    0x000020(%esp),%ebp
		mov    %esi,0x000024(%edx)
		mov    %ebp,0x000010(%edx)
		mov    0x00001c(%esp),%ebp
		mov    %ebp,0x000014(%edx)
		mov    0x000018(%esp),%ebp
		mov    %ebp,0x000018(%edx)
		mov    0x000014(%esp),%ebp
		mov    0x00000c(%esp),%eax
		mov    %ebp,0x00001c(%edx)
		mov    %ebx,%esi
		mov    0x000014(%eax),%eax
		call   _010045_func

	_025ad2_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%ebx
		inc    %edi
		mov    0x000002(%eax),%si
		add    $0x000034,%edx
		cmp    %si,%di
		jb     _0259d2_jump

	_025aea_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025b00_func:
		mov    _0d6d32_data,%al
		ret    



_025b10_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0d6d32_data
		je     _025b52_jump
		mov    $0x000016,%edx
		mov    _0c2620_data,%ax
		mov    $0x000001,%ebx
		mov    %ax,_0d6d34_data
		mov    %dx,_0c2620_data
		mov    _0c261e_data,%ax
		mov    %bx,_0c2522_data
		mov    %ax,_0d6d36_data
		mov    %bx,_0c261e_data

	_025b52_jump:
		pop    %edx
		pop    %ebx
		ret    



_025b58_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _095b01_data,%al
		test   %eax,%eax
		jne    _025bc2_jump
		mov    _0ce53c_data,%ax
		mov    %ax,_0d6d2a_data
		mov    _0ce540_data,%ax
		mov    $0x0000c8,%ecx
		mov    %ax,_0d6d2c_data
		mov    _0ce534_data,%ax
		mov    $0x000140,%edx
		mov    %ax,_0d6d2e_data
		mov    _0ce538_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0d6d30_data
		mov    $0x000004,%eax
		call   _05214c_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		mov    $0x000004,%eax
		xor    %ecx,%ecx
		call   _01666f_func

	_025bc2_jump:
		xor    %ah,%ah
		mov    %ah,_0d6d26_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025bd0_func:
		mov    _0d6d34_data,%ax
		mov    %ax,_0c2620_data
		mov    _0d6d36_data,%ax
		mov    %ax,_0c261e_data
		xor    %ah,%ah
		mov    %ah,_0d6d32_data
		ret    



_025bf4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _095b01_data,%al
		test   %eax,%eax
		jne    _025c46_jump
		mov    _0d6d2e_data,%ecx
		mov    _0d6d2c_data,%ebx
		mov    _0d6d2a_data,%edx
		mov    _0d6d28_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05214c_func
		mov    _0ce538_data,%edx
		mov    _0ce534_data,%ecx
		mov    _0ce540_data,%ebx
		mov    _0ce53c_data,%eax
		call   _01666f_func

	_025c46_jump:
		movw   $0x000007,_0c2522_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025c54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _095e86_data,%dx
		mov    _0d6d10_data,%cx
		mov    _0d6d12_data,%si
		movswl %dx,%eax
		test   %eax,%eax
		jge    _025c79_jump
		add    $0x000048,%edx
		jmp    _025c81_jump

	_025c79_jump:
		cmp    $0x000048,%eax
		jle    _025c81_jump
		sub    $0x000048,%edx

	_025c81_jump:
		mov    $0x000012,%ebx
		movswl %dx,%eax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jl     _025cbc_jump
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0d6d0e_data,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095c02_data(%eax),%cx
		mov    _095c04_data(%eax),%ax
		mov    %eax,%esi
		jmp    _025d64_jump

	_025cbc_jump:
		mov    $0x000024,%ebx
		sub    %edx,%ebx
		movswl %bx,%ebx
		test   %ebx,%ebx
		jl     _025cf3_jump
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0d6d0e_data,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095c02_data(%eax),%cx
		mov    _095c04_data(%eax),%ax
		neg    %ecx
		mov    %eax,%esi
		jmp    _025d64_jump

	_025cf3_jump:
		mov    $0x000036,%ebx
		sub    %eax,%ebx
		test   %ebx,%ebx
		jl     _025d2f_jump
		mov    %edx,%eax
		sub    $0x000024,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0d6d0e_data,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095c02_data(%eax),%cx
		mov    _095c04_data(%eax),%ax
		mov    %eax,%esi
		neg    %ecx
		jmp    _025d62_jump

	_025d2f_jump:
		mov    $0x000048,%eax
		sub    %edx,%eax
		movswl %ax,%ebx
		test   %ebx,%ebx
		jl     _025d64_jump
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0d6d0e_data,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095c02_data(%eax),%cx
		mov    _095c04_data(%eax),%ax
		mov    %eax,%esi

	_025d62_jump:
		neg    %esi

	_025d64_jump:
		mov    %si,_0d6d12_data
		mov    %cx,_0d6d10_data
		mov    %dx,_095e86_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025d80_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_095e86_data
		mov    %ah,_0d6d0e_data
		mov    %dx,_0d6d12_data
		mov    %dx,_0d6d10_data
		pop    %edx
		ret    



_025db0_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000012,%edx
		xor    %ah,%ah
		mov    %dx,_095e86_data
		mov    %ah,_0d6d0e_data
		call   _025c54_func
		pop    %edx
		ret    



_025ddc_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		incb   _0d6d0e_data
		xor    %eax,%eax
		mov    _0d6d0e_data,%al
		cmp    $0x000007,%eax
		jle    _025e04_jump
		movb   $0x000007,_0d6d0e_data

	_025e04_jump:
		call   _025c54_func
		pop    %edx
		ret    



_025e0c_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000024,%eax
		mov    _095e86_data,%dx
		sub    %edx,%eax
		mov    %ax,_095e86_data
		call   _025c54_func
		pop    %edx
		ret    



_025e38_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000048,%eax
		mov    _095e86_data,%dx
		sub    %edx,%eax
		mov    %ax,_095e86_data
		call   _025c54_func
		pop    %edx
		ret    



_025e64_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		movswl %bx,%edx
		mov    %eax,0x000028(%ecx)
		mov    %edx,0x00002c(%ecx)
		mov    $0x000008,%cl
		shl    %cl,%eax
		mov    $0x000008,%cl
		mov    %eax,_0d6d14_data
		mov    %edx,%eax
		shl    %cl,%eax
		mov    %eax,_0d6d18_data
		pop    %ecx
		ret    



_025f54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    _0d6d27_data,%cl
		xor    %eax,%eax
		cmp    $0x000005,%ecx
		jg     _025f74_jump
		cmpb   $0x000000,_0d6d28_data
		je     _025fb2_jump

	_025f74_jump:
		xor    %eax,%eax
		mov    _0d6d27_data,%al
		cmp    $0x000005,%eax
		jle    _025f88_jump
		xor    %ch,%ch
		mov    %ch,_0d6d27_data

	_025f88_jump:
		mov    $0x000101,%eax
		call   _061dd0_func
		xor    %cl,%cl
		mov    %eax,%ebx
		mov    $0x000101,%eax
		sub    $0x000080,%ebx
		call   _061dd0_func
		sub    $0x000080,%eax
		mov    %cl,_0d6d28_data

	_025fb2_jump:
		mov    _0d6d0e_data,%ecx
		movswl %bx,%ebx
		sar    $0x000010,%ecx
		add    %ebx,%ecx
		mov    _0d6d14_data,%ebx
		mov    _0d6d18_data,%esi
		add    %ecx,%ebx
		mov    _0d6d10_data,%ecx
		cwtl   
		sar    $0x000010,%ecx
		mov    %ebx,_0d6d14_data
		add    %eax,%ecx
		mov    %ebx,%eax
		add    %ecx,%esi
		mov    $0x000008,%cl
		mov    %esi,_0d6d18_data
		test   %eax,%eax
		je     _025ff4_jump
		sar    %cl,%eax
		jmp    _025ffa_jump

	_025ff4_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_025ffa_jump:
		cwtl   
		mov    $0x000008,%cl
		mov    %eax,0x000028(%edx)
		mov    _0d6d18_data,%eax
		test   %eax,%eax
		je     _02600d_jump
		sar    %cl,%eax
		jmp    _026013_jump

	_02600d_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_026013_jump:
		cwtl   
		mov    %eax,0x00002c(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02601c_jump:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000013,%eax
		call   _061dd0_func
		mov    %al,%cl
		xor    %ah,%ah
		jmp    _026031_jump

	_02602f_jump:
		inc    %ah

	_026031_jump:
		xor    %edx,%edx
		mov    %ah,%dl
		cmp    $0x000014,%edx
		jge    _0260a1_jump
		mov    %ah,%al
		xor    %edx,%edx
		add    %cl,%al
		mov    %al,%dl
		cmp    $0x000014,%edx
		jl     _026049_jump
		sub    $0x000014,%al

	_026049_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0d6c56_data(,%edx,8),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0c1b34_data,%edx
		add    %edx,%ebx
		cmp    _095bec_data,%al
		je     _02602f_jump
		mov    0x00004e(%ebx),%edx
		sar    $0x000010,%edx
		cmp    $0x000002,%edx
		je     _026082_jump
		cmp    $0x000001,%edx
		je     _026082_jump
		cmp    $0x000003,%edx
		jne    _02602f_jump

	_026082_jump:
		mov    $0x000002,%dh
		movb   $0x00000a,0x000076(%ebx)
		mov    %al,_095bec_data
		mov    0x000050(%ebx),%al
		mov    %dh,_0d6cf5_data
		mov    %al,_0d6cf6_data
		movw   $0x000006,0x000050(%ebx)

	_0260a1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0260a8_func:
		xor    %eax,%eax
		mov    _0d6cf8_data,%al
		cmp    $0x000005,%eax
		jl     _0260d0_jump
		xor    %eax,%eax
		mov    _0d6cf5_data,%al
		cmp    $0x000001,%eax
		je     _02601c_jump
		cmp    $0x000002,%eax
		je     _0260d0_jump
		movb   $0x000001,_0d6cf5_data

	_0260d0_jump:
		ret    

_0260d4_switch:
		.long   _026182_case
		.long   _02617d_case
		.long   _026187_case
		.long   _026191_case
		.long   _02618c_case
		.long   _02619b_case
		.long   _02619b_case
		.long   _02619b_case
		.long   _02619b_case
		.long   _02619b_case
		.long   _02619b_case
		.long   _026196_case




_026104_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %ecx,%ebp
		mov    %edx,%eax
		mov    0x000020(%esp),%edx
		mov    0x000004(%esi),%ebx
		mov    0x000020(%ebx),%cx
		and    $0x00003f,%ch
		mov    %ecx,0x000008(%esp)
		xor    %ecx,%ecx
		mov    0x000008(%esp),%cx
		mov    %ecx,(%esp)
		mov    _0d6cf8_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x000004(%esp)
		mov    (%esp),%ecx
		imul   0x000004(%esp),%ecx
		add    $0x000018,%ebx
		cwtl   
		mov    (%ebx),%ebx
		shl    $0x000002,%ecx
		shl    $0x000002,%eax
		add    %ecx,%ebx
		add    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%al
		mov    %al,%cl
		mov    %al,0x00000c(%esp)
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		mov    (%esi),%ecx
		add    %ecx,%eax
		cmpb   $0x000000,0x00000c(%esp)
		je     _0261cb_jump
		cmpb   $0x000000,0x000004(%eax)
		jne    _0261a0_jump
		jmp    _0261cb_jump

	_02617d_case:
		movb   $0x000002,(%edx)
		jmp    _0261c7_jump

	_026182_case:
		movb   $0x000001,(%edx)
		jmp    _0261c7_jump

	_026187_case:
		movb   $0x000003,(%edx)
		jmp    _0261c7_jump

	_02618c_case:
		movb   $0x000004,(%edx)
		jmp    _0261c7_jump

	_026191_case:
		movb   $0x000005,(%edx)
		jmp    _0261c7_jump

	_026196_case:
		movb   $0x000007,(%edx)
		jmp    _0261c7_jump

	_02619b_case:
		movb   $0x000000,(%edx)
		jmp    _0261c7_jump

	_0261a0_jump:
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %cx,(%edi)
		mov    0x000002(%ebx),%bl
		xor    %bh,%bh
		mov    %bx,0x000000(%ebp)
		mov    0x000004(%eax),%al
		sub    $0x000027,%al
		cmp    $0x00000b,%al
		ja     _02619b_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0260d4_switch(,%eax,4)

	_0261c7_jump:
		mov    $0x000001,%al
		jmp    _0261cd_jump

	_0261cb_jump:
		xor    %al,%al

	_0261cd_jump:
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

_0261d8_switch:
		.long   _026218_case
		.long   _026233_case
		.long   _02623c_case
		.long   _026245_case
		.long   _02624e_case
		.long   _026264_case
		.long   _026270_case
		.long   _02626a_case




_0261f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000050(%eax),%ax
		cmp    $0x000007,%ax
		ja     _0262bf_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0261d8_switch(,%eax,4)

	_026218_case:
		mov    0x000081(%edx),%bh
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%edx)
		jmp    _0262bf_jump

	_026233_case:
		movb   $0x000001,0x00006b(%edx)
		jmp    _0262bf_jump

	_02623c_case:
		movb   $0x000000,0x00006b(%edx)
		jmp    _0262bf_jump

	_026245_case:
		movb   $0x000002,0x00006b(%edx)
		jmp    _0262bf_jump

	_02624e_case:
		xor    %eax,%eax
		mov    0x000076(%edx),%al
		cmp    $0x000005,%eax
		jg     _02625e_jump
		movb   $0x000007,0x00006b(%edx)
		jmp    _0262bf_jump

	_02625e_jump:
		movb   $0x000003,0x00006b(%edx)
		jmp    _0262bf_jump

	_026264_case:
		movb   $0x000004,0x00006b(%edx)
		jmp    _0262bf_jump

	_02626a_case:
		movb   $0x000005,0x00006b(%edx)
		jmp    _0262bf_jump

	_026270_case:
		mov    0x000004(%edx),%eax
		mov    0x000016(%eax),%ax
		and    $0x00ffff,%eax
		xor    %ebx,%ebx
		dec    %eax
		mov    0x00006b(%edx),%bl
		cmp    %eax,%ebx
		jne    _0262ac_jump
		mov    0x000076(%edx),%bl
		xor    %eax,%eax
		dec    %bl
		movb   $0x000000,0x00006b(%edx)
		mov    %bl,%al
		mov    %bl,0x000076(%edx)
		test   %eax,%eax
		jne    _0262bf_jump
		xor    %eax,%eax
		mov    _0d6cf6_data,%al
		mov    %ax,0x000050(%edx)
		call   _02601c_jump
		jmp    _0262bf_jump

	_0262ac_jump:
		xor    %eax,%eax
		mov    _0c24cc_data,%al
		cmp    $0x000001,%eax
		jne    _0262bf_jump
		mov    %bl,%ah
		inc    %ah
		mov    %ah,0x00006b(%edx)

	_0262bf_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _026327_jump
		mov    0x000054(%edx),%eax
		sar    $0x000010,%eax
		mov    _0d6cfc_data,%ecx
		mov    _0d6c52_data(,%eax,8),%ebx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %ecx,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		mov    0x000054(%edx),%eax
		mov    %ebx,0x000028(%edx)
		sar    $0x000010,%eax
		mov    _0c24ac_data,%ebx
		mov    _0d6c54_data(,%eax,8),%ecx
		mov    _0d6d02_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %ebx,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edx)

	_026327_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02632c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _02635f_jump
		jmp    _0263dd_jump

	_02634f_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _0263dd_jump

	_02635f_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x00000b,%edx
		jne    _02634f_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _02634f_jump
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000004(%esp),%edx
		call   _01d610_func
		movb   $0x000000,0x00006b(%esi)
		mov    0x000006(%esp),%ebx
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%ebx
		sar    $0x000010,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000081(%esi),%ah
		mov    0x000002(%esp),%ebx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%esi)
		add    %edx,%ebx
		xor    %edx,%edx
		or     $0x000004,%ah
		mov    0x000069(%esi),%dl
		mov    %ah,0x000081(%esi)
		sub    %edx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01f7d4_func

	_0263dd_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0263e8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %bl,(%esp)
		mov    %cl,0x000004(%esp)
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _026420_jump
		jmp    _0264b2_jump

	_026410_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _0264b2_jump

	_026420_jump:
		cmp    0x000060(%ecx),%dx
		jne    _026410_jump
		mov    0x000024(%ecx),%edi
		test   %edi,%edi
		jne    _026410_jump
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%dl
		mov    0x000068(%ecx),%bl
		add    %ebp,%edx
		sub    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%ecx)
		xor    %edx,%edx
		mov    0x00002c(%esi),%eax
		mov    0x000069(%esi),%dl
		mov    0x000069(%ecx),%bl
		add    %eax,%edx
		mov    %ecx,%eax
		sub    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		mov    0x000004(%esp),%bl
		mov    (%esp),%dl
		call   _01d6f8_func
		mov    0x000081(%ecx),%ah
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebx
		mov    0x000068(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		add    %ebx,%edx
		mov    _0c24ac_data,%ebx
		movw   $0x000000,0x000040(%ecx)
		sar    $0x000010,%ebx
		or     $0x000004,%ah
		sub    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		cmp    $0x000064,%edx
		setl   %al
		movb   $0x000001,0x00007e(%ecx)
		movw   $0x000000,0x00005e(%ecx)
		xor    %ah,%ah
		mov    %edi,0x000030(%ecx)
		inc    %eax
		mov    %ax,0x000042(%ecx)

	_0264b2_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0264bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c2510_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		movb   $0x000001,_0d6cf5_data
		xor    %edx,%edx
		mov    _0c2501_data,%dl
		cmp    $0x000004,%edx
		je     _0264fc_jump
		mov    $0x000052,%edx
		mov    $0x000006,%bl
		mov    $0x000002,%al
		jmp    _026541_jump

	_0264fc_jump:
		mov    0x00006e(%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _026513_jump
		cmp    $0x000003,%eax
		je     _026513_jump
		cmp    $0x000005,%eax
		jne    _02651e_jump

	_026513_jump:
		mov    $0x00005f,%edx
		mov    $0x000005,%bl
		mov    $0x000007,%al
		jmp    _026541_jump

	_02651e_jump:
		cmp    $0x00000c,%eax
		je     _02652e_jump
		mov    $0x00005f,%edx
		mov    $0x000005,%bl
		mov    $0x00000e,%al
		jmp    _026541_jump

	_02652e_jump:
		mov    $0x0000a1,%edx
		mov    $0x000007,%eax
		mov    $0x000005,%bl
		call   _061dd0_func
		add    $0x000018,%al

	_026541_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		and    $0x0000ff,%ebx
		and    $0x00ffff,%edx
		mov    %esi,%eax
		call   _0263e8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_026560_switch:
		.long   _0266bf_case
		.long   _026742_case
		.long   _02675b_case
		.long   _02679b_case
		.long   _0267ca_case
		.long   _02675b_case
		.long   _0267dc_case




_02657c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		xor    %ah,%ah
		mov    _0c24ac_data,%dx
		mov    %ah,0x00001c(%esp)
		mov    %ah,0x000018(%esp)
		mov    0x000028(%ebp),%ax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ebp),%al
		add    %edx,%eax
		mov    _0c24ae_data,%bx
		add    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000010(%esp)
		mov    0x00002c(%ebp),%ax
		mov    0x000069(%ebp),%dl
		sub    %ebx,%eax
		add    %edx,%eax
		xor    %dh,%dh
		mov    %eax,(%esp)
		mov    %dh,_0d6d1c_data
		mov    %dh,0x000020(%esp)
		jmp    _0265d9_jump

	_0265d5_jump:
		incb   0x000020(%esp)

	_0265d9_jump:
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		cmp    $0x000014,%eax
		jge    _0268f7_jump
		xor    %edx,%edx
		mov    _0d6d1c_data,%dl
		cmp    $0x000001,%edx
		jge    _0268f7_jump
		mov    _0d6c56_data(,%eax,8),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0c1b34_data,%eax
		add    %eax,%edx
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _0265d5_jump
		mov    0x000020(%esp),%bh
		cmp    _095bfc_data,%bh
		je     _0265d5_jump
		mov    _0c24ac_data,%cx
		xor    %ebx,%ebx
		mov    0x000028(%edx),%ax
		mov    0x000068(%edx),%bl
		sub    %ecx,%eax
		add    %ebx,%eax
		mov    0x000010(%esp),%edi
		add    $0x000008,%eax
		sub    %eax,%edi
		movswl %di,%ebx
		mov    %ebx,%eax
		test   %eax,%eax
		jge    _026650_jump
		neg    %eax

	_026650_jump:
		movswl %ax,%esi
		mov    %eax,0x000004(%esp)
		cmp    $0x000015,%esi
		jg     _0265d5_jump
		mov    _0c24ae_data,%cx
		mov    0x00002c(%edx),%ax
		sub    %ecx,%eax
		mov    %eax,0x000014(%esp)
		xor    %eax,%eax
		mov    0x000014(%esp),%ecx
		mov    0x000069(%edx),%al
		add    %ecx,%eax
		mov    (%esp),%ecx
		sub    %eax,%ecx
		mov    %cx,0x00000c(%esp)
		mov    0x00000a(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _026695_jump
		neg    %eax

	_026695_jump:
		mov    %eax,0x000008(%esp)
		cmp    $0x000015,%esi
		jg     _0265d5_jump
		imul   %ecx,%ecx
		mov    %ebx,%eax
		imul   %ebx,%eax
		mov    _095e88_data,%ebx
		add    %ecx,%eax
		cmp    %ebx,%eax
		jle    _026803_jump
		jmp    _0265d5_jump

	_0266bf_case:
		xor    %al,%al
		movw   $0x000002,0x000050(%edx)
		mov    %al,_0d6d27_data
		mov    %ah,_0d6cf8_data

	_0266d2_jump:
		xor    %eax,%eax
		mov    _0d6d1c_data,%al
		xor    %dl,%dl
		mov    %dl,_0d6d22_data(,%eax,8)
		mov    0x000008(%esp),%ebx
		mov    %dl,_0d6d23_data(,%eax,8)
		cmp    0x000004(%esp),%bx
		jg     _026851_jump
		mov    _0d6d0e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _02670e_jump
		mov    $0x000001,%eax
		jg     _02670e_jump
		neg    %eax

	_02670e_jump:
		mov    %eax,%edx
		movswl %di,%eax
		cmp    $0x000000,%eax
		je     _026721_jump
		mov    $0x000001,%eax
		jg     _026721_jump
		neg    %eax

	_026721_jump:
		cmp    %eax,%edx
		jne    _02683d_jump
		xor    %eax,%eax
		mov    _0d6d1c_data,%al
		mov    $0x000001,%cl
		mov    %cl,_0d6d23_data(,%eax,8)
		add    %cl,0x000018(%esp)
		jmp    _026851_jump

	_026742_case:
		mov    %ah,_0d6cf8_data
		xor    %ch,%ch
		movw   $0x000003,0x000050(%edx)
		mov    %ch,_0d6d27_data
		jmp    _0266d2_jump

	_02675b_case:
		mov    %edx,%eax
		call   _070a70_func
		decb   _0d6cf7_data
		mov    _0d6cf8_data,%bh
		mov    0x00004e(%edx),%eax
		inc    %bh
		sar    $0x000010,%eax
		mov    %bh,_0d6cf8_data
		cmp    $0x000006,%eax
		jne    _026788_jump
		mov    %edx,%eax
		call   _0264bc_func

	_026788_jump:
		xor    %cl,%cl
		movw   $0x000000,0x000050(%edx)
		mov    %cl,_0d6d27_data
		jmp    _0266d2_jump

	_02679b_case:
		mov    %al,_0d6d27_data
		decb   0x000076(%edx)
		xor    %eax,%eax
		mov    0x000076(%edx),%al
		test   %eax,%eax
		jne    _0266d2_jump
		mov    %edx,%eax
		call   _070a70_func
		xor    %ah,%ah
		movw   $0x000000,0x000050(%edx)
		mov    %ah,_0d6d27_data
		jmp    _0266d2_jump

	_0267ca_case:
		mov    %ebp,%eax
		call   _025ddc_func
		incb   _0d6d27_data
		jmp    _0266d2_jump

	_0267dc_case:
		mov    $0x000001,%esi
		mov    _0d6d04_data,%dx
		mov    %al,_0d6d27_data
		sub    $0x000005,%edx
		mov    %si,_095bfe_data
		mov    %dx,_0d6d04_data
		jmp    _0266d2_jump

	_026803_jump:
		mov    0x000020(%esp),%al
		mov    %al,_095bfc_data
		mov    0x000050(%edx),%ax
		dec    %eax
		cmp    $0x000006,%ax
		ja     _0266d2_jump
		and    $0x00ffff,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    _0d6cf8_data,%ah
		inc    %ah
		mov    _0d6d27_data,%al
		inc    %al
		jmp    *%cs:_026560_switch(%ebx)

	_02683d_jump:
		xor    %eax,%eax
		mov    _0d6d1c_data,%al
		mov    $0x000001,%bl
		mov    %bl,_0d6d22_data(,%eax,8)
		add    %bl,0x00001c(%esp)

	_026851_jump:
		mov    0x000004(%esp),%eax
		cmp    0x000008(%esp),%ax
		jg     _0268b7_jump
		mov    _0d6d10_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _026872_jump
		mov    $0x000001,%eax
		jg     _026872_jump
		neg    %eax

	_026872_jump:
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _026889_jump
		mov    $0x000001,%eax
		jg     _026889_jump
		neg    %eax

	_026889_jump:
		cmp    %eax,%edx
		jne    _0268a3_jump
		xor    %eax,%eax
		mov    _0d6d1c_data,%al
		mov    $0x000001,%bl
		mov    %bl,_0d6d22_data(,%eax,8)
		add    %bl,0x00001c(%esp)
		jmp    _0268b7_jump

	_0268a3_jump:
		xor    %eax,%eax
		mov    _0d6d1c_data,%al
		mov    $0x000001,%dl
		mov    %dl,_0d6d23_data(,%eax,8)
		add    %dl,0x000018(%esp)

	_0268b7_jump:
		xor    %eax,%eax
		mov    _0d6d1c_data,%al
		mov    0x000020(%esp),%dl
		mov    %dl,_0d6d24_data(,%eax,8)
		mov    %al,%cl
		mov    %di,_0d6d1e_data(,%eax,8)
		inc    %cl
		mov    0x00000c(%esp),%edx
		mov    %cl,_0d6d1c_data
		mov    _0d6d1d_data,%ch
		mov    %dx,_0d6d20_data(,%eax,8)
		cmp    %ch,%cl
		jbe    _0268f7_jump
		mov    %cl,_0d6d1d_data

	_0268f7_jump:
		xor    %eax,%eax
		mov    _0d6d1c_data,%al
		test   %eax,%eax
		je     _02691e_jump
		cmpb   $0x000000,0x00001c(%esp)
		je     _026910_jump
		mov    %ebp,%eax
		call   _025e0c_func

	_026910_jump:
		cmpb   $0x000000,0x000018(%esp)
		je     _02691e_jump
		mov    %ebp,%eax
		call   _025e38_func

	_02691e_jump:
		mov    _0d6d1c_data,%al
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026930_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000008(%esp)
		mov    %esi,%eax
		call   _01df3c_func
		xor    %eax,%eax
		mov    0x000036(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    $0x000008,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		mov    $0x00002e,%edi
		mov    %eax,%ecx
		mov    $_0c1b4c_data,%eax
		mov    0x000038(%esi),%bx
		call   _01df3c_func
		xor    %eax,%eax
		mov    _0c1b82_data,%dx
		mov    _0c1bb4_data,%al
		add    %ebx,%ecx
		add    %eax,%edx
		mov    $0x000002,%ebx
		mov    %dx,(%esp)
		xor    %edx,%edx
		sub    $0x000008,%ecx
		mov    _0c1bb9_data,%dl
		mov    _0c1b84_data,%ax
		test   %edx,%edx
		jne    _0269af_jump
		mov    _0c1bb8_data,%dl
		cmp    $0x000004,%edx
		je     _0269c9_jump

	_0269af_jump:
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		cmp    $0x000001,%edx
		jne    _0269ee_jump
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		cmp    $0x000001,%edx
		jne    _0269ee_jump

	_0269c9_jump:
		xor    %edx,%edx
		subw   $0x000016,(%esp)
		mov    _095bfc_data,%dl
		add    $0x000020,%eax
		cmp    $0x000019,%edx
		je     _026a58_jump
		movb   $0x000019,0x000008(%esp)
		jmp    _026a58_jump

	_0269ee_jump:
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		test   %edx,%edx
		jne    _026a05_jump
		mov    _0c1bb8_data,%dl
		cmp    $0x000014,%edx
		je     _026a39_jump

	_026a05_jump:
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		cmp    $0x000003,%edx
		jne    _026a1f_jump
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		cmp    $0x000011,%edx
		je     _026a39_jump

	_026a1f_jump:
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		cmp    $0x000003,%edx
		jne    _026a58_jump
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		cmp    $0x000012,%edx
		jne    _026a58_jump

	_026a39_jump:
		subw   $0x000026,(%esp)
		xor    %edx,%edx
		add    $0x00004a,%eax
		mov    _095bfc_data,%dl
		add    $0x000020,%edi
		cmp    $0x00001a,%edx
		je     _026a58_jump
		movb   $0x00001a,0x000008(%esp)

	_026a58_jump:
		xor    %edx,%edx
		mov    0x000008(%esp),%dl
		test   %edx,%edx
		je     _026b66_jump
		movswl %bx,%edx
		push   %edx
		movswl %di,%edx
		push   %edx
		cwtl   
		push   %eax
		mov    0x00000a(%esp),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		mov    $0x000010,%ecx
		push   %eax
		mov    0x000012(%esp),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _026b66_jump
		mov    _0d6d10_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _026b66_jump
		xor    %eax,%eax
		mov    _0d6cf7_data,%al
		cmp    $0x000005,%eax
		jg     _026ac9_jump
		mov    _0d6cf8_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _026ac9_jump
		movb   $0x000001,_0d6d0e_data
		jmp    _026ad1_jump

	_026ac9_jump:
		xor    %bl,%bl
		mov    %bl,_0d6d0e_data

	_026ad1_jump:
		mov    0x000004(%esp),%eax
		mov    (%esp),%ecx
		add    $0x000010,%eax
		sub    %ecx,%eax
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,8),%edx
		add    $0x00000f,%edi
		neg    %edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x4062c000,%ecx
		xor    %ebx,%ebx
		call   _079562_func
		call   _0795a8_func
		mov    $0x9999999a,%ebx
		mov    $0x3fc99999,%ecx
		call   _07975f_func
		call   _07a21c_func
		mov    %ax,_095e86_data
		call   _025c54_func
		mov    %esi,%eax
		call   _02632c_func
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		cmp    $0x000019,%eax
		jne    _026b55_jump
		mov    $0x000033,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func

	_026b55_jump:
		mov    0x000008(%esp),%al
		xor    %cl,%cl
		mov    %al,_095bfc_data
		mov    %cl,_0d6d27_data

	_026b66_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026b70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0d6d04_data,%dx
		mov    _095bfe_data,%bx
		mov    _0d6d0c_data,%cx
		xor    %eax,%eax
		mov    _0d6cf4_data,%al
		cmp    $0x000001,%eax
		jne    _026be9_jump
		dec    %ebx
		movswl %bx,%eax
		test   %eax,%eax
		jne    _026be9_jump
		add    %ecx,%edx
		mov    _0d6d08_data,%cx
		mov    $0x0001f4,%ebx
		cmp    %cx,%dx
		jl     _026bbe_jump
		mov    %ecx,%edx
		xor    %ecx,%ecx
		mov    %cx,_0d6d0a_data
		jmp    _026be9_jump

	_026bbe_jump:
		mov    _0d6d06_data,%si
		cmp    %si,%dx
		jg     _026bdb_jump
		mov    $0x000001,%ecx
		xor    %eax,%eax
		mov    %esi,%edx
		mov    %ax,_0d6d0a_data
		jmp    _026be9_jump

	_026bdb_jump:
		xor    %edi,%edi
		mov    $0x000001,%ecx
		mov    %di,_0d6d0a_data

	_026be9_jump:
		mov    %cx,_0d6d0c_data
		mov    %bx,_095bfe_data
		mov    %dx,_0d6d04_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026c04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		mov    $0xfffffec0,%edx
		mov    $0xffffff38,%ebx
		mov    $0x000140,%ecx
		mov    $0x0000c8,%esi
		xor    %ah,%ah
		mov    %dx,0x00000c(%esp)
		mov    %bx,0x000014(%esp)
		mov    %cx,0x000008(%esp)
		mov    %si,0x000010(%esp)
		xor    %dl,%dl
		mov    %ah,_0d6cf4_data
		mov    $0x000014,%dh
		mov    %ah,_0d6cf5_data
		mov    %dh,_095bec_data
		xor    %ebx,%ebx
		jmp    _026c74_jump

	_026c53_jump:
		mov    %bx,_0d6c54_data(,%eax,8)
		mov    %bx,_0d6c56_data(,%eax,8)
		mov    %bl,_0d6c5a_data(,%eax,8)
		inc    %dl
		mov    %bx,_0d6c58_data(,%eax,8)

	_026c74_jump:
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x000014,%eax
		jl     _026c53_jump
		mov    _0c1b34_data,%edi
		mov    _0c1b38_data,%ax
		movw   $0x00003c,0x000056(%ebp)
		xor    %bl,%bl
		xor    %esi,%esi
		mov    %bl,0x000020(%esp)
		mov    %eax,0x000018(%esp)
		test   %ax,%ax
		jg     _026cb9_jump
		jmp    _026d91_jump

	_026ca5_jump:
		mov    0x000018(%esp),%edx
		inc    %esi
		add    $0x000084,%edi
		cmp    %dx,%si
		jge    _026d91_jump

	_026cb9_jump:
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		cmp    $0x000014,%edx
		jge    _026d91_jump
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		cmp    $0x000100,%eax
		jne    _026ca5_jump
		lea    0x00001c(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%ebx
		mov    %ebp,%eax
		call   _026104_func
		test   %ax,%ax
		jne    _026d00_jump
		mov    $0x000080,%edx
		mov    %eax,0x000004(%esp)
		xor    %cl,%cl
		mov    %edx,(%esp)
		mov    %cl,0x00001c(%esp)

	_026d00_jump:
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		mov    (%esp),%eax
		shl    $0x000003,%edx
		add    $0x00002a,%eax
		mov    %ax,_0d6c54_data(%edx)
		mov    0x000004(%esp),%eax
		add    $0x000009,%eax
		mov    %ax,_0d6c56_data(%edx)
		mov    0x00001c(%esp),%al
		mov    %al,_0d6c5a_data(%edx)
		mov    0x00000c(%esp),%ecx
		mov    _0d6c54_data(%edx),%ax
		mov    %si,_0d6c58_data(%edx)
		cmp    %cx,%ax
		jle    _026d50_jump
		mov    %ax,0x00000c(%esp)
		jmp    _026d5c_jump

	_026d50_jump:
		cmp    0x000008(%esp),%ax
		jge    _026d5c_jump
		mov    %ax,0x000008(%esp)

	_026d5c_jump:
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		shl    $0x000003,%eax
		mov    0x000014(%esp),%ecx
		mov    _0d6c56_data(%eax),%dx
		cmp    %cx,%dx
		jle    _026d7c_jump
		mov    %dx,0x000014(%esp)
		jmp    _026d88_jump

	_026d7c_jump:
		cmp    0x000010(%esp),%dx
		jge    _026d88_jump
		mov    %dx,0x000010(%esp)

	_026d88_jump:
		incb   0x000020(%esp)
		jmp    _026ca5_jump

	_026d91_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x00000c,%eax
		jg     _026da8_jump
		xor    %ecx,%ecx
		mov    %cx,_0d6d00_data
		jmp    _026db9_jump

	_026da8_jump:
		mov    $0x00000c,%eax
		mov    0x000008(%esp),%ebx
		sub    %ebx,%eax
		mov    %ax,_0d6d00_data

	_026db9_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000124,%eax
		jle    _026dd2_jump
		xor    %edi,%edi
		mov    %di,_0d6d02_data
		jmp    _026de3_jump

	_026dd2_jump:
		mov    $0x000124,%eax
		mov    0x00000c(%esp),%esi
		sub    %esi,%eax
		mov    %ax,_0d6d02_data

	_026de3_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jg     _026dfa_jump
		xor    %ebx,%ebx
		mov    %bx,_0d6d06_data
		jmp    _026e0b_jump

	_026dfa_jump:
		mov    $0x000008,%eax
		mov    0x000010(%esp),%edx
		sub    %edx,%eax
		mov    %ax,_0d6d06_data

	_026e0b_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000078,%eax
		jle    _026e22_jump
		xor    %esi,%esi
		mov    %si,_0d6d08_data
		jmp    _026e33_jump

	_026e22_jump:
		mov    $0x000078,%eax
		mov    0x000014(%esp),%ecx
		sub    %ecx,%eax
		mov    %ax,_0d6d08_data

	_026e33_jump:
		mov    _0d6cf8_data,%eax
		sar    $0x000010,%eax
		mov    _095bee_data(,%eax,2),%ax
		mov    %ax,_0d6cfe_data
		xor    %eax,%eax
		xor    %edi,%edi
		mov    _095b01_data,%al
		mov    %di,_0d6d04_data
		test   %eax,%eax
		je     _026e65_jump
		subw   $0x000008,_0d6cfe_data

	_026e65_jump:
		xor    %bh,%bh
		mov    %bh,_0d6cf7_data
		xor    %bl,%bl
		xor    %esi,%esi
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000014,%eax
		jl     _026e94_jump
		jmp    _026f74_jump

	_026e7f_jump:
		movb   $0x000002,_0d6cf4_data
		jmp    _026f4e_jump

	_026e8b_jump:
		movb   $0x000014,0x000076(%edx)
		jmp    _026f4e_jump

	_026e94_jump:
		mov    _0d6c56_data(,%eax,8),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%ecx
		mov    _0c1b34_data,%edx
		mov    _0c24aa_data,%edi
		add    %ecx,%edx
		mov    _0d6c52_data(,%eax,8),%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %ecx,%edi
		xor    %ecx,%ecx
		mov    0x000068(%edx),%cl
		sub    %ecx,%edi
		mov    _0d6cfc_data,%ecx
		sar    $0x000010,%ecx
		add    %ecx,%edi
		mov    %edi,0x000028(%edx)
		mov    _0d6c54_data(,%eax,8),%ecx
		mov    _0c24ac_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		add    %ecx,%edi
		xor    %ecx,%ecx
		mov    0x000069(%edx),%cl
		sub    %ecx,%edi
		mov    _0d6d02_data,%ecx
		sar    $0x000010,%ecx
		add    %ecx,%edi
		mov    %edi,0x00002c(%edx)
		mov    _0d6c5a_data(,%eax,8),%al
		xor    %ah,%ah
		mov    %ax,0x000050(%edx)
		mov    %bl,%al
		mov    %ax,0x000056(%edx)
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f7d4_func
		movb   $0x000004,0x00007e(%edx)
		mov    %si,0x000040(%edx)
		mov    0x000050(%edx),%ax
		mov    %si,0x000042(%edx)
		cmp    $0x000004,%ax
		jb     _026f66_jump
		jbe    _026e8b_jump
		cmp    $0x000007,%ax
		je     _026e7f_jump

	_026f4e_jump:
		mov    %edx,%eax
		call   _0261f8_func
		inc    %bl
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000014,%eax
		jl     _026e94_jump
		jmp    _026f74_jump

	_026f66_jump:
		cmp    $0x000001,%ax
		jb     _026f4e_jump
		incb   _0d6cf7_data
		jmp    _026f4e_jump

	_026f74_jump:
		xor    %cl,%cl
		mov    %cl,_0d6cf8_data
		mov    %cl,_0d6d28_data
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026f8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000014,%edx
		jl     _026f9e_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026f9e_jump:
		lea    0x000000(,%edx,8),%ebx
		mov    _0d6c56_data(%ebx),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0c1b34_data,%ecx
		andb   $0x0000fb,0x000081(%ecx,%edx,1)
		mov    _0d6c56_data(%ebx),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		inc    %al
		movl   $0x000000,0x000024(%ecx,%edx,1)
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000014,%edx
		jl     _026f9e_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026fe8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movw   $0x000005,_0c25b0_data
		call   _025bd0_func
		call   _025b58_func
		mov    _0c24ac_data,%ax
		mov    $0x000038,%edi
		mov    %ax,_0c25cc_data
		mov    %ax,_0c25ca_data
		mov    _0d6cf8_data,%eax
		mov    $0x000020,%edx
		sar    $0x000010,%eax
		mov    %dx,_0d6c48_data
		mov    _095bee_data(,%eax,2),%ax
		mov    %dx,_0d6c4a_data
		mov    %ax,_0d6cfe_data
		xor    %eax,%eax
		mov    %edi,%edx
		mov    %ax,_0d6d04_data
		mov    %ax,_0d6c4c_data
		mov    _0c1bb4_data,%al
		sub    %eax,%edx
		sub    $0x000008,%edx
		mov    %dx,_0d6c50_data
		mov    $0x000108,%edx
		sub    %eax,%edx
		mov    $0x000018,%ebx
		mov    %edx,%eax
		mov    %bx,_0c24ae_data
		sub    $0x000008,%eax
		mov    %bx,_0c25d0_data
		mov    %ax,_0d6c52_data
		xor    %eax,%eax
		mov    %bx,_0c25ce_data
		mov    _095b01_data,%al
		mov    %di,_0d6c4e_data
		test   %eax,%eax
		jne    _0270ab_jump
		addw   $0x000008,_0c24ac_data
		jmp    _0270fa_jump

	_0270ab_jump:
		mov    $0xfffffff8,%eax
		mov    $0x000028,%esi
		mov    _0d6cfe_data,%dx
		mov    _0d6c50_data,%di
		mov    %bx,_0d6c48_data
		mov    %ax,_0d6c4e_data
		sub    $0x000008,%edx
		mov    %si,_0d6c4a_data
		sub    $0x000008,%edi
		mov    _0d6c52_data,%ax
		mov    %dx,_0d6cfe_data
		sub    $0x000008,%eax
		mov    %di,_0d6c50_data
		mov    %ax,_0d6c52_data

	_0270fa_jump:
		mov    %ecx,%eax
		movb   $0x000000,0x00007e(%ecx)
		call   _025d80_func
		mov    _0c24ac_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0c1bb5_data,%al
		add    $0x0000c0,%edx
		sub    %eax,%edx
		mov    %edx,_0c1b78_data
		mov    _0c4764_data,%edx
		cmp    $0x000002,%edx
		jne    _027164_jump
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		dec    %eax
		mov    $0x000001,%ebx
		cwtl   
		mov    $0x000003,%edx
		call   _061dd0_func
		mov    %ax,_0d6cfa_data
		mov    %ax,_0d6cfc_data
		mov    %ecx,%eax
		movb   $0x000003,0x000076(%ecx)
		call   _026c04_func
		mov    $_0c1b4c_data,%eax
		jmp    _027172_jump

	_027164_jump:
		cmp    $0x000032,%edx
		jne    _027177_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_027172_jump:
		call   _01d6f8_func

	_027177_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027180_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c1bb9_data,%al
		mov    %dx,_0d6d0c_data
		mov    %dx,_0d6d0a_data
		test   %eax,%eax
		jne    _0271af_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000004,%eax
		je     _0271cf_jump

	_0271af_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		jne    _0272ee_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000001,%eax
		jne    _0272ee_jump

	_0271cf_jump:
		mov    %esi,%eax
		call   _025d80_func
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		call   _01da90_func
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _027215_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000002,%eax
		jmp    _027217_jump

	_027215_jump:
		xor    %eax,%eax

	_027217_jump:
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		mov    0x00000c(%esp),%ecx
		add    $0x000005,%eax
		sub    %eax,%ecx
		mov    -0x000002(%esp),%edx
		mov    %cx,0x00000c(%esp)
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%ebx
		mov    %esi,%eax
		sar    $0x000010,%ebx
		call   _025e64_func
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		test   %eax,%eax
		jne    _027267_jump
		mov    %esi,%eax
		call   _070a70_func

	_027267_jump:
		movb   $0x000002,0x00007e(%esi)
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		call   _03e200_func
		test   %ax,%ax
		je     _0272ee_jump
		mov    %esi,%eax
		mov    $0x000002,%ebx
		call   _025db0_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		mov    $0x000033,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		xor    %eax,%eax
		mov    _0d6cf4_data,%al
		cmp    $0x000002,%eax
		jne    _0272df_jump
		mov    $0x000001,%dh
		mov    $0x000001,%edi
		xor    %esi,%esi
		mov    %dh,_0d6cf4_data
		mov    %si,_0d6d0a_data
		mov    %di,_0d6d0c_data
		jmp    _0272e7_jump

	_0272df_jump:
		xor    %dl,%dl
		mov    %dl,_0d6cf4_data

	_0272e7_jump:
		movb   $0x000014,_095bfc_data

	_0272ee_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0272f8_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0c1b82_data,%bx
		mov    _0c1bb4_data,%dl
		add    %ebx,%edx
		sub    %edx,%eax
		mov    _0c1bcd_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		jne    _02732b_jump
		movswl %ax,%edx
		test   %edx,%edx
		jge    _027346_jump

	_02732b_jump:
		mov    _0c1bcd_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		jne    _02734b_jump
		movswl %ax,%edx
		test   %edx,%edx
		jg     _02734b_jump

	_027346_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_02734b_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_027350_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0d6cf7_data,%al
		test   %eax,%eax
		jne    _0273fd_jump
		mov    0x000056(%ecx),%si
		movb   $0x000000,0x00007e(%ecx)
		dec    %esi
		mov    %ecx,%eax
		mov    %si,0x000056(%ecx)
		call   _025d80_func
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02760d_jump
		call   _026f8c_func
		mov    _0d6cfa_data,%di
		mov    0x000004(%ecx),%eax
		inc    %edi
		xor    %edx,%edx
		mov    %di,_0d6cfa_data
		mov    0x000022(%eax),%dx
		mov    _0d6cf8_data,%eax
		dec    %edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _0273ba_jump
		xor    %eax,%eax
		mov    %ax,_0d6cfa_data

	_0273ba_jump:
		mov    _0d6cfa_data,%ax
		cmp    _0d6cfc_data,%ax
		jne    _0273e2_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x00003c,0x000056(%ecx)
		call   _01d6f8_func
		jmp    _02760d_jump

	_0273e2_jump:
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _026c04_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0273fd_jump:
		mov    _0c24ac_data,%dx
		mov    0x000028(%ecx),%ax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    _0c24ae_data,%bx
		add    %eax,%edx
		mov    0x00002c(%ecx),%ax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		add    $0x000008,%edx
		add    %eax,%ebx
		movswl %dx,%eax
		mov    _0d6c48_data,%edx
		mov    $0x000140,%esi
		sar    $0x000010,%edx
		sub    %edx,%esi
		mov    %esi,%edx
		lea    0x000008(%eax),%esi
		cmp    %edx,%esi
		jl     _027472_jump
		xor    %eax,%eax
		mov    _095bfc_data,%al
		cmp    $0x000016,%eax
		je     _027601_jump
		mov    %ecx,%eax
		mov    $0x000016,%dl
		call   _025e0c_func
		mov    %dl,_095bfc_data
		xor    %dh,%dh
		mov    %dh,_0d6d27_data
		jmp    _027601_jump

	_027472_jump:
		mov    _0d6c46_data,%esi
		lea    -0x000008(%eax),%edx
		sar    $0x000010,%esi
		cmp    %esi,%edx
		jg     _0274ba_jump
		xor    %eax,%eax
		mov    _095bfc_data,%al
		cmp    $0x000015,%eax
		je     _027601_jump
		mov    %ecx,%eax
		call   _025e0c_func
		movb   $0x000015,_095bfc_data
		xor    %ah,%ah
		mov    %ah,_0d6d27_data
		mov    %ecx,%eax
		call   _025f54_func
		call   _0260a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0274ba_jump:
		mov    _0d6c4a_data,%esi
		movswl %bx,%edx
		sar    $0x000010,%esi
		lea    -0x000008(%edx),%edi
		cmp    %esi,%edi
		jg     _027519_jump
		xor    %eax,%eax
		mov    _095bfc_data,%al
		cmp    $0x000017,%eax
		je     _027601_jump
		mov    %ecx,%eax
		mov    $0x000017,%dl
		call   _025e38_func
		mov    %dl,_095bfc_data
		mov    _0d6d27_data,%dh
		test   %dh,%dh
		je     _027500_jump
		mov    %dh,%bl
		inc    %bl
		mov    %bl,_0d6d27_data

	_027500_jump:
		movb   $0x000001,_0d6d28_data
		mov    %ecx,%eax
		call   _025f54_func
		call   _0260a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027519_jump:
		mov    _0c1b82_data,%esi
		sar    $0x000010,%esi
		add    $0x000008,%edx
		add    $0x000040,%esi
		cmp    %esi,%edx
		jle    _0275ef_jump
		mov    _0c1b8a_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		je     _027599_jump
		call   _0272f8_func
		test   %al,%al
		je     _027599_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _02755b_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000004,%eax
		je     _027573_jump

	_02755b_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		jne    _027599_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000001,%eax
		jne    _027599_jump

	_027573_jump:
		mov    $0x000011,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    %ecx,%eax
		call   _025f54_func
		call   _0260a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027599_jump:
		mov    _0d6c4a_data,%eax
		mov    $0x0000c8,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jl     _0275fa_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    %ecx,%eax
		movb   $0x000000,0x00007e(%ecx)
		call   _025d80_func
		xor    %eax,%eax
		mov    _0d6cf4_data,%al
		cmp    $0x000001,%eax
		jne    _027601_jump
		movb   $0x000002,_0d6cf4_data
		mov    %ecx,%eax
		call   _025f54_func
		call   _0260a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0275ef_jump:
		mov    %ecx,%eax
		call   _02657c_func
		test   %al,%al
		jne    _027601_jump

	_0275fa_jump:
		mov    %ecx,%eax
		call   _026930_func

	_027601_jump:
		mov    %ecx,%eax
		call   _025f54_func
		call   _0260a8_func

	_02760d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027614_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0d6cf5_data,%dl
		cmp    $0x000002,%edx
		jne    _027650_jump
		xor    %ebx,%ebx
		mov    _095bec_data,%bl
		mov    _0d6c56_data(,%ebx,8),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    _0c1b34_data,%ebx
		mov    _0d6cf6_data,%cl
		mov    %cx,0x000050(%ebx,%edx,4)

	_027650_jump:
		xor    %dl,%dl
		mov    %dl,_0d6cf5_data
		decb   0x000076(%eax)
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		test   %edx,%edx
		jne    _027671_jump
		mov    $0x000004,%ebx
		movw   $0x00003c,0x000056(%eax)
		jmp    _027678_jump

	_027671_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx

	_027678_jump:
		call   _01d6f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027684_func:
		push   %ebx
		push   %edx
		push   %edi
		mov    %eax,%edx
		movb   $0x000000,0x00007e(%eax)
		call   _025d80_func
		decw   0x000056(%edx)
		xor    %ebx,%ebx
		mov    0x000054(%edx),%eax
		mov    %bx,_0d6d0c_data
		sar    $0x000010,%eax
		mov    %bx,_0d6d0a_data
		test   %eax,%eax
		jne    _027708_jump
		mov    0x000076(%edx),%al
		test   %eax,%eax
		je     _0276bc_jump
		call   _04d5a4_func

	_0276bc_jump:
		mov    $0x000001,%edi
		mov    %di,_0c25b0_data
		call   _026f8c_func
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    $0x000002,%ebx
		mov    %ah,0x000081(%edx)
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    %di,_0c251e_data
		call   _025bd0_func
		call   _025bf4_func

	_027708_jump:
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    



_02770c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		jle    _027762_jump
		mov    $0x000001,%ah
		mov    %ah,0x000014(%esp)
		cmp    %ah,%al
		jbe    _027762_jump
		mov    $0x00000b,%edi

	_02772e_jump:
		xor    %ecx,%ecx
		mov    0x000014(%esp),%cl
		imul   $0x000014,%ecx,%ecx
		push   $0x000001
		mov    $0x0000c8,%eax
		mov    $0x000124,%ebx
		sub    %ecx,%eax
		mov    %edi,%edx
		movswl %ax,%ecx
		mov    %esi,%eax
		call   _018d54_func
		mov    0x000014(%esp),%dh
		inc    %dh
		mov    0x000076(%esi),%bl
		mov    %dh,0x000014(%esp)
		cmp    %bl,%dh
		jb     _02772e_jump

	_027762_jump:
		xor    %eax,%eax
		mov    _0d6cf7_data,%al
		test   %eax,%eax
		jl     _02780b_jump
		cmp    $0x000014,%eax
		jg     _02780b_jump
		mov    _0c2508_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%ecx
		push   $0x000001
		shl    $0x000005,%ecx
		mov    $0x00000e,%ebx
		add    %edx,%ecx
		mov    _0c1b34_data,%edi
		shl    $0x000002,%ecx
		mov    $0x000039,%edx
		add    %ecx,%edi
		mov    $0x0000af,%ecx
		mov    %edi,%eax
		call   _018d54_func
		xor    %edx,%edx
		mov    _0d6cf7_data,%dl
		mov    $0x00000a,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x000037,%ebx
		add    $0x00001c,%eax
		xor    %edx,%edx
		mov    $0x0000af,%ecx
		mov    %al,%dl
		mov    %edi,%eax
		call   _018d54_func
		xor    %edx,%edx
		mov    _0d6cf7_data,%dl
		mov    $0x00000a,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		add    $0x00001c,%edx
		mov    $0x0000af,%ecx
		mov    $0x000046,%ebx
		and    $0x0000ff,%edx
		mov    %edi,%eax
		call   _018d54_func

	_02780b_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _0278f7_jump
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027821_jump:
		mov    _0c4764_data,%eax
		and    $0x00003f,%eax
		cmp    $0x000020,%eax
		jge    _02790e_jump
		mov    _0cda70_data,%edx
		push   %edx
		push   $_0bffa0_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    $0x000064,%ebx
		xor    %ecx,%ecx
		push   $0x000000
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01a3ec_func
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    _0cda50_data,%eax
		call   _01a3ec_func
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027886_jump:
		cmpb   $0x000000,_0d6d26_data
		je     _0278af_jump
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		push   %eax
		xor    %ecx,%ecx
		mov    _0cd980_data,%eax
		call   _01a3ec_func
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0278af_jump:
		mov    0x000076(%esi),%al
		test   %eax,%eax
		jne    _0278d6_jump
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		push   %eax
		xor    %ecx,%ecx
		mov    _0cd980_data,%eax
		call   _01a3ec_func
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0278d6_jump:
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0cd9f4_data,%eax
		xor    %ecx,%ecx
		call   _01a3ec_func
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0278f7_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x000001,%dl
		jb     _02790e_jump
		jbe    _027821_jump
		cmp    $0x000004,%dl
		je     _027886_jump

	_02790e_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi

	_027913_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_027918_switch:
		.long   _027981_case
		.long   _02798c_case
		.long   _027997_case
		.long   _0279a2_case
		.long   _0279ad_case




_02792c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%eax
		call   _03dffc_func
		test   %al,%al
		je     _02795f_jump
		mov    $0x000001,%ah
		mov    $0x000004,%ebx
		movb   $0x000000,0x000076(%ecx)
		xor    %edx,%edx
		mov    %ah,_0d6d26_data
		mov    %ecx,%eax
		movw   $0x00003c,0x000056(%ecx)
		call   _01d6f8_func

	_02795f_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _027913_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		je     _027913_jump
		cmp    $0x000004,%al
		ja     _027913_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_027918_switch(,%eax,4)

	_027981_case:
		mov    %ecx,%eax
		call   _026fe8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02798c_case:
		mov    %ecx,%eax
		call   _027180_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027997_case:
		mov    %ecx,%eax
		call   _027350_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0279a2_case:
		mov    %ecx,%eax
		call   _027614_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0279ad_case:
		mov    %ecx,%eax
		call   _027684_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0279b8_func:
		push   %edx
		mov    %eax,%edx
		call   _026b70_func
		mov    %edx,%eax
		call   _0261f8_func
		pop    %edx
		ret    



_0279cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _0279e6_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000004,%eax
		je     _027a06_jump

	_0279e6_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		jne    _027b8b_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000001,%eax
		jne    _027b8b_jump

	_027a06_jump:
		call   _03e0a4_func
		test   %ax,%ax
		je     _027a9c_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _027a45_jump
		mov    _0c1bcd_data,%dl
		mov    _0c1b8c_data,%cx
		or     $0x000008,%dl
		neg    %ecx
		mov    %dl,_0c1bcd_data
		mov    %cx,_0c1b8c_data

	_027a45_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _027a7c_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000004,%eax
		jne    _027a7c_jump
		mov    $0x000001,%ebx
		mov    $_0c1b4c_data,%eax
		mov    %ebx,%edx
		mov    $0x000010,%esi
		call   _01d6f8_func
		mov    %si,_0c1b8c_data
		jmp    _027c01_jump

	_027a7c_jump:
		mov    _0c1b8a_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x00002f,%eax
		inc    %ebx
		cmp    %ebx,%eax
		jle    _027a91_jump
		mov    %ebx,%eax

	_027a91_jump:
		mov    %ax,_0c1b8c_data
		jmp    _027c01_jump

	_027a9c_jump:
		call   _03e030_func
		test   %ax,%ax
		je     _027b32_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _027ade_jump
		mov    _0c1bcd_data,%ah
		mov    _0c1b8c_data,%dx
		and    $0x0000f7,%ah
		neg    %edx
		mov    %ah,_0c1bcd_data
		mov    %dx,_0c1b8c_data

	_027ade_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _027b12_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000004,%eax
		jne    _027b12_jump
		mov    $0x000001,%ebx
		mov    $_0c1b4c_data,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		movw   $0x00fff0,_0c1b8c_data
		jmp    _027c01_jump

	_027b12_jump:
		mov    _0c1b8a_data,%ebx
		sar    $0x000010,%ebx
		mov    $0xffffffd1,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jge    _027b27_jump
		mov    %ebx,%eax

	_027b27_jump:
		mov    %ax,_0c1b8c_data
		jmp    _027c01_jump

	_027b32_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _027b4b_jump
		lea    -0x000001(%eax),%ebx
		xor    %eax,%eax
		cmp    %ebx,%eax
		jge    _027b49_jump
		mov    %ebx,%eax

	_027b49_jump:
		jmp    _027b58_jump

	_027b4b_jump:
		jge    _027b5e_jump
		lea    0x000001(%eax),%ebx
		xor    %eax,%eax
		cmp    %ebx,%eax
		jle    _027b58_jump
		mov    %ebx,%eax

	_027b58_jump:
		mov    %ax,_0c1b8c_data

	_027b5e_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _027b6c_jump
		neg    %eax

	_027b6c_jump:
		cmp    $0x000010,%eax
		jge    _027c01_jump
		mov    $0x000004,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _027c01_jump

	_027b8b_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _027ba3_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000012,%eax
		je     _027bb8_jump

	_027ba3_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _027bdf_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000014,%eax
		jne    _027bdf_jump

	_027bb8_jump:
		mov    $_0c1b4c_data,%eax
		call   _04aad8_func
		call   _03e200_func
		test   %ax,%ax
		je     _027c01_jump
		mov    $0x000004,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _027c01_jump

	_027bdf_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _027c01_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000011,%eax
		jne    _027c01_jump
		mov    $_0c1b4c_data,%eax
		call   _04aad8_func

	_027c01_jump:
		mov    _0d6c4e_data,%eax
		mov    _0c1b74_data,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _027c2f_jump
		mov    _0c1b8a_data,%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jge    _027c2f_jump
		mov    %eax,_0c1b74_data
		xor    %eax,%eax
		mov    %ax,_0c1b8c_data
		jmp    _027c7a_jump

	_027c2f_jump:
		mov    _0d6c50_data,%eax
		mov    _0c1b74_data,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jg     _027c5e_jump
		mov    _0c1b8a_data,%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jle    _027c5e_jump
		xor    %edi,%edi
		mov    %eax,_0c1b74_data
		mov    %di,_0c1b8c_data
		jmp    _027c7a_jump

	_027c5e_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		call   _04aa54_func
		mov    _0c1b74_data,%ecx
		cwtl   
		add    %eax,%ecx
		mov    %ecx,_0c1b74_data

	_027c7a_jump:
		push   $_0c25aa_data
		mov    $_0c25a8_data,%ecx
		mov    $_0c25a6_data,%ebx
		mov    $_0c25a4_data,%edx
		mov    $_0c1b4c_data,%eax
		call   _01dbd8_func
		call   _02cb30_func
		mov    $_0c1b4c_data,%eax
		call   _04b3f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027cb0_func:
		movw   $0x000000,0x000040(%eax)
		movw   $0x00fff8,0x000042(%eax)
		ret    



_027cc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _027d10_jump
		xor    %ebx,%ebx
		mov    0x00006c(%eax),%bl
		cmp    $0x000007,%ebx
		jne    _027d10_jump
		xor    %ecx,%ecx
		mov    0x00006b(%eax),%cl
		test   %ecx,%ecx
		jne    _027d10_jump
		lea    0x000000(,%edx,4),%ecx
		mov    0x00000c(%eax),%edx
		mov    (%ecx,%edx,1),%edx
		mov    0x000005(%edx,%ebx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c24c8_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _027d10_jump
		movb   $0x000005,0x00007e(%eax)
		call   _028298_func

	_027d10_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027d14_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%ebx),%al
		test   %eax,%eax
		jne    _027d8d_jump
		movb   $0x000000,0x00006f(%ebx)
		mov    0x000028(%ebx),%ax
		mov    %ax,0x00003c(%ebx)
		mov    0x00002c(%ebx),%ax
		mov    $0x00000c,%edx
		mov    %ax,0x00003e(%ebx)
		mov    %ebx,%eax
		movb   $0x000008,0x00006e(%ebx)
		call   _01d6e8_func
		movb   $0x000007,0x000078(%ebx)
		call   _027f54_func
		mov    $0x000005,%ah
		mov    _0c3311_data,%cl
		mov    0x000032(%ebx),%edx
		mov    %ah,_0c25fa_data
		sar    $0x000010,%edx
		inc    %cl
		mov    $0x000011,%eax
		mov    %cl,_0c3311_data
		call   _068654_func
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		mov    %ebx,_0c25fc_data
		call   _06a65c_func
		pop    %ecx
		pop    %ebx
		ret    

	_027d8d_jump:
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		pop    %ecx
		pop    %ebx
		ret    



_027d9c_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000020,%edx
		je     _027dc0_jump
		cmp    $0x000021,%edx
		je     _027dc0_jump
		cmp    $0x000022,%edx
		je     _027dc0_jump
		cmp    $0x000023,%edx
		je     _027dc0_jump
		cmp    $0x000024,%edx
		je     _027dc0_jump
		cmp    $0x000025,%edx
		jne    _027df3_jump

	_027dc0_jump:
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		cmp    $0x000029,%edx
		jne    _027ddc_jump
		mov    0x000032(%eax),%edx
		mov    $0x0000c0,%eax
		sar    $0x000010,%edx
		call   _068654_func
		pop    %edx
		ret    

	_027ddc_jump:
		cmp    $0x000040,%edx
		jne    _027e0e_jump
		mov    0x000032(%eax),%edx
		mov    $0x0000c1,%eax
		sar    $0x000010,%edx
		call   _068654_func
		pop    %edx
		ret    

	_027df3_jump:
		cmp    $0x000026,%edx
		jne    _027e0e_jump
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)

	_027e0e_jump:
		pop    %edx
		ret    



_027e10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c23c0_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c248a_data,%cx
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _027f4d_jump
		jmp    _027ec4_jump

	_027e46_jump:
		cmp    $0x000040,%eax
		jne    _027e93_jump
		mov    0x000032(%edx),%edx
		mov    $0x0000c1,%eax
		sar    $0x000010,%edx
		jmp    _027e8e_jump

	_027e58_jump:
		cmp    $0x000026,%eax
		jne    _027e93_jump
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %ah,%ah
		and    $0x0000fb,%cl
		mov    %ah,_0c2612_data
		mov    %cl,0x000081(%edx)
		xor    %edx,%edx
		mov    $0x00003d,%eax
		mov    %dx,_0cdb28_data
		mov    $0xffffffff,%edx

	_027e8e_jump:
		call   _068654_func

	_027e93_jump:
		call   _049e14_func

	_027e98_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0c23c0_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		mov    _0c248a_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jge    _027f4d_jump

	_027ec4_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x0000c5,%eax
		jne    _027e98_jump
		cmpw   $0x000000,_0cdb28_data
		jne    _027ee9_jump
		call   _0694d0_func
		movw   $0x000001,_0cdb28_data

	_027ee9_jump:
		mov    _0c24b0_data,%ax
		mov    %ax,_0c24ac_data
		mov    _0c24b2_data,%ax
		mov    %ax,_0c24ae_data
		mov    %edx,%eax
		call   _04b3f8_func
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000020,%eax
		je     _027f2f_jump
		cmp    $0x000021,%eax
		je     _027f2f_jump
		cmp    $0x000022,%eax
		je     _027f2f_jump
		cmp    $0x000023,%eax
		je     _027f2f_jump
		cmp    $0x000024,%eax
		je     _027f2f_jump
		cmp    $0x000025,%eax
		jne    _027e58_jump

	_027f2f_jump:
		xor    %eax,%eax
		mov    0x00006b(%edx),%al
		cmp    $0x000029,%eax
		jne    _027e46_jump
		mov    0x000032(%edx),%edx
		mov    $0x0000c0,%eax
		sar    $0x000010,%edx
		jmp    _027e8e_jump

	_027f4d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027f54_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1b34_data,%ebx
		mov    _0c1b38_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _027f7f_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027f6f_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %cx,%ax
		jge    _02808c_jump

	_027f7f_jump:
		xor    %edx,%edx
		mov    0x000060(%ebx),%dx
		cmp    $0x0000c5,%edx
		jne    _027f6f_jump
		mov    0x000024(%ebx),%edx
		test   %edx,%edx
		jne    _027f6f_jump
		mov    _0c24aa_data,%eax
		sar    $0x000010,%eax
		mov    0x000068(%ebx),%dl
		add    $0x0000a0,%eax
		sub    %edx,%eax
		mov    %eax,0x000028(%ebx)
		mov    0x000028(%ebx),%ax
		mov    _0c24ac_data,%edx
		mov    %ax,0x00003c(%ebx)
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%ebx)
		mov    0x00002c(%ebx),%ax
		mov    %ax,0x00003e(%ebx)
		orb    $0x000004,0x000081(%ebx)
		mov    %ebx,%eax
		movl   $0x000001,0x000024(%ebx)
		call   _01f7d4_func
		mov    0x000081(%ebx),%dl
		xor    %eax,%eax
		and    $0x0000ef,%dl
		mov    _0c261c_data,%al
		mov    %dl,0x000081(%ebx)
		lea    0x000000(,%eax,4),%edx
		add    %eax,%edx
		mov    _094a1d_data(,%edx,4),%al
		add    $0x000020,%al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,%eax
		call   _01d6e8_func
		xor    %eax,%eax
		mov    _0c261c_data,%al
		lea    0x000000(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x000002,%edx
		xor    %eax,%eax
		mov    _094a1d_data(%edx),%al
		cmp    $0x000006,%eax
		jne    _02803b_jump
		movb   $0x000005,_094a1d_data(%edx)

	_02803b_jump:
		xor    %ebx,%ebx
		mov    _0c261c_data,%bl
		lea    0x000000(,%ebx,4),%edx
		mov    _0c24b0_data,%ax
		add    %ebx,%edx
		mov    %ax,_0c24ac_data
		mov    $0x000001,%bh
		mov    _094a1d_data(,%edx,4),%cl
		mov    _0c24b2_data,%ax
		add    %bh,%cl
		mov    %ax,_0c24ae_data
		mov    %cl,_094a1d_data(,%edx,4)
		xor    %edx,%edx
		mov    %bh,_0c2612_data
		mov    %dx,_0c24f0_data
		mov    %dx,_0c24f2_data

	_02808c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028090_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ebp
		mov    %dl,0x000014(%esp)
		mov    $0x000003,%eax
		call   _01d398_func
		mov    %eax,%esi
		add    $0x000738,%eax
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    0x000060(%ebp),%ax
		xor    %edi,%edi
		cmp    $0x000017,%eax
		jne    _0280de_jump
		xor    %eax,%eax
		mov    _0c1bb6_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0c1b50_data,%eax
		mov    0x000008(%eax,%edx,4),%al
		mov    %al,0x000018(%esp)
		jmp    _0280eb_jump

	_0280de_jump:
		movb   $0x000001,0x000018(%esp)
		jmp    _0280eb_jump

	_0280e5_jump:
		add    $0x000084,%esi

	_0280eb_jump:
		cmp    (%esp),%esi
		jae    _02828e_jump
		mov    0x000024(%esi),%ebx
		test   %ebx,%ebx
		jne    _0280e5_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000003,%edx
		jne    _0280e5_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movw   $0x000014,0x000056(%esi)
		movl   $0x000001,0x000024(%esi)
		mov    0x000081(%esi),%dl
		movb   $0x000000,0x000071(%esi)
		or     $0x000004,%dl
		mov    %dl,0x000081(%esi)
		movswl %di,%edx
		movb   $0x000005,0x000072(%esi)
		mov    _095e9a_data(,%edx,2),%bx
		mov    %bx,0x000042(%esi)
		mov    _095e8c_data(,%edx,2),%dx
		mov    %esi,%eax
		mov    %dx,0x000040(%esi)
		call   _01f7d4_func
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _028197_jump
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,(%ebx)
		mov    %dl,%bl
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		neg    %bl
		mov    %bl,0x000001(%edx)
		mov    0x000081(%esi),%bl
		mov    %esi,%eax
		or     $0x000008,%bl
		mov    $0x000002,%edx
		mov    %bl,0x000081(%esi)
		mov    $0x000001,%ebx
		jmp    _0281cb_jump

	_028197_jump:
		mov    0x00000c(%esi),%ebx
		mov    0x000040(%esi),%dl
		mov    0x000008(%ebx),%ebx
		neg    %dl
		mov    %dl,(%ebx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,0x000001(%ebx)
		mov    0x000081(%esi),%dh
		mov    %esi,%eax
		and    $0x0000f7,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%esi)
		mov    $0x000002,%edx

	_0281cb_jump:
		call   _056614_func
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    (%edx),%al
		mov    %al,0x000008(%edx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    0x000001(%edx),%al
		mov    %al,0x000009(%edx)
		lea    0x000008(%esp),%edx
		push   %edx
		lea    0x000008(%esp),%edx
		xor    %ebx,%ebx
		push   %edx
		movswl %di,%edx
		mov    0x000020(%esp),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000018(%esp),%ecx
		lea    0x000014(%esp),%ebx
		movswl %dx,%edx
		mov    %ebp,%eax
		call   _01da90_func
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000069(%esi),%bl
		sub    %ebx,%edx
		mov    %esi,%eax
		mov    %edx,0x00002c(%esi)
		xor    %edx,%edx
		call   _01df3c_func
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movb   $0x000000,0x00006b(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		mov    0x000002(%ebx,%edx,8),%al
		mov    0x000081(%esi),%bh
		and    $0x0000bf,%bh
		inc    %edi
		mov    %bh,0x000081(%esi)
		xor    %ebx,%ebx
		movswl %di,%edx
		mov    0x000014(%esp),%bl
		mov    %al,0x00006a(%esi)
		cmp    %ebx,%edx
		jne    _0280e5_jump

	_02828e_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_028298_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _0282c3_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0282b7_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _02831d_jump

	_0282c3_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x00003b,%ebx
		jne    _0282b7_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0282b7_jump
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f7d4_func
		mov    0x000028(%esi),%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%esi),%ebx
		mov    0x000028(%edx),%ax
		mov    %ebx,0x00002c(%edx)
		mov    _0c24ac_data,%bx
		sub    %ebx,%eax
		mov    %ax,0x000036(%edx)
		mov    _0c24ae_data,%cx
		mov    0x00002c(%edx),%ax
		movw   $0x00fffc,0x000042(%edx)
		sub    %ecx,%eax
		mov    %ax,0x000038(%edx)

	_02831d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028324_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000056(%eax),%dx
		test   %dx,%dx
		je     _028339_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x000056(%eax)

	_028339_jump:
		cmpb   $0x000000,_0c2594_data
		je     _02835d_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000002,0x000007(%edx,%eax,8)
		jne    _028388_jump

	_02835d_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _0283a2_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _0283a2_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jle    _0283a2_jump

	_028388_jump:
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)

	_0283a2_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		xor    %ebx,%ebx
		mov    %edx,%eax
		mov    0x00006c(%ecx),%bl
		shl    $0x000008,%eax
		add    %ebx,%eax
		cmp    $0x000003,%eax
		jb     _028554_jump
		cmp    $0x000005,%eax
		jbe    _02855d_jump
		cmp    $0x000200,%eax
		jb     _028545_jump
		cmp    $0x000201,%eax
		jbe    _0284de_jump
		cmp    $0x000202,%eax
		je     _0284d8_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0283ea_jump:
		mov    0x00000c(%ecx),%eax
		mov    (%eax,%edx,4),%eax
		testb  $0x000010,0x000007(%eax,%ebx,8)
		je     _028400_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _028423_jump

	_028400_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_028423_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _02855d_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _02855d_jump
		mov    0x000081(%ecx),%dh
		lea    0x000081(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02848c_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _0284cd_jump
		mov    0x000081(%ecx),%dh
		lea    0x000081(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_0284cd_jump:
		mov    %ecx,%eax
		call   _0248b8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0284d8_jump:
		movw   $0x000000,0x000040(%ecx)

	_0284de_jump:
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _028502_jump
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)

	_028502_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02855d_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _023f98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		je     _02855d_jump
		cmpb   $0x000000,_0c2594_data
		jne    _02853b_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6e8_func

	_02853b_jump:
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028545_jump:
		cmp    $0x000100,%eax
		je     _02848c_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028554_jump:
		cmp    $0x000001,%eax
		ja     _0283ea_jump

	_02855d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028564_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _02858d_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _056614_func

	_02858d_jump:
		pop    %edx
		pop    %ebx
		ret    



_028590_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0285f0_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		jne    _0285f0_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0285c5_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _0285fd_jump

	_0285d7_jump:
		and    $0x0000ff,%eax
		jne    _0285e7_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0285fd_jump

	_0285e7_jump:
		orb    $0x000008,0x000081(%ecx)
		jmp    _0285fd_jump

	_0285f0_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000002,%al
		jb     _0285d7_jump
		jbe    _0285fd_jump
		cmp    $0x000014,%al
		je     _0285c5_jump

	_0285fd_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x000068(%ecx),%al
		mov    _0c1b74_data,%bx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    _0c1bb4_data,%al
		sub    %eax,%edx
		mov    _0c1b8c_data,%ax
		add    %eax,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %dx,%edx
		cmp    $0xfffffff6,%edx
		jge    _028693_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02866e_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000006,%eax
		je     _02866e_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000004,%edx
		or     $0x000008,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		mov    $0x000001,%ebx
		call   _056614_func
		jmp    _028703_jump

	_02866e_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _028703_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _028703_jump

	_028693_jump:
		cmp    $0x00000a,%ax
		jle    _0286f6_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _0286db_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000006,%eax
		je     _0286db_jump
		mov    0x000081(%ecx),%dh
		mov    $0x000001,%ebx
		and    $0x0000f7,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		mov    $0x000003,%edx
		call   _056614_func
		jmp    _028703_jump

	_0286db_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _028703_jump
		movw   $0x00fffd,0x000040(%ecx)
		jmp    _028703_jump

	_0286f6_jump:
		jg     _028703_jump
		cmp    $0xfffffff6,%edx
		jl     _028703_jump
		movw   $0x000000,0x000040(%ecx)

	_028703_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _028713_jump
		mov    $0x000010,%eax
		jmp    _028718_jump

	_028713_jump:
		mov    $0xfffffff0,%eax

	_028718_jump:
		xor    %edx,%edx
		mov    0x000068(%ecx),%dl
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    0x000069(%ecx),%bl
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _028739_jump
		movw   $0x000000,0x000040(%ecx)

	_028739_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _02877f_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		jne    _02877f_jump
		mov    0x00003c(%ecx),%eax
		mov    0x00002c(%ecx),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _0287b2_jump
		mov    $0x000001,%ebx
		mov    0x00003c(%ecx),%eax
		movw   $0x000000,0x000042(%ecx)
		sar    $0x000010,%eax
		mov    $0x000002,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000052(%ecx)
		call   _056614_func
		jmp    _0287b2_jump

	_02877f_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0287b2_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000006,%eax
		jne    _0287b2_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x00000f,%eax
		jle    _0287b2_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _0287b2_jump
		mov    %ecx,%eax
		call   _028c50_func
		movw   $0x000002,0x000052(%ecx)

	_0287b2_jump:
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _0287d3_jump
		incb   0x00007f(%ecx)
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		cmp    $0x000050,%eax
		jle    _0287d3_jump
		movb   $0x000000,0x00007f(%ecx)
		movw   $0x000000,0x000052(%ecx)

	_0287d3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0287d8_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		test   %eax,%eax
		jne    _028836_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000002,%eax
		jne    _028836_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%bh
		mov    %bh,0x000081(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02880b_jump:
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _028843_jump

	_02881d_jump:
		and    $0x0000ff,%eax
		jne    _02882d_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _028843_jump

	_02882d_jump:
		orb    $0x000008,0x000081(%edx)
		jmp    _028843_jump

	_028836_jump:
		mov    0x000070(%edx),%al
		cmp    $0x000002,%al
		jb     _02881d_jump
		jbe    _028843_jump
		cmp    $0x000014,%al
		je     _02880b_jump

	_028843_jump:
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		test   %eax,%eax
		jne    _028886_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000008,%eax
		jne    _028886_jump
		mov    0x000050(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _028876_jump
		mov    0x00006b(%edx),%al
		cmp    $0x000006,%eax
		jl     _028876_jump
		mov    %edx,%eax
		call   _028c50_func
		movw   $0x000001,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_028876_jump:
		xor    %eax,%eax
		mov    0x00006b(%edx),%al
		cmp    $0x000001,%eax
		jne    _028886_jump
		movw   $0x000000,0x000052(%edx)

	_028886_jump:
		pop    %edx
		pop    %ebx
		ret    



_02888c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		test   %eax,%eax
		jne    _0288f6_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000002,%eax
		jne    _0288f6_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%bh
		mov    %bh,0x000081(%edx)
		jmp    _0289fa_jump

	_0288c4_jump:
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _028903_jump

	_0288d6_jump:
		and    $0x0000ff,%eax
		jne    _0288e6_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _0288ed_jump

	_0288e6_jump:
		orb    $0x000008,0x000081(%edx)

	_0288ed_jump:
		mov    %edx,%eax
		call   _04aad8_func
		jmp    _028903_jump

	_0288f6_jump:
		mov    0x000070(%edx),%al
		cmp    $0x000002,%al
		jb     _0288d6_jump
		jbe    _028903_jump
		cmp    $0x000014,%al
		je     _0288c4_jump

	_028903_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		mov    _0c1b74_data,%cx
		add    %ebx,%eax
		xor    %ebx,%ebx
		sub    %ecx,%eax
		mov    _0c1bb4_data,%bl
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b78_data,%si
		mov    _0c1bb5_data,%al
		mov    0x00002c(%edx),%di
		mov    %eax,%ecx
		xor    %eax,%eax
		add    %esi,%ecx
		mov    0x000069(%edx),%al
		sub    %edi,%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    0x000050(%edx),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jne    _0289e2_jump
		cwtl   
		cmp    $0x000012,%eax
		jl     _028997_jump
		cmp    $0x000028,%eax
		jge    _028965_jump
		movw   $0x000001,0x000042(%edx)
		jmp    _02899d_jump

	_028965_jump:
		cmp    $0x000041,%eax
		jge    _028972_jump
		movw   $0x000002,0x000042(%edx)
		jmp    _02899d_jump

	_028972_jump:
		cmp    $0x000064,%eax
		jge    _02897f_jump
		movw   $0x000003,0x000042(%edx)
		jmp    _02899d_jump

	_02897f_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _028988_jump
		neg    %eax

	_028988_jump:
		cmp    $0x0000a5,%eax
		jge    _028997_jump
		movw   $0x000004,0x000042(%edx)
		jmp    _02899d_jump

	_028997_jump:
		movw   $0x000000,0x000042(%edx)

	_02899d_jump:
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _0289bb_jump
		movswl %bx,%eax
		cmp    $0x00005a,%eax
		jg     _0289d6_jump

	_0289bb_jump:
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _0289fa_jump
		movswl %bx,%eax
		cmp    $0xffffffa6,%eax
		jge    _0289fa_jump

	_0289d6_jump:
		movw   $0x000001,0x000052(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0289e2_jump:
		cwtl   
		cmp    $0x000078,%eax
		jle    _0289f4_jump
		movw   $0x00fffe,0x000042(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0289f4_jump:
		movw   $0x00ffff,0x000042(%edx)

	_0289fa_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028a00_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _028a72_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000002,%edx
		jne    _028a72_jump
		mov    0x000050(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _028a72_jump
		mov    0x00006b(%eax),%dl
		cmp    $0x000010,%edx
		jl     _028a72_jump
		movw   $0x000001,0x000052(%eax)
		xor    %eax,%eax
		mov    $0x000001,%edx
		mov    _0c1bb9_data,%al
		mov    %dx,_0c25f4_data
		test   %eax,%eax
		je     _028a4b_jump
		cmp    $0x000001,%eax
		jne    _028a55_jump

	_028a4b_jump:
		movb   $0x000001,_0c1bc9_data
		pop    %edx
		pop    %ebx
		ret    

	_028a55_jump:
		cmp    $0x000004,%eax
		je     _028a5f_jump
		cmp    $0x000005,%eax
		jne    _028aac_jump

	_028a5f_jump:
		mov    $0x000002,%ah
		mov    $0x000001,%dl
		mov    %ah,_0c1bb9_data
		mov    %dl,_0c1bb8_data
		pop    %edx
		pop    %ebx
		ret    

	_028a72_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _028a8c_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00000b,%edx
		jne    _028a8c_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_028a8c_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _028aac_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000016,%edx
		jne    _028aac_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _056614_func

	_028aac_jump:
		pop    %edx
		pop    %ebx
		ret    



_028ab0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _028adf_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028acf_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _028be1_jump

	_028adf_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00003e,%edx
		jne    _028acf_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _028acf_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		movw   $0x00fffe,0x000042(%ecx)
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _028b4e_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		movsbw 0x000001(%edx,%eax,8),%ax
		jmp    _028b67_jump

	_028b4e_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		movsbw (%edx,%eax,8),%ax

	_028b67_jump:
		mov    %ax,0x000040(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%edx
		mov    0x000028(%ecx),%ax
		sub    $0x000019,%edx
		mov    %ax,0x00003c(%ecx)
		mov    %edx,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %ecx,%eax
		movb   $0x00000c,0x000072(%ecx)
		call   _056614_func
		mov    %ecx,%eax
		call   _01df3c_func
		mov    0x000081(%ecx),%dh
		and    $0x0000bb,%dh
		movl   $0x000001,0x000024(%ecx)
		mov    %dh,%bl
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f7d4_func

	_028be1_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028be8_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _028c04_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000002,%edx
		jne    _028c04_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_028c04_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _028c2d_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00000b,%edx
		jne    _028c2d_jump
		mov    0x000050(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _028c2d_jump
		movw   $0x000001,0x000052(%eax)
		call   _028ab0_func
		pop    %edx
		pop    %ebx
		ret    

	_028c2d_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _028c4d_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000016,%edx
		jne    _028c4d_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _056614_func

	_028c4d_jump:
		pop    %edx
		pop    %ebx
		ret    



_028c50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _028c83_jump
		jmp    _028e25_jump

	_028c73_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _028e25_jump

	_028c83_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000077,%edx
		jne    _028c73_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _028c73_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		mov    0x000060(%edi),%dx
		cmp    $0x000074,%edx
		jne    _028d0b_jump
		mov    _0c1b8a_data,%edx
		sar    $0x000010,%edx
		movw   $0x000001,0x000042(%esi)
		cmp    $0x000002,%edx
		jge    _028ce7_jump
		movw   $0x000000,0x000040(%esi)
		jmp    _028d5c_jump

	_028ce7_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		test   %edx,%edx
		jne    _028d03_jump
		movw   $0x00ffff,0x000040(%esi)
		jmp    _028d5c_jump

	_028d03_jump:
		movw   $0x000001,0x000040(%esi)
		jmp    _028d5c_jump

	_028d0b_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		movw   $0x000000,0x000042(%esi)
		test   %edx,%edx
		jne    _028d3f_jump
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		movsbw 0x000001(%ebx,%edx,8),%ax
		jmp    _028d58_jump

	_028d3f_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		movsbw (%ebx,%edx,8),%ax

	_028d58_jump:
		mov    %ax,0x000040(%esi)

	_028d5c_jump:
		xor    %edx,%edx
		mov    0x000060(%edi),%dx
		cmp    $0x000074,%edx
		jne    _028d85_jump
		mov    %esp,%edx
		lea    0x00000c(%esp),%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000006,%edx
		call   _01da90_func
		jmp    _028dc2_jump

	_028d85_jump:
		mov    %esp,%edx
		lea    0x00000c(%esp),%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000009,%edx
		call   _01da90_func
		mov    $0x000010,%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000004(%esp),%ecx
		mov    %dx,0x000008(%esp)
		add    $0x000020,%ebx
		add    %edx,%ecx
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000004(%esp)

	_028dc2_jump:
		mov    0x000002(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000011,%ebx
		add    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000a(%esp),%ebx
		mov    0x000028(%esi),%ax
		xor    %edx,%edx
		movl   $0x000001,0x000024(%esi)
		sar    $0x000010,%ebx
		mov    0x000074(%esi),%dl
		mov    %ax,0x00003c(%esi)
		sub    %edx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    0x000081(%esi),%dh
		mov    0x00002c(%esi),%ax
		or     $0x000004,%dh
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		call   _01f7d4_func
		mov    %edi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01df3c_func

	_028e25_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028e30_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000076(%eax),%al
		cmp    0x000077(%ecx),%al
		je     _028e76_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _028e92_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _028e92_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x000081(%ecx),%dh
		movw   $0x000000,0x000040(%ecx)
		or     $0x000010,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _028e92_jump

	_028e76_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d6f0_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6e8_func
		orb    $0x000010,0x000081(%ecx)

	_028e92_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		movw   $0x000000,0x000042(%ecx)
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _028eb7_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _028ec3_jump

	_028eb7_jump:
		cmp    $0x000001,%eax
		jne    _028eca_jump
		mov    $0x000003,%edx
		mov    %eax,%ebx

	_028ec3_jump:
		mov    %ecx,%eax
		call   _056614_func

	_028eca_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028ed0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb7c_func
		mov    _0c1ef0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _028ef1_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _028efa_jump

	_028ef1_jump:
		jge    _028efa_jump
		orb    $0x000008,0x000081(%ecx)

	_028efa_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _028f20_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _056614_func
		pop    %ecx
		pop    %ebx
		ret    

	_028f20_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x000070(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_028f44_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb7c_func
		mov    _0c1ef0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _028f65_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _028f6e_jump

	_028f65_jump:
		jge    _028f6e_jump
		orb    $0x000008,0x000081(%ecx)

	_028f6e_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _028fa8_jump
		testb  $0x000008,0x000081(%ecx)
		je     _028f94_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %ecx
		pop    %ebx
		ret    

	_028f94_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %ecx
		pop    %ebx
		ret    

	_028fa8_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_028fc0_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _028fd2_jump
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		je     _028fe5_jump

	_028fd2_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _028ff4_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		jne    _028ff4_jump

	_028fe5_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _056614_func

	_028ff4_jump:
		pop    %edx
		pop    %ebx
		ret    



_028ff8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000050(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _029022_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _056614_func
		movb   $0x000000,0x00007f(%ecx)
		movw   $0x000001,0x000052(%ecx)

	_029022_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029030_func:
		mov    0x00005c(%eax),%ax
		and    $0x00ffff,%eax
		sar    $0x00000b,%eax
		ret    



_029040_func:
		mov    0x00005c(%eax),%ax
		and    $0x000007,%ah
		ret    



_029048_func:
		push   %ebx
		call   _029040_func
		movswl %ax,%ebx
		movswl %dx,%eax
		add    %ebx,%eax
		shl    $0x000003,%eax
		add    $_092a68_data,%eax
		pop    %ebx
		ret    



_029068_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x00000c,%esp
		mov    %edx,%ecx
		mov    0x000060(%eax),%dx
		cmp    $0x000064,%dx
		jb     _02912b_jump
		jbe    _0290a2_jump
		cmp    $0x0000d9,%dx
		je     _0290a2_jump
		jmp    _0290e1_jump

	_029089_jump:
		xor    %bl,%bl
		mov    $0x000002,%al
		mov    %bl,(%esp)
		mov    %al,0x000002(%esp)
		mov    $0x000001,%bh
		mov    $0x0000ff,%ah
		mov    %bh,0x000001(%esp)
		mov    %ah,0x000003(%esp)
		jmp    _0290eb_jump

	_0290a2_jump:
		movb   $0x000001,(%esp)
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x00000b,%edx
		jne    _0290e6_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000002,%edx
		jne    _0290c1_jump
		movb   $0x000003,0x000001(%esp)
		jmp    _0290da_jump

	_0290c1_jump:
		mov    0x00006b(%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x00000f,%eax
		jle    _0290d5_jump
		movb   $0x000002,0x000001(%esp)
		jmp    _0290da_jump

	_0290d5_jump:
		movb   $0x0000ff,0x000001(%esp)

	_0290da_jump:
		movb   $0x0000ff,0x000002(%esp)
		jmp    _0290eb_jump

	_0290e1_jump:
		xor    %dl,%dl
		mov    %dl,(%esp)

	_0290e6_jump:
		movb   $0x0000ff,0x000001(%esp)

	_0290eb_jump:
		xor    %eax,%eax

	_0290ed_jump:
		movswl %ax,%edx
		mov    (%esp,%edx,1),%dl
		and    $0x0000ff,%edx
		movswl %cx,%ebx
		cmp    %edx,%ebx
		sete   %dl
		inc    %eax
		xor    %dh,%dh
		movswl %ax,%ebx
		mov    %edx,%esi
		mov    (%esp,%ebx,1),%bl
		and    $0x0000ff,%ebx
		cmp    $0x0000ff,%ebx
		je     _029122_jump
		movswl %dx,%edx
		cmp    $0x000001,%edx
		jne    _0290ed_jump

	_029122_jump:
		mov    %esi,%eax
		add    $0x00000c,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02912b_jump:
		cmp    $0x000014,%dx
		je     _029089_jump
		xor    %dl,%dl
		mov    %dl,(%esp)
		movb   $0x0000ff,0x000001(%esp)
		jmp    _0290eb_jump



_0291bc_func:
		push   %esi
		push   %edi
		mov    0x000014(%esp),%esi
		mov    0x000018(%esp),%edi
		sub    %esi,%eax
		sub    %edi,%edx
		add    %edi,%ecx
		mov    0x00000c(%esp),%edi
		add    %esi,%ebx
		cmp    %di,%ax
		jg     _02920e_jump
		cmp    0x000010(%esp),%dx
		jg     _02920e_jump
		movswl %ax,%esi
		movswl %bx,%eax
		add    %eax,%esi
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jg     _02920e_jump
		movswl %dx,%eax
		movswl %cx,%edx
		add    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _02920e_jump
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		ret    $0x000010

	_02920e_jump:
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		ret    $0x000010



_029218_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %ecx,(%esp)
		mov    0x000060(%eax),%dx
		mov    %edx,%eax
		cmp    $0x00004f,%dx
		jb     _029d5f_jump
		jbe    _02933c_jump
		cmp    $0x000086,%dx
		jb     _029ce3_jump
		jbe    _029387_jump
		cmp    $0x0000a7,%dx
		jb     _029cb6_jump
		jbe    _029387_jump
		cmp    $0x0000be,%dx
		jb     _029ca6_jump
		jbe    _029a75_jump
		cmp    $0x0000c3,%dx
		jb     _02928c_jump
		jbe    _029a90_jump
		cmp    $0x0000cc,%dx
		je     _029325_jump

	_02928c_jump:
		mov    0x000028(%esp),%edx
		mov    (%esp),%ecx
		mov    %edi,%ebx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d610_func

	_02929f_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0292a8_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    0x000004(%esp),%eax
		mov    $0x000001,%edx
		push   %eax
		mov    %ebx,%ecx
		mov    %ebp,%ebx
		mov    %esi,%eax
		call   _01da90_func
		mov    (%esp),%eax
		mov    0x000028(%esp),%edx
		mov    (%eax),%ax
		cmp    (%edx),%ax
		jle    _0292f7_jump
		addw   $0x000004,0x000000(%ebp)
		mov    (%esp),%eax
		subw   $0x000008,(%eax)
		mov    (%edi),%bx
		add    $0x000008,%ebx
		mov    0x000028(%esp),%eax
		mov    %bx,(%edi)
		subw   $0x00000c,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0292f7_jump:
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000003,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,0x000000(%ebp)
		movw   $0x000006,(%eax)
		addw   $0x000010,(%edi)
		subw   $0x000020,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029325_jump:
		mov    0x000028(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01dbd8_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02933c_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		mov    0x000014(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000004,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000004,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029387_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		mov    0x000014(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0293dc_jump:
		mov    0x000028(%esp),%ebx
		mov    %ebp,%edx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01d610_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0293f5_jump:
		mov    0x000028(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d610_func
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    0x000028(%esp),%eax
		mov    %si,0x000000(%ebp)
		movswl (%eax),%eax
		sar    %eax
		movswl (%edi),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,(%edi)
		movw   $0x000004,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000004,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029446_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		mov    0x000014(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		sub    $0x00001e,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02949b_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		mov    0x000014(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		sub    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000004,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		add    $0x000003,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0294f0_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x00000c(%esp)
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		lea    0x000004(%esp),%ecx
		mov    %ah,0x000081(%esi)
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		mov    0x00000c(%esp),%al
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		or     %al,%dh
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%eax
		mov    %dh,0x000081(%esi)
		cmp    $0x000002,%eax
		je     _02958a_jump
		mov    0x000014(%esp),%eax
		add    $0x000003,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000014,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000032,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000028,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02958a_jump:
		mov    0x000014(%esp),%eax
		add    $0x000014,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000023,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000001,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000001,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0295bd_jump:
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01da90_func
		mov    0x000014(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000020,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029604_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		mov    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000006,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029659_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		mov    0x000014(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000010,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000010,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0296ae_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		sub    $0x00003c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000032,(%eax)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02929f_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		jne    _029722_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    (%edi),%dx
		add    %eax,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,(%edi)
		mov    0x000028(%esp),%edx
		mov    0x00006b(%esi),%al
		mov    (%edx),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029722_jump:
		cmp    $0x000006,%eax
		jne    _02929f_jump
		mov    0x000028(%esp),%eax
		mov    (%eax),%cx
		sar    %cx
		mov    %cx,(%eax)
		mov    (%edi),%dx
		add    %ecx,%edx
		xor    %ebx,%ebx
		mov    %dx,(%edi)
		mov    $0x00000f,%eax
		mov    0x00006b(%esi),%bl
		cmp    %ebx,%eax
		jle    _029750_jump
		mov    %ebx,%eax

	_029750_jump:
		mov    (%edi),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edi)
		xor    %ebx,%ebx
		mov    $0x00000f,%eax
		mov    0x00006b(%esi),%bl
		mov    0x000028(%esp),%edx
		cmp    %ebx,%eax
		jle    _02976e_jump
		mov    %ebx,%eax

	_02976e_jump:
		mov    (%edx),%cx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029781_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)

	_029790_jump:
		mov    0x000028(%esp),%eax
		movw   $0x000000,(%ecx)
		movw   $0x000000,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0297a7_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000032,(%ecx)
		movw   $0x00006e,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0297cd_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _029837_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _029837_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000010,%eax
		jl     _029837_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _029805_jump
		mov    $0x000050,%eax
		jmp    _02980a_jump

	_029805_jump:
		mov    $0x000010,%eax

	_02980a_jump:
		add    0x000028(%esi),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000044,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029837_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02986f_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _02986f_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _029865_jump
		mov    $0x000050,%eax
		jmp    _02986a_jump

	_029865_jump:
		mov    $0x000030,%eax

	_02986a_jump:
		add    0x000028(%esi),%eax
		jmp    _029878_jump

	_02986f_jump:
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax

	_029878_jump:
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000026,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000020,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0298a2_jump:
		mov    0x000028(%esp),%ecx
		mov    %ebp,%edx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _01d610_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0298bd_jump:
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01da90_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _02991f_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _02991f_jump
		mov    0x000014(%esp),%eax
		add    $0x000005,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00001c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000006,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000016,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02991f_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _029966_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _029966_jump
		mov    0x000014(%esp),%eax
		add    $0x000006,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000012,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000d,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000b,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029966_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _02929f_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _02929f_jump
		mov    0x000014(%esp),%eax
		add    $0x000007,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000013,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000b,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0299b4_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		mov    0x000014(%esp),%eax
		add    $0x000018,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000e,%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000030,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x00001b,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029a09_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004c,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000055,%eax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000008,(%ecx)
		movw   $0x000008,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029a39_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _029790_jump
		mov    0x000028(%esp),%eax
		movw   $0x000016,(%ecx)
		movw   $0x000016,(%eax)
		addw   $0x000044,0x000000(%ebp)
		addw   $0x000041,(%ebx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029a75_jump:
		mov    0x000028(%esp),%ecx
		mov    %ebp,%edx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _05a3d0_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029a90_jump:
		mov    0x000028(%esp),%ebx
		mov    %ebp,%edx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01c040_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029aa9_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _029abd_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000f,%eax
		je     _029ae5_jump

	_029abd_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _029ad1_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000c,%eax
		je     _029ae5_jump

	_029ad1_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _029b18_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000d,%eax
		jne    _029b18_jump

	_029ae5_jump:
		mov    0x000028(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000037,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000015,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029b18_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00002d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000015,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029b4b_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000001,%eax
		jne    _029b7c_jump
		mov    0x000028(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x00002b,(%ecx)
		movw   $0x00000f,(%eax)

	_029b7c_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000002,%eax
		jne    _029bb0_jump
		mov    0x000028(%esi),%ax
		add    $0x000083,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000058,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000031,(%eax)

	_029bb0_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000003,%eax
		jne    _029be4_jump
		mov    0x000028(%esi),%ax
		add    $0x00003e,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00002b,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000010,(%eax)

	_029be4_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000004,%eax
		jne    _02929f_jump
		mov    0x000028(%esi),%ax
		add    $0x000060,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000057,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029c25_jump:
		mov    0x000028(%esp),%eax
		push   %eax
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _01d610_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000007(%eax),%dl
		add    %dl,%dl
		shr    $0x000007,%dl
		mov    0x000007(%eax),%al
		and    $0x0000ff,%edx
		shr    $0x000007,%al
		add    %edx,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    $0x000018,%eax
		shl    $0x000002,%esi
		mov    0x000000(%ebp),%dx
		sub    %esi,%eax
		add    %eax,%edx
		mov    %dx,0x000000(%ebp)
		mov    (%edi),%bx
		add    %eax,%ebx
		mov    (%esp),%edx
		mov    %bx,(%edi)
		add    %eax,%eax
		sub    %ax,(%edx)
		mov    0x000028(%esp),%edx
		sub    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029ca6_jump:
		cmp    $0x0000ac,%dx
		je     _0296ae_jump
		jmp    _02928c_jump

	_029cb6_jump:
		cmp    $0x000092,%dx
		jb     _029cd3_jump
		jbe    _0293f5_jump
		cmp    $0x0000a4,%dx
		je     _029c25_jump
		jmp    _02928c_jump

	_029cd3_jump:
		cmp    $0x000087,%dx
		je     _029446_jump
		jmp    _02928c_jump

	_029ce3_jump:
		cmp    $0x000077,%dx
		jb     _029d2b_jump
		jbe    _029a09_jump
		cmp    $0x00007a,%dx
		jb     _029d1c_jump
		jbe    _029604_jump
		cmp    $0x000081,%dx
		jb     _02928c_jump
		jbe    _029b4b_jump
		cmp    $0x000084,%dx
		je     _029aa9_jump
		jmp    _02928c_jump

	_029d1c_jump:
		cmp    $0x000079,%dx
		je     _029446_jump
		jmp    _02928c_jump

	_029d2b_jump:
		cmp    $0x000061,%dx
		jb     _029d50_jump
		jbe    _0294f0_jump
		cmp    $0x000069,%dx
		jb     _02928c_jump
		cmp    $0x00006a,%dx
		jbe    _0295bd_jump
		jmp    _02928c_jump

	_029d50_jump:
		cmp    $0x000053,%dx
		je     _029a39_jump
		jmp    _02928c_jump

	_029d5f_jump:
		cmp    $0x000039,%dx
		jb     _029dca_jump
		jbe    _0292a8_jump
		cmp    $0x00003e,%dx
		jb     _029dab_jump
		jbe    _0298bd_jump
		cmp    $0x000046,%dx
		jb     _029d9c_jump
		jbe    _0299b4_jump
		cmp    $0x000047,%dx
		jbe    _02949b_jump
		cmp    $0x000049,%dx
		je     _0293dc_jump
		jmp    _02928c_jump

	_029d9c_jump:
		cmp    $0x000042,%dx
		je     _0298a2_jump
		jmp    _02928c_jump

	_029dab_jump:
		cmp    $0x00003b,%dx
		jb     _029659_jump
		jbe    _029781_jump
		cmp    $0x00003c,%dx
		je     _0297cd_jump
		jmp    _02928c_jump

	_029dca_jump:
		cmp    $0x000023,%dx
		jb     _029e0a_jump
		jbe    _0296ae_jump
		cmp    $0x00002b,%dx
		jb     _029dfb_jump
		jbe    _0296ae_jump
		cmp    $0x00002c,%dx
		jbe    _02949b_jump
		cmp    $0x000038,%dx
		je     _0296ae_jump
		jmp    _02928c_jump

	_029dfb_jump:
		cmp    $0x000028,%dx
		je     _029604_jump
		jmp    _02928c_jump

	_029e0a_jump:
		cmp    $0x000005,%dx
		jb     _029e25_jump
		jbe    _0297a7_jump
		cmp    $0x000008,%dx
		je     _029387_jump
		jmp    _02928c_jump

	_029e25_jump:
		cmp    $0x000002,%dx
		je     _029387_jump
		jmp    _02928c_jump



_029e34_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,(%esp)
		mov    %ecx,%ebp
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		xor    %edx,%edx
		mov    0x000060(%eax),%ax
		mov    %edx,0x00001c(%esp)
		mov    %edx,0x000024(%esp)
		mov    %edx,0x000020(%esp)
		mov    %edx,0x000014(%esp)
		lea    0x00000c(%esp),%edx
		mov    %eax,0x000010(%esp)
		push   %edx
		lea    0x00001c(%esp),%edx
		mov    %edi,%eax
		push   %edx
		movswl %si,%edx
		call   _01da90_func
		mov    %eax,%edx
		test   %ax,%ax
		jne    _02a0fc_jump
		mov    %edx,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_029e8f_jump:
		mov    $0x000004,%ecx
		mov    $0x000002,%esi
		mov    $0xfffffffc,%edi
		mov    $0xfffffff6,%eax
		mov    %ecx,0x000014(%esp)
		mov    %esi,0x000020(%esp)
		mov    %edi,0x000024(%esp)
		mov    %eax,0x00001c(%esp)
		jmp    _02a127_jump

	_029eb8_jump:
		mov    $0x000002,%edi
		xor    %esi,%esi
		mov    $0xfffffff6,%ebx
		mov    %esi,0x000014(%esp)
		mov    %edi,0x000020(%esp)
		mov    %esi,0x000024(%esp)
		mov    %ebx,0x00001c(%esp)
		jmp    _02a127_jump

	_029ed9_jump:
		mov    $0x000002,%eax
		mov    $0xfffffffc,%ebx
		xor    %edi,%edi
		mov    $0xfffffff6,%ecx
		mov    %edi,0x000014(%esp)
		mov    %eax,0x000020(%esp)
		mov    %ebx,0x000024(%esp)
		mov    %ecx,0x00001c(%esp)
		jmp    _02a127_jump

	_029eff_jump:
		cmp    $0x000004,%si
		jb     _029f12_jump
		jbe    _029eb8_jump
		cmp    $0x000005,%si
		je     _029ed9_jump
		jmp    _02a127_jump

	_029f12_jump:
		cmp    $0x000003,%si
		je     _029e8f_jump
		jmp    _02a127_jump

	_029f21_jump:
		xor    %ebx,%ebx
		mov    0x00006d(%edi),%bl
		test   %ebx,%ebx
		jne    _029f35_jump
		mov    0x00006c(%edi),%bl
		test   %ebx,%ebx
		je     _029fba_jump

	_029f35_jump:
		xor    %ebx,%ebx
		mov    0x00006d(%edi),%bl
		cmp    $0x000001,%ebx
		jne    _029fdb_jump
		xor    %ebx,%ebx
		mov    0x00006c(%edi),%bl
		test   %ebx,%ebx
		je     _029fba_jump
		jmp    _029fdb_jump

	_029f51_jump:
		mov    $0x00000a,%esi
		mov    $0x000022,%eax
		mov    $0x000020,%ebx
		xor    %edi,%edi
		mov    %esi,0x000014(%esp)
		mov    %edi,0x000020(%esp)
		mov    %eax,0x000018(%esp)
		mov    %ebx,0x00000c(%esp)
		jmp    _02a127_jump

	_029f77_jump:
		mov    $0x000004,%eax
		mov    $0x00001a,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000014(%esp)
		mov    %ebx,0x000020(%esp)
		mov    %ecx,0x000018(%esp)
		jmp    _02a127_jump

	_029f94_jump:
		mov    $0x000004,%ebx
		mov    $0x000030,%esi
		mov    $0x000018,%edi
		xor    %ecx,%ecx
		mov    %ebx,0x000014(%esp)
		mov    %ecx,0x000020(%esp)
		mov    %esi,0x000018(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _02a127_jump

	_029fba_jump:
		cmp    $0x000001,%si
		jb     _029fcd_jump
		jbe    _029f77_jump
		cmp    $0x000002,%si
		je     _029f94_jump
		jmp    _02a127_jump

	_029fcd_jump:
		test   %si,%si
		je     _029f51_jump
		jmp    _02a127_jump

	_029fdb_jump:
		xor    %ebx,%ebx
		mov    0x00006d(%edi),%bl
		test   %ebx,%ebx
		jne    _02a01d_jump
		mov    0x00006c(%edi),%bl
		cmp    $0x000001,%ebx
		jne    _02a01d_jump
		mov    0x000028(%edi),%ax
		add    $0x000070,%eax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%edi),%ax
		add    $0x0000b8,%eax
		mov    $0x000020,%edi
		mov    %eax,0x000008(%esp)
		mov    $0x000010,%eax
		mov    %edi,0x000018(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _02a127_jump

	_02a01d_jump:
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000018(%esp)
		mov    %ecx,0x00000c(%esp)
		jmp    _02a127_jump

	_02a02e_jump:
		xor    %ebx,%ebx
		mov    0x00006d(%edi),%bl
		test   %ebx,%ebx
		jne    _02a073_jump
		movzbl 0x00006c(%edi),%edi
		cmp    $0x000009,%edi
		je     _02a04a_jump
		cmp    $0x00000a,%edi
		je     _02a04a_jump
		cmp    $0x00000b,%edi
		jne    _02a073_jump

	_02a04a_jump:
		mov    $0xfffffff8,%eax
		mov    $0x000005,%ebx
		mov    $0x00001a,%ecx
		mov    $0x000008,%esi
		mov    %eax,0x000014(%esp)
		mov    %ebx,0x000020(%esp)
		mov    %ecx,0x000018(%esp)
		mov    %esi,0x00000c(%esp)
		jmp    _02a127_jump

	_02a073_jump:
		mov    $0x000001,%ebx
		mov    $0xfffffffb,%ecx
		mov    $0x000010,%esi
		mov    $0x00001e,%edi
		mov    %ebx,0x000014(%esp)
		mov    %ecx,0x000020(%esp)
		mov    %esi,0x000018(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _02a127_jump

	_02a09c_jump:
		mov    $0x000007,%esi
		xor    %ecx,%ecx
		mov    $0x000010,%edi
		mov    %ecx,0x000014(%esp)
		mov    %esi,0x000020(%esp)
		mov    %edi,0x000018(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _02a127_jump

	_02a0bd_jump:
		mov    $0x000002,%edi
		mov    $0x00000d,%eax
		xor    %esi,%esi
		mov    $0x000009,%ebx
		mov    %esi,0x000014(%esp)
		mov    %edi,0x000020(%esp)
		mov    %eax,0x000018(%esp)
		mov    %ebx,0x00000c(%esp)
		jmp    _02a127_jump

	_02a0e0_jump:
		cmp    $0x000002,%si
		jb     _02a0f0_jump
		jbe    _02a09c_jump
		cmp    $0x000003,%si
		je     _02a0bd_jump
		jmp    _02a127_jump

	_02a0f0_jump:
		cmp    $0x000001,%si
		je     _02a02e_jump
		jmp    _02a127_jump

	_02a0fc_jump:
		mov    0x000010(%esp),%ebx
		cmp    $0x000051,%bx
		jb     _02a11d_jump
		jbe    _029eff_jump
		cmp    $0x000064,%bx
		jb     _02a127_jump
		jbe    _02a0e0_jump
		cmp    $0x0000d9,%bx
		je     _02a0e0_jump
		jmp    _02a127_jump

	_02a11d_jump:
		cmp    $0x000014,%bx
		je     _029f21_jump

	_02a127_jump:
		mov    0x000004(%esp),%eax
		mov    0x000014(%esp),%ecx
		mov    (%esp),%ebx
		add    %ecx,%eax
		mov    %ax,(%ebx)
		mov    0x000020(%esp),%esi
		mov    0x000008(%esp),%eax
		add    %esi,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000024(%esp),%edi
		mov    0x000018(%esp),%eax
		mov    0x000038(%esp),%ebx
		add    %edi,%eax
		mov    %ax,(%ebx)
		mov    0x00000c(%esp),%eax
		add    0x00001c(%esp),%eax
		mov    0x00003c(%esp),%ebx
		mov    %ax,(%ebx)
		mov    %edx,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_02a170_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    0x000048(%esp),%esi
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000030(%esp)
		mov    %bx,0x00001c(%esp)
		mov    %cx,0x000034(%esp)
		mov    0x000060(%esi),%ax
		mov    $0xffffffff,%edi
		cmp    $0x000071,%ax
		jb     _02a4a7_jump
		jbe    _02a1cc_jump
		cmp    $0x0000c6,%ax
		jb     _02a4b1_jump
		jbe    _02a269_jump
		cmp    $0x0000c8,%ax
		jb     _02a4b1_jump
		cmp    $0x0000c9,%ax
		jbe    _02a269_jump
		jmp    _02a4b1_jump

	_02a1cc_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x00006b(%esi),%bl
		mov    %bl,%al
		mov    _094854_data(,%eax,2),%dx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _02a4b1_jump
		movswl %bx,%ebp
		mov    0x00002c(%esi),%cx
		mov    _0948a2_data(,%ebp,2),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%bl
		push   %eax
		add    %ecx,%ebx
		mov    _09487a_data(,%ebp,2),%eax
		add    %ebx,%edx
		mov    _0948a4_data(,%ebp,2),%bx
		sar    $0x000010,%eax
		sub    %ebx,%edx
		push   %eax
		movswl %dx,%edx
		mov    0x00003a(%esp),%ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%dl
		sar    %eax
		add    %ebx,%edx
		sar    $0x000010,%ecx
		sub    %eax,%edx
		mov    0x000026(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		mov    0x00003a(%esp),%edx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _02a4b1_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02a269_jump:
		mov    0x000034(%esp),%eax
		cmp    _0c25aa_data,%ax
		jne    _02a358_jump
		lea    0x000028(%esp),%eax
		push   %eax
		lea    0x000028(%esp),%eax
		push   %eax
		lea    0x000018(%esp),%eax
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x000014(%esp),%ecx
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00001c(%esp),%ebx
		push   %eax
		lea    0x000040(%esp),%edx
		mov    %esi,%eax
		call   _01dda0_func
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000036(%esp),%eax
		mov    0x00002a(%esp),%ebp
		sar    $0x000010,%eax
		sar    $0x000010,%ebp
		push   %eax
		mov    0x00002a(%esp),%eax
		mov    0x000042(%esp),%esi
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,0x000010(%esp)
		mov    0x00003e(%esp),%eax
		mov    %esi,%ecx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%ebx
		mov    %eax,0x000014(%esp)
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _02a30e_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02a30e_jump:
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00001e(%esp),%eax
		mov    0x00000c(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%edx
		push   %eax
		mov    %esi,%ecx
		mov    %ebp,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _02a4b1_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02a358_jump:
		lea    0x000028(%esp),%eax
		push   %eax
		lea    0x000028(%esp),%eax
		push   %eax
		lea    0x000018(%esp),%eax
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x000014(%esp),%ecx
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00001c(%esp),%ebx
		push   %eax
		lea    0x000040(%esp),%edx
		mov    %esi,%eax
		call   _01dda0_func
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x000012(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000036(%esp),%edx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _02a3cf_jump
		mov    $0x000006,%edi

	_02a3cf_jump:
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x000016(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000036(%esp),%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _02a41a_jump
		mov    $0x000001,%edi

	_02a41a_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02a4b1_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%eax
		jne    _02a4b1_jump
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00001c(%esp),%eax
		lea    0x000030(%esp),%ebx
		push   %eax
		mov    $0x000009,%edx
		mov    %esi,%eax
		call   _01da90_func
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x000012(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000036(%esp),%edx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _02a4b1_jump
		mov    $0x000009,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02a4a7_jump:
		cmp    $0x00002e,%ax
		je     _02a269_jump

	_02a4b1_jump:
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02a4bc_func:
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000044(%esp),%esi
		mov    %eax,0x000010(%esp)
		mov    %dx,0x000028(%esp)
		mov    %bx,0x00002c(%esp)
		mov    %cx,0x000004(%esp)
		xor    %edx,%edx
		mov    %dx,0x000024(%esp)
		mov    %dx,(%esp)
		mov    %dx,0x000008(%esp)
		mov    %dx,0x000020(%esp)
		mov    $0xffffffff,%eax
		mov    0x00005c(%esi),%dx
		mov    %eax,0x00000c(%esp)
		test   %dx,%dx
		je     _02a74b_jump
		mov    %esi,%eax
		call   _029030_func
		mov    %eax,0x000018(%esp)
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _02a57b_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000032,%eax
		je     _02a52d_jump
		cmp    $0x0000e3,%eax
		jne    _02a548_jump

	_02a52d_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _02a577_jump

	_02a548_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x0000a5,%eax
		jne    _02a57b_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000040,0x000007(%ebx,%eax,1)
		je     _02a57b_jump

	_02a577_jump:
		decl   0x000018(%esp)

	_02a57b_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%edx
		mov    %ax,0x000030(%esp)
		test   %dx,%dx
		jg     _02a5a7_jump
		jmp    _02a8db_jump

	_02a590_jump:
		mov    0x000030(%esp),%edi
		inc    %edi
		mov    0x000018(%esp),%edx
		mov    %di,0x000030(%esp)
		cmp    %dx,%di
		jge    _02a8db_jump

	_02a5a7_jump:
		mov    0x00002e(%esp),%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		call   _029048_func
		mov    0x000006(%eax),%ch
		mov    %eax,%edi
		test   $0x000004,%ch
		je     _02a5cb_jump
		xor    %eax,%eax
		mov    0x000010(%esp),%ax
		cmp    $0x00005e,%eax
		jne    _02a590_jump

	_02a5cb_jump:
		testb  $0x000002,0x000006(%edi)
		je     _02a690_jump
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		imul   $0x00000c,%eax,%edx
		mov    0x000004(%esi),%eax
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		xor    %ebx,%ebx
		and    $0x00003f,%dh
		mov    %dx,%bx
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000007(%edi),%dl
		mov    0x000003(%eax,%edx,4),%al
		and    $0x0000ff,%eax
		je     _02a6ec_jump
		lea    0x000024(%esp),%eax
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000028(%esp),%ebx
		mov    %esi,%eax
		call   _01da90_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02a65e_jump
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000004(%edi),%al
		sub    %eax,%edx
		mov    (%edi),%bx
		mov    %edx,%eax
		mov    0x000020(%esp),%ecx
		sub    %ebx,%eax
		add    %eax,%ecx
		mov    %cx,0x000020(%esp)
		jmp    _02a66c_jump

	_02a65e_jump:
		mov    0x000020(%esp),%edx
		mov    (%edi),%ax
		add    %eax,%edx
		mov    %dx,0x000020(%esp)

	_02a66c_jump:
		mov    0x000008(%esp),%edx
		mov    0x000002(%edi),%ax
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,0x000024(%esp)
		jmp    _02a6ec_jump

	_02a690_jump:
		mov    0x000028(%esi),%ax
		mov    (%edi),%bx
		add    %ebx,%eax
		mov    %ax,0x000020(%esp)
		mov    0x00002c(%esi),%ax
		mov    0x000002(%edi),%cx
		add    %ecx,%eax
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,0x000024(%esp)
		testb  $0x000008,0x000081(%esi)
		je     _02a6ec_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		mov    0x00001e(%esp),%edx
		add    %ebx,%eax
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000020(%esp)

	_02a6ec_jump:
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000032(%esp),%edx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _02a590_jump
		xor    %eax,%eax
		mov    0x000007(%edi),%al
		mov    %eax,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02a74b_jump:
		xor    %eax,%eax
		mov    0x000079(%esi),%al
		cmp    $0x0000fe,%eax
		jne    _02a7fd_jump
		lea    0x000024(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000024(%esp),%edx
		mov    %esi,%eax
		call   _029218_func
		testb  $0x000008,0x000081(%esi)
		je     _02a79d_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    -0x000002(%esp),%ebx
		add    %edx,%eax
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000020(%esp)

	_02a79d_jump:
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000032(%esp),%edx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _02a7e8_jump
		movswl %ax,%edx
		jmp    _02a7ed_jump

	_02a7e8_jump:
		mov    $0xffffffff,%edx

	_02a7ed_jump:
		mov    %edx,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02a7fd_jump:
		cmp    $0x0000ff,%eax
		jne    _02a8db_jump
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x000008(%edx,%eax,4),%ax
		xor    %ebx,%ebx
		and    $0x00003f,%ah
		mov    %bx,0x00001c(%esp)
		mov    %eax,0x000014(%esp)
		test   %ax,%ax
		jg     _02a854_jump
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02a83d_jump:
		mov    0x00001c(%esp),%ebx
		inc    %ebx
		mov    0x000014(%esp),%ecx
		mov    %bx,0x00001c(%esp)
		cmp    %cx,%bx
		jge    _02a8db_jump

	_02a854_jump:
		mov    0x00001a(%esp),%edi
		sar    $0x000010,%edi
		mov    %esi,%eax
		mov    %edi,%edx
		call   _029068_func
		test   %ax,%ax
		je     _02a83d_jump
		lea    0x000024(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000024(%esp),%ebx
		push   %eax
		mov    %edi,%edx
		mov    %esi,%eax
		call   _029e34_func
		test   %ax,%ax
		je     _02a83d_jump
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000032(%esp),%edx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _02a83d_jump
		mov    0x00001c(%esp),%eax
		mov    %eax,0x00000c(%esp)

	_02a8db_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_02a8e8_func:
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    0x000028(%esp),%esi
		mov    %ax,0x000014(%esp)
		mov    %dx,0x000018(%esp)
		mov    %ebx,%edi
		mov    %cx,0x000010(%esp)
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		mov    %eax,%edx
		cwtl   
		test   %eax,%eax
		je     _02a966_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		mov    %eax,%edx

	_02a966_jump:
		test   %dx,%dx
		je     _02a972_jump
		xor    %eax,%eax
		mov    0x000079(%esi),%al
		jmp    _02a977_jump

	_02a972_jump:
		mov    $0xffffffff,%eax

	_02a977_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02a980_func:
		push   %esi
		push   %edi
		mov    0x000010(%esp),%edi
		mov    %eax,%esi
		mov    %edx,%eax
		xor    %edx,%edx
		mov    0x000079(%edi),%dl
		cmp    $0x0000fd,%dx
		jb     _02a9e1_jump
		jbe    _02a9a1_jump
		cmp    $0x0000ff,%dx
		jbe    _02a9c0_jump
		jmp    _02a9e1_jump

	_02a9a1_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _02a170_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02a9c0_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		sar    $0x000010,%edx
		movswl %cx,%ecx
		push   %edx
		movswl %ax,%edx
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    %si,%ax
		call   _02a4bc_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02a9e1_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _02a8e8_func
		pop    %edi
		pop    %esi
		ret    $0x000008



_02aa00_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    0x000060(%eax),%ax
		cmp    $0x00009a,%ax
		jb     _02ac80_jump
		jbe    _02aafb_jump
		cmp    $0x0000a0,%ax
		jb     _02ac5d_jump
		jbe    _02ac31_jump
		cmp    $0x0000a9,%ax
		jb     _02accb_jump
		jbe    _02aa41_jump
		cmp    $0x000102,%ax
		jne    _02accb_jump

	_02aa41_jump:
		mov    $0x000001,%ecx
		mov    $0x000002,%esi
		xor    %ebx,%ebx
		mov    $0x0000ff,%edi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		mov    %di,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02aa74_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		mov    $0x000003,%esi
		xor    %eax,%eax
		mov    $0x000004,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    $0x0000ff,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,0x00000a(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02aabb_jump:
		mov    $0x000005,%eax
		mov    $0x000006,%ebx
		mov    $0x000007,%ecx
		mov    $0x000008,%esi
		mov    $0x0000ff,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    %di,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02aafb_jump:
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		mov    $0x000003,%ecx
		mov    $0x000004,%esi
		mov    $0x0000ff,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    %di,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ab3b_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		mov    $0x000003,%esi
		mov    $0x0000ff,%edi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		mov    %di,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ab71_jump:
		mov    $0x000001,%ebx
		xor    %eax,%eax
		mov    $0x0000ff,%ecx
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ab9a_jump:
		testb  $0x000008,_0c1bcd_data
		je     _02abe0_jump
		mov    $0x000004,%edi
		mov    $0x000005,%eax
		mov    $0x000006,%ebx
		mov    $0x000007,%ecx
		mov    $0x000008,%esi
		mov    %di,(%esp)
		mov    %ax,0x000002(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000006(%esp)
		mov    $0x000009,%edi
		mov    %si,0x000008(%esp)
		mov    %di,0x00000a(%esp)
		jmp    _02ac1b_jump

	_02abe0_jump:
		mov    $0x000009,%esi
		mov    $0x000008,%edi
		mov    $0x000007,%eax
		mov    $0x000006,%ebx
		mov    $0x000005,%ecx
		mov    %si,(%esp)
		mov    %di,0x000002(%esp)
		mov    %ax,0x000004(%esp)
		mov    %bx,0x000006(%esp)
		mov    $0x000004,%esi
		mov    %cx,0x000008(%esp)
		mov    %si,0x00000a(%esp)

	_02ac1b_jump:
		movw   $0x0000ff,0x00000c(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ac31_jump:
		mov    $0x000004,%eax
		mov    $0x000005,%ebx
		mov    $0x0000ff,%ecx
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ac5d_jump:
		cmp    $0x00009b,%ax
		jbe    _02ab3b_jump
		cmp    $0x00009f,%ax
		je     _02ab9a_jump
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ac80_jump:
		cmp    $0x000051,%ax
		jb     _02acb1_jump
		jbe    _02aa41_jump
		cmp    $0x00007d,%ax
		jb     _02accb_jump
		jbe    _02aa74_jump
		cmp    $0x00008a,%ax
		je     _02aabb_jump
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02acb1_jump:
		cmp    $0x000010,%ax
		jb     _02accb_jump
		cmp    $0x000011,%ax
		jbe    _02ab71_jump
		cmp    $0x000018,%ax
		je     _02ab71_jump

	_02accb_jump:
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02acdc_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %bx,0x000008(%esp)
		xor    %ebx,%ebx
		mov    _0c1b74_data,%cx
		mov    _0c1bb4_data,%bl
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    %cx,0x000004(%esp)
		mov    _0c1bb5_data,%bl
		mov    _0c1b78_data,%cx
		add    %ebx,%ecx
		mov    %cx,(%esp)
		mov    %edx,%ebx
		mov    $0x000008,%edx
		add    %eax,%ebx
		mov    _0c3315_data,%cl
		dec    %ebx
		test   $0x000002,%cl
		je     _02ad2c_jump
		mov    $0x000004,%edx

	_02ad2c_jump:
		movswl %bx,%esi
		movswl %ax,%edi
		movswl %dx,%edx
		mov    %edi,%ebx
		lea    (%esi,%edx,1),%ecx
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02ad54_jump
		cmp    %ecx,%eax
		jg     _02ad54_jump
		mov    $0x000001,%eax
		jmp    _02ad56_jump

	_02ad54_jump:
		xor    %eax,%eax

	_02ad56_jump:
		test   %eax,%eax
		jne    _02ad61_jump
		mov    $0x002710,%eax
		jmp    _02adb2_jump

	_02ad61_jump:
		mov    %esi,%ecx
		mov    %edi,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02ad76_jump
		cmp    %ecx,%eax
		jg     _02ad76_jump
		mov    $0x000001,%eax
		jmp    _02ad78_jump

	_02ad76_jump:
		xor    %eax,%eax

	_02ad78_jump:
		test   %eax,%eax
		je     _02ad99_jump
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02ad92_jump
		neg    %eax

	_02ad92_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_02ad99_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02adaf_jump
		neg    %eax

	_02adaf_jump:
		neg    %eax
		dec    %eax

	_02adb2_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02adbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0c3315_data,%ah
		mov    %dx,0x000014(%esp)
		test   $0x000002,%ah
		je     _02ade3_jump
		movw   $0x000004,0x000014(%esp)

	_02ade3_jump:
		lea    0x000008(%esp),%eax
		mov    %esp,%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _02ae0b_jump
		neg    %eax

	_02ae0b_jump:
		mov    _094732_data(,%eax,2),%eax
		sar    $0x000010,%eax
		call   _053270_func
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x00000e(%esp),%edi
		sar    $0x000009,%edx
		mov    _0c1b78_data,%cx
		movswl %dx,%ebx
		sar    $0x000010,%edi
		sub    %ebx,%eax
		mov    %dx,0x000004(%esp)
		sar    %eax
		mov    %edx,%ebx
		xor    %edx,%edx
		add    %eax,%edi
		mov    _0c1bb4_data,%dl
		mov    %di,0x000010(%esp)
		add    %edi,%ebx
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x000074(%esi),%al
		dec    %ebx
		add    %eax,%edi
		mov    _0c1b74_data,%ax
		movswl %bx,%ebp
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000012(%esp),%ebx
		mov    _0c1bb5_data,%al
		sar    $0x000010,%ebx
		add    %eax,%ecx
		mov    0x00000e(%esp),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		mov    %ecx,0x00000c(%esp)
		sub    %ebx,%eax
		lea    (%ebx,%ebp,1),%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    %edi,(%esp)
		cmp    %ebx,%eax
		jl     _02aea6_jump
		cmp    %ecx,%eax
		jg     _02aea6_jump
		mov    $0x000001,%eax
		jmp    _02aea8_jump

	_02aea6_jump:
		xor    %eax,%eax

	_02aea8_jump:
		test   %eax,%eax
		je     _02af61_jump
		mov    (%esp),%eax
		sub    0x00000c(%esp),%eax
		movswl %ax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02aec2_jump
		neg    %eax

	_02aec2_jump:
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _02af61_jump
		mov    %ebx,%eax
		mov    0x00000e(%esp),%ebx
		sar    %eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000008(%esp)
		movsbw 0x000076(%esi),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _02aefb_jump
		sar    %cl,%ax
		jmp    _02af04_jump

	_02aefb_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02af04_jump:
		mov    0x00000e(%esp),%ebx
		mov    %ax,0x000008(%esp)
		mov    %ebp,%ecx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02af23_jump
		cmp    %ecx,%eax
		jg     _02af23_jump
		mov    $0x000001,%eax
		jmp    _02af25_jump

	_02af23_jump:
		xor    %eax,%eax

	_02af25_jump:
		test   %eax,%eax
		je     _02af40_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02af3a_jump
		neg    %eax

	_02af3a_jump:
		mov    %ax,0x000054(%esi)
		jmp    _02af67_jump

	_02af40_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02af51_jump
		neg    %eax

	_02af51_jump:
		neg    %eax
		mov    %ax,0x000054(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02af61_jump:
		movw   $0x002710,0x000054(%esi)

	_02af67_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02af74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0c3315_data,%ah
		mov    %dx,0x000008(%esp)
		test   $0x000002,%ah
		je     _02af9a_jump
		movw   $0x000004,0x000008(%esp)

	_02af9a_jump:
		mov    $0x002710,%ebx
		xor    %eax,%eax
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%al
		mov    0x000034(%esi),%cx
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x00001c(%esp)
		mov    _0c1bb5_data,%al
		mov    _0c1b78_data,%dx
		xor    %edi,%edi
		add    %eax,%edx
		mov    _0c1b96_data,%ax
		mov    %edx,0x000010(%esp)
		cmp    %cx,%ax
		jne    _02b0c9_jump
		lea    0x000018(%esp),%eax
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000018(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00008a,%eax
		je     _02b024_jump
		cmp    $0x00009a,%eax
		je     _02b024_jump
		cmp    $0x00009b,%eax
		jne    _02b03a_jump

	_02b024_jump:
		mov    0x000014(%esp),%ebx
		mov    (%esp),%ecx
		sub    $0x00000a,%ebx
		add    $0x000005,%ecx
		mov    %bx,0x000014(%esp)
		mov    %cx,(%esp)

	_02b03a_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00009f,%eax
		jne    _02b0ad_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _02b0ad_jump
		mov    0x00006b(%esi),%al
		cmp    $0x000009,%eax
		jle    _02b0ad_jump
		cmp    $0x000028,%eax
		jge    _02b0ad_jump
		xor    %ebx,%ebx
		mov    _0c1b74_data,%edx
		mov    _0c1bb4_data,%bl
		mov    0x000012(%esp),%eax
		add    %edx,%ebx
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		sub    %eax,%ebx
		movswl %bx,%eax
		test   %eax,%eax
		jle    _02b090_jump
		decl   _0c1b74_data
		jmp    _02b098_jump

	_02b090_jump:
		jge    _02b098_jump
		incl   _0c1b74_data

	_02b098_jump:
		xor    %eax,%eax
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%al
		add    %eax,%edx
		mov    %dx,0x00001c(%esp)

	_02b0ad_jump:
		mov    0x000002(%esp),%ebx
		mov    0x000012(%esp),%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02acdc_func
		mov    %eax,%ebx

	_02b0c9_jump:
		movswl %bx,%eax
		cmp    $0x002710,%eax
		jne    _02b1d5_jump

	_02b0d7_jump:
		movswl %di,%edx
		mov    %esi,%eax
		call   _02aa00_func
		inc    %edi
		mov    %ax,0x00000c(%esp)
		movswl %bx,%eax
		test   %eax,%eax
		jge    _02b0f0_jump
		neg    %eax

	_02b0f0_jump:
		cmp    $0x000007,%eax
		jle    _02b1d5_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0x0000ff,%edx
		je     _02b1d5_jump
		lea    0x000018(%esp),%eax
		push   %eax
		lea    0x000018(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%ebx
		mov    %esi,%eax
		call   _01da90_func
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00008a,%eax
		je     _02b150_jump
		cmp    $0x00009a,%eax
		je     _02b150_jump
		cmp    $0x00009b,%eax
		jne    _02b166_jump

	_02b150_jump:
		mov    0x000014(%esp),%ebx
		mov    (%esp),%ecx
		sub    $0x00000a,%ebx
		add    $0x000005,%ecx
		mov    %bx,0x000014(%esp)
		mov    %cx,(%esp)

	_02b166_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000012(%esp),%ecx
		mov    0x000006(%esp),%edx
		mov    0x00001a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		add    %eax,%ecx
		sar    $0x000010,%ebx
		add    %edx,%ecx
		cmp    %ecx,%ebx
		jg     _02b1b6_jump
		sub    %edx,%eax
		cmp    %eax,%ebx
		jl     _02b1b6_jump
		mov    0x000010(%esp),%ebx
		sub    0x000004(%esp),%ebx
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00009f,%eax
		jne    _02b1bb_jump
		movswl %bx,%eax
		cmp    $0x000008,%eax
		jl     _02b1bb_jump
		cmp    $0x00000b,%eax
		jge    _02b1bb_jump
		xor    %ebx,%ebx
		jmp    _02b1bb_jump

	_02b1b6_jump:
		mov    $0x002710,%ebx

	_02b1bb_jump:
		movswl %bx,%eax
		cmp    $0x002710,%eax
		je     _02b0d7_jump
		mov    0x00000c(%esp),%al
		mov    %al,0x000075(%esi)
		jmp    _02b0d7_jump

	_02b1d5_jump:
		mov    %bx,0x000054(%esi)
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b1e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000010(%esp)
		andb   $0x0000f7,0x000081(%esi)
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01da90_func
		mov    0x000010(%esp),%al
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,%dh
		or     %al,%dh
		mov    $0x000037,%ebx
		mov    %dh,0x000081(%esi)
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000074(%esi),%al
		mov    %ebx,(%esp)
		add    %eax,%edx
		add    $0x000004,%ecx
		mov    %dx,0x000008(%esp)
		mov    %cx,0x000004(%esp)
		mov    0x000006(%esp),%ebx
		mov    0x000002(%esp),%eax
		mov    $0x000037,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _02acdc_func
		mov    %eax,%ebx
		cwtl   
		cmp    $0x002710,%eax
		je     _02b28b_jump
		movb   $0x000002,0x000075(%esi)

	_02b28b_jump:
		mov    %bx,0x000054(%esi)
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b298_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		je     _02b2b1_jump
		cmp    $0x000006,%eax
		jne    _02b324_jump

	_02b2b1_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00000c,%eax
		jge    _02b324_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    (%esp),%eax
		mov    $0x00002d,%ebx
		sub    $0x00002d,%eax
		mov    %dx,0x000008(%esp)
		movswl %ax,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    %ebx,(%esp)
		add    %edx,%eax
		mov    0x000006(%esp),%ebx
		mov    %ax,0x00000c(%esp)
		sar    $0x000010,%ebx
		mov    0x00000a(%esp),%eax
		mov    $0x00002d,%edx
		sar    $0x000010,%eax
		call   _02acdc_func
		jmp    _02b329_jump

	_02b324_jump:
		mov    $0x002710,%eax

	_02b329_jump:
		mov    _0c1b96_data,%dx
		cmp    0x000034(%esi),%dx
		jne    _02b37d_jump
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		cmp    $0x000006,%edx
		jne    _02b37d_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		cmp    $0x00000b,%edx
		jne    _02b37d_jump
		mov    $0xffffffff,%edi
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		mov    %di,_0c1b96_data
		call   _01d6f8_func
		mov    _0c1b8e_data,%dx
		sub    $0x00000a,%edx
		mov    $0x002710,%eax
		mov    %dx,_0c1b8e_data

	_02b37d_jump:
		mov    %ax,0x000054(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b38c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000008,_092239_data(,%eax,4)
		je     _02b3b1_jump
		mov    %esi,%eax
		call   _02af74_func
		jmp    _02b47b_jump

	_02b3b1_jump:
		cmp    $0x00006d,%eax
		je     _02b3bb_jump
		cmp    $0x000061,%eax
		jne    _02b3ca_jump

	_02b3bb_jump:
		mov    %esi,%eax
		call   _02b1e4_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b3ca_jump:
		cmp    $0x000083,%eax
		jne    _02b3e0_jump
		mov    %esi,%eax
		call   _02b298_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b3e0_jump:
		cmp    $0x0000fe,%eax
		jne    _02b3f6_jump
		mov    %esi,%eax
		call   _02adbc_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b3f6_jump:
		lea    0x000008(%esp),%eax
		mov    %esp,%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000008,%eax
		je     _02b445_jump
		cmp    $0x000086,%eax
		je     _02b445_jump
		cmp    $0x0000a7,%eax
		je     _02b445_jump
		cmp    $0x0000b1,%eax
		je     _02b445_jump
		cmp    $0x000006,%eax
		jne    _02b45d_jump

	_02b445_jump:
		mov    0x00000c(%esp),%ebx
		mov    0x000004(%esp),%ecx
		sub    $0x000002,%ebx
		add    $0x000004,%ecx
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000004(%esp)

	_02b45d_jump:
		mov    -0x000002(%esp),%ebx
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02acdc_func
		mov    %ax,0x000054(%esi)

	_02b47b_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b484_func:
		push   %edx
		call   _05cedc_func
		movb   $0x000001,_0c1f05_data
		xor    %eax,%eax
		mov    _0c1f01_data,%al
		test   %eax,%eax
		jne    _02b4ae_jump
		xor    %edx,%edx
		mov    _0c1ef0_data,%eax
		mov    %dx,_0c1efc_data
		mov    %dx,0x000040(%eax)

	_02b4ae_jump:
		pop    %edx
		ret    



_02b4b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		xor    %ah,%ah
		mov    %ah,0x000010(%esp)
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    _0c1ef0_data,%eax
		call   _01da90_func
		mov    _0c1ef0_data,%edx
		mov    0x00003e(%edx),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jl     _02b515_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%bl
		mov    0x000074(%edx),%al
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		sar    %eax
		add    %esi,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000028(%edx),%edi
		mov    0x000068(%edx),%al
		add    %edi,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		jmp    _02b540_jump

	_02b515_jump:
		jge    _02b549_jump
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000069(%edx),%al
		mov    0x000074(%edx),%bl
		add    %ebx,%eax
		sar    %eax
		add    0x00002c(%edx),%eax
		xor    %ebx,%ebx
		mov    0x000028(%edx),%ecx
		mov    0x000068(%edx),%bl
		add    %ecx,%ebx
		sar    $0x000004,%eax
		sar    $0x000004,%ebx
		cwtl   
		movswl %bx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax

	_02b540_jump:
		call   _01e4d8_func
		mov    %al,0x000010(%esp)

	_02b549_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		testb  $0x000002,_0921f8_data(%eax)
		je     _02b56c_jump
		call   _02b484_func
		mov    $0x000001,%eax
		call   _05cabc_func
		jmp    _02b6eb_jump

	_02b56c_jump:
		mov    _0c23c0_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0c1b34_data,%esi
		shl    $0x000002,%edx
		add    %edx,%esi
		mov    _0c248a_data,%dx
		xor    %edi,%edi
		test   %dx,%dx
		jg     _02b5ca_jump
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b59e_jump:
		inc    %edi
		movswl %di,%edx
		mov    _0c23c0_data(,%edx,2),%esi
		sar    $0x000010,%esi
		imul   $0x000084,%esi,%esi
		mov    _0c1b34_data,%edx
		mov    _0c248a_data,%bx
		add    %edx,%esi
		cmp    %bx,%di
		jge    _02b6eb_jump

	_02b5ca_jump:
		cmpw   $0x000000,_0c251e_data
		jne    _02b6eb_jump
		cmpw   $0x000000,_0c251c_data
		jne    _02b6eb_jump
		cmpb   $0x000000,_0c25a0_data
		jne    _02b6eb_jump
		cmpb   $0x000000,_0c25a1_data
		jne    _02b6eb_jump
		xor    %edx,%edx
		mov    0x00007e(%esi),%dl
		test   %edx,%edx
		je     _02b59e_jump
		xor    %edx,%edx
		mov    0x000076(%esi),%dl
		test   %edx,%edx
		je     _02b59e_jump
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		testb  $0x000008,0x000007(%ebx,%edx,8)
		je     _02b59e_jump
		mov    -0x000002(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    0x00000a(%esp),%ebx
		mov    $0x00005e,%eax
		push   %esi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		push   %edx
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _02a980_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _02b59e_jump
		xor    %ecx,%ecx
		mov    0x000060(%esi),%cx
		movswl %dx,%edx
		lea    0x000000(,%ecx,4),%ebx
		mov    %esi,%eax
		add    %ecx,%ebx
		movzbw 0x000076(%esi),%di
		call   *_0932b8_data(,%ebx,4)
		call   _02b484_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00000b,%edx
		je     _02b6bf_jump
		cmp    $0x00000a,%edx
		je     _02b6bf_jump
		movb   $0x000000,0x000072(%esi)

	_02b6bf_jump:
		xor    %eax,%eax
		movswl %di,%edx
		mov    0x000076(%esi),%al
		cmp    %edx,%eax
		jne    _02b6eb_jump
		xor    %edx,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000001,_09223b_data(,%eax,4)
		je     _02b6eb_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000d6,%eax
		sar    $0x000010,%edx
		call   _068654_func

	_02b6eb_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		nop

	_02b6f4_jump:
		ret    



_02b7a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    _0c1b78_data,%ebx
		mov    _0c1bb5_data,%dl
		add    %edx,%ebx
		mov    _0c24e4_data,%edx
		sar    $0x000010,%edx
		shl    $0x000004,%edx
		xor    %eax,%eax
		cmp    %edx,%ebx
		jge    _02b952_jump
		mov    _0c1b94_data,%ebx
		mov    _0c1b9e_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%ebx
		jne    _02b809_jump
		lea    0x000000(,%edx,4),%eax
		mov    _0c24ec_data,%ebx
		sub    %edx,%eax
		mov    0x000002(%ebx,%eax,2),%al
		and    $0x0000ff,%eax
		cmp    $0x000008,%eax
		sete   %al
		xor    %ah,%ah

	_02b809_jump:
		test   %ax,%ax
		jne    _02b952_jump
		mov    _0c24e2_data,%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c24ec_data,%ebx
		sub    %edx,%eax
		mov    0x000002(%ebx,%eax,2),%al
		and    $0x0000ff,%eax
		cmp    $0x000008,%eax
		sete   %bl
		xor    %bh,%bh
		mov    %ebx,%eax
		test   %bx,%bx
		jne    _02b952_jump
		xor    %ebx,%ebx
		lea    0x000001(%edx),%esi
		mov    _0c1bb9_data,%bl
		lea    -0x000001(%edx),%ecx
		cmp    $0x000002,%ebx
		jne    _02b867_jump
		mov    _0c1b8a_data,%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		je     _02b8a4_jump

	_02b867_jump:
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    _0c24ec_data,%ecx
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		cmp    $0x000008,%eax
		je     _02b89b_jump
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		cmp    $0x000008,%eax
		jne    _02b8a2_jump

	_02b89b_jump:
		mov    $0x000001,%eax
		jmp    _02b8a4_jump

	_02b8a2_jump:
		xor    %eax,%eax

	_02b8a4_jump:
		test   %ax,%ax
		jne    _02b952_jump
		testb  $0x000002,_0c3315_data
		jne    _02b952_jump
		xor    %ebx,%ebx
		mov    _0c1bb9_data,%bl
		mov    _0c1b58_data,%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    _0c1bb8_data,%bl
		testb  $0x000040,0x000007(%ecx,%ebx,8)
		jne    _02b952_jump
		mov    _0c24e2_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		mov    %edx,%eax
		sub    %ebx,%edx
		test   %edx,%edx
		jge    _02b904_jump

	_02b8f5_jump:
		mov    _0c24e2_data,%ebx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		test   %edx,%edx
		jl     _02b8f5_jump

	_02b904_jump:
		test   %eax,%eax
		jge    _02b915_jump
		mov    _0c24e2_data,%ebx
		sar    $0x000010,%ebx
		add    %ebx,%eax
		jmp    _02b904_jump

	_02b915_jump:
		mov    %edx,%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		mov    _0c24ec_data,%ebx
		mov    0x000002(%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		cmp    $0x000008,%edx
		je     _02b946_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    0x000002(%ebx,%eax,2),%al
		and    $0x0000ff,%eax
		cmp    $0x000008,%eax
		jne    _02b950_jump

	_02b946_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b950_jump:
		xor    %eax,%eax

	_02b952_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b958_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		xor    %eax,%eax
		mov    _0c1b78_data,%edx
		mov    _0c1bb5_data,%al
		add    %eax,%edx
		mov    _0c24e4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %eax,%edx
		jge    _02bab4_jump
		mov    _0c1b9e_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24ec_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		cmp    $0x000018,%eax
		jne    _02b9eb_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		mov    $0x000001,%cl
		call   _01d6f8_func
		xor    %edi,%edi
		mov    _0c1b78_data,%edx
		mov    %cl,_0c2502_data
		mov    %di,_0c1b8e_data
		add    $0x000005,%edx
		mov    %di,_0c1b8c_data
		mov    %edx,_0c1b78_data
		call   _067fc0_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b9eb_jump:
		xor    %edx,%edx
		mov    _0c1bb1_data,%dl
		cmp    $0x000018,%edx
		jne    _02ba2e_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		xor    %ecx,%ecx
		mov    $0x000001,%bh
		mov    %cx,_0c1b8e_data
		mov    %cx,_0c1b8c_data
		mov    %bh,_0c2502_data
		call   _067fc0_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ba2e_jump:
		cmp    $0x000019,%eax
		jne    _02ba5e_jump
		mov    $0x00001f,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    _0c24ae_data,%ax
		mov    %ax,_0c25d0_data
		mov    %ax,_0c25ce_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ba5e_jump:
		testb  $0x000080,_0c3315_data
		je     _02bab4_jump
		testb  $0x000002,_0921f8_data(%eax)
		je     _02bab4_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _02ba88_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000026,%eax
		je     _02bab4_jump

	_02ba88_jump:
		mov    $0x000026,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    $0x000001,%bl
		xor    %edx,%edx
		mov    %bl,_0c2502_data
		mov    %dx,_0c1b8e_data
		mov    %dx,_0c1b8c_data

	_02bab4_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02babc_func:
		push   %ebx
		push   %edx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0c1b8e_data
		mov    %dx,_0c1b8c_data
		mov    %ah,_0c1bc9_data
		pop    %edx
		pop    %ebx
		ret    



_02baec_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		test   %al,%al
		je     _02bb47_jump
		call   _0667bc_func
		xor    %ebx,%ebx
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%bl
		add    %edx,%ebx

	_02bb0c_jump:
		xor    %eax,%eax
		mov    _0c1b78_data,%edx
		mov    _0c1bb5_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func
		and    $0x0000ff,%eax
		cmp    $0x00000a,%eax
		jne    _02bb3f_jump
		decl   _0c1b78_data
		jmp    _02bb0c_jump

	_02bb3f_jump:
		xor    %ah,%ah
		mov    %ah,_0c1bae_data

	_02bb47_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000006,%eax
		jne    _02bb81_jump
		mov    $0x000008,%ebx
		mov    %eax,%edx
		mov    $_0c1b4c_data,%eax
		xor    %edi,%edi
		call   _01d6f8_func
		mov    %di,_0c1b8e_data
		xor    %bl,%bl
		mov    %di,_0c1b8c_data
		mov    %bl,_0c1f04_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02bb81_jump:
		testb  $0x000004,_0c1bcd_data
		je     _02be4b_jump
		cmp    $0x000003,%eax
		jne    _02bbb5_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000016,%eax
		je     _02be4b_jump
		cmp    $0x000020,%eax
		je     _02be4b_jump
		cmp    $0x000026,%eax
		je     _02be4b_jump

	_02bbb5_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _02bbd1_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00001f,%eax
		je     _02be4b_jump

	_02bbd1_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000040,0x000007(%ebx,%eax,1)
		je     _02bc25_jump
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _023f98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		je     _02bc25_jump
		mov    $0x00003d,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		jmp    _02bc34_jump

	_02bc25_jump:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax

	_02bc34_jump:
		call   _01d6f8_func
		xor    %ebx,%ebx
		mov    %bx,_0c2602_data
		test   %ecx,%ecx
		jne    _02bc92_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _02bc5b_jump
		mov    _0c1bb8_data,%al
		cmp    $0x00003d,%eax
		je     _02bc92_jump

	_02bc5b_jump:
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02bc7b_jump
		movw   $0x00fffe,_0c1b8c_data
		jmp    _02bc84_jump

	_02bc7b_jump:
		movw   $0x000002,_0c1b8c_data

	_02bc84_jump:
		movw   $0x00fffd,_0c1b8e_data
		jmp    _02bde9_jump

	_02bc92_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _02bcab_jump
		mov    _0c1bb8_data,%al
		cmp    $0x00003d,%eax
		je     _02bde9_jump

	_02bcab_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x0000b4,%eax
		jne    _02bcc2_jump
		call   _06c9ec_func
		jmp    _02bd96_jump

	_02bcc2_jump:
		cmp    $0x000096,%eax
		jne    _02bcd3_jump
		call   _06e8f0_func
		jmp    _02bd96_jump

	_02bcd3_jump:
		cmp    $0x0000c6,%eax
		je     _02bd91_jump
		cmp    $0x0000c8,%eax
		jne    _02bcef_jump
		mov    $0xffffffff,%eax
		jmp    _02bd96_jump

	_02bcef_jump:
		cmp    $0x000064,%eax
		jne    _02bd18_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _02bd96_jump
		mov    $0xffffffff,%eax
		jmp    _02bd96_jump

	_02bd18_jump:
		cmp    $0x000078,%eax
		jne    _02bd29_jump
		mov    %ecx,%eax
		call   _0202ac_func
		jmp    _02bd96_jump

	_02bd29_jump:
		cmp    $0x0000bb,%eax
		jne    _02bd39_jump
		mov    %ecx,%eax
		call   _05c038_func
		jmp    _02bd96_jump

	_02bd39_jump:
		cmp    $0x0000d1,%eax
		je     _02bd91_jump
		cmp    $0x0000d2,%eax
		jne    _02bd4e_jump
		mov    $0xffffffff,%eax
		jmp    _02bd96_jump

	_02bd4e_jump:
		mov    0x00003e(%ecx),%edx
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02bd6e_jump
		mov    $0x000001,%eax
		jg     _02bd6e_jump
		neg    %eax

	_02bd6e_jump:
		movswl %ax,%edx
		test   %edx,%edx
		jne    _02bd96_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02bd91_jump
		mov    $0xffffffff,%eax
		jmp    _02bd96_jump

	_02bd91_jump:
		mov    $0x000001,%eax

	_02bd96_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		testb  $0x000004,_092239_data(,%edx,4)
		je     _02bdad_jump
		mov    $0x000005,%edx
		jmp    _02bdc1_jump

	_02bdad_jump:
		cmp    $0x0000b4,%edx
		jne    _02bdbc_jump
		mov    $0x000004,%edx
		jmp    _02bdc1_jump

	_02bdbc_jump:
		mov    $0x000002,%edx

	_02bdc1_jump:
		cwtl   
		cmp    $0x000001,%eax
		jne    _02bdd0_jump
		mov    %dx,_0c1b8c_data
		jmp    _02bddf_jump

	_02bdd0_jump:
		cmp    $0xffffffff,%eax
		jne    _02bddf_jump
		mov    %edx,%eax
		neg    %eax
		mov    %ax,_0c1b8c_data

	_02bddf_jump:
		inc    %edx
		neg    %edx
		mov    %dx,_0c1b8e_data

	_02bde9_jump:
		mov    $0x000001,%cl
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		xor    %esi,%esi
		mov    %cl,_0c1b1e_data
		mov    %ax,_0c24f4_data
		mov    %dx,_0c2504_data
		mov    %dx,_0c1b96_data
		mov    %si,_0c1b94_data
		mov    _0c3314_data,%dl
		xor    %ch,%ch
		xor    %al,%al
		mov    %ch,_0c1bbd_data
		mov    %ch,_0c1bbe_data
		xor    %ah,%ah
		mov    %ch,_0c1f04_data
		mov    %ax,_0c25b4_data
		test   $0x000008,%dl
		je     _02be44_jump
		mov    %cl,_0c2503_data

	_02be44_jump:
		xor    %eax,%eax
		call   _062ad4_func

	_02be4b_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02be50_func:
		push   %ecx
		push   %esi
		mov    0x000081(%eax),%cl
		shl    $0x000004,%cl
		shr    $0x000007,%cl
		and    $0x0000ff,%ecx
		jne    _02be75_jump
		xor    %ecx,%ecx
		mov    (%edx),%si
		mov    0x00007a(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		jmp    _02be82_jump

	_02be75_jump:
		movswl (%ebx),%esi
		movswl (%edx),%ecx
		sar    %esi
		add    %esi,%ecx
		mov    %cx,(%edx)

	_02be82_jump:
		movswl (%ebx),%edx
		mov    0x00007a(%eax),%al
		sar    %edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    %ax,(%ebx)
		pop    %esi
		pop    %ecx
		ret    

_02be98_switch:
		.long   _02c163_case
		.long   _02c045_case
		.long   _02c11a_case
		.long   _02bfd4_case
		.long   _02bfd4_case
		.long   _02c0a3_case




_02beb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		lea    0x000008(%esp),%eax
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		mov    0x000060(%esi),%ax
		mov    %eax,%edx
		cmp    $0x00007b,%ax
		jb     _02c5db_jump
		jbe    _02c1ac_jump
		cmp    $0x0000b5,%ax
		jb     _02c555_jump
		jbe    _02c233_jump
		cmp    $0x0000d4,%ax
		jb     _02c511_jump
		jbe    _02c4bf_jump
		cmp    $0x0000e2,%ax
		jb     _02c4f5_jump
		jbe    _02c40a_jump
		cmp    $0x0000ef,%ax
		je     _02bf84_jump
		jmp    _02c4e3_jump

	_02bf21_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    %edx
		sar    $0x000011,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%edi
		sar    $0x000010,%eax
		sub    $0x000010,%edi
		add    %edx,%eax
		mov    %di,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,(%esp)
		addw   $0x000040,0x000008(%esp)
		jmp    _02bfd4_case

	_02bf63_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %eax,%ebx
		add    %eax,%edx
		add    $0x0000c8,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x000008(%esp)
		jmp    _02bfd4_case

	_02bf84_jump:
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02bfd4_case
		mov    0x00006c(%esi),%al
		cmp    $0x000004,%eax
		jne    _02bfd4_case
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%ebx
		mov    %bx,0x000008(%esp)

	_02bfd4_case:
		mov    _0c25a8_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c25a6_data,%eax
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%ecx
		push   %eax
		mov    _0c25a4_data,%eax
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    _0c25a2_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _02c712_jump
		xor    %eax,%eax
		mov    0x00007b(%esi),%al
		cmp    $0x000002,%eax
		jge    _02c6f5_jump
		test   %eax,%eax
		jne    _02c6e3_jump
		movb   $0x000001,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c045_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02bfd4_case
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _02bfd4_case
		xor    %eax,%eax
		mov    0x000008(%esp),%ecx
		mov    0x00007a(%esi),%al
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x00007a(%esi),%al
		sub    %eax,%edi
		mov    %di,0x000004(%esp)
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		jmp    _02bfd4_case

	_02c0a3_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _02bfd4_case
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _02bfd4_case
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		dec    %edx
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		mov    %ax,0x00000c(%esp)
		sar    $0x000011,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000014,%edi
		add    %edx,%eax
		mov    %di,(%esp)
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		testb  $0x000008,0x000081(%esi)
		jne    _02bfd4_case
		sub    %di,0x00000c(%esp)
		jmp    _02bfd4_case

	_02c11a_case:
		mov    0x000008(%esp),%ecx
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x00007a(%esi),%al
		mov    -0x000002(%esp),%edx
		add    %ecx,%eax
		sar    $0x000011,%edx
		sub    %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    (%esp),%eax
		mov    %eax,%edx
		add    %eax,%edx
		mov    %di,0x000004(%esp)
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    %ecx,%ebx
		mov    0x00007a(%esi),%al
		add    %eax,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _02bfd4_case

	_02c163_case:
		xor    %eax,%eax
		mov    0x000008(%esp),%ebx
		mov    0x00007a(%esi),%al
		mov    0x000004(%esp),%ecx
		add    %ebx,%eax
		sub    %eax,%ecx
		mov    %cx,0x000004(%esp)
		xor    %eax,%eax
		mov    %ebx,%edi
		mov    0x00007a(%esi),%al
		add    %eax,%edi
		mov    %di,0x000008(%esp)

	_02c187_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    (%esp),%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x00007a(%esi),%al
		sub    %eax,%ebx
		mov    %bx,0x00000c(%esp)
		jmp    _02bfd4_case

	_02c1ac_jump:
		mov    0x000075(%esi),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _02bfd4_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02be98_switch(,%eax,4)

	_02c1c6_jump:
		testb  $0x000008,0x000081(%esi)
		je     _02c1d8_jump
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		jmp    _02c1e1_jump

	_02c1d8_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		neg    %edx

	_02c1e1_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		sar    $0x000010,%eax
		sub    $0x000032,%ebx
		add    $0x000032,%ecx
		mov    %bx,0x000004(%esp)
		add    %edx,%eax
		mov    %cx,0x000008(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _02bfd4_case

	_02c20c_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		je     _02bfd4_case
		mov    _0c24e6_data,%ax
		xor    %edx,%edx
		shl    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		mov    %ax,0x000008(%esp)
		jmp    _02bfd4_case

	_02c233_jump:
		mov    0x000028(%esi),%dx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000068(%esi),%al
		mov    %bx,0x000004(%esp)
		add    %eax,%edx
		mov    _0c24e6_data,%ax
		mov    %dx,0x00000c(%esp)
		mov    $0x000010,%edx
		shl    $0x000004,%eax
		mov    %dx,(%esp)
		mov    %ax,0x000008(%esp)
		jmp    _02bfd4_case

	_02c266_jump:
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    0x00007a(%esi),%dl
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    %esp,%ebx
		sub    %edx,%eax
		lea    0x00000c(%esp),%edx
		mov    %ax,0x000004(%esp)
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c2a4_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		xor    %edx,%edx
		mov    %ax,0x000008(%esp)
		mov    %al,%dl
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)

	_02c2c2_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    (%esp),%ecx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%edi
		mov    0x00007a(%esi),%al
		sub    %eax,%edi
		mov    %di,0x00000c(%esp)
		jmp    _02bfd4_case

	_02c2e7_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02c30e_jump
		mov    0x00007a(%esi),%al
		mov    -0x000002(%esp),%edx
		sar    %eax
		sar    $0x000011,%edx
		sub    %eax,%edx
		mov    0x00000a(%esp),%eax
		jmp    _02c319_jump

	_02c30e_jump:
		mov    -0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000011,%edx

	_02c319_jump:
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		sar    %eax
		mov    0x000006(%esp),%edx
		mov    %ax,(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000011,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		jmp    _02bfd4_case

	_02c354_jump:
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		mov    0x000008(%esp),%eax
		add    %eax,%eax
		mov    %ax,0x000008(%esp)
		jmp    _02bfd4_case

	_02c371_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02c396_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%ecx
		mov    0x00007a(%esi),%al
		sub    %eax,%ecx
		mov    %cx,0x00000c(%esp)
		jmp    _02c3b1_jump

	_02c396_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000096,%edx
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)

	_02c3b1_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		add    $0x000096,%eax
		mov    0x000006(%esp),%edx
		mov    %ax,(%esp)
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00007a(%esi),%al
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,0x000008(%esp)
		jmp    _02bfd4_case

	_02c3ee_jump:
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02be50_func
		mov    %cx,0x000008(%esp)
		jmp    _02bfd4_case

	_02c40a_jump:
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02be50_func
		mov    0x00000c(%esp),%edi
		mov    0x000004(%esp),%eax
		mov    %cx,0x000008(%esp)
		add    $0x000046,%edi
		add    $0x000032,%eax
		mov    %di,0x00000c(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _02bfd4_case

	_02c440_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02c45b_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000018,%eax
		je     _02c46f_jump
		cmp    $0x00001e,%eax
		je     _02c46f_jump
		cmp    $0x00000b,%eax
		je     _02c46f_jump

	_02c45b_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _02c494_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _02c494_jump

	_02c46f_jump:
		mov    $0x00000a,%eax
		mov    0x00000c(%esp),%edx
		mov    (%esp),%ebx
		mov    %ax,0x000008(%esp)
		sub    $0x000028,%edx
		add    $0x000050,%ebx
		mov    %dx,0x00000c(%esp)
		mov    %bx,(%esp)
		jmp    _02bfd4_case

	_02c494_jump:
		mov    $0x0000c8,%ebx
		mov    0x00000c(%esp),%ecx
		mov    (%esp),%edi
		mov    %bx,0x000008(%esp)
		sub    $0x000082,%ecx
		add    $0x000104,%edi
		mov    %cx,0x00000c(%esp)
		mov    %di,(%esp)
		jmp    _02bfd4_case

	_02c4bf_jump:
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		movw   $0x0000fa,0x000008(%esp)
		jmp    _02bfd4_case

	_02c4d8_jump:
		addw   $0x000014,0x000008(%esp)
		jmp    _02bfd4_case

	_02c4e3_jump:
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c4f5_jump:
		cmp    $0x0000e1,%ax
		je     _02c3ee_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c511_jump:
		cmp    $0x0000c3,%ax
		jb     _02c539_jump
		jbe    _02c440_jump
		cmp    $0x0000c7,%ax
		je     _02c233_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c539_jump:
		cmp    $0x0000b8,%ax
		je     _02c40a_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c555_jump:
		cmp    $0x000099,%ax
		jb     _02c5af_jump
		jbe    _02bf21_jump
		cmp    $0x0000ac,%ax
		jb     _02c589_jump
		jbe    _02c354_jump
		cmp    $0x0000ae,%ax
		je     _02c3ee_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c589_jump:
		cmp    $0x0000a8,%ax
		jb     _02c4e3_jump
		cmp    $0x0000a9,%ax
		jbe    _02c187_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c5af_jump:
		cmp    $0x000084,%ax
		jb     _02c4e3_jump
		jbe    _02c1c6_jump
		cmp    $0x000093,%ax
		je     _02c20c_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c5db_jump:
		cmp    $0x000038,%ax
		jb     _02c667_jump
		jbe    _02c354_jump
		cmp    $0x000051,%ax
		jb     _02c63b_jump
		jbe    _02c187_jump
		cmp    $0x000064,%ax
		jb     _02c61f_jump
		jbe    _02c371_jump
		cmp    $0x000074,%ax
		je     _02c2e7_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c61f_jump:
		cmp    $0x000059,%ax
		je     _02c4d8_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c63b_jump:
		cmp    $0x00003d,%ax
		jb     _02c4e3_jump
		jbe    _02c266_jump
		cmp    $0x00004d,%ax
		je     _02bf84_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c667_jump:
		cmp    $0x00000e,%ax
		jb     _02c6b7_jump
		jbe    _02c2a4_jump
		cmp    $0x000015,%ax
		jb     _02c69b_jump
		jbe    _02bfd4_case
		cmp    $0x000035,%ax
		je     _02bf63_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c69b_jump:
		cmp    $0x000014,%ax
		je     _02c187_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c6b7_jump:
		cmp    $0x000005,%ax
		jb     _02c4e3_jump
		jbe    _02c187_jump
		cmp    $0x00000c,%ax
		je     _02c2c2_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02be50_func
		jmp    _02bfd4_case

	_02c6e3_jump:
		cmp    $0x000001,%eax
		jne    _02c728_jump
		movb   $0x000002,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c6f5_jump:
		mov    %al,%bl
		inc    %bl
		xor    %eax,%eax
		mov    %bl,%al
		mov    %bl,0x00007b(%esi)
		cmp    $0x000014,%eax
		jne    _02c728_jump
		movb   $0x000002,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c712_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		movb   $0x000000,0x00007b(%esi)
		cmp    $0x000015,%eax
		jne    _02c728_jump
		andb   $0x0000fe,0x000081(%esi)

	_02c728_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi

	_02c72d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02c734_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000032(%eax),%edx
		mov    $0x0000cc,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    0x000060(%ecx),%ax
		mov    %eax,%edx
		cmp    $0x000039,%ax
		jb     _02c905_jump
		jbe    _02c794_jump
		cmp    $0x000069,%ax
		jb     _02c89a_jump
		cmp    $0x00006b,%ax
		jbe    _02c789_jump
		cmp    $0x000091,%ax
		jb     _02c864_jump
		jbe    _02c789_jump
		cmp    $0x0000bc,%ax
		jb     _02c84f_jump
		jbe    _02c789_jump
		cmp    $0x0000f3,%ax
		jne    _02c79e_jump

	_02c789_jump:
		andb   $0x0000f7,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c794_jump:
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		cmp    $0x000004,%edx
		jne    _02c789_jump

	_02c79e_jump:
		mov    %ecx,%eax
		call   _01dea4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c7a9_jump:
		movb   $0x000001,0x00007f(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c7b1_jump:
		mov    %ecx,%eax
		call   _01dea4_func
		testb  $0x000008,0x000081(%ecx)
		je     _02c7d6_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c7d6_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c7eb_jump:
		mov    0x000075(%ecx),%al
		cmp    $0x000006,%al
		jb     _02c802_jump
		jbe    _02c72d_jump
		cmp    $0x000007,%al
		je     _02c72d_jump
		jmp    _02c80e_jump

	_02c802_jump:
		cmp    $0x000002,%al
		jb     _02c80e_jump
		cmp    $0x000003,%al
		jbe    _02c72d_jump

	_02c80e_jump:
		mov    %ecx,%eax
		call   _01dea4_func
		testb  $0x000008,0x000081(%ecx)
		je     _02c7d6_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c833_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    $0x000007,%edx
		call   _01dea4_func
		mov    %ecx,%eax
		call   _056614_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c84f_jump:
		cmp    $0x0000a5,%ax
		je     _02c7b1_jump
		mov    %ecx,%eax
		call   _01dea4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c864_jump:
		cmp    $0x00007b,%ax
		jb     _02c885_jump
		jbe    _02c7eb_jump
		cmp    $0x00008e,%ax
		je     _02c789_jump
		mov    %ecx,%eax
		call   _01dea4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c885_jump:
		cmp    $0x00006d,%ax
		je     _02c789_jump
		mov    %ecx,%eax
		call   _01dea4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c89a_jump:
		cmp    $0x00003f,%ax
		jb     _02c8e6_jump
		jbe    _02c789_jump
		cmp    $0x000052,%ax
		jb     _02c8c7_jump
		jbe    _02c789_jump
		cmp    $0x000065,%ax
		je     _02c789_jump
		mov    %ecx,%eax
		call   _01dea4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c8c7_jump:
		cmp    $0x000044,%ax
		jb     _02c79e_jump
		cmp    $0x000045,%ax
		jbe    _02c789_jump
		mov    %ecx,%eax
		call   _01dea4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c8e6_jump:
		cmp    $0x00003a,%ax
		jbe    _02c789_jump
		cmp    $0x00003c,%ax
		je     _02c833_jump
		mov    %ecx,%eax
		call   _01dea4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c905_jump:
		cmp    $0x00001b,%ax
		jb     _02c978_jump
		jbe    _02c789_jump
		cmp    $0x000029,%ax
		jb     _02c953_jump
		jbe    _02c789_jump
		cmp    $0x00002d,%ax
		jb     _02c93e_jump
		jbe    _02c789_jump
		cmp    $0x00002f,%ax
		je     _02c789_jump
		mov    %ecx,%eax
		call   _01dea4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c93e_jump:
		cmp    $0x00002a,%ax
		je     _02c789_jump
		mov    %ecx,%eax
		call   _01dea4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c953_jump:
		cmp    $0x00001d,%ax
		jb     _02c789_jump
		jbe    _02c789_jump
		cmp    $0x00001e,%ax
		je     _02c7a9_jump
		mov    %ecx,%eax
		call   _01dea4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c978_jump:
		cmp    $0x000009,%ax
		jb     _02c9c4_jump
		jbe    _02c7b1_jump
		cmp    $0x000016,%ax
		jb     _02c9a5_jump
		jbe    _02c789_jump
		cmp    $0x000019,%ax
		jb     _02c79e_jump
		andb   $0x0000f7,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c9a5_jump:
		cmp    $0x000010,%ax
		jb     _02c79e_jump
		cmp    $0x000011,%ax
		jbe    _02c789_jump
		mov    %ecx,%eax
		call   _01dea4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c9c4_jump:
		test   %ax,%ax
		jbe    _02c7b1_jump
		cmp    $0x000001,%ax
		je     _02c789_jump
		mov    %ecx,%eax
		call   _01dea4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02c9e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000052(%eax),%dx
		mov    0x000034(%eax),%bx
		mov    %edx,%ecx
		cmp    %bx,%dx
		je     _02ca72_jump

	_02c9fb_jump:
		movswl %cx,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000002,_092239_data(,%eax,4)
		je     _02ca2b_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _06a694_func
		test   %al,%al
		jne    _02ca54_jump

	_02ca2b_jump:
		mov    %ebx,%eax
		call   _053c9c_func
		mov    0x000081(%ebx),%dh
		or     $0x000004,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		mov    $0x000001,%edx
		call   _04abbc_func
		mov    %ebx,%eax
		call   _02c734_func

	_02ca54_jump:
		mov    0x000032(%ebx),%eax
		mov    _0c1b30_data,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		mov    (%edx,%eax,2),%cx
		mov    %ebx,%eax
		call   _04e880_func
		cmp    %cx,%si
		jne    _02c9fb_jump

	_02ca72_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ca78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c23c0_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0c248a_data,%dx
		xor    %esi,%esi
		test   %dx,%dx
		jle    _02ca72_jump
		jmp    _02cace_jump

	_02caa6_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0c23c0_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		mov    _0c248a_data,%bx
		add    %edx,%eax
		cmp    %bx,%si
		jge    _02ca72_jump

	_02cace_jump:
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		testb  $0x000004,_092238_data(,%edx,4)
		jne    _02caa6_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000020,0x000007(%ebx,%edx,8)
		je     _02caa6_jump
		mov    _0c25a6_data,%ecx
		mov    _0c25a4_data,%ebx
		mov    _0c25a2_data,%edx
		push   %eax
		mov    _0c25a8_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02a980_func
		jmp    _02caa6_jump



_02cb30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c23c0_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b34_data,%esi
		add    %edx,%eax
		xor    %edi,%edi
		shl    $0x000002,%eax
		mov    _0c248a_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jg     _02cb8f_jump
		jmp    _02cd36_jump

	_02cb63_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0c23c0_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%esi
		mov    _0c248a_data,%bx
		add    %eax,%esi
		cmp    %bx,%di
		jge    _02cd36_jump

	_02cb8f_jump:
		cmpw   $0x000000,_0c251e_data
		jne    _02cd36_jump
		cmpw   $0x000000,_0c251c_data
		jne    _02cd36_jump
		cmpb   $0x000000,_0c25a0_data
		jne    _02cd36_jump
		cmpb   $0x000000,_0c25a1_data
		jne    _02cd36_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000020,0x000007(%ebx,%eax,1)
		je     _02cb63_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		lea    0x000000(,%eax,4),%edx
		testb  $0x000010,_09223a_data(%edx)
		jne    _02cd5e_jump
		cmpb   $0x000000,_0c1bc9_data
		jne    _02cb63_jump
		mov    _0c1ba0_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _02cb63_jump
		xor    %ebx,%ebx
		mov    _0c1bb9_data,%bl
		mov    _0c1b58_data,%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    _0c1bb8_data,%bl
		testb  $0x000008,0x000007(%ecx,%ebx,8)
		je     _02cb63_jump
		testb  $0x000004,_092238_data(%edx)
		jne    _02cb63_jump
		cmp    $0x0000aa,%eax
		jne    _02cc75_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000003,%eax
		jg     _02cc6e_jump
		test   %eax,%eax
		jne    _02cc75_jump

	_02cc6e_jump:
		mov    $0xffffffff,%eax
		jmp    _02ccc1_jump

	_02cc75_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000093,%eax
		jne    _02cc92_jump
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		je     _02cc92_jump
		mov    $0xffffffff,%eax
		jmp    _02ccc1_jump

	_02cc92_jump:
		mov    _0c25a8_data,%eax
		mov    _0c25a6_data,%ecx
		mov    _0c25a4_data,%ebx
		mov    _0c25a2_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02a980_func

	_02ccc1_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02cb63_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		imul   $0x000014,%eax,%edx
		mov    %esi,%eax
		call   *_0932bc_data(%edx)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000008,_092238_data(,%eax,4)
		je     _02cb63_jump
		mov    _0c1ba0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02cb63_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _02cd1d_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000020,%eax
		je     _02cb63_jump

	_02cd1d_jump:
		testb  $0x000080,_0c3315_data
		jne    _02cb63_jump
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02baec_func

	_02cd36_jump:
		cmpb   $0x000000,_0c1bc9_data
		je     _02cd44_jump
		call   _02babc_func

	_02cd44_jump:
		mov    _0c1ba0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _02cd58_jump
		decw   _0c1ba2_data

	_02cd58_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02cd5e_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _02cd7a_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000020,%eax
		je     _02cb63_jump

	_02cd7a_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000051,%eax
		je     _02cd8c_jump
		cmp    $0x0000a9,%eax
		jne    _02cd90_jump

	_02cd8c_jump:
		xor    %eax,%eax
		jmp    _02cdbf_jump

	_02cd90_jump:
		mov    _0c25a8_data,%eax
		mov    _0c25a6_data,%ecx
		mov    _0c25a4_data,%ebx
		mov    _0c25a2_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02a980_func

	_02cdbf_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02cb63_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		imul   $0x000014,%eax,%edx
		mov    %esi,%eax
		call   *_0932bc_data(%edx)
		jmp    _02cb63_jump



_02cde0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000010,_09223a_data(,%eax,4)
		je     _02ce76_jump
		xor    %ebx,%ebx
		mov    0x00006d(%edx),%bl
		mov    0x00000c(%edx),%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%edx),%bl
		testb  $0x000020,0x000007(%eax,%ebx,8)
		je     _02ce76_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _02ce2b_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000020,%eax
		je     _02ce76_jump

	_02ce2b_jump:
		mov    _0c1ba2_data,%bx
		movswl %bx,%eax
		cmp    $0x00003c,%eax
		jge    _02ce68_jump
		cmp    $0xffffffff,%eax
		jne    _02ce68_jump
		mov    $0x000001,%eax
		call   _02baec_func
		mov    _0c25ae_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000003,%edx
		je     _02ce76_jump
		cmp    $0x000004,%edx
		je     _02ce76_jump
		movw   $0x00003c,_0c1ba2_data
		pop    %edx
		pop    %ebx
		ret    

	_02ce68_jump:
		xor    %eax,%eax
		call   _02baec_func
		mov    %bx,_0c1ba2_data

	_02ce76_jump:
		pop    %edx
		pop    %ebx
		ret    



_02ce7c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		xor    %ah,%ah
		lea    0x000010(%esp),%ecx
		mov    %ah,0x000024(%esp)
		lea    0x000014(%esp),%eax
		lea    0x000020(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%edx
		mov    %edi,%eax
		call   _01d610_func
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		cmp    $0x000008,%eax
		je     _02cebf_jump
		cmp    $0x000086,%eax
		je     _02cebf_jump
		cmp    $0x0000a7,%eax
		jne    _02cef1_jump

	_02cebf_jump:
		mov    0x00001c(%esp),%edx
		mov    0x000020(%esp),%ebx
		mov    0x000010(%esp),%ecx
		mov    0x000014(%esp),%esi
		add    $0x00000a,%edx
		add    $0x000014,%ebx
		sub    $0x000014,%ecx
		sub    $0x000019,%esi
		mov    %dx,0x00001c(%esp)
		mov    %bx,0x000020(%esp)
		mov    %cx,0x000010(%esp)
		mov    %si,0x000014(%esp)
		jmp    _02cf1f_jump

	_02cef1_jump:
		mov    0x00001c(%esp),%edx
		mov    0x000020(%esp),%ebx
		mov    0x000010(%esp),%ecx
		mov    0x000014(%esp),%eax
		add    %esi,%edx
		add    %esi,%ebx
		mov    %dx,0x00001c(%esp)
		add    %esi,%esi
		mov    %bx,0x000020(%esp)
		sub    %esi,%ecx
		sub    %esi,%eax
		mov    %cx,0x000010(%esp)
		mov    %ax,0x000014(%esp)

	_02cf1f_jump:
		mov    _0c23c0_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    %ax,0x000018(%esp)
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%esi
		shl    $0x000002,%eax
		mov    _0c248a_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jg     _02cf8b_jump
		jmp    _02d26e_jump

	_02cf52_jump:
		mov    0x000018(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000018(%esp)
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    _0c23c0_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%esi
		mov    _0c248a_data,%cx
		add    %eax,%esi
		cmp    %cx,%bx
		jge    _02d26e_jump

	_02cf8b_jump:
		cmp    %esi,%edi
		jne    _02d24c_jump
		jmp    _02cf52_jump

	_02cf95_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		je     _02d263_jump
		test   %eax,%eax
		jne    _02cfb3_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		je     _02d263_jump

	_02cfb3_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _02d263_jump
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		test   %ax,%ax
		je     _02d263_jump
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%ecx
		push   %eax
		mov    0x000026(%esp),%eax
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _02d263_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movb   $0x000004,0x000075(%esi)
		movw   $0x000000,0x00004c(%esi)
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x00000b,0x000074(%esi)
		or     $0x000020,%bh
		mov    %bh,0x000081(%esi)
		mov    _0c1b96_data,%ax
		cmp    0x000034(%edi),%ax
		jne    _02d089_jump
		call   _063fb0_func

	_02d089_jump:
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		cmp    $0x000002,%eax
		jne    _02d0c3_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02d0b2_jump
		mov    $0x000003,%edx
		mov    %eax,%ebx
		jmp    _02d0bc_jump

	_02d0b2_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02d0bc_jump:
		mov    %esi,%eax
		call   _056614_func

	_02d0c3_jump:
		mov    $0x000009,%edx
		mov    %edi,%eax
		mov    $0x000001,%cl
		call   _01d6e8_func
		mov    %cl,0x000024(%esp)
		movl   $0x000000,0x000024(%edi)
		cmpb   $0x000000,0x000024(%esp)
		je     _02cf52_jump
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02d0f0_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		test   %ax,%ax
		je     _02d263_jump
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		cmp    $0x000068,%eax
		jne    _02d263_jump
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%ecx
		push   %eax
		mov    0x000026(%esp),%eax
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _02d263_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _02d186_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%eax
		je     _02d263_jump

	_02d186_jump:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02d1e1_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    0x000028(%edi),%ebx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000068(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02d1c2_jump
		mov    $0x000001,%eax
		jg     _02d1c2_jump
		neg    %eax

	_02d1c2_jump:
		test   %eax,%eax
		jl     _02d1e1_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %edi,%eax
		movb   $0x000001,0x00007d(%esi)
		call   _056614_func
		movw   $0x000008,0x000040(%esi)

	_02d1e1_jump:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02d263_jump
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%ecx
		lea    (%eax,%ecx,1),%edx
		mov    0x000028(%edi),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x000068(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02d219_jump
		mov    $0x000001,%eax
		jg     _02d219_jump
		neg    %eax

	_02d219_jump:
		test   %eax,%eax
		jge    _02d263_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %edi,%eax
		movb   $0x000001,0x00007d(%esi)
		call   _056614_func
		movw   $0x00fff8,0x000040(%esi)
		cmpb   $0x000000,0x000024(%esp)
		je     _02cf52_jump
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02d24c_jump:
		mov    0x000060(%esi),%ax
		test   %ax,%ax
		jbe    _02cf95_jump
		cmp    $0x0000d6,%ax
		je     _02d0f0_jump

	_02d263_jump:
		cmpb   $0x000000,0x000024(%esp)
		je     _02cf52_jump

	_02d26e_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02d280_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		movswl %bx,%ebx
		mov    0x00002c(%eax),%esi
		add    %ebx,%esi
		mov    _0c24e2_data,%ebx
		sar    $0x000004,%esi
		sar    $0x000010,%ebx
		imul   %ebx,%esi
		mov    0x000028(%eax),%edi
		movswl %cx,%ebx
		add    %edi,%ebx
		sar    $0x000004,%ebx
		mov    0x000058(%eax),%cx
		add    %esi,%ebx
		xor    %edx,%edx
		cmp    %cx,%bx
		je     _02d2bd_jump
		mov    $0x000001,%edx
		mov    %bx,0x000058(%eax)

	_02d2bd_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02d2c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    0x000040(%eax),%di
		mov    $0x0000ff,%ah
		xor    %edx,%edx
		mov    %ah,0x000004(%esp)
		mov    0x000060(%ecx),%ax
		mov    %dx,(%esp)
		cmp    $0x00007b,%ax
		jb     _02d2f4_jump
		jbe    _02d37e_jump
		cmp    $0x0000ac,%ax
		je     _02d339_jump

	_02d2f4_jump:
		xor    %edx,%edx
		mov    0x000004(%esp),%dl
		cmp    $0x0000ff,%edx
		je     _02d330_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		call   _056614_func
		movb   $0x000000,0x000071(%ecx)
		mov    %di,0x000040(%ecx)
		mov    (%esp),%al
		mov    0x00002c(%ecx),%edx
		mov    %si,0x000042(%ecx)
		sub    $0x00000c,%edx
		mov    %al,0x000072(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01e6e4_func

	_02d330_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d339_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _02d2f4_jump
		mov    $0x00000f,%bh
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    %bh,0x000004(%esp)
		mov    $0x000003,%ebx
		call   _01d6f8_func
		mov    $0x000005,%ebx
		mov    $0xfffffffd,%esi
		mov    %bx,(%esp)
		jmp    _02d2f4_jump

	_02d37e_jump:
		testb  $0x000002,0x00007d(%ecx)
		je     _02d2f4_jump
		mov    $0x000001,%ah
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		mov    %ah,0x000004(%esp)
		mov    %ecx,%eax
		mov    $0xfffffffd,%esi
		call   _01d6f8_func
		jmp    _02d2f4_jump



_02d3ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		call   _01d704_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _01d82c_func
		movswl %di,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _02d3f8_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02d280_func
		test   %ax,%ax
		je     _02d3f8_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _056614_func

	_02d3f8_jump:
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		movzbl 0x000070(%ecx),%esi
		mov    %ah,0x000081(%ecx)
		cmp    $0x000014,%esi
		jne    _02d420_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_02d420_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d428_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    _0c3314_data,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02d514_jump
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _02d514_jump
		xor    %eax,%eax
		mov    _0c1b78_data,%edx
		mov    _0c1bb5_data,%al
		mov    0x00002c(%ecx),%ebx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _02d476_jump
		neg    %eax

	_02d476_jump:
		cmp    $0x0000fa,%eax
		jge    _02d514_jump
		call   _065508_func
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c260a_data
		mov    %ecx,%eax
		call   _0708ac_func
		cwtl   
		mov    %ax,0x00004e(%ecx)
		cmp    $0x000100,%eax
		jg     _02d4b7_jump
		jne    _02d4bf_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02d4bf_jump

	_02d4b7_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _02d4c5_jump

	_02d4bf_jump:
		movw   $0x000001,0x000052(%ecx)

	_02d4c5_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _02d4e3_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _02d4e3_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _056614_func

	_02d4e3_jump:
		xor    %ah,%ah
		mov    _0c1ef0_data,%ecx
		mov    %ah,_0c1f02_data
		mov    %ah,_0c1f01_data
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		xor    %eax,%eax
		mov    %dh,0x000081(%ecx)
		call   _05cabc_func

	_02d514_jump:
		pop    %ecx
		pop    %ebx
		ret    



_02d518_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _02d53c_jump
		movw   $0x000000,0x000042(%eax)
		xor    %ebx,%ebx
		xor    %edx,%edx
		movw   $0x000000,0x000040(%eax)
		call   _01d6f8_func
		pop    %edx
		pop    %ebx
		ret    

	_02d53c_jump:
		xor    %ebx,%ebx
		mov    0x000060(%eax),%bx
		cmp    $0x00000a,%ebx
		jne    _02d558_jump
		test   %edx,%edx
		jne    _02d558_jump
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		jne    _02d558_jump
		movw   $0x000000,0x000042(%eax)

	_02d558_jump:
		pop    %edx
		pop    %ebx
		ret    



_02d55c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x000060(%eax),%dx
		mov    0x00006c(%eax),%bl
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _02d5eb_jump
		movswl %bx,%eax
		cmp    $0x000002,%eax
		je     _02d5eb_jump
		cmp    $0x00000b,%eax
		je     _02d5eb_jump
		cmp    $0x000016,%eax
		je     _02d5eb_jump
		cmp    $0x000003,%eax
		je     _02d5eb_jump
		cmp    $0x000009,%eax
		je     _02d5eb_jump
		cmp    $0x000004,%eax
		je     _02d5eb_jump
		cmp    $0x000005,%eax
		je     _02d5eb_jump
		cmp    $0x000006,%eax
		je     _02d5eb_jump
		cmp    $0x00000f,%eax
		je     _02d5eb_jump
		cmp    $0x000010,%eax
		je     _02d5eb_jump
		cmp    $0x000011,%eax
		je     _02d5eb_jump
		movswl %dx,%eax
		cmp    $0x00000c,%eax
		je     _02d5d9_jump
		cmp    $0x00000e,%eax
		je     _02d5d9_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func

	_02d5d9_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		mov    %ecx,%eax
		call   _0248b8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d5eb_jump:
		movswl %bx,%eax
		cmp    $0x000003,%eax
		je     _02d5f8_jump
		cmp    $0x000006,%eax
		jne    _02d611_jump

	_02d5f8_jump:
		mov    0x000081(%ecx),%ah
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d611_jump:
		cmp    $0x00000b,%eax
		je     _02d645_jump
		cmp    $0x000002,%eax
		je     _02d645_jump
		cmp    $0x000016,%eax
		je     _02d645_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d624_jump:
		mov    %ecx,%eax
		call   _0702a4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d62f_jump:
		mov    %ecx,%eax
		call   _028a00_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d63a_jump:
		mov    %ecx,%eax
		call   _028be8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d645_jump:
		cmp    $0x00000e,%dx
		jb     _02d65f_jump
		jbe    _02d624_jump
		cmp    $0x00003c,%dx
		jb     _02d665_jump
		jbe    _02d62f_jump
		cmp    $0x00003d,%dx
		je     _02d63a_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d65f_jump:
		cmp    $0x00000c,%dx
		je     _02d624_jump

	_02d665_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d66c_func:
		push   %edx
		mov    0x000060(%eax),%dx
		cmp    $0x00000a,%dx
		jb     _02d71d_jump
		jbe    _02d685_jump
		cmp    $0x000018,%dx
		je     _02d6cc_jump
		pop    %edx
		ret    

	_02d685_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _02d723_jump
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		jne    _02d723_jump
		mov    0x000070(%eax),%dl
		cmp    $0x000003,%edx
		jne    _02d6c4_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02d6ad_jump:
		xor    %edx,%edx
		mov    0x000070(%eax),%dl
		cmp    $0x000003,%edx
		jne    _02d6bf_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02d6bf_jump:
		cmp    $0x000004,%edx
		jne    _02d723_jump

	_02d6c4_jump:
		movw   $0x000002,0x000042(%eax)
		pop    %edx
		ret    

	_02d6cc_jump:
		xor    %edx,%edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%edx
		je     _02d723_jump
		decw   0x000048(%eax)
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _02d703_jump
		xor    %edx,%edx
		mov    0x000070(%eax),%dl
		cmp    $0x000003,%edx
		jne    _02d6f6_jump
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_02d6f6_jump:
		cmp    $0x000004,%edx
		jne    _02d723_jump
		movw   $0x000001,0x000042(%eax)
		pop    %edx
		ret    

	_02d703_jump:
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000048(%eax)
		mov    0x00002c(%eax),%dx
		movb   $0x000002,0x000070(%eax)
		mov    %dx,0x00003e(%eax)
		pop    %edx
		ret    

	_02d71d_jump:
		cmp    $0x000001,%dx
		je     _02d6ad_jump

	_02d723_jump:
		pop    %edx
		ret    



_02d728_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		test   %edx,%edx
		jne    _02d74c_jump
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _02d74c_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x00000b,%edx
		jne    _02d74c_jump
		andb   $0x0000ef,0x000081(%eax)

	_02d74c_jump:
		pop    %edx
		ret    



_02d750_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		call   _02d728_func
		mov    0x000070(%edx),%al
		cmp    $0x000003,%al
		jb     _02d7e8_jump
		cmp    $0x000004,%al
		jbe    _02d7cb_jump
		cmp    $0x000014,%al
		jb     _02d558_jump
		jbe    _02d7d5_jump
		pop    %edx
		pop    %ebx
		ret    

	_02d77a_jump:
		and    $0x0000ff,%eax
		jne    _02d78a_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02d791_jump

	_02d78a_jump:
		orb    $0x000008,0x000081(%edx)

	_02d791_jump:
		movswl %bx,%eax
		cmp    $0x000001,%eax
		jne    _02d7aa_jump
		mov    %edx,%eax
		call   _04aad8_func
		mov    %edx,%eax
		call   _0248b8_func
		pop    %edx
		pop    %ebx
		ret    

	_02d7aa_jump:
		cmp    $0x000002,%eax
		jne    _02d7b9_jump
		mov    %edx,%eax
		call   _04aad8_func
		pop    %edx
		pop    %ebx
		ret    

	_02d7b9_jump:
		test   %eax,%eax
		jne    _02d558_jump
		mov    %edx,%eax
		call   _02d55c_func
		pop    %edx
		pop    %ebx
		ret    

	_02d7cb_jump:
		mov    %edx,%eax
		call   _02d66c_func
		pop    %edx
		pop    %ebx
		ret    

	_02d7d5_jump:
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02d7e8_jump:
		cmp    $0x000001,%al
		jbe    _02d77a_jump
		mov    %edx,%eax
		call   _02d518_func
		pop    %edx
		pop    %ebx
		ret    

_02d7f8_switch:
		.long   _02d82f_case
		.long   _02d92e_case
		.long   _02d905_case
		.long   _02d84b_case
		.long   _02d84b_case
		.long   _02d94f_case




_02d810_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000091,%eax
		je     _02d978_jump
		jmp    _02d84f_jump

	_02d82f_case:
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02d84b_case
		movb   $0x000003,0x00006c(%esi)
		movw   $0x00001e,0x000056(%esi)

	_02d84b_case:
		movb   $0x000000,0x000073(%esi)

	_02d84f_jump:
		mov    _0c1b74_data,%ax
		sub    0x000028(%esi),%ax
		mov    0x00002c(%esi),%bx
		mov    %eax,%edx
		mov    _0c1b78_data,%ax
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		add    $0x000020,%edx
		mov    0x000060(%esi),%ax
		add    $0x000019,%ebx
		cmp    $0x000091,%eax
		jne    _02d882_jump
		add    $0x000014,%edx
		add    $0x00000a,%ebx

	_02d882_jump:
		movswl %dx,%eax
		test   %eax,%eax
		setg   %al
		mov    %al,(%esp)
		movswl %bx,%eax
		test   %eax,%eax
		setg   %al
		mov    %al,0x000004(%esp)
		cmpb   $0x000000,(%esp)
		jne    _02d8a1_jump
		neg    %edx

	_02d8a1_jump:
		cmpb   $0x000000,0x000004(%esp)
		jne    _02d8aa_jump
		neg    %ebx

	_02d8aa_jump:
		movswl %dx,%eax
		cmp    $0x0000c8,%eax
		jle    _02d8e6_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _02d8c2_jump
		sar    %cl,%ax
		jmp    _02d8cb_jump

	_02d8c2_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02d8cb_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _02d8db_jump
		sar    %cl,%ax
		jmp    _02d8e4_jump

	_02d8db_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02d8e4_jump:
		mov    %eax,%ebx

	_02d8e6_jump:
		movswl %bx,%ebx
		test   %ebx,%ebx
		jne    _02d9ab_jump
		cmpb   $0x000000,(%esp)
		je     _02d990_jump
		mov    $0x00001b,%ecx
		jmp    _02da4e_jump

	_02d905_case:
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02d84b_case
		movb   $0x000000,0x00006c(%esi)
		mov    0x000050(%esi),%ax
		movw   $0x000064,0x000050(%esi)
		mov    %ax,0x000056(%esi)
		jmp    _02d84b_case

	_02d92e_case:
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02d84b_case
		movb   $0x000002,0x00006c(%esi)
		movw   $0x000005,0x000056(%esi)
		jmp    _02d84b_case

	_02d94f_case:
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02d84b_case
		movb   $0x000000,0x00006c(%esi)
		mov    0x000050(%esi),%ax
		movw   $0x000064,0x000050(%esi)
		mov    %ax,0x000056(%esi)
		jmp    _02d84b_case

	_02d978_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%al
		ja     _02d84b_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02d7f8_switch(,%eax,4)

	_02d990_jump:
		movswl %dx,%eax
		test   %eax,%eax
		je     _02d9a1_jump
		mov    $0x000009,%ecx
		jmp    _02da4e_jump

	_02d9a1_jump:
		mov    $0xffffffff,%ecx
		jmp    _02da4e_jump

	_02d9ab_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		cmpb   $0x000000,(%esp)
		je     _02da0d_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _02d9f5_jump
		movswl %cx,%eax
		cmp    $0x0000ff,%eax
		jle    _02d9e8_jump
		mov    $0x00001b,%ecx
		jmp    _02da4e_jump

	_02d9e8_jump:
		xor    %ecx,%ecx
		mov    _094754_data(%eax),%cl
		add    $0x00001b,%ecx
		jmp    _02da4e_jump

	_02d9f5_jump:
		movswl %cx,%eax
		cmp    $0x0000ff,%eax
		jle    _02da03_jump
		xor    %ecx,%ecx
		jmp    _02da4e_jump

	_02da03_jump:
		xor    %ecx,%ecx
		mov    _094754_data(%eax),%cl
		jmp    _02da4e_jump

	_02da0d_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _02da32_jump
		movswl %cx,%eax
		cmp    $0x0000ff,%eax
		jle    _02da25_jump
		mov    $0x000012,%ecx
		jmp    _02da4e_jump

	_02da25_jump:
		xor    %ecx,%ecx
		mov    _094754_data(%eax),%cl
		add    $0x000012,%ecx
		jmp    _02da4e_jump

	_02da32_jump:
		movswl %cx,%eax
		cmp    $0x0000ff,%eax
		jle    _02da43_jump
		mov    $0x000009,%ecx
		jmp    _02da4e_jump

	_02da43_jump:
		xor    %ecx,%ecx
		mov    _094754_data(%eax),%cl
		add    $0x000009,%ecx

	_02da4e_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _02dab1_jump
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02dab1_jump
		movb   $0x000001,0x00006c(%esi)
		mov    0x000036(%esi),%ax
		movw   $0x00003c,0x000056(%esi)
		cwtl   
		mov    0x000038(%esi),%dx
		cmp    $0xffffffcc,%eax
		jle    _02daab_jump
		movswl %dx,%edx
		cmp    $0xffffffdc,%edx
		jle    _02daab_jump
		cmp    $0x000131,%eax
		jge    _02daab_jump
		cmp    $0x0000c3,%edx
		jge    _02daab_jump
		movswl %cx,%ebx
		mov    0x00002a(%esi),%edx
		mov    0x000026(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _070d64_func
		jmp    _02dab1_jump

	_02daab_jump:
		movw   $0x000028,0x000050(%esi)

	_02dab1_jump:
		movswl %cx,%eax
		cmp    $0xffffffff,%eax
		je     _02dabe_jump
		dec    %cl
		mov    %cl,0x00006b(%esi)

	_02dabe_jump:
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02dac8_func:
		push   %ebx
		mov    %eax,%ebx
		mov    0x000076(%eax),%ah
		dec    %ah
		mov    %ah,0x000076(%ebx)
		xor    %eax,%eax
		mov    0x000076(%ebx),%al
		test   %eax,%eax
		je     _02daf0_jump
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		movw   $0x000032,0x000056(%ebx)
		pop    %ebx
		ret    

	_02daf0_jump:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		pop    %ebx
		ret    

_02db00_switch:
		.long   _02dc83_case
		.long   _02dce3_case
		.long   _02db31_case
		.long   _02dbd5_case


	_02db31_case:
		xor    %ecx,%ecx
		mov    0x000028(%eax),%edi
		mov    0x000068(%eax),%cl
		lea    (%ecx,%edi,1),%ebp
		mov    0x00002c(%eax),%ecx
		mov    _0c24e2_data,%edi
		sar    $0x000004,%ecx
		sar    $0x000010,%edi
		imul   %ecx,%edi
		sub    $0x000008,%ebp
		sar    $0x000004,%ebp
		add    %ebp,%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0c24ec_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $0x0000ff,%ecx
		testb  $0x000001,_0921f8_data(%ecx)
		je     _02db7d_jump
		mov    $0x000001,%esi

	_02db7d_jump:
		mov    0x000028(%eax),%ebp
		xor    %ecx,%ecx
		mov    0x00002c(%eax),%edi
		mov    0x000068(%eax),%cl
		mov    _0c24e2_data,%eax
		sar    $0x000004,%edi
		sar    $0x000010,%eax
		imul   %edi,%eax
		add    %ebp,%ecx
		add    $0x000007,%ecx
		sar    $0x000004,%ecx
		add    %eax,%ecx
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    _0c24ec_data,%ecx
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _02dbca_jump
		mov    $0x000001,%esi

	_02dbca_jump:
		mov    %esi,%eax
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02dbd5_case:
		xor    %ecx,%ecx
		mov    0x000028(%eax),%edx
		mov    0x000068(%eax),%cl
		lea    (%ecx,%edx,1),%ebp
		mov    0x00002c(%eax),%ecx
		mov    _0c24e2_data,%edi
		add    $0x00009a,%ecx
		sar    $0x000010,%edi
		sar    $0x000004,%ecx
		imul   %edi,%ecx
		sub    $0x000008,%ebp
		sar    $0x000004,%ebp
		lea    (%ecx,%ebp,1),%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0c24ec_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $0x0000ff,%ecx
		testb  $0x000001,_0921f8_data(%ecx)
		je     _02dc28_jump
		mov    $0x000001,%esi

	_02dc28_jump:
		xor    %ecx,%ecx
		mov    0x000028(%eax),%ebx
		mov    0x000068(%eax),%cl
		lea    (%ecx,%ebx,1),%edi
		mov    0x00002c(%eax),%eax
		mov    _0c24e2_data,%ecx
		sar    $0x000004,%eax
		sar    $0x000010,%ecx
		imul   %ecx,%eax
		add    $0x000007,%edi
		sar    $0x000004,%edi
		lea    (%edi,%eax,1),%ecx
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    _0c24ec_data,%ecx
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _02dbca_jump
		mov    $0x000001,%esi
		mov    %esi,%eax
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02dc83_case:
		mov    $0x000006,%ebx
		xor    %edx,%edx
		jmp    _02dc90_jump

	_02dc8c_jump:
		add    $0x000010,%ebx
		inc    %edx

	_02dc90_jump:
		movswl %dx,%ecx
		cmp    $0x00000a,%ecx
		jge    _02dbca_jump
		xor    %ecx,%ecx
		mov    0x000028(%eax),%ebp
		mov    0x000068(%eax),%cl
		mov    0x00002c(%eax),%edi
		add    %ecx,%ebp
		movswl %bx,%ecx
		add    %ecx,%edi
		mov    _0c24e2_data,%ecx
		sar    $0x000004,%edi
		sar    $0x000010,%ecx
		imul   %edi,%ecx
		sub    $0x000010,%ebp
		sar    $0x000004,%ebp
		add    %ebp,%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0c24ec_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_0921f8_data(%edi)
		je     _02dc8c_jump
		mov    $0x000001,%esi
		jmp    _02dc8c_jump

	_02dce3_case:
		mov    $0x000006,%ebx
		xor    %edx,%edx
		jmp    _02dcf0_jump

	_02dcec_jump:
		add    $0x000010,%ebx
		inc    %edx

	_02dcf0_jump:
		movswl %dx,%ecx
		cmp    $0x00000a,%ecx
		jge    _02dbca_jump
		xor    %ecx,%ecx
		mov    0x000028(%eax),%edi
		mov    0x000068(%eax),%cl
		add    %edi,%ecx
		add    $0x000010,%ecx
		sar    $0x000004,%ecx
		mov    0x00002c(%eax),%ebp
		mov    %ecx,(%esp)
		movswl %bx,%ecx
		mov    _0c24e2_data,%edi
		add    %ebp,%ecx
		sar    $0x000010,%edi
		sar    $0x000004,%ecx
		imul   %edi,%ecx
		add    (%esp),%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0c24ec_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_0921f8_data(%edi)
		je     _02dcec_jump
		mov    $0x000001,%esi
		jmp    _02dcec_jump



_02dd48_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _02d750_func
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000004,%eax
		jne    _02ddc3_jump
		xor    %ebx,%ebx
		mov    0x00006b(%edx),%bl
		cmp    $0x00000e,%ebx
		jne    _02ddc3_jump
		xor    %ebx,%ebx
		mov    0x00006d(%edx),%bl
		lea    0x000000(,%ebx,4),%ecx
		mov    0x00000c(%edx),%ebx
		mov    (%ecx,%ebx,1),%ebx
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _02ddc3_jump
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff60,%eax
		jle    _02ddc3_jump
		cmp    $0x0000fa,%eax
		jge    _02ddc3_jump
		mov    0x000036(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0x000064,%eax
		jge    _02ddc3_jump
		mov    0x00002c(%edx),%ebx
		add    $0x000056,%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _04a984_func
		subl   $0x000056,0x00002c(%edx)

	_02ddc3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx

	_02ddc6_jump:
		ret    



_02ddc8_func:
		testb  $0x000001,_0c3316_data
		jne    _02ddc6_jump
		mov    _0c1b26_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02ddc6_jump
		mov    _0c1b28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02ddc6_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		je     _0506c0_jump
		cmp    $0x000001,%eax
		jne    _02ddc6_jump
		jmp    _0506c0_jump

_02de04_switch:
		.long   _02dfae_case
		.long   _02e075_case
		.long   _02de4a_case
		.long   _02def9_case




_02de14_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    0x000028(%eax),%si
		xor    %ecx,%ecx
		movzbw 0x000074(%eax),%di
		mov    0x000068(%eax),%cl
		xor    %ebx,%ebx
		add    %ecx,%esi
		mov    0x00002c(%eax),%cx
		sub    $0x000019,%esi
		add    %ecx,%edi
		cmp    $0x000003,%dx
		ja     _02e135_jump
		xor    %eax,%eax
		mov    %dx,%ax
		jmp    *%cs:_02de04_switch(,%eax,4)

	_02de4a_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _02e135_jump
		mov    _0c24e2_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24ec_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_0921f8_data(%edx)
		je     _02dea1_jump
		mov    $0x000001,%ebx

	_02dea1_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24ec_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_0921f8_data(%edx)
		je     _02dec9_jump
		mov    $0x000001,%ebx

	_02dec9_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		je     _02e135_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02def9_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _02e135_jump
		add    $0x000030,%ecx
		mov    _0c24e2_data,%edx
		sar    $0x000004,%ecx
		sar    $0x000010,%edx
		imul   %ecx,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c24ec_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		je     _02df53_jump
		mov    $0x000001,%ebx

	_02df53_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0c24ec_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		je     _02df7c_jump
		mov    $0x000001,%ebx

	_02df7c_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		je     _02e135_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02dfae_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _02e135_jump
		movswl %di,%eax
		mov    _0c24e2_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %eax,%edx
		sar    $0x000004,%ecx
		add    %ecx,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c24ec_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		je     _02e008_jump
		mov    $0x000001,%ebx

	_02e008_jump:
		mov    _0c24e2_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c24ec_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		je     _02e038_jump
		mov    $0x000001,%ebx

	_02e038_jump:
		mov    _0c24e2_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24ec_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		je     _02e135_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02e075_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _02e135_jump
		movswl %di,%eax
		mov    _0c24e2_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		add    $0x000003,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24ec_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_0921f8_data(%edx)
		je     _02e0d2_jump
		mov    $0x000001,%ebx

	_02e0d2_jump:
		mov    _0c24e2_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24ec_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_0921f8_data(%edx)
		je     _02e104_jump
		mov    $0x000001,%ebx

	_02e104_jump:
		mov    _0c24e2_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		je     _02e135_jump
		mov    $0x000001,%ebx

	_02e135_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02e13c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _02e315_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00000c,%edx
		jne    _02e315_jump
		call   _01d704_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _01d82c_func
		movswl %dx,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _02e1a1_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02d280_func
		test   %ax,%ax
		je     _02e1a1_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _056614_func

	_02e1a1_jump:
		mov    0x000081(%ecx),%ah
		xor    %edx,%edx
		and    $0x0000f7,%ah
		mov    0x000070(%ecx),%dl
		mov    %ah,0x000081(%ecx)
		cmp    $0x000014,%edx
		jne    _02e1c2_jump
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_02e1c2_jump:
		mov    _0c1b96_data,%dx
		mov    0x000034(%ecx),%bx
		xor    %eax,%eax
		cmp    %bx,%dx
		jne    _02e24e_jump
		movzbw 0x000068(%ecx),%si
		xor    %ebx,%edx
		mov    0x000028(%ecx),%di
		mov    _0c1bb4_data,%dl
		mov    _0c1b74_data,%bx
		add    %edi,%esi
		add    %ebx,%edx
		sub    %esi,%edx
		movswl %dx,%esi
		test   %esi,%esi
		jle    _02e223_jump
		cmp    $0x00000a,%esi
		jle    _02e207_jump
		mov    $0x000001,%eax

	_02e207_jump:
		movswl %dx,%esi
		cmp    $0x00000f,%esi
		jle    _02e210_jump
		inc    %eax

	_02e210_jump:
		movswl %dx,%esi
		cmp    $0x000012,%esi
		jle    _02e219_jump
		inc    %eax

	_02e219_jump:
		movswl %dx,%edx
		cmp    $0x00002a,%edx
		jle    _02e24e_jump
		jmp    _02e24c_jump

	_02e223_jump:
		neg    %edx
		movswl %dx,%esi
		cmp    $0x00000a,%esi
		jle    _02e232_jump
		mov    $0xffffffff,%eax

	_02e232_jump:
		movswl %dx,%esi
		cmp    $0x00000f,%esi
		jle    _02e23b_jump
		dec    %eax

	_02e23b_jump:
		movswl %dx,%esi
		cmp    $0x000012,%esi
		jle    _02e244_jump
		dec    %eax

	_02e244_jump:
		movswl %dx,%edx
		cmp    $0x000029,%edx
		jle    _02e24e_jump

	_02e24c_jump:
		xor    %eax,%eax

	_02e24e_jump:
		mov    %ax,0x000040(%ecx)
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _02e2e2_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _02de14_func
		test   %ax,%ax
		je     _02e2de_jump
		incw   0x000050(%ecx)
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		movw   $0x000000,0x000042(%ecx)
		cmp    $0x0000f0,%edx
		jle    _02e2e2_jump
		mov    0x00002c(%ecx),%edx
		sub    $0x000050,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _0706e8_func
		mov    0x000032(%ecx),%edx
		mov    $0x000073,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    0x00003a(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00003c(%ecx),%edx
		mov    $0x000004,%ebx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _070a70_func
		jmp    _02e2e2_jump

	_02e2de_jump:
		mov    %ax,0x000050(%ecx)

	_02e2e2_jump:
		mov    0x00003e(%ecx),%esi
		sar    $0x000010,%esi
		test   %esi,%esi
		jle    _02e2ff_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _02de14_func
		test   %ax,%ax
		je     _02e315_jump
		jmp    _02e30f_jump

	_02e2ff_jump:
		jge    _02e315_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02de14_func
		test   %ax,%ax
		je     _02e315_jump

	_02e30f_jump:
		movw   $0x000000,0x000040(%ecx)

	_02e315_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e31c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    0x000056(%eax),%ax
		add    %ax,0x00003c(%edx)

	_02e32b_jump:
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02e337_jump
		neg    %eax

	_02e337_jump:
		cmp    $0x000080,%eax
		jl     _02e376_jump
		mov    0x000054(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02e35f_jump
		mov    0x000028(%edx),%ecx
		mov    0x00003c(%edx),%di
		inc    %ecx
		sub    $0x000080,%edi
		mov    %ecx,0x000028(%edx)
		mov    %di,0x00003c(%edx)
		jmp    _02e32b_jump

	_02e35f_jump:
		mov    0x000028(%edx),%ebx
		mov    0x00003c(%edx),%si
		dec    %ebx
		add    $0x000080,%esi
		mov    %ebx,0x000028(%edx)
		mov    %si,0x00003c(%edx)
		jmp    _02e32b_jump

	_02e376_jump:
		mov    0x00004a(%edx),%ax
		add    %ax,0x00003e(%edx)

	_02e37e_jump:
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02e38a_jump
		neg    %eax

	_02e38a_jump:
		cmp    $0x000080,%eax
		jl     _02e3c8_jump
		mov    0x000048(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02e3b2_jump
		mov    0x00002c(%edx),%edi
		mov    0x00003e(%edx),%bx
		inc    %edi
		sub    $0x000080,%ebx
		mov    %edi,0x00002c(%edx)
		mov    %bx,0x00003e(%edx)
		jmp    _02e37e_jump

	_02e3b2_jump:
		mov    0x00002c(%edx),%esi
		mov    0x00003e(%edx),%ax
		dec    %esi
		add    $0x000080,%eax
		mov    %esi,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		jmp    _02e37e_jump

	_02e3c8_jump:
		mov    %edx,%eax
		call   _01df3c_func
		mov    0x000076(%edx),%al
		dec    %al
		mov    %al,0x00006b(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e3e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000001,%al
		jbe    _02e475_jump
		cmp    $0x000002,%al
		je     _02e48d_jump

	_02e3fa_jump:
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		je     _02e4bd_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000008,%eax
		xor    %edx,%edx
		movswl %ax,%esi
		mov    0x000068(%ecx),%dl
		mov    %esi,%ebx
		mov    %ecx,%eax
		movzbw 0x000068(%ecx),%di
		call   _02d280_func
		test   %ax,%ax
		je     _02e4bd_jump
		movswl %di,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _02e4bd_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		test   %edx,%edx
		jne    _02e4a0_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000002,%edx
		or     $0x000008,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		mov    $0x000001,%ebx
		jmp    _02e4b8_jump

	_02e475_jump:
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		jne    _02e486_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02e48d_jump

	_02e486_jump:
		orb    $0x000008,0x000081(%ecx)

	_02e48d_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		mov    %ecx,%eax
		call   _0248b8_func
		jmp    _02e3fa_jump

	_02e4a0_jump:
		mov    0x000081(%ecx),%dh
		mov    $0x000001,%ebx
		and    $0x0000f7,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		mov    %ebx,%edx

	_02e4b8_jump:
		call   _056614_func

	_02e4bd_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e4c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c2522_data,%edx
		sar    $0x000010,%edx
		mov    _0c24aa_data,%ebx
		add    $0x0000be,%edx
		mov    _0c1b38_data,%cx
		mov    %edx,0x00002c(%eax)
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%eax),%dl
		movw   $0x000082,0x000050(%eax)
		sub    %edx,%ebx
		mov    _0c1b34_data,%edx
		mov    %ebx,0x000028(%eax)
		xor    %eax,%eax
		test   %cx,%cx
		jg     _02e517_jump
		jmp    _02e57c_jump

	_02e50b_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _02e57c_jump

	_02e517_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x00009d,%ebx
		jne    _02e50b_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _02e50b_jump
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000040(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edx)
		mov    0x000028(%esi),%ebx
		add    $0x000065,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%esi),%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _01df3c_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%bl
		movb   $0x000001,0x00006c(%edx)
		or     $0x000004,%bl
		mov    %bl,0x000081(%edx)

	_02e57c_jump:
		movw   $0x000000,0x0000c6(%edx)
		mov    0x000105(%edx),%bh
		movw   $0x000000,0x0000c4(%edx)
		and    $0x0000f7,%bh
		mov    %bh,0x000105(%edx)
		mov    0x000028(%esi),%ebx
		add    $0x0000ca,%ebx
		mov    %ebx,0x0000ac(%edx)
		add    $0x000084,%edx
		mov    0x00002c(%esi),%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _01df3c_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%cl
		movb   $0x000002,0x00006c(%edx)
		or     $0x000004,%cl
		mov    %cl,0x000081(%edx)
		movw   $0x000000,0x0000c6(%edx)
		mov    0x000105(%edx),%ch
		movw   $0x000000,0x0000c4(%edx)
		and    $0x0000f7,%ch
		mov    %ch,0x000105(%edx)
		mov    0x000028(%esi),%ebx
		add    $0x00012f,%ebx
		mov    %ebx,0x0000ac(%edx)
		add    $0x000084,%edx
		mov    0x00002c(%esi),%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _01df3c_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%al
		movb   $0x000003,0x00006c(%edx)
		or     $0x000004,%al
		mov    %al,0x000081(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e648_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		testb  $0x000004,_0c1bcd_data
		je     _02e932_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _02e67d_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000017,%eax
		je     _02e932_jump

	_02e67d_jump:
		mov    _0c2522_data,%ax
		cmp    $0x000003,%ax
		jb     _02e926_jump
		jbe    _02e73f_jump
		cmp    $0x000005,%ax
		jbe    _02e83f_jump
		jmp    _02e93e_jump

	_02e6a2_jump:
		sub    %al,%al
		mov    %al,0x000076(%edx)
		mov    %edx,%eax
		call   _02e4c4_func
		jmp    _02e93e_jump

	_02e6b3_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0x000028,%eax
		jg     _02e6e0_jump
		mov    _0c2590_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		mov    0x000054(%ebx,%eax,4),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _02e71d_jump

	_02e6e0_jump:
		cmpb   $0x000000,_0c24ca_data
		je     _02e700_jump
		testb  $0x000004,_0c1bcd_data
		je     _02e700_jump
		cmpl   $0x000078,0x00002c(%edx)
		jle    _02e700_jump
		movw   $0x00ffff,0x000042(%edx)
		jmp    _02e706_jump

	_02e700_jump:
		movw   $0x000000,0x000042(%edx)

	_02e706_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02e93e_jump
		decw   0x000050(%edx)
		jmp    _02e93e_jump

	_02e71d_jump:
		movw   $0x000000,0x000042(%edx)
		jmp    _02e93e_jump

	_02e728_jump:
		mov    0x000076(%edx),%al
		test   %al,%al
		jbe    _02e6b3_jump
		cmp    $0x000001,%al
		je     _02e6a2_jump
		decb   0x000076(%edx)
		jmp    _02e93e_jump

	_02e73f_jump:
		mov    _0c250e_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _02e7e4_jump
		mov    _0c1b28_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		je     _02e7a7_jump
		mov    _0c24ae_data,%ax
		add    $0x000078,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00002c(%edx),%ebx
		mov    0x00003c(%edx),%eax
		sub    $0x000064,%ebx
		sar    $0x000010,%eax
		cmp    %eax,%ebx
		jle    _02e780_jump
		subl   $0x000003,0x00002c(%edx)

	_02e780_jump:
		decl   0x00002c(%edx)
		mov    0x00003c(%edx),%eax
		mov    0x00002c(%edx),%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _02e79c_jump
		cmpb   $0x000000,_0c24ca_data
		je     _02e79c_jump
		decl   0x00002c(%edx)

	_02e79c_jump:
		movw   $0x000001,0x000056(%edx)
		jmp    _02e832_jump

	_02e7a7_jump:
		mov    0x000054(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _02e7cf_jump
		xor    %eax,%eax
		mov    _0c1b78_data,%si
		mov    _0c1bb5_data,%al
		add    %esi,%eax
		movw   $0x000000,0x000056(%edx)
		sub    $0x00001e,%eax
		mov    %ax,0x00003e(%edx)

	_02e7cf_jump:
		mov    0x00003c(%edx),%eax
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jge    _02e832_jump
		lea    -0x000001(%esi),%edi
		mov    %edi,0x00002c(%edx)
		jmp    _02e832_jump

	_02e7e4_jump:
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		mov    0x000076(%ebx,%eax,4),%al
		and    $0x0000ff,%eax
		test   %eax,%eax
		jle    _02e832_jump
		mov    _0c2522_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%ebx
		add    $0x000078,%eax
		cmp    %ebx,%eax
		jle    _02e832_jump
		mov    0x00003a(%edx),%bx
		add    $0x00000e,%ebx
		mov    %bx,0x00003a(%edx)
		mov    0x000038(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0x000010,%eax
		jle    _02e832_jump
		mov    %ebx,%ecx
		sub    $0x000010,%ecx
		mov    %cx,0x00003a(%edx)
		incl   0x00002c(%edx)

	_02e832_jump:
		mov    0x00002c(%edx),%ax
		sub    $0x000078,%eax
		mov    %ax,_0c25d0_data

	_02e83f_jump:
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff5a,%eax
		jge    _02e8bb_jump
		mov    0x000028(%edx),%ebp
		mov    0x00006c(%edx),%cl
		xor    %eax,%eax
		add    $0x0001f9,%ebp
		inc    %cl
		mov    %ebp,0x000028(%edx)
		mov    %cl,%al
		mov    %cl,0x00006c(%edx)
		cmp    $0x000003,%eax
		jle    _02e86d_jump
		movb   $0x000000,0x00006c(%edx)

	_02e86d_jump:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jne    _02e93e_jump
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _02e93e_jump
		subw   $0x000005,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0c2522_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%ebx
		add    $0x000078,%eax
		cmp    %ebx,%eax
		jle    _02e93e_jump
		mov    %eax,0x00002c(%edx)
		jmp    _02e93e_jump

	_02e8bb_jump:
		cmp    $0x00016e,%eax
		jle    _02e93e_jump
		mov    0x000028(%edx),%esi
		mov    0x00006c(%edx),%bh
		xor    %eax,%eax
		sub    $0x0001f9,%esi
		dec    %bh
		mov    %esi,0x000028(%edx)
		mov    %bh,%al
		mov    %bh,0x00006c(%edx)
		cmp    $0x000003,%eax
		jle    _02e8e7_jump
		movb   $0x000003,0x00006c(%edx)

	_02e8e7_jump:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jne    _02e93e_jump
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _02e93e_jump
		addw   $0x000005,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0c2522_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%edi
		add    $0x000078,%eax
		cmp    %edi,%eax
		jle    _02e93e_jump
		mov    %eax,0x00002c(%edx)
		jmp    _02e93e_jump

	_02e926_jump:
		cmp    $0x000001,%ax
		je     _02e728_jump
		jmp    _02e93e_jump

	_02e932_jump:
		movw   $0x000000,0x000042(%edx)
		movw   $0x000000,0x000040(%edx)

	_02e93e_jump:
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%esi
		add    $0x000078,%eax
		cmp    %esi,%eax
		jle    _02e953_jump
		mov    %eax,0x00002c(%edx)

	_02e953_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e95c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    _0c1b30_data,%ebx
		mov    0x000032(%eax),%edx
		movzbl 0x00006d(%eax),%ebp
		sar    $0x000010,%edx
		shl    $0x000002,%ebp
		mov    (%ebx,%edx,2),%dx
		mov    0x00000c(%eax),%ebx
		add    %ebx,%ebp
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x00006c(%eax),%bl
		movzbl 0x000002(%ebp,%ebx,8),%ebp
		lea    0x000000(,%ebp,4),%ebx
		sub    %ebp,%ebx
		mov    0x000004(%eax),%ebp
		mov    0x00000a(%ebp,%ebx,4),%bl
		mov    %bl,0x000008(%esp)
		xor    %ebx,%ebx
		mov    0x000034(%eax),%si
		mov    %bx,0x000004(%esp)
		cmp    %si,%dx
		je     _02ea74_jump
		xor    %esi,%esi
		xor    %edi,%edi

	_02e9bc_jump:
		movswl %dx,%ebp
		imul   $0x000084,%ebp,%edx
		mov    0x000004(%esp),%eax
		mov    _0c1b34_data,%ebx
		inc    %eax
		add    %edx,%ebx
		mov    %ax,0x000004(%esp)
		mov    0x000081(%ebx),%ah
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ebx)
		mov    0x00006b(%ecx),%dl
		mov    %edx,(%esp)
		mov    0x000002(%esp),%edx
		mov    (%esp),%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %dl,0x00006b(%ebx)
		xor    %edx,%edx
		add    $0x000020,%edi
		mov    0x000076(%ecx),%dl
		mov    %edi,%eax
		sub    $0x000002,%edx
		imul   %edx,%eax
		mov    0x00003c(%ecx),%dx
		add    %eax,%edx
		mov    %dx,0x00003c(%ebx)
		mov    0x00003e(%ecx),%dx
		mov    %dx,0x00003e(%ebx)
		add    $0x000100,%esi
		mov    0x000050(%ecx),%dx
		sub    %esi,%edx
		mov    %dx,0x000050(%ebx)
		mov    0x00003a(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ebx)
		mov    0x00003c(%ebx),%edx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ebx)
		call   _01df3c_func
		mov    _0c1b30_data,%ebx
		mov    (%ebx,%ebp,2),%dx
		cmp    0x000034(%ecx),%dx
		jne    _02e9bc_jump

	_02ea74_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ea80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x0000b2,%eax
		je     _02ea9a_jump
		cmp    $0x0000f1,%eax
		jne    _02ead9_jump

	_02ea9a_jump:
		cmpw   $0x000000,0x000052(%esi)
		jne    _02ead9_jump
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _061dd0_func
		mov    %al,0x00006b(%esi)
		mov    %esi,%eax
		movw   $0x001000,0x000050(%esi)
		call   _02e95c_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ead9_jump:
		mov    $0x000028,%ebx
		lea    0x000050(%esi),%ecx
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01d404_func
		movw   $0x000000,0x000040(%esi)
		mov    %ax,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02eafc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _02ebb4_jump
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		cmp    $0x000036,%edx
		jne    _02ebb4_jump
		mov    0x00000c(%ecx),%ebx
		mov    (%ebx,%eax,4),%eax
		testb  $0x000010,0x000007(%eax,%edx,8)
		je     _02eb33_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _02eb56_jump

	_02eb33_jump:
		xor    %eax,%eax
		mov    0x00006a(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x000004(%ecx),%eax
		mov    0x00000a(%eax,%edx,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_02eb56_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _02eb98_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _02eb98_jump
		mov    %eax,0x000024(%ecx)
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _02eba8_jump

	_02eb98_jump:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jne    _02eba8_jump
		mov    %ecx,%eax
		call   _070a70_func

	_02eba8_jump:
		mov    %ecx,%eax
		call   _04b3f8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ebb4_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _02ebcc_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000017,%eax
		je     _02ebf9_jump

	_02ebcc_jump:
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _02ec97_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _02ebf9_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00001f,%eax
		je     _02ec97_jump

	_02ebf9_jump:
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000069(%ecx),%dl
		call   _0189c4_func
		cwtl   
		mov    0x00002c(%ecx),%esi
		sub    %edx,%eax
		sub    %esi,%eax
		cmp    $0x000020,%eax
		jg     _02ec3c_jump
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000069(%ecx),%dl
		call   _0189c4_func
		cwtl   
		mov    $0x000036,%ebx
		sub    %edx,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01d6f8_func
		movb   $0x00006b,0x00006a(%ecx)
		movb   $0x000000,0x00006b(%ecx)
		jmp    _02ec52_jump

	_02ec3c_jump:
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_02ec52_jump:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _070a70_func
		mov    _0c1b00_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		mov    0x000081(%eax,%edx,4),%bl
		movl   $0x000000,0x000024(%eax,%edx,4)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax,%edx,4)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ec97_jump:
		mov    _0c1b00_data,%ah
		test   %ah,%ah
		je     _02ee2b_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c1afe_data,%dl
		mov    _0c1aff_data,%al
		dec    %edx
		cmp    %edx,%eax
		jne    _02ed06_jump
		mov    _0c1b00_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		mov    0x000081(%ecx),%bh
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		and    $0x0000fb,%bh
		add    %eax,%edx
		mov    %bh,0x000081(%ecx)
		andb   $0x0000fb,0x000081(%edx)
		mov    %ecx,%eax
		call   _070a70_func
		cmpl   $0x000000,0x000024(%edx)
		je     _02ee4b_jump
		mov    %edx,%eax
		call   _070a70_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ed06_jump:
		lea    0x000000(,%eax,8),%edx
		add    %eax,%edx
		add    %edx,%edx
		add    $_0c13e4_data,%edx
		movswl (%edx),%eax
		mov    %eax,0x000028(%ecx)
		mov    (%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%edx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x000009(%edx),%al
		mov    %al,0x00006c(%ecx)
		mov    0x00000a(%edx),%al
		mov    %al,0x00006a(%ecx)
		mov    0x00000b(%edx),%al
		mov    %al,0x00006b(%ecx)
		mov    0x00000c(%edx),%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%ah
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x000011(%edx),%al
		movw   $0x000000,0x000040(%ecx)
		mov    %ax,0x00005a(%ecx)
		xor    %eax,%eax
		mov    0x00007e(%ecx),%al
		movw   $0x000000,0x000042(%ecx)
		test   %eax,%eax
		jne    _02ed7d_jump
		mov    %ecx,%eax
		call   _070a70_func

	_02ed7d_jump:
		mov    _0c1b00_data,%eax
		sar    $0x000010,%eax
		movb   $0x000004,0x00007e(%ecx)
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%ecx
		mov    0x000010(%edx),%bl
		add    %eax,%ecx
		test   %bl,%bl
		je     _02ee00_jump
		mov    0x000081(%ecx),%al
		movb   $0x000004,0x00007e(%ecx)
		or     $0x000004,%al
		mov    %al,0x000081(%ecx)
		mov    0x000002(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000004(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00000d(%edx),%al
		mov    %al,0x00006a(%ecx)
		mov    0x00000e(%edx),%al
		mov    %al,0x00006b(%ecx)
		mov    0x00000f(%edx),%al
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%ecx)
		shl    $0x000003,%al
		movw   $0x000000,0x000040(%ecx)
		mov    %ah,%dl
		movw   $0x000000,0x000042(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		jmp    _02ee07_jump

	_02ee00_jump:
		andb   $0x0000fb,0x000081(%ecx)

	_02ee07_jump:
		mov    _0c1aff_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    %dh,%al
		mov    %dh,_0c1aff_data
		cmp    $0x000064,%eax
		jle    _02ee4b_jump
		xor    %bl,%bl
		mov    %bl,_0c1aff_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ee2b_jump:
		mov    %ah,0x00007e(%ecx)
		mov    _0c1b00_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		mov    _0c1b34_data,%eax
		add    %ecx,%edx
		andb   $0x0000fb,0x000081(%eax,%edx,4)

	_02ee4b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ee50_jump:
		xor    %eax,%eax
		mov    _0c1b00_data,%al
		cmp    $0x000001,%eax
		jne    _02ee64_jump
		xor    %ah,%ah
		mov    %ah,_0c1bc2_data

	_02ee64_jump:
		ret    



_02ee68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%ah
		or     $0x000008,%ah
		mov    %ah,0x000081(%esi)
		xor    %eax,%eax
		mov    _0c51b4_data,%al
		cmp    $0x000001,%eax
		jne    _02f09e_jump
		mov    0x000081(%esi),%dh
		mov    _0c1b8a_data,%eax
		and    $0x0000df,%dh
		sar    $0x000010,%eax
		mov    %dh,0x000081(%esi)
		test   %eax,%eax
		jle    _02eec1_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _02eee7_jump

	_02eec1_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02ef4b_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02ef4b_jump

	_02eee7_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02eef5_jump
		neg    %eax

	_02eef5_jump:
		cmp    $0x000002,%eax
		jge    _02ef14_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02ef0d_jump
		mov    $0x000002,%eax
		jmp    _02ef47_jump

	_02ef0d_jump:
		mov    $0xfffffffe,%eax
		jmp    _02ef47_jump

	_02ef14_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02ef22_jump
		neg    %eax

	_02ef22_jump:
		cmp    $0x000007,%eax
		jl     _02ef41_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02ef3a_jump
		mov    $0x000007,%eax
		jmp    _02ef47_jump

	_02ef3a_jump:
		mov    $0xfffffff9,%eax
		jmp    _02ef47_jump

	_02ef41_jump:
		mov    _0c1b8c_data,%ax

	_02ef47_jump:
		mov    %ax,0x000050(%esi)

	_02ef4b_jump:
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02efce_jump
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02ef67_jump
		neg    %eax

	_02ef67_jump:
		test   %eax,%eax
		jg     _02ef80_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02ef79_jump
		neg    %eax

	_02ef79_jump:
		cmp    $0x000002,%eax
		jle    _02efc6_jump
		jmp    _02efc2_jump

	_02ef80_jump:
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02efa6_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02ef9e_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _02efc6_jump

	_02ef9e_jump:
		jge    _02efc2_jump
		movb   $0x000002,0x00006b(%esi)
		jmp    _02efc6_jump

	_02efa6_jump:
		jge    _02efc6_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02efba_jump
		movb   $0x000002,0x00006b(%esi)
		jmp    _02efc6_jump

	_02efba_jump:
		jge    _02efc2_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _02efc6_jump

	_02efc2_jump:
		movb   $0x000001,0x00006b(%esi)

	_02efc6_jump:
		movw   $0x000008,0x000056(%esi)
		jmp    _02efd2_jump

	_02efce_jump:
		decw   0x000056(%esi)

	_02efd2_jump:
		lea    0x000008(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01da90_func
		mov    (%esp),%edi
		mov    0x00002c(%esi),%cx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%al
		add    %ecx,%ebx
		add    %edi,%eax
		sub    %ebx,%eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    _0c1b74_data,%ebx
		mov    _0c1bb4_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    _0c1b78_data,%edx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,0x000028(%esi)
		xor    %ebx,%ebx
		mov    _0c1bb5_data,%al
		mov    0x000069(%esi),%bl
		add    %edx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    %ebx,0x00002c(%esi)
		cmp    $0x000003,%eax
		jne    _02f05b_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000017,%eax
		je     _02f080_jump

	_02f05b_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _02f073_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000016,%eax
		je     _02f080_jump

	_02f073_jump:
		call   _0664b4_func
		test   %al,%al
		jne    _02f140_jump

	_02f080_jump:
		mov    $_0c3314_data,%edi
		xor    %bl,%bl
		mov    $_0c3318_data,%esi
		mov    %bl,_0c51b4_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f09e_jump:
		movw   $0x000000,0x000056(%esi)
		mov    0x000081(%esi),%dl
		movb   $0x000001,0x00006b(%esi)
		xor    %eax,%eax
		or     $0x000020,%dl
		mov    _0c1bb9_data,%al
		mov    %dl,0x000081(%esi)
		cmp    $0x000003,%eax
		jne    _02f0e0_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000016,%eax
		jne    _02f0e0_jump
		mov    0x000050(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f0e0_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _02f0f8_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000001,%eax
		je     _02f128_jump

	_02f0f8_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _02f110_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000002,%eax
		je     _02f128_jump

	_02f110_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _02f13a_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000006,%eax
		jne    _02f13a_jump

	_02f128_jump:
		xor    %edx,%edx
		mov    %dx,_0c1b8c_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f13a_jump:
		movw   $0x000000,0x000050(%esi)

	_02f140_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_02f14c_switch:
		.long   _02f1d1_case
		.long   _02f1d7_case
		.long   _02f1dd_case
		.long   _02f1dd_case
		.long   _02f1e3_case




_02f160_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0c250e_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _02f342_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02f1b0_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000028(%esi),%ebx
		cmp    0x000028(%eax),%ebx
		jge    _02f1a7_jump
		mov    0x00002c(%eax),%eax
		add    $0x000070,%eax
		jmp    _02f1ad_jump

	_02f1a7_jump:
		mov    0x00002c(%eax),%eax
		add    $0x000078,%eax

	_02f1ad_jump:
		mov    %eax,0x00002c(%esi)

	_02f1b0_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _02f327_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000f,%eax
		je     _02f1ed_jump
		jmp    _02f327_jump

	_02f1d1_case:
		mov    $0x000030,%dh
		mov    $0x000018,%dl
		jmp    _02f227_jump

	_02f1d7_case:
		mov    $0x000030,%dh
		mov    $0x000020,%dl
		jmp    _02f227_jump

	_02f1dd_case:
		mov    $0x000038,%dh
		mov    $0x000028,%dl
		jmp    _02f227_jump

	_02f1e3_case:
		mov    $0x000038,%dh
		mov    $0x000040,%dl
		jmp    _02f227_jump

	_02f1e9_jump:
		xor    %eax,%eax
		jmp    _02f227_jump

	_02f1ed_jump:
		mov    _0c1b78_data,%di
		mov    0x000028(%esi),%ax
		mov    0x00002c(%esi),%cx
		mov    0x00006c(%esi),%bl
		mov    %eax,0x000004(%esp)
		mov    _0c1b74_data,%ax
		sub    $0x000010,%bl
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		cmp    $0x000004,%bl
		ja     _02f1e9_jump
		and    $0x0000ff,%ebx
		jmp    *%cs:_02f14c_switch(,%ebx,4)

	_02f227_jump:
		test   %ax,%ax
		je     _02f26b_jump
		xor    %eax,%eax
		mov    %dl,%al
		push   %eax
		xor    %eax,%eax
		mov    %dh,%al
		add    %eax,%ecx
		push   $0x000004
		movswl %cx,%eax
		push   %eax
		mov    0x000010(%esp),%eax
		add    $0x00007e,%eax
		cwtl   
		push   %eax
		mov    %edi,%eax
		add    $0x00001a,%eax
		movswl %ax,%edx
		mov    0x000010(%esp),%eax
		mov    $0x00002e,%ebx
		add    $0x000039,%eax
		mov    $0x000004,%ecx
		cwtl   
		call   _0291bc_func

	_02f26b_jump:
		test   %ax,%ax
		je     _02f303_jump
		decb   0x000076(%esi)
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000001,%eax
		jge    _02f2a7_jump
		mov    0x000077(%esi),%al
		mov    %al,0x000076(%esi)
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000013,%eax
		jge    _02f2a0_jump
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _01d6e8_func
		jmp    _02f2a7_jump

	_02f2a0_jump:
		mov    %esi,%eax
		call   _071410_func

	_02f2a7_jump:
		mov    _0c250e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		mov    0x000054(%edx,%eax,4),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02f2dd_jump
		mov    0x000004(%esp),%eax
		add    $0x00001e,%edi
		add    $0x000080,%eax
		movswl %di,%edx
		cwtl   
		call   _0714cc_func

	_02f2dd_jump:
		mov    _0c250e_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    _0c1b34_data,%edx
		add    %ebx,%eax
		movw   $0x000000,0x000050(%edx,%eax,4)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f303_jump:
		mov    _0c250e_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		mov    _0c1b34_data,%edx
		add    %esi,%eax
		incw   0x000050(%edx,%eax,4)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f327_jump:
		mov    _0c250e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		incw   0x000050(%edx,%eax,4)

	_02f342_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f34c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _02f38e_jump
		mov    _0c1b74_data,%eax
		mov    0x000028(%ecx),%edx
		add    $0x00002f,%eax
		cmp    %edx,%eax
		jle    _02f38e_jump
		mov    _0c1b74_data,%ebx
		lea    0x0000ba(%edx),%eax
		cmp    %ebx,%eax
		jle    _02f38e_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movb   $0x00000a,0x000076(%ecx)
		call   _01d6f8_func

	_02f38e_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		cmp    $0x000001,%eax
		jle    _02f3cd_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000010,%eax
		jge    _02f3b4_jump
		xor    %eax,%eax
		mov    _0c24d0_data,%al
		test   %eax,%eax
		jne    _02f3d3_jump
		incw   0x000042(%ecx)
		jmp    _02f3d3_jump

	_02f3b4_jump:
		xor    %eax,%eax
		mov    _0c24d0_data,%al
		test   %eax,%eax
		jne    _02f3d3_jump
		mov    _0c24cb_data,%al
		test   %eax,%eax
		jne    _02f3d3_jump
		incl   0x00002c(%ecx)
		jmp    _02f3d3_jump

	_02f3cd_jump:
		movw   $0x000000,0x000042(%ecx)

	_02f3d3_jump:
		mov    0x00004e(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		setle  %al
		movw   $0x000000,0x000050(%ecx)
		xor    %ah,%ah
		mov    %ax,0x000056(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f3f0_func:
		push   %ebx
		push   %edx
		mov    _0c1b78_data,%edx
		xor    %ebx,%ebx
		sub    $0x000062,%edx
		mov    0x00006a(%eax),%bl
		mov    %edx,0x00002c(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		xor    %ebx,%ebx
		dec    %edx
		mov    0x00006b(%eax),%bl
		cmp    %edx,%ebx
		jne    _02f48a_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		mov    0x000005(%ebx,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c24c8_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _02f48a_jump
		mov    _0c250e_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0c1b34_data,%ebx
		mov    0x000054(%ebx,%edx,4),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _02f48a_jump
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)

	_02f48a_jump:
		pop    %edx
		pop    %ebx
		ret    



_02f490_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    0x00004e(%eax),%edx
		sar    $0x000010,%edx
		cmp    $0x0000ff,%edx
		je     _02f560_jump
		cmp    $0xffffffff,%edx
		jne    _02f546_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000010,0x000007(%ebx,%edx,8)
		je     _02f4d2_jump
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		test   %edx,%edx
		jmp    _02f4f6_jump

	_02f4d2_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		xor    %ebx,%ebx
		dec    %edx
		mov    0x00006b(%eax),%bl
		cmp    %edx,%ebx

	_02f4f6_jump:
		sete   %dl
		and    $0x0000ff,%edx
		je     _02f560_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x00006c(%eax),%bl
		mov    0x000005(%edx,%ebx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c24c8_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _02f560_jump
		mov    0x000081(%eax),%ch
		mov    %edx,0x000024(%eax)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f546_jump:
		test   %edx,%edx
		jne    _02f55c_jump
		movb   $0x000000,0x00006b(%eax)
		movw   $0x00ffff,0x000050(%eax)
		movb   $0x000002,0x00007e(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f55c_jump:
		decw   0x000050(%eax)

	_02f560_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_02f564_switch:
		.long   _02f62d_case
		.long   _02f639_case
		.long   _02f646_case
		.long   _02f658_case
		.long   _02f633_case




_02f578_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000014,%al
		jb     _02f738_jump
		jbe    _02f5aa_jump
		cmp    $0x00001e,%al
		je     _02f5bf_jump
		jmp    _02f740_jump

	_02f597_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		jmp    _02f740_jump

	_02f5aa_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _02f740_jump

	_02f5bf_jump:
		cmpl   $0x000000,0x000020(%ecx)
		je     _02f740_jump
		mov    0x00004e(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    $0x000001,%dl
		cmp    $0xffffffff,%ebx
		je     _02f5ec_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		cmpl   $0x000000,0x000024(%ebx,%eax,4)
		je     _02f5ec_jump
		xor    %dl,%dl

	_02f5ec_jump:
		test   %dl,%dl
		je     _02f607_jump
		mov    0x00007f(%ecx),%ah
		test   %ah,%ah
		je     _02f607_jump
		cmpb   $0x000000,_0c24ca_data
		je     _02f607_jump
		mov    %ah,%dh
		dec    %dh
		mov    %dh,0x00007f(%ecx)

	_02f607_jump:
		xor    %bl,%bl
		mov    %bl,(%esp)
		cmpb   $0x000000,0x00007f(%ecx)
		jne    _02f726_jump
		mov    0x000052(%ecx),%ax
		cmp    $0x000004,%ax
		ja     _02f663_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_02f564_switch(,%eax,4)

	_02f62d_case:
		movw   $0x000002,0x000052(%ecx)

	_02f633_case:
		mov    0x000060(%ecx),%si
		jmp    _02f663_jump

	_02f639_case:
		mov    $0x00004d,%esi
		movw   $0x000003,0x000052(%ecx)
		jmp    _02f663_jump

	_02f646_case:
		mov    $0x000048,%esi
		mov    $0x000001,%al
		movw   $0x000001,0x000052(%ecx)
		mov    %al,(%esp)
		jmp    _02f663_jump

	_02f658_case:
		mov    $0x0000bb,%esi
		movw   $0x000004,0x000052(%ecx)

	_02f663_jump:
		cmpb   $0x000000,(%esp)
		jne    _02f66d_jump
		movb   $0x000032,0x00007f(%ecx)

	_02f66d_jump:
		cmp    0x000060(%ecx),%si
		je     _02f726_jump
		mov    %ecx,%eax
		call   _056574_func
		movw   $0x000000,0x000048(%ecx)
		mov    0x000034(%ecx),%ax

	_02f688_jump:
		mov    _0c1b30_data,%edx
		cwtl   
		mov    (%edx,%eax,2),%ax
		movswl %ax,%edx
		imul   $0x000084,%edx,%edx
		mov    _0c1b34_data,%ebx
		add    %ebx,%edx
		mov    0x000060(%edx),%bx
		cmp    %bx,%si
		je     _02f6b3_jump
		cmp    0x000060(%ecx),%bx
		jne    _02f688_jump

	_02f6b3_jump:
		mov    0x000060(%edx),%ax
		cmp    0x000060(%ecx),%ax
		jne    _02f6e4_jump
		jmp    _02f726_jump

	_02f6c2_jump:
		mov    %edx,%eax
		call   _03a4c8_func
		jmp    _02f6fa_jump

	_02f6cb_jump:
		mov    %edx,%eax
		call   _052910_func
		jmp    _02f6fa_jump

	_02f6d4_jump:
		mov    %edx,%eax
		call   _059bd0_func
		mov    %edx,%eax
		call   _05bfb8_func
		jmp    _02f6fa_jump

	_02f6e4_jump:
		cmp    $0x00004d,%ax
		jb     _02f6f4_jump
		jbe    _02f6c2_jump
		cmp    $0x0000bb,%ax
		je     _02f6d4_jump
		jmp    _02f6fa_jump

	_02f6f4_jump:
		cmp    $0x000048,%ax
		je     _02f6cb_jump

	_02f6fa_jump:
		mov    %edx,%eax
		call   _04e880_func
		mov    %edx,%eax
		call   _04cfd4_func
		mov    %edx,%eax
		call   _01df3c_func
		mov    0x000081(%edx),%bl
		or     $0x000004,%bl
		mov    0x000034(%edx),%ax
		mov    %bl,0x000081(%edx)
		mov    %ax,0x000050(%ecx)

	_02f726_jump:
		cmpb   $0x000000,(%esp)
		jne    _02f607_jump
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f738_jump:
		cmp    $0x000002,%al
		je     _02f597_jump

	_02f740_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f748_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000040(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jle    _02f763_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _02f774_jump

	_02f763_jump:
		cmp    $0x000001,%eax
		jle    _02f779_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax

	_02f774_jump:
		call   _01d6f8_func

	_02f779_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02f785_jump
		neg    %eax

	_02f785_jump:
		cmp    $0x000001,%eax
		jle    _02f7c1_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _02f79d_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _02f7c1_jump

	_02f79d_jump:
		mov    0x000081(%ecx),%ah
		test   $0x000008,%ah
		je     _02f7ae_jump
		decw   0x000040(%ecx)
		jmp    _02f7c1_jump

	_02f7ae_jump:
		mov    %ah,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02f7c1_jump
		incw   0x000040(%ecx)

	_02f7c1_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _02f865_jump
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		cmp    $0x000003,%edx
		jne    _02f865_jump
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		mov    (%ebx,%eax,1),%eax
		testb  $0x000010,0x000007(%eax,%edx,8)
		je     _02f7fa_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _02f81d_jump

	_02f7fa_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_02f81d_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _02f865_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _02f865_jump
		mov    0x000081(%ecx),%bh
		mov    %eax,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%ecx)

	_02f865_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f86c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%cl
		xor    %eax,%eax
		shl    $0x000004,%cl
		mov    0x00006d(%esi),%al
		shr    $0x000007,%cl
		test   %eax,%eax
		jne    _02f8ac_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000d,%eax
		jne    _02f8ac_jump
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _02f8ac_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_02f8ac_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02f9b8_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000f,%eax
		jne    _02f9b8_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000086,%eax
		jne    _02f8f3_jump
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02f8f3_jump
		mov    $0x00000d,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		movw   $0x000000,0x000040(%esi)
		jmp    _02f93a_jump

	_02f8f3_jump:
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _02f93a_jump
		mov    _0c1bcd_data,%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _04aad8_func
		mov    %cl,%al
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		or     %al,%bl
		mov    %bl,0x000081(%esi)

	_02f93a_jump:
		cmpw   $0x000000,0x000040(%esi)
		je     _02f9b8_jump
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02f97b_jump
		xor    %ecx,%ecx
		jmp    _02f982_jump

	_02f97b_jump:
		mov    0x000006(%esp),%ecx
		sar    $0x000010,%ecx

	_02f982_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%ecx
		sar    $0x000004,%ecx
		movswl %cx,%eax
		call   _01e4d8_func
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		je     _02f9b8_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000040(%esi)

	_02f9b8_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f9c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _02f9ff_jump
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _02f9ff_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		and    $0x00fff0,%edx
		sub    %eax,%edx
		lea    0x000007(%edx),%eax
		mov    %eax,0x00002c(%ecx)

	_02f9ff_jump:
		mov    %ecx,%eax
		mov    $0x00000a,%edx
		call   _02f86c_func
		mov    %ecx,%eax
		call   _02ce7c_func
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000009,%eax
		jne    _02fa23_jump
		mov    %ecx,%eax
		call   _055608_func

	_02fa23_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_02fa28_switch:
		.long   _02fac2_case
		.long   _02fad7_case
		.long   _02fac2_case
		.long   _02fad7_case
		.long   _02fac2_case
		.long   _02fad7_case
		.long   _02fad7_case
		.long   _02facc_case
		.long   _02fad7_case
		.long   _02facc_case
		.long   _02fad7_case
		.long   _02facc_case




_02fa58_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    0x000060(%eax),%ax
		cmp    $0x000086,%ax
		jb     _02fa9c_jump
		jbe    _02fa78_jump
		cmp    $0x0000a7,%ax
		jb     _02faaa_jump
		jbe    _02fa78_jump
		cmp    $0x0000b1,%ax
		je     _02fa8a_jump
		jmp    _02faaa_jump

	_02fa78_jump:
		mov    0x000032(%ebx),%edx
		mov    $0x00002c,%eax
		sar    $0x000010,%edx
		call   _068654_func
		jmp    _02faaa_jump

	_02fa8a_jump:
		mov    0x000032(%ebx),%edx
		mov    $0x00008b,%eax
		sar    $0x000010,%edx
		call   _068654_func
		jmp    _02faaa_jump

	_02fa9c_jump:
		cmp    $0x000006,%ax
		jb     _02faaa_jump
		jbe    _02fa8a_jump
		cmp    $0x000008,%ax
		je     _02fa78_jump

	_02faaa_jump:
		mov    _0c1f00_data,%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _02fad7_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02fa28_switch(,%eax,4)

	_02fac2_case:
		xor    %ecx,%ecx
		mov    _0c1f03_data,%cl
		jmp    _02fad7_case

	_02facc_case:
		xor    %ecx,%ecx
		mov    _0c1f03_data,%cl
		sub    $0x000002,%ecx

	_02fad7_case:
		mov    %ecx,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		mov    _0c1ef0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		add    $0x00000a,%ecx
		test   %eax,%eax
		jge    _02faf2_jump
		neg    %ecx

	_02faf2_jump:
		movswl %cx,%edx
		mov    %ebx,%eax
		call   _01ea18_func
		pop    %ecx
		pop    %ebx
		ret    



_02fb00_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000040(%eax),%bx
		call   _04aad8_func
		mov    0x00003e(%edx),%eax
		movswl %bx,%ecx
		sar    $0x000010,%eax
		imul   %ecx,%eax
		test   %eax,%eax
		jge    _02fb43_jump
		mov    0x000081(%edx),%ch
		lea    0x000081(%edx),%eax
		test   $0x000008,%ch
		sete   %cl
		and    $0x000001,%cl
		mov    (%eax),%ch
		and    $0x0000f7,%ch
		shl    $0x000003,%cl
		or     %cl,%ch
		mov    %ch,(%eax)
		mov    %bx,0x000040(%edx)

	_02fb43_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02fb48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		cmp    $0x0000ff,%eax
		je     _02fc34_jump
		test   %eax,%eax
		je     _02fbca_jump
		jmp    _02fc31_jump

	_02fb67_jump:
		movl   $0x000001,_0c1b70_data
		mov    _0c1b70_data,%ah
		and    $0x000001,%ah
		mov    %al,_0c1bcd_data
		shl    $0x000002,%ah
		or     %ah,%al
		mov    %al,_0c1bcd_data
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _02fbdd_jump

	_02fb92_jump:
		movl   $0x000001,_0c1b70_data
		mov    _0c1b70_data,%ah
		and    $0x000001,%ah
		mov    %al,_0c1bcd_data
		shl    $0x000002,%ah
		mov    $0x000029,%ebx
		or     %ah,%al
		mov    $0x000003,%edx
		mov    %al,_0c1bcd_data
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		jmp    _02fbdd_jump

	_02fbca_jump:
		mov    0x00006d(%ecx),%ah
		mov    _0c1bcd_data,%al
		and    $0x0000fb,%al
		test   %ah,%ah
		jbe    _02fb67_jump
		cmp    $0x000005,%ah
		je     _02fb92_jump

	_02fbdd_jump:
		mov    0x000081(%ecx),%dl
		mov    0x000032(%ecx),%eax
		and    $0x0000fb,%dl
		sar    $0x000010,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f804_func
		mov    $0x000040,%dh
		mov    0x000028(%ecx),%esi
		xor    %eax,%eax
		mov    %dh,_0c2502_data
		mov    0x000068(%ecx),%al
		xor    %edx,%edx
		add    %esi,%eax
		mov    _0c1bb4_data,%dl
		sub    %edx,%eax
		mov    %eax,_0c1b74_data
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb5_data,%al
		sub    %eax,%edx
		mov    %edx,_0c1b78_data

	_02fc31_jump:
		decb   0x00007f(%ecx)

	_02fc34_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0306c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000040(%eax),%cx
		xor    %eax,%eax
		mov    _0c1b74_data,%bx
		mov    _0c1bb4_data,%al
		mov    0x000028(%esi),%di
		add    %ebx,%eax
		sub    %edi,%eax
		movzbw 0x000068(%esi),%di
		sub    %edi,%eax
		mov    0x000034(%esi),%bx
		mov    %eax,%edi
		cmp    _0c1b96_data,%bx
		jne    _030817_jump
		movb   $0x000005,0x000072(%esi)
		mov    _0c1b78_data,%ebx
		movswl %di,%eax
		add    $0x000008,%ebx
		test   %eax,%eax
		jle    _03079b_jump
		cmp    $0x000062,%eax
		jle    _030723_jump
		mov    %ebx,_0c1b78_data
		jmp    _030755_jump

	_030723_jump:
		cmp    $0x000046,%eax
		jle    _03072f_jump
		mov    $0x000004,%edx
		jmp    _030755_jump

	_03072f_jump:
		cmp    $0x00003c,%eax
		jle    _03073b_jump
		mov    $0x000003,%edx
		jmp    _030755_jump

	_03073b_jump:
		cmp    $0x000028,%eax
		jle    _030747_jump
		mov    $0x000002,%edx
		jmp    _030755_jump

	_030747_jump:
		cmp    $0x000014,%eax
		jle    _030753_jump
		mov    $0x000001,%edx
		jmp    _030755_jump

	_030753_jump:
		xor    %edx,%edx

	_030755_jump:
		cmp    %dx,%cx
		jge    _030774_jump
		mov    0x000071(%esi),%al
		xor    %ebx,%ebx
		mov    %al,%bl
		dec    %al
		mov    %al,0x000071(%esi)
		test   %ebx,%ebx
		jg     _030774_jump
		inc    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _030838_jump

	_030774_jump:
		cmp    %dx,%cx
		jle    _030838_jump
		mov    0x000071(%esi),%al
		xor    %edx,%edx
		mov    %al,%dl
		dec    %al
		mov    %al,0x000071(%esi)
		test   %edx,%edx
		jg     _030838_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _030838_jump

	_03079b_jump:
		neg    %edi
		movswl %di,%eax
		cmp    $0x000069,%eax
		jle    _0307ad_jump
		mov    %ebx,_0c1b78_data
		jmp    _0307df_jump

	_0307ad_jump:
		cmp    $0x000046,%eax
		jle    _0307b9_jump
		mov    $0xfffffffc,%edx
		jmp    _0307df_jump

	_0307b9_jump:
		cmp    $0x00003c,%eax
		jle    _0307c5_jump
		mov    $0xfffffffd,%edx
		jmp    _0307df_jump

	_0307c5_jump:
		cmp    $0x000028,%eax
		jle    _0307d1_jump
		mov    $0xfffffffe,%edx
		jmp    _0307df_jump

	_0307d1_jump:
		cmp    $0x000014,%eax
		jle    _0307dd_jump
		mov    $0xffffffff,%edx
		jmp    _0307df_jump

	_0307dd_jump:
		xor    %edx,%edx

	_0307df_jump:
		cmp    %dx,%cx
		jle    _0307fb_jump
		mov    0x000071(%esi),%al
		xor    %ebx,%ebx
		mov    %al,%bl
		dec    %al
		mov    %al,0x000071(%esi)
		test   %ebx,%ebx
		jg     _0307fb_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _030838_jump

	_0307fb_jump:
		cmp    %dx,%cx
		jle    _030838_jump
		mov    0x000071(%esi),%al
		xor    %edx,%edx
		mov    %al,%dl
		dec    %al
		mov    %al,0x000071(%esi)
		test   %edx,%edx
		jg     _030838_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _030838_jump

	_030817_jump:
		mov    0x000072(%esi),%al
		xor    %edx,%edx
		mov    %al,%dl
		dec    %al
		mov    %al,0x000072(%esi)
		test   %edx,%edx
		jne    _030838_jump
		movswl %cx,%eax
		movb   $0x000005,0x000072(%esi)
		test   %eax,%eax
		je     _030838_jump
		jle    _030837_jump
		dec    %ecx
		jmp    _030838_jump

	_030837_jump:
		inc    %ecx

	_030838_jump:
		mov    %ecx,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000068(%esi),%al
		add    %ecx,%edx
		mov    0x000069(%esi),%bl
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _030859_jump
		xor    %ecx,%ecx

	_030859_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    %cx,0x000040(%esi)
		test   %eax,%eax
		jne    _0308c1_jump
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _0308c1_jump
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _030a55_jump
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _030a55_jump
		xor    %eax,%eax
		mov    0x00007f(%esi),%al
		cmp    $0x000064,%eax
		jle    _0308b5_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00007f(%esi)
		call   _056614_func
		jmp    _030a55_jump

	_0308b5_jump:
		mov    %al,%dh
		inc    %dh
		mov    %dh,0x00007f(%esi)
		jmp    _030a55_jump

	_0308c1_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _0309a4_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _0309a4_jump
		movw   $0x000000,0x000052(%esi)
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _030a55_jump
		mov    _0c1ba0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _030a55_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000014,%eax
		jl     _030a55_jump
		cmp    $0x000016,%eax
		jg     _030a55_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01da90_func
		movswl %di,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _03093f_jump
		neg    %eax

	_03093f_jump:
		cmp    $0x000064,%eax
		jge    _030a55_jump
		mov    -0x000002(%esp),%ebx
		xor    %eax,%eax
		mov    _0c1b78_data,%edi
		mov    _0c1bb5_data,%al
		sar    $0x000010,%ebx
		add    %edi,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		sub    %eax,%ebx
		lea    -0x00001c(%ebx),%eax
		test   %eax,%eax
		jge    _030972_jump
		neg    %eax

	_030972_jump:
		cmp    $0x000014,%eax
		jge    _030a55_jump
		test   %edx,%edx
		jge    _030988_jump
		orb    $0x000008,_0c1bcd_data
		jmp    _03098f_jump

	_030988_jump:
		andb   $0x0000f7,_0c1bcd_data

	_03098f_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02baec_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0309a4_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _030a55_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _030a55_jump
		cmpl   $0x000000,_0c1b70_data
		jne    _030a55_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		test   %eax,%eax
		jne    _030a55_jump
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _030a55_jump
		mov    $0x000001,%ebx
		mov    $0xffffffff,%ecx
		lea    0x00000c(%esp),%eax
		mov    $0x000001,%edx
		mov    %ebx,_0c1b70_data
		mov    %cx,_0c1ba2_data
		push   %eax
		lea    0x00000c(%esp),%eax
		mov    _0c1b74_data,%ecx
		lea    0x000008(%esp),%ebx
		sub    $0x000004,%ecx
		push   %eax
		mov    %ecx,_0c1b74_data
		mov    %esi,%eax
		lea    0x000008(%esp),%ecx
		call   _01da90_func
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb5_data,%al
		mov    $0x000008,%ebx
		sub    %eax,%edx
		mov    $_0c1b4c_data,%eax
		mov    %edx,_0c1b78_data
		xor    %edx,%edx
		call   _01d6f8_func

	_030a55_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030a60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x000050(%esi),%ecx
		mov    0x000069(%esi),%al
		sar    $0x000010,%ecx
		mov    %ax,0x000010(%esp)
		test   %ecx,%ecx
		jne    _030a9a_jump
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _030b52_jump

	_030a9a_jump:
		cmp    $0x000001,%ecx
		jne    _030b52_jump
		mov    _0c1b96_data,%ax
		mov    0x000034(%esi),%dx
		cmp    %dx,%ax
		jne    _030aea_jump
		xor    %edx,%eax
		mov    _0c1b74_data,%bx
		mov    _0c1bb4_data,%al
		mov    0x000028(%esi),%cx
		add    %ebx,%eax
		mov    0x00000c(%esp),%edi
		sub    %ecx,%eax
		sub    %edi,%eax
		mov    _0c1b78_data,%ebx
		movswl %ax,%ecx
		add    $0x000008,%ebx
		cmp    $0x000060,%ecx
		jg     _030ae4_jump
		cmp    $0xffffff95,%ecx
		jge    _030aea_jump

	_030ae4_jump:
		mov    %ebx,_0c1b78_data

	_030aea_jump:
		mov    0x00000e(%esp),%edi
		mov    0x00000a(%esp),%ecx
		mov    %esi,%eax
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		mov    %edi,%ebx
		mov    %ecx,%edx
		call   _01d9a4_func
		test   %ax,%ax
		je     _030b29_jump
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _02d280_func
		test   %ax,%ax
		je     _030b29_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _056614_func

	_030b29_jump:
		mov    0x000081(%esi),%ah
		xor    %edx,%edx
		and    $0x0000f7,%ah
		mov    0x000070(%esi),%dl
		mov    %ah,0x000081(%esi)
		cmp    $0x000014,%edx
		jne    _030b52_jump
		mov    0x000056(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)

	_030b52_jump:
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jl     _030f38_jump
		mov    0x000032(%esi),%ebx
		mov    _0c1b30_data,%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,2),%ax
		movswl %ax,%edi
		mov    %edi,%ecx
		shl    $0x000005,%ecx
		add    %edi,%ecx
		mov    _0c1b34_data,%edx
		shl    $0x000002,%ecx
		add    %edx,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		jne    _030b93_jump
		movl   $0x000001,0x000024(%ecx)

	_030b93_jump:
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _030f38_jump
		mov    0x000040(%esi),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _030f38_jump
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jne    _030bce_jump
		mov    %edx,%ebx
		mov    %ecx,%eax
		mov    $0x000063,%edx
		movw   $0x000002,0x000052(%esi)
		call   _056614_func

	_030bce_jump:
		mov    0x000050(%esi),%edi
		sar    $0x000010,%edi
		cmp    $0x000002,%edi
		jne    _030cfa_jump
		movw   $0x000003,0x000052(%ecx)
		mov    0x000028(%ecx),%di
		sub    0x000028(%esi),%di
		mov    0x00002c(%esi),%dx
		mov    %edi,%eax
		mov    0x00002c(%ecx),%di
		sub    %edx,%edi
		mov    %edi,%edx
		movswl %ax,%edi
		cmp    $0x000006,%edi
		jle    _030c0c_jump
		movw   $0x00fffc,0x000040(%ecx)
		jmp    _030f38_jump

	_030c0c_jump:
		cmp    $0xfffffffa,%edi
		jge    _030c21_jump
		movw   $0x000004,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030c21_jump:
		test   %edi,%edi
		jle    _030c35_jump
		movw   $0x00ffff,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030c35_jump:
		jge    _030c47_jump
		movw   $0x000001,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030c47_jump:
		movswl %dx,%edi
		movw   $0x000000,0x000040(%ecx)
		cmp    $0xfffffff8,%edi
		jge    _030c65_jump
		movw   $0x000004,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030c65_jump:
		cmp    $0x000008,%edi
		jle    _030c7a_jump
		movw   $0x00fffc,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030c7a_jump:
		test   %edi,%edi
		jle    _030c8e_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030c8e_jump:
		jl     _030f32_jump
		movw   $0x000000,0x000042(%ecx)
		xor    %edx,%edx
		movw   $0x000004,0x000052(%esi)
		mov    0x000060(%ecx),%dx
		movw   $0x000004,0x000052(%ecx)
		cmp    $0x0000a8,%edx
		jne    _030cc5_jump
		mov    $0x000009,%edi
		mov    $0x000005,%eax
		mov    %di,0x000020(%esp)
		jmp    _030cd4_jump

	_030cc5_jump:
		mov    $0x000005,%ebx
		mov    $0x000009,%eax
		mov    %bx,0x000020(%esp)

	_030cd4_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d6f8_func
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000020(%esp),%bl
		call   _01d6f8_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030cfa_jump:
		cmp    $0x000004,%edi
		jne    _030e07_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x0000a8,%edx
		jne    _030d1a_jump
		movw   $0x000007,0x000020(%esp)
		jmp    _030d21_jump

	_030d1a_jump:
		movw   $0x00000b,0x000020(%esp)

	_030d21_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _030f38_jump
		mov    0x00001e(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x00006c(%esi),%bl
		cmp    %edx,%ebx
		jne    _030f38_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		test   %edx,%edx
		jne    _030f38_jump
		movw   $0x000005,0x000052(%esi)
		cmpl   $0x000000,_0c1b70_data
		jne    _030f38_jump
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _030f38_jump
		mov    _0c1ba0_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _030f38_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x0000a9,%edx
		jne    _030f38_jump
		mov    $0x000001,%ecx
		lea    0x000028(%esp),%edx
		lea    0x00001c(%esp),%ebx
		mov    _0c1b74_data,%edi
		mov    %esi,%eax
		mov    %ecx,_0c1b70_data
		push   %edx
		sub    $0x000004,%edi
		lea    0x000028(%esp),%edx
		lea    0x00000c(%esp),%ecx
		push   %edx
		mov    $0x000001,%edx
		mov    %edi,_0c1b74_data
		call   _01da90_func
		mov    0x000006(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000074(%esi),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0c1bb5_data,%dl
		sub    %edx,%ebx
		mov    $_0c1b4c_data,%eax
		mov    %ebx,_0c1b78_data
		xor    %edx,%edx
		mov    $0x000008,%ebx
		call   _01d6f8_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030e07_jump:
		cmp    $0x000005,%edi
		jne    _030f38_jump
		mov    0x00000e(%esp),%edi
		mov    0x00000a(%esp),%ebp
		xor    %eax,%eax
		sar    $0x000010,%edi
		mov    0x000068(%ecx),%al
		sar    $0x000010,%ebp
		mov    %ax,0x000018(%esp)
		xor    %eax,%eax
		mov    %edi,%ebx
		mov    0x000069(%ecx),%al
		mov    %ebp,%edx
		mov    %ax,0x000014(%esp)
		mov    %esi,%eax
		call   _01d9a4_func
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx
		mov    %eax,0x00001c(%esp)
		mov    %edx,(%esp)
		mov    0x000016(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%edx
		mov    (%esp),%ebx
		mov    %edx,0x000004(%esp)
		call   _01d9a4_func
		mov    %ax,0x000008(%esp)
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _02d280_func
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		mov    %eax,0x000024(%esp)
		mov    %ecx,%eax
		call   _02d280_func
		mov    %eax,0x000028(%esp)
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _030efa_jump
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _030efa_jump
		mov    %edi,%ebx
		mov    %ebp,%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movw   $0x000001,0x000052(%ecx)
		call   _02d280_func
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		mov    %ecx,%eax
		call   _02d280_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _056614_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _056614_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030efa_jump:
		mov    0x000012(%esp),%ebx
		mov    0x000016(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01d9a4_func
		test   %ax,%ax
		jne    _030f38_jump
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x0000a8,%edx
		jne    _030f32_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030f32_jump:
		movw   $0x000001,0x000042(%ecx)

	_030f38_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030f44_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		xor    %ebx,%ebx
		cmp    $0x0000a9,%eax
		jne    _031024_jump
		mov    0x000032(%esi),%eax
		mov    _0c1b30_data,%edx
		sar    $0x000010,%eax
		mov    $0x00000a,%edi
		mov    (%edx,%eax,2),%ax
		mov    0x000034(%esi),%dx
		mov    %di,(%esp)
		cmp    %dx,%ax
		je     _031062_jump
		cwtl   
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edi
		add    %eax,%edi
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		cmp    $0x0000a8,%eax
		jne    _031062_jump
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		cmp    $0x000080,%eax
		jle    _030fc0_jump
		movw   $0x000001,0x000042(%edi)
		jmp    _030fcb_jump

	_030fc0_jump:
		cmp    $0xffffff80,%eax
		jge    _030fcb_jump
		movw   $0x00ffff,0x000042(%edi)

	_030fcb_jump:
		mov    _0c25a6_data,%ecx
		mov    _0c25a4_data,%ebx
		push   %edi
		mov    0x000040(%edi),%eax
		mov    0x00002c(%edi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%eax
		sar    $0x000010,%ebx
		add    %eax,%edx
		mov    _0c25a8_data,%eax
		mov    %edx,0x00002c(%edi)
		sar    $0x000010,%eax
		mov    _0c25a2_data,%edx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02a4bc_func
		mov    %eax,%ebx
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edi),%ecx
		add    %eax,%eax
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		mov    0x000042(%edi),%cx
		add    %ecx,%ecx
		jmp    _031062_jump

	_031024_jump:
		mov    _0c25a8_data,%eax
		mov    _0c25a6_data,%ecx
		mov    _0c25a4_data,%ebx
		mov    _0c25a2_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02a4bc_func
		mov    $0x000001,%edx
		mov    %eax,%ebx
		mov    0x000042(%esi),%cx
		mov    %dx,(%esp)

	_031062_jump:
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		je     _031252_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		dec    %ebx
		cmp    $0x000002,%eax
		jne    _0310db_jump
		movzbl _0c1bb8_data,%edi
		cmp    %eax,%edi
		je     _0310db_jump
		cmp    $0x000001,%edi
		je     _0310db_jump
		cmp    $0x000008,%edi
		je     _03109f_jump
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func

	_03109f_jump:
		movswl %cx,%eax
		cmp    $0x000080,%eax
		jle    _0310b0_jump
		mov    $0x000001,%ecx
		jmp    _0310ba_jump

	_0310b0_jump:
		cmp    $0xffffff80,%eax
		jge    _0310ba_jump
		mov    $0xffffffff,%ecx

	_0310ba_jump:
		mov    _0c1b78_data,%edi
		movswl %cx,%eax
		add    %eax,%edi
		xor    %ecx,%ecx
		mov    %edi,_0c1b78_data
		mov    %cx,_0c1b9e_data
		mov    %cx,_0c1b8e_data

	_0310db_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _0310f7_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		je     _031252_jump

	_0310f7_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _031110_jump
		mov    _0c1bb8_data,%al
		cmp    $0x00003d,%eax
		je     _031252_jump

	_031110_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000014,%eax
		jl     _031252_jump
		cmp    $0x000016,%eax
		jg     _031252_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _031252_jump
		mov    -0x000002(%esp),%edx
		mov    0x00006c(%esi),%al
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jne    _031252_jump
		xor    %edx,%eax
		mov    0x000075(%esi),%al
		cmp    $0x000001,%eax
		je     _03115c_jump
		movswl %bx,%eax
		cmp    $0x000001,%eax
		jne    _031226_jump

	_03115c_jump:
		testb  $0x000004,_0c1bcd_data
		je     _031226_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _031185_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		je     _031226_jump

	_031185_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _03119e_jump
		mov    _0c1bb8_data,%al
		cmp    $0x00003d,%eax
		je     _031226_jump

	_03119e_jump:
		xor    %eax,%eax
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%al
		mov    0x000028(%esi),%bx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		movswl %dx,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _0311c6_jump
		neg    %eax

	_0311c6_jump:
		cmp    $0x000019,%eax
		jge    _031210_jump
		mov    $0xffffffff,%edx
		mov    $_0c1b4c_data,%eax
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx
		mov    %cx,_0c1b8c_data
		mov    %cx,_0c1b8e_data
		mov    %cx,_0c25b4_data
		mov    %dx,_0c1ba2_data
		xor    %edx,%edx
		mov    %ebp,_0c1b70_data
		call   _01d6f8_func
		mov    0x000034(%esi),%ax
		mov    %ax,_0c1b96_data
		jmp    _031252_jump

	_031210_jump:
		test   %edi,%edi
		jge    _03121d_jump
		orb    $0x000008,_0c1bcd_data
		jmp    _031246_jump

	_03121d_jump:
		andb   $0x0000f7,_0c1bcd_data
		jmp    _031246_jump

	_031226_jump:
		xor    %eax,%eax
		mov    0x000075(%esi),%al
		test   %eax,%eax
		je     _031236_jump
		movswl %bx,%eax
		test   %eax,%eax
		jne    _03123f_jump

	_031236_jump:
		orb    $0x000008,_0c1bcd_data
		jmp    _031246_jump

	_03123f_jump:
		andb   $0x0000f7,_0c1bcd_data

	_031246_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02baec_func

	_031252_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031260_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%bl
		call   _0189c4_func
		sub    %ebx,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0c2526_data,%ax
		add    $0x000090,%eax
		mov    %ax,0x00003c(%edx)
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%edx)
		pop    %edx
		pop    %ebx
		ret    



_031298_func:
		incb   _0d7583_data
		xor    %eax,%eax
		mov    _0d7583_data,%al
		cmp    $0x000003,%eax
		jne    _0312b2_jump
		movb   $0x000003,_0d7584_data
		ret    

	_0312b2_jump:
		mov    _095eec_data(%eax),%al
		mov    %al,_0d7584_data
		ret    



_0313cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    _0c1b04_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _03152a_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _03152a_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    _0c2510_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _031481_jump
		mov    $0x000040,%ebx
		mov    $0x000005,%edx
		mov    _0c1ef0_data,%eax
		call   _01d6f8_func
		xor    %eax,%eax
		mov    0x000028(%esi),%edi
		mov    0x000068(%esi),%al
		add    %eax,%edi
		mov    _0c1ef0_data,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%edi
		xor    %edx,%edx
		mov    %edi,0x000028(%eax)
		mov    0x000069(%esi),%dl
		mov    0x00002c(%esi),%edi
		add    %edx,%edi
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%edi
		sub    $0x000005,%edi
		mov    0x000024(%eax),%edx
		mov    %edi,0x00002c(%eax)
		test   %edx,%edx
		jne    _031466_jump
		call   _01f7d4_func

	_031466_jump:
		mov    _0c1ef0_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dl
		mov    %dl,0x000081(%eax)

	_031481_jump:
		mov    0x00006c(%ecx),%al
		cmp    $0x00001c,%al
		jb     _031897_jump
		jbe    _0316cd_jump
		cmp    $0x00001d,%al
		jbe    _0315c8_jump
		cmp    $0x000028,%al
		jne    _03152a_jump
		xor    %edx,%edx
		mov    0x00000c(%ecx),%esi
		mov    0x00006d(%ecx),%dl
		and    $0x0000ff,%eax
		mov    (%esi,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _0314c2_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _0314e5_jump

	_0314c2_jump:
		xor    %eax,%eax
		mov    0x00006a(%ecx),%al
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    0x000004(%ecx),%eax
		mov    0x00000a(%eax,%esi,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_0314e5_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _03152a_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _03152a_jump
		mov    %ecx,%eax
		call   _03288c_func

	_03152a_jump:
		pop    %ebp
		pop    %edi

	_03152c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031531_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_031554_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _03152a_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _03152a_jump
		decw   0x000050(%esi)
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0315ad_jump
		mov    $0x000028,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0315ad_jump:
		mov    $0x00001c,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000056(%esi)
		call   _01d6f8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0315c8_jump:
		mov    0x00002c(%esi),%ebx
		mov    _0d7586_data,%eax
		add    $0x000006,%ebx
		sar    $0x000010,%eax
		mov    %ebx,0x00002c(%esi)
		cmp    %ebx,%eax
		jge    _0315e0_jump
		mov    %eax,0x00002c(%esi)

	_0315e0_jump:
		mov    _0c2510_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _031609_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edi
		mov    0x000069(%esi),%al
		add    %eax,%edi
		mov    _0c1ef0_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%edi
		sub    $0x000005,%edi
		mov    %edi,0x00002c(%eax)

	_031609_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%edi
		mov    (%edx),%eax
		testb  $0x000010,0x000007(%edi,%eax,1)
		je     _031634_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _031657_jump

	_031634_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_031657_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _0316a8_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0316a8_jump
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000056(%esi)
		call   _01d6f8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0316a8_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _03152a_jump
		mov    $0x00001b,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0316cd_jump:
		xor    %eax,%eax
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0d7586_data,%bx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b78_data,%bx
		mov    _0c1bb5_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0d7588_data,%di
		mov    0x000069(%esi),%al
		add    %edi,%eax
		sub    %eax,%ebx
		movswl %dx,%eax
		mov    %eax,%edi
		imul   %eax,%edi
		movswl %bx,%edx
		imul   %edx,%edx
		test   %eax,%eax
		jge    _031721_jump
		neg    %eax

	_031721_jump:
		add    %edi,%edx
		cmp    $0x000028,%eax
		jl     _031730_jump
		cmp    $0x000bb8,%edx
		jae    _031737_jump

	_031730_jump:
		mov    $0x000001,%ah
		jmp    _031739_jump

	_031737_jump:
		xor    %ah,%ah

	_031739_jump:
		mov    0x00006c(%ecx),%al
		cmp    $0x00001a,%al
		jb     _03152a_jump
		jbe    _031755_jump
		cmp    $0x00001c,%al
		je     _031818_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031755_jump:
		test   %ah,%ah
		jne    _0317a8_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _031770_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		test   %eax,%eax
		je     _0317a8_jump

	_031770_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edi
		shl    $0x000002,%eax
		add    %eax,%edi
		xor    %eax,%eax
		mov    (%edi),%edi
		mov    _0c1bb8_data,%al
		testb  $0x000040,0x000007(%edi,%eax,8)
		je     _0317bd_jump
		movswl %bx,%eax
		test   %eax,%eax
		jge    _03179b_jump
		neg    %eax

	_03179b_jump:
		cmp    $0x00001e,%eax
		jge    _0317bd_jump
		cmp    $0x000bb8,%edx
		jae    _0317bd_jump

	_0317a8_jump:
		mov    $0x00001b,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0317bd_jump:
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x00001d,%eax
		jge    _03152a_jump
		mov    _095eae_data(,%eax,2),%eax
		mov    _0d7586_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    _0c2510_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x00002c(%esi)
		cmp    $0xffffffff,%eax
		je     _03180d_jump
		mov    _0c1ef0_data,%eax
		mov    0x00002c(%esi),%ebx
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x000069(%esi),%dl
		mov    0x000069(%eax),%cl
		add    %ebx,%edx
		sub    %ecx,%edx
		sub    $0x000005,%edx
		mov    %edx,0x00002c(%eax)

	_03180d_jump:
		incw   0x000056(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031818_jump:
		test   %ah,%ah
		jne    _03183d_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _03183d_jump
		mov    $0x00001d,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03183d_jump:
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x00001d,%eax
		jge    _03152a_jump
		mov    _095eae_data(,%eax,2),%edx
		mov    _0d7588_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    _0c2510_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03188c_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %eax,%edx
		mov    _0c1ef0_data,%eax
		xor    %ecx,%ecx
		mov    0x000069(%eax),%cl
		sub    %ecx,%edx
		sub    $0x000005,%edx
		mov    %edx,0x00002c(%eax)

	_03188c_jump:
		incw   0x000056(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031897_jump:
		cmp    $0x00001a,%al
		jb     _03152a_jump
		jbe    _0316cd_jump
		mov    0x00002c(%esi),%ebp
		mov    _0d7588_data,%eax
		sub    $0x000008,%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x00002c(%esi)
		cmp    %ebp,%eax
		jle    _0318bd_jump
		mov    %eax,0x00002c(%esi)

	_0318bd_jump:
		mov    _0c2510_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0318e6_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edi
		mov    0x000069(%esi),%al
		add    %eax,%edi
		mov    _0c1ef0_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%edi
		sub    $0x000005,%edi
		mov    %edi,0x00002c(%eax)

	_0318e6_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _031531_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _031554_jump

_031914_switch:
		.long   _031944_case
		.long   _0319e5_case
		.long   _031aa6_case
		.long   _031b4a_case




_031924_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0d7584_data,%al
		cmp    $0x000003,%al
		ja     _03152c_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_031914_switch(,%eax,4)

	_031944_case:
		mov    _0c1b14_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03152c_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _03199f_jump
		mov    $_095ef0_data,%eax
		movw   $0x000002,0x000050(%edx)
		call   _032b4c_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092238_data(,%eax,4)
		movb   $0x000001,_0c25e1_data
		call   _03afd0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03199f_jump:
		cmp    $0x000001,%eax
		jne    _03152c_jump
		mov    0x000024(%edx),%esi
		test   %esi,%esi
		jne    _03152c_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092238_data(,%eax,4)
		mov    0x000081(%edx),%cl
		xor    %bh,%bh
		mov    %esi,0x000024(%edx)
		and    $0x0000fb,%cl
		mov    %bh,_0c25e1_data
		mov    %cl,0x000081(%edx)
		call   _031298_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0319e5_case:
		mov    _0c1b16_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03152c_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _031a5d_jump
		mov    _0c1b18_data,%eax
		sar    $0x000010,%eax
		movw   $0x000002,0x000050(%edx)
		cmp    $0xffffffff,%eax
		je     _031a34_jump
		mov    %eax,%ecx
		shl    $0x000005,%eax
		add    %ecx,%eax
		movw   $0x000002,0x000050(%ebx,%eax,4)

	_031a34_jump:
		mov    $_095ef5_data,%eax
		call   _032b4c_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092238_data(,%eax,4)
		movb   $0x000001,_0c25e1_data
		call   _03b084_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031a5d_jump:
		cmp    $0x000001,%eax
		jne    _03152c_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03152c_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092238_data(,%eax,4)
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %bh,%bh
		and    $0x0000fb,%cl
		mov    %bh,_0c25e1_data
		mov    %cl,0x000081(%edx)
		call   _031298_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031aa6_case:
		mov    _0c1b1a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03152c_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _031b01_jump
		mov    $_095efa_data,%eax
		movw   $0x000002,0x000050(%edx)
		call   _032b4c_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092238_data(,%eax,4)
		movb   $0x000001,_0c25e1_data
		call   _03b248_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031b01_jump:
		cmp    $0x000001,%eax
		jne    _03152c_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03152c_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092238_data(,%eax,4)
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %bh,%bh
		and    $0x0000fb,%cl
		mov    %bh,_0c25e1_data
		mov    %cl,0x000081(%edx)
		call   _031298_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031b4a_case:
		mov    $_095eff_data,%eax
		call   _032b4c_func
		mov    %edx,%eax
		call   _0329e0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_031b60_switch:
		.long   _031b95_case
		.long   _031b95_case
		.long   _031b9e_case
		.long   _031ba7_case
		.long   _031bcf_case
		.long   _031bb0_case




_031b78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _031bcf_case
		mov    0x00006c(%esi),%al
		cmp    $0x000027,%eax
		je     _031bb9_jump
		jmp    _031bcf_case

	_031b95_case:
		mov    %esi,%eax
		call   _0327dc_func
		jmp    _031bcf_case

	_031b9e_case:
		mov    %esi,%eax
		call   _03288c_func
		jmp    _031bcf_case

	_031ba7_case:
		mov    %esi,%eax
		call   _032910_func
		jmp    _031bcf_case

	_031bb0_case:
		mov    %esi,%eax
		call   _0329e0_func
		jmp    _031bcf_case

	_031bb9_jump:
		mov    _0c1b0a_data,%al
		cmp    $0x000005,%al
		ja     _031bcf_case
		and    $0x0000ff,%eax
		jmp    *%cs:_031b60_switch(,%eax,4)

	_031bcf_case:
		xor    %ecx,%ecx
		mov    0x00006d(%esi),%cl
		test   %ecx,%ecx
		jne    _031d26_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%eax
		jne    _031d26_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		cmp    $0x000004,%edx
		jne    _031bff_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _0320ad_jump

	_031bff_jump:
		xor    %ebx,%ebx
		shl    $0x000003,%eax
		mov    _0c1b0a_data,%bl
		shl    $0x000002,%ecx
		cmp    $0x000004,%ebx
		jne    _031c9a_jump
		mov    0x00000c(%esi),%ebx
		mov    (%ecx,%ebx,1),%ebx
		testb  $0x000010,0x000007(%ebx,%eax,1)
		je     _031c27_jump
		test   %edx,%edx
		jmp    _031c45_jump

	_031c27_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%esi),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%esi),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		and    $0x00ffff,%eax
		dec    %eax
		cmp    %eax,%edx

	_031c45_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _0320ad_jump
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0320ad_jump
		mov    %esi,%eax
		call   _0329e0_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031c9a_jump:
		mov    0x00000c(%esi),%ebx
		mov    (%ecx,%ebx,1),%ebx
		testb  $0x000010,0x000007(%ebx,%eax,1)
		je     _031cab_jump
		test   %edx,%edx
		jmp    _031cc9_jump

	_031cab_jump:
		xor    %ecx,%ecx
		mov    0x00006a(%esi),%cl
		lea    0x000000(,%ecx,4),%eax
		mov    0x000004(%esi),%ebx
		sub    %ecx,%eax
		mov    0x00000a(%ebx,%eax,4),%ax
		and    $0x00ffff,%eax
		dec    %eax
		cmp    %eax,%edx

	_031cc9_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _0320ad_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0320ad_jump
		mov    0x000081(%esi),%ch
		mov    %eax,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031d26_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _031d6b_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000008,%eax
		je     _031d5d_jump
		cmp    $0x00000a,%eax
		je     _031d5d_jump
		cmp    $0x00000c,%eax
		je     _031d5d_jump
		cmp    $0x00000e,%eax
		je     _031d5d_jump
		cmp    $0x000016,%eax
		je     _031d5d_jump
		cmp    $0x000017,%eax
		je     _031d5d_jump
		cmp    $0x000018,%eax
		jne    _031d6b_jump

	_031d5d_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000016,%eax
		je     _031f1d_jump

	_031d6b_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _032060_jump
		xor    %ecx,%ecx
		mov    0x00006c(%esi),%cl
		cmp    $0x00000f,%ecx
		jne    _032060_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		test   %edx,%edx
		jne    _031fde_jump
		mov    0x00000c(%esi),%edx
		mov    (%edx,%eax,4),%eax
		mov    0x000005(%eax,%ecx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0c24c8_data(%eax)
		jne    _0320ad_jump
		mov    %esi,%eax
		call   _070b48_func
		mov    0x000081(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x00000c,%dh
		mov    %dh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031dd7_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		xor    %ebx,%ebx
		call   _0324a8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031df2_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %ecx,%ebx
		call   _0324a8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031e0d_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    $0x000002,%ebx
		call   _0324a8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031e2b_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    $0x000003,%ebx
		call   _0324a8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031e49_jump:
		mov    $0x000002,%al
		mov    $0x000003,%ecx
		movswl %dx,%edi
		movswl %bx,%esi
		mov    $0x000012,%ebx
		mov    %al,_0d7582_data
		mov    $_095ef0_data,%eax
		mov    %edi,%edx
		call   _032b4c_func
		mov    %esi,%eax
		call   _0324a8_func
		mov    $0x000005,%ecx
		mov    $0x000012,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _0324a8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031e8f_jump:
		mov    $0x000002,%ch
		mov    $_095ef5_data,%eax
		movswl %dx,%edi
		movswl %bx,%esi
		mov    $0x000013,%ebx
		mov    %ch,_0d7582_data
		call   _032b4c_func
		mov    %edi,%edx
		mov    $0x000001,%ecx
		mov    %esi,%eax
		call   _0324a8_func
		mov    $0x000004,%ecx
		mov    $0x000013,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _0324a8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031ed6_jump:
		mov    $0x000002,%cl
		mov    $_095efa_data,%eax
		movswl %dx,%esi
		movswl %bx,%edi
		mov    $0x000014,%ebx
		mov    %cl,_0d7582_data
		call   _032b4c_func
		mov    %esi,%edx
		mov    $0x000001,%ecx
		mov    %edi,%eax
		call   _0324a8_func
		mov    $0x000002,%ecx
		mov    $0x000014,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _0324a8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031f1d_jump:
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01da90_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		sub    $0x000060,%eax
		mov    -0x000002(%esp),%edx
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		add    %edx,%eax
		sub    $0x000080,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    $0xfffffffb,%edi
		mov    %ax,_0d758e_data
		mov    0x00006c(%esi),%al
		mov    %di,_0d758c_data
		cmp    $0x00000e,%al
		jb     _031fb2_jump
		jbe    _031e2b_jump
		cmp    $0x000017,%al
		jb     _031fa1_jump
		jbe    _031e8f_jump
		cmp    $0x000018,%al
		je     _031ed6_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031fa1_jump:
		cmp    $0x000016,%al
		je     _031e49_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031fb2_jump:
		cmp    $0x00000a,%al
		jb     _031fcd_jump
		jbe    _031df2_jump
		cmp    $0x00000c,%al
		je     _031e0d_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031fcd_jump:
		cmp    $0x000008,%al
		je     _031dd7_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031fde_jump:
		cmp    $0x000016,%edx
		jne    _0320ad_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01da90_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    %cx,_0d758e_data
		sub    $0x000060,%eax
		mov    -0x000002(%esp),%edx
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    $0xfffffffe,%edx
		sub    $0x000080,%eax
		mov    %dx,_0d758c_data
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x000004,%ebx
		call   _0324a8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032060_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _032081_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000015,%eax
		jne    _032081_jump
		mov    %esi,%eax
		call   _031924_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032081_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _0320ad_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00001a,%eax
		je     _0320a6_jump
		cmp    $0x00001b,%eax
		je     _0320a6_jump
		cmp    $0x00001c,%eax
		je     _0320a6_jump
		cmp    $0x00001d,%eax
		je     _0320a6_jump
		cmp    $0x000028,%eax
		jne    _0320ad_jump

	_0320a6_jump:
		mov    %esi,%eax
		call   _0313cc_func

	_0320ad_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0320b8_func:
		push   %ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _0320f8_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000010,%edx
		je     _0320cf_jump
		cmp    $0x000011,%edx
		jne    _0320f8_jump

	_0320cf_jump:
		xor    %edx,%edx
		mov    0x00007e(%eax),%dl
		test   %edx,%edx
		je     _0320f8_jump
		mov    0x000076(%eax),%dl
		test   %dl,%dl
		je     _0320e6_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x000076(%eax)

	_0320e6_jump:
		cmpb   $0x000000,0x000076(%eax)
		jne    _0320f8_jump
		mov    $0x000006,%ebx
		xor    %edx,%edx
		call   _01d6f8_func

	_0320f8_jump:
		pop    %ebx
		ret    



_0320fc_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		test   %eax,%eax
		jne    _03215f_jump
		mov    0x00006c(%ebx),%al
		cmp    $0x000007,%eax
		jne    _03211d_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d6e8_func

	_03211d_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000009,%eax
		jne    _032133_jump
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01d6e8_func

	_032133_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x00000b,%eax
		jne    _032149_jump
		mov    $0x00000c,%edx
		mov    %ebx,%eax
		call   _01d6e8_func

	_032149_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x00000d,%eax
		jne    _03215f_jump
		mov    $0x00000e,%edx
		mov    %ebx,%eax
		call   _01d6e8_func

	_03215f_jump:
		pop    %edx
		pop    %ebx
		ret    



_032164_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		je     _0323fd_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		jne    _032199_jump
		xor    %eax,%eax
		mov    _0c25a0_data,%al
		cmp    $0x000001,%eax
		jne    _03232b_jump
		movb   $0x000000,0x000076(%esi)
		jmp    _03232b_jump

	_032199_jump:
		cmp    $0x000004,%eax
		jne    _032298_jump
		mov    _0c1b02_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %ecx,%eax
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _032241_jump
		movw   $0x000000,0x000056(%esi)
		mov    0x000081(%ecx),%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		xor    %edx,%edx
		mov    %bh,0x000081(%ecx)
		xor    %ebx,%ebx
		movb   $0x0000fe,0x000076(%ecx)
		call   _01d6f8_func
		mov    _0c1b74_data,%ax
		movl   $0x000000,0x000028(%ecx)
		mov    %ax,0x00003c(%ecx)
		mov    _0c1b78_data,%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x00002c(%ecx)
		or     $0x000004,%al
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f7d4_func
		xor    %ah,%ah
		movb   $0x000000,0x00007e(%ecx)
		mov    %ah,_0c1b00_data
		mov    %ah,_0c1afe_data
		mov    %ah,_0c1aff_data

	_032241_jump:
		movzbw 0x000068(%ecx),%di
		add    0x00003c(%ecx),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00003e(%ecx),%bx
		mov    0x000069(%ecx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b00_data,%al
		cmp    $0x000001,%eax
		jne    _03232b_jump
		xor    %eax,%eax
		mov    _0c1aff_data,%al
		cmp    $0x000019,%eax
		jne    _03232b_jump
		movb   $0x000000,0x000076(%esi)
		jmp    _03232b_jump

	_032298_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%di
		mov    0x000068(%esi),%al
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%al
		add    %edx,%eax
		sub    %edi,%eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movw   $0x000000,0x000056(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _032300_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b78_data,%cx
		mov    _0c1bb5_data,%al
		add    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		jmp    _03232b_jump

	_032300_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c1bb5_data,%dl
		mov    _0c1bc0_data,%al
		sub    %eax,%edx
		mov    _0c1b78_data,%ebx
		sar    %edx
		add    %ebx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%edx
		mov    %edx,%ebx

	_03232b_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _032334_jump
		neg    %eax

	_032334_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _03233f_jump
		neg    %eax

	_03233f_jump:
		add    %edx,%eax
		movswl %ax,%ebp
		test   %ebp,%ebp
		jle    _032368_jump
		mov    $0x000004,%cl
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_032368_jump:
		xor    %eax,%eax
		mov    _0c24ca_data,%al
		test   %eax,%eax
		jne    _0323fd_jump
		mov    _0d758a_data,%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _032394_jump
		mov    $0x000001,%eax
		jg     _032394_jump
		neg    %eax

	_032394_jump:
		mov    _0d758c_data,%di
		add    %eax,%edi
		mov    _0d758c_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    %di,_0d758c_data
		cmp    $0x000000,%eax
		je     _0323c1_jump
		mov    $0x000001,%eax
		jg     _0323c1_jump
		neg    %eax

	_0323c1_jump:
		add    %ax,_0d758e_data
		xor    %ebx,%ebx
		mov    _0d758e_data,%di
		mov    0x00002c(%esi),%dx
		mov    0x000054(%esi),%ecx
		add    %edi,%edx
		mov    _0d758c_data,%ax
		movswl %dx,%ebp
		mov    0x000028(%esi),%dx
		mov    0x00006c(%esi),%bl
		add    %eax,%edx
		sar    $0x000010,%ecx
		movswl %dx,%eax
		mov    %ebp,%edx
		call   _0324a8_func
		movb   $0x000000,0x000076(%esi)

	_0323fd_jump:
		pop    %ebp
		pop    %edi
		pop    %esi

	_032400_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_032404_switch:
		.long   _032446_case
		.long   _032464_case
		.long   _03247e_case
		.long   _032491_case




_032414_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x000076(%eax)
		je     _032400_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _03242e_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000004,%edx
		je     _032400_jump

	_03242e_jump:
		movb   $0x000000,0x000076(%eax)
		mov    0x00006c(%eax),%al
		cmp    $0x000003,%al
		ja     _032400_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_032404_switch(,%eax,4)

	_032446_case:
		mov    _0c3315_data,%bh
		and    $0x0000e7,%bh
		mov    %bh,%cl
		mov    %bh,_0c3315_data
		or     $0x000008,%cl
		mov    %cl,_0c3315_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032464_case:
		mov    $_0c1b4c_data,%eax
		call   _070a70_func
		andb   $0x00009f,_0c3315_data
		call   _0503e8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03247e_case:
		mov    $_0c1b4c_data,%eax
		call   _070a70_func
		call   _05049c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032491_case:
		mov    $_0c1b4c_data,%eax
		call   _070a70_func
		andb   $0x0000fe,_0c3314_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0324a8_func:
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %ax,(%esp)
		mov    %dx,0x000004(%esp)
		mov    %bx,0x000010(%esp)
		mov    %ecx,0x000008(%esp)
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%dx
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %edi,%edi

	_0324d2_jump:
		xor    %esi,%esi
		mov    0x000060(%ecx),%si
		cmp    $0x0000d7,%esi
		jne    _0324ea_jump
		cmp    0x000024(%ecx),%edi
		jne    _0324ea_jump
		mov    $0x000001,%ebx

	_0324ea_jump:
		movswl %bx,%esi
		add    $0x000084,%ecx
		inc    %eax
		test   %esi,%esi
		jne    _0324fd_jump
		cmp    %dx,%ax
		jl     _0324d2_jump

	_0324fd_jump:
		sub    $0x000084,%ecx
		test   %bx,%bx
		je     _032546_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f7d4_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    0x000002(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		mov    0x000010(%esp),%bl
		jmp    _0325da_jump

	_032546_jump:
		mov    _0c1b34_data,%eax
		mov    %bx,0x00000c(%esp)
		xor    %ecx,%ecx

	_032552_jump:
		xor    %esi,%esi
		mov    0x000060(%eax),%si
		cmp    $0x0000d7,%esi
		jne    _032575_jump
		movswl %cx,%esi
		movzbl 0x00006b(%eax),%edi
		cmp    %esi,%edi
		jle    _032575_jump
		xor    %ecx,%ecx
		mov    %bx,0x00000c(%esp)
		mov    0x00006b(%eax),%cl

	_032575_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %dx,%bx
		jl     _032552_jump
		mov    0x00000a(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f7d4_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    0x000002(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		mov    0x000010(%esp),%bl
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		xor    %edx,%edx

	_0325da_jump:
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d6f8_func
		movb   $0x000000,0x00006b(%ecx)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		ret    



_0325f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0c3315_data,%ah
		test   $0x000018,%ah
		jne    _032612_jump
		test   $0x000060,%ah
		jne    _032612_jump
		test   $0x000002,%ah
		je     _032664_jump

	_032612_jump:
		mov    $_0c1b4c_data,%eax
		call   _070a70_func
		mov    _0c3315_data,%cl
		test   $0x000018,%cl
		je     _032632_jump
		mov    %cl,%ch
		or     $0x000018,%ch
		mov    %ch,_0c3315_data

	_032632_jump:
		testb  $0x000060,_0c3315_data
		je     _032640_jump
		call   _0503e8_func

	_032640_jump:
		testb  $0x000002,_0c3315_data
		je     _03264e_jump
		call   _05049c_func

	_03264e_jump:
		mov    0x000081(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%edx)

	_032664_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032668_func:
		push   %edx
		mov    _0c1b04_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0326af_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0d7584_data,%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%eax)
		mov    0x000028(%eax),%dx
		mov    %dx,0x00003c(%eax)
		mov    _0d7586_data,%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%eax)
		mov    0x00002c(%eax),%dx
		mov    %dx,0x00003e(%eax)

	_0326af_jump:
		pop    %edx
		ret    



_0326b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%dl
		mov    _0c1b04_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _032762_jump
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    _0d7584_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0d7588_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		test   %dl,%dl
		je     _032762_jump
		mov    $0x000040,%ebx
		mov    $0x000005,%edx
		mov    _0c1ef0_data,%eax
		call   _01d6f8_func
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%bl
		mov    _0c1ef0_data,%eax
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x000028(%eax)
		mov    0x000069(%ecx),%dl
		mov    0x00002c(%ecx),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%ebx
		lea    -0x000005(%ebx),%edx
		mov    0x000024(%eax),%ebx
		mov    %edx,0x00002c(%eax)
		test   %ebx,%ebx
		jne    _032747_jump
		call   _01f7d4_func

	_032747_jump:
		mov    _0c1ef0_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dl
		mov    %dl,0x000081(%eax)

	_032762_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032768_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00002c(%eax),%ax
		mov    %ax,_0d7588_data
		mov    _0c24ae_data,%ax
		sub    $0x0000b8,%eax
		mov    %ax,_0d758a_data
		mov    _0c1b04_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    %bx,_0d7586_data
		cmp    $0xffffffff,%eax
		je     _0327d5_jump
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%cx
		mov    %eax,%edx
		add    %ecx,%edx
		xor    %eax,%eax
		sub    $0x0000b8,%edx
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		add    $0x000024,%edx
		mov    %dx,_0d758a_data

	_0327d5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0327dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x000001,_0c1b0a_data
		mov    _0c24ae_data,%ax
		mov    %ax,_0c25d0_data
		mov    %ax,_0c25ce_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000060(%ecx),%ax
		mov    %dx,_0c25cc_data
		mov    %dx,_0c25ca_data
		mov    _092238_data(,%eax,4),%dl
		and    $0x00007f,%dl
		xor    %ebx,%ebx
		mov    %dl,_092238_data(,%eax,4)
		mov    %ecx,%eax
		mov    %bx,0x000050(%ecx)
		mov    _0c3314_data,%bl
		xor    %dh,%dh
		and    $0x0000fe,%bl
		mov    %dh,_0c25e1_data
		mov    %bl,_0c3314_data
		call   _031260_func
		mov    %ecx,%eax
		call   _032768_func
		mov    _0c1b04_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _032875_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		movw   $0x000003,0x000050(%edx,%eax,4)
		movw   $0x00001d,0x000056(%edx,%eax,4)

	_032875_jump:
		call   _032668_func
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03288c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		movb   $0x000002,_0c1b0a_data
		mov    _0c24ae_data,%ax
		mov    %ax,_0c25d0_data
		mov    %ax,_0c25ce_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edx),%ax
		mov    %bx,_0c25cc_data
		mov    %bx,_0c25ca_data
		andb   $0x00007f,_092238_data(,%eax,4)
		xor    %bh,%bh
		mov    %edx,%eax
		mov    %bh,_0c25e1_data
		call   _031260_func
		mov    %edx,%eax
		call   _032768_func
		mov    $0x000001,%eax
		call   _0326b4_func
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%cl
		movw   $0x000000,0x000050(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _03c384_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032910_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x000003,_0c1b0a_data
		mov    _0c24ae_data,%ax
		mov    %ax,_0c25d0_data
		mov    %ax,_0c25ce_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000060(%ecx),%ax
		mov    %dx,_0c25cc_data
		mov    %dx,_0c25ca_data
		andb   $0x00007f,_092238_data(,%eax,4)
		xor    %dh,%dh
		mov    %ecx,%eax
		mov    %dh,_0c25e1_data
		call   _031260_func
		mov    %ecx,%eax
		call   _032768_func
		xor    %eax,%eax
		call   _0326b4_func
		movl   $0x000000,0x000028(%ecx)
		xor    %ebx,%ebx
		movl   $0x000001,0x000024(%ecx)
		mov    %bx,0x000040(%ecx)
		mov    %bx,0x000042(%ecx)
		mov    _0c24ac_data,%edx
		mov    0x000028(%ecx),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%ecx)
		xor    %eax,%eax
		mov    0x000081(%ecx),%bl
		mov    0x000069(%ecx),%al
		or     $0x000004,%bl
		sub    %eax,%edx
		mov    %bl,0x000081(%ecx)
		sub    $0x000014,%edx
		mov    %edx,0x00002c(%ecx)
		mov    $0x000015,%ebx
		mov    0x00002c(%ecx),%ax
		xor    %edx,%edx
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d6f8_func
		xor    %bh,%bh
		mov    _095eec_data,%al
		mov    %bh,_0d7583_data
		mov    %al,_0d7584_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0329e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		movb   $0x000005,_0c1b0a_data
		mov    _0c24ae_data,%ax
		mov    %ax,_0c25d0_data
		mov    %ax,_0c25ce_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edx),%ax
		mov    %bx,_0c25cc_data
		mov    %bx,_0c25ca_data
		andb   $0x00007f,_092238_data(,%eax,4)
		xor    %bh,%bh
		mov    %edx,%eax
		mov    %bh,_0c25e1_data
		call   _031260_func
		mov    %edx,%eax
		call   _032768_func
		xor    %eax,%eax
		call   _0326b4_func
		testb  $0x000002,_0c3315_data
		je     _032a53_jump
		mov    $_0c1b4c_data,%eax
		call   _070a70_func
		call   _05049c_func

	_032a53_jump:
		movl   $0x000000,0x000028(%edx)
		mov    $0xffffffc4,%esi
		movw   $0x000000,0x000050(%edx)
		mov    _0c24ac_data,%ebx
		mov    0x000028(%edx),%ax
		mov    0x000081(%edx),%ch
		mov    %ax,0x00003c(%edx)
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000069(%edx),%al
		movl   $0x000000,0x000024(%edx)
		sub    %eax,%ebx
		xor    %edi,%edi
		sub    $0x000014,%ebx
		and    $0x0000fb,%ch
		mov    %ebx,0x00002c(%edx)
		mov    %si,_0c1b0c_data
		mov    0x00002c(%edx),%ax
		mov    %di,_0c1b0e_data
		mov    %ax,0x00003e(%edx)
		mov    $0x000001,%al
		mov    %di,_0c1b10_data
		mov    %al,_0c25a0_data
		mov    _0c331c_data,%ah
		mov    %di,_0c1b12_data
		or     $0x000080,%ah
		mov    %ch,0x000081(%edx)
		mov    %ah,_0c331c_data
		mov    %al,_0c1b14_data
		pop    %edi

	_032adb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032ae0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000050(%eax),%al
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000005,%ebx
		jge    _032b43_jump
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		xor    %ebx,%ebx
		mov    _0d7557_data(%eax),%bl
		test   %ebx,%ebx
		je     _032b43_jump
		movb   $0x000004,0x00007e(%edx)
		decw   _0d7558_data(%eax)
		mov    _0d7556_data(%eax),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jne    _032b47_jump
		mov    _0d7557_data(%eax),%bl
		mov    $0x000064,%ecx
		dec    %bl
		mov    %cx,_0d7558_data(%eax)
		mov    %bl,_0d7557_data(%eax)
		mov    %bl,%al
		and    $0x0000ff,%eax
		jne    _032b47_jump

	_032b43_jump:
		movb   $0x000000,0x00007e(%edx)

	_032b47_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032b4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		xor    %bl,%bl
		jmp    _032b58_jump

	_032b56_jump:
		inc    %bl

	_032b58_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    $0x000005,%edx
		jge    _032adb_jump
		imul   $0x00000a,%edx,%eax
		xor    %ecx,%ecx
		mov    _0d7557_data(%eax),%cl
		test   %ecx,%ecx
		jne    _032b56_jump
		mov    (%edx,%esi,1),%dl
		mov    %dl,_0d7557_data(%eax)
		movw   $0x000064,_0d7558_data(%eax)
		mov    _0d7554_data(%eax),%al
		and    $0x0000ff,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		movb   $0x000000,0x00006b(%edx,%eax,1)
		jmp    _032b56_jump

	_032bb0_jump:
		call   _049e14_func
		call   _01ac44_func
		call   _03e3d0_func
		mov    $_0c1b4c_data,%eax
		call   _018b80_func
		mov    $_0c1b4c_data,%eax
		call   _04b3f8_func
		call   _035104_func
		call   _03e200_func
		test   %ax,%ax
		jne    _032c00_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _032c00_jump
		call   _03e2d0_func
		test   %ax,%ax
		jne    _032c00_jump
		call   _03e338_func
		test   %ax,%ax
		je     _032c07_jump

	_032c00_jump:
		movb   $0x000001,_0cd105_data

	_032c07_jump:
		call   *_0cd114_data
		xor    %eax,%eax
		mov    _0cd105_data,%al
		ret    



_032c18_func:
		push   %edx
		call   _01ac44_func
		call   _034d38_func
		call   _01b730_func
		call   _060618_func
		call   _03e3d0_func
		mov    _0c45b4_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		je     _032c4a_jump
		cmpb   $0x000000,_0c45ba_data
		je     _032c4c_jump

	_032c4a_jump:
		mov    $0x000001,%dl

	_032c4c_jump:
		xor    %eax,%eax
		mov    %dl,%al
		pop    %edx
		ret    



_032cd8_func:
		push   %edx
		push   %esi
		push   %edi
		call   _03e3d0_func
		call   _05fc84_func
		call   _03e3d0_func
		call   _032f34_func
		mov    _0cd0b0_data,%edi
		sar    $0x000010,%edi
		cmp    $0x000003,%edi
		jne    _032d06_jump
		movw   $0x000001,_0cd0e8_data

	_032d06_jump:
		cmpw   $0x000000,_0cd0ec_data
		jne    _032d19_jump
		cmpb   $0x000000,_0cd775_data
		je     _032d20_jump

	_032d19_jump:
		mov    $0x000001,%edx
		jmp    _032d22_jump

	_032d20_jump:
		xor    %edx,%edx

	_032d22_jump:
		cmpb   $0x000000,_0cd775_data
		je     _032d83_jump
		mov    _0cd0b0_data,%edi
		sar    $0x000010,%edi
		cmp    $0x000001,%edi
		jne    _032d4f_jump
		mov    _0cd0bc_data,%edi
		sar    $0x000010,%edi
		shl    $0x000002,%edi
		sub    $0x000004,%edi
		mov    $_0cd09c_data,%esi
		jmp    _032d63_jump

	_032d4f_jump:
		mov    _0cd0bc_data,%edi
		sar    $0x000010,%edi
		shl    $0x000002,%edi
		sub    $0x000004,%edi
		mov    $_0c0000_data,%esi

	_032d63_jump:
		add    $_0cd090_data,%edi
		push   %edi

	_032d6a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _032d82_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _032d6a_jump

	_032d82_jump:
		pop    %edi

	_032d83_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_032d8c_func:
		push   %edx
		call   _03e3d0_func
		call   _01cf4c_func
		call   _05f888_func
		call   _032f34_func
		call   _03e3d0_func
		call   _05fb64_func
		call   _05fff8_func
		mov    _0cd0b0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _032dc7_jump
		cmpw   $0x000000,_0cd0be_data
		jne    _032de8_jump

	_032dc7_jump:
		mov    _0cd0b0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _032e16_jump
		cmpw   $0x000000,_0cd0c2_data
		jne    _032e16_jump
		cmpw   $0x000000,_0cd0be_data
		je     _032e16_jump

	_032de8_jump:
		cmpw   $0x000000,_0cd0ec_data
		jne    _032e01_jump
		call   _05fc14_func
		mov    $_032cd8_func,%eax
		call   _039544_func

	_032e01_jump:
		cmpb   $0x000000,_0cd775_data
		jne    _032e16_jump
		xor    %eax,%eax
		mov    _0cd0be_data,%al
		call   _06a7e0_func

	_032e16_jump:
		call   _03e200_func
		test   %ax,%ax
		jne    _032e3e_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _032e3e_jump
		call   _03e2d0_func
		test   %ax,%ax
		jne    _032e3e_jump
		call   _03e338_func
		test   %ax,%ax
		je     _032e45_jump

	_032e3e_jump:
		call   _03e3d0_func
		jmp    _032e16_jump

	_032e45_jump:
		cmpw   $0x000000,_0cd0da_data
		je     _032e54_jump
		call   _05f834_func

	_032e54_jump:
		xor    %eax,%eax
		mov    _0cdb24_data,%edx
		mov    %ax,_0cd0b2_data
		xor    %eax,%eax
		inc    %edx
		mov    _0cdb22_data,%ax
		mov    %edx,_0cdb24_data
		cmp    %edx,%eax
		jg     _032e8d_jump
		cmpw   $0x000000,_0cd0e8_data
		jne    _032e8d_jump
		cmpb   $0x000000,_0c2595_data
		jne    _032e8d_jump
		call   _0341a8_func

	_032e8d_jump:
		cmpb   $0x000000,_0c2595_data
		jne    _032eb2_jump
		cmpw   $0x000000,_0cd0e8_data
		jne    _032eb2_jump
		cmpb   $0x000000,_0cdb18_data
		jne    _032eb2_jump
		cmpb   $0x000000,_0cd775_data
		je     _032eb9_jump

	_032eb2_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_032eb9_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_032f34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    _0cd0c4_data,%ax
		mov    _0cd0c6_data,%bx
		mov    $0x00001e,%edx
		cmp    %bx,%ax
		jge    _032f68_jump
		xor    %eax,%eax
		mov    _0c2503_data,%al
		test   %eax,%eax
		jne    _032f68_jump
		incw   _0cd0c4_data
		jmp    _032f8b_jump

	_032f68_jump:
		xor    %eax,%eax
		mov    _0c2503_data,%al
		test   %eax,%eax
		jne    _032f82_jump
		mov    _0cd0dc_data,%ax
		inc    %eax
		mov    %ax,_0cd0c4_data
		jmp    _032f8b_jump

	_032f82_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cd0c4_data

	_032f8b_jump:
		mov    _0cd0e6_data,%di
		cmp    %di,%dx
		jle    _032fa3_jump
		mov    %edi,%edx
		inc    %edx
		mov    %dx,_0cd0e6_data
		jmp    _032fab_jump

	_032fa3_jump:
		xor    %eax,%eax
		mov    %ax,_0cd0e6_data

	_032fab_jump:
		call   _0397d4_func
		push   $0x000000
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cd09e_data,%ebx
		mov    _0cd900_data,%eax
		sar    $0x000010,%ebx
		call   _01a3ec_func
		xor    %eax,%eax
		mov    _0cd77c_data,%al
		test   %eax,%eax
		je     _03303d_jump
		push   $0x000005
		mov    _0cd0a4_data,%ax
		mov    $0x000002,%ecx
		sub    $0x000005,%eax
		mov    $0x00001e,%edx
		movswl %ax,%ebx
		mov    _0cd904_data,%eax
		call   _01a3ec_func
		push   $0x000005
		mov    _0cd0a4_data,%ax
		mov    $0x000002,%ecx
		sub    $0x000005,%eax
		mov    $0x00007d,%edx
		movswl %ax,%ebx
		mov    _0cd908_data,%eax
		call   _01a3ec_func
		push   $0x000005
		mov    _0cd0a4_data,%ax
		mov    $0x000002,%ecx
		sub    $0x000005,%eax
		mov    $0x0000df,%edx
		movswl %ax,%ebx
		mov    _0cd90c_data,%eax
		jmp    _033095_jump

	_03303d_jump:
		push   $0x000005
		mov    $0x000001,%ecx
		mov    $0x00001e,%edx
		mov    _0cd0a2_data,%ebx
		mov    _0cd904_data,%eax
		sar    $0x000010,%ebx
		call   _01a3ec_func
		push   $0x000005
		mov    $0x000001,%ecx
		mov    $0x00007d,%edx
		mov    _0cd0a2_data,%ebx
		mov    _0cd908_data,%eax
		sar    $0x000010,%ebx
		call   _01a3ec_func
		push   $0x000005
		mov    $0x000001,%ecx
		mov    $0x0000df,%edx
		mov    _0cd0a2_data,%ebx
		mov    _0cd90c_data,%eax
		sar    $0x000010,%ebx

	_033095_jump:
		call   _01a3ec_func
		xor    %ebx,%ebx
		mov    $0x000001,%ebp
		mov    %bx,0x000008(%esp)
		jmp    _0333b1_jump

	_0330ab_jump:
		cmp    $0x000020,%cl
		jne    _0330cb_jump
		push   $0x000002
		movswl %dx,%eax
		mov    %ebp,%ecx
		movswl %bx,%edx
		mov    %eax,%ebx
		mov    $_0c0005_data,%eax
		call   _01a3ec_func
		jmp    _033233_jump

	_0330cb_jump:
		movswl %dx,%edx
		movswl %bx,%esi
		xor    %ecx,%ecx
		lea    -0x000001(%eax),%ebx
		mov    _0cd08a_data,%cl
		mov    %esp,%eax
		push   %ecx
		mov    %ebp,%ecx
		add    %ebx,%eax
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _01a3ec_func
		jmp    _033233_jump

	_0330f1_jump:
		mov    %esp,%edi
		mov    %edx,%esi
		push   %edi

	_0330f6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03310e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0330f6_jump

	_03310e_jump:
		pop    %edi
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		mov    %dl,(%esp,%eax,1)
		mov    _0cd008_data,%eax
		mov    $0x001000,%esi
		sar    $0x000010,%eax
		mov    %si,_0cd006_data
		cmp    $0x000200,%eax
		jl     _03313f_jump
		xor    %edi,%edi
		mov    %di,_0cd00a_data

	_03313f_jump:
		mov    _0cd00a_data,%ax
		inc    %ah
		cwtl   
		call   _053270_func
		cwtl   
		sar    $0x000007,%eax
		add    $0x000006,%eax
		mov    %eax,%edx
		mov    _0cd008_data,%eax
		sar    $0x000010,%eax
		call   _053270_func
		shl    $0x000003,%eax
		mov    %ax,_0cd008_data
		mov    _0cd00a_data,%ax
		add    %edx,%eax
		mov    _0cd0ac_data,%cx
		mov    %ax,_0cd00a_data
		mov    0x000004(%esp),%eax
		imul   %ecx,%eax
		mov    _0cd0ae_data,%dx
		mov    0x000008(%esp),%esi
		add    $0x000017,%edx
		imul   %esi,%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%ebx
		mov    _0cd0a2_data,%cx
		mov    _0cd0d6_data,%di
		add    %ecx,%edx
		mov    -0x000001(%esp,%ebx,1),%cl
		add    %edi,%eax
		cmp    $0x00007e,%cl
		jne    _0331f2_jump
		mov    _0cd006_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		mov    _0cd004_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		mov    _0cd002_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		sub    $0x00000a,%eax
		mov    %ebp,%ecx
		push   $0x000002
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_0c0006_data,%eax
		call   _01a650_func
		jmp    _033233_jump

	_0331f2_jump:
		mov    _0cd006_data,%ecx
		sar    $0x000010,%ecx
		inc    %edx
		push   %ecx
		mov    _0cd004_data,%ecx
		inc    %eax
		sar    $0x000010,%ecx
		movswl %dx,%esi
		push   %ecx
		mov    _0cd002_data,%ecx
		movswl %ax,%edx
		sar    $0x000010,%ecx
		lea    -0x000001(%ebx),%eax
		push   %ecx
		xor    %ecx,%ecx
		lea    0x00000c(%esp),%ebx
		mov    _0cd08a_data,%cl
		add    %ebx,%eax
		push   %ecx
		mov    %esi,%ebx
		mov    %ebp,%ecx
		call   _01a650_func

	_033233_jump:
		mov    0x000004(%esp),%esi
		mov    0x00000c(%esp),%edi
		inc    %esi
		inc    %edi
		mov    %esi,0x000004(%esp)
		mov    %di,0x00000c(%esp)

	_033246_jump:
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%edx
		add    $_0cd090_data,%edx
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		ja     _03334b_jump
		mov    0x00000c(%esp),%edi
		cmp    _0cd0b4_data,%di
		jne    _03329d_jump
		mov    _0cd0b4_data,%eax
		inc    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jne    _03329d_jump
		cmpw   $0x000000,_0cd0e4_data
		jne    _0330f1_jump

	_03329d_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    $_0cd090_data,%esi
		shl    $0x000002,%eax
		mov    %esp,%edi
		add    %eax,%esi
		mov    0x000004(%esp),%ebx
		push   %edi

	_0332b5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0332cd_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0332b5_jump

	_0332cd_jump:
		pop    %edi
		imul   _0cd0ac_data,%bx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		mov    %dl,(%esp,%eax,1)
		mov    _0cd0ae_data,%dx
		mov    0x000008(%esp),%esi
		add    $0x000017,%edx
		imul   %esi,%edx
		mov    _0cd0a2_data,%cx
		mov    _0cd0d6_data,%di
		add    %ecx,%edx
		mov    -0x000001(%esp,%eax,1),%cl
		add    %edi,%ebx
		cmp    $0x00007e,%cl
		jne    _0330ab_jump
		mov    _0cd006_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0cd004_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0cd002_data,%eax
		sar    $0x000010,%eax
		push   %eax
		sub    $0x00000a,%ebx
		mov    %ebp,%ecx
		push   $0x000002
		movswl %dx,%eax
		movswl %bx,%edx
		mov    %eax,%ebx
		mov    $_0c0002_data,%eax
		call   _01a650_func
		jmp    _033233_jump

	_03334b_jump:
		mov    _0cd0ac_data,%ax
		add    $0x00000b,%eax
		imul   $0x000003,%eax,%eax
		add    _0cd0d6_data,%ax
		sub    $0x00001e,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01b038_func
		jmp    _0333ac_jump

	_03336d_jump:
		movb   $0x000001,_0cd014_data
		mov    _0cd0ae_data,%ax
		mov    0x000008(%esp),%edi
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000002
		mov    _0cd0a2_data,%dx
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    _0cd0d4_data,%edx
		movswl %ax,%ebx
		mov    _0cd9ec_data,%eax
		sar    $0x000010,%edx
		call   _01a3ec_func

	_0333ac_jump:
		incw   0x000008(%esp)

	_0333b1_jump:
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    _0cd102_data,%dl
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _0333ef_jump
		shl    $0x000002,%eax
		mov    $_0c0001_data,%edx
		add    $_0cd090_data,%eax
		call   _0794c0_func
		test   %eax,%eax
		je     _03336d_jump
		mov    $0x000001,%ebx
		xor    %ecx,%ecx
		mov    %bx,0x00000c(%esp)
		mov    %ecx,0x000004(%esp)
		jmp    _033246_jump

	_0333ef_jump:
		call   _01b380_func
		mov    _0cd0b0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _03340b_jump
		cmpw   $0x000000,_0cd0be_data
		jne    _033422_jump

	_03340b_jump:
		mov    _0cd0b0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _033455_jump
		cmpw   $0x000000,_0cd0be_data
		je     _033455_jump

	_033422_jump:
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x000099,%ebx
		mov    $0x0000a0,%edx
		mov    _0cda0c_data,%eax
		call   _01a3ec_func
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x0000a8,%ebx
		mov    $0x0000a0,%edx
		mov    _0cda1c_data,%eax
		jmp    _03346b_jump

	_033455_jump:
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x0000a8,%ebx
		mov    $0x0000a0,%edx
		mov    _0cda24_data,%eax

	_03346b_jump:
		call   _01a3ec_func
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x0000b7,%ebx
		mov    $0x0000a0,%edx
		mov    _0cda14_data,%eax
		call   _01a3ec_func

	_03348b_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033700_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		call   _05e580_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01666f_func
		xor    %eax,%eax
		mov    _0ce4dc_data,%al
		cmp    $0x000001,%eax
		je     _033805_jump
		cmpb   $0x000000,_0c33fe_data
		je     _033766_jump
		mov    _0c34ce_data,%ebx
		mov    _0c34cc_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0c34d5_data,%al
		mov    _0c34d2_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0c33fe_data,%eax
		call   _01a3ec_func

	_033766_jump:
		cmpb   $0x000000,_0c3326_data
		je     _03379b_jump
		mov    _0c33f6_data,%ebx
		mov    _0c33f4_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0c33fd_data,%al
		mov    _0c33fa_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0c3326_data,%eax
		call   _01a3ec_func

	_03379b_jump:
		cmpb   $0x000000,_0c35ae_data
		je     _0337d0_jump
		mov    _0c367e_data,%ebx
		mov    _0c367c_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0c3685_data,%al
		mov    _0c3682_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0c35ae_data,%eax
		call   _01a3ec_func

	_0337d0_jump:
		cmpb   $0x000000,_0c34d6_data
		je     _033805_jump
		mov    _0c35a6_data,%ebx
		mov    _0c35a4_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0c35ad_data,%al
		mov    _0c35aa_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0c34d6_data,%eax
		call   _01a3ec_func

	_033805_jump:
		cmpb   $0x000000,_0ce4dc_data
		je     _03348b_jump
		mov    _0cdfc4_data,%edx
		xor    %ebp,%ebp
		test   %edx,%edx
		jle    _0338e5_jump
		mov    %ebp,(%esp)

	_033825_jump:
		mov    _0ce4e0_data(%ebp),%cl
		cmp    $0x00002f,%cl
		je     _033835_jump
		cmp    $0x000020,%cl
		jne    _033839_jump

	_033835_jump:
		xor    %al,%al
		jmp    _033842_jump

	_033839_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _01eff4_func

	_033842_jump:
		test   %al,%al
		je     _0338cd_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    _0ce4d4_data,%al
		call   _01eed4_func
		add    $0x000029,%ebx
		mov    %eax,%edx
		imul   $0x00000c,%ebx,%eax
		mov    _0c2498_data,%ebx
		add    %ebx,%eax
		mov    (%esp),%ebx
		xor    %ecx,%ecx
		mov    _0ce094_data(%ebx),%ebx
		mov    0x000006(%eax),%cl
		sar    $0x000004,%ebx
		sub    %ecx,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x000004(%esp)
		mov    (%esp),%ebx
		mov    _0cdfcc_data(%ebx),%ebx
		sar    $0x000004,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x00000c(%esp)
		xor    %bh,%bh
		mov    %cl,%bl
		mov    _0cd000_data,%edi
		shl    $0x000008,%ebx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    _0c249c_data,%esi
		mov    %dx,%cx
		mov    (%eax),%edx
		mov    0x000004(%esp),%ebx
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x00000c(%esp),%eax
		mov    _0ce4cc_data,%dl
		call   *_0cdf58_data

	_0338cd_jump:
		mov    (%esp),%ebx
		mov    _0cdfc4_data,%ecx
		add    $0x000004,%ebx
		inc    %ebp
		mov    %ebx,(%esp)
		cmp    %ecx,%ebp
		jl     _033825_jump

	_0338e5_jump:
		mov    _0cdfc8_data,%esi
		xor    %ebp,%ebp
		test   %esi,%esi
		jle    _03348b_jump
		mov    %ebp,0x000008(%esp)

	_0338f9_jump:
		mov    _0ce500_data(%ebp),%al
		cmp    $0x00002f,%al
		je     _033907_jump
		cmp    $0x000020,%al
		jne    _03390b_jump

	_033907_jump:
		xor    %bl,%bl
		jmp    _03391a_jump

	_03390b_jump:
		xor    %eax,%eax
		mov    _0ce500_data(%ebp),%al
		call   _01eff4_func
		mov    %al,%bl

	_03391a_jump:
		test   %bl,%bl
		je     _0339ab_jump
		xor    %eax,%eax
		and    $0x0000ff,%ebx
		mov    _0ce4d8_data,%al
		mov    %ebx,%edx
		call   _01eed4_func
		mov    %eax,%edx
		imul   $0x00000c,%ebx,%eax
		mov    0x000008(%esp),%ecx
		mov    _0c248c_data,%ebx
		mov    _0ce224_data(%ecx),%ecx
		add    %ebx,%eax
		xor    %ebx,%ebx
		sar    $0x000004,%ecx
		mov    0x000006(%eax),%bl
		sub    %ebx,%ecx
		movswl %cx,%ebx
		mov    %ebx,0x00000c(%esp)
		mov    0x000008(%esp),%ebx
		mov    _0ce15c_data(%ebx),%ebx
		sar    $0x000004,%ebx
		movswl %bx,%ecx
		xor    %bh,%bh
		mov    0x000006(%eax),%bl
		shl    $0x000008,%ebx
		xor    %edi,%edi
		add    %ebx,%edx
		mov    _0c2490_data,%esi
		mov    %dx,%di
		mov    _0cd000_data,%edx
		mov    0x00000c(%esp),%ebx
		mov    %edx,0x00000c(%esp)
		mov    (%eax),%edx
		mov    %ecx,%eax
		add    %edx,%esi
		mov    %edi,%ecx
		xor    %edx,%edx
		mov    0x00000c(%esp),%edi
		mov    _0ce4d0_data,%dl
		call   *_0cdf58_data

	_0339ab_jump:
		mov    0x000008(%esp),%ebx
		mov    _0cdfc8_data,%ecx
		add    $0x000004,%ebx
		inc    %ebp
		mov    %ebx,0x000008(%esp)
		cmp    %ecx,%ebp
		jge    _03348b_jump
		jmp    _0338f9_jump



_0339cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000000,_0c6b76_data
		je     _0339e4_jump
		movzwl _0c6b72_data,%ebp
		add    %eax,%ebp

	_0339e4_jump:
		xor    %dh,%dh
		mov    _0cdf2c_data,%edi
		mov    %dh,_0cd014_data
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    _0cdf30_data,%eax
		mov    %eax,_0cd000_data
		call   _05f3ac_func
		call   _05f3b0_func
		call   _040000_func
		mov    $_0c1b4c_data,%eax
		call   _018b80_func
		call   _05d994_func
		mov    _0cdf2c_data,%edx
		push   %edx
		mov    _0cdfa8_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cdf30_data,%ebx
		mov    _0cdfb4_data,%esi
		push   %ebx
		mov    _0cdfa8_data,%ebx
		mov    _0cdfb8_data,%edx
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _03f048_func
		mov    _0cdf2c_data,%eax
		mov    %eax,_0cd000_data
		call   _033700_func
		call   _03e3d0_func
		call   _01cf4c_func
		call   _03522c_func
		cmpb   $0x000000,_0cd105_data
		je     _033a9c_jump
		mov    $0x00004d,%eax
		call   _068d70_func

	_033a9c_jump:
		mov    _0c251c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _033aba_jump
		mov    _0cd105_data,%al
		test   %eax,%eax
		jne    _033aba_jump
		call   _025b00_func
		test   %al,%al
		je     _033ac1_jump

	_033aba_jump:
		mov    $0x000001,%edx
		jmp    _033ac3_jump

	_033ac1_jump:
		xor    %edx,%edx

	_033ac3_jump:
		cmpb   $0x000000,_0c6b76_data
		je     _033ae1_jump
		mov    %ebp,%ebx
		call   _0173a3_func
		test   %ecx,%ecx
		jne    _033ae1_jump
		call   _05f3ac_func
		call   _05f3b0_func

	_033ae1_jump:
		mov    %edx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033aec_func:
		push   %ebx
		push   %edx
		call   _0394f0_func
		xor    %eax,%eax
		mov    _0c251c_data,%al
		xor    %edx,%edx
		call   _04e9d4_func
		call   _03e3d0_func
		mov    $_0c859c_data,%eax
		mov    %edx,_0c4764_data
		call   _0396c0_func
		call   _039478_func
		call   _05effc_func
		mov    _0c330a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _033b81_jump
		mov    _0c330c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _033b81_jump
		mov    _0c25ca_data,%eax
		mov    _0c25c8_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0c25ce_data,%edx
		mov    %ax,_0c24ac_data
		mov    _0c25cc_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,_0c24ae_data
		call   _03f27c_func

	_033b81_jump:
		cmpb   $0x000000,_0cdb18_data
		jne    _033b99_jump
		call   _0348e8_func
		mov    $_0339cc_func,%eax
		call   _039544_func

	_033b99_jump:
		mov    _0cd105_data,%dl
		test   %dl,%dl
		je     _033bef_jump
		mov    $0x000001,%dh
		mov    $0x000004,%bl
		mov    _0c261e_data,%al
		mov    %dh,_0c2595_data
		mov    %bl,_0cd776_data
		mov    %al,_0c261c_data
		mov    _0c2522_data,%ax
		xor    %edx,%edx
		mov    %ax,_0c261e_data
		mov    _0c2520_data,%ax
		mov    %dx,_0cd0be_data
		mov    %ax,_0c2620_data
		mov    $0x00004d,%eax
		mov    %dx,_0c2522_data
		jmp    _033c64_jump

	_033bef_jump:
		xor    %dh,%dh

	_033bf1_jump:
		call   _03e200_func
		test   %ax,%ax
		jne    _033c19_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _033c19_jump
		call   _03e2d0_func
		test   %ax,%ax
		jne    _033c19_jump
		call   _03e338_func
		test   %ax,%ax
		je     _033c28_jump

	_033c19_jump:
		cmp    _0cdb18_data,%dl
		jne    _033c28_jump
		call   _03e3d0_func
		jmp    _033bf1_jump

	_033c28_jump:
		call   _05f50c_func
		call   _025b00_func
		test   %al,%al
		jne    _033c56_jump
		cmpb   $0x000000,_0c2622_data
		je     _033c56_jump
		cmpb   $0x000000,_0cdb18_data
		jne    _033c56_jump
		mov    _0c261e_data,%eax
		sar    $0x000010,%eax
		mov    %ax,_0c2620_data

	_033c56_jump:
		cmpb   $0x000000,_0cdb18_data
		jne    _033c69_jump
		mov    $0x000045,%eax

	_033c64_jump:
		call   _068d70_func

	_033c69_jump:
		call   _05f4a0_func
		call   _01cf64_func
		pop    %edx
		pop    %ebx
		ret    



_033c78_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    _0c3320_data,%bl
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		mov    _0c3326_data(%eax),%cl
		mov    %eax,%edx
		test   %cl,%cl
		je     _033cc9_jump

	_033ca0_jump:
		xor    %eax,%eax
		mov    _0c3320_data,%al
		inc    %eax
		cmp    %eax,%ebx
		ja     _033cc9_jump
		mov    $_0c3326_data,%eax
		add    %edx,%eax
		inc    %ebx
		call   _01ab20_func
		mov    _0c33fe_data(%edx),%ch
		add    $0x0000d8,%edx
		test   %ch,%ch
		jne    _033ca0_jump

	_033cc9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033cd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _03e3d0_func
		call   _0397d4_func
		call   _033c78_func
		incw   _0c45b8_data
		mov    _0c45b6_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00003c,%eax
		jne    _033d0f_jump
		mov    _0c45b6_data,%cx
		xor    %ebx,%ebx
		dec    %ecx
		mov    %bx,_0c45b8_data
		mov    %cx,_0c45b6_data

	_033d0f_jump:
		call   _0356d0_func
		test   %al,%al
		jne    _033d21_jump
		call   _0356fc_func
		test   %al,%al
		je     _033d2e_jump

	_033d21_jump:
		mov    _0c45b4_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jle    _033d3a_jump

	_033d2e_jump:
		mov    _0c45b4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _033d41_jump

	_033d3a_jump:
		mov    $0x000001,%eax
		jmp    _033d43_jump

	_033d41_jump:
		xor    %eax,%eax

	_033d43_jump:
		mov    %eax,%ebx
		test   %ax,%ax
		je     _033d93_jump
		xor    %edx,%edx
		mov    _0c3320_data,%dl
		add    $0x000002,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0c3326_data(,%eax,8)
		jne    _033d76_jump
		movb   $0x00000a,_0c3320_data
		jmp    _033d93_jump

	_033d76_jump:
		mov    $0x000005,%esi
		mov    _0c3320_data,%dh
		xor    %ebx,%ebx
		add    $0x000002,%dh
		mov    %si,_0c45b6_data
		mov    %dh,_0c3320_data

	_033d93_jump:
		test   %bx,%bx
		je     _033dae_jump
		xor    %eax,%eax
		mov    _0c3320_data,%al
		cmp    $0x00000a,%eax
		jne    _033dae_jump
		mov    $0x000001,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033dae_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033db8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		call   _069520_func
		call   _0394c8_func
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%eax
		call   _016632_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01666f_func
		xor    %ah,%ah
		mov    %ah,_0cd110_data
		mov    $_0c9564_data,%eax
		call   _0396c0_func
		call   _039764_func
		xor    %eax,%eax
		mov    _095b00_data,%al
		xor    %esi,%esi
		cmp    $0x000001,%eax
		jne    _033e25_jump
		xor    %eax,%eax
		mov    _0c7998_data,%al
		mov    $0x000001,%esi
		call   _03a364_func

	_033e25_jump:
		call   _039478_func
		call   _060d58_func
		cmpb   $0x000000,_0ce86d_data
		je     _033e3f_jump
		xor    %eax,%eax
		call   _069584_jump

	_033e3f_jump:
		mov    $_033cd0_func,%eax
		call   _039544_func
		cmpb   $0x000000,_0ce86d_data
		je     _033e57_jump
		call   _0793e8_func

	_033e57_jump:
		xor    %bl,%bl
		call   _0394c8_func
		mov    %bl,_0cd10f_data
		mov    %bl,_0cd105_data
		test   %esi,%esi
		je     _033e7a_jump
		xor    %eax,%eax
		mov    _0c7998_data,%al
		call   _03a230_func

	_033e7a_jump:
		call   _039734_jump
		call   _0397b4_func
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		call   _01666f_func
		call   _039478_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033ea8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		movzbl _0cd777_data,%edi
		lea    0x000000(,%edi,4),%esi
		sub    %edi,%esi
		shl    $0x000002,%esi
		jmp    _033ef4_jump

	_033ec2_jump:
		mov    _0cd124_data(%esi),%ebx
		mov    _0cd122_data(%esi),%edx
		add    $0x00000c,%esi
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		mov    _0cd11e_data(%esi),%al
		mov    _0cd11c_data(%esi),%cl
		push   %eax
		mov    _0cd114_data(%esi),%eax
		inc    %edi
		call   _01a3ec_func

	_033ef4_jump:
		xor    %eax,%eax
		mov    _0cd778_data,%al
		cmp    %eax,%edi
		jbe    _033ec2_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033f08_func:
		push   %edx
		call   _03e3d0_func
		call   _01cf20_func
		call   _061188_func
		call   _0397d4_func
		call   _033ea8_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0cd105_data,%dl
		mov    %ah,_0cd105_data
		call   _0356d0_func
		test   %al,%al
		jne    _033f44_jump
		call   _0357d4_func
		test   %al,%al
		je     _033f52_jump

	_033f44_jump:
		movb   $0x000001,_0cd105_data
		movb   $0x000007,_0cd110_data

	_033f52_jump:
		cmpb   $0x000000,_0cd105_data
		jne    _033f60_jump
		test   %dx,%dx
		je     _033f67_jump

	_033f60_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_033f67_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_033f9c_func:
		push   %edx
		call   _01cf64_func
		call   _0610d4_func

	_033fa7_jump:
		xor    %eax,%eax
		mov    _0cd110_data,%al
		cmp    $0x000007,%eax
		jg     _033ffe_jump
		imul   $0x000300,%eax,%eax
		add    $_0c9564_data,%eax
		call   _0396c0_func
		call   _039764_func
		call   _039478_func
		mov    $_033f08_func,%eax
		call   _039544_func
		call   _0394c8_func
		mov    _0cd110_data,%dl
		xor    %ah,%ah
		inc    %dl
		mov    %ah,_0cd105_data
		mov    %dl,_0cd110_data
		call   _039734_jump
		call   _0397b4_func
		jmp    _033fa7_jump

	_033ffe_jump:
		call   _01cf64_func
		call   _039478_func
		pop    %edx
		ret    



_0340a4_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    $0x000004,%ebx
		mov    %ah,_0cd110_data
		mov    $_0c9564_data,%eax
		xor    %edx,%edx
		call   _0396c0_func
		call   _039764_func
		call   _039478_func
		mov    %dx,_0c45b8_data
		xor    %dl,%dl
		mov    %bx,_0c45b6_data
		mov    %dl,_0c3320_data
		call   _01efa0_func
		mov    $_033cd0_func,%eax
		call   _039544_func
		mov    $_0c6b44_data,%eax
		call   _034e60_func
		call   _0394c8_func
		call   _039734_jump
		call   _0397b4_func
		pop    %edx
		pop    %ebx
		ret    



_034134_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0cd10e_data,%ah
		mov    %edx,_0c1eec_data
		mov    %edx,_0c1ee8_data
		test   %ah,%ah
		je     _03419b_jump
		mov    _0c261e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jle    _03416f_jump
		mov    $0x000017,%ebx
		mov    $_0c000f_data,%edx
		mov    $_0ce874_data,%eax
		call   _078a18_func

	_03416f_jump:
		mov    $0x000004,%edx
		mov    $0x000006,%ebx
		mov    $_0c6b44_data,%eax
		mov    %dx,_0c2520_data
		mov    %bx,_0c2522_data
		call   _034e60_func
		call   _0340a4_func
		call   _033f9c_func

	_03419b_jump:
		xor    %dl,%dl
		mov    %dl,_0cd105_data
		pop    %edx
		pop    %ebx
		ret    



_0341a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _0394c8_func
		xor    %eax,%eax
		mov    _095b01_data,%al
		cmp    $0x000001,%eax
		jne    _034201_jump
		mov    _0cdb1e_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		mov    _095ae2_data(%eax),%edx
		sar    $0x000010,%edx
		cmp    $0x000005,%edx
		jne    _034201_jump
		mov    _095aee_data(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jne    _034201_jump
		incw   _0cdb20_data
		mov    _0cdb1e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _034201_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdb20_data

	_034201_jump:
		mov    $0x000001,%ah
		mov    $_0cdb1c_data,%edi
		mov    $_0c3314_data,%esi
		xor    %edx,%edx
		mov    %ah,_0cdb18_data
		mov    %edx,_0cdb24_data
		mov    _0c3314_data,%dl
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		or     $0x00000f,%dl
		mov    _0cdb1e_data,%eax
		mov    %dl,_0c3314_data
		mov    %dl,%dh
		sar    $0x000010,%eax
		and    $0x0000cf,%dh
		add    %eax,%eax
		mov    %dh,_0c3314_data
		mov    _095ae2_data(%eax),%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jne    _034267_jump
		mov    _095aee_data(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _034267_jump
		orb    $0x000040,_0c3314_data
		jmp    _03426e_jump

	_034267_jump:
		andb   $0x0000bf,_0c3314_data

	_03426e_jump:
		orb    $0x000080,_0c3314_data
		mov    _0c3315_data,%ch
		or     $0x000001,%ch
		mov    %ch,%al
		mov    %ch,_0c3315_data
		and    $0x0000fd,%al
		mov    %al,_0c3315_data
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _0342b0_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _0342b0_jump
		orb    $0x000004,_0c3315_data
		jmp    _0342b7_jump

	_0342b0_jump:
		andb   $0x0000fb,_0c3315_data

	_0342b7_jump:
		mov    $0x000008,%ecx
		mov    $_0cd05c_data,%edi
		mov    $_0cd03c_data,%esi
		mov    _0c3315_data,%dh
		rep movsl %ds:(%esi),%es:(%edi)
		and    $0x000087,%dh
		mov    $0x000001,%ecx
		mov    $0x000002,%edi
		mov    %dh,_0c3315_data
		xor    %esi,%esi
		mov    %cx,_0cd04c_data
		mov    %si,_0cd04e_data
		mov    %di,_0cd052_data
		mov    %di,_0cd050_data
		call   _03de40_func
		mov    $0x000003,%edi
		mov    $0x000001,%al
		mov    _0c331d_data,%bl
		mov    _0cdb1e_data,%edx
		mov    %cx,_0c251e_data
		mov    %cx,_0c251c_data
		mov    %si,_0c2522_data
		mov    %si,_0c2520_data
		or     $0x00000a,%bl
		sar    $0x000010,%edx
		mov    %di,_0c24f8_data
		mov    %al,_0c1f00_data
		mov    %al,_0c6971_data
		xor    %ch,%ch
		mov    %bl,_0c331d_data
		mov    _095ad6_data(,%edx,2),%eax
		mov    _095ae4_data(,%edx,2),%bx
		sar    $0x000010,%eax
		mov    %bx,_0c261e_data
		mov    %eax,_0c6968_data
		mov    _095af0_data(,%edx,2),%bx
		mov    %edx,%eax
		mov    %bx,_0c2620_data
		shl    $0x000005,%eax
		mov    $0x000002,%bh
		sub    %edx,%eax
		mov    %bh,_0c1bc2_data
		mov    %bh,_0c2501_data
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    $_0954fc_data,%edx
		mov    %ebx,_0c695c_data
		add    %eax,%eax
		mov    $0x000a20,%ebx
		add    %eax,%edx
		mov    $_0c4770_data,%eax
		mov    %edx,_0c696c_data
		xor    %edx,%edx
		mov    %ch,_0c24fe_data
		call   _079cd0_func
		mov    _0c261c_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %dl,%dl
		mov    %dl,_094a1d_data(,%eax,4)
		call   _049e00_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0343f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _0394c8_func
		mov    _0c6964_data,%eax
		cmp    _0c6960_data,%eax
		jne    _034412_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdb22_data
		jmp    _03441b_jump

	_034412_jump:
		xor    %edx,%edx
		mov    %dx,_0cdb22_data

	_03441b_jump:
		mov    $_0c3314_data,%edi
		mov    $_0cdb1c_data,%esi
		xor    %ah,%ah
		xor    %ebx,%ebx
		xor    %dl,%dl
		xor    %ecx,%ecx
		mov    %ah,_0cdb18_data
		mov    %ebx,_0cdb24_data
		mov    $0x000001,%eax
		xor    %ebx,%ecx
		call   _04e9d4_func
		mov    %dl,_0c6971_data
		mov    %ebx,_0c695c_data
		mov    %ebx,_0c6968_data
		mov    %ebx,_0c696c_data
		mov    %cx,_0c251e_data
		xor    %eax,%eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0x000008,%ecx
		mov    %ax,_0c2520_data
		xor    %esi,%esi
		xor    %dh,%dh
		xor    %edi,%edi
		mov    %dx,_0c261e_data
		xor    %ebx,%esi
		xor    %ebx,%edi
		mov    _0c331d_data,%dh
		mov    %si,_0c251c_data
		mov    %di,_0c2522_data
		xor    %ebx,%ebx
		mov    $_0cd03c_data,%edi
		mov    $_0cd05c_data,%esi
		and    $0x0000f5,%dh
		mov    %bx,_0c2620_data
		mov    %dh,_0c331d_data
		rep movsl %ds:(%esi),%es:(%edi)
		call   _03de40_func
		incw   _0cdb20_data
		mov    _0cdb1e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _0344d7_jump
		mov    %bx,_0cdb20_data

	_0344d7_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0344e0_func:
		call   _03e3d0_func
		call   _0356d0_func
		test   %al,%al
		jne    _0344f7_jump
		call   _0356fc_func
		test   %al,%al
		je     _0344fe_jump

	_0344f7_jump:
		movb   $0x000001,_0cd105_data

	_0344fe_jump:
		call   _049e14_func
		call   _0397d4_func
		mov    $_0c1e64_data,%eax
		call   _018b80_func
		call   _0613fc_func
		cmpb   $0x000000,_0cd105_data
		je     _034532_jump
		mov    _0c1b22_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _034532_jump
		mov    $0x000001,%eax
		ret    

	_034532_jump:
		xor    %eax,%eax
		ret    



_034538_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0c6b20_data,%eax
		mov    $_016f12_func,%edx
		mov    $_016ffd_func,%ebx
		call   _0356c4_func
		mov    $_0c6b20_data,%eax
		mov    $_016e99_jump,%ecx
		call   _034d28_func
		mov    $_0c889c_data,%eax
		mov    $_016f7d_jump,%esi
		call   _0396c0_func
		call   _01cf4c_func
		call   _039478_func
		call   _061390_func
		mov    $_0344e0_func,%eax
		mov    %edx,_0cdf48_data
		mov    %ebx,_0cdf50_data
		call   _039544_func
		mov    %ecx,_0cdf48_data
		mov    %esi,_0cdf50_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0345a4_func:
		call   _0394c8_func
		jmp    _039734_jump



_0345b0_func:
		push   %edx
		mov    $0x041a00,%edx
		mov    $_0c6b20_data,%eax
		call   _074fa0_func
		call   _034538_func
		mov    $_0c6b20_data,%eax
		call   _0752ac_func
		xor    %ah,%ah
		mov    %ah,_0cd105_data
		call   _042440_func
		call   _0345a4_func
		pop    %edx
		ret    



_0345e4_func:
		push   %edx
		call   _01cf64_func
		call   _0617c4_func
		cmpb   $0x000000,_0cd105_data
		jne    _034614_jump
		call   _039478_func
		mov    $_032bb0_jump,%eax
		call   _039544_func
		xor    %dl,%dl
		call   _061d4c_func
		mov    %dl,_0cd105_data

	_034614_jump:
		pop    %edx
		ret    



_0346fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    $0x000fa0,%eax
		call   _0750ac_func
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _034826_jump
		mov    (%esp),%esi
		xor    %ebx,%ebx
		jmp    _03473f_jump

	_034723_jump:
		inc    %eax

	_034724_jump:
		movswl %ax,%edx
		cmp    $0x00012c,%edx
		jl     _034723_jump
		movswl %bx,%edx
		shl    $0x000002,%edx
		add    %esi,%edx
		call   _01735b_func
		inc    %ebx
		mov    %eax,(%edx)

	_03473f_jump:
		movswl %bx,%eax
		cmp    $0x0003e8,%eax
		jge    _03474d_jump
		xor    %eax,%eax
		jmp    _034724_jump

	_03474d_jump:
		mov    $0x000f9c,%eax
		call   _0750ac_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _03481e_jump
		movb   $0x000001,0x000008(%esp)
		xor    %eax,%eax
		jmp    _03476b_jump

	_03476a_jump:
		inc    %eax

	_03476b_jump:
		movswl %ax,%ebx
		cmp    $0x0003e7,%ebx
		jge    _034794_jump
		mov    (%esp),%ecx
		mov    0x000004(%ecx,%ebx,4),%edx
		mov    (%ecx,%ebx,4),%esi
		mov    %edx,%ecx
		sub    %esi,%ecx
		add    %ecx,%edi
		mov    %ecx,0x000000(%ebp,%ebx,4)
		test   %ecx,%ecx
		jg     _03476a_jump
		xor    %dl,%dl
		mov    %dl,0x000008(%esp)

	_034794_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _034806_jump
		mov    $0x0003e7,%ebx
		mov    %edi,%edx
		mov    %edi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edi
		shl    $0x000002,%eax
		sub    %edi,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%ebx
		lea    0x000000(,%edi,2),%edx
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %esi,%esi
		mov    %eax,%edx
		jmp    _0347d7_jump

	_0347d6_jump:
		inc    %esi

	_0347d7_jump:
		movswl %si,%eax
		cmp    $0x0003e7,%eax
		jge    _034806_jump
		mov    0x000004(%esp),%ecx
		mov    %edx,%ebx
		mov    0x000000(%ebp,%eax,4),%eax
		cmp    %ebx,%eax
		jl     _0347fa_jump
		cmp    %ecx,%eax
		jg     _0347fa_jump
		mov    $0x000001,%eax
		jmp    _0347fc_jump

	_0347fa_jump:
		xor    %eax,%eax

	_0347fc_jump:
		test   %eax,%eax
		jne    _0347d6_jump
		incb   0x000008(%esp)
		jmp    _0347d6_jump

	_034806_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		cmp    $0x00000a,%eax
		setl   %al
		mov    %al,_0c6b76_data
		mov    %ebp,%eax
		call   _075258_func

	_03481e_jump:
		mov    (%esp),%eax
		call   _075258_func

	_034826_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034830_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0c6b76_data
		je     _0348e3_jump
		call   _01730e_func
		call   _01735b_func
		lea    0x000bb8(%eax),%ebx
		call   _0173a3_func
		call   _0172fe_func
		call   _01735b_func
		xor    %edx,%edx
		mov    %eax,%esi
		jmp    _034881_jump

	_034866_jump:
		call   _01730e_func
		call   _01735b_func
		lea    0x000bb8(%eax),%ebx
		call   _0173a3_func
		call   _0172fe_func
		inc    %edx

	_034881_jump:
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    _0c7998_data,%bl
		cmp    %ebx,%eax
		jl     _034866_jump
		call   _01735b_func
		movswl %dx,%ebx
		sub    %esi,%eax
		xor    %edx,%edx
		div    %ebx
		xor    %ebx,%ebx
		mov    %ax,%bx
		mov    %ax,_0c6b70_data
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		xor    %edx,%edx
		add    %ebx,%eax
		mov    $0x00001e,%ebx
		div    %ebx
		mov    _0c6b7e_data,%dx
		mov    %ax,_0c6b72_data
		imul   _0c6b70_data,%dx
		mov    _0c6b72_data,%ax
		add    %edx,%eax
		mov    %ax,_0c6b74_data

	_0348e3_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0348e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    %ah,(%esp)
		cli    
		call   _0346fc_func
		cmpb   $0x000000,_0c6b76_data
		je     _03495d_jump

	_034903_jump:
		cmpb   $0x000000,(%esp)
		jne    _03495d_jump
		call   _034830_func
		call   _01730e_func
		call   _0172fe_func
		call   _01735b_func
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    _0c6b72_data,%bx
		xor    %edx,%edx
		call   _0173a3_func
		call   _0172fe_func
		call   _01735b_func
		mov    _0c6b70_data,%dx
		imul   $0x000065,%edx,%edx
		mov    $0x000064,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		sub    %esi,%ebx
		cmp    %eax,%ebx
		jae    _034903_jump
		movb   $0x000001,(%esp)
		jmp    _034903_jump

	_03495d_jump:
		sti    
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034968_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c6b5c_data,%eax
		call   _074f2c_func
		call   _03a354_func
		xor    %ah,%ah
		mov    %ah,_0c94a5_data
		mov    %ah,_0c6970_data
		mov    %ah,_0c6971_data
		mov    %ah,_0c2612_data
		call   _03e9d4_func
		mov    $0x000003,%eax
		call   _03e3c8_func
		mov    $0x00fa40,%eax
		call   _075384_func
		mov    %eax,_0cdf2c_data
		mov    $0x01f400,%eax
		call   _075384_func
		mov    _0cdf2c_data,%edx
		mov    %eax,_0cdf30_data
		test   %edx,%edx
		je     _0349cf_jump
		test   %eax,%eax
		jne    _0349d9_jump

	_0349cf_jump:
		mov    $_0c001c_data,%eax
		call   _01f878_func

	_0349d9_jump:
		call   _03f0f0_func
		mov    $0x00003c,%bh
		mov    $0x00003c,%eax
		mov    $0x000001,%cl
		xor    %edx,%edx
		mov    %bh,_0c7998_data
		call   _03a364_func
		mov    %cl,_0c6b77_data
		call   _01731e_func
		call   _0346fc_func
		mov    %dx,_0c11b2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034a10_func:
		push   %edx
		cmpb   $0x000000,_0c2595_data
		jne    _034a6c_jump
		movb   $0x0000ff,(%eax)
		call   _03e3d0_func
		cmpl   $0x000000,_0c695c_data
		jne    _034a47_jump
		cmpb   $0x000000,_0c6971_data
		jne    _034a3d_jump
		cmpb   $0x000000,_0c6970_data
		je     _034a47_jump

	_034a3d_jump:
		mov    $_0c695c_data,%eax
		call   _03e724_func

	_034a47_jump:
		xor    %edx,%edx
		mov    _0c24aa_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7c9c_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _039018_func

	_034a6c_jump:
		pop    %edx
		ret    



_034a70_func:
		push   %ebx
		push   %edx
		mov    $0x000014,%edx
		xor    %ebx,%ebx
		mov    %dx,_0c6b80_data
		mov    %bx,_0c6b7e_data
		call   _0348e8_func
		pop    %edx
		pop    %ebx
		ret    



_034a90_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    %edx,%ebp
		mov    $_0c003a_data,%esi
		mov    %edx,%edi
		push   %edi

	_034aa4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034abc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _034aa4_jump

	_034abc_jump:
		pop    %edi
		mov    %esp,%edx
		movswl %bx,%eax
		mov    $0x00000a,%ebx
		mov    %esp,%esi
		call   _07aae3_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_034ad7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034aef_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _034ad7_jump

	_034aef_jump:
		pop    %edi
		mov    $_0c003e_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_034afe_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034b16_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _034afe_jump

	_034b16_jump:
		pop    %edi
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_034b20_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    %edx,%ebp
		mov    $_0c0043_data,%esi
		mov    %edx,%edi
		push   %edi

	_034b34_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034b4c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _034b34_jump

	_034b4c_jump:
		pop    %edi
		mov    %esp,%edx
		movswl %bx,%eax
		mov    $0x00000a,%ebx
		mov    %esp,%esi
		call   _07aae3_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_034b67_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034b7f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _034b67_jump

	_034b7f_jump:
		pop    %edi
		mov    $_0c0047_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_034b8e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034ba6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _034b8e_jump

	_034ba6_jump:
		pop    %edi
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_034c00_switch:
		.long   _034c2d_case
		.long   _034c34_case
		.long   _034c3b_case
		.long   _034c42_case
		.long   _034c49_case




_034c14_func:
		dec    %edx
		cmp    $0x000004,%dx
		ja     _034d27_jump
		and    $0x00ffff,%edx
		jmp    *%cs:_034c00_switch(,%edx,4)

	_034c2d_case:
		mov    $0x000002,%edx
		jmp    _034c4c_jump

	_034c34_case:
		mov    $0x000004,%edx
		jmp    _034c4c_jump

	_034c3b_case:
		mov    $0x000003,%edx
		jmp    _034c4c_jump

	_034c42_case:
		mov    $0x000001,%edx
		jmp    _034c4c_jump

	_034c49_case:
		xor    %edx,%edx
		nop

	_034c4c_jump:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000308,%esp
		mov    %eax,%ebx
		mov    _0c9500_data,%esi
		mov    $0x000300,%ecx
		mov    %esi,0x000304(%esp)
		mov    _0c94fc_data,%esi
		mov    %esp,%edi
		mov    %esi,0x000300(%esp)
		mov    $_0c859c_data,%esi
		mov    _0c94f0_data,%ebp
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebx,%eax
		call   _043690_func
		mov    _0c94f0_data,%edx
		mov    $0x000300,%ecx
		mov    %edx,_0c9504_data
		mov    _0c9500_data,%edx
		mov    $_0c859c_data,%esi
		mov    %edx,_0c9508_data
		mov    _0c94fc_data,%edx
		mov    $_0c889c_data,%edi
		mov    %edx,_0c950c_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x000304(%esp),%edx
		mov    $0x000300,%ecx
		mov    %esp,%esi
		mov    $_0c859c_data,%edi
		mov    %edx,_0c9500_data
		mov    0x000300(%esp),%edx
		mov    %ebp,_0c94f0_data
		mov    %edx,_0c94fc_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000308,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_034d27_jump:
		ret    



_034d28_func:
		push   %edx
		mov    $0x00000a,%edx
		call   _034c4c_jump
		pop    %edx
		ret    



_034d38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   $0x000089
		mov    _0cd000_data,%edi
		mov    _0c9504_data,%esi
		push   $0x000140
		xor    %edx,%edx
		xor    %ecx,%ecx
		push   $0x000140
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   _015225_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034e60_func:
		ret    



_034e64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0c697c_data
		je     _034e76_jump
		call   _01cf64_func

	_034e76_jump:
		cmpb   $0x000000,_0cdf40_data
		jne    _034e86_jump
		movb   $0x000001,_095b01_data

	_034e86_jump:
		mov    _0c261e_data,%ax
		cmp    _0c2522_data,%ax
		je     _034eb2_jump
		xor    %eax,%eax
		mov    $0x000001,%edx
		mov    %ax,_0c2520_data
		mov    %dx,_0c251e_data
		mov    %dx,_0c251c_data
		jmp    _034ee4_jump

	_034eb2_jump:
		call   _025b00_func
		test   %al,%al
		je     _034ed2_jump
		xor    %ecx,%ecx
		mov    $0x000001,%esi
		mov    %cx,_0c2520_data
		mov    %si,_0c251e_data
		jmp    _034edb_jump

	_034ed2_jump:
		xor    %ebx,%ebx
		mov    %bx,_0c251e_data

	_034edb_jump:
		movw   $0x000001,_0c251c_data

	_034ee4_jump:
		xor    %eax,%eax
		mov    _0cd10e_data,%al
		cmp    $0x000001,%eax
		jne    _034f07_jump
		mov    _0c261c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _034f07_jump
		call   _034134_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_034f07_jump:
		cmpb   $0x000000,_0c2595_data
		jne    _034f6d_jump
		cmpw   $0x000000,_0c251e_data
		je     _034f6d_jump
		call   _0353dc_func
		mov    $_0c6b38_data,%eax
		call   _075360_func
		mov    $_0c6b50_data,%eax
		call   _075348_func
		mov    _0c261c_data,%eax
		mov    $_0c94bc_data,%edx
		sar    $0x000010,%eax
		mov    $_0c94bc_data,%ebx
		call   _034b20_func
		mov    $_0c6b50_data,%edx
		mov    $_0c6b38_data,%eax
		call   _040fa0_func
		mov    $_0c6b50_data,%eax
		call   _075330_func
		call   _04f9d0_func
		call   _0354c0_func

	_034f6d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034f74_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0c697c_data
		je     _034f84_jump
		call   _01cf64_func

	_034f84_jump:
		mov    $0x000001,%ebx
		mov    _0c261e_data,%ax
		xor    %edx,%edx
		mov    %ax,_0c2522_data
		mov    %dx,_0c251e_data
		mov    %bx,_0c251c_data
		mov    _0c2620_data,%ax
		mov    _0c2595_data,%dl
		mov    %ax,_0c2520_data
		test   %dl,%dl
		jne    _035010_jump
		cmpb   $0x000000,_0c697c_data
		je     _034fcc_jump
		xor    %edx,%edx
		mov    %edx,_0c6980_data

	_034fcc_jump:
		mov    _0c251e_data,%eax
		mov    $_0c94a8_data,%edx
		sar    $0x000010,%eax
		call   _034a90_func
		mov    $_0c6b44_data,%eax
		call   _075374_func
		mov    $_0c6b50_data,%eax
		mov    $_0c94a8_data,%ebx
		call   _075354_func
		mov    $_0c6b44_data,%eax
		mov    $_0c6b50_data,%edx
		mov    $_0c6b44_data,%eax
		call   _041774_func
		call   _04485c_func

	_035010_jump:
		pop    %edx
		pop    %ebx
		ret    



_035104_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _0351e2_jump
		call   _03dffc_func
		test   %al,%al
		je     _035127_jump
		movb   $0x000001,_0cd105_data
		pop    %edx
		ret    

	_035127_jump:
		mov    $0x000020,%eax
		call   _03dffc_func
		test   %al,%al
		jne    _035222_jump
		mov    $0x000002,%eax
		call   _03dffc_func
		test   %al,%al
		je     _03514e_jump
		xor    %eax,%eax
		jmp    _03521c_jump

	_03514e_jump:
		mov    $0x000003,%eax
		call   _03dffc_func
		test   %al,%al
		je     _03516a_jump
		movw   $0x000001,_0cdb20_data
		jmp    _035222_jump

	_03516a_jump:
		mov    $0x000004,%eax
		call   _03dffc_func
		test   %al,%al
		je     _035188_jump
		movw   $0x000002,_0cdb20_data
		call   _0341a8_func
		pop    %edx
		ret    

	_035188_jump:
		mov    $0x000005,%eax
		call   _03dffc_func
		test   %al,%al
		je     _0351a6_jump
		movw   $0x000003,_0cdb20_data
		call   _0341a8_func
		pop    %edx
		ret    

	_0351a6_jump:
		mov    $0x000006,%eax
		call   _03dffc_func
		test   %al,%al
		je     _0351c4_jump
		movw   $0x000004,_0cdb20_data
		call   _0341a8_func
		pop    %edx
		ret    

	_0351c4_jump:
		mov    $0x000007,%eax
		call   _03dffc_func
		test   %al,%al
		je     _035227_jump
		movw   $0x000005,_0cdb20_data
		call   _0341a8_func
		pop    %edx
		ret    

	_0351e2_jump:
		call   _07991e_func
		test   %eax,%eax
		je     _035227_jump
		call   _079935_func
		mov    %al,%dl
		cmp    $0x00001b,%al
		jne    _0351fd_jump
		movb   $0x000001,_0cd105_data

	_0351fd_jump:
		cmp    $0x000064,%dl
		jne    _035207_jump
		call   _0341a8_func

	_035207_jump:
		cmp    $0x000031,%dl
		jb     _035227_jump
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x000036,%eax
		jg     _035227_jump
		xor    %eax,%eax
		mov    %dl,%al
		sub    $0x000031,%eax

	_03521c_jump:
		mov    %ax,_0cdb20_data

	_035222_jump:
		call   _0341a8_func

	_035227_jump:
		pop    %edx
		ret    



_03522c_func:
		xor    %eax,%eax
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _035243_jump
		call   _03dffc_func
		test   %al,%al
		je     _03525c_jump
		jmp    _035255_jump

	_035243_jump:
		call   _07991e_func
		test   %eax,%eax
		je     _03525c_jump
		call   _079935_func
		cmp    $0x00001b,%al
		jne    _03525c_jump

	_035255_jump:
		movb   $0x000001,_0cd105_data

	_03525c_jump:
		ret    



_035270_func:
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		je     _03529d_jump
		call   _07991e_func
		test   %eax,%eax
		je     _03529a_jump
		cmpb   $0x000000,_0cdb18_data
		jne    _03529a_jump
		call   _079935_func
		mov    %al,(%edx)
		pop    %edx
		ret    

	_03529a_jump:
		movb   $0x0000ff,(%edx)

	_03529d_jump:
		pop    %edx
		ret    

	_0352e4_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lea    0x000000(%eax),%eax

	_0352ec_jump:
		ret    



_0352f0_func:
		cmpb   $0x000000,_0c2595_data
		je     _0352ec_jump
		mov    $_0c6b38_data,%eax
		call   _075360_func
		mov    $_0c6b50_data,%eax
		jmp    _075348_func



_035310_func:
		push   %edx
		call   _03a354_func
		cmpb   $0x000000,_0c6970_data
		je     _035336_jump
		call   _03e9b8_func
		mov    $0x000001,%dl
		mov    $_0c695c_data,%eax
		mov    %dl,_0c6972_data
		call   _03e724_func

	_035336_jump:
		push   $_0c0068_data
		call   _0798fc_func
		mov    _0c2595_data,%dh
		add    $0x000004,%esp
		test   %dh,%dh
		je     _035389_jump
		mov    $_0c6b44_data,%eax
		call   _0752ac_func
		mov    $_0c6b38_data,%eax
		call   _0752ac_func
		mov    $_0c6b50_data,%eax
		call   _0752ac_func
		mov    $_0c6b2c_data,%eax
		call   _0752ac_func
		mov    _0cdf34_data,%eax
		call   _07539c_func
		mov    _0cdf30_data,%eax
		call   _07539c_func

	_035389_jump:
		call   _074f04_func
		xor    %eax,%eax
		call   _079d2c_func
		pop    %edx
		mov    %eax,%eax
		ret    



_03539c_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _0397d4_func
		call   _025b00_func
		mov    $0x0000a0,%ecx
		mov    $0x0000be,%edx
		test   %al,%al
		je     _0353c1_jump
		mov    $0x0000f0,%ecx
		mov    $0x0000a0,%edx

	_0353c1_jump:
		push   $0x000000
		mov    _0cd9d4_data,%eax
		movswl %dx,%ebx
		movswl %cx,%edx
		mov    $0x000002,%ecx
		call   _01a3ec_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0353dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0c6b44_data,%eax
		mov    $0x000300,%ecx
		mov    _0c261c_data,%edx
		mov    $_0c799c_data,%esi
		sar    $0x000010,%edx
		mov    $_0c91a4_data,%edi
		call   _034c14_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c889c_data,%esi
		mov    $_0c799c_data,%edi
		mov    $_0c889c_data,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%eax
		call   _039018_func
		call   _0172fe_func
		call   _01730e_func
		call   _037f10_func
		call   _03539c_func
		mov    $0x000064,%edx
		mov    _0cdf2c_data,%ebx
		mov    $0x000009,%eax
		mov    %ebx,%ecx
		call   _035e7c_func
		and    $0x0000ff,%eax
		je     _035482_jump
		call   _035ecc_func
		call   _035f08_func
		call   _03539c_func

	_035482_jump:
		call   _01730e_func
		call   _0172fe_func
		call   _037f10_func
		mov    $_0c799c_data,%ebx

	_035496_jump:
		mov    _0c1b22_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _0352e4_jump
		call   _01730e_func
		call   _0172fe_func
		mov    $_0c889c_data,%eax
		mov    %ebx,%edx
		call   _039098_func
		jmp    _035496_jump



_0354c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000064,%edx
		mov    $0x000009,%eax
		mov    _0cdf2c_data,%ecx
		mov    _0ccffc_data,%ebx
		call   _035e94_func
		xor    %ebx,%ebx
		mov    %al,%bl
		test   %ebx,%ebx
		je     _0354f2_jump
		call   _035ecc_func
		call   _035f08_func

	_0354f2_jump:
		mov    $_0c889c_data,%edx
		mov    $0x000002,%eax
		mov    $0x000300,%ecx
		mov    $_0c91a4_data,%esi
		mov    $_0c799c_data,%edi
		call   _0391a0_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035528_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _079cb8_func
		cli    
		mov    _0d7598_data,%edx
		inc    %edx
		mov    $0x00000a,%ebx
		mov    %edx,_0d7598_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _035640_jump
		mov    _0d75a0_data,%eax
		mov    _0d759c_data,%ebx
		add    %eax,%ebx
		mov    %ebx,_0d759c_data
		cmp    $0x000080,%ebx
		jl     _035583_jump
		mov    $0x000080,%ebp
		neg    %eax
		mov    %ebp,_0d759c_data
		jmp    _035595_jump

	_035583_jump:
		cmp    $0x000020,%ebx
		jg     _03559a_jump
		mov    $0x000020,%edi
		neg    %eax
		mov    %edi,_0d759c_data

	_035595_jump:
		mov    %eax,_0d75a0_data

	_03559a_jump:
		mov    $0x000003,%edx
		mov    $0x00003f,%ecx

	_0355a4_jump:
		xor    %eax,%eax
		mov    _0d759c_data,%ebx
		mov    _0c889c_data(%edx),%al
		imul   %eax,%ebx
		sar    $0x000006,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jle    _0355c0_jump
		mov    %ebx,%eax

	_0355c0_jump:
		mov    %al,_0c799c_data(%edx)
		xor    %eax,%eax
		mov    _0c889d_data(%edx),%al
		mov    _0d759c_data,%esi
		mov    %eax,%ebx
		imul   %esi,%ebx
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		cmp    %ebx,%eax
		jle    _0355e4_jump
		mov    %ebx,%eax

	_0355e4_jump:
		xor    %ebx,%ebx
		mov    _0d759c_data,%edi
		mov    _0c889e_data(%edx),%bl
		imul   %edi,%ebx
		mov    %al,_0c799d_data(%edx)
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		add    $0x000003,%edx
		cmp    %ebx,%eax
		jle    _035609_jump
		mov    %ebx,%eax

	_035609_jump:
		mov    %al,_0c799b_data(%edx)
		cmp    $0x00001b,%edx
		jne    _0355a4_jump
		call   _0172fe_func
		mov    $_0c799c_data,%esi
		mov    $0x000008,%ecx
		mov    $0x000001,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_035640_jump:
		mov    _0d75a8_data,%dx
		mov    _0d75a4_data,%eax
		call   _07ab04_func
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_0356c4_func:
		call   _041fe4_func
		mov    $0x000001,%eax
		ret    



_0356d0_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c6995_data,%al
		xor    %dl,%dl
		cmp    $0x000001,%eax
		jne    _0356eb_jump
		call   _03e200_func
		test   %ax,%ax
		je     _0356f7_jump
		jmp    _0356f5_jump

	_0356eb_jump:
		call   _03e200_func
		test   %ax,%ax
		je     _0356f7_jump

	_0356f5_jump:
		mov    $0x000001,%dl

	_0356f7_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_0356fc_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c6995_data,%al
		xor    %dl,%dl
		cmp    $0x000001,%eax
		jne    _03571b_jump
		mov    $0x00001c,%eax
		call   _03dffc_func
		test   %al,%al
		je     _035727_jump
		jmp    _035725_jump

	_03571b_jump:
		call   _03e268_func
		test   %ax,%ax
		je     _035727_jump

	_035725_jump:
		mov    $0x000001,%dl

	_035727_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_0357d4_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c6995_data,%al
		xor    %dl,%dl
		cmp    $0x000001,%eax
		jne    _0357ee_jump
		call   _03dffc_func
		test   %al,%al
		je     _035802_jump
		jmp    _035800_jump

	_0357ee_jump:
		call   _07991e_func
		test   %eax,%eax
		je     _035802_jump
		call   _079935_func
		cmp    $0x00001b,%al
		jne    _035802_jump

	_035800_jump:
		mov    $0x000001,%dl

	_035802_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_035810_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _03e3d0_func
		mov    _0cdf2c_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %edi,%edi
		call   _036ac0_func
		mov    %ax,%di
		test   %edi,%edi
		je     _035860_jump
		call   _03e200_func
		test   %ax,%ax
		jne    _035860_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _035860_jump
		call   _03e2d0_func
		test   %ax,%ax
		jne    _035860_jump
		call   _03e338_func
		test   %ax,%ax
		je     _035867_jump

	_035860_jump:
		mov    $0x000001,%edx
		jmp    _035869_jump

	_035867_jump:
		xor    %edx,%edx

	_035869_jump:
		call   _036e34_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_035874_case:
		mov    $_0c889c_data,%eax
		call   _0396c0_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _035890_jump
		call   _039478_func

	_035890_jump:
		mov    $_035810_func,%eax
		call   _039544_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _039734_jump
		call   _0394c8_func
		jmp    _039734_jump



_0358b8_func:
		push   %edx
		call   _03e3d0_func
		call   _07478c_func
		and    $0x00ffff,%eax
		je     _0358f2_jump
		call   _03e200_func
		test   %ax,%ax
		jne    _0358f2_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _0358f2_jump
		call   _03e2d0_func
		test   %ax,%ax
		jne    _0358f2_jump
		call   _03e338_func
		test   %ax,%ax
		je     _0358f9_jump

	_0358f2_jump:
		mov    $0x000001,%edx
		jmp    _0358fb_jump

	_0358f9_jump:
		xor    %edx,%edx

	_0358fb_jump:
		call   _074920_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_035904_case:
		mov    $_0c889c_data,%eax
		call   _0396c0_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _035925_jump
		call   _0394f0_func
		call   _039478_func

	_035925_jump:
		mov    $_0358b8_func,%eax
		call   _039544_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _039734_jump
		call   _0394c8_func
		jmp    _039734_jump



_03594c_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _03e3d0_func
		mov    _0cdf2c_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %edi,%edi
		call   _0254c0_func
		mov    %ax,%di
		test   %edi,%edi
		je     _03599c_jump
		call   _03e200_func
		test   %ax,%ax
		jne    _03599c_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _03599c_jump
		call   _03e2d0_func
		test   %ax,%ax
		jne    _03599c_jump
		call   _03e338_func
		test   %ax,%ax
		je     _0359a3_jump

	_03599c_jump:
		mov    $0x000001,%edx
		jmp    _0359a5_jump

	_0359a3_jump:
		xor    %edx,%edx

	_0359a5_jump:
		call   _0259a8_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_0359b0_case:
		mov    $_0c889c_data,%eax
		call   _0396c0_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _0359d1_jump
		call   _0394f0_func
		call   _039478_func

	_0359d1_jump:
		mov    $_03594c_func,%eax
		call   _039544_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _039734_jump
		call   _0394c8_func
		jmp    _039734_jump



_0359f8_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _03e3d0_func
		mov    _0cdf2c_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %edi,%edi
		call   _040b40_func
		mov    %ax,%di
		test   %edi,%edi
		je     _035a48_jump
		call   _03e200_func
		test   %ax,%ax
		jne    _035a48_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _035a48_jump
		call   _03e2d0_func
		test   %ax,%ax
		jne    _035a48_jump
		call   _03e338_func
		test   %ax,%ax
		je     _035a4f_jump

	_035a48_jump:
		mov    $0x000001,%edx
		jmp    _035a51_jump

	_035a4f_jump:
		xor    %edx,%edx

	_035a51_jump:
		call   _040a18_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_035a5c_case:
		mov    $_0c889c_data,%eax
		call   _0396c0_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _035a7d_jump
		call   _0394f0_func
		call   _039478_func

	_035a7d_jump:
		mov    $_0359f8_func,%eax
		call   _039544_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _039734_jump
		call   _0394c8_func
		jmp    _039734_jump



_035aa4_func:
		push   %edx
		call   _03e3d0_func
		call   _0699ec_func
		and    $0x00ffff,%eax
		je     _035ade_jump
		call   _03e200_func
		test   %ax,%ax
		jne    _035ade_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _035ade_jump
		call   _03e2d0_func
		test   %ax,%ax
		jne    _035ade_jump
		call   _03e338_func
		test   %ax,%ax
		je     _035ae5_jump

	_035ade_jump:
		mov    $0x000001,%edx
		jmp    _035ae7_jump

	_035ae5_jump:
		xor    %edx,%edx

	_035ae7_jump:
		call   _069c10_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_035af0_case:
		mov    $_0c889c_data,%eax
		call   _0396c0_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _035b11_jump
		call   _0394f0_func
		call   _039478_func

	_035b11_jump:
		mov    $_035aa4_func,%eax
		call   _039544_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _039734_jump
		call   _0394c8_func
		jmp    _039734_jump



_035b38_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _03e3d0_func
		mov    _0cdf2c_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %edi,%edi
		call   _055bb4_func
		mov    %ax,%di
		test   %edi,%edi
		je     _035b88_jump
		call   _03e200_func
		test   %ax,%ax
		jne    _035b88_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _035b88_jump
		call   _03e2d0_func
		test   %ax,%ax
		jne    _035b88_jump
		call   _03e338_func
		test   %ax,%ax
		je     _035b8f_jump

	_035b88_jump:
		mov    $0x000001,%edx
		jmp    _035b91_jump

	_035b8f_jump:
		xor    %edx,%edx

	_035b91_jump:
		call   _055e7c_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_035b9c_case:
		mov    $_0c889c_data,%eax
		call   _0396c0_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _035bbd_jump
		call   _0394f0_func
		call   _039478_func

	_035bbd_jump:
		mov    $_035b38_func,%eax
		call   _039544_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _039734_jump
		call   _0394c8_func
		jmp    _039734_jump



_035be4_func:
		push   %edx
		call   _03e3d0_func
		call   _071d04_func
		and    $0x00ffff,%eax
		je     _035c1e_jump
		call   _03e200_func
		test   %ax,%ax
		jne    _035c1e_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _035c1e_jump
		call   _03e2d0_func
		test   %ax,%ax
		jne    _035c1e_jump
		call   _03e338_func
		test   %ax,%ax
		je     _035c25_jump

	_035c1e_jump:
		mov    $0x000001,%edx
		jmp    _035c27_jump

	_035c25_jump:
		xor    %edx,%edx

	_035c27_jump:
		call   _071dec_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_035c30_case:
		mov    $_0c889c_data,%eax
		call   _0396c0_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _035c51_jump
		call   _0394f0_func
		call   _039478_func

	_035c51_jump:
		mov    $_035be4_func,%eax
		call   _039544_func
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _039734_jump
		call   _0394c8_func
		jmp    _039734_jump



_035c78_func:
		mov    _095f19_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _035c92_jump
		mov    $0x000006,%eax
		call   _061dd0_func
		add    $0x000002,%al
		ret    

	_035c92_jump:
		mov    $0x000007,%eax
		call   _061dd0_func
		inc    %al
		ret    



_035ca0_func:
		mov    $0x00000a,%eax
		call   _061dd0_func
		inc    %al
		ret    



_035cb0_func:
		mov    $0x00000e,%eax
		call   _061dd0_func
		inc    %al
		ret    



_035cc0_func:
		mov    $0x000006,%eax
		call   _061dd0_func
		inc    %al
		ret    

_035cd0_switch:
		.long   _035d82_case
		.long   _035ddb_case
		.long   _035d9d_case
		.long   _035e72_case
		.long   _035dbb_case
		.long   _035e1c_case
		.long   _035e4c_case
		.long   _035e0a_case


	_035cf0_jump:
		push   %esi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    $0x000001,%edx
		cmp    $0x000009,%eax
		jne    _035d37_jump
		call   _035c78_func
		mov    %al,0x000004(%esp)
		and    $0x0000ff,%eax
		cmp    $0x000002,%eax
		je     _035d23_jump
		cmp    $0x000004,%eax
		jne    _035d2a_jump

	_035d23_jump:
		call   _035ca0_func
		jmp    _035d34_jump

	_035d2a_jump:
		cmp    $0x000006,%eax
		jne    _035d37_jump
		call   _035cb0_func

	_035d34_jump:
		mov    %al,(%esp)

	_035d37_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		cmp    $0x000004,%eax
		jne    _035d4b_jump
		movb   $0x000002,0x000004(%esp)

	_035d4b_jump:
		movsbw _095f1c_data,%ax
		imul   %eax,%edx
		mov    (%esp),%al
		mov    %al,_0d75b0_data
		mov    0x000004(%esp),%al
		mov    %al,_0d75b1_data
		dec    %al
		cmp    $0x000007,%al
		ja     _035e72_case
		mov    %edx,%esi
		and    $0x0000ff,%eax
		add    %edx,%esi
		jmp    *%cs:_035cd0_switch(,%eax,4)

	_035d82_case:
		push   %ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x000008,%edx
		mov    $0x000078,%ecx
		mov    %edx,%eax
		call   _0369b4_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_035d9d_case:
		push   %ecx
		mov    $0x000014,%eax
		mov    $0x000190,%ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x00000a,%edx
		call   _074684_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_035dbb_case:
		push   %ecx
		push   %ebx
		mov    $0x000008,%edx
		mov    $0x000014,%eax
		push   $0x000032
		movswl %si,%ecx
		mov    $0x00003d,%ebx
		call   _0252f8_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_035ddb_case:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x00000c,%eax
		je     _035dea_jump
		cmp    $0x000064,%eax
		jne    _035df4_jump

	_035dea_jump:
		call   _035ca0_func
		mov    %al,_0d75b0_data

	_035df4_jump:
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0d75b0_data,%al
		movswl %dx,%edx
		call   _040978_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_035e0a_case:
		mov    $0x000016,%eax
		movswl %si,%edx
		call   _0698c8_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_035e1c_case:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000010,%eax
		je     _035e2b_jump
		cmp    $0x000064,%eax
		jne    _035e35_jump

	_035e2b_jump:
		call   _035cb0_func
		mov    %al,_0d75b0_data

	_035e35_jump:
		xor    %eax,%eax
		shl    $0x000002,%edx
		mov    _0d75b0_data,%al
		movswl %dx,%edx
		call   _055afc_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_035e4c_case:
		mov    $0x0000a0,%eax
		push   %ecx
		shl    $0x000002,%edx
		push   %ebx
		movswl %dx,%ecx
		push   $0x0003e8
		mov    $0x000030,%ebx
		mov    $0x000064,%edx
		call   _071bfc_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_035e72_case:
		xor    %al,%al
		add    $0x000008,%esp
		pop    %esi
		ret    



_035e7c_func:
		movb   $0x000001,_095f1c_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		jmp    _035cf0_jump



_035e94_func:
		movb   $0x0000ff,_095f1c_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		jmp    _035cf0_jump

_035eac_switch:
		.long   _035874_case
		.long   _035a5c_case
		.long   _035904_case
		.long   _035ee4_case
		.long   _0359b0_case
		.long   _035b9c_case
		.long   _035c30_case
		.long   _035af0_case




_035ecc_func:
		mov    _0d75b1_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _035ee4_case
		and    $0x0000ff,%eax
		jmp    *%cs:_035eac_switch(,%eax,4)

	_035ee4_case:
		ret    

_035ee8_switch:
		.long   _036984_case
		.long   _040948_case
		.long   _074654_case
		.long   _035f20_case
		.long   _0252b8_case
		.long   _055abc_case
		.long   _071bcc_case
		.long   _069898_case




_035f08_func:
		mov    _0d75b1_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _035f20_case
		and    $0x0000ff,%eax
		jmp    *%cs:_035ee8_switch(,%eax,4)

	_035f20_case:
		ret    



_035f24_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		xor    %ecx,%ecx
		mov    _095b01_data,%cl
		cmp    $0x000001,%ecx
		jne    _035f7c_jump
		xor    %bl,%bl
		jmp    _035f71_jump

	_035f42_jump:
		imul   $0x003e80,%ecx,%ecx
		mov    %bl,%ah
		mov    (%esp),%edi
		mov    $0x0003ce,%edx
		mov    $0x000004,%al
		out    %ax,(%dx)
		mov    %ebp,%esi
		add    %ecx,%edi
		mov    $0x003e80,%ecx
		inc    %bl
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_035f71_jump:
		xor    %ecx,%ecx
		mov    %bl,%cl
		cmp    $0x000004,%ecx
		jl     _035f42_jump
		jmp    _035f95_jump

	_035f7c_jump:
		mov    $0x00fa00,%ecx
		mov    %eax,%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_035f95_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_035fa0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %edx,%ebp
		xor    %ecx,%ecx
		mov    _095b01_data,%cl
		cmp    $0x000001,%ecx
		jne    _035ffc_jump
		mov    $0x000001,%bl
		mov    %ebp,%edi
		xor    %bh,%bh
		jmp    _035ff1_jump

	_035fc2_jump:
		imul   $0x003e80,%ecx,%ecx
		mov    %bl,%ah
		mov    (%esp),%esi
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		add    %bl,%bl
		add    %ecx,%esi
		mov    $0x003e80,%ecx
		inc    %bh
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_035ff1_jump:
		xor    %ecx,%ecx
		mov    %bh,%cl
		cmp    $0x000004,%ecx
		jl     _035fc2_jump
		jmp    _036015_jump

	_035ffc_jump:
		mov    $0x00fa00,%ecx
		mov    %eax,%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_036015_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_036020_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%eax
		call   _016632_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01666f_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0cda00_data,%eax
		call   _01a3ec_func
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		call   _01666f_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_036084_jump:
		mov    $0x000001,%eax
		ret    



_03608c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0d75b2_data,%bx
		mov    _0cdf30_data,%edx
		mov    _0ccffc_data,%eax
		call   _035f24_func
		mov    _0cd000_data,%edx
		mov    _0cdf30_data,%eax
		call   _035fa0_func
		call   _036020_func
		mov    $_036084_jump,%eax
		call   _039544_func
		mov    _0c6994_data,%ah
		mov    $0x00000f,%ebx
		test   %ah,%ah
		je     _0361a1_jump
		mov    $0x00002a,%edi
		mov    $0x000036,%esi
		xor    %ecx,%ecx

	_0360e6_jump:
		mov    $0x00000f,%ebx
		mov    %cl,%dl

	_0360ed_jump:
		movswl %bx,%eax
		mov    %bx,_0d75b2_data
		test   %eax,%eax
		je     _036130_jump
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x000007,%eax
		jg     _036130_jump
		call   _01730e_func
		call   _0172fe_func
		mov    %esi,%eax
		call   _03dffc_func
		test   %al,%al
		je     _036126_jump
		mov    %edi,%eax
		call   _03dffc_func
		test   %al,%al
		je     _036126_jump
		inc    %dl

	_036126_jump:
		mov    _0d75b2_data,%bx
		dec    %ebx
		jmp    _0360ed_jump

	_036130_jump:
		xor    %eax,%eax
		mov    %dl,%al
		mov    _0d75b2_data,%bx
		cmp    $0x00000c,%eax
		jl     _036142_jump
		mov    %cl,%dl

	_036142_jump:
		mov    %bx,_0d75b2_data
		test   %dl,%dl
		je     _03618e_jump
		mov    _0d75b4_data,%dh
		xor    %eax,%eax
		xor    $0x000001,%dh
		mov    _095b01_data,%al
		mov    %dh,_0d75b4_data
		test   %eax,%eax
		jne    _036184_jump
		mov    _0cd000_data,%edx
		mov    _0cdf30_data,%eax
		call   _035fa0_func
		cmp    _0d75b4_data,%cl
		jne    _036184_jump
		call   _036020_func

	_036184_jump:
		mov    $_036084_jump,%eax
		call   _039544_func

	_03618e_jump:
		mov    _0d75b2_data,%bx
		cmp    _0c6994_data,%cl
		jne    _0360e6_jump

	_0361a1_jump:
		mov    _0cd000_data,%edx
		mov    _0cdf30_data,%eax
		mov    %bx,_0d75b2_data
		call   _035fa0_func
		mov    $_036084_jump,%eax
		call   _039544_func
		mov    _0d75b2_data,%bx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0361d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    _0c7998_data,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0d75b4_data,%eax
		mov    _0d75b6_data,%di
		sar    $0x000010,%eax
		inc    %edi
		cmp    %edx,%eax
		jge    _0362af_jump
		mov    $0x0000a0,%ebx
		mov    _0cdf2c_data,%edx
		mov    _0cdf30_data,%eax
		mov    %di,_0d75b6_data
		call   _073adc_func
		mov    $0x0000a0,%ebx
		mov    _0cdf2c_data,%edx
		mov    _0cdf30_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _073adc_func
		mov    $0x000036,%eax
		call   _03dffc_func
		test   %al,%al
		je     _036283_jump
		mov    $0x00002a,%eax
		call   _03dffc_func
		test   %al,%al
		je     _036283_jump
		mov    _0d75ac_data,%ebx
		inc    %ebx
		mov    %ebx,_0d75ac_data
		cmp    $0x000005,%ebx
		jl     _03628b_jump
		mov    _0d75b4_data,%bl
		xor    %esi,%esi
		xor    $0x000001,%bl
		mov    %esi,_0d75ac_data
		mov    %bl,_0d75b4_data
		jmp    _03628b_jump

	_036283_jump:
		xor    %edx,%edx
		mov    %edx,_0d75ac_data

	_03628b_jump:
		cmpb   $0x000000,_0d75b4_data
		jne    _03651d_jump
		call   _036020_func
		cmpb   $0x000000,_0c6994_data
		sete   %al
		xor    %ah,%ah
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0362af_jump:
		jne    _0362d1_jump
		mov    %di,_0d75b6_data
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0d75b8_data
		xor    %edx,%edx
		mov    %ah,_0d75b4_data
		mov    %edx,_0d75ac_data

	_0362d1_jump:
		cmpb   $0x000000,_0d75b4_data
		jne    _0363f8_jump
		cmpl   $0x000014,_0d75ac_data
		jl     _03630a_jump
		mov    $0x000036,%eax
		call   _03dffc_func
		test   %al,%al
		je     _03630a_jump
		mov    $0x00002a,%eax
		call   _03dffc_func
		test   %al,%al
		je     _03630a_jump
		movb   $0x000001,_0d75b4_data

	_03630a_jump:
		mov    _0d75b6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0363df_jump
		mov    _0cdf2c_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _055bb4_func
		and    $0x00ffff,%eax
		mov    %eax,_0d75ac_data
		call   _055e7c_func
		call   _036020_func
		cmpl   $0x000000,_0d75ac_data
		jne    _03651d_jump
		negw   _0d75b2_data
		call   _035cc0_func
		mov    _0d75b0_data,%edx
		mov    %al,_0d75b0_data
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		call   _05575c_func
		mov    _0d75b0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03651d_jump
		mov    $0x0000a0,%ebx
		mov    _0cdf2c_data,%edx
		mov    _0cdf30_data,%eax
		call   _073adc_func
		mov    $0x0000a0,%ebx
		mov    _0cdf2c_data,%edx
		mov    _0cdf30_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _073adc_func
		call   _036020_func
		xor    %eax,%eax
		mov    _0c7998_data,%al
		mov    %ax,_0d75b8_data
		cmpb   $0x000000,_0c6994_data
		sete   %al
		xor    %ah,%ah
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0363df_jump:
		decw   _0d75b8_data
		cmpb   $0x000000,_0c6994_data
		sete   %al
		xor    %ah,%ah
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0363f8_jump:
		cmpl   $0x000000,_0d75ac_data
		jne    _03640d_jump
		mov    _0d75b0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _03644c_jump

	_03640d_jump:
		mov    _0cdf2c_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _055bb4_func
		and    $0x00ffff,%eax
		mov    %eax,_0d75ac_data
		call   _055e7c_func
		cmpl   $0x000000,_0d75ac_data
		jne    _03651d_jump
		negw   _0d75b2_data
		jmp    _036500_jump

	_03644c_jump:
		mov    $0x0000a0,%ebx
		mov    _0cdf2c_data,%edx
		mov    _0cdf30_data,%eax
		call   _073adc_func
		mov    $0x0000a0,%ebx
		mov    _0cdf2c_data,%edx
		mov    _0cdf30_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _073adc_func
		call   _01730e_func
		call   _0172fe_func
		mov    _095afc_data,%edi
		mov    _0cdf2c_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0364a6_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0364a6_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %dl,%dl

	_0364af_jump:
		mov    $0x000036,%eax
		call   _03dffc_func
		test   %al,%al
		je     _0364cb_jump
		mov    $0x00002a,%eax
		call   _03dffc_func
		test   %al,%al
		jne    _0364d3_jump

	_0364cb_jump:
		cmp    _0c6994_data,%dl
		jne    _0364af_jump

	_0364d3_jump:
		mov    _0c6994_data,%al
		xor    %ch,%ch
		xor    %edi,%edi
		mov    %ch,_0d75b4_data
		mov    %di,_0d75b8_data
		test   %al,%al
		je     _03651d_jump
		xor    %edi,%edi
		mov    $0xfffffffc,%eax
		mov    %edi,_0d75ac_data
		mov    %ax,_0d75b2_data

	_036500_jump:
		call   _035cc0_func
		mov    _0d75b0_data,%edx
		mov    %al,_0d75b0_data
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		call   _05575c_func

	_03651d_jump:
		cmpb   $0x000000,_0c6994_data
		sete   %al
		xor    %ah,%ah
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036530_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ah,%ah
		mov    _0c697c_data,%dl
		mov    %ah,_0d75b4_data
		test   %dl,%dl
		je     _03655f_jump
		mov    $_0d75bc_data,%esi
		call   _012748_func
		call   _0753b0_func
		and    $0x0000ff,%eax
		call   _077080_func

	_03655f_jump:
		xor    %eax,%eax
		mov    _095b01_data,%al
		test   %eax,%eax
		jne    _0365bc_jump
		call   _035cc0_func
		mov    $0xfffffffc,%edx
		mov    _0cdf2c_data,%ebx
		mov    %al,_0d75b0_data
		mov    %dx,_0d75b2_data
		mov    $0xfffffffc,%edx
		and    $0x0000ff,%eax
		mov    %ebx,%ecx
		call   _055afc_func
		test   %al,%al
		je     _0365bc_jump
		xor    %ebx,%ebx
		mov    $_0361d0_func,%eax
		mov    %bx,_0d75b6_data
		mov    %bx,_0d75b8_data
		call   _039544_func
		call   _055abc_case
		jmp    _0365c1_jump

	_0365bc_jump:
		call   _03608c_func

	_0365c1_jump:
		cmpb   $0x000000,_0c697c_data
		je     _0365ff_jump
		mov    $_0d75c0_data,%esi
		call   _012748_func
		mov    _0d75c0_data,%ebx
		mov    _0d75bc_data,%edx
		mov    _0c6984_data,%ecx
		sub    %edx,%ebx
		add    %ebx,%ecx
		mov    %ecx,_0c6984_data
		call   _0753b0_func
		and    $0x0000ff,%eax
		call   _0770d8_func

	_0365ff_jump:
		xor    %bl,%bl
		xor    %esi,%esi
		mov    %bl,_0c6994_data
		mov    %esi,_0ce908_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036620_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0d75c4_data,%ecx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		add    %eax,%eax
		mov    0x00001c(%ecx),%ebp
		call   _075384_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _03672d_jump
		mov    0x000002(%ecx),%dx
		xor    %eax,%eax
		test   %dx,%dx
		jbe    _03666c_jump

	_036654_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		imul   $0x00006c,%edx,%ebx
		mov    0x000034(%ebx,%ebp,1),%bx
		mov    %bx,(%esi,%edx,2)
		inc    %eax
		cmp    0x000002(%ecx),%ax
		jb     _036654_jump

	_03666c_jump:
		xor    %edi,%edi
		mov    0x000002(%ecx),%ax
		mov    %edi,0x000008(%esp)
		test   %ax,%ax
		jbe    _036726_jump
		jmp    _036711_jump

	_036684_jump:
		inc    %eax
		cmp    0x000002(%ecx),%ax

	_036689_jump:
		jae    _0366a4_jump
		xor    %edx,%edx
		mov    %ax,%dx
		add    %edx,%edx
		add    %esi,%edx
		mov    (%edx),%di
		cmp    %di,%bx
		jge    _036684_jump
		mov    %edi,%ebx
		mov    %eax,0x00000c(%esp)
		jmp    _036684_jump

	_0366a4_jump:
		mov    0x00000c(%esp),%eax
		mov    0x000008(%esp),%ebx
		cmp    %bx,%ax
		je     _0366ff_jump
		xor    %edx,%edx
		mov    %bx,%dx
		imul   $0x00006c,%edx,%eax
		lea    (%eax,%ebp,1),%ebx
		mov    0x000068(%ebx),%ax
		mov    %eax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%ax
		mov    %ebx,(%esp)
		imul   $0x00006c,%eax,%ebx
		lea    (%ebx,%ebp,1),%edi
		mov    %edi,0x000004(%esp)
		mov    0x000068(%edi),%bx
		mov    (%esp),%edi
		mov    %bx,0x000068(%edi)
		mov    0x000004(%esp),%edi
		mov    0x000010(%esp),%ebx
		mov    %bx,0x000068(%edi)
		mov    (%esi,%eax,2),%di
		mov    (%esi,%edx,2),%bx
		mov    %di,(%esi,%edx,2)
		mov    %bx,(%esi,%eax,2)

	_0366ff_jump:
		mov    0x000008(%esp),%edx
		inc    %edx
		mov    0x000002(%ecx),%bx
		mov    %edx,0x000008(%esp)
		cmp    %bx,%dx
		jae    _036726_jump

	_036711_jump:
		mov    0x000008(%esp),%eax
		mov    0x000002(%ecx),%di
		mov    $0xffff8000,%ebx
		cmp    %di,%ax
		jmp    _036689_jump

	_036726_jump:
		mov    %esi,%eax
		call   _07539c_func

	_03672d_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036738_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0d75c4_data,%edi
		mov    %eax,%edx
		movzbl (%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x00000c(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%edi),%ecx
		mov    %al,0x000008(%esp)
		call   _010010_func
		movw   $0x000000,0x000004(%edi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _036790_jump
		mov    %ebx,%eax

	_036790_jump:
		movswl %si,%ebx
		mov    %ax,0x000006(%edi)
		test   %ebx,%ebx
		jl     _0367a8_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0367a6_jump
		mov    %ebx,%eax

	_0367a6_jump:
		jmp    _0367b7_jump

	_0367a8_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0367b5_jump
		mov    %ebx,%eax

	_0367b5_jump:
		neg    %eax

	_0367b7_jump:
		mov    0x000002(%edi),%dx
		xor    %esi,%esi
		mov    %ax,0x000008(%edi)
		test   %dx,%dx
		jbe    _036974_jump
		jmp    _0368e4_jump

	_0367cf_jump:
		mov    0x000018(%edi),%eax
		mov    %eax,0x00003c(%ecx)
		subw   $0x0000a0,0x000004(%esp)

	_0367dc_jump:
		mov    0x000004(%esp),%al
		mov    %al,0x000062(%ecx)
		mov    %al,0x000060(%ecx)
		add    0x00000c(%esp),%al
		dec    %al
		mov    %al,0x000066(%ecx)
		mov    $0x00000a,%ebx
		mov    %al,0x000064(%ecx)
		mov    0x000008(%esp),%al
		mov    %dl,0x000067(%ecx)
		add    %dl,%al
		mov    %dl,0x000061(%ecx)
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000065(%ecx)
		mov    %si,%dx
		mov    %al,0x000063(%ecx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000005,%edx
		jge    _036833_jump
		call   _07ab82_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %dx,0x000030(%ecx)
		jmp    _03684b_jump

	_036833_jump:
		call   _07ab82_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx
		mov    %dx,0x000030(%ecx)

	_03684b_jump:
		call   _07ab82_func
		mov    %eax,%edx
		mov    $0x000008,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000006,%edx
		mov    %dx,0x000032(%ecx)
		call   _07ab82_func
		mov    %eax,%edx
		mov    $0x000005,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx
		mov    %dx,0x000034(%ecx)
		call   _07ab82_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x000039(%ecx)
		call   _07ab82_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x00003a(%ecx)
		call   _07ab82_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000039(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %al,0x000036(%ecx)
		mov    0x00003a(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		add    $0x000002,%edx
		mov    %dl,0x00003b(%ecx)
		mov    %al,0x000037(%ecx)
		mov    0x00003b(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %si,0x000068(%ecx)
		mov    %al,0x000038(%ecx)
		inc    %esi
		mov    0x000002(%edi),%bx
		add    $0x00006c,%ecx
		cmp    %bx,%si
		jae    _036974_jump

	_0368e4_jump:
		xor    %ebx,%ebx
		mov    %si,%bx
		movzbl (%edi),%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   %eax,%edx
		mov    %edx,(%esp)
		mov    (%esp),%edx
		movzwl %dx,%ebp
		mov    %ebp,0x00000c(%ecx)
		add    %ebp,%eax
		mov    %ebp,(%ecx)
		dec    %eax
		mov    %eax,0x000024(%ecx)
		mov    %dx,0x000004(%esp)
		mov    %eax,0x000018(%ecx)
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    (%edi),%al
		sar    $0x00001f,%edx
		mov    %eax,(%esp)
		mov    %ebx,%eax
		idivl  (%esp)
		xor    %ebx,%ebx
		mov    0x000008(%esp),%bl
		imul   %ebx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		movl   $0x000100,0x00002c(%ecx)
		mov    %dx,%ax
		mov    %eax,0x000028(%ecx)
		add    %eax,%ebx
		mov    %eax,0x000004(%ecx)
		dec    %ebx
		mov    %ebx,0x00001c(%ecx)
		mov    0x00002c(%ecx),%eax
		mov    %ebx,0x000010(%ecx)
		mov    %eax,0x000020(%ecx)
		mov    %eax,0x000014(%ecx)
		mov    %eax,0x000008(%ecx)
		cmp    $0x0000a0,%ebp
		jge    _0367cf_jump
		mov    0x000014(%edi),%eax
		mov    %eax,0x00003c(%ecx)
		jmp    _0367dc_jump

	_036974_jump:
		call   _036620_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_036984_case:
		push   %ebx
		push   %edx
		mov    _0d75c4_data,%eax
		test   %eax,%eax
		je     _0369ae_jump
		mov    0x00001c(%eax),%edx
		test   %edx,%edx
		je     _03699d_jump
		mov    %edx,%eax
		call   _07539c_func

	_03699d_jump:
		mov    _0d75c4_data,%ebx
		test   %ebx,%ebx
		je     _0369ae_jump
		mov    %ebx,%eax
		call   _07539c_func

	_0369ae_jump:
		pop    %edx
		pop    %ebx
		ret    



_0369b4_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    %edx,%edi
		mov    %bx,0x000004(%esp)
		mov    %ecx,0x000008(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _036a73_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _036a73_jump
		mov    $0x000020,%eax
		call   _075384_func
		mov    %eax,%edx
		mov    %eax,_0d75c4_data
		test   %eax,%eax
		je     _036a73_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    (%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _036a0c_jump
		mov    %ebx,%eax

	_036a0c_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _036a1e_jump
		mov    %ebx,%eax

	_036a1e_jump:
		xor    %bh,%bh
		mov    %al,0x000001(%edx)
		mov    %al,%bl
		xor    %ah,%ah
		mov    (%edx),%al
		imul   %ebx,%eax
		mov    %ax,0x000002(%edx)
		mov    0x000018(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		call   _075384_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _036a73_jump
		mov    _0cdf30_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_036a73_jump:
		test   %cl,%cl
		je     _036ab1_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _073a90_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _073a90_func
		xor    %edx,%edx
		mov    0x000002(%esp),%eax
		mov    0x000008(%esp),%dx
		sar    $0x000010,%eax
		call   _036738_func
		jmp    _036ab6_jump

	_036ab1_jump:
		call   _036984_case

	_036ab6_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_036ac0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		xor    %edx,%edx
		mov    _0d75c4_data,%esi
		mov    %edx,0x000024(%esp)
		mov    0x000002(%esi),%bx
		mov    0x00001c(%esi),%ecx
		test   %bx,%bx
		jbe    _036db3_jump
		jmp    _036b3b_jump

	_036ae7_jump:
		mov    0x000006(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _036af3_jump
		neg    %eax

	_036af3_jump:
		mulb   0x000039(%ecx)
		add    %al,0x000036(%ecx)
		mov    0x000006(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _036b05_jump
		neg    %eax

	_036b05_jump:
		mulb   0x00003a(%ecx)
		add    %al,0x000037(%ecx)
		mov    0x000006(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _036b17_jump
		neg    %eax

	_036b17_jump:
		mulb   0x00003b(%ecx)
		mov    0x000038(%ecx),%dh
		add    $0x00006c,%ecx
		add    %al,%dh
		mov    0x000024(%esp),%edi
		mov    %dh,-0x000034(%ecx)
		inc    %edi
		mov    0x000002(%esi),%dx
		mov    %edi,0x000024(%esp)
		cmp    %dx,%di
		jae    _036db3_jump

	_036b3b_jump:
		mov    (%ecx),%edx
		mov    0x000018(%ecx),%ebx
		add    %ebx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%ecx),%edi
		mov    0x000004(%ecx),%edx
		add    %edi,%edx
		mov    %eax,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000020(%ecx),%ebp
		mov    0x000008(%ecx),%edx
		add    %ebp,%edx
		mov    %eax,0x000010(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %bl,%bl
		mov    %bl,0x00002c(%esp)
		mov    %bl,0x000028(%esp)
		mov    %eax,0x000014(%esp)
		jmp    _036d9d_jump

	_036b88_jump:
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000032(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    0x000008(%ecx,%eax,1),%edi
		add    %ebx,%edi
		inc    %dl
		mov    %edi,0x000008(%ecx,%eax,1)

	_036ba3_jump:
		mov    0x000006(%esi),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    %dl,%bl
		test   %eax,%eax
		jge    _036bb3_jump
		neg    %eax

	_036bb3_jump:
		cmp    %eax,%ebx
		jge    _036bea_jump
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x00002e(%ecx),%ebx
		sar    $0x000010,%ebx
		add    %ebx,(%ecx,%eax,1)
		mov    0x000030(%ecx),%ebx
		mov    0x000004(%ecx,%eax,1),%edi
		sar    $0x000010,%ebx
		add    %ebx,%edi
		mov    0x000008(%ecx,%eax,1),%ebp
		mov    %edi,0x000004(%ecx,%eax,1)
		cmp    $0x000032,%ebp
		jge    _036b88_jump
		movw   $0x000000,0x000034(%ecx)
		jmp    _036b88_jump

	_036bea_jump:
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		imul   $0x00000c,%eax,%eax
		lea    (%eax,%ecx,1),%edi
		mov    0x000018(%esp),%edx
		mov    (%edi),%eax
		mov    0x000004(%edi),%ebp
		sub    %edx,%eax
		mov    0x000008(%edi),%edi
		mov    %eax,0x00000c(%esp)
		mov    0x000014(%esp),%eax
		mov    0x000010(%esp),%ebx
		sub    %eax,%edi
		xor    %eax,%eax
		sub    %ebx,%ebp
		mov    0x000036(%ecx),%al
		lea    0x00001c(%esp),%ebx
		add    %eax,%eax
		lea    0x000020(%esp),%edx
		cwtl   
		call   _053308_func
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00000c(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000008(%esp)
		mov    %ebp,%edx
		imul   %ebx,%edx
		imul   %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		sub    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x00000c(%esp),%ebx
		mov    (%esp),%eax
		sar    $0x000008,%eax
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x000037(%ecx),%al
		add    %eax,%eax
		cwtl   
		lea    0x000020(%esp),%edx
		add    %ebx,%ebp
		lea    0x00001c(%esp),%ebx
		call   _053308_func
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %edi,%edx
		imul   %ebx,%edx
		imul   %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    0x00000c(%esp),%edx
		imul   %eax,%edx
		imul   0x00000c(%esp),%ebx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		add    0x000004(%esp),%edx
		mov    %edx,%eax
		sar    $0x000008,%eax
		mov    %edx,(%esp)
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		sub    %ebx,%edi
		mov    0x000038(%ecx),%al
		lea    0x00001c(%esp),%ebx
		add    %eax,%eax
		lea    0x000020(%esp),%edx
		cwtl   
		call   _053308_func
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sar    $0x000008,%edi
		mov    %edi,%edx
		imul   %ebx,%edx
		imul   %eax,%edi
		sar    $0x000008,%ebp
		imul   %ebp,%ebx
		mov    %edx,0x000004(%esp)
		mov    %ebp,%edx
		imul   %eax,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000004(%esp),%edx
		sub    %ebx,%edi
		add    0x000008(%esp),%edx
		sar    $0x000008,%edi
		mov    %edx,%ebp
		mov    0x000014(%esp),%edx
		sar    $0x000008,%ebp
		add    %edx,%edi
		je     _036d76_jump
		mov    0x00000c(%esp),%edx
		shl    $0x000008,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %ebp,%edx
		shl    $0x000008,%edx
		mov    %eax,0x00000c(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebp

	_036d76_jump:
		mov    0x00000c(%esp),%edx
		mov    0x000018(%esp),%ebx
		xor    %eax,%eax
		mov    0x000010(%esp),%edi
		mov    0x000028(%esp),%al
		add    %ebx,%edx
		add    %edi,%ebp
		mov    %edx,0x000040(%ecx,%eax,4)
		mov    %ebp,0x000044(%ecx,%eax,4)
		incb   0x00002c(%esp)
		addb   $0x000002,0x000028(%esp)

	_036d9d_jump:
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		cmp    $0x000004,%eax
		jge    _036ae7_jump
		xor    %dl,%dl
		jmp    _036ba3_jump

	_036db3_jump:
		xor    %edx,%edx
		mov    0x000004(%esi),%dx
		cmp    $0x000014,%edx
		jle    _036dfe_jump
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _036dfe_jump
		mov    0x00001c(%esi),%ecx
		mov    0x000002(%esi),%bx
		xor    %edx,%edx
		test   %bx,%bx
		jbe    _036dfe_jump

	_036ddc_jump:
		xor    %eax,%eax
		mov    %dx,%ax
		imul   $0x00006c,%eax,%eax
		lea    (%ecx,%eax,1),%ebx
		mov    0x000006(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _036df3_jump
		neg    %eax

	_036df3_jump:
		add    %ax,0x000032(%ebx)
		inc    %edx
		cmp    0x000002(%esi),%dx
		jb     _036ddc_jump

	_036dfe_jump:
		mov    0x000006(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _036e0a_jump
		neg    %eax

	_036e0a_jump:
		mov    0x000004(%esi),%dx
		add    %eax,%edx
		mov    0x000006(%esi),%bx
		mov    %dx,0x000004(%esi)
		cmp    %bx,%dx
		jbe    _036e23_jump
		movw   $0x000000,0x000004(%esi)

	_036e23_jump:
		mov    0x000004(%esi),%ax
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036e34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0d75c4_data,%ecx
		mov    0x00001c(%ecx),%edi
		xor    %ebx,%ebx
		mov    %edi,%edx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _036e56_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_036e56_jump:
		xor    %eax,%eax
		mov    0x000068(%edx),%ax
		imul   $0x00006c,%eax,%eax
		add    %edi,%eax
		lea    0x00003c(%eax),%esi
		add    $0x00006c,%edx
		mov    0x000010(%ecx),%eax
		inc    %ebx
		call   _010045_func
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _036e56_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036e80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		jmp    _036e92_jump

	_036e89_jump:
		xor    %ah,%ah
		mov    %ah,_0c33fb_data(%edx)

	_036e91_jump:
		inc    %esi

	_036e92_jump:
		movswl %si,%edx
		cmp    $0x000009,%edx
		jg     _036f08_jump
		imul   $0x0000d8,%edx,%edx
		mov    $_0c3326_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _036e89_jump
		mov    $0x000002,%cl
		mov    $0x0000bc,%edi
		mov    %cl,_0c33fa_data(%edx)
		xor    %al,%al
		mov    %di,_0c33f8_data(%edx)
		mov    %al,_0c33fb_data(%edx)
		mov    %al,_0c33fc_data(%edx)
		movw   $0x000096,_0c33f6_data(%edx)
		mov    $0x000005,%ch
		mov    %ebx,%eax
		mov    %ch,_0c33fd_data(%edx)
		call   _01f100_func
		mov    _0c33ee_data(%edx),%bx
		mov    %bx,_0c33f6_data(%edx)
		movb   $0x000020,_0c3326_data(%edx)
		jmp    _036e91_jump

	_036f08_jump:
		mov    $0x0000ff,%bh
		mov    %bh,_0c331e_data
		mov    %bh,_0c331f_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036f1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _036f43_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_036f37_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _036f9e_jump

	_036f43_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000ee,%ebx
		jne    _036f37_jump
		mov    0x000081(%edx),%bl
		test   $0x000004,%bl
		jne    _036f37_jump
		mov    %bl,%bh
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _01f7d4_func
		movw   $0x000008,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		movb   $0x000000,0x00006b(%edx)
		mov    0x000081(%edx),%cl
		mov    0x000034(%edx),%ax
		or     $0x000008,%cl
		mov    %ax,_0c3322_data
		mov    %cl,0x000081(%edx)

	_036f9e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036fa4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000ff,%ah
		mov    _0cdb18_data,%dl
		mov    %ah,_0c331e_data
		test   %dl,%dl
		jne    _036fc5_jump
		mov    %dl,_0c6971_data

	_036fc5_jump:
		xor    %bl,%bl
		mov    %bl,_0c3324_data
		call   _01efa0_func
		mov    _0c2522_data,%si
		cmp    $0x000002,%si
		jb     _037856_jump
		jbe    _037681_jump
		cmp    $0x000003,%si
		je     _037843_jump
		jmp    _037860_jump

	_036ff8_jump:
		mov    $0x000001,%ah
		mov    $_0c3326_data,%edi
		mov    _0cd830_data,%esi
		mov    %ah,_0c3324_data
		push   %edi

	_03700c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037024_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03700c_jump

	_037024_jump:
		pop    %edi
		mov    $_0c33fe_data,%edi
		mov    _0cd834_data,%esi
		push   %edi

	_037031_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037049_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037031_jump

	_037049_jump:
		pop    %edi
		mov    $_0c34d6_data,%edi
		mov    _0cd838_data,%esi
		push   %edi

	_037056_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03706e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037056_jump

	_03706e_jump:
		pop    %edi
		mov    $_0c35ae_data,%edi
		mov    _0cd83c_data,%esi
		push   %edi

	_03707b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037093_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03707b_jump

	_037093_jump:
		pop    %edi
		mov    $_0c3686_data,%edi
		mov    _0cd840_data,%esi
		push   %edi

	_0370a0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0370b8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0370a0_jump

	_0370b8_jump:
		pop    %edi
		mov    $_0c375e_data,%edi
		mov    _0cd844_data,%esi
		push   %edi

	_0370c5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0370dd_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0370c5_jump

	_0370dd_jump:
		pop    %edi
		mov    $_0c3836_data,%edi
		mov    _0cd848_data,%esi
		push   %edi

	_0370ea_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037102_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0370ea_jump

	_037102_jump:
		pop    %edi
		mov    $_0c390e_data,%edi
		mov    _0cd84c_data,%esi
		push   %edi

	_03710f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037127_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03710f_jump

	_037127_jump:
		pop    %edi
		mov    $_0c39e6_data,%edi
		mov    _0cd850_data,%esi
		push   %edi

	_037134_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03714c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037134_jump

	_03714c_jump:
		pop    %edi
		mov    $_0c3abe_data,%edi
		mov    _0cd854_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_03715e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037176_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03715e_jump

	_037176_jump:
		pop    %edi
		mov    _0cd04c_data,%edx
		mov    $_0c390e_data,%eax
		sar    $0x000010,%edx
		call   _01f380_func
		jmp    _037860_jump

	_03718f_jump:
		mov    $0x000001,%al
		mov    $_0c3326_data,%edi
		mov    _0cd858_data,%esi
		mov    %al,_0c3324_data
		push   %edi

	_0371a2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0371ba_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0371a2_jump

	_0371ba_jump:
		pop    %edi
		mov    $_0c33fe_data,%edi
		mov    _0cd85c_data,%esi
		push   %edi

	_0371c7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0371df_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0371c7_jump

	_0371df_jump:
		pop    %edi
		mov    $_0c34d6_data,%edi
		mov    _0cd860_data,%esi
		push   %edi

	_0371ec_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037204_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0371ec_jump

	_037204_jump:
		pop    %edi
		mov    $_0c35ae_data,%edi
		mov    _0cd864_data,%esi
		push   %edi

	_037211_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037229_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037211_jump

	_037229_jump:
		pop    %edi
		mov    $_0c3686_data,%edi
		mov    _0cd868_data,%esi
		push   %edi

	_037236_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03724e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037236_jump

	_03724e_jump:
		pop    %edi
		mov    $_0c375e_data,%edi
		mov    _0cd86c_data,%esi
		push   %edi

	_03725b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037273_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03725b_jump

	_037273_jump:
		pop    %edi
		mov    $_0c3836_data,%edi
		mov    _0cd870_data,%esi
		push   %edi

	_037280_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037298_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037280_jump

	_037298_jump:
		pop    %edi
		mov    $_0c390e_data,%edi
		mov    _0cd874_data,%esi
		push   %edi

	_0372a5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0372bd_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0372a5_jump

	_0372bd_jump:
		pop    %edi
		mov    $_0c39e6_data,%edi
		mov    _0cd878_data,%esi
		push   %edi

	_0372ca_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0372e2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0372ca_jump

	_0372e2_jump:
		pop    %edi
		mov    $_0c3abe_data,%edi
		mov    _0cd87c_data,%esi
		push   %edi

	_0372ef_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037307_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0372ef_jump

	_037307_jump:
		pop    %edi
		jmp    _037860_jump

	_03730d_jump:
		mov    $0x000001,%ch
		mov    $_0c3326_data,%edi
		mov    _0cd880_data,%esi
		mov    %ch,_0c3324_data
		push   %edi

	_037321_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037339_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037321_jump

	_037339_jump:
		pop    %edi
		mov    $_0c33fe_data,%edi
		mov    _0cd884_data,%esi
		push   %edi

	_037346_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03735e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037346_jump

	_03735e_jump:
		pop    %edi
		mov    $_0c34d6_data,%edi
		mov    _0cd888_data,%esi
		push   %edi

	_03736b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037383_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03736b_jump

	_037383_jump:
		pop    %edi
		mov    $_0c35ae_data,%edi
		mov    _0cd88c_data,%esi
		push   %edi

	_037390_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0373a8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037390_jump

	_0373a8_jump:
		pop    %edi
		mov    $_0c3686_data,%edi
		mov    _0cd890_data,%esi
		push   %edi

	_0373b5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0373cd_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0373b5_jump

	_0373cd_jump:
		pop    %edi
		mov    $_0c375e_data,%edi
		mov    _0cd894_data,%esi
		push   %edi

	_0373da_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0373f2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0373da_jump

	_0373f2_jump:
		pop    %edi
		mov    $_0c3836_data,%edi
		mov    _0cd898_data,%esi
		push   %edi

	_0373ff_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037417_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0373ff_jump

	_037417_jump:
		pop    %edi
		mov    $_0c390e_data,%edi
		mov    _0cd89c_data,%esi
		push   %edi

	_037424_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03743c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037424_jump

	_03743c_jump:
		pop    %edi
		mov    $_0c39e6_data,%edi
		mov    _0cd8a0_data,%esi
		push   %edi

	_037449_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037461_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037449_jump

	_037461_jump:
		pop    %edi
		mov    $_0c3abe_data,%edi
		mov    _0cd8a4_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_037473_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03748b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037473_jump

	_03748b_jump:
		pop    %edi
		mov    _0cd04c_data,%edx
		mov    $_0c39e6_data,%eax
		sar    $0x000010,%edx
		call   _01f380_func
		jmp    _037860_jump

	_0374a4_jump:
		mov    _0c2520_data,%si
		cmp    $0x000008,%si
		jb     _0374c6_jump
		jbe    _03718f_jump
		cmp    $0x000011,%si
		je     _03730d_jump
		jmp    _037860_jump

	_0374c6_jump:
		cmp    $0x000003,%si
		je     _036ff8_jump
		jmp    _037860_jump

	_0374d5_jump:
		mov    $0x000001,%cl
		mov    $_0c3326_data,%edi
		mov    _0cd8a8_data,%esi
		mov    %cl,_0c3324_data
		push   %edi

	_0374e9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037501_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0374e9_jump

	_037501_jump:
		pop    %edi
		mov    $_0c33fe_data,%edi
		mov    _0cd8ac_data,%esi
		push   %edi

	_03750e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037526_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03750e_jump

	_037526_jump:
		pop    %edi
		mov    $_0c34d6_data,%edi
		mov    _0cd8b0_data,%esi
		push   %edi

	_037533_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03754b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037533_jump

	_03754b_jump:
		pop    %edi
		mov    $_0c35ae_data,%edi
		mov    _0cd8b4_data,%esi
		push   %edi

	_037558_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037570_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037558_jump

	_037570_jump:
		pop    %edi
		mov    $_0c3686_data,%edi
		mov    _0cd8b8_data,%esi
		push   %edi

	_03757d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037595_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03757d_jump

	_037595_jump:
		pop    %edi
		mov    $_0c375e_data,%edi
		mov    _0cd8bc_data,%esi
		push   %edi

	_0375a2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0375ba_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0375a2_jump

	_0375ba_jump:
		pop    %edi
		mov    $_0c3836_data,%edi
		mov    _0cd8c0_data,%esi
		push   %edi

	_0375c7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0375df_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0375c7_jump

	_0375df_jump:
		pop    %edi
		mov    $_0c390e_data,%edi
		mov    _0cd8c4_data,%esi
		push   %edi

	_0375ec_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037604_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0375ec_jump

	_037604_jump:
		pop    %edi
		mov    $_0c39e6_data,%edi
		mov    _0cd8c8_data,%esi
		push   %edi

	_037611_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037629_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037611_jump

	_037629_jump:
		pop    %edi
		mov    $_0c3abe_data,%edi
		mov    _0cd8cc_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_03763b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037653_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03763b_jump

	_037653_jump:
		pop    %edi
		mov    _0cd04a_data,%edx
		mov    $_0c39e6_data,%eax
		sar    $0x000010,%edx
		call   _01f380_func
		mov    $0x0000ff,%ebx
		mov    _0cd04a_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01f380_func
		jmp    _037860_jump

	_037681_jump:
		mov    _0c2520_data,%dx
		cmp    $0x00000b,%dx
		je     _0374d5_jump
		jmp    _037860_jump

	_037697_jump:
		mov    $0x000001,%bh
		mov    $_0c3326_data,%edi
		mov    _0cd8d0_data,%esi
		mov    %bh,_0c3324_data
		push   %edi

	_0376ab_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0376c3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0376ab_jump

	_0376c3_jump:
		pop    %edi
		mov    $_0c33fe_data,%edi
		mov    _0cd8d4_data,%esi
		push   %edi

	_0376d0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0376e8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0376d0_jump

	_0376e8_jump:
		pop    %edi
		mov    $_0c34d6_data,%edi
		mov    _0cd8d8_data,%esi
		push   %edi

	_0376f5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03770d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0376f5_jump

	_03770d_jump:
		pop    %edi
		mov    $_0c35ae_data,%edi
		mov    _0cd8dc_data,%esi
		push   %edi

	_03771a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037732_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03771a_jump

	_037732_jump:
		pop    %edi
		mov    $_0c3686_data,%edi
		mov    _0cd8e0_data,%esi
		push   %edi

	_03773f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037757_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03773f_jump

	_037757_jump:
		pop    %edi
		mov    $_0c375e_data,%edi
		mov    _0cd8e4_data,%esi
		push   %edi

	_037764_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03777c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037764_jump

	_03777c_jump:
		pop    %edi
		mov    $_0c3836_data,%edi
		mov    _0cd8e8_data,%esi
		push   %edi

	_037789_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0377a1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _037789_jump

	_0377a1_jump:
		pop    %edi
		mov    $_0c390e_data,%edi
		mov    _0cd8ec_data,%esi
		push   %edi

	_0377ae_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0377c6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0377ae_jump

	_0377c6_jump:
		pop    %edi
		mov    $_0c39e6_data,%edi
		mov    _0cd8f0_data,%esi
		push   %edi

	_0377d3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0377eb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0377d3_jump

	_0377eb_jump:
		pop    %edi
		mov    $_0c3abe_data,%edi
		mov    _0cd8f4_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_0377fd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _037815_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0377fd_jump

	_037815_jump:
		pop    %edi
		mov    _0cd050_data,%edx
		mov    $_0c390e_data,%eax
		sar    $0x000010,%edx
		call   _01f380_func
		mov    $0x0000ff,%ebx
		mov    _0cd050_data,%edx
		mov    $_0c39e6_data,%eax
		sar    $0x000010,%edx
		call   _01f380_func
		jmp    _037860_jump

	_037843_jump:
		mov    _0c2520_data,%dx
		cmp    $0x00000b,%dx
		je     _037697_jump
		jmp    _037860_jump

	_037856_jump:
		cmp    $0x000001,%si
		je     _0374a4_jump

	_037860_jump:
		cmpb   $0x000000,_0c3324_data
		je     _037873_jump
		call   _036e80_func
		call   _036f1c_func

	_037873_jump:
		pop    %edi
		pop    %esi

	_037875_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03787c_func:
		push   %ebx
		xor    %ebx,%ebx
		movswl %dx,%edx
		mov    0x00007f(%eax),%bl
		cmp    %edx,%ebx
		jge    _037892_jump
		mov    %bl,%dl
		inc    %dl
		mov    %dl,0x00007f(%eax)
		pop    %ebx
		ret    

	_037892_jump:
		movb   $0x000000,0x00007f(%eax)
		incb   _0c331e_data
		pop    %ebx
		ret    

_0378a0_switch:
		.long   _0378cd_case
		.long   _0378d8_case
		.long   _037937_case
		.long   _037966_case
		.long   _03798f_case




_0378b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x00007d(%eax),%al
		cmp    $0x000004,%al
		ja     _0378cd_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0378a0_switch(,%eax,4)

	_0378cd_case:
		movb   $0x0000ff,_0c331e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0378d8_case:
		mov    $0x000064,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _03787c_func
		mov    _0c331e_data,%bl
		cmp    $0x000005,%ebx
		je     _037915_jump
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		cmpb   $0x000000,_0c3326_data(,%eax,8)
		jne    _037875_jump
		test   %ebx,%ebx
		jl     _037875_jump

	_037915_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _056614_func
		movb   $0x000000,0x00007d(%ecx)
		mov    $0x0000ff,%dh
		movb   $0x000000,0x00007f(%ecx)
		mov    %dh,_0c331e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037937_case:
		mov    $0x00006e,%edx
		mov    %ecx,%eax
		call   _03787c_func
		xor    %eax,%eax
		mov    _0c331e_data,%al
		cmp    $0x000007,%eax
		jne    _037875_jump
		movb   $0x000003,0x00007d(%ecx)
		mov    $0x0000ff,%al
		movb   $0x000000,0x00007f(%ecx)
		mov    %al,_0c331e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037966_case:
		mov    0x00007f(%ecx),%bl
		xor    %eax,%eax
		inc    %bl
		mov    %bl,%al
		mov    %bl,0x00007f(%ecx)
		cmp    $0x000032,%eax
		jle    _037875_jump
		movb   $0x000004,0x00007d(%ecx)
		mov    $0x000007,%bh
		movb   $0x000000,0x00007f(%ecx)
		mov    %bh,_0c331e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03798f_case:
		cmpb   $0x000000,_0c24ca_data
		sete   %al
		xor    %ah,%ah
		dec    %eax
		mov    %ax,0x000042(%ecx)
		xor    %eax,%eax
		mov    _0c331e_data,%al
		cmp    $0x000009,%eax
		jge    _037875_jump
		lea    0x000001(%eax),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0c3326_data(,%eax,8)
		je     _037875_jump
		mov    $0x000078,%edx
		mov    %ecx,%eax
		call   _03787c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0379e0_func:
		push   %edx
		mov    _0c2520_data,%dx
		mov    _0c2522_data,%ax
		cmp    $0x000002,%ax
		jb     _037a5a_jump
		jbe    _037a31_jump
		cmp    $0x000003,%ax
		je     _037a42_jump
		jmp    _037a60_jump

	_037a02_jump:
		movswl %dx,%eax
		cmp    $0x000003,%eax
		jne    _037a11_jump
		orb    $0x000001,_0c3314_data

	_037a11_jump:
		movswl %dx,%eax
		cmp    $0x000008,%eax
		jne    _037a20_jump
		orb    $0x000002,_0c3314_data

	_037a20_jump:
		movswl %dx,%eax
		cmp    $0x000011,%eax
		jne    _037a60_jump
		orb    $0x000080,_0c3314_data
		jmp    _037a60_jump

	_037a31_jump:
		movswl %dx,%eax
		cmp    $0x00000b,%eax
		jne    _037a60_jump
		orb    $0x000004,_0c3314_data
		jmp    _037a60_jump

	_037a42_jump:
		movswl %dx,%eax
		cmp    $0x00000b,%eax
		jne    _037a60_jump
		orb    $0x000001,_0c3315_data
		mov    %dx,_0c2520_data
		pop    %edx
		ret    

	_037a5a_jump:
		cmp    $0x000001,%ax
		je     _037a02_jump

	_037a60_jump:
		mov    %dx,_0c2520_data
		pop    %edx
		ret    

_037a6c_switch:
		.long   _037acc_case
		.long   _037b85_case
		.long   _037ba9_case
		.long   _037ba9_case
		.long   _037c0a_case
		.long   _037d11_case
		.long   _037ca5_case




_037a88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0c3320_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    _0c331e_data,%al
		mov    %al,(%esp)
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%al
		ja     _037d11_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_037a6c_switch(,%edx,4)

	_037acc_case:
		mov    0x00007b(%esi),%dl
		test   %dl,%dl
		je     _037b76_jump
		xor    %eax,%eax
		mov    _0c1b74_data,%edx
		mov    _0c1bb4_data,%al
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		sub    %ebx,%eax
		add    $0x000002,%eax
		test   %eax,%eax
		jge    _037af4_jump
		neg    %eax

	_037af4_jump:
		cmp    $0x000003,%eax
		jge    _037b7c_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		je     _037b36_jump
		test   %eax,%eax
		je     _037b36_jump
		cmp    $0x000003,%eax
		jne    _037b1e_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000014,%eax
		je     _037b36_jump

	_037b1e_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _037b7c_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000015,%eax
		jne    _037b7c_jump

	_037b36_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01d6e8_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		mov    $0x000022,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		movw   $0x008300,_0c25ac_data
		orb    $0x000008,_0c1bcd_data
		jmp    _037b7c_jump

	_037b76_jump:
		mov    %dl,_0c259e_data

	_037b7c_jump:
		movb   $0x000000,0x00007d(%esi)
		jmp    _037d11_case

	_037b85_case:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x0000ff,%eax
		jne    _037d11_case
		xor    %ah,%ah
		movb   $0x000001,0x00007d(%esi)
		mov    %ah,_0c331e_data
		mov    %ah,0x00007f(%esi)
		jmp    _037d11_case

	_037ba9_case:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		je     _037bca_jump
		test   %eax,%eax
		je     _037bca_jump
		cmp    $0x000003,%eax
		jne    _037bde_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000022,%eax
		jne    _037bde_jump

	_037bca_jump:
		mov    $0x000023,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func

	_037bde_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _037d11_case
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000024,%eax
		jne    _037d11_case
		movb   $0x0000ff,_0c1bb7_data
		jmp    _037d11_case

	_037c0a_case:
		xor    %edx,%edx
		mov    0x00000c(%esi),%ebx
		mov    0x00006d(%esi),%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _037c2a_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		test   %eax,%eax
		jmp    _037c4d_jump

	_037c2a_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx

	_037c4d_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _037b7c_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _037b7c_jump
		call   _0379e0_func
		movb   $0x000002,0x00007d(%esi)
		mov    $0x000005,%bh
		movb   $0x000000,0x00007f(%esi)
		mov    %bh,_0c331e_data
		jmp    _037d11_case

	_037ca5_case:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _037ccc_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000024,%eax
		jne    _037ccc_jump
		mov    $0x000025,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func

	_037ccc_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _037d11_case
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000014,%eax
		jne    _037d11_case
		mov    _0c1b74_data,%ax
		mov    %ax,_0c25ac_data
		xor    %eax,%eax
		mov    0x00007d(%esi),%al
		cmp    $0x000004,%eax
		jne    _037d11_case
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x008300,_0c25ac_data

	_037d11_case:
		mov    %esi,%eax
		mov    (%esp),%bh
		call   _0378b4_func
		cmp    _0c331e_data,%bh
		je     _037ddb_jump
		movb   $0x000001,_0c3320_data
		xor    %eax,%eax
		mov    _0c331e_data,%al
		mov    %bh,_0c331f_data
		cmp    $0x0000ff,%eax
		je     _037ddb_jump
		mov    0x000081(%ecx),%ah
		or     $0x000004,%ah
		mov    0x000024(%ecx),%esi
		mov    %ah,0x000081(%ecx)
		test   %esi,%esi
		jne    _037d63_jump
		mov    %ecx,%eax
		call   _01f7d4_func

	_037d63_jump:
		mov    0x000081(%ecx),%dl
		or     $0x000008,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%ecx)
		mov    _0c24aa_data,%edx
		mov    0x000068(%ecx),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    _0c24ac_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%ecx),%al
		add    $0x0000be,%edx
		movw   $0x000000,0x00005e(%ecx)
		sub    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    %edx,0x00002c(%ecx)
		neg    %eax
		mov    %ax,0x000036(%ecx)
		xor    %eax,%eax
		mov    $0x0000be,%edx
		mov    0x000069(%ecx),%al
		movb   $0x000000,0x00006b(%ecx)
		sub    %eax,%edx
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    (%esp),%al
		mov    %dx,0x000038(%ecx)
		mov    %al,_0c331f_data

	_037ddb_jump:
		cmpb   $0x000000,_0c3320_data
		je     _037e1d_jump
		xor    %eax,%eax
		mov    _0c331f_data,%al
		lea    0x000000(,%eax,8),%esi
		sub    %eax,%esi
		shl    $0x000002,%esi
		sub    %eax,%esi
		shl    $0x000003,%esi
		mov    _0c33f6_data(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x0000dc,%eax
		jge    _037e15_jump
		incw   _0c33f8_data(%esi)
		jmp    _037e1d_jump

	_037e15_jump:
		xor    %bl,%bl
		mov    %bl,_0c3320_data

	_037e1d_jump:
		testb  $0x000004,0x000081(%ecx)
		je     _037e5a_jump
		addw   $0x000004,0x000036(%ecx)
		mov    0x000028(%ecx),%edi
		mov    0x000034(%ecx),%eax
		add    $0x000004,%edi
		sar    $0x000010,%eax
		mov    %edi,0x000028(%ecx)
		cmp    $0x000136,%eax
		jle    _037e5a_jump
		movl   $0x000000,0x000024(%ecx)
		mov    0x000081(%ecx),%al
		movb   $0x000000,0x00006b(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)

	_037e5a_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037e64_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		test   %eax,%eax
		jne    _037efb_jump
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _037ea3_jump
		xor    %edx,%edx
		mov    $0x000001,%cl
		mov    %dx,_0c1b8c_data
		mov    %dx,_0c1b9e_data
		mov    %cl,_0c259e_data
		mov    %dx,_0c25b4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037ea3_jump:
		cmp    $0x000001,%eax
		je     _037ebd_jump
		test   %eax,%eax
		je     _037ebd_jump
		cmp    $0x000003,%eax
		jne    _037f03_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000014,%eax
		jne    _037f03_jump

	_037ebd_jump:
		mov    0x000028(%edx),%ax
		xor    %edx,%edx
		sub    $0x000002,%eax
		mov    _0c1bb4_data,%dl
		sub    %edx,%eax
		mov    _0c1b74_data,%dl
		mov    %ax,_0c25ac_data
		test   $0x000001,%dl
		je     _037ee8_jump
		orb    $0x000001,_0c25ac_data
		jmp    _037eef_jump

	_037ee8_jump:
		andb   $0x0000fe,_0c25ac_data

	_037eef_jump:
		xor    %bh,%bh
		mov    %bh,_0c259e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037efb_jump:
		xor    %ah,%ah
		mov    %ah,_0c259e_data

	_037f03_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037f10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _095b00_data,%al
		cmp    $0x000001,%eax
		jne    _037f64_jump
		mov    _0ccffc_data,%edx
		cmp    $0x0a0200,%edx
		jne    _037f42_jump
		mov    $0x0a6200,%esi
		mov    %edx,_0cd000_data
		mov    %esi,_0ccffc_data
		jmp    _037f58_jump

	_037f42_jump:
		mov    $0x0a0200,%ebx
		mov    $0x0a6200,%ecx
		mov    %ebx,_0ccffc_data
		mov    %ecx,_0cd000_data

	_037f58_jump:
		mov    _0ccffc_data,%eax
		call   _014838_func
		jmp    _037fb7_jump

	_037f64_jump:
		mov    _0cdf2c_data,%eax
		mov    %eax,_0cd000_data
		mov    _095afc_data,%eax
		mov    %eax,_0ccffc_data
		xor    %eax,%eax
		mov    _0ce81d_data,%al
		cmp    $0x000001,%eax
		jne    _037fa6_jump
		mov    $0x0000c8,%eax
		mov    $0x000140,%ecx
		mov    _0ccffc_data,%edi
		mov    _0cdf2c_data,%esi
		call   *_0cdf44_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037fa6_jump:
		mov    _0ccffc_data,%edi
		mov    _0cdf2c_data,%esi
		call   _0150c3_func

	_037fb7_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037fc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0c6b77_data
		je     _037fd2_jump
		call   _01730e_func

	_037fd2_jump:
		mov    _0ccffc_data,%edx
		cmp    $0x0a0200,%edx
		jne    _037ff3_jump
		mov    $0x0a6200,%esi
		mov    %edx,_0cd000_data
		mov    %esi,_0ccffc_data
		jmp    _038009_jump

	_037ff3_jump:
		mov    $0x0a0200,%ebx
		mov    $0x0a6200,%ecx
		mov    %ebx,_0ccffc_data
		mov    %ecx,_0cd000_data

	_038009_jump:
		mov    _0ccffc_data,%eax
		call   _014838_func
		cmpb   $0x000000,_0c6b77_data
		je     _038021_jump
		call   _0172fe_func

	_038021_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0382a8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0c6b94_data,%ebx
		movswl %dx,%edx
		mov    %ebx,(%esp)
		mov    %ebx,_0c6b84_data
		mov    _0c24e2_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		cwtl   
		sar    $0x000004,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24ec_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    %edx,0x000004(%esp)
		mov    %edx,0x00000c(%esp)
		jmp    _03831f_jump

	_0382fa_jump:
		mov    0x000004(%esp),%ecx
		mov    0x00000c(%esp),%esi
		add    $0x000040,%ecx
		add    $0x004600,%esi
		mov    %ecx,0x000004(%esp)
		mov    %esi,0x00000c(%esp)
		cmp    $0x000100,%ecx
		je     _0383b0_jump

	_03831f_jump:
		mov    0x000008(%esp),%ebx
		mov    (%esp),%edx
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%ebp
		mov    %cx,0x000010(%esp)
		add    %ebp,%edx
		mov    0x000004(%esp),%ebp
		jmp    _03835b_jump

	_038339_jump:
		mov    _0c24e2_data,%eax
		sar    $0x000010,%eax
		sub    $0x000014,%eax
		imul   $0x000006,%eax,%eax
		mov    0x000010(%esp),%esi
		add    $0x000010,%esi
		add    $0x0004b0,%edx
		mov    %si,0x000010(%esp)
		add    %eax,%ebx

	_03835b_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x0000e0,%eax
		jge    _0382fa_jump
		xor    %ecx,%ecx
		jmp    _03837d_jump

	_03836d_jump:
		mov    %edx,%edi
		call   _0149fb_func

	_038374_jump:
		add    $0x000006,%ebx
		add    $0x000004,%edx
		add    $0x000010,%ecx

	_03837d_jump:
		movswl %cx,%eax
		cmp    $0x000140,%eax
		jge    _038339_jump
		mov    (%ebx),%ax
		cwtl   
		test   %eax,%eax
		jl     _03836d_jump
		cmp    $0x0004b0,%eax
		jge    _03836d_jump
		movzbl 0x000004(%ebx),%esi
		test   %esi,%esi
		jne    _03836d_jump
		mov    _0cbd3c_data(,%eax,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _014a43_func
		jmp    _038374_jump

	_0383b0_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0383bc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,0x000008(%esp)
		movswl %bx,%eax
		mov    _0c24e2_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		imul   %ebx,%eax
		movswl %dx,%edx
		sar    $0x000004,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24ec_data,%eax
		add    %edx,%eax
		mov    _0c6b94_data,%edx
		mov    %eax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		mov    $0x000050,%esi
		sub    %edx,%eax
		xor    %edx,%edx
		div    %esi
		mov    %edx,(%esp)
		movswl %cx,%edx
		mov    $0x00000d,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ebx,%edx
		imul   %eax,%edx
		lea    0x000000(,%edx,4),%eax
		xor    %ecx,%ecx
		sub    %edx,%eax
		mov    0x00000c(%esp),%ebx
		add    %eax,%eax
		mov    %ecx,0x000010(%esp)
		add    %eax,%ebx
		mov    %ecx,0x000004(%esp)
		mov    %ebx,0x00000c(%esp)
		jmp    _038469_jump

	_038444_jump:
		mov    0x000010(%esp),%edi
		mov    0x000004(%esp),%ebp
		add    $0x000040,%edi
		add    $0x004600,%ebp
		mov    %edi,0x000010(%esp)
		mov    %ebp,0x000004(%esp)
		cmp    $0x000100,%edi
		je     _0384d7_jump

	_038469_jump:
		mov    0x00000c(%esp),%ecx
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%ebx
		xor    %esi,%esi
		mov    0x000010(%esp),%ebp
		mov    %si,0x000014(%esp)
		add    %ebx,%edx
		mov    (%esp),%ebx
		jmp    _03848d_jump

	_038487_jump:
		addw   $0x000010,0x000014(%esp)

	_03848d_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000140,%eax
		jge    _038444_jump
		mov    (%ecx),%ax
		cwtl   
		test   %eax,%eax
		jl     _0384c2_jump
		cmp    $0x0004b0,%eax
		jge    _0384c2_jump
		movzbl 0x000004(%ecx),%esi
		test   %esi,%esi
		jne    _0384c2_jump
		mov    _0cbd3c_data(,%eax,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _014a43_func

	_0384c2_jump:
		add    $0x000006,%ecx
		add    $0x000004,%ebx
		add    $0x000004,%edx
		cmp    $0x000050,%ebx
		jl     _038487_jump
		sub    $0x000050,%edx
		xor    %ebx,%ebx
		jmp    _038487_jump

	_0384d7_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0384e0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,(%esp)
		movswl %bx,%eax
		mov    %eax,%ebx
		mov    _0c24e2_data,%eax
		sar    $0x000004,%ebx
		sar    $0x000010,%eax
		imul   %eax,%ebx
		movswl %dx,%eax
		sar    $0x000004,%eax
		lea    (%eax,%ebx,1),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    %edx,0x000004(%esp)
		movswl %cx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    0x000004(%esp),%edx
		add    %eax,%eax
		mov    _0c6b94_data,%ebx
		add    %eax,%edx
		mov    (%esp),%eax
		mov    %edx,0x000004(%esp)
		sub    %ebx,%eax
		xor    %edx,%edx
		mov    $0x000050,%ebx
		div    %ebx
		xor    %esi,%esi
		mov    %esi,0x00000c(%esp)
		mov    %esi,0x000008(%esp)
		mov    %eax,%ecx
		jmp    _038585_jump

	_038561_jump:
		mov    0x00000c(%esp),%ebp
		mov    0x000008(%esp),%eax
		add    $0x000040,%ebp
		add    $0x004600,%eax
		mov    %ebp,0x00000c(%esp)
		mov    %eax,0x000008(%esp)
		cmp    $0x000100,%ebp
		je     _038602_jump

	_038585_jump:
		mov    (%esp),%edx
		mov    0x000008(%esp),%esi
		mov    0x000004(%esp),%ebx
		add    %esi,%edx
		xor    %esi,%esi
		mov    0x00000c(%esp),%ebp
		mov    %si,0x000010(%esp)
		jmp    _0385a5_jump

	_03859f_jump:
		addw   $0x000010,0x000010(%esp)

	_0385a5_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x0000e0,%eax
		jge    _038561_jump
		mov    (%ebx),%ax
		cwtl   
		test   %eax,%eax
		jl     _0385da_jump
		cmp    $0x0004b0,%eax
		jge    _0385da_jump
		movzbl 0x000004(%ebx),%esi
		test   %esi,%esi
		jne    _0385da_jump
		mov    _0cbd3c_data(,%eax,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _014a43_func

	_0385da_jump:
		mov    _0c24e2_data,%eax
		sar    $0x000010,%eax
		imul   $0x000006,%eax,%eax
		add    $0x000500,%edx
		add    $0x000010,%ecx
		add    %eax,%ebx
		cmp    $0x0000e0,%ecx
		jl     _03859f_jump
		sub    $0x004600,%edx
		xor    %ecx,%ecx
		jmp    _03859f_jump

	_038602_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03860c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %ax,0x000010(%esp)
		mov    %dx,0x000014(%esp)
		mov    %ecx,%eax
		mov    0x000010(%esp),%ecx
		mov    %edx,%edi
		and    $0x0000f0,%bl
		and    $0x0000f0,%al
		and    $0x0000f0,%cl
		and    $0x00fff0,%edi
		mov    %ebx,0x00000c(%esp)
		mov    %eax,0x000008(%esp)
		cmp    %bx,%cx
		jne    _038648_jump
		cmp    %ax,%di
		je     _0388c3_jump

	_038648_jump:
		mov    _0c6b84_data,%ebx
		sub    _0c6b94_data,%ebx
		mov    $0x000050,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		mov    $0x000050,%ebp
		mov    %edx,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		mov    0x000008(%esp),%edx
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		sub    %edx,%edi
		sub    %eax,%ecx
		mov    %di,0x00001c(%esp)
		mov    %cx,0x000018(%esp)
		mov    0x00001a(%esp),%eax
		mov    0x000016(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    %eax,%esi
		cmp    %ebp,%esi
		jl     _0386a9_jump
		sub    %ebp,%esi

	_0386a9_jump:
		test   %esi,%esi
		jge    _0386b0_jump
		add    $0x000050,%esi

	_0386b0_jump:
		cmp    $0x0000e0,%ebx
		jl     _0386be_jump
		sub    $0x0000e0,%ebx

	_0386be_jump:
		test   %ebx,%ebx
		jge    _0386c8_jump
		add    $0x0000e0,%ebx

	_0386c8_jump:
		mov    %ebx,%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0c6b94_data,%edx
		shl    $0x000004,%ebx
		add    %ebx,%edx
		add    %esi,%edx
		mov    _0c6b84_data,%eax
		mov    %edx,_0c6b84_data
		mov    %edx,%ebp
		mov    0x000016(%esp),%edx
		sar    $0x000010,%edx
		mov    %eax,%edi
		test   %edx,%edx
		jle    _03876d_jump
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _03876d_jump
		mov    _0c6b94_data,%edx
		add    $0x000500,%eax
		add    $0x004600,%edx
		cmp    %edx,%eax
		jbe    _038721_jump
		mov    $0xffffba00,%eax
		jmp    _038723_jump

	_038721_jump:
		xor    %eax,%eax

	_038723_jump:
		mov    0x000012(%esp),%ebp
		mov    0x00000e(%esp),%edx
		mov    $0x000130,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ebp
		mov    %edx,(%esp)
		lea    0x000500(%edi),%edx
		mov    %ebp,%ebx
		add    %edx,%eax
		mov    (%esp),%edx
		call   _0384e0_func
		mov    $0x0000b0,%ecx
		mov    (%esp),%edx
		mov    %ebp,%ebx
		test   %esi,%esi
		jne    _03875e_jump
		sub    $0x00004c,%edi
		jmp    _038761_jump

	_03875e_jump:
		add    $0x000004,%edi

	_038761_jump:
		mov    %edi,%eax
		call   _0383bc_func
		jmp    _0388c3_jump

	_03876d_jump:
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0387d6_jump
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0387d6_jump
		mov    _0c6b94_data,%ebx
		lea    -0x000500(%edi),%eax
		cmp    %ebx,%eax
		jae    _03879a_jump
		mov    $0x004600,%eax
		jmp    _03879c_jump

	_03879a_jump:
		xor    %eax,%eax

	_03879c_jump:
		mov    0x000012(%esp),%esi
		mov    0x00000e(%esp),%edx
		mov    $0x000130,%ecx
		sub    $0x000500,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		add    %edi,%eax
		mov    %esi,%ebx
		mov    %edx,(%esp)
		call   _0384e0_func
		mov    (%esp),%edx
		mov    %esi,%ebx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		call   _0383bc_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_0387d6_jump:
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _038835_jump
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _038835_jump
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		mov    0x00000e(%esp),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    (%esp),%ebx
		mov    %eax,0x000004(%esp)
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _0384e0_func
		mov    $0x0000b0,%ecx
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		cmp    $0x00004c,%esi
		jne    _038824_jump
		add    %esi,%edi
		jmp    _038827_jump

	_038824_jump:
		sub    $0x000004,%edi

	_038827_jump:
		mov    %edi,%eax
		call   _0383bc_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_038835_jump:
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03885a_jump
		mov    0x000012(%esp),%ebx
		mov    0x00000e(%esp),%edx
		mov    $0x0000b0,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _0383bc_func

	_03885a_jump:
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03887f_jump
		mov    0x000012(%esp),%ebx
		mov    0x00000e(%esp),%edx
		mov    $0x000130,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _0384e0_func

	_03887f_jump:
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0388a1_jump
		mov    0x000012(%esp),%ebx
		mov    0x00000e(%esp),%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _0383bc_func

	_0388a1_jump:
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0388c3_jump
		mov    0x000012(%esp),%ebx
		mov    0x00000e(%esp),%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _0384e0_func

	_0388c3_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0388cc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		xor    %edx,%edx
		mov    %edx,(%esp)
		mov    _0c94e8_data,%edx
		shr    $0x000002,%edx
		mov    _0c94e8_data,%ebx
		mov    %edx,_0d75d8_data
		mov    _0c94dc_data,%edx
		add    %ebx,%edx
		mov    _0ce85c_data,%ebp
		mov    %edx,_0d75dc_data
		lea    -0x000001(%ebx),%edx
		mov    _0ce860_data,%ah
		mov    %edx,_0d75e0_data
		test   %ah,%ah
		je     _038927_jump
		mov    $_0c6b98_data,%esi
		mov    _0cd000_data,%ecx
		call   _0139b6_func
		jmp    _03897f_jump

	_038927_jump:
		xor    %edx,%edx
		mov    %dx,0x000004(%esp)
		jmp    _038935_jump

	_038930_jump:
		incw   0x000004(%esp)

	_038935_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0x000004,%edx
		jge    _03897f_jump
		mov    _0c94e8_data,%ebx
		mov    0x000002(%esp),%edx
		shr    $0x000002,%ebx
		sar    $0x000010,%edx
		imul   %edx,%ebx
		mov    $_0d75d8_data,%ecx
		mov    (%esp),%edi
		mov    $_0c6b98_data,%esi
		mov    %ebp,%eax
		mov    _0c94e4_data,%edx
		add    %ebp,%ebp
		call   _013429_func
		cmp    $0x000010,%ebp
		jne    _038930_jump
		mov    $0x000001,%ebp
		mov    %ebp,(%esp)
		jmp    _038930_jump

	_03897f_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_038988_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    _0ce84c_data,%ebx
		mov    %ebx,0x00001c(%esp)
		mov    _0ce850_data,%ebx
		mov    %ebx,0x000014(%esp)
		mov    _0ce854_data,%ebx
		mov    %ebx,(%esp)
		mov    _0c94e4_data,%ebx
		shl    $0x000004,%ebx
		movswl %dx,%edx
		mov    %ebx,0x000004(%esp)
		mov    _0c24e2_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		cwtl   
		sar    $0x000004,%eax
		mov    _0ce85c_data,%ebp
		add    %eax,%edx
		xor    %ecx,%ecx
		lea    0x000000(,%edx,4),%eax
		mov    %ebp,0x000010(%esp)
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		add    %eax,%eax
		mov    %ecx,0x000020(%esp)
		add    %edx,%eax
		mov    $0x004600,%edx
		mov    %eax,0x000008(%esp)
		mov    0x00001c(%esp),%eax
		mov    %edx,_0d75d8_data
		mov    %edx,_0d75e0_data
		mov    %eax,0x00000c(%esp)
		xor    %edx,%edx
		mov    _0c6b94_data,%eax
		mov    %dx,0x000030(%esp)
		mov    %eax,_0d75dc_data
		jmp    _038a5e_jump

	_038a25_jump:
		mov    $_0d75d8_data,%ecx
		mov    $0x000050,%edx
		mov    0x000020(%esp),%edi
		mov    $_0c7298_data,%esi
		mov    %ebp,%eax
		call   _013ae4_func

	_038a3f_jump:
		add    %ebp,%ebp
		cmp    $0x000010,%ebp
		jne    _038a59_jump
		mov    $0x000001,%ebp
		mov    0x00001c(%esp),%edi
		add    %ebp,%edi
		mov    %ebp,0x000020(%esp)
		mov    %edi,0x00001c(%esp)

	_038a59_jump:
		incw   0x000030(%esp)

	_038a5e_jump:
		mov    0x00002e(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0x000004,%edx
		jge    _038aa8_jump
		imul   $0x004600,%edx,%ebx
		mov    _0d75dc_data,%ecx
		add    $0x004600,%ecx
		mov    _0ce860_data,%ah
		mov    %ecx,_0d75dc_data
		test   %ah,%ah
		je     _038a25_jump
		mov    $_0d75d8_data,%ecx
		mov    $0x000050,%edx
		mov    0x000020(%esp),%edi
		mov    $_0c7318_data,%esi
		mov    %ebp,%eax
		call   _014073_func
		jmp    _038a3f_jump

	_038aa8_jump:
		mov    0x000010(%esp),%eax
		mov    %eax,0x00002c(%esp)
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000028(%esp)
		mov    0x000008(%esp),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000014(%esp),%eax
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000014(%esp),%eax
		mov    %edx,%ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0c94e8_data,%ebp
		shr    $0x000002,%ebp
		imul   %ebp,%ebx
		mov    _0c94e4_data,%edi
		mov    (%esp),%edx
		imul   %edi,%edx
		mov    _0c94dc_data,%esi
		add    %ebx,%eax
		add    %esi,%eax
		add    %edx,%eax
		mov    _0c24e2_data,%ebx
		mov    %eax,0x000024(%esp)
		mov    0x000004(%esp),%eax
		sar    $0x000010,%ebx
		mov    %eax,_0d75d8_data
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    %eax,_0d75dc_data
		mov    $0x0004b0,%eax
		mov    %edi,_0d75e4_data
		mov    %eax,_0d75e0_data
		lea    0x000000(,%edi,4),%eax
		sub    %edi,%eax
		mov    %eax,_0d75e8_data
		mov    _0c24e4_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%ebx
		lea    -0x000001(%ebx),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		add    %eax,%eax
		neg    %ebp
		add    %eax,%edx
		xor    %ebx,%ebx
		mov    %edx,_0d75ec_data
		mov    _0c94e8_data,%edx
		mov    %ebx,0x000034(%esp)
		lea    (%esi,%edx,1),%eax
		mov    %edx,_0d75f4_data
		mov    %eax,_0d75f0_data
		jmp    _038bd7_jump

	_038b90_jump:
		mov    $_0d75d8_data,%ebx
		mov    0x000028(%esp),%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%edx
		mov    0x000034(%esp),%ax
		mov    $_0caa7c_data,%ecx
		shl    $0x000008,%eax
		call   _014602_func

	_038bb1_jump:
		mov    0x00002c(%esp),%ecx
		add    %ecx,%ecx
		mov    %ecx,0x00002c(%esp)
		cmp    $0x000010,%ecx
		jne    _038bd3_jump
		mov    $0x000001,%edi
		mov    0x000028(%esp),%eax
		add    %edi,%eax
		mov    %edi,0x00002c(%esp)
		mov    %eax,0x000028(%esp)

	_038bd3_jump:
		incl   0x000034(%esp)

	_038bd7_jump:
		xor    %eax,%eax
		mov    0x000034(%esp),%ax
		cmp    $0x000004,%eax
		jge    _038c4c_jump
		mov    0x00002c(%esp),%eax
		mov    0x000024(%esp),%esi
		call   _01283c_func
		mov    _0c94e8_data,%eax
		mov    _0c94dc_data,%ebx
		shr    $0x000002,%eax
		mov    _0c94e8_data,%edx
		add    %eax,%ebp
		add    %edx,%ebx
		lea    (%esi,%ebp,1),%eax
		cmp    %ebx,%eax
		jbe    _038c16_jump
		inc    %esi
		sub    %edx,%ebp
		mov    %esi,0x000024(%esp)

	_038c16_jump:
		mov    _0ce860_data,%dl
		add    %ebp,%esi
		test   %dl,%dl
		je     _038b90_jump
		mov    $_0d75d8_data,%ebx
		mov    0x000028(%esp),%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%edx
		mov    0x000034(%esp),%ax
		mov    $_0caa7c_data,%ecx
		shl    $0x000008,%eax
		call   _014665_func
		jmp    _038bb1_jump

	_038c4c_jump:
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_038c58_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		call   _038df4_func
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000064,%eax
		jne    _038c80_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000008,%al
		mov    $0x0003c2,%edx
		and    $0x0000fb,%al
		jmp    _038d04_jump

	_038c80_jump:
		cmp    $0x000050,%eax
		jne    _038c98_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000004,%al
		mov    $0x0003c2,%edx
		and    $0x0000f7,%al
		jmp    _038d04_jump

	_038c98_jump:
		cmp    $0x00003c,%eax
		jne    _038d05_jump
		mov    $0x000063,%al
		mov    $0x0003c2,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x00000c,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000ff,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000c4,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx

	_038d04_jump:
		out    %al,(%dx)

	_038d05_jump:
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000032,%eax
		jne    _038d6e_jump
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x000074,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000ff,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000fc,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)

	_038d6e_jump:
		mov    %bl,_0c7998_data
		pop    %edx
		pop    %ebx
		ret    



_038d78_func:
		push   %edx
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d75f8_data
		mov    $0x000010,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d75f9_data
		mov    $0x000011,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d75fa_data
		mov    $0x000006,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d75fc_data
		mov    $0x000007,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d75fb_data
		mov    $0x000016,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %al,_0d75fd_data
		pop    %edx
		ret    



_038df4_func:
		push   %edx
		mov    $0x0003c2,%edx
		mov    _0d75f8_data,%al
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d75f9_data,%al
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d75fa_data,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d75fc_data,%al
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d75fb_data,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d75fd_data,%al
		out    %al,(%dx)
		pop    %edx
		ret    



_038e64_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    _0c6b84_data,%ecx
		mov    %ecx,0x000004(%esp)
		mov    _0c24e2_data,%ecx
		movswl %dx,%edx
		sar    $0x000010,%ecx
		sar    $0x000004,%edx
		lea    -0x000014(%ecx),%esi
		imul   %ecx,%edx
		movswl %bx,%ebx
		mov    _0ce84c_data,%eax
		sar    $0x000004,%ebx
		mov    _0c24ec_data,%ebp
		add    %ebx,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%ebx
		mov    _0ce858_data,%eax
		sub    %edx,%ebx
		mov    %esi,0x000008(%esp)
		add    %ebx,%ebx
		mov    _095b32_data,%dl
		add    %ebx,%ebp
		test   %dl,%dl
		je     _038f6d_jump
		cmpb   $0x000000,_0ce86f_data
		je     _038f6d_jump
		mov    _0c94e4_data,%ecx
		lea    0x000000(,%esi,4),%edi
		mov    _0ce860_data,%bl
		sub    %esi,%edi
		shl    $0x000004,%ecx
		add    %edi,%edi
		test   %bl,%bl
		je     _038f5b_jump
		mov    0x00000c(%esp),%edx
		mov    _0cd000_data,%ebx
		sub    %edx,%ebx
		add    $0x000004,%ebx
		mov    $0x000050,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    (%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		add    %eax,%ebx
		mov    _0cd000_data,%esi
		shl    $0x000004,%ebx
		mov    %ebp,%eax
		add    %ebx,%esi
		add    $0x0ab000,%ebx
		add    %edx,%esi
		add    %edx,%ebx
		mov    $_0c6b98_data,%edx
		call   _012bea_func
		jmp    _038f6d_jump

	_038f5b_jump:
		mov    0x00000c(%esp),%esi
		mov    $_0c6b98_data,%edx
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   _012b4a_func

	_038f6d_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ebx
		mov    0x00000c(%esp),%esi
		mov    $_0c7298_data,%edx
		lea    0x000000(,%eax,4),%edi
		mov    _0c6b94_data,%ecx
		sub    %eax,%edi
		mov    %ebp,%eax
		add    %edi,%edi
		call   _0129c7_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_038fa0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    $_0c8b9c_data,%ebx
		xor    %eax,%eax
		movswl %ax,%ecx
		cmp    $0x000300,%ecx
		jl     _038fbb_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038fbb_jump:
		inc    %eax
		movb   $0x000000,(%edx)
		inc    %edx
		movw   $0x000000,(%ebx)
		add    $0x000002,%ebx
		movswl %ax,%ecx
		cmp    $0x000300,%ecx
		jl     _038fbb_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038fd8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0c8b9c_data,%ebx
		mov    %eax,%esi
		xor    %edx,%edx
		movswl %dx,%eax
		cmp    $0x000300,%eax
		jl     _038ff4_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038ff4_jump:
		mov    $0x000006,%cl
		inc    %esi
		xor    %eax,%eax
		add    $0x000002,%ebx
		mov    -0x000001(%esi),%al
		inc    %edx
		cwtl   
		shl    %cl,%eax
		mov    %ax,-0x000002(%ebx)
		movswl %dx,%eax
		cmp    $0x000300,%eax
		jl     _038ff4_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039018_func:
		push   %ecx
		push   %esi
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		mov    $_0c799c_data,%esi
		sub    %eax,%ecx
		mov    %ax,_0c91a0_data
		shl    %cl,%edx
		mov    $_0c799c_data,%eax
		mov    %dx,_0c1b24_data
		mov    $0x000001,%dl
		mov    $0x0000ff,%ecx
		mov    %dl,_0c1b26_data
		call   _038fa0_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		pop    %esi
		pop    %ecx
		ret    



_039070_func:
		push   %ecx
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		sub    %eax,%ecx
		shl    %cl,%edx
		mov    %dx,_0c1b24_data
		mov    $0x000002,%dl
		mov    %ax,_0c91a0_data
		mov    %dl,_0c1b26_data
		pop    %ecx
		ret    



_039098_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    _0c1b24_data,%bx
		test   %bx,%bx
		je     _039195_jump
		mov    $_0c8b9c_data,%eax
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    %ecx,%edx
		xor    %ecx,%ecx
		dec    %edi
		mov    _0c1b26_data,%cl
		mov    %di,_0c1b24_data
		cmp    $0x000001,%ecx
		jne    _039105_jump
		xor    %ebx,%ebx
		jmp    _0390f8_jump

	_0390d5_jump:
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0c91a0_data,%cl
		shl    %cl,%edi
		add    $0x000002,%eax
		mov    %edi,%ecx
		mov    -0x000002(%eax),%di
		inc    %edx
		add    %ecx,%edi
		inc    %ebx
		mov    %di,-0x000002(%eax)

	_0390f8_jump:
		movswl %bx,%ecx
		cmp    $0x000300,%ecx
		jl     _0390d5_jump
		jmp    _03913e_jump

	_039105_jump:
		cmp    $0x000002,%ecx
		jne    _03913e_jump
		xor    %ebx,%ebx
		jmp    _039113_jump

	_03910e_jump:
		add    $0x000002,%eax
		inc    %edx
		inc    %ebx

	_039113_jump:
		movswl %bx,%ecx
		cmp    $0x000300,%ecx
		jge    _03913e_jump
		movswl (%eax),%ecx
		test   %ecx,%ecx
		jle    _03910e_jump
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0c91a0_data,%cl
		shl    %cl,%edi
		mov    %edi,%ecx
		sub    %cx,(%eax)
		jmp    _03910e_jump

	_03913e_jump:
		mov    $_0c8b9c_data,%eax
		xor    %ecx,%ecx
		jmp    _039155_jump

	_039147_jump:
		inc    %esi
		movswl (%eax),%edx
		add    $0x000002,%eax
		sar    $0x000006,%edx
		inc    %ecx
		mov    %dl,-0x000001(%esi)

	_039155_jump:
		movswl %cx,%edx
		cmp    $0x000300,%edx
		jl     _039147_jump
		mov    $_0c799c_data,%esi
		mov    $0x0000ff,%ecx
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		cmpw   $0x000000,_0c1b24_data
		jne    _039195_jump
		orb    $0x000040,_0c1b26_data

	_039195_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0391a0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		cwtl   
		call   _039070_func
		mov    _0c1b24_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _0391d5_jump

	_0391b9_jump:
		call   _01730e_func
		call   _0172fe_func
		mov    $_0c799c_data,%edx
		mov    %ecx,%eax
		inc    %ebx
		call   _039098_func
		cmp    %si,%bx
		jl     _0391b9_jump

	_0391d5_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0391dc_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    _0c24aa_data,%al
		je     _039252_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %al,_0c24aa_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7c9c_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c799c_data,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _038fd8_func
		xor    %eax,%eax
		mov    _0c1b26_data,%al
		cmp    $0x000042,%eax
		je     _039252_jump
		mov    $0x0000ff,%ecx
		mov    %edi,%esi
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_039252_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

_039258_switch:
		.long   _0392cf_case
		.long   _03932e_case
		.long   _039336_case
		.long   _03933e_case
		.long   _039346_case
		.long   _03934e_case
		.long   _039359_case
		.long   _039364_case
		.long   _03936f_case
		.long   _03937a_case
		.long   _039385_case
		.long   _039390_case




_039288_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpb   $0x000000,_0c24a9_data
		je     _039444_jump
		mov    _0c23c0_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0c1b34_data,%edi
		shl    $0x000002,%eax
		add    %edi,%eax
		mov    _0c248a_data,%di
		xor    %esi,%esi
		test   %di,%di
		jle    _039444_jump
		jmp    _03931a_jump

	_0392cf_case:
		mov    $0x000001,%dh
		xor    %bl,%bl
		xor    %dl,%dl

	_0392d5_jump:
		test   %dl,%dl
		jbe    _0393b2_jump
		cmp    $0x000001,%dl
		je     _039403_jump

	_0392e6_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _0391dc_func

	_0392f1_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0c23c0_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edi
		add    %edi,%eax
		cmp    _0c248a_data,%si
		jge    _039444_jump

	_03931a_jump:
		xor    %edi,%edi
		mov    0x000060(%eax),%di
		cmp    $0x00009e,%edi
		je     _03939b_jump
		jmp    _0392f1_jump

	_03932e_case:
		mov    $0x000002,%dh
		xor    %bl,%bl
		xor    %dl,%dl
		jmp    _0392d5_jump

	_039336_case:
		mov    $0x000002,%dh
		mov    $0x000001,%bl
		xor    %dl,%dl
		jmp    _0392d5_jump

	_03933e_case:
		xor    %dh,%dh
		mov    $0x000001,%bl
		xor    %dl,%dl
		jmp    _0392d5_jump

	_039346_case:
		xor    %dh,%dh
		mov    $0x000002,%bl
		xor    %dl,%dl
		jmp    _0392d5_jump

	_03934e_case:
		mov    $0x000001,%dh
		mov    $0x000002,%bl
		xor    %dl,%dl
		jmp    _0392d5_jump

	_039359_case:
		mov    $0x000001,%bh
		xor    %cl,%cl
		mov    %bh,%dl
		jmp    _0392d5_jump

	_039364_case:
		mov    $0x000002,%bh
		mov    $0x000001,%dl
		xor    %cl,%cl
		jmp    _0392d5_jump

	_03936f_case:
		mov    $0x000001,%cl
		mov    $0x000002,%bh
		mov    %cl,%dl
		jmp    _0392d5_jump

	_03937a_case:
		mov    $0x000001,%cl
		xor    %bh,%bh
		mov    %cl,%dl
		jmp    _0392d5_jump

	_039385_case:
		mov    $0x000002,%cl
		mov    $0x000001,%dl
		xor    %bh,%bh
		jmp    _0392d5_jump

	_039390_case:
		mov    $0x000001,%bh
		mov    $0x000002,%cl
		mov    %bh,%dl
		jmp    _0392d5_jump

	_03939b_jump:
		mov    0x00006c(%eax),%ch
		cmp    $0x00000b,%ch
		ja     _0392d5_jump
		movzbl %ch,%edi
		jmp    *%cs:_039258_switch(,%edi,4)

	_0393b2_jump:
		movzbw _0c1bb4_data,%di
		mov    %edi,0x000008(%esp)
		mov    _0c1b74_data,%di
		add    0x000008(%esp),%edi
		mov    %edi,0x000004(%esp)
		movzbw 0x000068(%eax),%di
		mov    0x000028(%eax),%ax
		add    %edi,%eax
		mov    0x000004(%esp),%edi
		cmp    %di,%ax
		jge    _0393ea_jump
		mov    %dh,0x00000c(%esp)
		jmp    _0392e6_jump

	_0393ea_jump:
		jle    _0393f5_jump
		mov    %bl,0x00000c(%esp)
		jmp    _0392e6_jump

	_0393f5_jump:
		mov    _0c24aa_data,%al
		mov    %al,0x00000c(%esp)
		jmp    _0392e6_jump

	_039403_jump:
		movzbw _0c1bb5_data,%di
		mov    %edi,0x000008(%esp)
		mov    _0c1b78_data,%di
		add    0x000008(%esp),%edi
		mov    %edi,(%esp)
		movzbw 0x000069(%eax),%di
		mov    0x00002c(%eax),%ax
		add    %edi,%eax
		mov    (%esp),%edi
		cmp    %di,%ax
		jge    _039439_jump
		mov    %bh,0x00000c(%esp)
		jmp    _0392e6_jump

	_039439_jump:
		jle    _0393f5_jump
		mov    %cl,0x00000c(%esp)
		jmp    _0392e6_jump

	_039444_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039450_func:
		push   %edx
		xor    %edx,%edx
		mov    _0c24aa_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000008,%eax
		mov    $_0c799c_data,%edx
		add    $_0c7c9c_data,%eax
		call   _039098_func
		pop    %edx
		ret    



_039478_func:
		push   %edx
		xor    %edx,%edx
		mov    _0c24aa_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7c9c_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _039018_func
		pop    %edx
		ret    



_0394a0_func:
		push   %edx
		xor    %edx,%edx
		mov    _0c24aa_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7c9c_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _039070_func
		pop    %edx
		ret    



_0394c8_func:
		push   %edx
		xor    %edx,%edx
		mov    _0c24aa_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7c9c_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _0391a0_func
		pop    %edx
		ret    



_0394f0_func:
		push   %ecx
		push   %esi
		push   %edi
		call   _01730e_func
		movzbl _095b00_data,%esi
		cmp    $0x000001,%esi
		jne    _03952d_jump
		call   _037f10_func
		mov    $0x003e80,%ecx
		mov    _0cd000_data,%edi
		call   _012783_func
		mov    $0x003e80,%ecx
		mov    _0ccffc_data,%edi
		call   _012783_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_03952d_jump:
		mov    _095afc_data,%esi
		mov    _0cdf2c_data,%edi
		call   _015277_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039544_func:
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		xor    %edx,%edx

	_03954d_jump:
		xor    %eax,%eax
		mov    _095b00_data,%al
		cmp    $0x000001,%eax
		jne    _03957f_jump
		call   _01730e_func
		call   _037f10_func
		call   _0172fe_func
		cmpb   $0x000000,_0c6b76_data
		je     _039578_jump
		call   _01735b_func
		mov    %eax,%edx

	_039578_jump:
		call   _039450_func
		jmp    _0395a3_jump

	_03957f_jump:
		call   _01730e_func
		call   _0172fe_func
		cmpb   $0x000000,_0c6b76_data
		je     _039599_jump
		call   _01735b_func
		mov    %eax,%edx

	_039599_jump:
		call   _039450_func
		call   _037f10_func

	_0395a3_jump:
		mov    %edx,%eax
		call   *(%esp)
		cwtl   
		test   %eax,%eax
		je     _03954d_jump
		add    $0x000004,%esp
		pop    %edx
		ret    



_0396c0_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $0x000300,%ecx
		mov    $_0c7c9c_data,%esi
		mov    _0c24aa_data,%al
		mov    $_0c91a4_data,%edi
		mov    %al,_0c91a2_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c7c9c_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c799c_data,%edi
		xor    %ah,%ah
		mov    %edx,%esi
		mov    %ah,_0c24aa_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_039734_jump:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000300,%ecx
		mov    $_0c91a4_data,%esi
		mov    _0c91a2_data,%al
		mov    $_0c7c9c_data,%edi
		mov    %al,_0c24aa_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039764_func:
		push   %edx
		mov    _0c9504_data,%eax
		mov    %eax,_0caa64_data
		mov    _0c9508_data,%eax
		mov    %eax,_0caa68_data
		mov    _0c950c_data,%eax
		mov    %eax,_0caa6c_data
		xor    %eax,%eax
		mov    _0cd110_data,%al
		mov    _0c9510_data(,%eax,4),%edx
		mov    %edx,_0c9504_data
		mov    _0c952c_data(,%eax,4),%edx
		mov    _0c9548_data(,%eax,4),%eax
		mov    %edx,_0c9508_data
		mov    %eax,_0c950c_data
		pop    %edx
		ret    



_0397b4_func:
		mov    _0caa64_data,%eax
		mov    %eax,_0c9504_data
		mov    _0caa68_data,%eax
		mov    %eax,_0c9508_data
		mov    _0caa6c_data,%eax
		mov    %eax,_0c950c_data
		ret    



_0397d4_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x00fa00,%ecx
		mov    _0c9504_data,%esi
		mov    _0cdf2c_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0398d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %ah,%ah
		mov    %ah,_0c24aa_data
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _039900_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		je     _03993c_jump

	_039900_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _03991a_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		je     _03993c_jump

	_03991a_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _039c93_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _039c93_jump

	_03993c_jump:
		xor    %ecx,%ecx
		mov    $0x00003f,%esi
		mov    $0x000003,%edi
		mov    $0x000004,%ebp
		jmp    _039a34_jump

	_039952_jump:
		xor    %edx,%edx
		mov    _0c7c9e_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03996e_jump
		mov    %ebx,%eax

	_03996e_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x001e02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9c_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03999d_jump
		mov    %ebx,%eax

	_03999d_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9d_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _0399cc_jump
		mov    %ebx,%eax

	_0399cc_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9e_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _0399fd_jump
		mov    %ebx,%eax

	_0399fd_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7c99_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7c9a_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7c9b_data(%ecx)
		cmp    $0x000300,%ecx
		je     _039c39_jump

	_039a34_jump:
		mov    _0c919c_data,%eax
		mov    _0c7c9c_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0c7c9d_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0c7c9e_data(%ecx),%dl
		mov    %dl,0x002d02(%ecx,%eax,1)
		xor    %edx,%edx
		mov    _0c7c9c_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039a82_jump
		mov    %ebx,%eax

	_039a82_jump:
		mov    _0c919c_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9d_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039aad_jump
		mov    %ebx,%eax

	_039aad_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9e_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039ad8_jump
		mov    %ebx,%eax

	_039ad8_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x000002(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9c_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039afe_jump
		mov    %ebx,%eax

	_039afe_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x000f00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9d_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039b27_jump
		mov    %ebx,%eax

	_039b27_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x000f01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9e_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039b50_jump
		mov    %ebx,%eax

	_039b50_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x000f02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9c_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039b7e_jump
		mov    %ebx,%eax

	_039b7e_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x001500(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9d_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039bac_jump
		mov    %ebx,%eax

	_039bac_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x001501(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9e_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039bd5_jump
		mov    %ebx,%eax

	_039bd5_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x001502(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9c_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039bfe_jump
		mov    %ebx,%eax

	_039bfe_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x001e00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9d_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039c27_jump
		mov    %ebx,%eax

	_039c27_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x001e01(%ecx,%edx,1)
		jmp    _039952_jump

	_039c39_jump:
		mov    $0x000005,%edx
		xor    %eax,%eax
		call   _039ed4_func
		mov    $0x000007,%edx
		mov    $0x000005,%eax
		call   _039ed4_func
		mov    $0x00000a,%edx
		mov    $0x000007,%eax
		call   _039ed4_func
		mov    $0x00000e,%edx
		mov    $0x00000a,%eax
		call   _039ed4_func
		xor    %edx,%edx
		mov    $0x0000c8,%eax
		mov    %dx,_0d75c8_data
		call   _061dd0_func
		inc    %eax
		mov    %ax,_0d75ca_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039c93_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _039ecc_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _039ecc_jump
		xor    %ecx,%ecx
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_039cc1_jump:
		mov    _0c919c_data,%eax
		mov    _0c7c9c_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0c7c9d_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0c7c9e_data(%ecx),%dl
		xor    %ebx,%ebx
		mov    %dl,0x002d02(%ecx,%eax,1)
		mov    %esi,%eax
		mov    _0c7c9c_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _039cfd_jump
		mov    %ebx,%eax

	_039cfd_jump:
		mov    _0c919c_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9d_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039d22_jump
		mov    %ebx,%eax

	_039d22_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9e_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039d48_jump
		mov    %ebx,%eax

	_039d48_jump:
		mov    _0c919c_data,%edx
		xor    %ebx,%ebx
		mov    %al,0x000002(%ecx,%edx,1)
		mov    %esi,%eax
		mov    _0c7c9c_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _039d62_jump
		mov    %ebx,%eax

	_039d62_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9d_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039d8b_jump
		mov    %ebx,%eax

	_039d8b_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9e_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _039db7_jump
		mov    %ebx,%eax

	_039db7_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7c99_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7c9a_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7c9b_data(%ecx)
		cmp    $0x0002fd,%ecx
		jne    _039cc1_jump
		mov    $0x00000e,%edx
		xor    %eax,%eax
		mov    $0x000180,%ecx
		call   _039ed4_func
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_039e09_jump:
		xor    %edx,%edx
		mov    _0c7c9c_data(%ecx),%dl
		imul   $0x000054,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039e25_jump
		mov    %ebx,%eax

	_039e25_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x001b00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9d_data(%ecx),%dl
		imul   $0x00003e,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _039e4e_jump
		mov    %ebx,%eax

	_039e4e_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x001b01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c9e_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _039e7a_jump
		mov    %ebx,%eax

	_039e7a_jump:
		mov    _0c919c_data,%edx
		mov    %al,0x001aff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7c99_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7c9a_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7c9b_data(%ecx)
		cmp    $0x00020d,%ecx
		jne    _039e09_jump
		mov    $0x000009,%edx
		xor    %eax,%eax
		call   _039ed4_func
		mov    $0x00000e,%edx
		mov    $0x000009,%eax
		call   _039ed4_func

	_039ecc_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039ed4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000018(%esp)
		inc    %eax
		mov    %ax,0x000014(%esp)
		cmp    %dx,%ax
		jge    _03a076_jump
		xor    %esi,%esi
		mov    %si,0x00001c(%esp)
		jmp    _03a047_jump

	_039f01_jump:
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000300,%eax,%edi
		mov    _0c919c_data,%edx
		lea    (%ecx,%ecx,2),%ecx
		lea    (%edx,%edi,1),%ebx
		mov    (%ecx,%ebx,1),%bl
		mov    0x000012(%esp),%ebp
		mov    0x000016(%esp),%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		mov    %ebp,(%esp)
		mov    %esi,%ebp
		sub    (%esp),%ebp
		and    $0x0000ff,%ebx
		mov    %ebp,0x000004(%esp)
		imul   %ebx,%ebp
		mov    %ebp,0x000008(%esp)
		imul   $0x000300,%esi,%ebp
		add    %ebp,%edx
		mov    (%ecx,%edx,1),%dl
		mov    (%esp),%ebx
		and    $0x0000ff,%edx
		sub    %eax,%ebx
		imul   %ebx,%edx
		mov    %ebx,0x000010(%esp)
		add    0x000008(%esp),%edx
		sub    %eax,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    (%esp),%edx
		cmp    %ebx,%eax
		jle    _039f80_jump
		mov    %ebx,%eax

	_039f80_jump:
		mov    %eax,0x000008(%esp)
		imul   $0x000300,%edx,%eax
		mov    _0c919c_data,%edx
		mov    %eax,0x00000c(%esp)
		add    %edx,%eax
		mov    0x000008(%esp),%bl
		mov    %bl,(%ecx,%eax,1)
		lea    (%edx,%edi,1),%eax
		mov    0x000001(%ecx,%eax,1),%al
		mov    0x000004(%esp),%ebx
		and    $0x0000ff,%eax
		imul   %eax,%ebx
		add    %ebp,%edx
		mov    0x000001(%ecx,%edx,1),%al
		mov    0x000010(%esp),%edx
		and    $0x0000ff,%eax
		imul   %eax,%edx
		add    %ebx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		cmp    %ebx,%eax
		jle    _039fda_jump
		mov    %ebx,%eax

	_039fda_jump:
		mov    _0c919c_data,%edx
		mov    %eax,0x000008(%esp)
		mov    0x00000c(%esp),%eax
		add    %edx,%eax
		mov    0x000008(%esp),%bl
		mov    %bl,0x000001(%ecx,%eax,1)
		lea    (%edx,%edi,1),%eax
		mov    0x000002(%ecx,%eax,1),%al
		mov    0x000004(%esp),%ebx
		and    $0x0000ff,%eax
		imul   %eax,%ebx
		lea    (%edx,%ebp,1),%eax
		xor    %edx,%edx
		mov    0x000010(%esp),%edi
		mov    0x000002(%ecx,%eax,1),%dl
		imul   %edi,%edx
		add    %ebx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		xor    %ebx,%ebx
		mov    0x00000c(%esp),%ebp
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    0x00001c(%esp),%edi
		cmp    %ebx,%eax
		jle    _03a035_jump
		mov    %ebx,%eax

	_03a035_jump:
		mov    _0c919c_data,%edx
		inc    %edi
		add    %ebp,%edx
		mov    %di,0x00001c(%esp)
		mov    %al,0x000002(%ecx,%edx,1)

	_03a047_jump:
		mov    0x00001a(%esp),%ecx
		sar    $0x000010,%ecx
		cmp    $0x000100,%ecx
		jl     _039f01_jump
		mov    0x000014(%esp),%ebx
		inc    %ebx
		mov    0x000018(%esp),%ecx
		mov    %bx,0x000014(%esp)
		cmp    %cx,%bx
		jge    _03a076_jump
		xor    %esi,%esi
		mov    %si,0x00001c(%esp)
		jmp    _03a047_jump

	_03a076_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03a080_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0d75c8_data,%bx
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _03a106_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _03a106_jump
		cmpb   $0x000000,_0c24ca_data
		je     _03a0e9_jump
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c919c_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0d75c8_data,%bx
		inc    %ebx
		jmp    _03a0f3_jump

	_03a0e9_jump:
		test   %bx,%bx
		jne    _03a0f3_jump
		mov    $0x000001,%ebx

	_03a0f3_jump:
		movswl %bx,%eax
		cmp    $0x00000f,%eax
		jne    _03a222_jump
		xor    %ebx,%ebx
		jmp    _03a222_jump

	_03a106_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _03a120_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		je     _03a15c_jump

	_03a120_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _03a13a_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		je     _03a15c_jump

	_03a13a_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _03a222_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _03a222_jump

	_03a15c_jump:
		testb  $0x000040,_0c1b26_data
		je     _03a222_jump
		mov    _0c4764_data,%eax
		mov    _0d75c8_data,%esi
		mov    %eax,%edx
		sar    $0x000010,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		je     _03a18b_jump
		test   %bx,%bx
		je     _03a222_jump

	_03a18b_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c919c_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		mov    %bx,_0d75c8_data
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0d75c8_data,%bx
		movswl %bx,%eax
		test   %eax,%eax
		jne    _03a1db_jump
		mov    $0x0000c3,%eax
		call   _068d70_func

	_03a1db_jump:
		mov    _0c24ca_data,%dl
		mov    _0d75c8_data,%bx
		test   %dl,%dl
		jne    _03a1ef_jump
		inc    %ebx
		jmp    _03a1f9_jump

	_03a1ef_jump:
		test   %bx,%bx
		jne    _03a1f9_jump
		mov    $0x000001,%ebx

	_03a1f9_jump:
		movswl %bx,%eax
		cmp    $0x00000f,%eax
		jne    _03a222_jump
		xor    %ebx,%ebx
		mov    $0x000190,%eax
		mov    %bx,_0d75c8_data
		call   _061dd0_func
		inc    %eax
		mov    _0d75c8_data,%bx
		mov    %ax,_0d75ca_data

	_03a222_jump:
		mov    %bx,_0d75c8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a230_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %al,%cl
		xor    %eax,%eax
		mov    _095b00_data,%al
		cmp    $0x0000ff,%eax
		jne    _03a250_jump
		call   _0148da_func
		call   _038d78_func

	_03a250_jump:
		xor    %eax,%eax
		mov    _095b00_data,%al
		cmp    $0x000001,%eax
		je     _03a34b_jump
		call   _014996_func
		mov    $0x010000,%ebx
		mov    $_0169ce_func,%esi
		mov    $_016b54_func,%edi
		mov    _095afc_data,%eax
		xor    %edx,%edx
		mov    $_016ceb_func,%ebp
		call   _079cd0_func
		xor    %eax,%eax
		mov    $_016867_func,%edx
		mov    %cl,%al
		mov    $_01685b_func,%ebx
		call   _038c58_func
		mov    $0x000001,%ah
		mov    $_0169da_func,%ecx
		mov    %edx,_0cdf48_data
		mov    %ebx,_0cdf4c_data
		mov    %esi,_0cdf54_data
		mov    %edi,_0cdf58_data
		mov    %ebp,_0cdf5c_data
		mov    $_012cb4_func,%edx
		mov    $_012d15_func,%ebx
		mov    $_012d85_func,%esi
		mov    $_012e02_func,%edi
		mov    $_012eb7_func,%ebp
		mov    %ah,_095b00_data
		mov    %ecx,_0cdf50_data
		mov    $_012ce4_func,%eax
		mov    $_012d45_func,%ecx
		mov    %edx,_0cdf64_data
		mov    %ebx,_0cdf68_data
		mov    %esi,_0cdf70_data
		mov    %edi,_0cdf74_data
		mov    %ebp,_0cdf78_data
		mov    $_013064_func,%edx
		mov    $_012f33_func,%ebx
		mov    $_012dd2_func,%esi
		mov    %eax,_0cdf60_data
		mov    %ecx,_0cdf6c_data
		mov    $_012f8a_func,%eax
		mov    $_012e7e_func,%ecx
		mov    %edx,_0cdf80_data
		mov    %ebx,_0cdf84_data
		mov    %esi,_0cdf8c_data
		mov    %eax,_0cdf7c_data
		mov    %ecx,_0cdf88_data

	_03a34b_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a354_func:
		call   _014acd_func
		movb   $0x0000ff,_095b00_data
		ret    



_03a364_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %al,%cl
		xor    %eax,%eax
		mov    _095b00_data,%al
		cmp    $0x0000ff,%eax
		jne    _03a384_jump
		call   _0148da_func
		call   _038d78_func

	_03a384_jump:
		xor    %eax,%eax
		mov    _095b00_data,%al
		test   %eax,%eax
		je     _03a499_jump
		call   _01493d_func
		mov    $0x00fa00,%ebx
		mov    _0cdf2c_data,%eax
		xor    %edx,%edx
		mov    $_016f71_func,%esi
		call   _079cd0_func
		mov    $0x00fa00,%ebx
		mov    _095afc_data,%eax
		xor    %edx,%edx
		mov    $_01705f_func,%edi
		call   _079cd0_func
		mov    _095afc_data,%eax
		mov    $_0170fe_jump,%ebp
		call   _014838_func
		xor    %eax,%eax
		mov    $_016e99_jump,%edx
		mov    %cl,%al
		mov    $_016e8d_func,%ebx
		call   _038c58_func
		mov    $_016f7d_jump,%ecx
		mov    %edx,_0cdf48_data
		mov    %ebx,_0cdf4c_data
		mov    %esi,_0cdf54_data
		mov    %edi,_0cdf58_data
		mov    %ebp,_0cdf5c_data
		xor    %ah,%ah
		mov    $_015b24_func,%edx
		mov    $_015b54_func,%ebx
		mov    $_015bc0_func,%esi
		mov    $_015c39_func,%edi
		mov    $_015cc3_func,%ebp
		mov    %ah,_095b00_data
		mov    %ecx,_0cdf50_data
		mov    $_015aed_func,%eax
		mov    $_015b84_func,%ecx
		mov    %edx,_0cdf64_data
		mov    %ebx,_0cdf68_data
		mov    %esi,_0cdf70_data
		mov    %edi,_0cdf74_data
		mov    %ebp,_0cdf78_data
		mov    $_015dd8_func,%edx
		mov    $_015d14_func,%ebx
		mov    $_015c09_func,%esi
		mov    %eax,_0cdf60_data
		mov    %ecx,_0cdf6c_data
		mov    $_015d61_func,%eax
		mov    $_015c8a_func,%ecx
		mov    %edx,_0cdf80_data
		mov    %ebx,_0cdf84_data
		mov    %esi,_0cdf8c_data
		mov    %eax,_0cdf7c_data
		mov    %ecx,_0cdf88_data

	_03a499_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a4a0_func:
		test   %dl,%dl
		je     _03a4ab_jump
		mov    $0x00004d,%edx
		jmp    _03a4b0_jump

	_03a4ab_jump:
		mov    $0x0000ef,%edx

	_03a4b0_jump:
		mov    %dx,0x000060(%eax)
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		mov    _0930a8_data(,%edx,2),%dx
		mov    %dx,0x00005c(%eax)
		ret    



_03a4c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c51ce_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _03a506_jump
		mov    %edx,%eax
		push   $0xffffffc1
		shl    $0x000005,%eax
		mov    $0xffffffcd,%ecx
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01d0b8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a506_jump:
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%ax
		mov    %ax,0x000040(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a51c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		cmpb   $0x000000,0x00007f(%eax)
		je     _03a52a_jump
		decb   0x00007f(%ebx)

	_03a52a_jump:
		mov    0x000081(%ebx),%dh
		xor    %eax,%eax
		shl    $0x000004,%dh
		mov    0x000060(%ebx),%ax
		shr    $0x000007,%dh
		cmp    $0x0000ef,%eax
		jne    _03a54f_jump
		mov    %ebx,%eax
		call   _01dea4_func
		jmp    _03a556_jump

	_03a54f_jump:
		mov    %ebx,%eax
		call   _03a4c8_func

	_03a556_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    %dh,%dl
		mov    %eax,%ecx
		xor    %eax,%eax
		shl    $0x000008,%ecx
		mov    0x00006c(%ebx),%al
		and    $0x000001,%dl
		add    %ecx,%eax
		shl    $0x000003,%dl
		cmp    $0x000009,%eax
		jb     _03a7f8_jump
		jbe    _03a6ec_jump
		cmp    $0x000010,%eax
		jb     _03a7e6_jump
		jbe    _03a5fe_jump
		cmp    $0x000013,%eax
		jb     _03a7de_jump
		jbe    _03a61c_jump
		cmp    $0x000014,%eax
		jbe    _03a5e0_jump
		cmp    $0x000200,%eax
		je     _03a79c_jump
		jmp    _03a856_jump

	_03a5b1_jump:
		movw   $0x00fff8,0x000042(%ebx)
		movw   $0x000000,0x000040(%ebx)
		jmp    _03a856_jump

	_03a5c2_jump:
		cmpb   $0x000000,_0c1f02_data
		je     _03a856_jump
		mov    $0x00000f,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		jmp    _03a856_jump

	_03a5e0_jump:
		cmpb   $0x000000,_0c1f02_data
		je     _03a856_jump
		mov    $0x000012,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		jmp    _03a856_jump

	_03a5fe_jump:
		cmpb   $0x000000,_0c1f02_data
		jne    _03a856_jump
		mov    $0x000011,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		jmp    _03a856_jump

	_03a61c_jump:
		cmpb   $0x000000,_0c1f02_data
		jne    _03a856_jump
		mov    $0x000014,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		jmp    _03a856_jump

	_03a63a_jump:
		mov    0x000081(%ebx),%al
		and    $0x0000f7,%al
		mov    %al,%ah
		or     %dl,%ah
		mov    %ah,0x000081(%ebx)
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _03a670_jump
		xor    %eax,%eax
		mov    0x00006b(%ebx),%al
		test   %eax,%eax
		jmp    _03a69a_jump

	_03a670_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ebx),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx

	_03a69a_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _03a856_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _03a856_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _03a4a0_func
		movw   $0x000000,0x000040(%ebx)
		jmp    _03a856_jump

	_03a6ec_jump:
		mov    0x000081(%ebx),%cl
		xor    %eax,%eax
		and    $0x0000f7,%cl
		mov    0x00006d(%ebx),%al
		mov    %cl,0x000081(%ebx)
		mov    %cl,%ch
		shl    $0x000002,%eax
		or     %dl,%ch
		mov    0x00000c(%ebx),%edx
		add    %eax,%edx
		mov    %ch,0x000081(%ebx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _03a729_jump
		xor    %eax,%eax
		mov    0x00006b(%ebx),%al
		test   %eax,%eax
		jmp    _03a74c_jump

	_03a729_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ebx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx

	_03a74c_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _03a856_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _03a856_jump
		mov    %ebx,%eax
		call   _04aad8_func
		movw   $0x00fffd,0x000042(%ebx)
		jmp    _03a856_jump

	_03a79c_jump:
		mov    0x000081(%ebx),%dh
		and    $0x0000f7,%dh
		mov    %dh,%cl
		or     %dl,%cl
		mov    %ebx,%eax
		mov    %cl,0x000081(%ebx)
		call   _04aad8_func
		jmp    _03a856_jump

	_03a7bb_jump:
		mov    0x000081(%ebx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dh
		or     %dl,%dh
		mov    %dh,0x000081(%ebx)
		jmp    _03a856_jump

	_03a7d3_jump:
		movw   $0x000064,0x000056(%ebx)
		jmp    _03a856_jump

	_03a7de_jump:
		cmp    $0x000011,%eax
		jmp    _03a850_jump

	_03a7e6_jump:
		cmp    $0x00000b,%eax
		jb     _03a7bb_jump
		jbe    _03a5e0_jump
		cmp    $0x00000d,%eax
		je     _03a841_jump
		jmp    _03a856_jump

	_03a7f8_jump:
		cmp    $0x000003,%eax
		jb     _03a820_jump
		jbe    _03a5b1_jump
		cmp    $0x000006,%eax
		jb     _03a819_jump
		jbe    _03a63a_jump
		cmp    $0x000008,%eax
		je     _03a5e0_jump
		jmp    _03a856_jump

	_03a819_jump:
		cmp    $0x000005,%eax
		je     _03a841_jump
		jmp    _03a856_jump

	_03a820_jump:
		cmp    $0x000001,%eax
		jb     _03a84e_jump
		jbe    _03a7d3_jump
		mov    %dh,%al
		mov    0x000081(%ebx),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		mov    %ch,%ah
		or     %al,%ah
		mov    %ah,0x000081(%ebx)

	_03a841_jump:
		mov    %ebx,%eax
		movb   $0x000032,0x00007f(%ebx)
		call   _03abbc_func
		jmp    _03a856_jump

	_03a84e_jump:
		test   %eax,%eax

	_03a850_jump:
		je     _03a5c2_jump

	_03a856_jump:
		mov    0x000056(%ebx),%dx
		test   %dx,%dx
		je     _03a866_jump
		mov    %edx,%ecx
		dec    %ecx
		mov    %cx,0x000056(%ebx)

	_03a866_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a86c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    (%ecx),%ecx
		mov    0x00006c(%eax),%dl
		testb  $0x000004,0x000007(%ecx,%edx,8)
		je     _03a8e6_jump
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		cmp    $0x00004d,%edx
		jne    _03a899_jump
		xor    %ebx,%ebx
		jmp    _03a89e_jump

	_03a899_jump:
		mov    $0x000005,%ebx

	_03a89e_jump:
		xor    %ecx,%ecx
		mov    0x00006a(%eax),%cl
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ecx
		add    %ecx,%edx
		mov    0x000008(%edx),%cx
		and    $0x00003f,%ch
		and    $0x00ffff,%ecx
		mov    0x00006b(%eax),%al
		and    $0x0000ff,%eax
		imul   %eax,%ecx
		shl    $0x000002,%ecx
		mov    (%edx),%eax
		movswl %bx,%edx
		add    %ecx,%eax
		mov    0x000003(%eax,%edx,4),%al
		and    $0x0000ff,%eax
		jne    _03a8e6_jump
		mov    $0xffffffff,%ebx

	_03a8e6_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a8ec_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%edi
		mov    %edx,0x000004(%esp)
		mov    %bl,0x00001c(%esp)
		mov    %cl,0x000018(%esp)
		call   _03a86c_func
		mov    %eax,%ecx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _03abb2_jump
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _03a93a_jump
		jmp    _03abb2_jump

	_03a92a_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _03abb2_jump

	_03a93a_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x00004e,%edx
		jne    _03a92a_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _03a92a_jump
		cmpb   $0x000000,0x00001c(%esp)
		je     _03a972_jump
		mov    0x000081(%esi),%dl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%dl
		and    $0x000008,%al
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,0x000081(%esi)
		jmp    _03a994_jump

	_03a972_jump:
		mov    0x000081(%edi),%bl
		lea    0x000081(%esi),%edx
		test   $0x000008,%bl
		sete   %al
		mov    (%edx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%ah
		or     %al,%ah
		mov    %ah,(%edx)

	_03a994_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,0x000042(%esi)
		lea    0x000008(%esp),%eax
		mov    %esp,%ebx
		push   %eax
		lea    0x000014(%esp),%eax
		movswl %cx,%edx
		push   %eax
		lea    0x000014(%esp),%ecx
		mov    %edi,%eax
		call   _01da90_func
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000011,%eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00006c(%edi),%al
		cmp    $0x000005,%al
		jb     _03ab0a_jump
		jbe    _03aa54_jump
		cmp    $0x00000d,%al
		jb     _03ab12_jump
		jbe    _03aa98_jump
		cmp    $0x000012,%al
		jmp    _03ab0c_jump

	_03aa0c_jump:
		mov    $0x000030,%ecx
		mov    0x00002c(%esi),%ebp
		mov    0x00000c(%esi),%edx
		xor    %eax,%eax
		mov    %cx,0x000014(%esp)
		mov    0x00006d(%esi),%al
		dec    %ebp
		shl    $0x000002,%eax
		mov    $0x000003,%cl
		add    %eax,%edx
		mov    %ebp,0x00002c(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    %cl,0x000020(%esp)
		mov    0x000005(%edx,%eax,8),%ch
		and    $0x00000f,%ch
		mov    %ch,%bl
		or     $0x0000a0,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		movb   $0x00000a,0x000072(%esi)
		jmp    _03ab12_jump

	_03aa54_jump:
		mov    $0x000003,%ch
		xor    %eax,%eax
		mov    %ch,0x000020(%esp)
		mov    0x00006d(%esi),%al
		lea    0x000018(%edx),%ecx
		shl    $0x000002,%eax
		mov    0x00000c(%esi),%edx
		mov    $0x000020,%ebx
		add    %eax,%edx
		mov    %ecx,0x00002c(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    %bx,0x000014(%esp)
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,%bh
		or     $0x000020,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000000,0x000072(%esi)
		jmp    _03ab12_jump

	_03aa98_jump:
		mov    $0x000020,%eax
		mov    $0x000008,%edx
		call   _061dd0_func
		sub    %eax,%edx
		mov    %dx,0x000014(%esp)
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _03aac3_jump
		mov    $0x000001,%eax
		jg     _03aac3_jump
		neg    %eax

	_03aac3_jump:
		shl    $0x000003,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000014(%esp)
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %bl,%bl
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    %bl,0x000020(%esp)
		mov    0x000005(%edx,%eax,8),%bh
		and    $0x00000f,%bh
		mov    %bh,%cl
		or     $0x000020,%cl
		mov    %cl,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebx
		movb   $0x000000,0x000072(%esi)
		sub    $0x000014,%ebx
		mov    %ebx,0x00002c(%esi)
		jmp    _03ab12_jump

	_03ab0a_jump:
		cmp    $0x000002,%al

	_03ab0c_jump:
		je     _03aa0c_jump

	_03ab12_jump:
		cmpb   $0x000000,0x00001c(%esp)
		jne    _03ab20_jump
		movw   $0x000010,0x000014(%esp)

	_03ab20_jump:
		testb  $0x000008,0x000081(%edi)
		je     _03ab2f_jump
		mov    0x000014(%esp),%eax
		jmp    _03ab35_jump

	_03ab2f_jump:
		mov    0x000014(%esp),%eax
		neg    %eax

	_03ab35_jump:
		mov    %ax,0x000040(%esi)
		mov    $0x000004,%cl
		mov    0x000040(%esi),%ax
		xor    %edx,%edx
		test   %ax,%ax
		js     _03ab4b_jump
		sar    %cl,%ax
		jmp    _03ab54_jump

	_03ab4b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03ab54_jump:
		mov    0x000020(%esp),%dl
		cwtl   
		imul   %edx,%eax
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		mov    0x000081(%esi),%al
		mov    %edx,0x000028(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _056614_func
		mov    %esi,%eax
		call   _01df3c_func
		mov    0x000081(%esi),%ch
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ch
		mov    %esi,%eax
		mov    %ch,0x000081(%esi)
		call   _01f7d4_func
		mov    0x000018(%esp),%al
		mov    %al,0x00007f(%esi)
		andb   $0x0000bf,0x000081(%esi)

	_03abb2_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03abbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03adc7_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _03abe1_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000015,%eax
		jge    _03ac0f_jump

	_03abe1_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		jne    _03abf5_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000012,%eax
		jge    _03ac0f_jump

	_03abf5_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000d,%eax
		jne    _03ac09_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000002,%eax
		jge    _03ac0f_jump

	_03ac09_jump:
		movw   $0x000000,0x000052(%esi)

	_03ac0f_jump:
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _03adcd_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _03ac2f_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000015,%eax
		je     _03ac5f_jump

	_03ac2f_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		jne    _03ac43_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000012,%eax
		je     _03ac5f_jump

	_03ac43_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000d,%eax
		jne    _03adcd_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000002,%eax
		jne    _03adcd_jump

	_03ac5f_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c24c8_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _03adcd_jump
		cmp    $0x000005,%eax
		jne    _03acb2_jump
		mov    $0x000028,%ecx
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _03a8ec_func
		jmp    _03adbc_jump

	_03acb2_jump:
		cmp    $0x000002,%eax
		jne    _03acd8_jump
		mov    $0x000028,%ecx
		mov    $0x000001,%ebx
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _03a8ec_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03acd8_jump:
		mov    $0x000064,%ecx
		mov    $0x000001,%ebx
		mov    $0xfffffffd,%edx
		mov    %esi,%eax
		call   _03a8ec_func
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		mov    $0x000064,%ecx
		or     %dl,%bh
		mov    $0xfffffffd,%edx
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		mov    %esi,%eax
		call   _03a8ec_func
		mov    0x000081(%esi),%cl
		lea    0x000081(%esi),%eax
		test   $0x000008,%cl
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    $0x000001,%ebx
		mov    %ch,%dh
		or     %dl,%dh
		mov    $0x000064,%ecx
		mov    %dh,(%eax)
		mov    $0xfffffffd,%edx
		mov    %esi,%eax
		call   _03a8ec_func
		mov    0x000081(%esi),%bl
		lea    0x000081(%esi),%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    $0x000001,%ebx
		or     %dl,%cl
		mov    $0xfffffffd,%edx
		mov    %cl,(%eax)
		mov    $0x000064,%ecx
		mov    %esi,%eax
		call   _03a8ec_func
		mov    0x000081(%esi),%ch
		lea    0x000081(%esi),%eax
		test   $0x000008,%ch
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_03adbc_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03adc7_jump:
		movw   $0x000000,0x000052(%esi)

	_03adcd_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03add4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%al
		testb  $0x000001,0x000007(%ebx,%eax,8)
		je     _03aef9_jump
		cmpw   $0x000000,0x000056(%esi)
		jne    _03aef9_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00004d,%eax
		je     _03ae1a_jump
		movswl %dx,%eax
		cmp    $0x000003,%eax
		jne    _03aef9_jump

	_03ae1a_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x0000ef,%eax
		jne    _03ae55_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _03ae55_jump
		mov    $0x000014,%ecx
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _03a8ec_func

	_03ae55_jump:
		movb   $0x000001,_0c1f03_data
		mov    %esi,%eax
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		jne    _03ae76_jump
		mov    $0x000003,%ebx
		jmp    _03aef0_jump

	_03ae76_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x00004d,%edx
		jne    _03aeeb_jump
		xor    %edx,%edx
		mov    0x000077(%esi),%dl
		sub    %eax,%edx
		cmp    $0x000003,%edx
		jl     _03aedb_jump
		mov    $0x000006,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		mov    _0c51ce_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03aef9_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0c1b34_data,%eax
		shl    $0x000002,%esi
		add    %esi,%eax
		call   _056574_func
		mov    _0c51ce_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0c1b34_data,%eax
		movw   $0x000000,0x000048(%eax,%esi,4)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03aedb_jump:
		mov    $0x00000c,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03aeeb_jump:
		mov    $0x000001,%ebx

	_03aef0_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_03aef9_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03af00_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		cmpb   $0x000000,0x00007f(%eax)
		jne    _03af99_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		test   %eax,%eax
		jne    _03af99_jump
		mov    0x00006c(%ebx),%al
		cmp    $0x00000b,%eax
		jne    _03af2b_jump
		mov    $0x000002,%edx
		jmp    _03af92_jump

	_03af2b_jump:
		test   %eax,%eax
		jne    _03af88_jump
		xor    %eax,%eax
		mov    0x000028(%ebx),%dx
		mov    0x000068(%ebx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b74_data,%cx
		mov    _0c1bb4_data,%al
		add    %ecx,%eax
		sub    %eax,%edx
		mov    %dx,0x00003a(%ebx)
		xor    %edx,%edx
		mov    0x000038(%ebx),%eax
		mov    0x00007a(%ebx),%dl
		sar    $0x000010,%eax
		add    $0x000010,%edx
		test   %eax,%eax
		jge    _03af64_jump
		neg    %eax

	_03af64_jump:
		cmp    %edx,%eax
		jle    _03af78_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03af78_jump:
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03af88_jump:
		cmp    $0x000004,%eax
		jne    _03af99_jump
		mov    $0x000005,%edx

	_03af92_jump:
		mov    %ebx,%eax
		call   _01d6e8_func

	_03af99_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03afa0_func:
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x00007f(%eax)
		je     _03afb7_jump
		cmpb   $0x000000,_0c24ca_data
		je     _03afc8_jump
		decb   0x00007f(%edx)
		pop    %edx
		ret    

	_03afb7_jump:
		mov    $0x000093,%eax
		call   _068d70_func
		mov    %edx,%eax
		call   _0707b0_func

	_03afc8_jump:
		pop    %edx
		ret    



_03afd0_func:
		push   %ebx
		push   %edx
		mov    _0c1b14_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		orb    $0x000004,0x000081(%edx)
		mov    _0c24ac_data,%eax
		movl   $0x000001,0x000024(%edx)
		sar    $0x000010,%eax
		movl   $0x0000a0,0x000028(%edx)
		sub    $0x000032,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0189c4_func
		sub    %ebx,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0c2524_data,%eax
		sar    $0x000010,%eax
		add    $0x000130,%eax
		mov    _0c24ac_data,%bx
		mov    %eax,0x000028(%edx)
		xor    %eax,%eax
		add    $0x000140,%ebx
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		sub    $0x00003c,%ebx
		mov    %bx,0x00003c(%edx)
		mov    0x000081(%edx),%bl
		and    $0x0000f7,%bl
		mov    _0c1ef0_data,%eax
		mov    %bl,0x000081(%edx)
		mov    _0c3314_data,%bh
		movb   $0x000032,0x00007f(%edx)
		or     $0x000001,%bh
		movb   $0x000008,0x00006e(%eax)
		mov    %bh,_0c3314_data
		pop    %edx
		pop    %ebx
		ret    



_03b084_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    _0c1b74_data,%eax
		mov    _0c1bb4_data,%dl
		add    $0x000008,%eax
		add    %edx,%eax
		mov    _0c24aa_data,%edx
		sar    $0x000010,%edx
		sub    %edx,%eax
		xor    %ebx,%ebx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb5_data,%bl
		mov    _0c1bc0_data,%al
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    _0d75fe_data,%ebx
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		sar    %edx
		lea    0x00005a(%ebx),%eax
		sub    %edx,%eax
		mov    %ax,_0d7602_data
		mov    _0c1b16_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x000081(%edx),%ah
		movl   $0x0000a0,0x000028(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x00002c(%edx),%ax
		mov    $0x000110,%ecx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		xor    %ebx,%ebx
		call   _0189c4_func
		mov    0x000068(%edx),%bl
		sub    %ebx,%ecx
		mov    %ecx,0x000028(%edx)
		mov    0x000028(%edx),%bx
		mov    %bx,0x00003c(%edx)
		mov    _0c24ac_data,%ebx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000040(%edx)
		sub    $0x0000c8,%ebx
		mov    %ebx,0x00002c(%edx)
		mov    0x00002c(%edx),%cx
		mov    %cx,0x00003e(%edx)
		xor    %cl,%cl
		movw   $0x000000,0x000042(%edx)
		mov    %cl,_0d7606_data
		mov    0x000081(%edx),%ch
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%ch
		mov    %ch,0x000081(%edx)
		xor    %edx,%edx
		mov    _0c1b74_data,%ecx
		mov    _0c1bb4_data,%dl
		add    $0x000008,%ecx
		lea    (%edx,%ecx,1),%esi
		mov    _0c24aa_data,%ecx
		mov    %ax,_0d7600_data
		sar    $0x000010,%ecx
		xor    %edx,%edx
		sub    %ecx,%esi
		xor    %ecx,%ecx
		mov    _0c1bb5_data,%dl
		mov    _0c1bc0_data,%cl
		cwtl   
		sub    %ecx,%edx
		sub    %edx,%eax
		sar    %esi
		sub    $0x000046,%eax
		add    %esi,%eax
		mov    %ax,_0d7604_data
		mov    _0c1b18_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%al
		movl   $0x000001,0x000024(%edx)
		or     $0x00000c,%al
		mov    %al,0x000081(%edx)
		xor    %eax,%eax
		mov    $0x000020,%ecx
		mov    0x000068(%edx),%al
		mov    %ebx,0x00002c(%edx)
		sub    %eax,%ecx
		mov    %ecx,0x000028(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		xor    %ah,%ah
		mov    _0c3314_data,%dl
		mov    %ah,_0d7607_data
		or     $0x000001,%dl
		mov    _0c1ef0_data,%eax
		mov    %dl,_0c3314_data
		movb   $0x000008,0x00006e(%eax)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b248_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1b1a_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		testb  $0x000002,_0c3315_data
		jne    _03b27c_jump
		mov    $_0c1b4c_data,%eax
		call   _070a70_func
		call   _05049c_func

	_03b27c_jump:
		orb    $0x000001,_0c3315_data
		mov    0x000081(%edx),%bh
		mov    _0c24aa_data,%eax
		or     $0x000004,%bh
		sar    $0x000010,%eax
		mov    %bh,0x000081(%edx)
		xor    %ebx,%ebx
		add    $0x0000a0,%eax
		mov    0x000068(%edx),%bl
		sub    %ebx,%eax
		mov    %eax,0x000028(%edx)
		mov    0x000028(%edx),%ax
		mov    _0c24ac_data,%ebx
		mov    %ax,0x00003c(%edx)
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000069(%edx),%al
		sub    %eax,%ebx
		mov    %ebx,0x00002c(%edx)
		mov    _0c3314_data,%cl
		mov    0x00002c(%edx),%ax
		or     $0x000001,%cl
		mov    %ax,0x00003e(%edx)
		mov    _0c1ef0_data,%eax
		movl   $0x000001,0x000024(%edx)
		mov    %cl,_0c3314_data
		movb   $0x000008,0x00006e(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b2f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		movb   $0x000001,_0c25e1_data
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jb     _03b319_jump
		jbe    _03b332_jump
		cmp    $0x000014,%al
		jb     _03b314_jump
		jbe    _03b370_jump
		cmp    $0x00001e,%al
		je     _03b431_jump

	_03b314_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b319_jump:
		movw   $0x000000,0x000040(%esi)
		xor    %bh,%bh
		movw   $0x00fff8,0x000042(%esi)
		mov    %bh,_0c25e1_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b332_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03b343_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _03b34a_jump

	_03b343_jump:
		mov    %esi,%eax
		call   _01dea4_func

	_03b34a_jump:
		mov    $0xffff8300,%edx
		movw   $0x000000,0x000042(%esi)
		mov    %dx,_0c25da_data
		mov    0x000042(%esi),%ax
		mov    %dx,_0c25dc_data
		mov    %ax,0x000040(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b370_jump:
		mov    %esi,%eax
		call   _01dea4_func
		xor    %eax,%eax
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0c25da_data
		xor    %edx,%edx
		mov    $_0c1b4c_data,%eax
		mov    0x000069(%esi),%dl
		call   _0189c4_func
		sub    %edx,%eax
		add    $0x000010,%eax
		mov    %ax,_0c25dc_data
		mov    0x000056(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbl (%edx,%eax,8),%ebx
		mov    _0c25d8_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000012,%edx
		mov    $0x000037,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x0000ff,%dl
		mov    $0x000001,%bl
		mov    %eax,_0c25ec_data
		test   %eax,%eax
		jge    _03b40d_jump
		neg    %eax

	_03b40d_jump:
		mov    %eax,_0c25ec_data
		mov    %dl,_0c25de_data
		xor    %dh,%dh
		mov    %bl,_0c25df_data
		mov    %dh,0x000071(%esi)
		mov    %dh,_0c25e0_data
		mov    %dh,0x000072(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b431_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c25e0_data,%cl
		mov    _0c25de_data,%bl
		mov    _0c25df_data,%dl
		call   _018710_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b458_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		shl    $0x000002,%ebx
		mov    0x00000c(%eax),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%esi
		mov    (%ebx),%eax
		testb  $0x000001,0x000007(%esi,%eax,1)
		je     _03b4cd_jump
		movswl %dx,%eax
		cmp    $0x000003,%eax
		je     _03b48c_jump
		cmp    $0x000006,%eax
		jne    _03b4cd_jump

	_03b48c_jump:
		mov    $0x000001,%bh
		mov    %ecx,%eax
		mov    %bh,_0c1f03_data
		call   _01eb7c_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _03b4b6_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03b4b6_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _056614_func
		movw   $0x000001,0x000050(%ecx)

	_03b4cd_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b4d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%cx
		movw   $0x00ffff,0x000052(%eax)
		xor    %ebx,%ebx
		test   %cx,%cx
		jg     _03b505_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b4f9_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %cx,%bx
		jge    _03b556_jump

	_03b505_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x0000e0,%eax
		jne    _03b4f9_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03b4f9_jump
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000040(%edx)
		call   _01df3c_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f7d4_func
		movw   $0x00ffff,0x000046(%edx)
		movw   $0x000000,0x000048(%edx)
		mov    %bx,0x000052(%esi)

	_03b556_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b55c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%ecx),%bl
		mov    %ah,_0c25e1_data
		mov    %ebx,%eax
		mov    0x00006c(%ecx),%dl
		shl    $0x000008,%eax
		add    %edx,%eax
		cmp    $0x000006,%eax
		jb     _03b7c6_jump
		jbe    _03b788_jump
		cmp    $0x00000b,%eax
		jb     _03b7b6_jump
		jbe    _03b76a_jump
		cmp    $0x00000d,%eax
		jb     _03b761_jump
		jbe    _03b761_jump
		cmp    $0x000100,%eax
		je     _03b5b4_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b5b4_jump:
		mov    0x00003a(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _03b5e5_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x008300,_0c25ac_data
		jmp    _03b610_jump

	_03b5e5_jump:
		mov    _0c25ca_data,%ax
		mov    %ax,_0c25ac_data
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _03b610_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000014,%eax
		jne    _03b610_jump
		orb    $0x000008,_0c1bcd_data

	_03b610_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b61c_jump:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b62d_jump:
		cmpb   $0x000000,_0c1f02_data
		jne    _03b642_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _03b653_jump

	_03b642_jump:
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b653_jump:
		mov    0x00007f(%ecx),%al
		test   %al,%al
		je     _03b666_jump
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x00007f(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b666_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b677_jump:
		mov    0x00000c(%ecx),%eax
		mov    (%eax,%ebx,4),%eax
		testb  $0x000010,0x000007(%eax,%edx,8)
		je     _03b68d_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _03b6b7_jump

	_03b68d_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ecx),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_03b6b7_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _03b556_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _03b556_jump
		mov    %ecx,%eax
		call   _03b4d4_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b705_jump:
		movb   $0x000032,0x00007f(%ecx)

	_03b709_jump:
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x00003e(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _03b556_jump
		mov    0x000028(%eax),%edx
		cmp    0x000028(%ecx),%edx
		jl     _03b556_jump
		movw   $0x00ffff,0x000052(%ecx)
		mov    0x000081(%eax),%bh
		and    $0x0000fb,%bh
		mov    $0x000003,%edx
		mov    %bh,0x000081(%eax)
		mov    %ecx,%eax
		call   _01d6e8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b761_jump:
		movb   $0x000032,0x00007f(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b76a_jump:
		cmpb   $0x000000,_0c1f02_data
		jne    _03b556_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b788_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _03b556_jump
		cmpb   $0x000000,_0c1f02_data
		jne    _03b556_jump
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b7b6_jump:
		cmp    $0x000008,%eax
		jb     _03b761_jump
		jbe    _03b61c_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b7c6_jump:
		cmp    $0x000002,%eax
		jb     _03b7e1_jump
		jbe    _03b709_jump
		cmp    $0x000004,%eax
		jb     _03b761_jump
		jbe    _03b705_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b7e1_jump:
		test   %eax,%eax
		jbe    _03b62d_jump
		cmpb   $0x000000,_0c1f02_data
		je     _03b677_jump
		xor    %eax,%eax
		mov    _0c1b78_data,%bx
		mov    _0c1bb5_data,%al
		mov    0x00002c(%ecx),%si
		mov    %eax,%edx
		xor    %eax,%eax
		add    %ebx,%edx
		mov    0x000069(%ecx),%al
		sub    %esi,%edx
		sub    %eax,%edx
		movswl %dx,%eax
		test   %eax,%eax
		jge    _03b81e_jump
		neg    %eax

	_03b81e_jump:
		cmp    $0x000030,%eax
		jl     _03b831_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000009,%eax
		jle    _03b642_jump

	_03b831_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		mov    0x00000c(%ecx),%eax
		mov    (%eax),%eax
		mov    0x000052(%eax),%al
		mov    %al,0x00006a(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b850_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0x000006,%eax
		jne    _03b917_jump
		cmpb   $0x000000,_0c1f01_data
		jne    _03b917_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ebx),%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _03b917_jump
		mov    $0x000001,%ch
		mov    %ebx,%eax
		mov    %ch,_0c1f03_data
		call   _01eb7c_func
		cmpb   $0x000000,0x000076(%ebx)
		je     _03b8c9_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000002,%eax
		jne    _03b8ba_jump
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		pop    %ecx
		pop    %ebx
		ret    

	_03b8ba_jump:
		mov    $0x00000d,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		pop    %ecx
		pop    %ebx
		ret    

	_03b8c9_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000002,%eax
		jne    _03b905_jump
		mov    0x000050(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b34_data,%ecx
		add    %edx,%eax
		andb   $0x0000fb,0x000081(%ecx,%eax,4)
		mov    0x000050(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %ecx,%eax
		call   _070a70_func

	_03b905_jump:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		movw   $0x000001,0x000050(%ebx)

	_03b917_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03b91c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03b93c_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _03bce4_jump

	_03b93c_jump:
		xor    %eax,%eax
		mov    _0c1b74_data,%ebx
		mov    0x000060(%esi),%ax
		add    $0x000008,%ebx
		cmp    $0x0000e7,%eax
		jne    _03bad9_jump
		mov    _0d7606_data,%dh
		test   %dh,%dh
		jne    _03b9a3_jump
		xor    %eax,%eax
		mov    _0c1bb4_data,%al
		lea    (%ebx,%eax,1),%ecx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0c1bc0_data,%bl
		mov    _0c1bb5_data,%al
		sub    %ebx,%eax
		mov    _0d75fe_data,%ebx
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		sar    %ecx
		add    $0x00005a,%ebx
		sub    %ecx,%ebx
		mov    %bx,_0d7602_data
		jmp    _03baca_jump

	_03b9a3_jump:
		xor    %eax,%eax
		mov    %dh,%al
		cmp    $0x000064,%eax
		jne    _03bac4_jump
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%bl
		add    %ebx,%eax
		mov    0x00002c(%esi),%ebp
		sar    %eax
		add    %ebp,%eax
		mov    %eax,%edi
		lea    0x000010(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		mov    $0x000008,%edx
		push   %eax
		lea    0x00000c(%esp),%ebx
		mov    _0d760c_data,%eax
		call   _01da90_func
		mov    -0x000002(%esp),%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _03ba19_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%edx
		mov    0x000074(%esi),%bl
		add    %edx,%ebx
		sub    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _03ba19_jump
		addw   $0x000032,_0d7602_data
		jmp    _03bac4_jump

	_03ba19_jump:
		cmp    (%esp),%di
		jge    _03ba44_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		mov    -0x000002(%esp),%ebx
		add    $0x00000a,%eax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _03ba44_jump
		subw   $0x000032,_0d7602_data
		jmp    _03bac4_jump

	_03ba44_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sub    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03ba80_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%bl
		add    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    %eax,%ebx
		lea    0x00000a(%ecx),%eax
		cmp    %eax,%ebx
		jge    _03ba80_jump
		subw   $0x000050,_0d7602_data
		jmp    _03bac4_jump

	_03ba80_jump:
		xor    %eax,%eax
		mov    _0c1b74_data,%ebx
		mov    _0c1bb4_data,%al
		add    $0x000008,%ebx
		add    %eax,%ebx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1bb5_data,%cl
		mov    _0c1bc0_data,%al
		sub    %eax,%ecx
		mov    _0d75fe_data,%eax
		sar    $0x000010,%eax
		sub    %ecx,%eax
		sar    %ebx
		add    $0x00005a,%eax
		sub    %ebx,%eax
		mov    %ax,_0d7602_data

	_03bac4_jump:
		decb   _0d7606_data

	_03baca_jump:
		mov    0x00002c(%esi),%dx
		mov    _0d7602_data,%ax
		jmp    _03bc64_jump

	_03bad9_jump:
		cmp    $0x0000e8,%eax
		jne    _03bc6e_jump
		cmpb   $0x000000,_0d7607_data
		jne    _03bb2e_jump
		xor    %eax,%eax
		mov    _0c1bb4_data,%al
		lea    (%ebx,%eax,1),%ecx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0c1bb5_data,%bl
		mov    _0c1bc0_data,%al
		sub    %eax,%ebx
		mov    _0d75fe_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		sub    $0x000046,%eax
		add    %ecx,%eax
		mov    %ax,_0d7604_data
		jmp    _03bc5a_jump

	_03bb2e_jump:
		xor    %eax,%eax
		mov    _0d7607_data,%al
		cmp    $0x000064,%eax
		jne    _03bc54_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%al
		add    %ebx,%eax
		mov    0x00002c(%esi),%edx
		sar    %eax
		add    %edx,%eax
		mov    %eax,%edi
		lea    0x000010(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000008,%edx
		mov    _0d7608_data,%eax
		call   _01da90_func
		mov    -0x000002(%esp),%ebx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _03bba7_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000074(%esi),%bl
		add    %ecx,%ebx
		sub    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _03bba7_jump
		addw   $0x000032,_0d7604_data
		jmp    _03bc54_jump

	_03bba7_jump:
		cmp    (%esp),%di
		jge    _03bbd2_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edi
		mov    0x000069(%esi),%al
		mov    -0x000002(%esp),%ebx
		add    %edi,%eax
		sar    $0x000010,%ebx
		add    $0x00000a,%eax
		cmp    %eax,%ebx
		jge    _03bbd2_jump
		subw   $0x000032,_0d7604_data
		jmp    _03bc54_jump

	_03bbd2_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sub    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03bc0e_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%bl
		add    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    $0x00000a,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jge    _03bc0e_jump
		subw   $0x000050,_0d7604_data
		jmp    _03bc54_jump

	_03bc0e_jump:
		xor    %eax,%eax
		mov    _0c1b74_data,%ebx
		mov    _0c1bb4_data,%al
		add    $0x000008,%ebx
		lea    (%eax,%ebx,1),%ecx
		mov    _0c24aa_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		sub    %ebx,%ecx
		xor    %ebx,%ebx
		mov    _0c1bc0_data,%al
		mov    _0c1bb5_data,%bl
		sub    %eax,%ebx
		mov    _0d75fe_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		sub    $0x000046,%eax
		add    %ecx,%eax
		mov    %ax,_0d7604_data

	_03bc54_jump:
		decb   _0d7607_data

	_03bc5a_jump:
		mov    0x00002c(%esi),%dx
		mov    _0d7604_data,%ax

	_03bc64_jump:
		add    $0x000096,%edx
		sub    %edx,%eax
		mov    %eax,%edx

	_03bc6e_jump:
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ecx
		add    $0x000032,%eax
		cmp    %ecx,%eax
		jge    _03bc87_jump
		movswl %dx,%eax
		test   %eax,%eax
		jg     _03bca2_jump

	_03bc87_jump:
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%edi
		sub    $0x000096,%eax
		cmp    %edi,%eax
		jle    _03bca8_jump
		movswl %dx,%eax
		test   %eax,%eax
		jge    _03bca8_jump

	_03bca2_jump:
		xor    %edx,%edx
		mov    %dx,0x000042(%esi)

	_03bca8_jump:
		test   %dx,%dx
		je     _03bce4_jump
		mov    0x000040(%esi),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		sub    %ebx,%eax
		cmp    $0x000000,%eax
		je     _03bcc6_jump
		mov    $0x000001,%eax
		jg     _03bcc6_jump
		neg    %eax

	_03bcc6_jump:
		add    %eax,%ebx
		mov    $0x000030,%eax
		cmp    %ebx,%eax
		jle    _03bcd3_jump
		mov    %ebx,%eax

	_03bcd3_jump:
		mov    %eax,%ebx
		mov    $0xffffffd0,%eax
		cmp    %ebx,%eax
		jge    _03bce0_jump
		mov    %ebx,%eax

	_03bce0_jump:
		mov    %ax,0x000042(%esi)

	_03bce4_jump:
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0c1b4c_data,%eax
		call   _01da90_func
		addw   $0x00000f,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x00006c(%esi),%al
		add    $0x000096,%edx
		test   %eax,%eax
		jne    _03bd47_jump
		mov    0x00000a(%esp),%eax
		movswl %dx,%ebx
		sar    $0x000010,%eax
		lea    -0x00000f(%ebx),%ecx
		cmp    %ecx,%eax
		jle    _03bd47_jump
		add    $0x00000f,%ebx
		cmp    %ebx,%eax
		jge    _03bd47_jump
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		jmp    _03be01_jump

	_03bd47_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%eax
		je     _03bd56_jump
		cmp    $0x000004,%eax
		jne    _03bd84_jump

	_03bd56_jump:
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		lea    -0x000014(%eax),%ecx
		cmp    %ecx,%ebx
		jl     _03bd6e_jump
		add    $0x000014,%eax
		cmp    %eax,%ebx
		jle    _03bd84_jump

	_03bd6e_jump:
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03bd84_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		je     _03bd93_jump
		cmp    $0x000006,%eax
		jne    _03bdc1_jump

	_03bd93_jump:
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		lea    -0x000007(%eax),%ecx
		cmp    %ecx,%ebx
		jle    _03bdc1_jump
		add    $0x000007,%eax
		cmp    %eax,%ebx
		jge    _03bdc1_jump
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03bdc1_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _03be01_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000003,%eax
		jne    _03be01_jump
		mov    %esi,%eax
		call   _03bf30_func
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x0000e7,%eax
		jne    _03bdfa_jump
		movb   $0x000064,_0d7607_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03bdfa_jump:
		movb   $0x000064,_0d7606_data

	_03be01_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03be0c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _03bf2a_jump
		cmp    $0x000001,%eax
		je     _03bf2a_jump
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b34_data,%ebx
		add    %edx,%eax
		mov    0x00006c(%ebx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _03bf2a_jump
		mov    0x000076(%ecx),%ah
		mov    0x000050(%ecx),%edx
		dec    %ah
		sar    $0x000010,%edx
		mov    %ah,0x000076(%ecx)
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000076(%ecx),%al
		mov    %al,0x000076(%ebx)
		test   %al,%al
		je     _03be81_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %ecx
		pop    %ebx
		ret    

	_03be81_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x000081(%ecx),%dh
		movw   $0x000001,0x000050(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000002,%ebx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		movw   $0x00ff80,0x000042(%ecx)
		add    %edx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000040(%ecx)
		call   _01d6f8_func
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		movw   $0x00ff80,0x000042(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000000,0x000040(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		andb   $0x0000ef,0x000081(%edx,%eax,4)
		mov    0x000050(%ecx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		movw   $0x000001,0x000050(%edx,%eax,4)

	_03bf2a_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03bf30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _03bf5f_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03bf4f_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _03c004_jump

	_03bf5f_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000e9,%ebx
		jne    _03bf4f_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03bf4f_jump
		movb   $0x000004,0x00007e(%edx)
		mov    0x000028(%esi),%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%esi),%ebx
		mov    %ebx,0x00002c(%edx)
		mov    0x00002c(%edx),%ax
		xor    %ebx,%ebx
		mov    %ax,0x00003e(%edx)
		mov    0x000060(%esi),%bx
		cmp    $0x0000e7,%ebx
		jne    _03bfbe_jump
		mov    0x000081(%edx),%bl
		movw   $0x00fffb,0x000040(%edx)
		and    $0x0000f7,%bl
		mov    %edx,_0d7608_data
		mov    %bl,0x000081(%edx)
		jmp    _03bfd9_jump

	_03bfbe_jump:
		mov    0x000081(%edx),%ah
		movw   $0x000005,0x000040(%edx)
		or     $0x000008,%ah
		mov    %edx,_0d760c_data
		mov    %ah,0x000081(%edx)

	_03bfd9_jump:
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _01f7d4_func
		mov    0x000052(%esi),%ax
		mov    %ax,0x000052(%edx)

	_03c004_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c00c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    0x000050(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		mov    0x000060(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		cmp    $0x0000e7,%eax
		je     _03c046_jump
		cmp    $0x0000e8,%eax
		jne    _03c161_jump

	_03c046_jump:
		mov    0x000050(%edi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%ebp
		shl    $0x000002,%eax
		add    %eax,%ebp
		mov    %ebp,%edx
		mov    %edi,%eax
		call   _03c234_func
		test   %ax,%ax
		je     _03c161_jump
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jg     _03c099_jump
		jmp    _03c142_jump

	_03c089_jump:
		inc    %ebx
		add    $0x000084,%esi
		cmp    %dx,%bx
		jge    _03c142_jump

	_03c099_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00000b,%eax
		jne    _03c089_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _03c089_jump
		lea    0x00001c(%esp),%eax
		lea    0x000018(%esp),%ecx
		lea    0x000014(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%edx
		mov    %edi,%eax
		call   _01d610_func
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		movb   $0x000000,0x00006b(%esi)
		xor    %eax,%eax
		mov    0x00000e(%esp),%edx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03c103_jump
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)

	_03c103_jump:
		mov    0x00001a(%esp),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000074(%esi),%al
		sar    $0x000011,%ebx
		add    %eax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		sar    %edx
		add    %ebx,%eax
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _01df3c_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f7d4_func

	_03c142_jump:
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _03be0c_func
		mov    0x000081(%edi),%dl
		movl   $0x000000,0x000024(%edi)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%edi)

	_03c161_jump:
		cmpw   $0x000000,0x000042(%edi)
		jne    _03c20b_jump
		mov    _0c23c0_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b34_data,%ebx
		add    %edx,%eax
		mov    _0c248a_data,%cx
		shl    $0x000002,%eax
		xor    %esi,%esi
		add    %eax,%ebx
		test   %cx,%cx
		jg     _03c1be_jump
		jmp    _03c20b_jump

	_03c19a_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0c23c0_data(,%eax,2),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0c1b34_data,%eax
		add    %eax,%ebx
		cmp    _0c248a_data,%si
		jge    _03c20b_jump

	_03c1be_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x0000e9,%eax
		jne    _03c19a_jump
		mov    0x000034(%ebx),%ax
		cmp    0x000034(%edi),%ax
		je     _03c19a_jump
		mov    %ebx,%edx
		mov    %edi,%eax
		call   _03c234_func
		test   %ax,%ax
		je     _03c19a_jump
		movw   $0x000000,0x000040(%ebx)
		movw   $0x000000,0x000040(%edi)
		movw   $0x000003,0x000042(%ebx)
		movw   $0x000003,0x000042(%edi)
		mov    0x000034(%ebx),%ax
		mov    %ax,0x000052(%edi)
		mov    0x000034(%edi),%ax
		mov    %ax,0x000052(%ebx)

	_03c20b_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c218_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_03c234_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%edi
		xor    %edx,%edx
		call   _029048_func
		mov    %eax,%ebp
		mov    %eax,(%esp)
		xor    %edx,%edx
		mov    %edi,%eax
		lea    0x000020(%esp),%ecx
		call   _029048_func
		mov    %eax,%esi
		lea    0x00000c(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000007(%ebp),%dl
		mov    0x00000c(%esp),%eax
		call   _01da90_func
		lea    0x00000c(%esp),%eax
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		mov    %esi,%eax
		xor    %edx,%edx
		lea    0x00001c(%esp),%ebx
		mov    0x000007(%eax),%dl
		mov    %edi,%eax
		call   _01da90_func
		mov    0x000004(%esp),%eax
		mov    0x000081(%eax),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _03c2c1_jump
		mov    0x000010(%esp),%ecx
		mov    0x000000(%ebp),%ax
		add    %eax,%ecx
		mov    %cx,0x000010(%esp)
		jmp    _03c2dd_jump

	_03c2c1_jump:
		xor    %eax,%eax
		mov    0x000000(%ebp),%dx
		mov    0x000004(%ebp),%al
		mov    0x000018(%esp),%ebx
		add    %edx,%eax
		mov    0x000010(%esp),%edx
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %dx,0x000010(%esp)

	_03c2dd_jump:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _03c300_jump
		mov    0x000014(%esp),%edx
		mov    (%esi),%ax
		add    %eax,%edx
		mov    %dx,0x000014(%esp)
		jmp    _03c31b_jump

	_03c300_jump:
		xor    %eax,%eax
		mov    (%esi),%dx
		mov    0x000004(%esi),%al
		mov    0x00001c(%esp),%edi
		add    %eax,%edx
		mov    0x000014(%esp),%eax
		add    %edi,%eax
		sub    %edx,%eax
		mov    %ax,0x000014(%esp)

	_03c31b_jump:
		mov    (%esp),%eax
		mov    0x000020(%esp),%ebx
		mov    0x000002(%eax),%ax
		add    %eax,%ebx
		mov    %bx,0x000020(%esp)
		mov    0x000008(%esp),%ecx
		mov    0x000002(%esi),%ax
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		push   %eax
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00002a(%esp),%edx
		push   %eax
		mov    0x000010(%esp),%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x000005(%eax),%cl
		mov    0x000004(%eax),%bl
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03c384_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b34_data,%eax
		mov    _0c1b38_data,%cx
		xor    %edx,%edx
		test   %cx,%cx
		jg     _03c3b1_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c3a2_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %cx,%dx
		jge    _03c431_jump

	_03c3b1_jump:
		xor    %ebx,%ebx
		mov    0x000060(%eax),%bx
		cmp    $0x000020,%ebx
		jne    _03c3a2_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _03c3a2_jump
		mov    0x000028(%esi),%ebx
		mov    %ebx,0x000028(%eax)
		mov    0x000028(%eax),%dx
		mov    %dx,0x00003c(%eax)
		mov    0x00002c(%esi),%ebx
		movw   $0x000000,0x000040(%eax)
		mov    %ebx,0x00002c(%eax)
		mov    0x00002c(%eax),%dx
		mov    %dx,0x00003e(%eax)
		mov    0x000081(%eax),%dl
		movw   $0x000000,0x000042(%eax)
		or     $0x000004,%dl
		mov    $0x000026,%ebx
		mov    %dl,0x000081(%eax)
		xor    %edx,%edx
		movl   $0x000001,0x000024(%eax)
		call   _01d6f8_func
		mov    0x000081(%esi),%dh
		and    $0x0000fb,%dh
		mov    %esi,_0d76a4_data
		mov    %dh,0x000081(%esi)
		xor    %edx,%edx
		movl   $0x000000,0x000024(%esi)
		mov    %dx,_0d761a_data

	_03c431_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c438_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000000,_0c1b14_data
		je     _03c550_jump
		movb   $0x000001,_0cd014_data
		testb  $0x000080,_0c331c_data
		je     _03c516_jump
		xor    %edx,%edx
		mov    _0cd102_data,%dl
		test   %edx,%edx
		jne    _03c550_jump
		cmpw   $0x000000,_0c1b10_data
		jne    _03c4c1_jump
		mov    _0c1b0a_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000042,%edx
		jle    _03c4a2_jump
		mov    $0x000001,%edi
		mov    _0c1b0c_data,%ax
		mov    %di,_0c1b10_data
		mov    %ax,_0c1b0e_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c4a2_jump:
		cmp    $0x000028,%edx
		jle    _03c4b4_jump
		addw   $0x000004,_0c1b0c_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c4b4_jump:
		addw   $0x000002,_0c1b0c_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c4c1_jump:
		mov    _0c1b10_data,%edx
		sar    $0x000010,%edx
		mov    $0x000007,%cl
		mov    _0948cc_data(,%edx,2),%ax
		test   %ax,%ax
		js     _03c4de_jump
		sar    %cl,%ax
		jmp    _03c4e7_jump

	_03c4de_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03c4e7_jump:
		movswl %ax,%edx
		cmp    $0x0000ff,%edx
		je     _03c550_jump
		mov    _0c1b0c_data,%dx
		mov    _0c1b12_data,%bx
		add    %eax,%edx
		inc    %ebx
		mov    %dx,_0c1b0c_data
		mov    %bx,_0c1b12_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c516_jump:
		push   $0x000000
		mov    $_0d7630_data,%eax
		mov    _0d7698_data,%ecx
		mov    _0d7694_data,%ebx
		mov    _0d7692_data,%edx
		push   $0x000002
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a878_func
		cmpb   $0x000000,_0c2612_data
		jne    _03c550_jump
		addw   $0x000003,_0d769a_data

	_03c550_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_03c558_switch:
		.long   _03c63a_case
		.long   _03c689_case
		.long   _03c78b_case
		.long   _03c802_case
		.long   _03c864_case
		.long   _03c8da_case
		.long   _03c9a3_case
		.long   _03cab2_case
		.long   _03cb32_case
		.long   _03cb89_case
		.long   _03cc3a_case
		.long   _03cca7_case




_03c588_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03c61d_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000026,%eax
		jne    _03c61d_jump
		xor    %ah,%ah
		xor    %dl,%dl
		xor    %bl,%bl
		xor    %ecx,%ecx
		mov    %ah,_0d7629_data
		mov    %ah,_0d7628_data
		mov    %ah,_0c1b14_data
		mov    %cx,_0c25ca_data
		xor    %dh,%dh
		xor    %bh,%bh
		mov    _0d76a4_data,%eax
		mov    %dx,_0d761a_data
		mov    %bx,_0c25cc_data
		mov    _0c3314_data,%dh
		mov    _0c3315_data,%bh
		mov    0x000081(%eax),%cl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fe,%dh
		and    $0x00007f,%bh
		and    $0x0000fb,%cl
		mov    %dh,_0c3314_data
		mov    %bh,_0c3315_data
		mov    %dl,_0d76a8_data
		mov    %cl,0x000081(%eax)

	_03c61d_jump:
		mov    _0d761a_data,%ax
		cmp    $0x00000b,%ax
		ja     _03cdf9_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_03c558_switch(,%eax,4)

	_03c63a_case:
		mov    _0d7629_data,%bh
		test   %bh,%bh
		jne    _03c65d_jump
		mov    $0x000001,%cl
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %cl,_0d7629_data
		call   _01d6e8_func
		jmp    _03cdf9_jump

	_03c65d_jump:
		xor    %eax,%eax
		mov    %bh,%al
		cmp    $0x000002,%eax
		jne    _03cdf9_jump
		movw   $0x000001,_0d761a_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c689_case:
		mov    _0d7628_data,%dh
		test   %dh,%dh
		jne    _03c6bd_jump
		mov    $0x000001,%bl
		mov    $0x00001f,%edx
		mov    %esi,%eax
		mov    %bl,_0d7628_data
		call   _01d6e8_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c6bd_jump:
		xor    %eax,%eax
		mov    %dh,%al
		cmp    $0x000002,%eax
		jne    _03cdf9_jump
		mov    _0d761c_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    _0c1b34_data,%edx
		add    %ebx,%eax
		mov    0x000070(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03cdf9_jump
		mov    _0d761a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		mov    0x000070(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03cdf9_jump
		mov    _0d761a_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    $0x000001,%ecx
		add    %eax,%ebx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%ebx
		mov    $0x000002,%edx
		add    %ebx,%eax
		mov    %ecx,%ebx
		call   _056614_func
		mov    %ecx,%ebx
		mov    _0d761c_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%eax
		mov    $0x000002,%edx
		add    %ecx,%eax
		call   _056614_func
		movw   $0x000002,_0d761a_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c78b_case:
		mov    _0d761c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		mov    0x000070(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03cdf9_jump
		mov    _0d761a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		mov    0x000070(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03cdf9_jump
		movw   $0x000003,_0d761a_data
		xor    %dl,%dl
		mov    %dl,_0d7629_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c802_case:
		cmpb   $0x000000,_0d7629_data
		jne    _03c835_jump
		mov    $0x000001,%ah
		mov    $0x00001e,%edx
		mov    %ah,_0d7629_data
		mov    %esi,%eax
		call   _01d6e8_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c835_jump:
		xor    %eax,%eax
		mov    _0d7629_data,%al
		cmp    $0x000002,%eax
		jne    _03cdf9_jump
		movw   $0x000004,_0d761a_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c864_case:
		mov    _0d761a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000003,%edx
		call   _056614_func
		mov    _0d761c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000003,%edx
		mov    $0x000005,%edi
		call   _056614_func
		mov    %di,_0d761a_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c8da_case:
		mov    _0d761c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b34_data,%ebx
		add    %edx,%eax
		mov    0x000070(%ebx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03c985_jump
		mov    _0d761a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    0x000070(%ebx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03c985_jump
		mov    _0d7629_data,%bh
		test   %bh,%bh
		jne    _03c951_jump
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %esi,%eax
		mov    %cl,_0d7629_data
		call   _01d6e8_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c951_jump:
		xor    %eax,%eax
		mov    %bh,%al
		cmp    $0x000002,%eax
		jne    _03cdf9_jump
		movw   $0x000006,_0d761a_data
		xor    %ch,%ch
		mov    %ch,_0d7629_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c985_jump:
		xor    %bl,%bl
		mov    %bl,_0d7629_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c9a3_case:
		cmpb   $0x000000,_0d7629_data
		jne    _03ca2e_jump
		mov    _0d761a_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000002,%edx
		call   _056614_func
		mov    _0d761c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000002,%edx
		call   _056614_func
		mov    $0x000001,%dl
		mov    %esi,%eax
		mov    %dl,_0d7629_data
		mov    $0x00001e,%edx
		call   _01d6e8_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ca2e_jump:
		xor    %eax,%eax
		mov    _0d7629_data,%al
		cmp    $0x000002,%eax
		jne    _03cdf9_jump
		mov    _0d761c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		mov    0x000070(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03cdf9_jump
		mov    _0d761a_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    0x000070(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03cdf9_jump
		mov    $0x000007,%ebx
		xor    %dh,%dh
		mov    %bx,_0d761a_data
		mov    %dh,_0d7629_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03cab2_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000021,%eax
		je     _03caed_jump
		mov    $0x000021,%edx
		mov    %esi,%eax
		xor    %cl,%cl
		call   _01d6e8_func
		mov    %cl,_0d762c_data
		movb   $0x000001,_0c1b14_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03caed_jump:
		xor    %eax,%eax
		mov    _0d762c_data,%al
		cmp    $0x000002,%eax
		jne    _03cdf9_jump
		mov    $0x000020,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		mov    $0x000008,%edx
		xor    %al,%al
		mov    %dx,_0d761a_data
		mov    %al,_0c1b14_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03cb32_case:
		mov    _0d761c_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000004,%edx
		mov    $0x000009,%edi
		call   _056614_func
		mov    $0xffffffff,%eax
		mov    %di,_0d761a_data
		mov    %ax,_0d769c_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03cb89_case:
		testb  $0x000001,_0c3314_data
		je     _03cbb1_jump
		movw   $0x00000a,_0d761a_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03cbb1_jump:
		mov    _0d769a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _03cdf9_jump
		mov    _0d761c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		mov    0x00003e(%edx,%eax,4),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _03cdf9_jump
		call   _03d83c_func
		mov    _0c1ef0_data,%eax
		mov    0x000028(%eax),%dx
		add    $0x000040,%edx
		mov    %dx,_0d769c_data
		mov    0x00002c(%eax),%dx
		add    $0x000032,%edx
		mov    0x000028(%eax),%ax
		mov    %dx,_0d769e_data
		add    $0x000030,%eax
		mov    %dx,_0d76a2_data
		mov    %ax,_0d76a0_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03cc3a_case:
		mov    _0d761c_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		mov    $0x000004,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    _0d761a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		mov    $0x000004,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x00000b,_0d761a_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03cca7_case:
		xor    %eax,%eax
		mov    _0d76a8_data,%al
		cmp    $0x000001,%eax
		jne    _03cd21_jump
		mov    _0c1b9e_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		je     _03cd21_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _03ccf5_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000017,%eax
		je     _03cd21_jump

	_03ccf5_jump:
		mov    $0x000002,%dh
		mov    $0x000017,%ebx
		mov    $_0c1b4c_data,%eax
		mov    %dh,_0d76a8_data
		mov    $0x000003,%edx
		xor    %edi,%edi
		call   _01d6f8_func
		mov    %di,_0c1b8c_data
		mov    %di,_0c1b8e_data

	_03cd21_jump:
		mov    _0d761c_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000024(%eax),%edx
		test   %edx,%edx
		jne    _03cdc2_jump
		jne    _03cdc2_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03cd5e_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000022,%eax
		je     _03cdc2_jump

	_03cd5e_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _03cd72_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		je     _03cdc2_jump

	_03cd72_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _03cd8a_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000017,%eax
		je     _03cdc2_jump

	_03cd8a_jump:
		xor    %eax,%eax
		mov    _0d76a8_data,%al
		cmp    $0x000002,%eax
		jne    _03cdc2_jump
		mov    %esi,%eax
		xor    %bl,%bl
		xor    %edx,%edx
		mov    %bl,_0d76a8_data
		mov    $0x000022,%ebx
		call   _01d6f8_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03cdc2_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000004,%eax
		jne    _03cdf9_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03cdf9_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000022,%eax
		jne    _03cdf9_jump
		mov    $0x00000c,%edx
		mov    _0d76a4_data,%eax
		movw   $0x00fffc,0x000042(%esi)
		mov    %dx,_0d761a_data
		call   _032910_func

	_03cdf9_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03d0d8_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ce0f_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000016,%eax
		jne    _03d0fe_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01da90_func
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ebx
		mov    $0xfffffff1,%esi
		mov    $0x000001,%ecx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		sar    $0x000011,%ebx
		add    %edx,%eax
		mov    %si,_0d7616_data
		sub    $0x000060,%eax
		mov    %si,_0d7612_data
		mov    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		movswl %dx,%edi
		add    %ebx,%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    %bx,_0d7614_data
		mov    %bx,_0d7610_data
		movswl %ax,%esi
		mov    $0x000025,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _03d4e0_func
		mov    $0x000025,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ecx,%ecx
		call   _03d4e0_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ceba_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000016,%eax
		jne    _03d0fe_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01da90_func
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		mov    $0x00004c,%ebx
		mov    $0xffffffb4,%ecx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		mov    %bx,_0d7612_data
		mov    %cx,_0d7616_data
		mov    $0x000023,%ebx
		add    %edx,%eax
		xor    %cl,%cl
		mov    0x000006(%esp),%edx
		sub    $0x000060,%eax
		mov    %cl,_0d762a_data
		mov    %ax,_0d7624_data
		mov    %ax,_0d7620_data
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		mov    $0x000001,%ch
		add    %edx,%eax
		mov    %ch,_0d762b_data
		sub    $0x000080,%eax
		mov    $0x000001,%ecx
		mov    %ax,_0d7626_data
		mov    %ax,_0d7622_data
		mov    $0xfffffff0,%eax
		mov    _0d7620_data,%edx
		mov    %ax,_0d7614_data
		mov    %ax,_0d7610_data
		mov    _0d761e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03d4e0_func
		mov    $0x000023,%ebx
		mov    _0d7624_data,%edx
		mov    _0d7622_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03d4e0_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03cfa5_jump:
		xor    %eax,%eax
		mov    _0d762c_data,%al
		test   %eax,%eax
		jne    _03d012_jump
		mov    $_0d7630_data,%edi
		mov    _0cd8fc_data,%esi
		mov    $0x000001,%bh
		push   %edi

	_03cfbe_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03cfd6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03cfbe_jump

	_03cfd6_jump:
		pop    %edi
		xor    %edx,%edx
		mov    $0x0000a0,%esi
		mov    $0xfffffff6,%edi
		mov    $0x000028,%eax
		mov    %dx,_0d769a_data
		mov    %bh,_0d762c_data
		mov    %si,_0d7694_data
		mov    %di,_0d7696_data
		mov    %ax,_0d7698_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d012_jump:
		mov    _0d7694_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _03d06a_jump
		mov    $0xfffffff6,%ebx
		mov    $0x000028,%ecx
		xor    %eax,%eax
		xor    %dh,%dh
		mov    %ax,_0d769a_data
		mov    %dh,_0c1b14_data
		mov    %bx,_0d7696_data
		mov    %cx,_0d7698_data
		mov    _0d762c_data,%bl
		mov    $0x0000a0,%edx
		inc    %bl
		mov    %dx,_0d7694_data
		mov    %bl,_0d762c_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d06a_jump:
		mov    $0x000004,%cl
		mov    _0d7698_data,%ax
		test   %ax,%ax
		js     _03d07c_jump
		sar    %cl,%ax
		jmp    _03d085_jump

	_03d07c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03d085_jump:
		mov    _0d7696_data,%si
		mov    _0d7698_data,%di
		add    %eax,%esi
		mov    _0d7698_data,%ax
		mov    %si,_0d7696_data
		dec    %eax
		test   %di,%di
		je     _03d0c0_jump
		cmpb   $0x000000,_0c24cc_data
		jne    _03d0fe_jump
		mov    %ax,_0d7698_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d0c0_jump:
		cmpb   $0x000000,_0c24ce_data
		jne    _03d0fe_jump
		mov    %ax,_0d7698_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d0d8_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x00001f,%al
		jb     _03d0f6_jump
		jbe    _03ce0f_jump
		cmp    $0x000021,%al
		je     _03cfa5_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d0f6_jump:
		cmp    $0x00001e,%al
		je     _03ceba_jump

	_03d0fe_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d108_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		je     _03d4d7_jump
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		cmp    $0x000023,%edx
		je     _03d12d_jump
		cmp    $0x000024,%edx
		jne    _03d2fe_jump

	_03d12d_jump:
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		neg    %eax
		cmp    %edx,%eax
		jle    _03d14b_jump
		mov    $0x000002,%al
		movb   $0x000000,0x000076(%esi)
		mov    %al,_0d7629_data
		jmp    _03d4d7_jump

	_03d14b_jump:
		cmpw   $0x000000,0x000056(%esi)
		je     _03d22a_jump
		cmpb   $0x000000,_0d762a_data
		je     _03d17e_jump
		addw   $0x000003,_0d7612_data
		mov    _0d7610_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00004c,%eax
		jle    _03d19a_jump
		xor    %ch,%ch
		mov    %ch,_0d762a_data
		jmp    _03d19a_jump

	_03d17e_jump:
		subw   $0x000003,_0d7612_data
		mov    _0d7610_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb4,%eax
		jge    _03d19a_jump
		movb   $0x000001,_0d762a_data

	_03d19a_jump:
		mov    $0x000004,%cl
		mov    _0d7610_data,%ax
		test   %ax,%ax
		js     _03d1ac_jump
		sar    %cl,%ax
		jmp    _03d1b5_jump

	_03d1ac_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03d1b5_jump:
		mov    _0d7620_data,%bx
		mov    $0x000004,%cl
		add    %eax,%ebx
		mov    _0d7612_data,%ax
		mov    %bx,_0d7620_data
		test   %ax,%ax
		js     _03d1d7_jump
		sar    %cl,%ax
		jmp    _03d1e0_jump

	_03d1d7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03d1e0_jump:
		mov    _0d7622_data,%cx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    %cx,_0d7622_data
		cmp    $0x000001,%eax
		jne    _03d4d7_jump
		mov    _0d7620_data,%edx
		mov    _0d761e_data,%eax
		mov    0x000054(%esi),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%bl
		call   _03d4e0_func
		movb   $0x000000,0x000076(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d22a_jump:
		cmpb   $0x000000,_0d762b_data
		je     _03d252_jump
		addw   $0x000003,_0d7616_data
		mov    _0d7614_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00004c,%eax
		jle    _03d26e_jump
		xor    %bl,%bl
		mov    %bl,_0d762b_data
		jmp    _03d26e_jump

	_03d252_jump:
		subw   $0x000003,_0d7616_data
		mov    _0d7614_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb4,%eax
		jge    _03d26e_jump
		movb   $0x000001,_0d762b_data

	_03d26e_jump:
		mov    $0x000004,%cl
		mov    _0d7614_data,%ax
		test   %ax,%ax
		js     _03d280_jump
		sar    %cl,%ax
		jmp    _03d289_jump

	_03d280_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03d289_jump:
		mov    _0d7624_data,%cx
		add    %eax,%ecx
		mov    _0d7616_data,%ax
		mov    %cx,_0d7624_data
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _03d2ab_jump
		sar    %cl,%ax
		jmp    _03d2b4_jump

	_03d2ab_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03d2b4_jump:
		mov    _0d7626_data,%di
		add    %eax,%edi
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    %di,_0d7626_data
		cmp    $0x000001,%eax
		jne    _03d4d7_jump
		mov    _0d7624_data,%edx
		mov    _0d7622_data,%eax
		mov    0x000054(%esi),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%bl
		call   _03d4e0_func
		movb   $0x000000,0x000076(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d2fe_jump:
		cmp    $0x000025,%edx
		jne    _03d4d7_jump
		cmpw   $0x000000,0x000056(%esi)
		je     _03d320_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    0x000068(%esi),%al
		mov    $0x0000f0,%ebx
		add    %ecx,%eax
		jmp    _03d330_jump

	_03d320_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		mov    $0x000005,%ebx

	_03d330_jump:
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%di
		mov    0x000069(%esi),%al
		add    %eax,%edi
		mov    %esi,%eax
		call   _0189c4_func
		sub    %edi,%eax
		mov    %eax,%edi
		movswl %bx,%eax
		test   %eax,%eax
		jge    _03d351_jump
		neg    %eax

	_03d351_jump:
		mov    %eax,%edx
		movswl %di,%eax
		test   %eax,%eax
		jge    _03d35c_jump
		neg    %eax

	_03d35c_jump:
		add    %edx,%eax
		movswl %ax,%ebp
		cmp    $0x00000a,%ebp
		jge    _03d37c_jump
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		movb   $0x000000,0x000076(%esi)
		call   _03d6b4_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d37c_jump:
		test   %ebp,%ebp
		jle    _03d3a0_jump
		mov    $0x000004,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edi

	_03d3a0_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000001,%eax
		jne    _03d4d7_jump
		cmpw   $0x000000,0x000056(%esi)
		je     _03d448_jump
		mov    _0d760e_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _03d3d6_jump
		mov    $0x000001,%eax
		jg     _03d3d6_jump
		neg    %eax

	_03d3d6_jump:
		add    %ax,_0d7610_data
		mov    _0d7610_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03d3f9_jump
		mov    $0x000001,%eax
		jg     _03d3f9_jump
		neg    %eax

	_03d3f9_jump:
		mov    _0d7612_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0d7612_data
		mov    0x00002c(%esi),%dx
		mov    _0d7612_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0d7610_data,%di
		movswl %dx,%eax
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    0x00006c(%esi),%bl
		movswl %dx,%ebp
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _03d4e0_func
		movb   $0x000000,0x000076(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d448_jump:
		mov    _0d7612_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _03d465_jump
		mov    $0x000001,%eax
		jg     _03d465_jump
		neg    %eax

	_03d465_jump:
		mov    _0d7614_data,%dx
		add    %eax,%edx
		mov    _0d7614_data,%eax
		mov    %dx,_0d7614_data
		movswl %di,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _03d492_jump
		mov    $0x000001,%eax
		jg     _03d492_jump
		neg    %eax

	_03d492_jump:
		mov    _0d7616_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0d7616_data
		mov    0x00002c(%esi),%dx
		mov    _0d7616_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0d7614_data,%ax
		movswl %dx,%ebp
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %eax,%edx
		mov    0x00006c(%esi),%bl
		movswl %dx,%eax
		mov    %ebp,%edx
		call   _03d4e0_func
		movb   $0x000000,0x000076(%esi)

	_03d4d7_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d4e0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x000008(%esp)
		mov    %edx,%edi
		mov    %bx,0x000004(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %edx,%edx
		xor    %eax,%eax

	_03d507_jump:
		xor    %esi,%esi
		mov    0x000060(%ecx),%si
		cmp    $0x000021,%esi
		jne    _03d51d_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _03d51d_jump
		mov    $0x000001,%edx

	_03d51d_jump:
		movswl %dx,%esi
		add    $0x000084,%ecx
		inc    %eax
		test   %esi,%esi
		jne    _03d530_jump
		cmp    %bx,%ax
		jl     _03d507_jump

	_03d530_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		je     _03d5b6_jump
		mov    %ecx,(%esp)
		xor    %edx,%edx

	_03d544_jump:
		xor    %esi,%esi
		mov    0x000060(%ecx),%si
		cmp    $0x000021,%esi
		jne    _03d55a_jump
		cmpl   $0x000001,0x000024(%ecx)
		jne    _03d55a_jump
		mov    $0x000001,%edx

	_03d55a_jump:
		movswl %dx,%esi
		add    $0x000084,%ecx
		inc    %eax
		test   %esi,%esi
		jne    _03d56d_jump
		cmp    %bx,%ax
		jl     _03d544_jump

	_03d56d_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		je     _03d5ae_jump
		xor    %edx,%edx

	_03d57a_jump:
		xor    %esi,%esi
		mov    0x000060(%ecx),%si
		cmp    $0x000021,%esi
		jne    _03d590_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _03d590_jump
		mov    $0x000001,%edx

	_03d590_jump:
		movswl %dx,%esi
		add    $0x000084,%ecx
		inc    %eax
		test   %esi,%esi
		jne    _03d5a3_jump
		cmp    %bx,%ax
		jl     _03d57a_jump

	_03d5a3_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		jne    _03d5b6_jump

	_03d5ae_jump:
		mov    $0x000001,%edx
		mov    (%esp),%ecx

	_03d5b6_jump:
		test   %dx,%dx
		je     _03d610_jump
		mov    0x000081(%ecx),%ah
		or     $0x000004,%ah
		mov    0x000024(%ecx),%ebp
		mov    %ah,0x000081(%ecx)
		test   %ebp,%ebp
		jne    _03d5d8_jump
		mov    %ecx,%eax
		call   _01f7d4_func

	_03d5d8_jump:
		movl   $0x000001,0x000024(%ecx)
		mov    0x000006(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		movswl %di,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%bl
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d6f8_func

	_03d610_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03d618_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _03d642_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000005,%edx
		jne    _03d642_jump
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    

	_03d642_jump:
		call   _02d750_func
		pop    %edx
		ret    



_03d64c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0c1ba2_data,%bx
		movswl %bx,%eax
		cmp    $0x00000a,%eax
		jge    _03d68e_jump
		cmp    $0xffffffff,%eax
		jne    _03d67d_jump
		mov    $0x000001,%eax
		call   _02baec_func
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _03d6ae_jump
		jmp    _03d6a5_jump

	_03d67d_jump:
		xor    %eax,%eax
		call   _02baec_func
		mov    %bx,_0c1ba2_data
		pop    %edx
		pop    %ebx
		ret    

	_03d68e_jump:
		mov    $0x000001,%eax
		call   _02baec_func
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _03d6ae_jump

	_03d6a5_jump:
		movw   $0x00000a,_0c1ba2_data

	_03d6ae_jump:
		pop    %edx
		pop    %ebx
		ret    



_03d6b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%si
		xor    %eax,%eax
		test   %si,%si
		jg     _03d6e3_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d6d3_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %si,%ax
		jge    _03d835_jump

	_03d6e3_jump:
		movswl %bx,%ecx
		test   %ecx,%ecx
		jne    _03d78e_jump
		mov    0x000060(%edx),%cx
		cmp    $0x0000d1,%ecx
		jne    _03d78e_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03d78e_jump
		movb   $0x000004,0x00007e(%edx)
		xor    %eax,%eax
		mov    $0x000005,%ebx
		mov    0x000068(%edx),%al
		movl   $0x000064,0x00002c(%edx)
		sub    %eax,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		xor    %ebx,%ebx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0189c4_func
		movswl %ax,%ecx
		movw   $0x000000,0x000040(%edx)
		sub    %ebx,%ecx
		mov    %ecx,0x00002c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f7d4_func
		mov    0x000034(%edx),%ax
		mov    $0x000002,%dl
		mov    %ax,_0d761e_data
		mov    %dl,_0d7628_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d78e_jump:
		movswl %bx,%ecx
		cmp    $0x000001,%ecx
		jne    _03d6d3_jump
		xor    %ecx,%ecx
		mov    0x000060(%edx),%cx
		cmp    $0x0000d2,%ecx
		jne    _03d6d3_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03d6d3_jump
		movb   $0x000004,0x00007e(%edx)
		xor    %ecx,%ecx
		mov    $0x0000f0,%eax
		mov    0x000068(%edx),%cl
		movl   $0x000064,0x00002c(%edx)
		sub    %ecx,%eax
		mov    %eax,0x000028(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		xor    %ecx,%ecx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%cl
		call   _0189c4_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		cwtl   
		mov    0x000081(%edx),%bl
		movl   $0x000001,0x000024(%edx)
		sub    %ecx,%eax
		or     $0x000004,%bl
		mov    %eax,0x00002c(%edx)
		mov    %bl,0x000081(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    $0x000002,%bh
		call   _01f7d4_func
		mov    0x000034(%edx),%ax
		mov    %bh,_0d7628_data
		mov    %ax,_0d761c_data

	_03d835_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d83c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%esi
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%di
		xor    %eax,%eax
		xor    %ebx,%ebx
		test   %di,%di
		jg     _03d871_jump
		jmp    _03d992_jump

	_03d861_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %di,%bx
		jge    _03d992_jump

	_03d871_jump:
		movswl %ax,%ecx
		test   %ecx,%ecx
		jne    _03d8f4_jump
		mov    0x000060(%edx),%cx
		cmp    $0x00006c,%ecx
		jne    _03d8f4_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03d8f4_jump
		movb   $0x000004,0x00007e(%edx)
		movl   $0x000140,0x000028(%edx)
		mov    _0c24ac_data,%ecx
		movw   $0x000000,0x000040(%edx)
		sar    $0x000010,%ecx
		mov    0x000028(%edx),%ax
		add    $0x000064,%ecx
		mov    %ax,0x00003c(%edx)
		mov    %ecx,0x00002c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ebx,%esi
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f7d4_func
		movb   $0x000000,0x000076(%edx)
		mov    $0x000001,%eax
		movw   $0x000000,0x000050(%edx)
		jmp    _03d861_jump

	_03d8f4_jump:
		movswl %ax,%ecx
		cmp    $0x000001,%ecx
		jne    _03d861_jump
		xor    %ecx,%ecx
		mov    0x000060(%edx),%cx
		cmp    $0x00006c,%ecx
		jne    _03d861_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03d861_jump
		movb   $0x000004,0x00007e(%edx)
		movl   $0xffffffec,0x000028(%edx)
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		mov    _0c24ac_data,%ecx
		movl   $0x000001,0x000024(%edx)
		sar    $0x000010,%ecx
		mov    0x000028(%edx),%ax
		add    $0x000064,%ecx
		mov    %ax,0x00003c(%edx)
		mov    %ecx,0x00002c(%edx)
		mov    0x000081(%edx),%cl
		mov    0x00002c(%edx),%ax
		or     $0x000004,%cl
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f7d4_func
		movb   $0x000001,0x000076(%edx)
		movw   $0x000000,0x000050(%edx)
		movswl %si,%ecx
		mov    %si,0x000052(%edx)
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %edx,%ecx
		mov    _0c1b34_data,%edx
		shl    $0x000002,%ecx
		mov    %bx,0x000052(%ecx,%edx,1)

	_03d992_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d998_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    0x000076(%eax),%ah
		test   %ah,%ah
		jne    _03d9d0_jump
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%dx
		mov    _0d769c_data,%di
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		mov    _0d769e_data,%bx
		jmp    _03d9f6_jump

	_03d9d0_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    0x000068(%esi),%al
		mov    _0d76a0_data,%di
		add    %ecx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		mov    _0d76a2_data,%bx
		add    %edx,%eax

	_03d9f6_jump:
		sub    %eax,%ebx
		cmpw   $0x000000,0x000050(%esi)
		je     _03db86_jump
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		cmpw   $0x000000,0x000050(%eax)
		je     _03db86_jump
		cmpl   $0x000000,0x000024(%esi)
		je     _03da97_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _03da97_jump
		xor    %edx,%edx
		mov    0x000028(%esi),%ebp
		mov    0x000068(%esi),%dl
		add    %ebp,%edx
		mov    0x000028(%eax),%ebp
		mov    0x000068(%eax),%al
		add    %ebp,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		sar    %eax
		mov    _0c1ef0_data,%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp
		mov    0x000068(%edx),%al
		sub    %eax,%ebp
		mov    %ebp,0x000028(%edx)
		mov    0x000050(%esi),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,%eax
		shl    $0x000005,%eax
		add    %ebp,%eax
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%cl
		add    %ebp,%ecx
		mov    0x00002c(%eax),%ebp
		mov    0x000069(%eax),%al
		add    %ebp,%ecx
		and    $0x0000ff,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		sar    %ecx
		jmp    _03db28_jump

	_03da97_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _03dacc_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0c1ef0_data,%eax
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		sub    %ecx,%edx
		mov    %edx,0x000028(%eax)
		xor    %edx,%edx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000069(%eax),%cl
		sub    %ecx,%edx
		mov    %edx,0x00002c(%eax)
		jmp    _03db30_jump

	_03dacc_jump:
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _03db30_jump
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000028(%eax),%eax
		add    %edx,%eax
		mov    _0c1ef0_data,%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp
		mov    0x000068(%edx),%al
		sub    %eax,%ebp
		mov    %ebp,0x000028(%edx)
		mov    0x000050(%esi),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,%eax
		shl    $0x000005,%eax
		add    %ebp,%eax
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%ecx
		add    %eax,%ecx
		xor    %eax,%eax

	_03db28_jump:
		mov    0x000069(%edx),%al
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edx)

	_03db30_jump:
		xor    %eax,%eax
		mov    _0c1b74_data,%edx
		mov    _0c1bb4_data,%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sar    %edx
		lea    (%eax,%edx,1),%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%ecx
		mov    %cx,_0d769c_data
		xor    %ecx,%ecx
		mov    _0c1bb5_data,%cl
		mov    _0c1b78_data,%ebp
		sar    %ecx
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		sub    %edx,%eax
		mov    (%esp),%ecx
		mov    %ax,_0d76a0_data
		mov    %cx,_0d769e_data
		mov    %cx,_0d76a2_data
		jmp    _03dbc6_jump

	_03db86_jump:
		testb  $0x000001,_0c3314_data
		jne    _03dbc6_jump
		mov    _0c1ef0_data,%eax
		mov    0x000028(%eax),%dx
		add    $0x000040,%edx
		mov    %dx,_0d769c_data
		mov    0x00002c(%eax),%dx
		add    $0x000032,%edx
		mov    0x000028(%eax),%ax
		mov    %dx,_0d769e_data
		add    $0x000030,%eax
		mov    %dx,_0d76a2_data
		mov    %ax,_0d76a0_data

	_03dbc6_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _03dbcf_jump
		neg    %eax

	_03dbcf_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		mov    %edx,%ecx
		test   %eax,%eax
		jge    _03dbdc_jump
		neg    %eax

	_03dbdc_jump:
		add    %eax,%ecx
		movswl %cx,%eax
		cmp    $0x000002,%eax
		jge    _03dc19_jump
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _03dc19_jump
		movw   $0x000001,0x000050(%esi)
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _03dc19_jump
		movw   $0x000001,0x000050(%eax)

	_03dc19_jump:
		movswl %cx,%ebp
		test   %ebp,%ebp
		jle    _03dc40_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_03dc40_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03dc59_jump
		mov    $0x000001,%eax
		jg     _03dc59_jump
		neg    %eax

	_03dc59_jump:
		lea    (%edx,%eax,1),%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jle    _03dc67_jump
		mov    %ebx,%eax

	_03dc67_jump:
		mov    %eax,%ebx
		mov    $0xffffffd8,%eax
		cmp    %ebx,%eax
		jge    _03dc74_jump
		mov    %ebx,%eax

	_03dc74_jump:
		mov    0x00003e(%esi),%edx
		mov    %ax,0x000042(%esi)
		sar    $0x000010,%edx
		movswl %di,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03dc91_jump
		mov    $0x000001,%eax
		jg     _03dc91_jump
		neg    %eax

	_03dc91_jump:
		lea    (%edx,%eax,1),%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jle    _03dc9f_jump
		mov    %ebx,%eax

	_03dc9f_jump:
		mov    %eax,%ebx
		mov    $0xffffffd8,%eax
		cmp    %ebx,%eax
		jge    _03dcac_jump
		mov    %ebx,%eax

	_03dcac_jump:
		mov    %ax,0x000040(%esi)
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03dcd6_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _03dcd6_jump
		orb    $0x000008,0x000081(%esi)
		jmp    _03dcfd_jump

	_03dcd6_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03dcfd_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _03dcfd_jump
		andb   $0x0000f7,0x000081(%esi)

	_03dcfd_jump:
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%edx
		sub    $0x0000c8,%eax
		cmp    %edx,%eax
		jle    _03dd27_jump
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%esi)

	_03dd27_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03dd34_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpw   $0x000000,0x000050(%eax)
		je     _03ddee_jump
		mov    0x000050(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		cmpw   $0x000000,0x000050(%ebx,%eax,4)
		je     _03ddee_jump
		movw   $0x000000,0x000050(%edx)
		mov    _0c3314_data,%ah
		mov    0x000050(%edx),%edx
		or     $0x000001,%ah
		sar    $0x000010,%edx
		mov    %ah,_0c3314_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    $0x00000a,%esi
		movw   $0x000000,0x000050(%ebx,%eax,4)
		mov    _0c24ae_data,%ax
		mov    $0x00012c,%edi
		sub    $0x0000c8,%eax
		mov    %si,_0d769c_data
		mov    %ax,_0d769e_data
		mov    %ax,_0d76a2_data
		mov    _0c1ef0_data,%eax
		mov    %di,_0d76a0_data
		call   _070a70_func
		mov    _0c1ef0_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		mov    $0x000001,%dh
		movb   $0x000008,0x00006e(%eax)
		mov    %dh,_0d76a8_data

	_03ddee_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_03de00_switch:
		.long   _03de63_case
		.long   _03de95_case
		.long   _03dead_case
		.long   _03deb9_case

_03de10_switch:
		.long   _03ded1_case
		.long   _03df03_case
		.long   _03df1b_case
		.long   _03df27_case

_03de20_switch:
		.long   _03df3f_case
		.long   _03df66_case
		.long   _03df72_case
		.long   _03df7e_case

_03de30_switch:
		.long   _03df8a_case
		.long   _03dfa7_case
		.long   _03dfc4_case
		.long   _03dfd5_case




_03de40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cd04c_data,%ax
		cmp    $0x000003,%ax
		ja     _03de78_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_03de00_switch(,%eax,4)

	_03de63_case:
		mov    $_03e200_func,%ebp
		mov    $_03e008_jump,%eax
		mov    %ebp,_0cd03c_data
		mov    %eax,_095f20_data

	_03de78_jump:
		mov    _0cd04e_data,%ax
		cmp    $0x000003,%ax
		ja     _03dee6_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_03de10_switch(,%eax,4)

	_03de95_case:
		mov    $_03e268_func,%esi
		mov    $_03e008_jump,%edi
		mov    %esi,_0cd03c_data
		mov    %edi,_095f24_data
		jmp    _03de78_jump

	_03dead_case:
		movl   $_03e2d0_func,_0cd03c_data
		jmp    _03de78_jump

	_03deb9_case:
		mov    $_03e338_func,%edx
		mov    $_03e008_jump,%ebx
		mov    %edx,_0cd03c_data
		mov    %ebx,_095f28_data
		jmp    _03de78_jump

	_03ded1_case:
		mov    $_03e200_func,%ebp
		mov    $_03dff4_jump,%eax
		mov    %ebp,_0cd040_data
		mov    %eax,_095f20_data

	_03dee6_jump:
		mov    _0cd050_data,%ax
		cmp    $0x000003,%ax
		ja     _03df49_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_03de20_switch(,%eax,4)

	_03df03_case:
		mov    $_03e268_func,%esi
		mov    $_03dff4_jump,%edi
		mov    %esi,_0cd040_data
		mov    %edi,_095f24_data
		jmp    _03dee6_jump

	_03df1b_case:
		movl   $_03e2d0_func,_0cd040_data
		jmp    _03dee6_jump

	_03df27_case:
		mov    $_03e338_func,%edx
		mov    $_03dff4_jump,%ebx
		mov    %edx,_0cd040_data
		mov    %ebx,_095f28_data
		jmp    _03dee6_jump

	_03df3f_case:
		movl   $_03e200_func,_0cd044_data

	_03df49_jump:
		mov    _0cd052_data,%ax
		cmp    $0x000003,%ax
		ja     _03dfeb_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_03de30_switch(,%eax,4)

	_03df66_case:
		movl   $_03e268_func,_0cd044_data
		jmp    _03df49_jump

	_03df72_case:
		movl   $_03e2d0_func,_0cd044_data
		jmp    _03df49_jump

	_03df7e_case:
		movl   $_03e338_func,_0cd044_data
		jmp    _03df49_jump

	_03df8a_case:
		mov    $_03e200_func,%ecx
		mov    $_03e01c_jump,%esi
		mov    %ecx,_0cd048_data
		mov    %esi,_095f20_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03dfa7_case:
		mov    $_03e268_func,%edx
		mov    $_03e01c_jump,%ebx
		mov    %edx,_0cd048_data
		mov    %ebx,_095f24_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03dfc4_case:
		movl   $_03e2d0_func,_0cd048_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03dfd5_case:
		mov    $_03e338_func,%edi
		mov    $_03e01c_jump,%ebp
		mov    %edi,_0cd048_data
		mov    %ebp,_095f28_data

	_03dfeb_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03dff4_jump:
		xor    %eax,%eax
		mov    _095b06_data,%al
		nop



_03dffc_func:
		and    $0x0000ff,%eax
		mov    _0d76b4_data(%eax),%al
		ret    

	_03e008_jump:
		xor    %eax,%eax
		mov    _095b07_data,%al
		and    $0x0000ff,%eax
		mov    _0d76b4_data(%eax),%al
		ret    

	_03e01c_jump:
		xor    %eax,%eax
		mov    _095b08_data,%al
		and    $0x0000ff,%eax
		mov    _0d76b4_data(%eax),%al
		ret    



_03e030_func:
		push   %edx
		xor    %eax,%eax
		mov    _0ce81f_data,%al
		xor    %edx,%edx
		cmp    $0x000002,%eax
		jne    _03e053_jump
		mov    _0ce840_data,%ax
		cmp    _0d773c_data,%ax
		setle  %al
		xor    %dh,%dh
		mov    %al,%dl

	_03e053_jump:
		xor    %eax,%eax
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _03e08d_jump
		xor    %eax,%eax
		mov    _095b04_data,%al
		call   _03dffc_func
		test   %al,%al
		je     _03e086_jump
		xor    %eax,%eax
		mov    _095b02_data,%al
		call   _03dffc_func
		test   %al,%al
		jne    _03e086_jump
		mov    $0x000001,%eax
		jmp    _03e088_jump

	_03e086_jump:
		xor    %eax,%eax

	_03e088_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_03e08d_jump:
		cmpb   $0x000000,_0c6971_data
		je     _03e09d_jump
		mov    _0d774a_data,%dx

	_03e09d_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_03e0a4_func:
		push   %edx
		xor    %eax,%eax
		mov    _0ce81f_data,%al
		xor    %edx,%edx
		cmp    $0x000002,%eax
		jne    _03e0c7_jump
		mov    _0ce840_data,%ax
		cmp    _0d773e_data,%ax
		setge  %al
		xor    %dh,%dh
		mov    %al,%dl

	_03e0c7_jump:
		xor    %eax,%eax
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _03e101_jump
		xor    %eax,%eax
		mov    _095b02_data,%al
		call   _03dffc_func
		test   %al,%al
		je     _03e0fa_jump
		xor    %eax,%eax
		mov    _095b04_data,%al
		call   _03dffc_func
		test   %al,%al
		jne    _03e0fa_jump
		mov    $0x000001,%eax
		jmp    _03e0fc_jump

	_03e0fa_jump:
		xor    %eax,%eax

	_03e0fc_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_03e101_jump:
		cmpb   $0x000000,_0c6971_data
		je     _03e111_jump
		mov    _0d774c_data,%dx

	_03e111_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_03e118_func:
		push   %edx
		xor    %eax,%eax
		mov    _0ce81f_data,%al
		xor    %edx,%edx
		cmp    $0x000002,%eax
		jne    _03e13b_jump
		mov    _0ce842_data,%ax
		cmp    _0d7742_data,%ax
		setge  %al
		xor    %dh,%dh
		mov    %al,%dl

	_03e13b_jump:
		xor    %eax,%eax
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _03e175_jump
		xor    %eax,%eax
		mov    _095b05_data,%al
		call   _03dffc_func
		test   %al,%al
		je     _03e16e_jump
		xor    %eax,%eax
		mov    _095b03_data,%al
		call   _03dffc_func
		test   %al,%al
		jne    _03e16e_jump
		mov    $0x000001,%eax
		jmp    _03e170_jump

	_03e16e_jump:
		xor    %eax,%eax

	_03e170_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_03e175_jump:
		cmpb   $0x000000,_0c6971_data
		je     _03e185_jump
		mov    _0d774e_data,%dx

	_03e185_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_03e18c_func:
		push   %edx
		xor    %eax,%eax
		mov    _0ce81f_data,%al
		xor    %edx,%edx
		cmp    $0x000002,%eax
		jne    _03e1af_jump
		mov    _0ce842_data,%ax
		cmp    _0d7740_data,%ax
		setle  %al
		xor    %dh,%dh
		mov    %al,%dl

	_03e1af_jump:
		xor    %eax,%eax
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _03e1e9_jump
		xor    %eax,%eax
		mov    _095b03_data,%al
		call   _03dffc_func
		test   %al,%al
		je     _03e1e2_jump
		xor    %eax,%eax
		mov    _095b05_data,%al
		call   _03dffc_func
		test   %al,%al
		jne    _03e1e2_jump
		mov    $0x000001,%eax
		jmp    _03e1e4_jump

	_03e1e2_jump:
		xor    %eax,%eax

	_03e1e4_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_03e1e9_jump:
		cmpb   $0x000000,_0c6971_data
		je     _03e1f9_jump
		mov    _0d7750_data,%dx

	_03e1f9_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_03e200_func:
		push   %edx
		mov    _0c1b24_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _03e265_jump
		xor    %eax,%eax
		mov    _0ce81f_data,%al
		test   %eax,%eax
		jne    _03e239_jump
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _03e235_jump
		call   *_095f20_data
		test   %al,%al
		je     _03e235_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_03e235_jump:
		xor    %eax,%eax
		pop    %edx
		ret    

	_03e239_jump:
		mov    _0c6994_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _03e25c_jump
		xor    %eax,%eax
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _03e263_jump
		call   *_095f20_data
		test   %al,%al
		je     _03e263_jump

	_03e25c_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_03e263_jump:
		xor    %eax,%eax

	_03e265_jump:
		pop    %edx
		ret    



_03e268_func:
		push   %edx
		mov    _0c1b24_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _03e2cd_jump
		xor    %eax,%eax
		mov    _0ce81f_data,%al
		test   %eax,%eax
		jne    _03e2a1_jump
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _03e29d_jump
		call   *_095f24_data
		test   %al,%al
		je     _03e29d_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_03e29d_jump:
		xor    %eax,%eax
		pop    %edx
		ret    

	_03e2a1_jump:
		mov    _0c6996_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _03e2c4_jump
		xor    %eax,%eax
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _03e2cb_jump
		call   *_095f24_data
		test   %al,%al
		je     _03e2cb_jump

	_03e2c4_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_03e2cb_jump:
		xor    %eax,%eax

	_03e2cd_jump:
		pop    %edx
		ret    



_03e2d0_func:
		push   %edx
		mov    _0c1b24_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _03e335_jump
		xor    %eax,%eax
		mov    _0ce81f_data,%al
		test   %eax,%eax
		jne    _03e309_jump
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _03e305_jump
		call   *_095f28_data
		test   %al,%al
		je     _03e305_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_03e305_jump:
		xor    %eax,%eax
		pop    %edx
		ret    

	_03e309_jump:
		mov    _0c6998_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _03e32c_jump
		xor    %eax,%eax
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _03e333_jump
		call   *_095f28_data
		test   %al,%al
		je     _03e333_jump

	_03e32c_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_03e333_jump:
		xor    %eax,%eax

	_03e335_jump:
		pop    %edx
		ret    



_03e338_func:
		push   %edx
		mov    _0c1b24_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _03e360_jump
		cmpb   $0x000000,_0ce81f_data
		je     _03e360_jump
		mov    _0c699a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		sete   %al
		xor    %ah,%ah

	_03e360_jump:
		pop    %edx
		ret    



_03e364_func:
		push   %edx
		mov    _0c1b24_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _03e39f_jump
		mov    _0d7752_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _03e396_jump
		xor    %eax,%eax
		mov    _0c6995_data,%al
		cmp    $0x000001,%eax
		jne    _03e39d_jump
		call   *_095f28_data
		test   %al,%al
		je     _03e39d_jump

	_03e396_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_03e39d_jump:
		xor    %eax,%eax

	_03e39f_jump:
		pop    %edx
		ret    



_03e3a4_func:
		push   %edx
		mov    _0c1b24_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _03e3c3_jump
		mov    _0d7756_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		sete   %al
		xor    %ah,%ah

	_03e3c3_jump:
		pop    %edx
		ret    



_03e3c8_func:
		mov    %ax,_0d7748_data
		ret    



_03e3d0_func:
		call   *_0d7738_data
		ret    



_03e554_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		push   $0x000180
		push   $0x000200
		push   %eax
		call   _07abb6_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		jne    _03e589_jump
		push   %ebx
		push   $_0c0088_data
		call   _0798fc_func
		add    $0x000008,%esp
		call   _079935_func
		pop    %ecx
		pop    %ebx
		ret    

	_03e589_jump:
		mov    %ecx,%eax
		call   _07ae04_func
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _0750ac_func
		mov    %eax,0x000010(%edx)
		mov    %ebx,0x00000c(%edx)
		mov    %ecx,%eax
		mov    0x000010(%edx),%edx
		call   _07ae41_func
		mov    %ecx,%eax
		call   _07af54_func
		pop    %ecx
		pop    %ebx
		ret    



_03e5b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000064,%esp
		mov    %eax,%ebp
		call   _03a354_func
		push   $_0c00a1_data
		call   _0798fc_func
		add    $0x000004,%esp
		mov    $_0c009c_data,%esi
		push   %esi
		push   $_0c00d1_data
		xor    %edx,%edx
		call   _0798fc_func
		add    $0x000008,%esp

	_03e5e6_jump:
		movswl %dx,%ebx
		call   _07af59_func
		mov    %al,(%esp,%ebx,1)
		and    $0x0000ff,%eax
		inc    %edx
		cmp    $0x00000d,%eax
		je     _03e601_jump
		cmp    $0x00001b,%eax
		jne    _03e5e6_jump

	_03e601_jump:
		dec    %edx
		movswl %dx,%eax
		xor    %dl,%dl
		mov    %dl,(%esp,%eax,1)
		xor    %eax,%eax
		mov    (%esp),%al
		test   %eax,%eax
		jne    _03e62f_jump
		mov    %esp,%edi
		push   %edi

	_03e616_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03e62e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03e616_jump

	_03e62e_jump:
		pop    %edi

	_03e62f_jump:
		mov    $_0c00f0_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03e63f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03e657_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03e63f_jump

	_03e657_jump:
		pop    %edi
		mov    %ebp,%edx
		mov    %esp,%eax
		call   _03e554_func
		xor    %eax,%eax
		mov    $_0c799c_data,%esi
		mov    _0c7998_data,%al
		mov    $0x0000ff,%ecx
		call   _03a230_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		add    $0x000064,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e69c_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,_0c699c_data
		mov    %dx,_0c699a_data
		mov    %dx,_0c6996_data
		test   $0x000001,%al
		je     _03e6c4_jump
		movw   $0x000001,_0c6996_data

	_03e6c4_jump:
		test   $0x000002,%al
		je     _03e6d1_jump
		movw   $0x000001,_0c699a_data

	_03e6d1_jump:
		test   $0x000004,%al
		je     _03e6da_jump
		mov    $0x000001,%ebx

	_03e6da_jump:
		test   $0x000008,%al
		je     _03e6e3_jump
		mov    $0x000001,%ebx

	_03e6e3_jump:
		test   $0x000010,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0d774a_data
		test   $0x000020,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0d774c_data
		test   $0x000040,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0d7750_data
		test   $0x000080,%al
		setne  %dl
		mov    %dx,_0d774e_data
		mov    %bx,_0c6998_data
		pop    %edx
		pop    %ebx
		ret    



_03e724_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0c6996_data,%ax
		mov    %ax,_0d7752_data
		mov    _0c6998_data,%ax
		mov    %ax,_0d7754_data
		mov    _0c699a_data,%ax
		mov    %ax,_0d7756_data
		mov    _0c699c_data,%ax
		mov    %ax,_0d7758_data
		mov    0x000015(%edx),%ah
		mov    (%edx),%ebx
		test   %ah,%ah
		je     _03e828_jump
		test   %ebx,%ebx
		jne    _03e7bb_jump
		mov    _0c258e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _03e788_jump
		cmpb   $0x000000,_0cdb18_data
		jne    _03e788_jump
		mov    %edx,%eax
		call   _03e5b4_func

	_03e788_jump:
		mov    %ebx,%ecx
		mov    0x000010(%edx),%eax
		movl   $0x000000,0x000008(%edx)
		inc    %ebx
		mov    (%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _03e69c_func
		mov    0x000010(%edx),%eax
		mov    (%ebx,%eax,1),%al
		movb   $0x000000,0x000016(%edx)
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)
		mov    %eax,0x000004(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e7bb_jump:
		mov    0x000008(%edx),%ecx
		inc    %ecx
		mov    0x000004(%edx),%esi
		mov    %ecx,0x000008(%edx)
		cmp    %esi,%ecx
		jne    _03e817_jump
		xor    %eax,%eax
		mov    0x000016(%edx),%al
		cmp    $0x000001,%eax
		je     _03e7db_jump
		lea    0x000001(%ebx),%eax
		cmp    0x00000c(%edx),%eax
		jb     _03e7fd_jump

	_03e7db_jump:
		xor    %eax,%eax
		mov    _0cdb18_data,%al
		movb   $0x000000,0x000015(%edx)
		cmp    $0x000001,%eax
		jne    _03e817_jump
		movb   $0x000002,_0cdb18_data
		movw   $0x000001,_0c251e_data
		jmp    _03e817_jump

	_03e7fd_jump:
		add    $0x000002,%ebx
		mov    0x000010(%edx),%eax
		movl   $0x000000,0x000008(%edx)
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)
		mov    %eax,0x000004(%edx)

	_03e817_jump:
		mov    0x000010(%edx),%eax
		mov    -0x000001(%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _03e69c_func

	_03e828_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e830_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _079cb8_func
		mov    $0x000060,%edx
		cli    
		sub    %eax,%eax
		in     (%dx),%al
		xor    %edx,%edx
		mov    _0cdb18_data,%dl
		xor    %bh,%bh
		cmp    $0x000001,%edx
		jne    _03e862_jump
		movb   $0x000003,_0cdb18_data

	_03e862_jump:
		mov    _0d7734_data,%bl
		cmp    $0x000001,%bl
		jb     _03e927_jump
		jbe    _03e89c_jump
		cmp    $0x000002,%bl
		je     _03e8b8_jump
		jmp    _03e91d_jump

	_03e87d_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x0000e1,%edx
		jne    _03e895_jump
		movb   $0x000001,_0d7734_data
		jmp    _03e8e3_jump

	_03e895_jump:
		mov    $0x000001,%bh
		jmp    _03e8e3_jump

	_03e89c_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00001d,%edx
		jne    _03e8ae_jump
		movb   $0x000002,_0d7734_data
		jmp    _03e8e3_jump

	_03e8ae_jump:
		xor    %cl,%cl
		mov    %cl,_0d7734_data
		jmp    _03e8e3_jump

	_03e8b8_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000045,%edx
		jne    _03e8db_jump
		cmpb   $0x000000,_0c11ae_data
		je     _03e8db_jump
		mov    _0c6994_data,%dh
		test   %dh,%dh
		sete   %ah
		mov    %ah,_0c6994_data

	_03e8db_jump:
		xor    %bl,%bl
		mov    %bl,_0d7734_data

	_03e8e3_jump:
		test   %bh,%bh
		je     _03e8fb_jump
		mov    %al,%ah
		and    $0x000080,%ah
		xor    $0x000080,%ah
		xor    %edx,%edx
		and    $0x00007f,%al
		mov    %al,%dl
		mov    %ah,_0d76b4_data(%edx)

	_03e8fb_jump:
		mov    $0x000061,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %eax,%ebx
		or     $0x000080,%al
		out    %al,(%dx)
		mov    %bl,%al
		out    %al,(%dx)
		mov    $0x000020,%al
		mov    $0x000020,%edx
		out    %al,(%dx)
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   

	_03e91d_jump:
		xor    %ah,%ah
		mov    %ah,_0d7734_data
		jmp    _03e8e3_jump

	_03e927_jump:
		test   %bl,%bl
		je     _03e87d_jump
		xor    %ah,%ah
		mov    %ah,_0d7734_data
		jmp    _03e8e3_jump



_03e94c_func:
		push   %edx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000080,%edx
		jl     _03e95d_jump
		pop    %edx
		ret    

	_03e95d_jump:
		xor    %ah,%ah
		mov    %ah,_0d76b4_data(%edx)
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000080,%edx
		jl     _03e95d_jump
		pop    %edx
		ret    



_03e978_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _03e94c_func
		mov    $0x000009,%eax
		call   _07ab1d_func
		mov    %eax,_0d76ac_data
		xor    %eax,%eax
		mov    _0c6995_data,%al
		mov    %dx,_0d76b0_data
		cmp    $0x000001,%eax
		jne    _03e9b3_jump
		mov    $_03e830_func,%ebx
		mov    $0x000009,%eax
		mov    %cs,%ecx
		call   _07ab51_func

	_03e9b3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e9b8_func:
		push   %ebx
		push   %ecx
		mov    $0x000009,%eax
		mov    _0d76b0_data,%cx
		mov    _0d76ac_data,%ebx
		call   _07ab51_func
		pop    %ecx
		pop    %ebx
		ret    



_03e9d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0c6b76_data
		je     _03e9ed_jump
		xor    %eax,%eax
		mov    _0ce870_data,%al
		test   %eax,%eax
		je     _03ea0a_jump

	_03e9ed_jump:
		xor    %bl,%bl
		mov    $_016039_func,%edx
		mov    %bl,_0ce81d_data
		xor    %bh,%bh
		mov    %edx,_0d7738_data
		mov    %bl,_0ce81b_data
		jmp    _03ea30_jump

	_03ea0a_jump:
		mov    $0x000001,%bl
		mov    $_015e41_func,%edx
		mov    $_016225_func,%ecx
		mov    %bl,_0ce81d_data
		mov    %edx,_0d7738_data
		xor    %bh,%bh
		mov    %ecx,_0cdf44_data
		mov    %bh,_0ce81b_data

	_03ea30_jump:
		call   _0161c3_func
		test   %eax,%eax
		jne    _03ead2_jump
		call   _0161f4_func
		test   %eax,%eax
		jne    _03ead2_jump
		mov    _0ce81b_data,%bh
		mov    _0d7738_data,%edx
		xor    %cl,%cl
		xor    %esi,%esi
		xor    %edi,%edi
		xor    %eax,%eax
		mov    _0ce81d_data,%bl
		mov    %cl,_0ce81f_data
		mov    %si,_0ce840_data
		mov    %di,_0c699c_data
		mov    %ax,_0c699a_data
		mov    %si,_0c6996_data
		mov    %di,_0d7758_data
		mov    %ax,_0d7756_data
		mov    %si,_0d7752_data
		mov    %di,_0d773e_data
		mov    %ax,_0d773c_data
		mov    %si,_0d7740_data
		xor    %ch,%ch
		xor    %al,%al
		mov    %cx,_0ce842_data
		mov    %cx,_0c6998_data
		mov    %cx,_0d7754_data
		mov    %cx,_0d7742_data
		jmp    _03eb57_jump

	_03ead2_jump:
		xor    %eax,%eax
		mov    _0ce81f_data,%al
		test   %eax,%eax
		jne    _03eae4_jump
		movb   $0x000001,_0ce81f_data

	_03eae4_jump:
		call   _0161c3_func
		test   %eax,%eax
		je     _03eb22_jump
		cmpb   $0x000000,_0c6b76_data
		je     _03eb01_jump
		xor    %eax,%eax
		mov    _0ce870_data,%al
		test   %eax,%eax
		je     _03eb0c_jump

	_03eb01_jump:
		xor    %bl,%bl
		mov    $_016039_func,%edx
		xor    %bh,%bh
		jmp    _03eb55_jump

	_03eb0c_jump:
		mov    $0x000001,%bl
		mov    $_016225_func,%edi
		mov    $_015e41_func,%edx
		mov    %edi,_0cdf44_data
		xor    %bh,%bh
		jmp    _03eb55_jump

	_03eb22_jump:
		cmpb   $0x000000,_0c6b76_data
		je     _03eb36_jump
		xor    %eax,%eax
		mov    _0ce870_data,%al
		test   %eax,%eax
		je     _03eb41_jump

	_03eb36_jump:
		xor    %bl,%bl
		mov    $_0160f7_func,%edx
		mov    $0x000001,%bh
		jmp    _03eb55_jump

	_03eb41_jump:
		mov    $0x000001,%bl
		mov    $_015f3b_func,%edx
		mov    $_01640f_func,%esi
		mov    %bl,%bh
		mov    %esi,_0cdf44_data

	_03eb55_jump:
		mov    $0x000001,%al

	_03eb57_jump:
		mov    %bh,_0ce81b_data
		mov    %bl,_0ce81d_data
		mov    %edx,_0d7738_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03eb70_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%esi
		mov    %edx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    0x00003c(%esp),%ecx
		mov    %ebx,%eax
		mov    _0cdfc0_data,%edx
		lea    0x000000(,%edx,4),%ebp
		add    %edx,%ebp
		mov    _0cdfbc_data,%edx
		shl    $0x000006,%ebp
		add    %ebp,%edx
		mov    %edx,0x000018(%esp)
		mov    %esi,%edx
		sub    $0x000070,%edx
		mov    %esi,%ebp
		mov    %edx,0x000008(%esp)
		mov    0x000004(%esp),%edx
		sub    %ebx,%ebp
		sub    $0x000040,%edx
		sub    %ecx,%ebp
		mov    %edx,0x000010(%esp)
		cmp    %ecx,%ebx
		jle    _03ed35_jump
		lea    (%ebx,%ecx,1),%eax
		add    %eax,%eax
		mov    %eax,0x000020(%esp)
		test   %ebp,%ebp
		jge    _03ebdb_jump
		lea    (%eax,%ebp,1),%esi
		mov    %esi,0x000020(%esp)
		xor    %ebp,%ebp

	_03ebdb_jump:
		mov    0x000020(%esp),%eax
		add    %ebp,%eax
		cmp    $0x000140,%eax
		jl     _03ebf4_jump
		mov    $0x000140,%eax
		sub    %ebp,%eax
		dec    %eax
		mov    %eax,0x000020(%esp)

	_03ebf4_jump:
		cmpl   $0x000000,0x000020(%esp)
		jle    _03f03f_jump
		mov    0x000004(%esp),%ecx
		sub    (%esp),%ecx
		test   %ecx,%ecx
		jl     _03ec9f_jump
		cmp    $0x0000c8,%ecx
		jge    _03ec9f_jump
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%esi
		mov    0x000040(%esp),%ebx
		sub    %edx,%esi
		mov    0x000044(%esp),%eax
		add    %ebx,%esi
		mov    _0cdf91_data,%bh
		add    %eax,%edi
		test   %bh,%bh
		je     _03ec8a_jump
		sub    0x000010(%esp),%ecx
		lea    0x000000(,%ecx,8),%eax
		sub    %ecx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000008(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cdf94_data,%ebx
		shl    $0x000002,%eax
		mov    0x000020(%esp),%ecx
		add    %eax,%ebx

	_03ec79_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _03ec79_jump
		jmp    _03ec9f_jump

	_03ec8a_jump:
		mov    0x000020(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _03ec98_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_03ec98_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_03ec9f_jump:
		mov    0x000004(%esp),%ecx
		add    (%esp),%ecx
		test   %ecx,%ecx
		jl     _03f03f_jump
		cmp    $0x0000c8,%ecx
		jge    _03f03f_jump
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000040(%esp),%edx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000044(%esp),%ebx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0cdf91_data,%al
		add    %edx,%esi
		test   %al,%al
		je     _03ed2c_jump
		mov    0x000010(%esp),%eax
		mov    %ecx,%edx
		sub    %eax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x000008(%esp),%ebp
		add    %ebp,%eax
		mov    _0cdf94_data,%ebx
		shl    $0x000002,%eax
		mov    0x000020(%esp),%ecx
		add    %eax,%ebx

	_03ed18_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _03ed18_jump
		jmp    _03f03f_jump

	_03ed2c_jump:
		mov    0x000020(%esp),%ecx
		jmp    _03f02e_jump

	_03ed35_jump:
		lea    (%ebx,%ebx,1),%edx
		mov    %edx,0x000028(%esp)
		test   %ebp,%ebp
		jge    _03ed48_jump
		add    %ebp,%edx
		mov    %edx,0x000028(%esp)
		xor    %ebp,%ebp

	_03ed48_jump:
		mov    0x000028(%esp),%edx
		add    %ebp,%edx
		cmp    $0x000140,%edx
		jl     _03ed62_jump
		mov    $0x000140,%edx
		sub    %ebp,%edx
		dec    %edx
		mov    %edx,0x000028(%esp)

	_03ed62_jump:
		lea    (%eax,%eax,1),%edx
		sub    %eax,%esi
		add    %ecx,%esi
		mov    %edx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)
		test   %esi,%esi
		jge    _03ed82_jump
		lea    (%edx,%esi,1),%ecx
		xor    %esi,%esi
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)

	_03ed82_jump:
		mov    0x00001c(%esp),%eax
		add    0x000024(%esp),%eax
		cmp    $0x000140,%eax
		jl     _03ed9f_jump
		mov    $0x000140,%eax
		sub    0x00001c(%esp),%eax
		dec    %eax
		mov    %eax,0x000024(%esp)

	_03ed9f_jump:
		mov    0x000004(%esp),%eax
		mov    (%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jl     _03eeeb_jump
		cmp    $0x0000c8,%eax
		jge    _03eeeb_jump
		cmpl   $0x000000,0x000028(%esp)
		jle    _03ee51_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000044(%esp),%ebx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000040(%esp),%edx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0cdf91_data,%ah
		add    %edx,%esi
		test   %ah,%ah
		je     _03ee3c_jump
		mov    0x00000c(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000008(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cdf94_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_03ee2b_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _03ee2b_jump
		jmp    _03ee51_jump

	_03ee3c_jump:
		mov    0x000028(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _03ee4a_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_03ee4a_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_03ee51_jump:
		mov    0x000024(%esp),%ecx
		test   %ecx,%ecx
		jle    _03eeeb_jump
		mov    0x00000c(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    0x00001c(%esp),%edi
		shl    $0x000006,%eax
		add    %eax,%edi
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000040(%esp),%edx
		sub    %eax,%esi
		mov    0x000044(%esp),%ebx
		add    %edx,%esi
		mov    _0cdf91_data,%dl
		add    %ebx,%edi
		test   %dl,%dl
		je     _03eeda_jump
		mov    0x00000c(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000008(%esp),%ebx
		mov    0x00001c(%esp),%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cdf94_data,%ebx
		shl    $0x000002,%eax
		mov    0x000024(%esp),%ecx
		add    %eax,%ebx

	_03eec9_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _03eec9_jump
		jmp    _03eeeb_jump

	_03eeda_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _03eee4_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_03eee4_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_03eeeb_jump:
		mov    0x000004(%esp),%eax
		mov    (%esp),%ecx
		add    %ecx,%eax
		mov    %eax,0x000014(%esp)
		test   %eax,%eax
		jl     _03f03f_jump
		cmp    $0x0000c8,%eax
		jge    _03f03f_jump
		cmpl   $0x000000,0x000028(%esp)
		jle    _03ef9f_jump
		mov    0x000014(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		mov    0x000040(%esp),%ebx
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%esi
		mov    0x000044(%esp),%ecx
		sub    %edx,%esi
		add    %ecx,%edi
		mov    _0cdf91_data,%dh
		add    %ebx,%esi
		test   %dh,%dh
		je     _03ef8a_jump
		mov    0x000014(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x000008(%esp),%ebp
		add    %ebp,%eax
		mov    _0cdf94_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_03ef79_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _03ef79_jump
		jmp    _03ef9f_jump

	_03ef8a_jump:
		mov    0x000028(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _03ef98_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_03ef98_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_03ef9f_jump:
		cmpl   $0x000000,0x000024(%esp)
		jle    _03f03f_jump
		mov    0x000014(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    0x000018(%esp),%ecx
		shl    $0x000006,%eax
		mov    0x000040(%esp),%ebp
		add    %eax,%edi
		mov    _0cdf91_data,%bl
		mov    %edi,%esi
		mov    0x000044(%esp),%eax
		sub    %ecx,%esi
		add    %eax,%edi
		add    %ebp,%esi
		test   %bl,%bl
		je     _03f02a_jump
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000008(%esp),%ecx
		mov    0x00001c(%esp),%edx
		sub    %ecx,%edx
		add    %edx,%eax
		mov    _0cdf94_data,%ebx
		shl    $0x000002,%eax
		mov    0x000024(%esp),%ecx
		add    %eax,%ebx

	_03f012_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _03f012_jump
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_03f02a_jump:
		mov    0x000024(%esp),%ecx

	_03f02e_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _03f038_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_03f038_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_03f03f_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_03f048_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		xor    %ebp,%ebp
		test   %ebx,%ebx
		jl     _03f0d8_jump
		mov    $0x000001,%edx
		add    %ebx,%ebx
		sub    %edx,%ebx
		mov    %edx,0x00000c(%esp)
		mov    %ebx,0x000010(%esp)

	_03f074_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    0x000028(%esp),%ecx
		mov    0x000008(%esp),%eax
		push   %ecx
		mov    0x000008(%esp),%edx
		mov    %edi,%ebx
		push   %eax
		mov    %esi,%ecx
		mov    0x000014(%esp),%eax
		call   _03eb70_func
		mov    0x000028(%esp),%edx
		push   %edx
		mov    0x000028(%esp),%ebx
		mov    0x000008(%esp),%ecx
		push   %ebx
		mov    0x000010(%esp),%eax
		mov    0x000008(%esp),%edx
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _03eb70_func
		mov    0x00000c(%esp),%eax
		add    %eax,%ebp
		lea    0x000002(%eax),%edx
		inc    %edi
		mov    %edx,0x00000c(%esp)
		cmp    %esi,%ebp
		jl     _03f0d4_jump
		mov    0x000010(%esp),%ebx
		sub    %ebx,%ebp
		lea    -0x000002(%ebx),%ecx
		dec    %esi
		mov    %ecx,0x000010(%esp)

	_03f0d4_jump:
		cmp    %esi,%edi
		jle    _03f074_jump

	_03f0d8_jump:
		cmpb   $0x000000,_0cdf9e_data
		je     _03f0e6_jump
		call   _03fa3c_func

	_03f0e6_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_03f0f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0d7764_data,%esi
		cmpb   $0x000000,_0cdf90_data
		je     _03f269_jump
		mov    $0x000004,%edx
		mov    $0x0000a1,%eax
		call   _07538c_func
		mov    $0x000004,%edx
		mov    %eax,%esi
		mov    $0x000041,%eax
		mov    %esi,_0d7764_data
		call   _07538c_func
		mov    $0x000004,%edx
		mov    %eax,_0d7768_data
		mov    $0x001400,%eax
		call   _07538c_func
		mov    $0x000004,%edx
		mov    %eax,_0d776c_data
		mov    $0x007161,%eax
		call   _07538c_func
		mov    _0d7764_data,%esi
		mov    %eax,_0cdf94_data
		test   %esi,%esi
		je     _03f17c_jump
		cmpl   $0x000000,_0d7768_data
		je     _03f17c_jump
		cmpl   $0x000000,_0d776c_data
		je     _03f17c_jump
		test   %eax,%eax
		jne    _03f1e3_jump

	_03f17c_jump:
		test   %esi,%esi
		je     _03f193_jump
		mov    %esi,%eax
		mov    %esi,_0d7764_data
		call   _07539c_func
		mov    _0d7764_data,%esi

	_03f193_jump:
		mov    _0d7768_data,%ecx
		mov    %esi,_0d7764_data
		test   %ecx,%ecx
		je     _03f1aa_jump
		mov    %ecx,%eax
		call   _07539c_func

	_03f1aa_jump:
		mov    _0d776c_data,%edi
		test   %edi,%edi
		je     _03f1bb_jump
		mov    %edi,%eax
		call   _07539c_func

	_03f1bb_jump:
		mov    _0cdf94_data,%ebp
		test   %ebp,%ebp
		je     _03f1cc_jump
		mov    %ebp,%eax
		call   _07539c_func

	_03f1cc_jump:
		xor    %dl,%dl
		mov    $_0c00f8_data,%eax
		mov    %dl,_0cdf90_data
		call   _01f878_func
		jmp    _03f269_jump

	_03f1e3_jump:
		mov    %esi,%ebx
		xor    %edi,%edi
		xor    %ebp,%ebp
		jmp    _03f1f4_jump

	_03f1eb_jump:
		inc    %edi
		add    $0x000004,%ebp
		cmp    $0x000040,%edi
		jg     _03f21b_jump

	_03f1f4_jump:
		mov    %edi,%edx
		imul   %edi,%edx
		mov    _0d7768_data,%eax
		mov    %edx,(%eax,%ebp,1)
		xor    %eax,%eax
		xor    %edx,%edx

	_03f205_jump:
		mov    %eax,%ecx
		imul   %eax,%ecx
		add    $0x000004,%edx
		inc    %eax
		mov    %ecx,-0x000004(%edx,%ebx,1)
		cmp    $0x0000a0,%eax
		jg     _03f1eb_jump
		jmp    _03f205_jump

	_03f21b_jump:
		xor    %edi,%edi
		xor    %ebp,%ebp
		mov    %esi,_0d7764_data

	_03f225_jump:
		mov    %edi,%eax
		mov    $0x3f500000,%ecx
		call   _079562_func
		xor    %ebx,%ebx
		call   _07a208_func
		call   _07975f_func
		call   _07af88_func
		mov    $0x40f00000,%ecx
		xor    %ebx,%ebx
		add    $0x000004,%ebp
		call   _07975f_func
		call   _07a21c_func
		mov    _0d776c_data,%edx
		inc    %edi
		mov    %eax,-0x000004(%edx,%ebp,1)
		cmp    $0x001400,%edi
		jl     _03f225_jump

	_03f269_jump:
		call   _03f27c_func
		mov    _0d7764_data,%esi
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f27c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cdf90_data,%ah
		test   %ah,%ah
		je     _03f29c_jump
		movb   $0x000001,_0cdf91_data
		movb   $0x000003,_0cdf9c_data
		jmp    _03f2aa_jump

	_03f29c_jump:
		mov    $0x000003,%dh
		mov    %ah,_0cdf91_data
		mov    %dh,_0cdf9c_data

	_03f2aa_jump:
		mov    $0x000019,%edx
		mov    $0x000057,%ebx
		mov    $0x000032,%ecx
		mov    $0x0000a0,%esi
		mov    $0x000064,%edi
		mov    $0x000a00,%ebp
		mov    $0x000640,%eax
		mov    %edx,_0cdfa8_data
		mov    %ebx,_0cdfac_data
		mov    %ecx,_0cdfb0_data
		mov    %esi,_0cdfb4_data
		mov    %edi,_0cdfb8_data
		mov    %ebp,_0d7794_data
		xor    %cl,%cl
		mov    %eax,_0d7798_data
		mov    %cl,_0cdf9d_data
		mov    %cl,_0ce4dc_data
		call   _03f8cc_func
		cmpb   $0x000000,_0cdf90_data
		je     _03f339_jump
		mov    _0cdfa8_data,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0cdf98_data
		call   _03fa3c_func

	_03f339_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f340_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cdfa8_data,%ebx
		add    %eax,%ebx
		mov    $0x000040,%eax
		cmp    %ebx,%eax
		jle    _03f357_jump
		mov    %ebx,%eax

	_03f357_jump:
		mov    %eax,%ebx
		mov    $0x000019,%eax
		cmp    %ebx,%eax
		jge    _03f364_jump
		mov    %ebx,%eax

	_03f364_jump:
		mov    %eax,_0cdfa8_data
		call   _03f8cc_func
		cmpb   $0x000000,_0cdf91_data
		je     _03f38c_jump
		test   %edx,%edx
		jle    _03f382_jump
		mov    $0xffffffbf,%eax
		jmp    _03f387_jump

	_03f382_jump:
		mov    $0x000041,%eax

	_03f387_jump:
		call   _03f970_func

	_03f38c_jump:
		pop    %edx
		pop    %ebx
		ret    



_03f390_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0d7784_data,%bx
		mov    _0cdfb4_data,%dx
		mov    _0d7788_data,%si
		sub    %edx,%ebx
		mov    _0cdfb8_data,%cx
		movswl %bx,%eax
		sub    %ecx,%esi
		test   %eax,%eax
		jge    _03f3be_jump
		neg    %eax

	_03f3be_jump:
		mov    %eax,%edx
		movswl %si,%eax
		test   %eax,%eax
		jge    _03f3c9_jump
		neg    %eax

	_03f3c9_jump:
		add    %edx,%eax
		movswl %ax,%edi
		test   %edi,%edi
		jle    _03f3f2_jump
		mov    $0x000006,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    $0x000006,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%esi

	_03f3f2_jump:
		mov    _0d778c_data,%edx
		movswl %bx,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03f40b_jump
		mov    $0x000001,%eax
		jg     _03f40b_jump
		neg    %eax

	_03f40b_jump:
		add    _0d778c_data,%eax
		mov    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _03f41c_jump
		mov    %ebx,%eax

	_03f41c_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _03f427_jump
		mov    %ebx,%eax

	_03f427_jump:
		mov    _0d7790_data,%ecx
		mov    %eax,_0d778c_data
		movswl %si,%eax
		sub    %ecx,%eax
		cmp    $0x000000,%eax
		je     _03f445_jump
		mov    $0x000001,%eax
		jg     _03f445_jump
		neg    %eax

	_03f445_jump:
		mov    _0d7790_data,%esi
		mov    $0x000010,%ebx
		add    %esi,%eax
		cmp    %ebx,%eax
		jle    _03f458_jump
		mov    %ebx,%eax

	_03f458_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _03f463_jump
		mov    %ebx,%eax

	_03f463_jump:
		mov    %eax,_0d7790_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f470_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03f482_jump
		mov    %ebx,%eax

	_03f482_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _03f48f_jump
		mov    %ebx,%eax

	_03f48f_jump:
		mov    _0cdf9d_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _03f4ea_jump
		mov    _0d779c_data,%ecx
		mov    _0d7794_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0d779c_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0c25ca_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _03f4ca_jump
		mov    %ebx,%eax

	_03f4ca_jump:
		mov    _0c25c8_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _03f4e0_jump
		mov    %ebx,%eax

	_03f4e0_jump:
		mov    %eax,_0d779c_data
		sar    $0x000004,%eax
		jmp    _03f519_jump

	_03f4ea_jump:
		mov    _0c24aa_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0c25ca_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03f506_jump
		mov    %ebx,%eax

	_03f506_jump:
		mov    _0c25c8_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _03f519_jump
		mov    %ebx,%eax

	_03f519_jump:
		mov    %ax,_0c24ac_data
		mov    _0d7794_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0d7794_data
		mov    %eax,_0cdfb4_data
		call   _03f8cc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f540_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03f552_jump
		mov    %ebx,%eax

	_03f552_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _03f55f_jump
		mov    %ebx,%eax

	_03f55f_jump:
		mov    _0cdf9d_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _03f5ba_jump
		mov    _0d77a0_data,%ecx
		mov    _0d7798_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0d77a0_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0c25ce_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _03f59a_jump
		mov    %ebx,%eax

	_03f59a_jump:
		mov    _0c25cc_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _03f5b0_jump
		mov    %ebx,%eax

	_03f5b0_jump:
		mov    %eax,_0d77a0_data
		sar    $0x000004,%eax
		jmp    _03f5e9_jump

	_03f5ba_jump:
		mov    _0c24ac_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0c25ce_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03f5d6_jump
		mov    %ebx,%eax

	_03f5d6_jump:
		mov    _0c25cc_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _03f5e9_jump
		mov    %ebx,%eax

	_03f5e9_jump:
		mov    %ax,_0c24ae_data
		mov    _0d7798_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0d7798_data
		mov    %eax,_0cdfb8_data
		call   _03f8cc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f610_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03f623_jump
		mov    %ebx,%eax

	_03f623_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _03f630_jump
		mov    %ebx,%eax

	_03f630_jump:
		mov    _0c25ca_data,%dx
		mov    %eax,%ecx
		mov    _0c24ac_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _03f64f_jump
		cmp    _0c25cc_data,%ax
		jne    _03f67d_jump

	_03f64f_jump:
		mov    _0c24ac_data,%ax
		cmp    _0c25ca_data,%ax
		jne    _03f662_jump
		test   %ecx,%ecx
		jg     _03f67d_jump

	_03f662_jump:
		mov    _0c24ac_data,%ax
		cmp    _0c25cc_data,%ax
		jne    _03f753_jump
		test   %ecx,%ecx
		jge    _03f753_jump

	_03f67d_jump:
		mov    _0cdfa8_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cdfb4_data,%edx
		cmp    %edx,%eax
		jge    _03f753_jump
		mov    $0x000140,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _03f753_jump
		testb  $0x000001,_0cdf9d_data
		je     _03f6ff_jump
		mov    _0d779c_data,%eax
		mov    _0d7794_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0d779c_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0c25ca_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _03f6df_jump
		mov    %ebx,%eax

	_03f6df_jump:
		mov    _0c25c8_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _03f6f5_jump
		mov    %ebx,%eax

	_03f6f5_jump:
		mov    %eax,_0d779c_data
		sar    $0x000004,%eax
		jmp    _03f730_jump

	_03f6ff_jump:
		mov    %ecx,%eax
		mov    _0c24aa_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0c25ca_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03f71d_jump
		mov    %ebx,%eax

	_03f71d_jump:
		mov    _0c25c8_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _03f730_jump
		mov    %ebx,%eax

	_03f730_jump:
		mov    %ax,_0c24ac_data
		mov    _0d7794_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0d7794_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0cdfb4_data

	_03f753_jump:
		call   _03f8cc_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f760_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03f773_jump
		mov    %ebx,%eax

	_03f773_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _03f780_jump
		mov    %ebx,%eax

	_03f780_jump:
		mov    _0c25ce_data,%dx
		mov    %eax,%ecx
		mov    _0c24ae_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _03f79f_jump
		cmp    _0c25d0_data,%ax
		jne    _03f7cd_jump

	_03f79f_jump:
		mov    _0c24ae_data,%ax
		cmp    _0c25ce_data,%ax
		jne    _03f7b2_jump
		test   %ecx,%ecx
		jg     _03f7cd_jump

	_03f7b2_jump:
		mov    _0c24ae_data,%ax
		cmp    _0c25d0_data,%ax
		jne    _03f8a3_jump
		test   %ecx,%ecx
		jge    _03f8a3_jump

	_03f7cd_jump:
		mov    _0cdfa8_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cdfb8_data,%edx
		cmp    %edx,%eax
		jge    _03f8a3_jump
		mov    $0x0000c8,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _03f8a3_jump
		testb  $0x000001,_0cdf9d_data
		je     _03f84f_jump
		mov    _0d77a0_data,%eax
		mov    _0d7798_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0d77a0_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0c25ce_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _03f82f_jump
		mov    %ebx,%eax

	_03f82f_jump:
		mov    _0c25cc_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _03f845_jump
		mov    %ebx,%eax

	_03f845_jump:
		mov    %eax,_0d77a0_data
		sar    $0x000004,%eax
		jmp    _03f880_jump

	_03f84f_jump:
		mov    %ecx,%eax
		mov    _0c24ac_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0c25ce_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03f86d_jump
		mov    %ebx,%eax

	_03f86d_jump:
		mov    _0c25cc_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _03f880_jump
		mov    %ebx,%eax

	_03f880_jump:
		mov    %ax,_0c24ae_data
		mov    _0d7798_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0d7798_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0cdfb8_data

	_03f8a3_jump:
		call   _03f8cc_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f8cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cdfa8_data,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		mov    %eax,%ebx
		sar    $0x00001f,%edx
		mov    %eax,_0cdfac_data
		sub    %edx,%eax
		sar    %eax
		mov    _0cdfa8_data,%esi
		add    %esi,%esi
		mov    %eax,%ecx
		mov    _0cdfb4_data,%eax
		mov    %esi,%edx
		sub    %ecx,%eax
		sar    $0x00001f,%edx
		mov    %eax,_0cdfbc_data
		mov    %esi,%eax
		sub    %edx,%eax
		sar    %eax
		mov    _0cdfb8_data,%edx
		sub    %eax,%edx
		mov    %edx,_0cdfc0_data
		lea    0x000002(%ecx),%edx
		mov    %dx,_0c25ca_data
		lea    0x000002(%eax),%edx
		mov    %dx,_0c25ce_data
		xor    %edx,%edx
		mov    _0cdf3c_data,%dx
		sub    %ecx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0c25cc_data
		xor    %edx,%edx
		mov    _0cdf3e_data,%dx
		sub    %eax,%edx
		sub    $0x000004,%edx
		mov    %esi,_0cdfb0_data
		mov    %dx,_0c25d0_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f970_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cdfa8_data,%edx
		mov    _0cdfa0_data,%ebx
		neg    %edx
		imul   %ebx,%edx
		mov    _0cdfa4_data,%ecx
		mov    _0cdf98_data,%esi
		add    %ecx,%edx
		cmp    %esi,%edx
		jne    _03f9a8_jump
		testb  $0x000002,_0cdf9d_data
		je     _03fa03_jump
		cmp    _0d7780_data,%esi
		je     _03fa03_jump

	_03f9a8_jump:
		cmpb   $0x000000,_0cdf90_data
		je     _03fa03_jump
		mov    _0cdfa8_data,%edx
		mov    _0cdf98_data,%ebx
		neg    %edx
		add    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		cmp    %ebx,%eax
		jle    _03f9dc_jump
		mov    %ebx,%eax

	_03f9dc_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		cmp    %ebx,%eax
		jge    _03f9e6_jump
		mov    %ebx,%eax

	_03f9e6_jump:
		mov    %eax,_0cdf98_data
		mov    $0x000001,%ah
		mov    %ah,_0cdf91_data
		mov    %ah,_0cdf9e_data
		call   _03f8cc_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fa03_jump:
		cmpl   $0x000000,_0cdf98_data
		je     _03fa29_jump
		cmpb   $0x000000,_0cdf90_data
		je     _03fa29_jump
		mov    $0x000001,%ch
		xor    %al,%al
		mov    %ch,_0cdf91_data
		mov    %al,_0cdf9e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fa29_jump:
		xor    %bh,%bh
		mov    %bh,_0cdf91_data
		mov    %bh,_0cdf9e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03fa3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0cdfa8_data,%ebx
		imul   %ebx,%ebx
		mov    $0x200000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000040,%edx
		sub    _0cdfa8_data,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cdf94_data,%edi
		shl    $0x000002,%eax
		lea    0x00e100(%edi,%eax,1),%edx
		mov    %edx,0x000014(%esp)
		lea    0x00037c(%edi),%edx
		sub    %eax,%edx
		add    $0x00df00,%edx
		mov    _0cdf90_data,%ah
		mov    %edx,0x000018(%esp)
		test   %ah,%ah
		je     _03fc86_jump
		xor    %dl,%dl
		mov    $0x007161,%ecx
		mov    %dl,_0cdf9e_data
		mov    $0x000000,%eax
		rep stos %eax,%es:(%edi)
		xor    %ecx,%ecx
		mov    %ecx,0x000020(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)

	_03facb_jump:
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%esi
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%esp)
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x00001c(%esp),%edi
		mov    0x00001c(%esp),%ebp
		mov    %eax,0x000010(%esp)
		neg    %edx
		add    0x000018(%esp),%ebp
		add    %esi,%edi
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    %ebp,0x000028(%esp)
		mov    %edi,0x000030(%esp)
		add    %edx,%eax
		mov    0x000014(%esp),%ebp
		mov    %eax,%ecx
		add    %ebp,%edx
		mov    %eax,0x00002c(%esp)
		mov    %edx,(%esp)
		jmp    _03fb7b_jump

	_03fb19_jump:
		mov    0x000004(%esp),%edi
		mov    0x000020(%esp),%ebp
		mov    0x000008(%esp),%eax
		mov    _0cdfa8_data,%edx
		add    $0x000004,%edi
		inc    %ebp
		add    $0x0000e0,%eax
		mov    %edi,0x000004(%esp)
		mov    %ebp,0x000020(%esp)
		mov    %eax,0x000008(%esp)
		cmp    %edx,%ebp
		ja     _03fc86_jump
		jmp    _03facb_jump

	_03fb4a_jump:
		mov    0x000028(%esp),%ebp
		mov    (%esp),%eax
		mov    0x00002c(%esp),%edx
		mov    0x000030(%esp),%edi
		sub    $0x000004,%ecx
		add    $0x000004,%esi
		inc    %ebx
		add    $0x000004,%ebp
		sub    $0x000004,%eax
		add    $0x000004,%edx
		sub    $0x000004,%edi
		mov    %ebp,0x000028(%esp)
		mov    %eax,(%esp)
		mov    %edx,0x00002c(%esp)
		mov    %edi,0x000030(%esp)

	_03fb7b_jump:
		mov    _0cdfac_data,%eax
		sub    _0cdfa8_data,%eax
		cmp    %eax,%ebx
		jae    _03fb19_jump
		lea    0x000000(,%ebx,4),%eax
		mov    %eax,0x000024(%esp)
		mov    0x000024(%esp),%edx
		mov    _0d7764_data,%eax
		mov    0x000010(%esp),%edi
		add    %eax,%edx
		mov    _0d7768_data,%eax
		add    %eax,%edi
		mov    (%edx),%eax
		mov    (%edi),%ebp
		mov    0x00000c(%esp),%edx
		add    %ebp,%eax
		imul   %edx,%eax
		cmp    $0x500000,%eax
		jae    _03fb4a_jump
		shr    $0x00000a,%eax
		mov    _0d776c_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0cdf98_data,%eax
		mov    (%edx),%edi
		mov    %eax,%edx
		imul   %edi,%edx
		mov    %ebx,%eax
		shr    $0x000010,%edx
		imul   %edx,%eax
		imul   0x000020(%esp),%edx
		add    $0x008000,%edx
		shr    $0x000010,%edx
		imul   $0x000140,%edx,%edx
		add    $0x008000,%eax
		shr    $0x000010,%eax
		test   %ebx,%ebx
		je     _03fc25_jump
		mov    0x000014(%esp),%edi
		add    0x000024(%esp),%edi
		sub    0x00001c(%esp),%edi
		mov    %edx,%ebp
		sub    %eax,%ebp
		add    %ebp,(%edi)
		mov    0x000018(%esp),%edi
		sub    0x000024(%esp),%edi
		add    0x00001c(%esp),%edi
		mov    %eax,%ebp
		sub    %edx,%ebp
		add    %ebp,(%edi)

	_03fc25_jump:
		cmpl   $0x000000,0x000020(%esp)
		je     _03fc3d_jump
		mov    %eax,%edi
		neg    %edi
		mov    (%esi),%ebp
		sub    %edx,%edi
		add    %edi,%ebp
		mov    %ebp,(%esi)
		lea    (%eax,%edx,1),%edi
		add    %edi,(%ecx)

	_03fc3d_jump:
		cmp    _0cdfa8_data,%ebx
		ja     _03fb4a_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _03fc66_jump
		lea    (%eax,%edx,1),%edi
		mov    (%esp),%ebp
		add    %edi,0x000000(%ebp)
		mov    %eax,%edi
		neg    %edi
		sub    %edx,%edi
		mov    0x000028(%esp),%ebp
		add    %edi,0x000000(%ebp)

	_03fc66_jump:
		test   %ebx,%ebx
		je     _03fb4a_jump
		mov    %eax,%edi
		mov    0x000030(%esp),%ebp
		sub    %edx,%edi
		sub    %eax,%edx
		mov    0x00002c(%esp),%eax
		add    %edi,0x000000(%ebp)
		add    %edx,(%eax)
		jmp    _03fb4a_jump

	_03fc86_jump:
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03fc90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c134a_data,%si
		mov    _0c1b28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _03fddc_jump
		mov    _0cdfb0_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		sar    $0x000002,%edx
		mov    _0c1bb5_data,%al
		sub    %eax,%edx
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000ff,%eax
		jne    _03fce9_jump
		mov    _0c25b4_data,%bx
		test   %bx,%bx
		je     _03fdac_jump

	_03fce9_jump:
		mov    _0c1b84_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _03fcff_jump
		sar    %cl,%ax
		jmp    _03fd08_jump

	_03fcff_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fd08_jump:
		mov    %ax,_0c24f2_data
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03fd1c_jump
		neg    %eax

	_03fd1c_jump:
		mov    %eax,%ebx
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03fd2c_jump
		neg    %eax

	_03fd2c_jump:
		cmp    %eax,%ebx
		jg     _03fddc_jump
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03fd42_jump
		neg    %eax

	_03fd42_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _03fd4f_jump
		mov    %ebx,%eax

	_03fd4f_jump:
		mov    %eax,%ebx
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03fd71_jump
		movswl %bx,%ebx
		cmp    %ebx,%eax
		jle    _03fd66_jump
		mov    %ebx,%eax

	_03fd66_jump:
		mov    %ax,_0c24f2_data
		jmp    _03fddc_jump

	_03fd71_jump:
		jge    _03fd86_jump
		movswl %bx,%ebx
		neg    %ebx
		cmp    %ebx,%eax
		jge    _03fd7e_jump
		mov    %ebx,%eax

	_03fd7e_jump:
		mov    %ax,_0c24f2_data
		jmp    _03fddc_jump

	_03fd86_jump:
		movswl %dx,%eax
		mov    _0c134a_data,%si
		test   %eax,%eax
		jle    _03fd9f_jump
		movw   $0x000001,_0c24f2_data
		jmp    _03fddc_jump

	_03fd9f_jump:
		jge    _03fddc_jump
		movw   $0x00ffff,_0c24f2_data
		jmp    _03fddc_jump

	_03fdac_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		je     _03fddc_jump
		mov    _0c1b82_data,%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		add    $0x000030,%edx
		cmp    %edx,%eax
		jge    _03fdd5_jump
		movw   $0x00fffc,_0c24f2_data
		jmp    _03fddc_jump

	_03fdd5_jump:
		mov    %bx,_0c24f2_data

	_03fddc_jump:
		mov    _0c1b26_data,%eax
		sar    $0x000010,%eax
		mov    _0c134a_data,%si
		cmp    $0xffffffff,%eax
		jne    _03fff2_jump
		mov    _0cdfac_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		xor    %ecx,%ecx
		mov    _0c1bb4_data,%cl
		sub    %ecx,%eax
		mov    _0cdfac_data,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		sub    %ecx,%eax
		mov    _0c25b2_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%edx
		test   %ecx,%ecx
		jg     _03fe55_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03fe95_jump

	_03fe55_jump:
		mov    _0c1b82_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		mov    %si,_0c134a_data
		test   %ax,%ax
		js     _03fe70_jump
		sar    %cl,%ax
		jmp    _03fe79_jump

	_03fe70_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fe79_jump:
		mov    _0c134a_data,%si
		cmp    %ax,%si
		jg     _03ff53_jump
		jge    _03ff54_jump
		inc    %esi
		jmp    _03ff54_jump

	_03fe95_jump:
		test   %ecx,%ecx
		jl     _03fe9d_jump
		test   %eax,%eax
		jge    _03fede_jump

	_03fe9d_jump:
		mov    _0c1b82_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		mov    %si,_0c134a_data
		test   %ax,%ax
		js     _03feb8_jump
		sar    %cl,%ax
		jmp    _03fec1_jump

	_03feb8_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fec1_jump:
		mov    _0c134a_data,%si
		cmp    %ax,%si
		jge    _03fed3_jump
		inc    %esi
		jmp    _03ff54_jump

	_03fed3_jump:
		jle    _03ff54_jump
		jmp    _03ff53_jump

	_03fede_jump:
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _03ff21_jump
		mov    _0c1b82_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _03ff07_jump
		sar    %cl,%ax
		jmp    _03ff10_jump

	_03ff07_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03ff10_jump:
		mov    _0c134a_data,%si
		cmp    %ax,%si
		jg     _03ff53_jump
		jge    _03ff54_jump
		inc    %esi
		jmp    _03ff54_jump

	_03ff21_jump:
		test   %eax,%eax
		jne    _03ff54_jump
		mov    _0c1b82_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _03ff39_jump
		sar    %cl,%ax
		jmp    _03ff42_jump

	_03ff39_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03ff42_jump:
		mov    _0c134a_data,%si
		cmp    %ax,%si
		jge    _03ff51_jump
		inc    %esi
		jmp    _03ff54_jump

	_03ff51_jump:
		jle    _03ff54_jump

	_03ff53_jump:
		dec    %esi

	_03ff54_jump:
		movswl %si,%eax
		mov    %si,_0c134a_data
		test   %eax,%eax
		jge    _03ff64_jump
		neg    %eax

	_03ff64_jump:
		mov    _0c134a_data,%si
		cmp    $0x000004,%eax
		jle    _03ff83_jump
		movswl %si,%eax
		test   %eax,%eax
		jle    _03ff7e_jump
		mov    $0x000004,%esi
		jmp    _03ff83_jump

	_03ff7e_jump:
		mov    $0xfffffffc,%esi

	_03ff83_jump:
		mov    $0x000002,%cl
		mov    %esi,%eax
		mov    %si,_0c134a_data
		test   %ax,%ax
		js     _03ff98_jump
		sar    %cl,%ax
		jmp    _03ffa1_jump

	_03ff98_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03ffa1_jump:
		mov    _0c24f0_data,%cx
		mov    _0c134a_data,%si
		add    %eax,%ecx
		mov    _0c1b82_data,%di
		mov    %cx,_0c24f0_data
		cmp    %di,%dx
		jle    _03ffd0_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _03ffe5_jump

	_03ffd0_jump:
		cmp    _0c1b82_data,%bx
		jge    _03fff2_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03fff2_jump

	_03ffe5_jump:
		mov    _0c1b8c_data,%ax
		add    %ax,_0c24f0_data

	_03fff2_jump:
		mov    %si,_0c134a_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040000_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdfac_data,%edi
		mov    _0cdfb0_data,%esi
		xor    %ecx,%ecx
		xor    %eax,%eax
		add    $0x000002,%esi
		add    $0x000002,%edi
		mov    %esi,%edx
		mov    %edi,%ebx
		call   _01666f_func
		push   %esi
		xor    %eax,%eax
		push   %edi
		mov    _0cdf3c_data,%ax
		push   %eax
		mov    _0cdfb0_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0c24ac_data,%ebx
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    _0cdfac_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0c24aa_data,%esi
		xor    %ecx,%ecx
		sar    $0x000010,%esi
		mov    _0cdf30_data,%edi
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		mov    _0c94f0_data,%esi
		call   _015225_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040080_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0cdfa8_data,%esi
		mov    %eax,%edi
		mov    %dx,(%esp)
		mov    _0c261c_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0c261b_data,%bl
		mov    _094a12_data(,%eax,4),%ebp
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		mov    _094a12_data(,%eax,4),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _0400d5_jump
		neg    %eax

	_0400d5_jump:
		mov    _0c261c_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0c261b_data,%bl
		mov    _094a14_data(,%eax,4),%ebp
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		mov    _094a14_data(,%eax,4),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _040116_jump
		neg    %eax

	_040116_jump:
		mov    $0x000001,%ah
		mov    %ah,0x000004(%esp)
		mov    %ah,0x000008(%esp)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cdf9c_data,%al
		xor    %ecx,%ecx
		cmp    $0x000004,%eax
		je     _040347_jump
		cmpw   $0x000000,_0c1b8c_data
		jne    _040177_jump
		cmpw   $0x000000,_0c1b8e_data
		jne    _040177_jump
		mov    $0x0000a0,%edx
		mov    _0cdfb4_data,%ecx
		mov    %edx,_0d7784_data
		sub    %ecx,%edx
		mov    $0x000064,%ebx
		shl    $0x000004,%edx
		mov    %ebx,_0d7788_data
		mov    %edx,%eax
		mov    %ebx,%ecx
		call   _03f470_func
		jmp    _04024c_jump

	_040177_jump:
		mov    _0c1b74_data,%edx
		xor    %eax,%eax
		mov    _0c25c8_data,%ebx
		mov    _0c1bb4_data,%al
		sar    $0x000010,%ebx
		add    %eax,%edx
		cmp    %ebx,%edx
		jle    _0401d4_jump
		mov    _0c25ca_data,%ebx
		sar    $0x000010,%ebx
		cmp    %ebx,%edx
		jge    _0401d4_jump
		mov    _0c1b80_data,%edx
		sar    $0x000010,%edx
		lea    (%edx,%eax,1),%ebx
		mov    _0cdfac_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ebx,%edx
		sub    %eax,%edx
		shl    $0x000004,%edx
		mov    %edx,%eax
		call   _03f610_func
		test   %eax,%eax
		je     _0401e9_jump
		xor    %bh,%bh
		mov    %bh,0x000004(%esp)
		jmp    _0401e9_jump

	_0401d4_jump:
		mov    $0x0000a0,%edx
		sub    _0cdfb4_data,%edx
		shl    $0x000004,%edx
		mov    %edx,%eax
		call   _03f470_func

	_0401e9_jump:
		mov    _0c1b78_data,%ebx
		xor    %eax,%eax
		mov    _0c25cc_data,%ecx
		mov    _0c1bb5_data,%al
		sar    $0x000010,%ecx
		add    %eax,%ebx
		cmp    %ecx,%ebx
		jle    _040247_jump
		mov    _0c25ce_data,%ecx
		sar    $0x000010,%ecx
		cmp    %ecx,%ebx
		jge    _040247_jump
		mov    _0c1b82_data,%ecx
		sar    $0x000010,%ecx
		mov    _0cdfb0_data,%ebx
		add    %eax,%ecx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		sar    $0x000002,%eax
		sub    %eax,%ecx
		shl    $0x000004,%ecx
		mov    %ecx,%eax
		call   _03f760_func
		test   %eax,%eax
		je     _04025c_jump
		xor    %al,%al
		mov    %al,0x000008(%esp)
		jmp    _04025c_jump

	_040247_jump:
		mov    $0x000064,%ecx

	_04024c_jump:
		sub    _0cdfb8_data,%ecx
		shl    $0x000004,%ecx
		mov    %ecx,%eax
		call   _03f540_func

	_04025c_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _040285_jump
		mov    $0x000001,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jle    _040271_jump
		mov    %ebx,%eax

	_040271_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _04027e_jump
		mov    %ebx,%eax

	_04027e_jump:
		add    %ax,_0c24ac_data

	_040285_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _0402b2_jump
		mov    -0x000002(%esp),%ebx
		mov    $0x000001,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _04029e_jump
		mov    %ebx,%eax

	_04029e_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _0402ab_jump
		mov    %ebx,%eax

	_0402ab_jump:
		add    %ax,_0c24ae_data

	_0402b2_jump:
		mov    _0c24ac_data,%ax
		mov    _0c25ca_data,%bx
		mov    _0cdfa8_data,%esi
		cmp    %bx,%ax
		jge    _0402df_jump
		mov    %ebx,%eax
		mov    %bx,_0c24ac_data
		xor    %ebx,%eax
		xor    %edi,%edi
		mov    %ax,_0c134a_data
		jmp    _0402fb_jump

	_0402df_jump:
		mov    _0c25cc_data,%bx
		cmp    %bx,%ax
		jle    _0402fb_jump
		xor    %edi,%edi
		mov    %bx,_0c24ac_data
		mov    %di,_0c134a_data

	_0402fb_jump:
		mov    _0c24ae_data,%ax
		mov    _0c25ce_data,%bx
		cmp    %bx,%ax
		jge    _04031e_jump
		mov    %ebx,%eax
		mov    %bx,_0c24ae_data
		mov    %esi,_0cdfa8_data
		jmp    _040339_jump

	_04031e_jump:
		mov    _0c25d0_data,%bx
		mov    %esi,_0cdfa8_data
		cmp    %bx,%ax
		jle    _040347_jump
		mov    %ebx,%eax
		mov    %bx,_0c24ae_data

	_040339_jump:
		xor    %ebx,%eax
		xor    %ebx,%ebx
		mov    %ax,_0c134c_data
		mov    %bx,(%esp)

	_040347_jump:
		mov    $_0c1b4c_data,%eax
		call   _0407b0_func
		cmpw   $0x000000,(%esp)
		jne    _04035f_jump
		andb   $0x0000fe,_0cdf9c_data

	_04035f_jump:
		mov    _0cdfa8_data,%esi
		test   %di,%di
		jne    _040371_jump
		andb   $0x0000fd,_0cdf9c_data

	_040371_jump:
		test   %edx,%edx
		jne    _040487_jump
		test   %ecx,%ecx
		jne    _040487_jump
		cmpw   $0x000000,_0c1b8e_data
		jne    _040487_jump
		cmpw   $0x000000,_0c1b8c_data
		jne    _040487_jump
		testb  $0x0000fb,_0cdf9c_data
		jne    _040487_jump
		mov    %esi,_0cdfa8_data
		cmp    $0x000040,%esi
		jge    _0403ca_jump
		xor    %eax,%eax
		mov    _0cdf9d_data,%al
		test   %eax,%eax
		jne    _0403ca_jump
		mov    $0x000001,%eax
		call   _03f340_func

	_0403ca_jump:
		mov    _0cdfa8_data,%esi
		mov    %esi,%eax
		mov    _0cdfa0_data,%ecx
		neg    %eax
		imul   %ecx,%eax
		mov    _0cdfa4_data,%edi
		mov    _0cdf98_data,%ebp
		add    %edi,%eax
		cmp    %ebp,%eax
		jae    _040401_jump
		xor    %eax,%eax
		mov    _0cdf9d_data,%al
		test   %eax,%eax
		jne    _040401_jump
		mov    $0xfffffed4,%eax
		jmp    _040436_jump

	_040401_jump:
		mov    _0cdfa8_data,%esi
		mov    %esi,%eax
		mov    _0cdfa0_data,%edx
		neg    %eax
		imul   %edx,%eax
		mov    _0cdfa4_data,%ebx
		mov    _0cdf98_data,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jbe    _04043b_jump
		xor    %eax,%eax
		mov    _0cdf9d_data,%al
		test   %eax,%eax
		jne    _04043b_jump
		mov    $0x00012c,%eax

	_040436_jump:
		call   _03f970_func

	_04043b_jump:
		mov    _0cdfa8_data,%esi
		mov    %esi,%eax
		mov    _0cdfa0_data,%edi
		neg    %eax
		imul   %edi,%eax
		mov    _0cdfa4_data,%ebp
		mov    _0cdf98_data,%edx
		add    %ebp,%eax
		cmp    %edx,%eax
		jne    _0404a2_jump
		cmp    $0x000040,%esi
		jne    _0404a2_jump
		xor    %edx,%eax
		mov    _0cdf9c_data,%al
		test   %eax,%eax
		jne    _0404a2_jump
		xor    %dl,%dl
		mov    %dl,_0cdf9d_data
		mov    $0x000004,%dh
		mov    %eax,_0d7770_data
		mov    %dh,_0cdf9c_data
		jmp    _0404a2_jump

	_040487_jump:
		cmpw   $0x000000,_0c1b8c_data
		jne    _04049b_jump
		cmpw   $0x000000,_0c1b8e_data
		je     _0404a2_jump

	_04049b_jump:
		andb   $0x0000fb,_0cdf9c_data

	_0404a2_jump:
		xor    %eax,%eax
		mov    _0cdf9c_data,%al
		cmp    $0x000004,%eax
		jne    _04079e_jump
		mov    _0d7770_data,%ecx
		inc    %ecx
		mov    %ecx,_0d7770_data
		cmp    $0x000276,%ecx
		jne    _0404e6_jump
		mov    _0cdf9d_data,%ah
		mov    $0x000019,%ebx
		or     $0x000004,%ah
		mov    %ebx,_0d777c_data
		mov    %ah,_0cdf9d_data
		jmp    _04062a_jump

	_0404e6_jump:
		cmp    $0x000258,%ecx
		jne    _04051d_jump
		mov    _0cdf9d_data,%al
		mov    %esi,%edx
		or     $0x000002,%al
		neg    %edx
		mov    %al,_0cdf9d_data
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0d7780_data
		jmp    _04062a_jump

	_04051d_jump:
		mov    _0cdf9d_data,%bh
		test   %bh,%bh
		je     _04062a_jump
		test   $0x000001,%bh
		jne    _04062a_jump
		cmp    $0x000019,%esi
		jne    _04062a_jump
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		mov    _0cdf98_data,%edx
		add    $0x007d96,%eax
		cmp    %edx,%eax
		jne    _04062a_jump
		mov    %bh,%ch
		mov    %esi,%eax
		mov    %esi,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,_0cdfa8_data
		lea    0x000140(%eax),%edx
		or     $0x000001,%ch
		sub    %eax,%edx
		mov    %ch,_0cdf9d_data
		movswl %dx,%eax
		mov    $0x000003,%ecx
		call   _061dd0_func
		mov    _0cdfa8_data,%esi
		movswl %ax,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		lea    (%eax,%ebx,1),%edx
		mov    %edx,_0d7774_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _061dd0_func
		mov    _0cdfa8_data,%esi
		movswl %ax,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		mov    %eax,_0d7778_data
		mov    _0d7774_data,%eax
		mov    %eax,_0d7784_data
		mov    _0d7778_data,%eax
		mov    %eax,_0d7788_data
		mov    _0c24aa_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0d779c_data
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0d77a0_data
		mov    _0cdfb4_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0d7794_data
		mov    _0cdfb8_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0d7798_data

	_04062a_jump:
		mov    _0cdf9d_data,%dl
		mov    %esi,_0cdfa8_data
		test   $0x000001,%dl
		je     _0406f2_jump
		call   _03f390_func
		mov    _0d778c_data,%eax
		call   _03f470_func
		mov    _0d7790_data,%eax
		call   _03f540_func
		mov    _0cdfb4_data,%eax
		cmp    _0d7774_data,%eax
		jne    _0406f2_jump
		mov    _0cdfb8_data,%eax
		cmp    _0d7778_data,%eax
		jne    _0406f2_jump
		mov    _0cdfa8_data,%esi
		mov    $0x000003,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000140(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _061dd0_func
		mov    _0cdfa8_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    (%eax,%ecx,1),%edx
		mov    %edx,_0d7774_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _061dd0_func
		mov    _0cdfa8_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %ecx,%eax
		mov    %eax,_0d7778_data
		mov    _0d7774_data,%eax
		mov    %eax,_0d7784_data
		mov    _0d7778_data,%eax
		mov    %eax,_0d7788_data

	_0406f2_jump:
		testb  $0x000002,_0cdf9d_data
		je     _04074c_jump
		mov    _0cdf98_data,%eax
		mov    _0d7780_data,%ebp
		cmp    %ebp,%eax
		jae    _04072b_jump
		mov    $0x00012c,%eax
		call   _03f970_func
		mov    _0cdf98_data,%eax
		mov    _0d7780_data,%ecx
		cmp    %ecx,%eax
		jbe    _04074c_jump
		mov    %ecx,_0cdf98_data
		jmp    _04074c_jump

	_04072b_jump:
		jbe    _04074c_jump
		mov    $0xfffffed4,%eax
		call   _03f970_func
		mov    _0cdf98_data,%eax
		mov    _0d7780_data,%ebx
		cmp    %ebx,%eax
		jae    _04074c_jump
		mov    %ebx,_0cdf98_data

	_04074c_jump:
		mov    _0cdf9d_data,%bl
		mov    _0cdfa8_data,%esi
		test   $0x000004,%bl
		je     _04079e_jump
		mov    _0d777c_data,%edi
		cmp    %edi,%esi
		jae    _04076e_jump
		mov    $0x000001,%eax
		jmp    _040775_jump

	_04076e_jump:
		jbe    _04079e_jump
		mov    $0xffffffff,%eax

	_040775_jump:
		call   _03f340_func
		mov    _0cdfa8_data,%esi
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0d7780_data

	_04079e_jump:
		mov    %esi,_0cdfa8_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0407b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c24ac_data,%bx
		mov    0x000028(%eax),%dx
		sub    %ebx,%edx
		mov    _0cdfb4_data,%bx
		add    $0x000008,%edx
		add    %edx,%ebx
		mov    _0cdfbc_data,%dx
		mov    _0c24ae_data,%cx
		sub    %edx,%ebx
		mov    0x00002c(%eax),%dx
		mov    %bx,0x000036(%eax)
		mov    _0cdfb8_data,%bx
		sub    %ecx,%edx
		add    %edx,%ebx
		mov    _0cdfc0_data,%dx
		sub    %edx,%ebx
		mov    %bx,0x000038(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040800_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0c1b8a_data,%eax
		mov    %dx,_0c24f0_data
		mov    %dx,_0c24f2_data
		sar    $0x000010,%eax
		mov    _0c1b74_data,%edx
		add    %eax,%edx
		mov    _0c1b8c_data,%ax
		mov    %ax,_0c25b4_data
		mov    _0c1b8c_data,%eax
		mov    _0c1b78_data,%ebx
		sar    $0x000010,%eax
		add    %eax,%ebx
		mov    %edx,_0c1b74_data
		mov    %ebx,_0c1b78_data
		pop    %edx
		pop    %ebx
		ret    

_040850_switch:
		.long   _04090f_case
		.long   _04090f_case
		.long   _040917_case
		.long   _04090f_case
		.long   _04090f_case
		.long   _04090f_case
		.long   _040917_case
		.long   _04090f_case
		.long   _04091f_case
		.long   _04090f_case
		.long   _040917_case




_04087c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    _0d77a4_data,%ecx
		movswl %dx,%ebx
		mov    0x00000c(%ecx),%esi
		movw   $0x000000,0x000002(%ecx)
		test   %ebx,%ebx
		jl     _0408a9_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0408a7_jump
		mov    %ebx,%eax

	_0408a7_jump:
		jmp    _0408b8_jump

	_0408a9_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0408b6_jump
		mov    %ebx,%eax

	_0408b6_jump:
		neg    %eax

	_0408b8_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000006(%ecx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0408cc_jump
		mov    %ebx,%eax

	_0408cc_jump:
		mov    $0x00000b,%ebx
		cmp    %ebx,%eax
		jle    _0408d7_jump
		mov    %ebx,%eax

	_0408d7_jump:
		mov    %al,0x000008(%ecx)
		mov    (%ecx),%ah
		xor    %dl,%dl
		test   %ah,%ah
		jbe    _040927_jump
		xor    %edi,%edi

	_0408e4_jump:
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x00000a,%eax,%eax
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %di,0x000004(%esi,%eax,1)
		mov    %bx,0x000006(%esi,%eax,1)
		mov    %di,(%esi,%eax,1)
		mov    %di,0x000002(%esi,%eax,1)
		inc    %dl
		mov    %di,0x000008(%esi,%eax,1)
		cmp    (%ecx),%dl
		jae    _040927_jump
		jmp    _0408e4_jump

	_04090f_case:
		movw   $0x0000c8,0x000004(%ecx)
		jmp    _04093d_jump

	_040917_case:
		movw   $0x000140,0x000004(%ecx)
		jmp    _04093d_jump

	_04091f_case:
		movw   $0x000064,0x000004(%ecx)
		jmp    _04093d_jump

	_040927_jump:
		mov    0x000008(%ecx),%al
		dec    %al
		cmp    $0x00000a,%al
		ja     _04090f_case
		and    $0x0000ff,%eax
		jmp    *%cs:_040850_switch(,%eax,4)

	_04093d_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_040948_case:
		push   %ebx
		push   %edx
		mov    _0d77a4_data,%eax
		test   %eax,%eax
		je     _040972_jump
		mov    0x00000c(%eax),%edx
		test   %edx,%edx
		je     _040961_jump
		mov    %edx,%eax
		call   _07539c_func

	_040961_jump:
		mov    _0d77a4_data,%ebx
		test   %ebx,%ebx
		je     _040972_jump
		mov    %ebx,%eax
		call   _07539c_func

	_040972_jump:
		pop    %edx
		pop    %ebx
		ret    



_040978_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ebx,%esi
		mov    %ecx,%ebp
		xor    %bl,%bl
		test   %esi,%esi
		je     _0409ef_jump
		test   %ecx,%ecx
		je     _0409ef_jump
		mov    $0x000018,%eax
		call   _075384_func
		mov    %eax,%edx
		mov    %eax,_0d77a4_data
		test   %eax,%eax
		je     _0409ef_jump
		mov    $0x00fa00,%ecx
		mov    _0cdf30_data,%edi
		movb   $0x0000c8,(%eax)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0409c1_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0409c1_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cdf30_data,%eax
		movzbl (%edx),%esi
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		add    %eax,%eax
		mov    %ebp,0x000014(%edx)
		call   _075384_func
		mov    %eax,0x00000c(%edx)
		test   %eax,%eax
		je     _0409ef_jump
		mov    $0x000001,%bl

	_0409ef_jump:
		test   %bl,%bl
		je     _040a07_jump
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000004(%esp),%al
		sar    $0x000010,%edx
		call   _04087c_func
		jmp    _040a0c_jump

	_040a07_jump:
		call   _040948_case

	_040a0c_jump:
		mov    %bl,%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_040a18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0d77a4_data,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000008(%esp)
		mov    %ebx,0x000004(%esp)
		mov    0x00000c(%eax),%edx
		jmp    _040a41_jump

	_040a35_jump:
		mov    0x000004(%esp),%eax
		inc    %eax
		add    $0x00000a,%edx
		mov    %eax,0x000004(%esp)

	_040a41_jump:
		mov    0x000008(%esp),%ebx
		xor    %eax,%eax
		mov    0x000004(%esp),%ecx
		mov    (%ebx),%al
		cmp    %ecx,%eax
		jle    _040b07_jump
		mov    0x000006(%edx),%ecx
		mov    0x000004(%edx),%edi
		mov    (%edx),%esi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%esi
		test   %ecx,%ecx
		jle    _040a35_jump
		test   %esi,%esi
		jl     _040a35_jump
		cmp    $0x0000c8,%esi
		jge    _040a35_jump
		test   %edi,%edi
		jl     _040a35_jump
		cmp    $0x0000c8,%edi
		jge    _040a35_jump
		movswl (%edx),%eax
		test   %eax,%eax
		jge    _040a8d_jump
		add    %eax,%ecx
		xor    %eax,%eax

	_040a8d_jump:
		lea    (%eax,%ecx,1),%ebx
		cmp    $0x000140,%ebx
		jle    _040a9f_jump
		mov    $0x000140,%ecx
		sub    %eax,%ecx

	_040a9f_jump:
		test   %ecx,%ecx
		jle    _040a35_jump
		mov    0x000002(%edx),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jge    _040ab1_jump
		add    %ebx,%ecx
		xor    %ebx,%ebx

	_040ab1_jump:
		lea    (%ebx,%ecx,1),%ebp
		cmp    $0x000140,%ebp
		jle    _040ac3_jump
		mov    $0x000140,%ecx
		sub    %ebx,%ecx

	_040ac3_jump:
		test   %ecx,%ecx
		jle    _040a35_jump
		imul   $0x000140,%edi,%edi
		imul   $0x000140,%esi,%esi
		mov    %edi,(%esp)
		mov    0x000008(%esp),%edi
		mov    (%esp),%ebp
		mov    0x000014(%edi),%edi
		add    %ebp,%edi
		add    %ebx,%edi
		mov    0x000008(%esp),%ebx
		add    0x000010(%ebx),%esi
		add    %eax,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _040afb_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_040afb_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		jmp    _040a35_jump

	_040b07_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_040b14_switch:
		.long   _040b87_case
		.long   _040b87_case
		.long   _040b87_case
		.long   _040b87_case
		.long   _040b87_case
		.long   _040b87_case
		.long   _040b87_case
		.long   _040b87_case
		.long   _040d6c_case
		.long   _040c5b_case
		.long   _040cf5_case




_040b40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0d77a4_data,%ebp
		mov    0x000004(%ebp),%eax
		sar    $0x000010,%eax
		mov    0x00000c(%ebp),%edx
		test   %eax,%eax
		jl     _040b69_jump
		mov    0x000004(%ebp),%bx
		sub    0x000002(%ebp),%bx
		jmp    _040b6d_jump

	_040b69_jump:
		mov    0x000002(%ebp),%bx

	_040b6d_jump:
		mov    0x000008(%ebp),%al
		dec    %al
		cmp    $0x00000a,%al
		ja     _040f3c_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_040b14_switch(,%eax,4)

	_040b87_case:
		xor    %eax,%eax
		mov    0x000008(%ebp),%al
		cmp    $0x000001,%eax
		je     _040b9b_jump
		cmp    $0x000002,%eax
		je     _040b9b_jump
		cmp    $0x000008,%eax
		jne    _040b9f_jump

	_040b9b_jump:
		mov    %ebx,%ecx
		jmp    _040ba1_jump

	_040b9f_jump:
		xor    %ecx,%ecx

	_040ba1_jump:
		xor    %eax,%eax
		mov    0x000008(%ebp),%al
		cmp    $0x000005,%eax
		je     _040bb5_jump
		cmp    $0x000004,%eax
		je     _040bb5_jump
		cmp    $0x000006,%eax
		jne    _040bbb_jump

	_040bb5_jump:
		mov    %ebx,%eax
		neg    %eax
		jmp    _040bbd_jump

	_040bbb_jump:
		mov    %ecx,%eax

	_040bbd_jump:
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000008(%ebp),%al
		cmp    $0x000003,%eax
		je     _040bd3_jump
		cmp    $0x000002,%eax
		je     _040bd3_jump
		cmp    $0x000004,%eax
		jne    _040bd7_jump

	_040bd3_jump:
		mov    %ebx,%eax
		jmp    _040bd9_jump

	_040bd7_jump:
		xor    %eax,%eax

	_040bd9_jump:
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x000008(%ebp),%al
		cmp    $0x000007,%eax
		je     _040bf1_jump
		cmp    $0x000008,%eax
		je     _040bf1_jump
		cmp    $0x000006,%eax
		jne    _040bf5_jump

	_040bf1_jump:
		mov    %ebx,%eax
		jmp    _040bf7_jump

	_040bf5_jump:
		xor    %eax,%eax

	_040bf7_jump:
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000008(%ebp),%al
		cmp    $0x000001,%eax
		je     _040c0a_jump
		cmp    $0x000005,%eax
		jne    _040c0e_jump

	_040c0a_jump:
		xor    %ebx,%ebx
		jmp    _040c10_jump

	_040c0e_jump:
		neg    %ebx

	_040c10_jump:
		add    $0x000140,%ebx
		xor    %esi,%esi
		movswl %si,%eax
		cmp    $0x0000c8,%eax
		jl     _040c27_jump
		jmp    _040f6c_jump

	_040c27_jump:
		imul   $0x00000a,%eax,%eax
		mov    0x00000c(%esp),%edi
		mov    %di,0x000004(%edx,%eax,1)
		mov    %si,0x000006(%edx,%eax,1)
		mov    %cx,0x000002(%edx,%eax,1)
		mov    %bx,0x000008(%edx,%eax,1)
		mov    0x000008(%esp),%edi
		inc    %ecx
		inc    %esi
		mov    %di,(%edx,%eax,1)
		movswl %si,%eax
		cmp    $0x0000c8,%eax
		jl     _040c27_jump
		jmp    _040f6c_jump

	_040c5b_case:
		xor    %esi,%esi
		mov    %ebx,%eax
		mov    %si,0x000028(%esp)
		neg    %eax
		mov    $0x000001,%esi
		mov    %eax,0x000018(%esp)
		jmp    _040ce1_jump

	_040c71_jump:
		movswl %si,%eax
		imul   $0x00000a,%eax,%eax
		imul   $0x00000a,%ecx,%ecx
		movw   $0x000000,0x000004(%edx,%eax,1)
		mov    0x000004(%edx,%eax,1),%di
		mov    %di,0x000004(%ecx,%edx,1)
		mov    0x000028(%esp),%edi
		mov    %di,0x000006(%ecx,%edx,1)
		movw   $0x000000,(%edx,%eax,1)
		mov    %si,0x000006(%edx,%eax,1)
		mov    (%edx,%eax,1),%di
		mov    %di,(%ecx,%edx,1)
		mov    %bx,0x000002(%ecx,%edx,1)
		mov    0x000018(%esp),%edi
		movw   $0x000140,0x000008(%edx,%eax,1)
		mov    %di,0x000002(%edx,%eax,1)
		add    $0x000002,%esi
		mov    0x000008(%edx,%eax,1),%ax
		add    $0x000002,%ebx
		mov    %ax,0x000008(%ecx,%edx,1)
		mov    0x000028(%esp),%eax
		add    $0x000002,%edi
		add    $0x000002,%eax
		mov    %edi,0x000018(%esp)
		mov    %ax,0x000028(%esp)

	_040ce1_jump:
		mov    0x000026(%esp),%ecx
		sar    $0x000010,%ecx
		cmp    $0x0000c8,%ecx
		jl     _040c71_jump
		jmp    _040f6c_jump

	_040cf5_case:
		mov    $0x000140,%eax
		sub    %ebx,%eax
		mov    $0x000001,%ecx
		mov    %eax,0x000010(%esp)
		xor    %esi,%esi
		mov    0x000010(%esp),%edi
		movswl %si,%eax
		cmp    $0x0000c8,%eax
		jl     _040d1a_jump
		jmp    _040f6c_jump

	_040d1a_jump:
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,0x000004(%edx,%eax,1)
		mov    %si,0x000006(%edx,%eax,1)
		mov    %bx,(%edx,%eax,1)
		mov    %si,0x000002(%edx,%eax,1)
		mov    %di,0x000008(%edx,%eax,1)
		movswl %cx,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,(%edx,%eax,1)
		mov    %bx,0x000004(%edx,%eax,1)
		mov    %cx,0x000006(%edx,%eax,1)
		mov    %cx,0x000002(%edx,%eax,1)
		add    $0x000002,%esi
		mov    %di,0x000008(%edx,%eax,1)
		add    $0x000002,%ecx
		movswl %si,%eax
		cmp    $0x0000c8,%eax
		jl     _040d1a_jump
		jmp    _040f6c_jump

	_040d6c_case:
		xor    %esi,%esi
		jmp    _040d7b_jump

	_040d70_jump:
		imul   $0x00000a,%eax,%eax
		inc    %esi
		movw   $0x000000,0x000008(%edx,%eax,1)

	_040d7b_jump:
		movswl %si,%eax
		cmp    $0x0000c8,%eax
		jl     _040d70_jump
		mov    %ebx,%eax
		neg    %eax
		add    $0x0000c7,%eax
		mov    %eax,(%esp)
		mov    %ebx,%eax
		add    %ebx,%eax
		mov    $0x0000c7,%ecx
		neg    %eax
		xor    %esi,%esi
		add    $0x000140,%eax
		mov    %cx,0x00001c(%esp)
		mov    %eax,0x000030(%esp)
		jmp    _040e19_jump

	_040dae_jump:
		imul   $0x00000a,%eax,%eax
		mov    %esi,%ecx
		add    %ebx,%ecx
		mov    %cx,0x000004(%edx,%eax,1)
		mov    %si,0x000006(%edx,%eax,1)
		mov    %cx,(%edx,%eax,1)
		mov    0x000030(%esp),%edi
		mov    %cx,0x000002(%edx,%eax,1)
		mov    %di,0x000008(%edx,%eax,1)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		mov    0x00001c(%esp),%edi
		mov    %cx,0x000004(%edx,%eax,1)
		mov    %di,0x000006(%edx,%eax,1)
		inc    %esi
		mov    %cx,(%edx,%eax,1)
		mov    (%esp),%edi
		mov    (%esp),%ecx
		dec    %edi
		mov    %cx,0x000002(%edx,%eax,1)
		mov    0x000030(%esp),%ecx
		mov    %edi,(%esp)
		mov    %cx,0x000008(%edx,%eax,1)
		mov    %ecx,%eax
		mov    0x00001c(%esp),%ecx
		sub    $0x000002,%eax
		dec    %ecx
		mov    %eax,0x000030(%esp)
		mov    %cx,0x00001c(%esp)

	_040e19_jump:
		mov    $0x000064,%ecx
		movswl %bx,%eax
		sub    %eax,%ecx
		movswl %si,%eax
		cmp    %ecx,%eax
		jl     _040dae_jump
		xor    %esi,%esi
		call   _040a18_func
		mov    %si,0x00002c(%esp)
		mov    %ebx,%esi
		mov    $0x0000c7,%ecx
		neg    %esi
		jmp    _040e87_jump

	_040e41_jump:
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,0x000004(%edx,%eax,1)
		mov    0x00002c(%esp),%edi
		mov    %bx,(%edx,%eax,1)
		mov    %di,0x000002(%edx,%eax,1)
		mov    %si,0x000008(%edx,%eax,1)
		movswl %cx,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,0x000004(%edx,%eax,1)
		mov    %cx,0x000006(%edx,%eax,1)
		mov    %bx,(%edx,%eax,1)
		mov    %cx,0x000002(%edx,%eax,1)
		mov    %si,0x000008(%edx,%eax,1)
		mov    %edi,%eax
		dec    %ecx
		inc    %eax
		inc    %esi
		mov    %ax,0x00002c(%esp)

	_040e87_jump:
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000064,%eax
		jl     _040e41_jump
		call   _040a18_func
		mov    $0x0000c8,%esi
		mov    $0x0000c7,%edi
		mov    %ebx,%ecx
		mov    %esi,0x000014(%esp)
		mov    $0x000140,%esi
		xor    %eax,%eax
		add    %esi,%ecx
		jmp    _040f25_jump

	_040eb3_jump:
		imul   $0x00000a,%ecx,%ecx
		mov    %eax,%edi
		sub    %ebx,%edi
		mov    %edi,0x000004(%esp)
		mov    0x000024(%esp),%edi
		mov    %di,0x000004(%ecx,%edx,1)
		mov    %ax,0x000006(%ecx,%edx,1)
		mov    %si,(%ecx,%edx,1)
		mov    %ax,0x000002(%ecx,%edx,1)
		mov    0x000004(%esp),%edi
		mov    %di,0x000008(%ecx,%edx,1)
		mov    0x00001e(%esp),%ecx
		sar    $0x000010,%ecx
		imul   $0x00000a,%ecx,%ecx
		mov    0x000024(%esp),%edi
		mov    %di,0x000004(%ecx,%edx,1)
		mov    %si,(%ecx,%edx,1)
		mov    0x000020(%esp),%edi
		mov    %di,0x000006(%ecx,%edx,1)
		mov    0x000014(%esp),%edi
		mov    %di,0x000002(%ecx,%edx,1)
		mov    0x000004(%esp),%edi
		inc    %eax
		mov    %di,0x000008(%ecx,%edx,1)
		mov    0x000014(%esp),%ecx
		dec    %esi
		dec    %ecx
		mov    0x000020(%esp),%edi
		mov    %ecx,0x000014(%esp)
		mov    0x000024(%esp),%ecx
		dec    %edi
		dec    %ecx

	_040f25_jump:
		mov    %di,0x000020(%esp)
		mov    %ecx,0x000024(%esp)
		movswl %ax,%ecx
		cmp    $0x000064,%ecx
		jl     _040eb3_jump
		jmp    _040f6c_jump

	_040f3c_jump:
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _040f60_jump

	_040f42_jump:
		imul   $0x00000a,%eax,%eax
		movw   $0x000140,0x000008(%edx,%eax,1)
		mov    %si,0x000004(%edx,%eax,1)
		mov    %cx,0x000006(%edx,%eax,1)
		mov    %si,(%edx,%eax,1)
		mov    %cx,0x000002(%edx,%eax,1)
		inc    %ecx

	_040f60_jump:
		xor    %ebx,%ebx
		movswl %cx,%eax
		mov    0x000000(%ebp),%bl
		cmp    %ebx,%eax
		jl     _040f42_jump

	_040f6c_jump:
		mov    0x000004(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _040f78_jump
		neg    %eax

	_040f78_jump:
		mov    0x000002(%ebp),%si
		add    %eax,%esi
		mov    0x000004(%ebp),%di
		mov    %si,0x000002(%ebp)
		cmp    %di,%si
		jbe    _040f91_jump
		movw   $0x000000,0x000002(%ebp)

	_040f91_jump:
		mov    0x000002(%ebp),%ax
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040fa0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00005c,%esp
		mov    %eax,0x00002c(%esp)
		mov    %edx,(%esp)
		mov    $0x000064,%eax
		call   _0750ac_func
		mov    %eax,0x000018(%esp)
		call   _01cf64_func
		xor    %eax,%eax
		mov    _095b01_data,%al
		cmp    $0x000001,%eax
		jne    _040fe2_jump
		mov    $0x011800,%edx
		mov    0x00002c(%esp),%eax
		call   _074d70_func
		mov    %eax,_0c6b94_data
		jmp    _040fea_jump

	_040fe2_jump:
		xor    %edx,%edx
		mov    %edx,_0c6b94_data

	_040fea_jump:
		mov    $0x0000ff,%dl
		xor    %eax,%eax

	_040fee_jump:
		inc    %eax
		mov    %dl,_0c6b87_data(%eax)
		cmp    $0x00000a,%eax
		jl     _040fee_jump
		cmpw   $0x000000,_0c11b2_data
		je     _041029_jump
		mov    $_0c0108_data,%esi
		mov    0x000018(%esp),%edi
		push   %edi

	_04100e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _041026_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04100e_jump

	_041026_jump:
		pop    %edi
		jmp    _041030_jump

	_041029_jump:
		mov    0x000018(%esp),%eax
		movb   $0x000000,(%eax)

	_041030_jump:
		mov    $_0c010c_data,%esi
		mov    0x000018(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_041042_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04105a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _041042_jump

	_04105a_jump:
		pop    %edi
		mov    $_0c0112_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_041069_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _041081_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _041069_jump

	_041081_jump:
		pop    %edi
		mov    %ebx,%esi
		mov    $_0c0114_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_041092_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0410aa_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _041092_jump

	_0410aa_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07b355_func
		mov    %eax,%edi
		mov    %eax,%esi
		test   %eax,%eax
		jne    _0410ec_jump
		mov    $0x0000c8,%eax
		mov    0x000018(%esp),%ebx
		call   _0750ac_func
		push   %ebx
		push   $_0c0117_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func
		jmp    _041761_jump

	_0410ec_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %eax,%ecx
		lea    0x00003c(%esp),%eax
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000040(%esp),%eax
		mov    %edi,%ecx
		call   _07a2de_func
		xor    %eax,%eax
		mov    _095b01_data,%al
		test   %eax,%eax
		jne    _041139_jump
		mov    0x00003c(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		add    %eax,%eax
		mov    0x000040(%esp),%bx
		mov    %ax,%dx
		mov    0x00002c(%esp),%eax
		jmp    _041154_jump

	_041139_jump:
		cmpb   $0x000000,_0ce86f_data
		je     _04115e_jump
		mov    0x00002c(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000040(%esp),%bx
		mov    0x00003c(%esp),%dx

	_041154_jump:
		call   _043528_func
		mov    %eax,_0c94d8_data

	_04115e_jump:
		mov    $0x000001,%ebx
		lea    0x000048(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $_0ce60c_data,%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $_0ce60d_data,%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		xor    %edi,%edi
		call   _07a2de_func
		mov    $0x000001,%ebp
		jmp    _0411c0_jump

	_04119f_jump:
		lea    0x000044(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%ebx
		mov    %ebp,%edx
		call   _07a2de_func
		mov    0x000044(%esp),%bl
		xor    $0x000015,%bl
		inc    %edi
		mov    %bl,0x000044(%esp)
		mov    %bl,_0c6b87_data(%edi)

	_0411c0_jump:
		xor    %eax,%eax
		mov    0x000048(%esp),%al
		cmp    %eax,%edi
		jl     _04119f_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0c1346_data,%eax
		mov    %esi,%ecx
		call   _07a2de_func
		mov    _0c1346_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esp)
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		lea    0x000028(%edx),%eax
		add    $_0d77a8_data,%eax
		mov    %eax,0x000008(%esp)
		lea    0x000080(%edx),%eax
		add    $_0d77a8_data,%eax
		mov    %eax,0x000010(%esp)
		lea    0x000044(%edx),%eax
		add    $_0d77a8_data,%eax
		mov    %eax,0x00000c(%esp)
		jmp    _041379_jump

	_041222_jump:
		mov    0x00001c(%esp),%eax
		inc    %eax
		add    $0x00000c,%edi
		mov    %eax,0x00001c(%esp)

	_04122e_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%ebx
		mov    _0d7828_data(%ebp),%al
		cmp    %ebx,%eax
		jle    _041346_jump
		mov    $0x000001,%ebx
		mov    _0d77ac_data(%ebp),%eax
		mov    $0x000002,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000008,%eax
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    _0d77ac_data(%ebp),%eax
		mov    $0x000002,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x00000a,%eax
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    _0d77ac_data(%ebp),%eax
		mov    $0x000004,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000004,%eax
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000030(%esp),%eax
		mov    %esi,%ecx
		call   _07a2de_func
		xor    %edx,%edx
		mov    0x00002c(%esp),%eax
		mov    0x000030(%esp),%dx
		call   _074d70_func
		mov    _0d77ac_data(%ebp),%edx
		mov    %esi,%ecx
		mov    %eax,(%edx,%edi,1)
		xor    %ebx,%ebx
		mov    _0d77ac_data(%ebp),%eax
		mov    0x000030(%esp),%bx
		mov    $0x000001,%edx
		mov    (%edi,%eax,1),%eax
		call   _07a2de_func
		mov    _0d77ac_data(%ebp),%eax
		add    %edi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _041222_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x00002c(%esp),%eax
		shl    $0x000002,%edx
		call   _074d70_func
		mov    _0d77ac_data(%ebp),%edx
		mov    %eax,0x000004(%edx,%edi,1)
		mov    %esi,%ecx
		mov    _0d77ac_data(%ebp),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%edi,%eax,1),%bx
		mov    0x000004(%edi,%eax,1),%eax
		call   _07a2de_func
		jmp    _041222_jump

	_041330_jump:
		mov    _0d77ac_data,%eax
		mov    %eax,_0d77ac_data(%ebp)
		mov    _0d7828_data,%al
		mov    %al,_0d7828_data(%ebp)

	_041346_jump:
		mov    0x000008(%esp),%edx
		mov    0x000010(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		mov    0x000028(%esp),%edi
		add    $0x000084,%edx
		add    $0x000084,%ebx
		add    $0x000084,%ecx
		inc    %edi
		mov    %edx,0x000008(%esp)
		mov    %ebx,0x000010(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    %edi,0x000028(%esp)

	_041379_jump:
		mov    _0c1344_data,%edx
		mov    _0c1346_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x000028(%esp),%ecx
		add    %edx,%eax
		cmp    %ecx,%eax
		jle    _041634_jump
		imul   $0x000084,0x000028(%esp),%ebp
		mov    $0x000001,%ebx
		lea    0x000050(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    0x000008(%esp),%eax
		mov    %esi,%ecx
		call   _07a2de_func
		mov    $_0d77a8_data,%edi
		mov    0x000050(%esp),%bh
		add    %ebp,%edi
		test   %bh,%bh
		jne    _0413e3_jump
		cmpb   $0x000000,_0ce86c_data
		je     _04150f_jump

	_0413e3_jump:
		imul   $0x000084,0x000028(%esp),%edi
		mov    (%esp),%eax
		mov    _0d77d0_data(%edi),%edx
		call   _074d70_func
		mov    %esi,%ecx
		mov    $0x000001,%edx
		mov    _0d77d0_data(%edi),%ebx
		mov    %eax,_0d77b0_data(%edi)
		call   _07a2de_func
		mov    $0x000001,%ebx
		lea    0x00004c(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		mov    %edi,%ebx
		mov    _0d77d0_data(%edi),%ebp
		xor    %edx,%edx
		test   %ebp,%ebp
		jle    _04144b_jump

	_041431_jump:
		mov    _0d77b0_data(%ebx),%edi
		mov    (%edx,%edi,1),%al
		sub    %al,0x00004c(%esp)
		xorb   $0x00008f,(%edx,%edi,1)
		inc    %edx
		cmp    _0d77d0_data(%ebx),%edx
		jl     _041431_jump

	_04144b_jump:
		cmpb   $0x000000,0x00004c(%esp)
		je     _04147f_jump
		mov    $0x0000c8,%eax
		mov    0x000018(%esp),%edi
		call   _0750ac_func
		push   %edi
		push   $_0c013b_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func

	_04147f_jump:
		imul   $0x000084,0x000028(%esp),%ebp
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%ecx
		mov    0x00000c(%esp),%eax
		call   _07a2de_func
		xor    %edx,%edx
		mov    _0d77ec_data(%ebp),%dx
		imul   $0x00000c,%edx,%edx
		mov    0x00002c(%esp),%eax
		mov    %esi,%ecx
		xor    %ebx,%ebx
		call   _074d70_func
		mov    $0x00000c,%edx
		mov    _0d77ec_data(%ebp),%bx
		mov    %eax,_0d77a8_data(%ebp)
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    0x000010(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		mov    _0d7828_data(%ebp),%al
		test   %al,%al
		je     _041330_jump
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x00000c,%edx,%edx
		mov    0x00002c(%esp),%eax
		xor    %edi,%edi
		call   _074d70_func
		xor    %edx,%edx
		mov    %eax,_0d77ac_data(%ebp)
		mov    %edx,0x00001c(%esp)
		jmp    _04122e_jump

	_04150f_jump:
		mov    $0x000001,%ebx
		xor    %eax,%eax
		mov    _0d77d0_data(%ebp),%edx
		mov    %eax,_0d77b0_data(%ebp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07a4ea_func
		mov    $0x000001,%ebx
		lea    0x00004c(%esp),%eax
		mov    %ebx,%edx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000044(%edi),%eax
		mov    %esi,%ecx
		call   _07a2de_func
		xor    %edx,%edx
		mov    %edx,_0d77a8_data(%ebp)
		mov    _0d77ec_data(%ebp),%dx
		imul   $0x00000c,%edx,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07a4ea_func
		mov    $0x000001,%ebx
		lea    0x000080(%edi),%eax
		mov    %ebx,%edx
		call   _07a2de_func
		cmpb   $0x000000,_0d7828_data(%ebp)
		je     _041330_jump
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %ebx,_0d77ac_data(%ebp)
		jmp    _04159b_jump

	_04159a_jump:
		inc    %edi

	_04159b_jump:
		xor    %eax,%eax
		mov    _0d7828_data(%ebp),%al
		cmp    %eax,%edi
		jge    _041346_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000038(%esp),%eax
		mov    %esi,%ecx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000034(%esp),%eax
		mov    %esi,%ecx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000004(%esp),%eax
		mov    %esi,%ecx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000030(%esp),%eax
		mov    %esi,%ecx
		call   _07a2de_func
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x000030(%esp),%dx
		call   _07a4ea_func
		cmpl   $0xffffffff,0x000004(%esp)
		je     _04159a_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000034(%esp),%dx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _07a4ea_func
		jmp    _04159a_jump

	_041634_jump:
		mov    _0c1348_data,%ax
		mov    _0c1346_data,%bx
		add    %eax,%ebx
		mov    %esi,%ecx
		mov    %bx,_0c1346_data
		mov    $0x000001,%ebx
		mov    $_0c1345_data,%eax
		mov    %ebx,%edx
		call   _07a2de_func
		xor    %eax,%eax
		mov    _0c1344_data,%al
		mov    %eax,0x000020(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x000024(%esp)
		jmp    _041685_jump

	_041671_jump:
		mov    0x000024(%esp),%eax
		mov    0x000020(%esp),%edx
		add    $0x000004,%eax
		inc    %edx
		mov    %eax,0x000024(%esp)
		mov    %edx,0x000020(%esp)

	_041685_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c1345_data,%al
		mov    _0c1344_data,%dl
		mov    0x000020(%esp),%ebp
		add    %edx,%eax
		cmp    %ebp,%eax
		jle    _041748_jump
		mov    $0x000001,%ebx
		lea    0x000054(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		xor    %edx,%edx
		mov    0x000054(%esp),%dl
		mov    0x00002c(%esp),%eax
		shl    $0x000002,%edx
		xor    %ebp,%ebp
		call   _074d70_func
		mov    0x000024(%esp),%edx
		xor    %edi,%edi
		mov    %edx,0x000014(%esp)
		mov    %eax,_0c11b4_data(%edx)
		xor    %eax,%eax
		mov    0x000054(%esp),%al
		cmp    %eax,%ebp
		jge    _041671_jump

	_0416e2_jump:
		mov    $0x000001,%ebx
		lea    0x000058(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		xor    %edx,%edx
		mov    0x000058(%esp),%dl
		mov    0x00002c(%esp),%eax
		shl    $0x000003,%edx
		call   _074d70_func
		mov    0x000014(%esp),%edx
		add    $0x000004,%edi
		mov    _0c11b4_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%edi,1)
		mov    0x000014(%esp),%eax
		mov    %esi,%ecx
		xor    %ebx,%ebx
		mov    _0c11b4_data(%eax),%eax
		mov    0x000058(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%edi,%eax,1),%eax
		inc    %ebp
		call   _07a2de_func
		xor    %eax,%eax
		mov    0x000054(%esp),%al
		cmp    %eax,%ebp
		jge    _041671_jump
		jmp    _0416e2_jump

	_041748_jump:
		add    %dl,_0c1345_data
		xor    %eax,%eax
		mov    _0c6b88_data,%al
		call   _04311c_func
		mov    %esi,%eax
		call   _07b3eb_func

	_041761_jump:
		mov    0x000018(%esp),%eax
		call   _075258_func
		add    $0x00005c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_041774_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000080,%esp
		mov    %eax,0x000064(%esp)
		mov    $0x000013,%ecx
		mov    %esp,%edi
		mov    $_095fb0_data,%esi
		mov    $0x000064,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   _0750ac_func
		mov    %eax,%edi
		mov    %eax,0x000068(%esp)
		call   _01cf64_func
		cmpw   $0x000000,_0c11b2_data
		je     _0417d2_jump
		mov    $_0c0157_data,%esi
		push   %edi

	_0417b7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0417cf_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0417b7_jump

	_0417cf_jump:
		pop    %edi
		jmp    _0417d5_jump

	_0417d2_jump:
		movb   $0x000000,(%edi)

	_0417d5_jump:
		mov    $_0c015b_data,%esi
		mov    0x000068(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0417e7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0417ff_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0417e7_jump

	_0417ff_jump:
		pop    %edi
		mov    $_0c0161_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04180e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _041826_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04180e_jump

	_041826_jump:
		pop    %edi
		mov    _0c2520_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    %esp,%esi
		add    %edx,%eax
		add    %eax,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04184c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _041864_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04184c_jump

	_041864_jump:
		pop    %edi
		mov    $_0c0163_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_041873_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04188b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _041873_jump

	_04188b_jump:
		pop    %edi
		mov    %ebx,%esi
		mov    $_0c0165_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04189c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0418b4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04189c_jump

	_0418b4_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07b355_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _0418f0_jump
		mov    $0x0000c8,%eax
		call   _0750ac_func
		push   %edi
		push   $_0c0168_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func
		jmp    _041fd0_jump

	_0418f0_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %eax,%ecx
		lea    0x000050(%esp),%eax
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000060(%esp),%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0c24e4_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0c24e6_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    $0x000900,%ebx
		mov    $0x000001,%edx
		mov    $_0c7c9c_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $_0c24a9_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0c24a9_data,%dl
		mov    %ah,_0c24aa_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7c9c_data,%esi
		sub    %edx,%eax
		mov    $_0c799c_data,%edi
		shl    $0x000008,%eax
		mov    $0x000300,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0c24e4_data,%eax
		mov    _0c24e2_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    %edx,_0c24e8_data
		mov    %edx,%eax
		shl    $0x000002,%edx
		sub    %eax,%edx
		mov    0x000064(%esp),%eax
		add    %edx,%edx
		mov    %ebp,%ecx
		call   _074d70_func
		mov    $0x000006,%edx
		mov    _0c24e8_data,%ebx
		mov    %eax,_0c24ec_data
		call   _07a2de_func
		mov    $0x000001,%ebx
		lea    0x00007c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		mov    $0x000001,%ebx
		lea    0x000074(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0c24a4_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    _0c24a4_data,%ebx
		cmp    $0xffffffff,%ebx
		jne    _041a3e_jump
		xor    %ecx,%ecx
		mov    %ecx,_0c24a4_data
		jmp    _041a72_jump

	_041a3e_jump:
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    $_0d77a8_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _095b01_data,%al
		mov    %edx,_0c24a4_data
		test   %eax,%eax
		jne    _041a72_jump
		cmpb   $0x000000,_0ce861_data
		je     _041a72_jump
		mov    0x000064(%esp),%eax
		call   _0523e0_func

	_041a72_jump:
		xor    %eax,%eax
		mov    _095b01_data,%al
		cmp    $0x000001,%eax
		je     _041a88_jump
		mov    _0ce861_data,%dh
		test   %dh,%dh
		jne    _041a8e_jump

	_041a88_jump:
		mov    0x00007c(%esp),%al
		jmp    _041a9a_jump

	_041a8e_jump:
		test   %eax,%eax
		jne    _041a9f_jump
		test   %dh,%dh
		je     _041a9f_jump
		mov    0x000074(%esp),%al

	_041a9a_jump:
		mov    %al,_0ce86b_data

	_041a9f_jump:
		xor    %eax,%eax
		mov    _095b01_data,%al
		cmp    $0x000001,%eax
		jne    _041cb0_jump
		mov    $0x000004,%edx
		mov    %ebp,%ecx
		mov    %eax,%ebx
		lea    0x000054(%esp),%eax
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000058(%esp),%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    0x000054(%esp),%edi
		test   %edi,%edi
		je     _041af3_jump
		mov    %edi,%edx
		mov    0x000064(%esp),%eax
		shl    $0x000008,%edx
		call   _074d70_func
		mov    %eax,_0caa74_data
		jmp    _041af9_jump

	_041af3_jump:
		mov    %edi,_0caa74_data

	_041af9_jump:
		mov    0x000058(%esp),%edx
		test   %edx,%edx
		je     _041b11_jump
		mov    0x000064(%esp),%eax
		call   _074d70_func
		mov    %eax,_0caa70_data
		jmp    _041b17_jump

	_041b11_jump:
		mov    %edx,_0caa70_data

	_041b17_jump:
		mov    0x000054(%esp),%ebx
		mov    $0x000001,%edx
		mov    _0caa74_data,%eax
		mov    %ebp,%ecx
		shl    $0x000008,%ebx
		call   _07a2de_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		xor    %edx,%edx
		jmp    _041b63_jump

	_041b45_jump:
		mov    _0caa74_data,%esi
		mov    0x000078(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000078(%esp)
		mov    (%edx,%esi,1),%bh
		inc    %edx
		xor    $0x00007d,%bh
		mov    %bh,-0x000001(%edx,%esi,1)

	_041b63_jump:
		mov    0x000054(%esp),%eax
		shl    $0x000008,%eax
		cmp    %eax,%edx
		jb     _041b45_jump
		cmpb   $0x000000,0x000078(%esp)
		je     _041ba2_jump
		mov    $0x0000c8,%eax
		call   _0750ac_func
		mov    %eax,%edx
		mov    0x000068(%esp),%eax
		push   %eax
		push   $_0c018c_data
		push   %edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func

	_041ba2_jump:
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0cbd3c_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    _0caa74_data,%edx
		xor    %eax,%eax

	_041bc0_jump:
		mov    _0cbd3c_data(%eax),%ebx
		add    $0x000004,%eax
		add    %edx,%ebx
		mov    %ebx,_0cbd38_data(%eax)
		cmp    $0x0012c0,%eax
		jne    _041bc0_jump
		mov    0x000058(%esp),%ebx
		mov    $0x000001,%edx
		mov    _0caa70_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		mov    0x000058(%esp),%ecx
		xor    %edx,%edx
		test   %ecx,%ecx
		jbe    _041c27_jump

	_041c09_jump:
		mov    _0caa70_data,%esi
		mov    0x000078(%esp),%cl
		mov    (%edx,%esi,1),%al
		sub    %al,%cl
		mov    %cl,0x000078(%esp)
		xorb   $0x0000f3,(%edx,%esi,1)
		inc    %edx
		cmp    0x000058(%esp),%edx
		jb     _041c09_jump

	_041c27_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _041c5b_jump
		mov    $0x0000c8,%eax
		mov    0x000068(%esp),%edi
		call   _0750ac_func
		push   %edi
		push   $_0c01a8_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func

	_041c5b_jump:
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0caa7c_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		xor    %eax,%eax
		jmp    _041c87_jump

	_041c75_jump:
		xor    %ebx,%ebx
		mov    %ebx,_0caa7c_data(%eax)

	_041c7d_jump:
		add    $0x000004,%eax
		cmp    $0x0012c0,%eax
		je     _041c9e_jump

	_041c87_jump:
		cmpl   $0xffffffff,_0caa7c_data(%eax)
		je     _041c75_jump
		mov    _0caa70_data,%edx
		add    %edx,_0caa7c_data(%eax)
		jmp    _041c7d_jump

	_041c9e_jump:
		mov    0x000050(%esp),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _07a4ea_func
		jmp    _041dc0_jump

	_041cb0_jump:
		test   %eax,%eax
		jne    _041dc0_jump
		mov    0x000060(%esp),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _07a4ea_func
		mov    %ebp,%ecx
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0caa7c_data,%eax
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce5a4_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce5a8_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x00005c(%esp),%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    0x00005c(%esp),%edx
		mov    0x000064(%esp),%eax
		mov    $0x000001,%ebx
		call   _074d70_func
		mov    %ebp,%ecx
		mov    0x00005c(%esp),%edx
		mov    %eax,_0c94d4_data
		call   _07a2de_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		mov    0x00005c(%esp),%esi
		xor    %edx,%edx
		test   %esi,%esi
		jle    _041d78_jump

	_041d5a_jump:
		mov    _0c94d4_data,%ebx
		mov    0x000078(%esp),%cl
		mov    (%edx,%ebx,1),%al
		sub    %al,%cl
		mov    %cl,0x000078(%esp)
		xorb   $0x0000ff,(%edx,%ebx,1)
		inc    %edx
		cmp    0x00005c(%esp),%edx
		jl     _041d5a_jump

	_041d78_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _041dac_jump
		mov    $0x0000c8,%eax
		mov    0x000068(%esp),%edi
		call   _0750ac_func
		push   %edi
		push   $_0c01c4_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func

	_041dac_jump:
		mov    $_0ce580_data,%edx
		mov    0x000064(%esp),%eax
		mov    _0c94d4_data,%ebx
		call   _051c14_func

	_041dc0_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b38_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    _0c1b36_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    0x000064(%esp),%eax
		shl    $0x000002,%edx
		call   _074d70_func
		mov    %eax,_0c1b34_data
		mov    _0c1b36_data,%edx
		sar    $0x000010,%edx
		mov    0x000064(%esp),%eax
		add    %edx,%edx
		call   _074d70_func
		mov    _0c1b36_data,%edx
		mov    %eax,_0c1b3c_data
		sar    $0x000010,%edx
		mov    0x000064(%esp),%eax
		add    %edx,%edx
		call   _074d70_func
		mov    %eax,_0c1b44_data
		mov    _0c1b36_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%ebx
		call   _079cd0_func
		mov    _0c1b36_data,%edx
		sar    $0x000010,%edx
		xor    %edi,%edi
		add    %edx,%edx
		mov    0x000064(%esp),%eax
		inc    %edx
		mov    %ebp,%ecx
		call   _074d70_func
		mov    _0c1b36_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %eax,_0c1b30_data
		call   _07a2de_func
		mov    $0x000084,%edx
		mov    _0c1b36_data,%ebx
		mov    _0c1b34_data,%eax
		mov    %ebp,%ecx
		sar    $0x000010,%ebx
		xor    %esi,%esi
		call   _07a2de_func
		jmp    _041ef4_jump

	_041e95_jump:
		mov    _0c1b34_data,%eax
		movl   $0x000000,0x000010(%esi,%eax,1)

	_041ea2_jump:
		mov    0x000070(%esp),%ecx
		test   %cx,%cx
		je     _041ee0_jump
		xor    %edx,%edx
		mov    %cx,%dx
		mov    0x000064(%esp),%eax
		add    %edx,%edx
		call   _074d70_func
		mov    _0c1b34_data,%edx
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    %eax,0x000014(%edx,%esi,1)
		mov    %edx,%eax
		mov    0x000070(%esp),%bx
		mov    $0x000002,%edx
		mov    0x000014(%esi,%eax,1),%eax
		call   _07a2de_func
		jmp    _041eed_jump

	_041ee0_jump:
		mov    _0c1b34_data,%eax
		movl   $0x000000,0x000014(%esi,%eax,1)

	_041eed_jump:
		add    $0x000084,%esi
		inc    %edi

	_041ef4_jump:
		mov    _0c1b36_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jge    _041fc9_jump
		mov    _0c1b34_data,%eax
		movswl (%esi,%eax,1),%edx
		imul   $0x000084,%edx,%edx
		mov    _0d77a8_data(%edx),%edx
		mov    %edx,(%esi,%eax,1)
		mov    0x000002(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0d77ac_data(%edx),%edx
		mov    %edx,0x000004(%esi,%eax,1)
		mov    0x000006(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0d77b0_data(%edx),%edx
		mov    %edx,0x000008(%esi,%eax,1)
		mov    0x00000a(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		mov    _0c11b4_data(,%edx,4),%edx
		mov    %ebp,%ecx
		mov    %edx,0x00000c(%esi,%eax,1)
		mov    $0x000002,%edx
		lea    0x00006c(%esp),%eax
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000070(%esp),%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    0x00006c(%esp),%ebx
		test   %bx,%bx
		je     _041e95_jump
		xor    %edx,%edx
		mov    0x000064(%esp),%eax
		mov    %bx,%dx
		call   _074d70_func
		mov    _0c1b34_data,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx,%esi,1)
		mov    %edx,%eax
		mov    0x00006c(%esp),%bx
		mov    $0x000001,%edx
		mov    0x000010(%esi,%eax,1),%eax
		call   _07a2de_func
		jmp    _041ea2_jump

	_041fc9_jump:
		mov    %ebp,%eax
		call   _07b3eb_func

	_041fd0_jump:
		mov    0x000068(%esp),%eax
		call   _075258_func
		add    $0x000080,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_041fe4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,0x000018(%esp)
		mov    $0x000064,%eax
		mov    $_0c01ef_data,%esi
		call   _0750ac_func
		mov    %eax,%ebx
		mov    %eax,(%esp)
		movb   $0x000000,(%eax)
		mov    %ebx,%edi
		call   _01cf64_func
		push   %edi

	_042010_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _042028_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _042010_jump

	_042028_jump:
		pop    %edi
		mov    $_0c01f5_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_042037_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04204f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _042037_jump

	_04204f_jump:
		pop    %edi
		mov    $_0c01f7_data,%esi
		mov    $_0c0200_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_042063_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04207b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _042063_jump

	_04207b_jump:
		pop    %edi
		mov    %ebx,%eax
		call   _07b355_func
		mov    %eax,%esi
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _0420b9_jump
		mov    $0x0000c8,%eax
		call   _0750ac_func
		push   %ebx
		push   $_0c0203_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func
		jmp    _04242d_jump

	_0420b9_jump:
		mov    _0c1344_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		mov    $0x000001,%ebx
		shl    $0x000005,%edi
		mov    %eax,0x000004(%esp)
		add    %eax,%edi
		mov    $_0d77a8_data,%eax
		shl    $0x000002,%edi
		mov    $0x000004,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000028,%eax
		call   _07a2de_func
		mov    0x000018(%esp),%eax
		mov    _0d77d0_data(%edi),%edx
		call   _074d70_func
		mov    %esi,%ecx
		mov    $0x000001,%edx
		mov    _0d77d0_data(%edi),%ebx
		mov    %eax,_0d77b0_data(%edi)
		call   _07a2de_func
		mov    %edi,%esi
		mov    _0d77d0_data(%edi),%edx
		xor    %eax,%eax
		test   %edx,%edx
		jle    _042132_jump

	_04211f_jump:
		mov    _0d77b0_data(%esi),%edx
		xorb   $0x00008f,(%edx,%eax,1)
		inc    %eax
		cmp    _0d77d0_data(%esi),%eax
		jl     _04211f_jump

	_042132_jump:
		mov    $_0d77a8_data,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		add    %esi,%edi
		mov    %ebp,%ecx
		lea    0x000044(%edi),%eax
		call   _07a2de_func
		xor    %edx,%edx
		mov    _0d77ec_data(%esi),%dx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    0x000018(%esp),%eax
		xor    %ebx,%ebx
		call   _074d70_func
		mov    $0x00000c,%edx
		mov    _0d77ec_data(%esi),%bx
		mov    %eax,_0d77a8_data(%esi)
		call   _07a2de_func
		mov    $0x000001,%ebx
		lea    0x000080(%edi),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		xor    %edx,%edx
		mov    _0d7828_data(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000018(%esp),%eax
		call   _074d70_func
		mov    %eax,_0d77ac_data(%esi)
		mov    0x000004(%esp),%eax
		mov    %eax,%edi
		xor    %ecx,%ecx
		shl    $0x000005,%edi
		mov    %ecx,0x000010(%esp)
		add    %eax,%edi
		xor    %esi,%esi
		shl    $0x000002,%edi
		jmp    _0421e9_jump

	_0421dd_jump:
		mov    0x000010(%esp),%ebx
		inc    %ebx
		add    $0x00000c,%esi
		mov    %ebx,0x000010(%esp)

	_0421e9_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%edx
		mov    _0d7828_data(%edi),%al
		cmp    %edx,%eax
		jle    _0422eb_jump
		mov    $0x000001,%ebx
		mov    _0d77ac_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    _0d77ac_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x00000a,%eax
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    _0d77ac_data(%edi),%eax
		mov    $0x000004,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000004,%eax
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00001c(%esp),%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		xor    %edx,%edx
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%dx
		call   _074d70_func
		mov    _0d77ac_data(%edi),%edx
		mov    %ebp,%ecx
		mov    %eax,(%edx,%esi,1)
		xor    %ebx,%ebx
		mov    _0d77ac_data(%edi),%eax
		mov    0x00001c(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _07a2de_func
		mov    _0d77ac_data(%edi),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _0421dd_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x000018(%esp),%eax
		shl    $0x000002,%edx
		call   _074d70_func
		mov    _0d77ac_data(%edi),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		mov    %ebp,%ecx
		mov    _0d77ac_data(%edi),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _07a2de_func
		jmp    _0421dd_jump

	_0422eb_jump:
		mov    $0x000001,%ebx
		mov    $_0c1345_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		xor    %ebx,%ebx
		mov    %ebx,0x00000c(%esp)
		mov    %ebx,0x000014(%esp)
		jmp    _04231e_jump

	_04230a_jump:
		mov    0x000014(%esp),%esi
		mov    0x00000c(%esp),%edi
		add    $0x000004,%esi
		inc    %edi
		mov    %esi,0x000014(%esp)
		mov    %edi,0x00000c(%esp)

	_04231e_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%ecx
		mov    _0c1345_data,%al
		cmp    %ecx,%eax
		jle    _0423d7_jump
		mov    $0x000001,%ebx
		lea    0x000020(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		call   _074d70_func
		mov    0x000014(%esp),%edx
		xor    %esi,%esi
		mov    %edx,0x000008(%esp)
		mov    %eax,_0c11b4_data(%edx)
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		cmp    %eax,%edi
		jge    _04230a_jump

	_042371_jump:
		mov    $0x000001,%ebx
		lea    0x000024(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		xor    %edx,%edx
		mov    0x000024(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000003,%edx
		call   _074d70_func
		mov    0x000008(%esp),%edx
		add    $0x000004,%esi
		mov    _0c11b4_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%esi,1)
		mov    0x000008(%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0c11b4_data(%eax),%eax
		mov    0x000024(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _07a2de_func
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		cmp    %eax,%edi
		jge    _04230a_jump
		jmp    _042371_jump

	_0423d7_jump:
		mov    _0c1344_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    $_0d77a8_data,%esi
		shl    $0x000005,%eax
		mov    $0x000084,%ecx
		add    %edx,%eax
		mov    $_0c1e64_data,%edi
		shl    $0x000002,%eax
		mov    _0c11b4_data,%edx
		add    %eax,%esi
		mov    %edx,_0d77b4_data(%eax)
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0c1346_data,%dx
		inc    %edx
		mov    %ebp,%eax
		mov    %dx,_0c1346_data
		call   _07b3eb_func

	_04242d_jump:
		mov    (%esp),%eax
		call   _075258_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042440_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		call   _01cf64_func
		mov    $0x000064,%eax
		call   _0750ac_func
		mov    _0c6b6c_data,%edx
		mov    %eax,%edi
		mov    %eax,0x000008(%esp)
		mov    $_0c6b50_data,%eax
		call   _074fa0_func
		mov    $_0c6b44_data,%eax
		mov    _0c6b68_data,%edx
		call   _074fa0_func
		mov    $_0c6b38_data,%eax
		mov    _0c6b64_data,%edx
		call   _074fa0_func
		mov    $_0c6b2c_data,%eax
		mov    _0c6b60_data,%edx
		call   _074fa0_func
		cmpw   $0x000000,_0c11b2_data
		je     _0424c9_jump
		mov    $_0c0229_data,%esi
		push   %edi

	_0424ae_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0424c6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0424ae_jump

	_0424c6_jump:
		pop    %edi
		jmp    _0424cc_jump

	_0424c9_jump:
		movb   $0x000000,(%edi)

	_0424cc_jump:
		mov    $_0c022d_data,%esi
		mov    0x000008(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0424de_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0424f6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0424de_jump

	_0424f6_jump:
		pop    %edi
		mov    $_0c0233_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_042505_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04251d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _042505_jump

	_04251d_jump:
		pop    %edi
		mov    $_0c0235_data,%esi
		mov    $_0c0240_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_042531_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _042549_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _042531_jump

	_042549_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07b355_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _042585_jump
		mov    $0x0000c8,%eax
		call   _0750ac_func
		push   %edi
		push   $_0c0243_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func
		jmp    _042c48_jump

	_042585_jump:
		mov    $0x000001,%ebx
		mov    %eax,%ecx
		mov    $_0c1345_data,%eax
		mov    %ebx,%edx
		call   _07a2de_func
		mov    _0c1345_data,%al
		xor    %edx,%edx
		mov    %al,_0c1344_data
		mov    %edx,(%esp)
		jmp    _0425ac_jump

	_0425a9_jump:
		incl   (%esp)

	_0425ac_jump:
		xor    %eax,%eax
		mov    (%esp),%ecx
		mov    _0c1345_data,%al
		cmp    %ecx,%eax
		jle    _042661_jump
		mov    $0x000001,%ebx
		lea    0x000018(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		xor    %edx,%edx
		mov    0x000018(%esp),%dl
		mov    $_0c6b2c_data,%eax
		shl    $0x000002,%edx
		call   _074d70_func
		mov    (%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0c11b4_data(,%edx,4)
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmp    %eax,%edi
		jge    _0425a9_jump

	_0425fb_jump:
		mov    $0x000001,%ebx
		lea    0x00001c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		mov    $_0c6b2c_data,%eax
		shl    $0x000003,%edx
		call   _074d70_func
		mov    (%esp),%edx
		mov    _0c11b4_data(,%edx,4),%edx
		mov    %eax,(%edx,%esi,1)
		add    $0x000004,%esi
		mov    (%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0c11b4_data(,%eax,4),%eax
		mov    0x00001c(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _07a2de_func
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmp    %eax,%edi
		jge    _0425a9_jump
		jmp    _0425fb_jump

	_042661_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0c1346_data,%eax
		mov    %ebp,%ecx
		mov    $0x000001,%esi
		call   _07a2de_func
		mov    _0c1346_data,%ax
		mov    %esi,(%esp)
		mov    %ax,_0c1348_data
		jmp    _0429bd_jump

	_042690_jump:
		mov    _0c11b4_data(,%esi,4),%edx
		mov    %edx,_0d77b4_data(%eax)

	_04269d_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce608_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce5fc_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0d77a8_data,%eax
		mov    $0x000004,%edx
		add    $0x000028,%eax
		call   _07a2de_func
		imul   $0x000084,(%esp),%edx
		mov    $_0c6b50_data,%eax
		mov    _0d77d0_data(%edx),%edx
		call   _074d70_func
		mov    (%esp),%ecx
		mov    %eax,%edx
		imul   $0x000084,%ecx,%eax
		mov    %ebp,%ecx
		mov    _0d77d0_data(%eax),%ebx
		mov    %edx,_0d77b0_data(%eax)
		mov    %edx,%eax
		mov    $0x000001,%edx
		call   _07a2de_func
		mov    $0x000001,%ebx
		lea    0x000014(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07a2de_func
		xor    %edx,%edx
		jmp    _042759_jump

	_04273b_jump:
		mov    _0d77b0_data(%eax),%esi
		mov    0x000014(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000014(%esp)
		mov    (%edx,%esi,1),%bh
		inc    %edx
		xor    $0x00008f,%bh
		mov    %bh,-0x000001(%edx,%esi,1)

	_042759_jump:
		imul   $0x000084,(%esp),%eax
		cmp    _0d77d0_data(%eax),%edx
		jl     _04273b_jump
		cmpb   $0x000000,0x000014(%esp)
		je     _04279c_jump
		mov    $0x0000c8,%eax
		call   _0750ac_func
		mov    %eax,%edx
		mov    0x000008(%esp),%eax
		push   %eax
		push   $_0c0269_data
		push   %edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func

	_04279c_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce600_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0d77a8_data,%eax
		mov    $0x000002,%edx
		add    $0x000044,%eax
		call   _07a2de_func
		imul   $0x000084,(%esp),%edx
		mov    _0d77ec_data(%edx),%dx
		and    $0x00ffff,%edx
		imul   $0x00000c,%edx,%edx
		mov    $_0c6b2c_data,%eax
		call   _074d70_func
		mov    (%esp),%ecx
		mov    %eax,%edx
		imul   $0x000084,%ecx,%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0d77ec_data(%eax),%bx
		mov    %edx,_0d77a8_data(%eax)
		mov    %edx,%eax
		mov    $0x00000c,%edx
		call   _07a2de_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0d77a8_data,%eax
		mov    %ebx,%edx
		add    $0x000080,%eax
		call   _07a2de_func
		imul   $0x000084,(%esp),%eax
		cmpb   $0x000000,_0d7828_data(%eax)
		je     _0429b2_jump
		xor    %edx,%edx
		mov    _0d7828_data(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    $_0c6b2c_data,%eax
		call   _074d70_func
		imul   $0x000084,(%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0d77ac_data(%edx)
		jmp    _04287a_jump

	_042876_jump:
		add    $0x00000c,%esi
		inc    %edi

	_04287a_jump:
		imul   $0x000084,(%esp),%eax
		xor    %edx,%edx
		mov    _0d7828_data(%eax),%dl
		cmp    %edx,%edi
		jge    _0429ba_jump
		mov    $0x000001,%ebx
		mov    _0d77ac_data(%eax),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _07a2de_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    _0d77ac_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000002,%edx
		add    $0x00000a,%eax
		call   _07a2de_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000004,%edx
		mov    _0d77ac_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000001,%ebx
		add    $0x000004,%eax
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000010(%esp),%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		xor    %edx,%edx
		mov    $_0c6b2c_data,%eax
		mov    0x000010(%esp),%dx
		call   _074d70_func
		imul   $0x000084,(%esp),%edx
		mov    _0d77ac_data(%edx),%edx
		mov    %eax,(%edx,%esi,1)
		imul   $0x000084,(%esp),%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0d77ac_data(%eax),%eax
		mov    0x000010(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _07a2de_func
		imul   $0x000084,(%esp),%eax
		mov    _0d77ac_data(%eax),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _042876_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    $_0c6b2c_data,%eax
		shl    $0x000002,%edx
		call   _074d70_func
		imul   $0x000084,(%esp),%edx
		mov    _0d77ac_data(%edx),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		imul   $0x000084,(%esp),%eax
		xor    %ebx,%ebx
		mov    _0d77ac_data(%eax),%eax
		mov    $0x000004,%edx
		mov    %ebp,%ecx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _07a2de_func
		jmp    _042876_jump

	_0429b2_jump:
		xor    %edx,%edx
		mov    %edx,_0d77ac_data(%eax)

	_0429ba_jump:
		incl   (%esp)

	_0429bd_jump:
		mov    _0c1344_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _042a0e_jump
		imul   $0x000084,%edx,%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0d77a8_data,%eax
		mov    $0x000004,%edx
		add    $0x00000c,%eax
		call   _07a2de_func
		imul   $0x000084,(%esp),%eax
		mov    _0d77b4_data(%eax),%esi
		cmp    $0xffffffff,%esi
		jne    _042690_jump
		xor    %edi,%edi
		mov    %edi,_0d77b4_data(%eax)
		jmp    _04269d_jump

	_042a0e_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce604_data,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    (%esp),%edx
		mov    %edx,%eax
		mov    $_0d77a8_data,%esi
		shl    $0x000005,%eax
		mov    $_0c1b4c_data,%edi
		add    %edx,%eax
		mov    $0x000084,%ecx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0d77a8_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0c248c_data
		mov    _0d77b0_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0c2490_data
		mov    _0d77ec_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0c2494_data
		mov    %esp,%eax
		call   _07a2de_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0d77a8_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0c2498_data
		mov    _0d77b0_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0c249c_data
		mov    _0d77ec_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0c24a0_data
		mov    %esp,%eax
		call   _07a2de_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0d77a8_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0c1cd8_data
		mov    _0d77b0_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0c1ce0_data
		mov    _0d77ec_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0c1d1c_data
		mov    %esp,%eax
		call   _07a2de_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0d77a8_data(,%eax,4),%ebx
		mov    _0d77b0_data(,%eax,4),%esi
		mov    _0d77ac_data(,%eax,4),%edx
		mov    %esi,0x000004(%esp)
		mov    _0d77ec_data(,%eax,4),%si
		mov    _0d7828_data(,%eax,4),%cl
		mov    %esi,0x00000c(%esp)
		mov    _0d77b4_data(,%eax,4),%esi
		xor    %eax,%eax

	_042b86_jump:
		add    $0x000084,%eax
		mov    %ebx,_0c25a0_data(%eax)
		mov    %edx,_0c25a4_data(%eax)
		mov    %cl,_0c2620_data(%eax)
		mov    0x000004(%esp),%edi
		mov    %esi,_0c25ac_data(%eax)
		mov    %edi,_0c25a8_data(%eax)
		mov    0x00000c(%esp),%edi
		mov    %di,_0c25e4_data(%eax)
		cmp    $0x000c60,%eax
		jne    _042b86_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    (%esp),%edx
		mov    %edx,%eax
		mov    $_0d77a8_data,%esi
		shl    $0x000005,%eax
		mov    $_0c1d5c_data,%edi
		add    %edx,%eax
		mov    $0x000084,%ecx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $_0d77a8_data,%esi
		add    %edx,%eax
		mov    $_0c1de0_data,%edi
		shl    $0x000002,%eax
		mov    $0x000084,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebp,%eax
		call   _07b3eb_func

	_042c48_jump:
		mov    $0x0004b0,%edx
		mov    $_0c6b2c_data,%eax
		call   _074d70_func
		mov    %eax,_0caa78_data
		mov    $_0c6b50_data,%eax
		call   _075318_func
		mov    0x000008(%esp),%eax
		call   _075258_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042c7c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000ac,%esp
		mov    %eax,0x00008c(%esp)
		mov    %edx,0x000090(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x000084(%esp)
		call   _01cf64_func
		mov    $0x000064,%eax
		call   _0750ac_func
		mov    _0c11b2_data,%dx
		mov    %eax,0x00009c(%esp)
		test   %dx,%dx
		je     _042ce1_jump
		mov    $_0c0285_data,%esi
		mov    %eax,%edi
		push   %edi

	_042cc6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _042cde_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _042cc6_jump

	_042cde_jump:
		pop    %edi
		jmp    _042ce4_jump

	_042ce1_jump:
		movb   $0x000000,(%eax)

	_042ce4_jump:
		mov    $_0c0289_data,%esi
		mov    0x00009c(%esp),%edi
		mov    $_0c0294_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_042cfe_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _042d16_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _042cfe_jump

	_042d16_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07b355_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _042d4d_jump
		mov    $0x0000c8,%eax
		call   _0750ac_func
		push   %edi
		push   $_0c0297_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func

	_042d4d_jump:
		mov    0x000090(%esp),%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000002,%edi
		mov    _09214d_data(%edi),%al
		mov    %al,0x0000a8(%esp)
		mov    _092148_data(%edi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _092144_data(%edi),%edx
		mov    %eax,0x000088(%esp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07a4ea_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _07a2de_func
		mov    %edi,%ebx
		xor    %eax,%eax

	_042da5_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000a8(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000a8(%esp)
		mov    _09214c_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _042da5_jump
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		inc    %eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x000084(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x000084(%esp),%ebx
		mov    0x000042(%esp),%eax
		xor    %edx,%edx
		mov    %eax,0x0000a0(%esp)
		xor    %eax,%eax
		mov    0x000000(%ebp),%dx
		mov    (%ebx),%ax
		imul   %eax,%edx
		mov    %esi,%ecx
		mov    0x00008c(%esp),%eax
		mov    0x000088(%esp),%ebx
		call   _074d70_func
		mov    %eax,%edi
		mov    0x000088(%esp),%eax
		mov    $0x000001,%edx
		call   _0750ac_func
		mov    %eax,0x000080(%esp)
		mov    %eax,0x000094(%esp)
		call   _07a2de_func
		mov    %esi,%eax
		mov    0x000088(%esp),%ecx
		call   _07b3eb_func
		test   %ecx,%ecx
		jbe    _042e9b_jump
		mov    0x000090(%esp),%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    0x000080(%esp),%eax
		shl    $0x000002,%esi
		lea    (%eax,%ecx,1),%ebx

	_042e79_jump:
		mov    0x0000a8(%esp),%ch
		sub    (%eax),%ch
		mov    _09214c_data(%esi),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %ch,0x0000a8(%esp)
		mov    %dh,-0x000001(%eax)
		cmp    %ebx,%eax
		jb     _042e79_jump

	_042e9b_jump:
		cmpb   $0x000000,0x0000a8(%esp)
		je     _042edd_jump
		mov    $0x0000c8,%eax
		mov    0x000090(%esp),%esi
		call   _0750ac_func
		push   %esi
		mov    %eax,%edx
		mov    0x0000a0(%esp),%eax
		push   %eax
		push   $_0c02ab_data
		push   %edx
		call   _079cfb_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func

	_042edd_jump:
		test   %edi,%edi
		je     _042fc0_jump
		cmpl   $0x000000,0x000094(%esp)
		je     _042fc0_jump
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    %ebx,0x000098(%esp)
		jmp    _042f27_jump

	_042f00_jump:
		xor    %edx,%edx
		mov    0x000000(%ebp),%dx
		imul   %esi,%edx
		mov    %eax,%ebx
		add    %ebx,%edx
		mov    0x0000a4(%esp),%bl
		inc    %eax
		mov    %bl,(%edx,%edi,1)

	_042f18_jump:
		xor    %edx,%edx
		mov    0x0000a0(%esp),%dx
		cmp    %edx,%eax
		jb     _042f3d_jump
		inc    %esi

	_042f27_jump:
		mov    0x000084(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		cmp    %eax,%esi
		jae    _042fb2_jump
		xor    %eax,%eax

	_042f3d_jump:
		mov    0x000098(%esp),%edx
		mov    0x000094(%esp),%ecx
		lea    0x000001(%edx),%ebx
		add    %ecx,%edx
		mov    (%edx),%dl
		mov    %dl,0x0000a4(%esp)
		and    $0x0000c0,%dl
		mov    %ebx,0x000098(%esp)
		cmp    $0x0000c0,%dl
		jne    _042f00_jump
		mov    0x0000a4(%esp),%dl
		and    $0x00003f,%dl
		lea    0x000001(%ebx),%ecx
		mov    %ecx,0x000098(%esp)
		add    0x000094(%esp),%ebx
		mov    (%ebx),%bl
		and    $0x0000ff,%edx
		mov    %bl,0x0000a4(%esp)

	_042f92_jump:
		dec    %edx
		cmp    $0xffffffff,%edx
		je     _042f18_jump
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%bx
		imul   %esi,%ebx
		mov    %eax,%ecx
		add    %ecx,%ebx
		mov    0x0000a4(%esp),%cl
		inc    %eax
		mov    %cl,(%edi,%ebx,1)
		jmp    _042f92_jump

	_042fb2_jump:
		mov    0x000094(%esp),%eax
		call   _075258_func
		jmp    _042fca_jump

	_042fc0_jump:
		mov    $_0c02cc_data,%eax
		call   _01f878_func

	_042fca_jump:
		mov    0x00009c(%esp),%eax
		call   _075258_func
		mov    %edi,%eax
		add    $0x0000ac,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_042fe4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %edx,(%esp)
		call   _01cf64_func
		mov    $0x000064,%eax
		call   _0750ac_func
		mov    _0c11b2_data,%dx
		mov    %eax,%ebp
		test   %dx,%dx
		je     _043031_jump
		mov    $_0c02f5_data,%esi
		mov    %eax,%edi
		push   %edi

	_043016_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04302e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _043016_jump

	_04302e_jump:
		pop    %edi
		jmp    _043034_jump

	_043031_jump:
		movb   $0x000000,(%eax)

	_043034_jump:
		mov    $_0c02f9_data,%esi
		mov    %ebp,%edi
		mov    $_0c0304_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_043049_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _043061_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _043049_jump

	_043061_jump:
		pop    %edi
		mov    %ebp,%eax
		call   _07b355_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _043098_jump
		mov    $0x0000c8,%eax
		call   _0750ac_func
		push   %ebp
		push   $_0c0307_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func

	_043098_jump:
		lea    0x000000(,%ebx,4),%edi
		sub    %ebx,%edi
		shl    $0x000002,%edi
		mov    _092144_data(%edi),%eax
		add    _092148_data(%edi),%eax
		lea    -0x000300(%eax),%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07a4ea_func
		mov    $0x000001,%ebx
		mov    $0x000300,%edx
		mov    (%esp),%eax
		call   _07a2de_func
		mov    %esi,%eax
		mov    (%esp),%ebx
		call   _07b3eb_func
		mov    %edi,%esi
		lea    0x000300(%ebx),%ecx

	_0430e5_jump:
		mov    _09214c_data(%esi),%dl
		mov    (%ebx),%ah
		xor    %dl,%ah
		xor    %edx,%edx
		mov    %ah,%dl
		mov    %ah,(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		inc    %ebx
		mov    %al,-0x000001(%ebx)
		cmp    %ecx,%ebx
		jne    _0430e5_jump
		mov    %ebp,%eax
		call   _075258_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04311c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000b0,%esp
		mov    %eax,0x000094(%esp)
		cmpb   $0x000000,_0ce86f_data
		je     _04351b_jump
		call   _01cf64_func
		mov    $0x000064,%eax
		call   _0750ac_func
		mov    _0c11b2_data,%dx
		mov    %eax,%ebp
		test   %dx,%dx
		je     _04317c_jump
		mov    $_0c031b_data,%esi
		mov    %eax,%edi
		push   %edi

	_043161_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _043179_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _043161_jump

	_043179_jump:
		pop    %edi
		jmp    _04317f_jump

	_04317c_jump:
		movb   $0x000000,(%eax)

	_04317f_jump:
		mov    $_0c031f_data,%esi
		mov    %ebp,%edi
		mov    $_0c032a_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_043194_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0431ac_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _043194_jump

	_0431ac_jump:
		pop    %edi
		mov    %ebp,%eax
		call   _07b355_func
		mov    %eax,0x000084(%esp)
		test   %eax,%eax
		jne    _0431e8_jump
		mov    $0x0000c8,%eax
		call   _0750ac_func
		push   %ebp
		push   $_0c032d_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func

	_0431e8_jump:
		mov    0x000094(%esp),%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000002,%edi
		mov    _09214d_data(%edi),%al
		mov    %al,0x0000ac(%esp)
		mov    _092148_data(%edi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _092144_data(%edi),%edx
		mov    %eax,0x000080(%esp)
		mov    0x000084(%esp),%eax
		mov    0x000084(%esp),%ecx
		call   _07a4ea_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _07a2de_func
		mov    %edi,%ebx
		xor    %eax,%eax

	_04324a_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000ac(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000ac(%esp)
		mov    _09214c_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _04324a_jump
		mov    0x000008(%esp),%esi
		mov    0x000004(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    0x000006(%esp),%ecx
		mov    $0x000001,%edx
		sub    %ecx,%eax
		mov    _0c94d8_data,%edi
		inc    %eax
		sub    %ebx,%esi
		mov    %eax,0x0000a4(%esp)
		mov    0x000042(%esp),%eax
		mov    0x000084(%esp),%ecx
		mov    %eax,0x0000a8(%esp)
		mov    0x000080(%esp),%eax
		mov    0x000080(%esp),%ebx
		call   _0750ac_func
		mov    %eax,0x000098(%esp)
		mov    %eax,0x000090(%esp)
		call   _07a2de_func
		mov    0x000084(%esp),%eax
		inc    %esi
		call   _07b3eb_func
		mov    %ebp,%eax
		mov    0x000080(%esp),%edx
		call   _075258_func
		test   %edx,%edx
		jbe    _04332a_jump
		mov    0x000094(%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    0x000098(%esp),%eax
		shl    $0x000002,%ebx
		lea    (%eax,%edx,1),%ecx

	_04330f_jump:
		mov    (%eax),%dl
		sub    %dl,0x0000ac(%esp)
		mov    _09214c_data(%ebx),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %dh,-0x000001(%eax)
		cmp    %ecx,%eax
		jb     _04330f_jump

	_04332a_jump:
		cmpb   $0x000000,0x0000ac(%esp)
		je     _043365_jump
		mov    $0x0000c8,%eax
		mov    0x000094(%esp),%ebx
		call   _0750ac_func
		push   %ebx
		push   %ebp
		push   $_0c0341_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func

	_043365_jump:
		test   %edi,%edi
		je     _0434cb_jump
		cmpl   $0x000000,0x000090(%esp)
		je     _0434cb_jump
		xor    %ebp,%ebp
		mov    %ebp,0x0000a0(%esp)
		mov    %ebp,0x00009c(%esp)
		jmp    _04340d_jump

	_043390_jump:
		xor    %ecx,%ecx
		mov    0x00009c(%esp),%ebp
		mov    %si,%cx
		imul   %ecx,%ebp
		mov    %eax,%ecx
		add    %ebp,%ecx
		mov    0x000088(%esp),%eax
		mov    %dl,(%ecx,%edi,1)
		jmp    _043467_jump

	_0433b2_jump:
		xor    %ecx,%ecx
		mov    _095b01_data,%cl
		lea    0x000001(%eax),%ebx
		test   %ecx,%ecx
		jne    _0433df_jump
		mov    %si,%cx
		mov    0x00009c(%esp),%ebp
		add    %ecx,%ecx
		imul   %ebp,%ecx
		lea    (%ecx,%eax,1),%ebp
		add    %edi,%ebp
		mov    %dl,0x000000(%ebp)
		movzwl %si,%ebp
		add    %ecx,%ebp
		jmp    _0433ee_jump

	_0433df_jump:
		xor    %ecx,%ecx
		mov    0x00009c(%esp),%ebp
		mov    %si,%cx
		imul   %ecx,%ebp

	_0433ee_jump:
		mov    %eax,%ecx
		mov    %ebx,%eax
		lea    (%ecx,%ebp,1),%ebx
		mov    %dl,(%edi,%ebx,1)

	_0433f8_jump:
		xor    %edx,%edx
		mov    0x0000a8(%esp),%dx
		cmp    %edx,%eax
		jb     _043428_jump
		incl   0x00009c(%esp)

	_04340d_jump:
		xor    %eax,%eax
		mov    0x00009c(%esp),%ebx
		mov    0x0000a4(%esp),%ax
		cmp    %ebx,%eax
		jbe    _0434bd_jump
		xor    %eax,%eax

	_043428_jump:
		mov    0x0000a0(%esp),%edx
		mov    0x000090(%esp),%ebp
		lea    0x000001(%edx),%ecx
		add    %ebp,%edx
		mov    (%edx),%dl
		mov    %dl,%dh
		and    $0x0000c0,%dh
		mov    %ecx,0x0000a0(%esp)
		cmp    $0x0000c0,%dh
		jne    _0433b2_jump
		and    $0x00003f,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %ecx,%edx
		inc    %ecx
		add    %ebp,%edx
		mov    %ecx,0x0000a0(%esp)
		mov    (%edx),%dl

	_043467_jump:
		dec    %ebx
		cmp    $0xffffffff,%ebx
		je     _0433f8_jump
		xor    %ecx,%ecx
		lea    0x000001(%eax),%ebp
		mov    _095b01_data,%cl
		mov    %ebp,0x000088(%esp)
		test   %ecx,%ecx
		jne    _043390_jump
		mov    %si,%cx
		mov    0x00009c(%esp),%ebp
		add    %ecx,%ecx
		imul   %ebp,%ecx
		lea    (%ecx,%eax,1),%ebp
		add    %edi,%ebp
		mov    %dl,0x000000(%ebp)
		movzwl %si,%ebp
		mov    %eax,0x00008c(%esp)
		add    %ebp,%ecx
		add    0x00008c(%esp),%ecx
		mov    0x000088(%esp),%eax
		mov    %dl,(%ecx,%edi,1)
		jmp    _043467_jump

	_0434bd_jump:
		mov    0x000090(%esp),%eax
		call   _075258_func
		jmp    _0434d5_jump

	_0434cb_jump:
		mov    $_0c0362_data,%eax
		call   _01f878_func

	_0434d5_jump:
		xor    %eax,%eax
		mov    _095b01_data,%al
		test   %eax,%eax
		jne    _043502_jump
		mov    _0c94dc_data,%eax
		add    %esi,%esi
		mov    %eax,_0c94d8_data
		mov    0x0000a4(%esp),%eax
		mov    %si,_0c94e0_data
		mov    %ax,_0c94e2_data
		jmp    _04351b_jump

	_043502_jump:
		mov    _0c94d8_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x0000a4(%esp),%bx
		mov    %si,%dx
		call   _043568_func

	_04351b_jump:
		add    $0x0000b0,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043528_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%esi
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %dx,%bx
		mov    %si,%di
		mov    %ebx,%edx
		imul   %edi,%edx
		call   _074d70_func
		lea    0x000000(,%ebx,2),%edx
		imul   %edi,%edx
		mov    %eax,%esi
		shl    $0x000003,%ebx
		mov    %ecx,%eax
		add    %ebx,%edx
		call   _074d70_func
		mov    %eax,_0c94dc_data
		mov    %esi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_043568_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000018(%esp)
		xor    %eax,%eax
		mov    %dx,_0c94e0_data
		mov    %dx,%ax
		xor    %edx,%edx
		mov    %bx,%dx
		mov    %eax,_0c94e4_data
		imul   %edx,%eax
		mov    %bx,_0c94e2_data
		mov    %esi,0x000004(%esp)
		mov    _0c94dc_data,%esi
		mov    %eax,_0c94e8_data
		test   %esi,%esi
		jne    _0435b6_jump
		mov    $_0c0384_data,%eax
		call   _01f878_func

	_0435b6_jump:
		xor    %edi,%edi
		jmp    _0435bb_jump

	_0435ba_jump:
		inc    %edi

	_0435bb_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		cmp    %eax,%edi
		jae    _04366e_jump
		mov    _0c94e4_data,%edx
		xor    %eax,%eax
		test   %edx,%edx
		jbe    _0435ba_jump
		jmp    _0435e3_jump

	_0435d8_jump:
		mov    _0c94e4_data,%ebx
		inc    %eax
		cmp    %ebx,%eax
		jae    _0435ba_jump

	_0435e3_jump:
		mov    %eax,%edx
		mov    _0c94e8_data,%ebx
		and    $0x000003,%edx
		shr    %ebx
		imul   %ebx,%edx
		mov    %ebx,0x000010(%esp)
		mov    %eax,%ebx
		shr    $0x000002,%ebx
		mov    %ebx,(%esp)
		add    %edx,%ebx
		mov    _0c94e4_data,%edx
		mov    %edi,%ebp
		shr    %edx
		imul   %edx,%ebp
		mov    %ebp,0x00000c(%esp)
		lea    (%ebx,%ebp,1),%edx
		xor    %ebx,%ebx
		mov    0x000014(%esp),%bx
		imul   %edi,%ebx
		mov    0x000004(%esp),%ebp
		add    %eax,%ebx
		add    %ebp,%ebx
		mov    _0c94e4_data,%ebp
		mov    (%ebx),%cl
		shr    $0x000002,%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		mov    %ebp,0x000008(%esp)
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)
		cmp    $0x000010,%edi
		jae    _0435d8_jump
		mov    0x000010(%esp),%edx
		mov    (%esp),%ebp
		shl    $0x000002,%edx
		mov    0x00000c(%esp),%ecx
		add    %ebp,%edx
		add    %ecx,%edx
		mov    (%ebx),%cl
		mov    0x000008(%esp),%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)
		jmp    _0435d8_jump

	_04366e_jump:
		mov    _0c94e4_data,%eax
		mov    _0c94e8_data,%edx
		shr    %eax
		add    %edx,%edx
		mov    %eax,_0c94e4_data
		mov    %edx,_0c94e8_data
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_043690_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		call   _01cf64_func
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		mov    %edi,%eax
		call   _042c7c_func
		mov    $_0c799c_data,%edx
		mov    $0x000300,%ecx
		mov    $_0c859c_data,%edi
		mov    %eax,_0c94ec_data
		mov    %esi,%eax
		mov    $_0c799c_data,%esi
		call   _042fe4_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		mov    (%esp),%ax
		mov    %eax,_0c94f4_data
		mov    %eax,_0c94fc_data
		xor    %eax,%eax
		mov    _0c94fc_data,%esi
		mov    0x000004(%esp),%ax
		imul   %eax,%esi
		mov    _0c94fc_data,%edx
		shr    $0x000002,%edx
		mov    %ax,_0c94f8_data
		mov    %edx,_0c94fc_data
		mov    _0c94ec_data,%eax
		mov    %esi,_0c9500_data
		mov    %eax,_0c94f0_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04372c_func:
		push   %ebx
		push   %ecx
		cmpb   $0x00002c,(%eax)
		je     _043751_jump

	_043733_jump:
		mov    (%eax),%cl
		cmp    $0x00002a,%cl
		je     _043751_jump
		lea    0x000001(%eax),%ebx
		cmp    $0x000020,%cl
		jb     _04374a_jump
		inc    %edx
		mov    %ebx,%eax
		mov    %cl,-0x000001(%edx)
		jmp    _04374c_jump

	_04374a_jump:
		mov    %ebx,%eax

	_04374c_jump:
		cmpb   $0x00002c,(%eax)
		jne    _043733_jump

	_043751_jump:
		cmpb   $0x00002a,(%eax)
		jne    _04375b_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_04375b_jump:
		inc    %eax
		movb   $0x000000,(%edx)
		pop    %ecx
		pop    %ebx
		ret    



_043764_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebx
		mov    %edx,0x000008(%esp)
		call   _01cf64_func
		mov    $0x000064,%eax
		mov    $_0c03b3_data,%esi
		mov    $_0c03bb_data,%edx
		call   _0750ac_func
		mov    %eax,%ecx
		mov    %eax,%edi
		mov    %eax,0x000004(%esp)
		push   %edi

	_043794_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0437ac_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _043794_jump

	_0437ac_jump:
		pop    %edi
		mov    %ecx,%eax
		call   _07b355_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _0437e3_jump
		mov    $0x0000c8,%eax
		call   _0750ac_func
		push   %ecx
		push   $_0c03be_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func

	_0437e3_jump:
		mov    0x000008(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0921dd_data(,%eax,4),%dl
		mov    _0921d8_data(,%eax,4),%eax
		mov    %dl,0x000014(%esp)
		mov    %eax,0x000010(%esp)
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _074d70_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    $0x0000c8,%eax
		call   _0750ac_func
		mov    %eax,%edi
		mov    %eax,(%esp)
		test   %edx,%edx
		je     _04382a_jump
		test   %eax,%eax
		jne    _043834_jump

	_04382a_jump:
		mov    $_0c03d2_data,%eax
		call   _01f878_func

	_043834_jump:
		mov    0x000008(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%esp)
		mov    _0921d4_data(%eax),%edx
		mov    %ebp,%eax
		mov    %ebp,%ecx
		call   _07a4ea_func
		mov    0x000010(%esp),%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _07a2de_func
		mov    %ebp,%eax
		mov    0x000010(%esp),%edx
		call   _07b3eb_func
		test   %edx,%edx
		jbe    _04389c_jump
		mov    0x00000c(%esp),%edx
		mov    0x000010(%esp),%ecx
		mov    %esi,%eax
		add    %esi,%ecx

	_043884_jump:
		mov    (%eax),%bl
		sub    %bl,0x000014(%esp)
		mov    _0921dc_data(%edx),%bl
		mov    (%eax),%bh
		inc    %eax
		xor    %bl,%bh
		mov    %bh,-0x000001(%eax)
		cmp    %ecx,%eax
		jb     _043884_jump

	_04389c_jump:
		cmpb   $0x000000,0x000014(%esp)
		je     _0438d0_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%ebx
		call   _0750ac_func
		push   %ebx
		push   $_0c03f2_data
		push   %eax
		mov    %eax,%edx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f878_func
		mov    %edx,%eax
		call   _075258_func

	_0438d0_jump:
		mov    %esi,%ecx
		xor    %ebx,%ebx

	_0438d4_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		call   _04372c_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _0438f9_jump
		xor    %edx,%edx
		mov    %bx,%dx
		inc    %ebx
		mov    %ecx,_0cd780_data(,%edx,4)
		lea    0x000002(%eax),%ecx
		movb   $0x000000,-0x000001(%eax)
		jmp    _0438d4_jump

	_0438f9_jump:
		mov    (%esp),%eax
		call   _075258_func
		mov    0x000004(%esp),%eax
		call   _075258_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_043c70_func:
		push   %ebx
		push   %ecx
		push   %edx
		testb  $0x000004,_0c3315_data
		je     _043ce4_jump
		mov    _0ce534_data,%eax
		mov    %eax,_0ce544_data
		mov    _0ce538_data,%eax
		mov    %eax,_0ce548_data
		mov    _0ce53c_data,%eax
		mov    %eax,_0ce54c_data
		mov    _0ce540_data,%eax
		mov    %eax,_0ce550_data
		mov    _0ce554_data,%eax
		mov    %eax,_0ce534_data
		mov    _0ce558_data,%eax
		mov    %eax,_0ce538_data
		mov    _0ce55c_data,%eax
		mov    _0ce534_data,%ecx
		mov    %eax,_0ce53c_data
		mov    _0ce560_data,%eax
		mov    _0ce538_data,%edx
		mov    %eax,_0ce540_data
		mov    %eax,%ebx
		mov    _0ce53c_data,%eax
		call   _01666f_func

	_043ce4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043ce8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		testb  $0x000004,_0c3315_data
		je     _043d57_jump
		mov    $0x000023,%ecx
		mov    _0c2610_data,%dx
		mov    $0x00004d,%ebx
		test   %dx,%dx
		je     _043d1e_jump
		mov    $0x000055,%ebx
		xor    %esi,%esi
		mov    $0x00002d,%ecx
		mov    %si,_0c2610_data

	_043d1e_jump:
		push   $0x000000
		mov    $0x00000d,%eax
		movswl %cx,%ecx
		push   $0x0000ff
		movswl %bx,%ebx
		xor    %edx,%edx
		call   _01a19c_func
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $0x0000ff
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax
		call   _01a19c_func

	_043d57_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043d5c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0ce544_data,%edi
		mov    _0ce548_data,%ebp
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    _0cd032_data,%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		sub    %eax,%edx
		add    %eax,%ebx
		sub    %eax,%esi
		add    %eax,%ecx
		cmp    %edi,%esi
		jge    _043d8b_jump
		mov    %edi,%esi

	_043d8b_jump:
		cmp    %ebp,%esi
		jle    _043d91_jump
		mov    %ebp,%esi

	_043d91_jump:
		cmp    _0ce54c_data,%edx
		jge    _043d9f_jump
		mov    _0ce54c_data,%edx

	_043d9f_jump:
		cmp    _0ce550_data,%edx
		jle    _043dad_jump
		mov    _0ce550_data,%edx

	_043dad_jump:
		cmp    %ebp,%ecx
		jle    _043db3_jump
		mov    %ebp,%ecx

	_043db3_jump:
		cmp    %edi,%ecx
		jge    _043db9_jump
		mov    %edi,%ecx

	_043db9_jump:
		cmp    _0ce550_data,%ebx
		jle    _043dc7_jump
		mov    _0ce550_data,%ebx

	_043dc7_jump:
		cmp    _0ce54c_data,%ebx
		jge    _043dd5_jump
		mov    _0ce54c_data,%ebx

	_043dd5_jump:
		mov    %ebp,_0ce548_data
		mov    %edi,_0ce544_data
		mov    %esi,_0ce554_data
		mov    %ecx,_0ce558_data
		mov    %edx,_0ce55c_data
		mov    %ebx,_0ce560_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_043e00_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    $0x000005,%ebx
		xor    %edx,%edx
		mov    $0x00000f,%ecx
		mov    %dx,_0cd004_data
		mov    %bx,_0cd00a_data
		mov    %cx,_0cd036_data
		xor    %ecx,%ecx
		mov    $0x0000ff,%ebp

	_043e31_jump:
		mov    _0c919c_data,%eax
		mov    _0c7c9c_data(%ecx),%dl
		mov    %dl,(%ecx,%eax,1)
		mov    _0c7c9d_data(%ecx),%dl
		mov    %dl,0x000001(%ecx,%eax,1)
		mov    _0c7c9e_data(%ecx),%dl
		xor    %ebx,%ebx
		mov    %dl,0x000002(%ecx,%eax,1)
		mov    %ebp,%eax
		mov    _0c7c9c_data(%ecx),%bl
		xor    %edx,%edx
		cmp    %ebx,%eax
		jle    _043e65_jump
		mov    %ebx,%eax

	_043e65_jump:
		mov    _0c7c9d_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    $0x000064,%ebx
		mov    %al,_0c7c9c_data(%ecx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		cmp    %ebx,%eax
		jle    _043e8c_jump
		mov    %ebx,%eax

	_043e8c_jump:
		mov    _0c7c9e_data(%ecx),%dl
		imul   $0x000007,%edx,%edx
		mov    $0x000064,%ebx
		mov    %al,_0c7c9d_data(%ecx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %ebp,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _043eb4_jump
		mov    %ebx,%eax

	_043eb4_jump:
		mov    %al,_0c7c9b_data(%ecx)
		cmp    $0x000300,%ecx
		jne    _043e31_jump
		mov    _0ce534_data,%eax
		mov    %eax,_0ce544_data
		mov    _0ce538_data,%eax
		mov    %eax,_0ce548_data
		mov    _0ce53c_data,%eax
		mov    %eax,_0ce54c_data
		mov    _0ce540_data,%eax
		mov    %eax,_0ce550_data
		xor    %eax,%eax
		mov    %esi,%edx
		mov    %ax,_0cd034_data
		mov    %edi,%eax
		call   _043d5c_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_043f08_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    %ecx,%esi
		mov    _0cd032_data,%ecx
		mov    _0cd034_data,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		add    %edx,%ecx
		mov    %eax,%edx
		sub    %ecx,%edx
		mov    %edx,0x000008(%esp)
		add    %eax,%ecx
		mov    %eax,%edx
		mov    0x000008(%esp),%edi
		sub    %ebx,%edx
		cmp    _0ce54c_data,%edi
		jge    _043f4a_jump
		mov    _0ce54c_data,%edi
		mov    %edi,0x000008(%esp)

	_043f4a_jump:
		mov    _0ce550_data,%edi
		cmp    %edi,%edx
		jl     _043f56_jump
		mov    %edi,%edx

	_043f56_jump:
		mov    0x000008(%esp),%edi
		sub    %edi,%edx
		mov    %edx,0x000004(%esp)
		lea    (%eax,%ebx,1),%edx
		mov    _0ce550_data,%eax
		cmp    %eax,%ecx
		jl     _043f6e_jump
		mov    %eax,%ecx

	_043f6e_jump:
		mov    _0ce54c_data,%ebx
		cmp    %ebx,%edx
		jge    _043f7a_jump
		mov    %ebx,%edx

	_043f7a_jump:
		sub    %edx,%ecx
		mov    %ecx,(%esp)
		cmpl   $0x000000,0x000004(%esp)
		jle    _044013_jump
		mov    %ebp,%eax
		mov    _0ce544_data,%edi
		sub    %esi,%eax
		cmp    %edi,%eax
		jl     _043fcf_jump
		cmp    _0ce548_data,%eax
		jge    _043fcf_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _043fc6_jump
		rep stos %al,%es:(%edi)

	_043fc6_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _043fcf_jump
		rep stos %eax,%es:(%edi)

	_043fcf_jump:
		mov    _0ce544_data,%edi
		lea    (%esi,%ebp,1),%eax
		cmp    %edi,%eax
		jl     _044013_jump
		cmp    _0ce548_data,%eax
		jge    _044013_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _04400a_jump
		rep stos %al,%es:(%edi)

	_04400a_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _044013_jump
		rep stos %eax,%es:(%edi)

	_044013_jump:
		cmpl   $0x000000,(%esp)
		jle    _04409d_jump
		mov    %ebp,%eax
		mov    _0ce544_data,%ebx
		sub    %esi,%eax
		cmp    %ebx,%eax
		jl     _04405d_jump
		cmp    _0ce548_data,%eax
		jge    _04405d_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _044054_jump
		rep stos %al,%es:(%edi)

	_044054_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04405d_jump
		rep stos %eax,%es:(%edi)

	_04405d_jump:
		mov    _0ce544_data,%edi
		add    %ebp,%esi
		cmp    %edi,%esi
		jl     _04409d_jump
		cmp    _0ce548_data,%esi
		jge    _04409d_jump
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _044094_jump
		rep stos %al,%es:(%edi)

	_044094_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04409d_jump
		rep stos %eax,%es:(%edi)

	_04409d_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_0440a8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,0x000010(%esp)
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		jmp    _0440d7_jump

	_0440c1_jump:
		mov    0x000008(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%edx
		inc    %edi
		xor    %ebx,%ebx
		push   %eax
		mov    0x000014(%esp),%eax
		inc    %esi
		call   _043f08_func

	_0440d7_jump:
		mov    _0cd034_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jle    _0440c1_jump
		xor    %edi,%edi
		mov    (%esp),%esi
		mov    %edi,0x000014(%esp)
		test   %esi,%esi
		jl     _04415a_jump
		mov    $0x000001,%edx
		lea    (%esi,%esi,1),%eax
		sub    %edx,%eax
		mov    %edx,0x00000c(%esp)
		mov    %eax,0x000004(%esp)

	_044102_jump:
		mov    0x000008(%esp),%ebx
		mov    0x000010(%esp),%eax
		mov    %esi,%ecx
		push   %ebx
		mov    %ebp,%edx
		mov    %edi,%ebx
		call   _043f08_func
		mov    0x000008(%esp),%ecx
		mov    0x000010(%esp),%eax
		mov    %esi,%ebx
		push   %ecx
		mov    %ebp,%edx
		mov    %edi,%ecx
		call   _043f08_func
		mov    0x00000c(%esp),%eax
		mov    0x000014(%esp),%edx
		inc    %edi
		add    %eax,%edx
		lea    0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x00000c(%esp)
		cmp    %edx,%esi
		jg     _044156_jump
		mov    0x000004(%esp),%eax
		dec    %esi
		sub    %eax,%edx
		lea    -0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000004(%esp)

	_044156_jump:
		cmp    %esi,%edi
		jle    _044102_jump

	_04415a_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_044164_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		testb  $0x000004,_0c3315_data
		je     _04421e_jump
		mov    _0cd038_data,%edx
		mov    _0cd016_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _044191_jump
		neg    %eax

	_044191_jump:
		mov    _0cd036_data,%edx
		mov    %eax,%ebx
		mov    _0cd014_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0441ae_jump
		neg    %eax

	_0441ae_jump:
		cmp    %ebx,%eax
		jge    _0441b4_jump
		mov    %ebx,%eax

	_0441b4_jump:
		add    $0x000006,%eax
		mov    _0cd032_data,%ebx
		mov    %ax,_0cd036_data
		mov    _0cd016_data,%ax
		mov    _0cd016_data,%edx
		mov    %ax,_0cd038_data
		mov    _0cd018_data,%ax
		sar    $0x000010,%ebx
		mov    %ax,_0cd03a_data
		mov    _0cd014_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0440a8_func
		mov    _0ce544_data,%eax
		mov    %eax,_0ce534_data
		mov    _0ce548_data,%eax
		mov    %eax,_0ce538_data
		mov    _0ce54c_data,%eax
		mov    %eax,_0ce53c_data
		mov    _0ce550_data,%eax
		mov    %eax,_0ce540_data

	_04421e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044224_func:
		testb  $0x000004,_0c3315_data
		je     _044255_jump
		mov    _0ce544_data,%eax
		mov    %eax,_0ce534_data
		mov    _0ce548_data,%eax
		mov    %eax,_0ce538_data
		mov    _0ce54c_data,%eax
		mov    %eax,_0ce53c_data
		mov    _0ce550_data,%eax
		mov    %eax,_0ce540_data

	_044255_jump:
		ret    



_044258_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c1b74_data,%cx
		movzbw _0c1bc0_data,%si
		xor    %eax,%eax
		mov    _0c1b78_data,%dx
		mov    _0c1bb4_data,%al
		add    %edx,%esi
		add    %eax,%ecx
		mov    _0c24ac_data,%ax
		mov    %ecx,%edx
		sub    %eax,%edx
		sub    $0x000010,%esi
		add    $0x000008,%edx
		mov    %esi,%eax
		mov    %dx,_0cd016_data
		sub    _0c24ae_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0cd018_data
		mov    _0cd016_data,%ax
		mov    %bx,_0cd01e_data
		mov    %ax,_0cd038_data
		mov    _0cd018_data,%ax
		mov    %bx,_0cd020_data
		mov    %ax,_0cd03a_data
		xor    %al,%al
		jmp    _0442e1_jump

	_0442cf_jump:
		inc    %al
		mov    %cx,_0cd022_data(,%edx,2)
		mov    %si,_0cd02a_data(,%edx,2)

	_0442e1_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000004,%edx
		jl     _0442cf_jump
		mov    %cx,_0cd01a_data
		mov    %si,_0cd01c_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _095b01_data,%al
		mov    %bx,_0cd032_data
		test   %eax,%eax
		jne    _044322_jump
		mov    _0cd016_data,%edx
		mov    _0cd014_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _043e00_func

	_044322_jump:
		mov    _0cd01a_data,%cx
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044330_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _0445e4_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _044365_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000009,%eax
		je     _0445e4_jump

	_044365_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _044393_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000016,%eax
		je     _0445e4_jump
		cmp    $0x000020,%eax
		je     _0445e4_jump
		cmp    $0x000026,%eax
		je     _0445e4_jump

	_044393_jump:
		mov    _0cd032_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000032,%eax
		jge    _0443f3_jump
		mov    _0c1b22_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0443f3_jump
		mov    _0cd002_data,%eax
		sar    $0x000010,%eax
		mov    $0x000200,%edx
		call   _053270_func
		cwtl   
		sub    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		add    %eax,%eax
		sar    $0x000009,%eax
		mov    %ax,_0cd034_data
		mov    _0cd002_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000080,%eax
		jge    _044411_jump
		addw   $0x000002,_0cd004_data
		jmp    _044411_jump

	_0443f3_jump:
		xor    %eax,%eax
		mov    _0c24ca_data,%al
		cmp    $0x000001,%eax
		jl     _044408_jump
		decw   _0cd034_data
		jmp    _044411_jump

	_044408_jump:
		jge    _044411_jump
		incw   _0cd034_data

	_044411_jump:
		mov    _0cd030_data,%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		mov    _0c1f02_data,%ah
		mov    _0cd022_data(%edx),%si
		mov    _0cd02a_data(%edx),%di
		test   %ah,%ah
		je     _044462_jump
		mov    _0c1ef0_data,%eax
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		mov    0x000028(%eax),%cx
		add    %ecx,%ebx
		mov    %bx,_0cd022_data(%edx)
		xor    %ebx,%ebx
		mov    0x00002c(%eax),%cx
		mov    0x000069(%eax),%bl
		add    %ecx,%ebx
		mov    %bx,_0cd02a_data(%edx)
		jmp    _044508_jump

	_044462_jump:
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _01da90_func
		xor    %eax,%eax
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%al
		add    %eax,%edx
		mov    _0cd030_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0cd022_data(,%eax,2)
		xor    %edx,%edx
		mov    _0c1b78_data,%bx
		mov    _0c1bc0_data,%dl
		add    %ebx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0cd02a_data(,%eax,2)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		setg   %al
		mov    (%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0cd030_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0cd022_data(,%eax,2)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		setg   %al
		mov    0x000008(%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0cd030_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0cd02a_data(,%eax,2)

	_044508_jump:
		mov    _0cd032_data,%ax
		mov    _0cd01a_data,%bx
		inc    %eax
		mov    _0cd01e_data,%cx
		mov    %eax,%edx
		mov    %ax,_0cd032_data
		xor    %ah,%dh
		mov    %esi,%eax
		and    $0x000003,%dl
		sub    %ebx,%eax
		mov    %dx,_0cd032_data
		sub    %cx,%ax
		je     _04454b_jump
		cwtl   
		test   %eax,%eax
		jle    _044546_jump
		mov    $0x000001,%eax
		jmp    _04454b_jump

	_044546_jump:
		mov    $0xffffffff,%eax

	_04454b_jump:
		mov    _0cd01c_data,%si
		mov    %edi,%edx
		mov    _0cd020_data,%di
		sub    %esi,%edx
		sub    %di,%dx
		je     _044575_jump
		movswl %dx,%edx
		test   %edx,%edx
		jle    _044570_jump
		mov    $0x000001,%edx
		jmp    _044575_jump

	_044570_jump:
		mov    $0xffffffff,%edx

	_044575_jump:
		add    %ax,_0cd01e_data
		mov    _0cd01c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jle    _044592_jump
		movw   $0x000008,_0cd01e_data

	_044592_jump:
		mov    _0cd01c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _0445a8_jump
		movw   $0x00fff8,_0cd01e_data

	_0445a8_jump:
		add    %dx,_0cd020_data
		mov    _0cd01e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jle    _0445c5_jump
		movw   $0x000008,_0cd020_data

	_0445c5_jump:
		mov    _0cd01e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _0446cb_jump
		movw   $0x00fff8,_0cd020_data
		jmp    _0446cb_jump

	_0445e4_jump:
		mov    _0cd032_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000032,%eax
		jl     _044612_jump
		mov    $0x000200,%eax
		call   _061dd0_func
		mov    _0cd034_data,%bx
		sub    $0x000002,%ebx
		mov    %ax,_0cd004_data
		mov    %bx,_0cd034_data

	_044612_jump:
		mov    _0cd002_data,%eax
		sar    $0x000010,%eax
		call   _053270_func
		mov    _0cd008_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    %ax,_0cd01e_data
		mov    _0cd002_data,%eax
		sar    $0x000010,%eax
		call   _0532c0_func
		mov    _0cd008_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    _0c24ca_data,%dl
		mov    %ax,_0cd020_data
		test   %dl,%dl
		je     _04467e_jump
		decw   _0cd034_data
		mov    _0cd032_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04467e_jump
		xor    %esi,%esi
		mov    %si,_0cd034_data

	_04467e_jump:
		mov    $0x000032,%eax
		call   _061dd0_func
		add    %ax,_0cd004_data
		mov    _0cd002_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000200,%eax
		jle    _0446cb_jump
		mov    _0cd00a_data,%dx
		inc    %edx
		xor    %eax,%eax
		mov    %dx,_0cd00a_data
		mov    %ax,_0cd004_data
		mov    _0cd008_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jle    _0446cb_jump
		movw   $0x00000a,_0cd00a_data

	_0446cb_jump:
		mov    _0cd01e_data,%ax
		mov    _0cd01a_data,%cx
		mov    _0cd01c_data,%si
		add    %eax,%ecx
		mov    _0cd020_data,%ax
		mov    _0c24ac_data,%di
		add    %eax,%esi
		mov    %ecx,%eax
		sub    %edi,%eax
		add    $0x000008,%eax
		mov    _0c24ae_data,%dx
		mov    %ax,_0cd016_data
		mov    %esi,%eax
		sub    %edx,%eax
		mov    %ax,_0cd018_data
		xor    %eax,%eax
		mov    %cx,_0cd01a_data
		mov    _095b01_data,%al
		mov    %si,_0cd01c_data
		test   %eax,%eax
		jne    _04473f_jump
		mov    _0cd016_data,%edx
		mov    _0cd014_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _043d5c_func

	_04473f_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_044750_switch:
		.long   _0447ac_case
		.long   _0447ac_case
		.long   _0447ac_case
		.long   _0447ac_case
		.long   _0447ac_case
		.long   _0447ac_case




_044768_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0ce86b_data,%al
		mov    _0c6b88_data(%eax),%al
		and    $0x0000ff,%eax
		cmp    $0xffffffff,%eax
		je     _044787_jump
		call   _04311c_func

	_044787_jump:
		xor    %eax,%eax
		mov    _095b01_data,%al
		test   %eax,%eax
		jne    _0447d7_jump
		mov    _0c2522_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _0447ac_case
		and    $0x00ffff,%eax
		jmp    *%cs:_044750_switch(,%eax,4)

	_0447ac_case:
		mov    _0cdf2c_data,%edx
		mov    _0c94dc_data,%ecx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    _0c94e2_data,%bx
		push   %edx
		xor    %edx,%edx
		mov    _0ce86b_data,%al
		mov    _0c94e0_data,%dx
		call   _06ca10_func

	_0447d7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0447dc_switch:
		.long   _0448a1_case
		.long   _0448a1_case
		.long   _0448a1_case
		.long   _0448a1_case
		.long   _0448a1_case
		.long   _0448a1_case
		.long   _0448ef_case
		.long   _0448a1_case
		.long   _0448a1_case
		.long   _04489f_case
		.long   _04489f_case
		.long   _0448a1_case
		.long   _0448a1_case

_044810_switch:
		.long   _0448a1_case
		.long   _0448a1_case
		.long   _0448ef_case
		.long   _04489f_case
		.long   _0448ef_case
		.long   _0448ef_case
		.long   _0448a1_case
		.long   _0448a1_case
		.long   _0448a1_case
		.long   _0448a1_case
		.long   _0448a1_case
		.long   _0448a1_case
		.long   _0448a1_case

_044844_switch:
		.long   _0448c1_case
		.long   _0448f5_case
		.long   _044915_case
		.long   _044933_case
		.long   _0448a1_case
		.long   _0448a1_case




_04485c_func:
		push   %ebx
		push   %edx
		mov    _0c24e4_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    _0c94e2_data,%bx
		shl    $0x000004,%eax
		xor    %dh,%dh
		cmp    %ebx,%eax
		jge    _04487f_jump
		mov    $0x000003,%dl
		jmp    _044881_jump

	_04487f_jump:
		xor    %dl,%dl

	_044881_jump:
		mov    _0c2522_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _0448a1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_044844_switch(,%eax,4)

	_04489f_case:
		mov    $0x000003,%dl

	_0448a1_case:
		mov    %dl,_0ce86a_data
		mov    %dh,_0dab39_data
		call   _044768_func
		mov    _0ce86a_data,%dl
		pop    %edx
		pop    %ebx
		ret    

	_0448bb_jump:
		mov    $0x000001,%dl
		mov    $0x000002,%dh
		jmp    _0448a1_case

	_0448c1_case:
		mov    _0c2520_data,%ax
		cmp    $0x000009,%ax
		jb     _0448e5_jump
		jbe    _0448bb_jump
		cmp    $0x000010,%ax
		jb     _0448a1_case
		jbe    _04489f_case
		cmp    $0x000015,%ax
		jbe    _0448a1_case
		cmp    $0x000016,%ax
		je     _04489f_case
		jmp    _0448a1_case

	_0448e5_jump:
		cmp    $0x000007,%ax
		jb     _0448a1_case
		jbe    _04489f_case
		jmp    _0448a1_case

	_0448ef_case:
		mov    $0x000001,%dl
		mov    $0x000004,%dh
		jmp    _0448a1_case

	_0448f5_case:
		mov    _0c2520_data,%ax
		cmp    $0x000007,%ax
		jb     _0448a1_case
		cmp    $0x00000b,%ax
		jbe    _0448ef_case
		cmp    $0x000011,%ax
		jbe    _0448a1_case
		cmp    $0x000012,%ax
		je     _0448ef_case
		jmp    _0448a1_case

	_044915_case:
		mov    _0c2520_data,%ax
		dec    %eax
		cmp    $0x00000c,%ax
		ja     _0448a1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0447dc_switch(,%eax,4)

	_044933_case:
		mov    _0c2520_data,%ax
		dec    %eax
		cmp    $0x00000c,%ax
		ja     _0448a1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_044810_switch(,%eax,4)

_044954_switch:
		.long   _044989_case
		.long   _0449bf_case
		.long   _0449f4_case
		.long   _044a01_case




_044964_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c94d0_data,%cx
		mov    _0ce86a_data,%dl
		cmp    $0x000003,%dl
		ja     _044a0e_jump
		xor    %eax,%eax
		mov    %dl,%al
		jmp    *%cs:_044954_switch(,%eax,4)

	_044989_case:
		xor    %eax,%eax
		mov    _0c24ac_data,%edx
		mov    _0c94e2_data,%ax
		sar    $0x000010,%edx
		sub    $0x0000d8,%eax
		imul   %eax,%edx
		mov    _0c2522_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		mov    %cx,_0c94d0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0449bf_case:
		mov    _0c24ac_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    _0dab39_data,%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0c94e2_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edx,%ecx
		mov    %cx,_0c94d0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0449f4_case:
		xor    %ecx,%ecx
		mov    %cx,_0c94d0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_044a01_case:
		mov    _0c94e2_data,%cx
		sub    $0x0000d8,%ecx

	_044a0e_jump:
		mov    %cx,_0c94d0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044a20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		call   _06a7e0_func
		test   %al,%al
		je     _044ab1_jump
		call   _03de40_func
		cmpl   $0x0003e7,_0ce83c_data
		je     _044aa7_jump
		cmpb   $0x000000,_0ce86d_data
		je     _044aa7_jump
		mov    _0ce82c_data,%eax
		call   _079410_func
		mov    _0ce830_data,%eax
		call   _07941c_func
		mov    _0ce834_data,%eax
		call   _079424_func
		mov    _0ce838_data,%eax
		call   _07942c_func
		mov    _0ce83c_data,%eax
		call   _079434_func
		call   _078d20_func
		test   %eax,%eax
		je     _044a90_jump
		mov    $_0c0480_data,%eax
		call   _01f878_func

	_044a90_jump:
		mov    $0x000001,%cl
		call   _078f30_func
		mov    %cl,_0ce86d_data
		call   _06815c_func
		jmp    _044b20_jump

	_044aa7_jump:
		xor    %bh,%bh
		mov    %bh,_0ce86d_data
		jmp    _044b20_jump

	_044ab1_jump:
		cmpb   $0x000000,_0ce86d_data
		je     _044ac4_jump
		call   _078f30_func
		call   _06815c_func

	_044ac4_jump:
		mov    $0x00000d,%edx
		mov    $0x000012,%ebx
		mov    $0x000001,%ecx
		mov    $0x000003,%eax
		xor    %edi,%edi
		mov    %dx,_0cd054_data
		mov    %bx,_0cd056_data
		mov    %cx,_0cd058_data
		mov    %cx,_0cd04c_data
		mov    %di,_0cd04e_data
		mov    %ax,_0cd052_data
		mov    $0x000012,%eax
		xor    %dl,%dl
		call   _068134_func
		mov    %dl,_095b01_data
		call   _03de40_func
		mov    %dl,_0cd77c_data

	_044b20_jump:
		xor    %eax,%eax
		mov    _0cd77c_data,%al
		cmp    $0x000003,%eax
		jl     _044b34_jump
		xor    %ch,%ch
		mov    %ch,_0cd77c_data

	_044b34_jump:
		xor    %edx,%edx
		mov    $_0c6b2c_data,%eax
		mov    _0cd77c_data,%dl
		call   _043764_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_044b4c_switch:
		.long   _044b7a_case
		.long   _044b98_case
		.long   _044bb6_case
		.long   _044bd7_case
		.long   _044bf8_case




_044b60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    $0x000004,%al
		ja     _044c0b_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_044b4c_switch(,%eax,4)

	_044b7a_case:
		mov    $0x00003c,%eax
		xor    %edi,%edi
		call   _038c58_func
		mov    %di,_0c6b7e_data
		call   _0348e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_044b98_case:
		xor    %esi,%esi
		mov    $0x000032,%eax
		mov    %si,_0c6b7e_data
		call   _038c58_func
		call   _0348e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_044bb6_case:
		mov    $0x000001,%ecx
		mov    $0x00003c,%eax
		mov    %cx,_0c6b7e_data
		call   _038c58_func
		call   _0348e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_044bd7_case:
		mov    $0x000001,%ebx
		mov    $0x000064,%eax
		mov    %bx,_0c6b7e_data
		call   _038c58_func
		call   _0348e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_044bf8_case:
		xor    %edx,%edx
		mov    $0x000064,%eax
		mov    %dx,_0c6b7e_data
		call   _038c58_func

	_044c0b_jump:
		call   _0348e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044c18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		xor    %eax,%eax
		mov    _095b01_data,%al
		test   %eax,%eax
		jne    _044cea_jump
		cmpb   $0x000000,_0c3324_data
		je     _044c89_jump
		mov    _0ce816_data,%eax
		mov    _09608a_data,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    _096082_data(,%eax,2),%ebx
		mov    _09607a_data(,%eax,2),%edx
		sar    $0x000010,%ebx
		mov    _096072_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05214c_func
		mov    _0ce538_data,%edx
		mov    _0ce534_data,%ecx
		mov    _0ce540_data,%ebx
		mov    _0ce53c_data,%eax
		call   _01666f_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_044c89_jump:
		mov    _0ce816_data,%eax
		sar    $0x000010,%eax
		mov    _09608a_data(,%eax,2),%ecx
		mov    _096082_data(,%eax,2),%ebx
		mov    _09607a_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _096072_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05214c_func
		mov    _0ce538_data,%edx
		mov    _0ce534_data,%ecx
		mov    _0ce540_data,%ebx
		mov    _0ce53c_data,%eax
		call   _01666f_func
		mov    _0cdf2c_data,%edi
		call   _01529a_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_044cea_jump:
		call   _016609_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044d00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%esi
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%cx
		xor    %eax,%eax
		mov    %esi,%edi
		test   %cx,%cx
		jle    _044d47_jump
		jmp    _044d35_jump

	_044d22_jump:
		cmp    $0x000070,%ebx
		jne    _044d29_jump
		mov    %eax,%edi

	_044d29_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _044d47_jump

	_044d35_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000cb,%ebx
		jne    _044d22_jump
		mov    %eax,%esi
		jmp    _044d29_jump

	_044d47_jump:
		mov    %di,_0db1be_data
		mov    %si,_0db1c0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044d5c_func:
		push   %edx
		mov    _0c25ca_data,%dx
		mov    %dx,_0c25d2_data
		mov    _0c25cc_data,%dx
		mov    %dx,_0c25d4_data
		call   _0189c4_func
		mov    _0ce538_data,%dx
		sub    _0ce534_data,%dx
		mov    %ax,_0c45c8_data
		sub    %edx,%eax
		sub    $0x000010,%eax
		mov    %ax,_0c25d6_data
		mov    _0c2524_data,%ax
		mov    %ax,_0c25d8_data
		call   _018a40_func
		pop    %edx
		ret    



_044db0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,_0c25e1_data
		jne    _044e73_jump
		mov    _0c25d2_data,%ecx
		mov    _0c24ee_data,%eax
		mov    _0c25d0_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _044df7_jump
		cmp    %ecx,%eax
		jg     _044df7_jump
		mov    $0x000001,%eax
		jmp    _044df9_jump

	_044df7_jump:
		xor    %eax,%eax

	_044df9_jump:
		test   %eax,%eax
		je     _044e3c_jump
		mov    _0c25d6_data,%ecx
		mov    _0c24f0_data,%eax
		mov    _0c25d4_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _044e32_jump
		cmp    %ecx,%eax
		jg     _044e32_jump
		mov    $0x000001,%eax
		jmp    _044e34_jump

	_044e32_jump:
		xor    %eax,%eax

	_044e34_jump:
		test   %eax,%eax
		je     _044e3c_jump
		mov    $0x000001,%al
		jmp    _044e3e_jump

	_044e3c_jump:
		xor    %al,%al

	_044e3e_jump:
		mov    %al,_0c25e1_data
		test   %al,%al
		je     _044ea3_jump
		mov    _0c24ac_data,%ax
		mov    %ax,_0c25cc_data
		mov    %ax,_0c25ca_data
		mov    _0c25d6_data,%ax
		mov    %ax,_0c25ce_data
		mov    _0c25d8_data,%ax
		mov    %ax,_0c25d0_data
		jmp    _044ea3_jump

	_044e73_jump:
		mov    0x00007f(%edx),%bl
		test   %bl,%bl
		je     _044e8a_jump
		cmpb   $0x000000,_0c24ca_data
		jne    _044e8a_jump
		mov    %bl,%cl
		dec    %cl
		mov    %cl,0x00007f(%edx)

	_044e8a_jump:
		mov    _0c25ce_data,%ax
		mov    _0c24ae_data,%bx
		cmp    %bx,%ax
		jge    _044ea3_jump
		mov    %bx,_0c25ce_data

	_044ea3_jump:
		cmpb   $0x000000,_0c25e1_data
		je     _044eb8_jump
		cmpb   $0x000000,0x00007f(%edx)
		jne    _044eb8_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_044eb8_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044ec0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _044ed2_jump
		cmp    $0x000001,%dl
		je     _044efd_jump
		jmp    _044f2c_jump

	_044ed2_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0c25c8_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		or     $0x000008,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000081(%ebx)
		jmp    _044f97_jump

	_044efd_jump:
		mov    _0c25ca_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ebx),%al
		add    $0x000130,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%ebx)
		mov    0x000081(%ebx),%dl
		and    $0x0000f7,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000081(%ebx)
		jmp    _044f97_jump

	_044f2c_jump:
		mov    _0c25c8_data,%esi
		mov    _0c25ca_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jle    _044f83_jump
		add    $0x000130,%edi
		sub    %ecx,%edi
		mov    0x000081(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_044f83_jump:
		sub    %ecx,%esi
		mov    0x000081(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000081(%ebx)

	_044f97_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_044fa0_func:
		push   %edx
		mov    _0db1a6_data,%eax
		sar    $0x000010,%eax
		call   _0532c0_func
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000009,%edx
		sbb    %edx,%eax
		sar    $0x000009,%eax
		mov    _0db1a2_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,_0c25da_data
		mov    _0db1a6_data,%eax
		sar    $0x000010,%eax
		call   _053270_func
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000009,%edx
		sbb    %edx,%eax
		sar    $0x000009,%eax
		mov    _0db1a4_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		addw   $0x000004,_0db1a8_data
		mov    %ax,_0c25dc_data
		mov    _0db1a6_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000200,%eax
		jle    _045038_jump
		movw   $0x008300,_0db1a8_data

	_045038_jump:
		pop    %edx
		ret    

_04503c_switch:
		.long   _04507d_case
		.long   _0450e7_case
		.long   _04508a_case
		.long   _0450e7_case
		.long   _04508a_case
		.long   _0450e7_case
		.long   _0450af_case




_045058_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,(%esp)
		jmp    _0451b5_jump

	_04506c_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %di,%ax
		jl     _0450d0_jump
		jmp    _0451b1_jump

	_04507d_case:
		xor    %dl,%bl
		mov    %bl,0x00000c(%esp)
		movb   $0x000001,0x000008(%esp)
		jmp    _0450e7_case

	_04508a_case:
		testb  $0x000008,0x000081(%esi)
		je     _0450a1_jump
		mov    $0x000004,%bh
		mov    $0x000005,%dh
		mov    %bh,0x00000c(%esp)
		mov    %dh,0x000008(%esp)
		jmp    _0450e7_case

	_0450a1_jump:
		mov    $0x000002,%dh
		mov    $0x000003,%bl
		mov    %dh,0x00000c(%esp)
		mov    %bl,0x000008(%esp)
		jmp    _0450e7_case

	_0450af_case:
		testb  $0x000008,0x000081(%esi)
		je     _0450bd_jump
		movb   $0x000001,0x000004(%esp)

	_0450bd_jump:
		mov    $0x000006,%dh
		mov    $0x000007,%bl
		mov    %dh,0x00000c(%esp)
		mov    %bl,0x000008(%esp)
		jmp    _0450e7_case

	_0450cb_jump:
		mov    0x00006c(%esi),%dl
		dec    %dl

	_0450d0_jump:
		xor    %dh,%dh
		mov    %dh,0x000004(%esp)
		cmp    $0x000006,%dl
		ja     _0450e7_case
		xor    %ebx,%ebx
		mov    %dl,%bl
		jmp    *%cs:_04503c_switch(,%ebx,4)

	_0450e7_case:
		xor    %ebx,%ebx
		mov    0x000060(%ecx),%bx
		cmp    $0x0000c2,%ebx
		jne    _04506c_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _04506c_jump
		mov    0x00000c(%esp),%bl
		mov    0x00006c(%ecx),%dh
		cmp    %bl,%dh
		je     _045118_jump
		cmp    0x000008(%esp),%dh
		jne    _04506c_jump

	_045118_jump:
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f7d4_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    (%esp),%bl
		mov    %eax,0x00002c(%ecx)
		test   %bl,%bl
		je     _045169_jump
		mov    0x000008(%esp),%al
		jmp    _04516d_jump

	_045169_jump:
		mov    0x00000c(%esp),%al

	_04516d_jump:
		xor    %ebx,%ebx
		mov    $0x000001,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d6f8_func
		mov    %ecx,%eax
		call   _01df3c_func
		mov    0x000004(%esp),%al
		mov    $0x000001,%ebx
		test   %al,%al
		je     _04519a_jump
		cmpb   $0x000000,(%esp)
		sete   %al
		jmp    _0451a1_jump

	_04519a_jump:
		cmpb   $0x000000,(%esp)
		setne  %al

	_0451a1_jump:
		and    $0x0000ff,%eax
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ecx,%eax
		call   _056614_func

	_0451b1_jump:
		addb   $0x000002,(%esp)

	_0451b5_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000002,%eax
		jg     _0451d9_jump
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%di
		xor    %eax,%eax
		test   %di,%di
		jg     _0450cb_jump
		jmp    _0451b1_jump

	_0451d9_jump:
		mov    %esi,%eax
		call   _0706e8_func
		mov    0x000032(%esi),%edx
		mov    $0x0000dc,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    0x000081(%esi),%bl
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%esi)
		add    $0x000010,%esp

	_045209_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_045210_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		mov    $0xffffffff,%edi
		movswl %si,%edx
		cmp    $0x000008,%edx
		jge    _045209_jump
		xor    %eax,%eax
		jmp    _045236_jump

	_045228_jump:
		inc    %esi
		movswl %si,%edx
		cmp    $0x000008,%edx
		jge    _045209_jump
		xor    %eax,%eax
		jmp    _045236_jump

	_045235_jump:
		inc    %eax

	_045236_jump:
		movswl %ax,%edx
		cmp    $0x000008,%edx
		jge    _045228_jump
		movswl %si,%ebx
		add    %edx,%edx
		shl    $0x000004,%ebx
		add    %edx,%ebx
		mov    _0db1c6_data(%ebx),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _045235_jump
		imul   $0x000084,%edx,%ecx
		mov    _0c1b34_data,%edx
		movb   $0x000046,0x00007f(%ecx,%edx,1)
		mov    %di,_0db1c8_data(%ebx)
		jmp    _045235_jump

_045270_switch:
		.long   _045438_case
		.long   _04546b_case
		.long   _045483_case
		.long   _0454b1_case
		.long   _045438_case
		.long   _04546b_case
		.long   _04549b_case
		.long   _0454b1_case
		.long   _0454cb_case




_045294_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		xor    %eax,%eax
		mov    _0db1ac_data,%al
		cmp    $0x0000fe,%eax
		jne    _0453d1_jump
		mov    _0db1b6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		jne    _0453d1_jump
		mov    _0c1b74_data,%dx
		movzbw 0x000068(%edi),%si
		mov    0x000028(%edi),%bx
		xor    %eax,%eax
		add    %ebx,%esi
		mov    _0c1bb4_data,%al
		movswl %si,%ebx
		add    %edx,%eax
		lea    0x000008(%ebx),%ecx
		cwtl   
		sub    $0x000008,%ebx
		cmp    %ebx,%eax
		jl     _0452f8_jump
		cmp    %ecx,%eax
		jg     _0452f8_jump
		mov    $0x000001,%eax
		jmp    _0452fa_jump

	_0452f8_jump:
		xor    %eax,%eax

	_0452fa_jump:
		test   %eax,%eax
		je     _0453c7_jump
		mov    _0c1b34_data,%ebx
		mov    _0c1b38_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _04532b_jump
		jmp    _0453b8_jump

	_04531b_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %cx,%ax
		jge    _0453b8_jump

	_04532b_jump:
		xor    %edx,%edx
		mov    0x000060(%ebx),%dx
		cmp    $0x0000c1,%edx
		jne    _04531b_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _04531b_jump
		mov    _0ce534_data,%ebp
		mov    0x000081(%ebx),%dl
		xor    %eax,%eax
		and    $0x0000f7,%dl
		mov    0x000068(%ebx),%al
		mov    %dl,0x000081(%ebx)
		movswl %si,%edx
		movb   $0x000000,0x00006c(%ebx)
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0x000028(%ebx)
		mov    _0ce538_data,%edx
		mov    0x000069(%edi),%al
		mov    0x00002c(%edi),%ecx
		movzbl 0x000069(%ebx),%edi
		add    %ecx,%eax
		sub    %ebp,%edx
		sub    %edi,%eax
		mov    $0x000012,%ecx
		mov    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		shl    $0x000002,%eax
		movl   $0x000001,0x000024(%ebx)
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		sub    %eax,%edi
		or     $0x000004,%dh
		mov    %edi,0x00002c(%ebx)
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		call   _01f7d4_func
		movb   $0x000032,0x00007f(%ebx)

	_0453b8_jump:
		mov    $0x0000ff,%bl
		mov    %si,_0db1b8_data
		mov    %bl,_0db1ac_data

	_0453c7_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0453d1_jump:
		xor    %ah,%ah
		mov    %ah,0x000014(%esp)
		jmp    _04564f_jump

	_0453dc_jump:
		xor    %edx,%edx
		mov    0x000028(%edi),%bx
		mov    0x000068(%edi),%dl
		add    %edx,%ebx
		mov    %bx,0x000008(%esp)
		test   %eax,%eax
		jne    _0454e7_jump
		mov    _0ce540_data,%edx
		sub    _0ce53c_data,%edx
		mov    $0x000009,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0db1b6_data,%ebx
		mov    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jge    _045426_jump
		neg    %eax

	_045426_jump:
		cmp    %edx,%eax
		jge    _0454e7_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045438_case:
		xor    %cl,%cl
		mov    %cl,0x000010(%esp)
		mov    %cl,0x00000c(%esp)

	_045442_jump:
		cmpw   $0x000000,0x000008(%esp)
		je     _04563a_jump
		mov    _0c1b34_data,%ebx
		mov    _0c1b38_data,%si
		xor    %ecx,%ecx
		test   %si,%si
		jg     _045547_jump
		jmp    _04561a_jump

	_04546b_case:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		mov    $0x000002,%bh
		shr    $0x000007,%al
		mov    %bh,0x000010(%esp)
		mov    %al,0x00000c(%esp)
		jmp    _045442_jump

	_045483_case:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		mov    $0x000006,%bl
		shr    $0x000007,%al
		mov    %bl,0x000010(%esp)
		mov    %al,0x00000c(%esp)
		jmp    _045442_jump

	_04549b_case:
		mov    $0x000006,%ch
		mov    0x000081(%edi),%ah
		mov    %ch,0x000010(%esp)
		test   $0x000008,%ah
		sete   0x00000c(%esp)
		jmp    _045442_jump

	_0454b1_case:
		movb   $0x000004,0x000010(%esp)
		mov    0x000081(%edi),%dh
		test   $0x000008,%dh
		sete   %al
		mov    %al,0x00000c(%esp)
		jmp    _045442_jump

	_0454cb_case:
		mov    $0xffffffff,%ecx
		xor    %esi,%esi
		shl    $0x000004,%eax
		mov    %si,0x000008(%esp)
		mov    %cx,_0db1c8_data(%ebx,%eax,1)
		jmp    _045442_jump

	_0454e7_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000014(%esp),%al
		mov    _0db1ac_data,%dl
		lea    0x000000(,%eax,4),%ebx
		mov    _0db1b0_data(%eax),%cl
		mov    _09644c_data(,%edx,4),%edx
		inc    %cl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    %cl,_0db1b0_data(%eax)
		mov    %cl,%bl
		mov    (%edx),%edx
		add    %ebx,%ebx
		mov    (%edx,%ebx,1),%dx
		cmp    $0x000008,%dx
		ja     _045442_jump
		and    $0x00ffff,%edx
		jmp    *%cs:_045270_switch(,%edx,4)

	_045537_jump:
		inc    %ecx
		add    $0x000084,%ebx
		cmp    %si,%cx
		jge    _04561a_jump

	_045547_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x0000c1,%eax
		jne    _045537_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _045537_jump
		mov    0x000010(%esp),%al
		mov    %al,0x00006c(%ebx)
		mov    0x00000c(%esp),%al
		and    $0x000001,%al
		mov    0x000081(%ebx),%ah
		and    $0x0000f7,%ah
		shl    $0x000003,%al
		mov    %ah,%dl
		movzbl 0x000014(%esp),%ebp
		or     %al,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%ebx)
		mov    _0db1b0_data(%ebp),%al
		add    %eax,%eax
		mov    %eax,0x000004(%esp)
		mov    %ebp,%eax
		mov    0x000004(%esp),%edx
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    %cx,_0db1c8_data(%eax)
		xor    %eax,%eax
		mov    0x000068(%ebx),%al
		mov    %eax,(%esp)
		mov    0x000006(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		movb   $0x000000,0x00006b(%ebx)
		sub    %edx,%eax
		mov    %eax,0x000028(%ebx)
		xor    %eax,%eax
		mov    0x00002c(%edi),%edx
		mov    0x000069(%edi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		mov    _0ce534_data,%eax
		mov    %edx,(%esp)
		mov    _0ce538_data,%edx
		sub    %eax,%edx
		movl   $0x000012,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		sub    $0x000006,%ebp
		imul   %ebp,%eax
		mov    (%esp),%edx
		add    %eax,%edx
		mov    %edx,0x00002c(%ebx)
		mov    0x000081(%ebx),%dh
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		call   _01f7d4_func

	_04561a_jump:
		cmp    %si,%cx
		jl     _04563a_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		xor    %edx,%edx
		mov    _0db1b0_data(%eax),%dl
		shl    $0x000004,%eax
		movw   $0x00ffff,_0db1c8_data(%eax,%edx,2)

	_04563a_jump:
		xor    %eax,%eax
		mov    0x000028(%edi),%dx
		mov    0x000068(%edi),%al
		add    %edx,%eax
		mov    %ax,_0db1b8_data

	_04564b_jump:
		incb   0x000014(%esp)

	_04564f_jump:
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		cmp    $0x000008,%eax
		jge    _0453c7_jump
		xor    %edx,%edx
		mov    _0db1b0_data(%eax),%dl
		cmp    $0x000007,%edx
		jne    _0453dc_jump
		mov    $0x0000ff,%dl
		mov    %dl,_0db1ac_data
		mov    %dl,_0db1b0_data(%eax)
		movw   $0x008300,_0db1b8_data
		jmp    _04564b_jump



_045688_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		movzbl %dl,%esi
		mov    %esi,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x00000c(%ecx),%eax
		lea    0x000000(,%esi,8),%edx
		movb   $0x000000,0x00006b(%ecx)
		mov    (%eax),%esi
		mov    0x000002(%edx,%esi,1),%dl
		mov    %dl,0x00006a(%ecx)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0456b4_func:
		test   %dl,%dl
		je     _0456c0_jump
		movw   $0x0000d5,0x000060(%eax)
		jmp    _0456c6_jump

	_0456c0_jump:
		movw   $0x000062,0x000060(%eax)

	_0456c6_jump:
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		mov    _0930a8_data(,%edx,2),%dx
		mov    %dx,0x00005c(%eax)
		ret    

_0456dc_switch:
		.long   _04628b_case
		.long   _0461dc_case
		.long   _04628b_case
		.long   _04626e_case
		.long   _04628b_case

_0456f0_switch:
		.long   _045827_case
		.long   _04582d_case
		.long   _04585a_case
		.long   _04580a_case
		.long   _04580a_case
		.long   _045b16_case
		.long   _04580a_case
		.long   _045bec_case
		.long   _045ccf_case
		.long   _04580a_case
		.long   _04580a_case
		.long   _04580a_case
		.long   _045d5e_case
		.long   _045e86_case
		.long   _045eeb_case
		.long   _045fcf_case
		.long   _04602d_case
		.long   _04580a_case
		.long   _04616b_case
		.long   _0463b7_case
		.long   _04580a_case
		.long   _046401_case
		.long   _0464b7_case
		.long   _04659c_case
		.long   _046727_case
		.long   _046595_case
		.long   _046122_case
		.long   _04683b_case
		.long   _0468d8_case
		.long   _046a80_case
		.long   _046573_case
		.long   _0467db_case
		.long   _04631c_case
		.long   _04631c_case
		.long   _046243_case
		.long   _0462a8_case
		.long   _045f3c_case
		.long   _046778_case
		.long   _045dee_case
		.long   _04644b_case
		.long   _045a18_case
		.long   _045b5c_case
		.long   _045914_case
		.long   _04631c_case
		.long   _0459e1_case
		.long   _04659c_case
		.long   _0458b1_case




_0457ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0db1be_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b34_data,%edi
		add    %edx,%eax
		mov    _0db1bc_data,%edx
		shl    $0x000002,%eax
		sar    $0x000010,%edx
		lea    (%edi,%eax,1),%ebp
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edi
		movb   $0x0000ff,0x000004(%esp)
		mov    _0db1a6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		jne    _045817_jump
		mov    %esi,%eax
		add    $0x000081,%eax
		mov    %eax,(%esp)

	_04580a_case:
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump

	_045817_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045827_case:
		incb   _0c25e7_data

	_04582d_case:
		xor    %ah,%ah
		mov    $0x000001,%dl
		mov    %ah,_0c25e3_data
		mov    %dl,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04585a_case:
		mov    _0c25e8_data,%al
		mov    %al,_0c25e7_data
		mov    _0c25e2_data,%al
		mov    %al,_0c25e3_data
		xor    %eax,%eax
		mov    _0c25e3_data,%al
		cmp    $0x0000ff,%eax
		jne    _045886_jump
		mov    %al,%bh
		inc    %bh
		mov    %bh,_0c25e3_data

	_045886_jump:
		movb   $0x000001,_0c25e4_data
		movb   $0x0000ff,_0c25e8_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0458b1_case:
		mov    $0xffff8300,%edx
		mov    $0x000036,%ebx
		mov    $_0c1b4c_data,%eax
		mov    %dx,_0c25ac_data
		mov    $0x000003,%edx
		call   _01d6f8_func
		mov    $0x000001,%bl
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		mov    %bl,_0c25a0_data
		call   _01d5a4_func
		xor    %bh,%bh
		sub    $0x000003,%eax
		mov    %bh,_0c25e4_data
		mov    %ax,0x000048(%esi)
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045914_case:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    _0c1b74_data,%ax
		xor    %edx,%edx
		mov    %ax,_0c25ac_data
		mov    %esi,%eax
		call   _056614_func
		mov    $0x000001,%bl
		movw   $0x000000,0x000048(%esi)
		mov    %bl,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045967_jump:
		mov    $0x000010,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x00002b,%edx
		mov    %ebp,%eax
		call   _045688_func
		mov    0x00006c(%edi),%al
		xor    %edx,%edx
		inc    %al
		mov    %al,%dl
		mov    %edi,%eax
		mov    $0x000001,%ebx
		call   _01d6e8_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edi)
		xor    %dl,%dl
		mov    0x00002c(%esi),%eax
		movb   $0x000000,0x00006b(%edi)
		mov    %dl,_0c25e4_data
		mov    %eax,0x00002c(%edi)
		jmp    _0459f4_jump

	_0459b9_jump:
		mov    0x000081(%ebp),%cl
		xor    %al,%al
		and    $0x0000fb,%cl
		mov    %al,_0c25e3_data
		mov    $0x000001,%ah
		mov    %cl,0x000081(%ebp)
		mov    $0x000006,%ch
		mov    %ah,_0c25e4_data
		mov    %ch,_0c25e7_data
		jmp    _0459f4_jump

	_0459e1_case:
		mov    0x00006c(%edi),%al
		cmp    $0x000025,%al
		jb     _0459f4_jump
		cmp    $0x000029,%al
		jbe    _045967_jump
		cmp    $0x00002a,%al
		je     _0459b9_jump

	_0459f4_jump:
		movb   $0x0000ff,_0c25e6_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045a18_case:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x00002c(%esi),%ax
		mov    %ax,_0c25dc_data
		mov    _0c1ef0_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		je     _045ae3_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		mov    0x00000c(%esi),%eax
		mov    (%eax),%eax
		mov    0x000046(%esi),%edx
		mov    0x00000d(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %ax,_0c25da_data
		mov    _0c1ef0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _045a9a_jump
		mov    _0c25da_data,%dx
		mov    0x000028(%esi),%ax
		add    %eax,%edx
		mov    %dx,_0c25da_data
		jmp    _045aaf_jump

	_045a9a_jump:
		jle    _045aaf_jump
		mov    _0c25da_data,%cx
		mov    0x000028(%esi),%ax
		sub    %ecx,%eax
		mov    %ax,_0c25da_data

	_045aaf_jump:
		mov    $0x0000ff,%ch
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0c25de_data
		mov    %ch,_0c25e0_data
		mov    %ah,_0c25df_data
		mov    $0x0000ff,%ecx
		mov    %esi,%eax
		mov    %ecx,%ebx
		call   _018710_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		jmp    _045aec_jump

	_045ae3_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx

	_045aec_jump:
		call   _056614_func
		xor    %dl,%dl
		mov    %dl,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045b16_case:
		mov    %esi,%eax
		call   _06f8e4_func
		xor    %bl,%bl
		mov    $0x000001,%eax
		mov    _0c331c_data,%dh
		mov    %bl,_0c25e4_data
		or     $0x000020,%dh
		mov    %ax,_0c251c_data
		mov    %dh,_0c331c_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045b5c_case:
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _01dea4_func
		mov    0x000081(%esi),%al
		xor    %ebx,%ebx
		shl    $0x000004,%al
		shl    $0x000004,%dl
		shr    $0x000007,%al
		shr    $0x000007,%dl
		mov    %al,%bl
		xor    %eax,%eax
		mov    %dl,%al
		cmp    %eax,%ebx
		je     _045bc8_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		call   _056614_func
		mov    %cl,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045bc8_jump:
		movb   $0x000001,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045bec_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %bl,%bl
		movb   $0x000003,0x00007e(%esi)
		mov    %bl,_0db1bc_data
		mov    %bl,_0db1bb_data
		call   _0456b4_func
		mov    $0x00002c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _044ec0_func
		mov    0x000028(%esi),%eax
		sub    $0x000090,%eax
		xor    %edx,%edx
		mov    %eax,0x000028(%esi)
		mov    _0c45c6_data,%eax
		mov    0x000069(%esi),%dl
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%esi),%cl
		sub    $0x000020,%eax
		and    $0x0000f7,%cl
		mov    %eax,0x00002c(%esi)
		xor    %eax,%eax
		mov    _0c25ca_data,%dx
		mov    0x000068(%esi),%al
		mov    %cl,0x000081(%esi)
		sub    %eax,%edx
		mov    $0x000001,%ch
		mov    %edx,%eax
		mov    %ch,_0c25df_data
		add    $0x000032,%eax
		mov    $0x0000ff,%ecx
		mov    %ax,_0c25da_data
		mov    0x00002c(%esi),%ax
		mov    %ecx,%ebx
		mov    %ax,_0c25dc_data
		mov    $0x0000ff,%al
		mov    $0x000001,%edx
		mov    %al,_0c25de_data
		mov    %al,_0c25e0_data
		mov    %esi,%eax
		call   _018710_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _056614_func
		xor    %dl,%dl
		mov    %dl,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045ccf_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000004,%ecx
		call   _0456b4_func
		mov    $0x000001,%edx
		mov    0x000028(%esi),%ax
		mov    %cx,_0db1a8_data
		mov    %ax,_0db1a4_data
		mov    0x00002c(%esi),%ax
		mov    $0x0000ff,%ecx
		sub    $0x00003c,%eax
		mov    %ecx,%ebx
		mov    %ax,_0db1a6_data
		call   _044fa0_func
		mov    %esi,%eax
		call   _018710_func
		mov    $0x000001,%al
		mov    $0x000001,%ebx
		mov    %al,_0c25df_data
		mov    $0x0000ff,%ah
		mov    %ebx,%edx
		mov    %ah,_0c25de_data
		mov    %ah,_0c25e0_data
		mov    %esi,%eax
		call   _056614_func
		xor    %dh,%dh
		mov    %dh,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045d5e_case:
		mov    $0x000001,%edx
		mov    $0x000001,%bl
		mov    %esi,%eax
		mov    $0x0000ff,%ecx
		call   _0456b4_func
		mov    0x000028(%esi),%ax
		mov    _0c45c8_data,%dx
		add    $0x00006e,%eax
		mov    %bl,_0c25df_data
		mov    %ax,_0c25da_data
		xor    %eax,%eax
		mov    $0x0000ff,%bh
		mov    0x000069(%esi),%al
		mov    %bh,_0c25de_data
		sub    %eax,%edx
		mov    %bh,_0c25e0_data
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x00007c,%eax
		mov    $0x000001,%edx
		mov    %ax,_0c25dc_data
		mov    %esi,%eax
		call   _018710_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _056614_func
		mov    %ch,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045dee_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _0456b4_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %cl,%cl
		call   _01d6f8_func
		mov    $0x000001,%bl
		mov    _0c45c8_data,%ax
		mov    %cl,_0c25e0_data
		xor    %edx,%edx
		mov    %bl,_0c25df_data
		mov    0x000069(%esi),%dl
		xor    %ecx,%ecx
		mov    $0x0000ff,%bh
		sub    %edx,%eax
		mov    $0x000001,%edx
		mov    %ax,_0c25dc_data
		mov    %bh,_0c25de_data
		mov    0x000028(%esi),%ax
		mov    $0x0000ff,%ebx
		mov    %ax,_0c25da_data
		mov    %esi,%eax
		call   _018710_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _056614_func
		mov    %ch,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045e86_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x00000a,%ebx
		call   _0456b4_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ebp)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ebp)
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edi)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%edi)
		mov    %esi,%eax
		call   _056614_func
		xor    %dh,%dh
		mov    %dh,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045eeb_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000025,%ebx
		call   _0456b4_func
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		orb    $0x000004,0x000081(%edi)
		mov    %edi,%eax
		call   _01f7d4_func
		mov    %edi,%eax
		mov    $0x000001,%dl
		call   _01df3c_func
		mov    %dl,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045f3c_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0456b4_func
		testb  $0x000004,0x000081(%edi)
		jne    _045f58_jump
		mov    %edi,%eax
		call   _01f7d4_func

	_045f58_jump:
		orb    $0x000004,0x000081(%edi)
		movb   $0x000006,0x00007e(%esi)
		testb  $0x000004,0x000081(%ebp)
		jne    _045f73_jump
		mov    %ebp,%eax
		call   _01f7d4_func

	_045f73_jump:
		mov    $0x000013,%ebx
		mov    0x000081(%ebp),%cl
		mov    %esi,%eax
		or     $0x000004,%cl
		xor    %edx,%edx
		mov    %cl,0x000081(%ebp)
		call   _01d6f8_func
		mov    $0x000024,%edx
		mov    %ebp,%eax
		mov    $0x000001,%ebx
		call   _045688_func
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %ch,%ch
		call   _056614_func
		mov    %ch,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_045fcf_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0456b4_func
		mov    $0x000001,%eax
		call   _061dd0_func
		test   %ax,%ax
		je     _045fed_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		jmp    _045ff4_jump

	_045fed_jump:
		mov    $0x000009,%ebx
		mov    %esi,%eax

	_045ff4_jump:
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		xor    %al,%al
		mov    %al,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04602d_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0456b4_func
		mov    _0db1bc_data,%dl
		mov    $0x000001,%ebx
		inc    %dl
		mov    %esi,%eax
		mov    %dl,_0db1bc_data
		mov    %ebx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		mov    0x00002c(%esi),%ax
		mov    %ax,_0c25dc_data
		mov    0x00000c(%esi),%eax
		mov    0x000004(%eax),%eax
		mov    0x000046(%esi),%edx
		mov    0x000005(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    0x000081(%esi),%dh
		mov    %ax,_0c25da_data
		test   $0x000008,%dh
		je     _0460b3_jump
		mov    _0c25da_data,%bx
		mov    0x000028(%esi),%ax
		add    %eax,%ebx
		mov    %bx,_0c25da_data
		jmp    _0460c6_jump

	_0460b3_jump:
		mov    _0c25da_data,%dx
		mov    0x000028(%esi),%ax
		sub    %edx,%eax
		mov    %ax,_0c25da_data

	_0460c6_jump:
		mov    $0x000001,%bl
		mov    $0x0000ff,%ecx
		mov    $0x000001,%edx
		mov    %bl,_0c25df_data
		mov    $0x0000ff,%bh
		mov    %esi,%eax
		mov    %bh,_0c25de_data
		mov    %bh,_0c25e0_data
		mov    %ecx,%ebx
		call   _018710_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _056614_func
		mov    %ch,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_046122_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000005,%ebx
		call   _0456b4_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		xor    %al,%al
		mov    %al,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04616b_case:
		mov    $0x000005,%ch
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000007,%ebx
		call   _0456b4_func
		mov    $0x000004,%al
		xor    %edx,%edx
		mov    %al,_0db1ab_data
		mov    %esi,%eax
		mov    %ch,_0c25e6_data
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		xor    %ah,%ah
		mov    %ah,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0461c4_jump:
		mov    $0x00001f,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		mov    $0x000021,%edx
		mov    %ebp,%eax
		call   _045688_func

	_0461dc_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0456b4_func
		mov    0x000081(%ebp),%al
		mov    $0x000001,%ebx
		or     $0x000004,%al
		xor    %edx,%edx
		mov    %al,0x000081(%ebp)
		mov    %esi,%eax
		call   _056614_func
		xor    %ah,%ah
		mov    %ah,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_046229_jump:
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		mov    $0x000019,%edx
		mov    %ebp,%eax
		call   _045688_func
		jmp    _0461dc_case

	_046243_case:
		mov    0x00006c(%esi),%ah
		mov    %ah,%al
		cmp    $0x000015,%ah
		jb     _046264_jump
		jbe    _046229_jump
		cmp    $0x00001f,%ah
		jb     _0461dc_case
		jbe    _046229_jump
		cmp    $0x000022,%ah
		je     _0461c4_jump
		jmp    _0461dc_case

	_046264_jump:
		cmp    $0x000013,%ah
		je     _046229_jump
		jmp    _0461dc_case

	_04626e_case:
		mov    $0x000017,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		mov    $0x00001a,%edx
		mov    %ebp,%eax
		call   _045688_func
		jmp    _0461dc_case

	_04628b_case:
		mov    $0x00001e,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		mov    $0x000020,%edx
		mov    %ebp,%eax
		call   _045688_func
		jmp    _0461dc_case

	_0462a8_case:
		mov    0x00006c(%esi),%al
		sub    $0x000013,%al
		cmp    $0x000004,%al
		ja     _0461dc_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0456dc_switch(,%eax,4)

	_0462c2_jump:
		mov    $0x000016,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000012,%edx
		mov    %ebp,%eax
		call   _045688_func
		jmp    _046376_jump

	_0462e1_jump:
		mov    $0x000015,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000011,%edx
		mov    %ebp,%eax
		call   _045688_func
		jmp    _046376_jump

	_046300_jump:
		mov    $0x000022,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000023,%edx
		mov    %ebp,%eax
		call   _045688_func
		jmp    _046376_jump

	_04631c_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0456b4_func
		mov    $0x000008,%dl
		xor    %ebx,%ebx
		mov    %dl,_0c25e6_data
		xor    %edx,%edx
		mov    _0c25e3_data,%al
		mov    _0c25e7_data,%dl
		mov    %al,%bl
		inc    %al
		mov    _096528_data(,%edx,4),%edx
		mov    %al,_0c25e3_data
		mov    (%edx,%ebx,1),%al
		mov    0x000004(%esp),%dh
		mov    %al,_0db1ab_data
		cmp    $0x000021,%dh
		jb     _04636d_jump
		jbe    _0462c2_jump
		cmp    $0x00002b,%dh
		je     _046300_jump
		jmp    _046376_jump

	_04636d_jump:
		cmp    $0x000020,%dh
		je     _0462e1_jump

	_046376_jump:
		mov    $0x000001,%ebx
		mov    0x000081(%ebp),%ch
		mov    %esi,%eax
		or     $0x000004,%ch
		xor    %edx,%edx
		mov    %ch,0x000081(%ebp)
		call   _056614_func
		xor    %al,%al
		mov    %al,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0463b7_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000008,%ebx
		call   _0456b4_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		call   _056614_func
		mov    %cl,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_046401_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000b,%ebx
		call   _0456b4_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		xor    %bh,%bh
		mov    %bh,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04644b_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0456b4_func
		mov    0x000081(%edi),%dh
		mov    $0x000001,%ebx
		or     $0x000004,%dh
		mov    %edi,%eax
		mov    %dh,0x000081(%edi)
		call   _01f7d4_func
		mov    $0x000002,%edx
		movb   $0x000003,0x00007e(%esi)
		mov    %edi,%eax
		movw   $0x00fffa,0x000042(%edi)
		call   _01d6f8_func
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%edi),%al
		mov    $0x00000e,%ebx
		movsbw 0x000001(%edx,%eax,8),%ax
		xor    %edx,%edx
		mov    %ax,0x000040(%edi)
		mov    %esi,%eax
		call   _01d6f8_func
		addl   $0x000064,0x000028(%esi)
		jmp    _0464ce_jump

	_0464b7_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000d,%ebx
		call   _0456b4_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_0464ce_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,_0c25da_data
		xor    %eax,%eax
		mov    _0c25d0_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x000010,%eax
		mov    $0x000001,%edx
		mov    %ax,_0c25dc_data
		mov    %esi,%eax
		call   _018710_func
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		cmp    $0x000016,%eax
		jne    _046540_jump
		mov    $0x000020,%al
		mov    $0x000002,%dl
		mov    %al,_0c25de_data
		mov    %dl,_0c25df_data
		mov    0x000081(%esi),%dh
		mov    %al,_0c25e0_data
		test   $0x000008,%dh
		je     _046538_jump
		addw   $0x000050,_0c25da_data
		jmp    _046540_jump

	_046538_jump:
		subw   $0x000050,_0c25da_data

	_046540_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _056614_func
		xor    %bl,%bl
		mov    %bl,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_046573_case:
		mov    0x000081(%esi),%dh
		mov    (%esp),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		jmp    _04659c_case

	_046595_case:
		orb    $0x000008,0x000081(%esi)

	_04659c_case:
		mov    $0x00003c,%ecx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    %ecx,_0db1c4_data
		call   _0456b4_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    %esi,%eax
		call   _044ec0_func
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		cmp    $0x00002d,%eax
		jne    _0465fd_jump
		xor    %eax,%eax
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0c25da_data
		mov    _0c25d8_data,%eax
		sar    $0x000010,%eax
		jmp    _046685_jump

	_0465fd_jump:
		cmp    $0x000019,%eax
		jne    _046633_jump
		mov    _0db1bc_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		mov    0x000028(%edx,%eax,1),%ax
		add    $0x000064,%eax
		mov    %ax,_0c25da_data
		mov    _0c25d8_data,%eax
		sar    $0x000010,%eax
		add    $0x000050,%eax
		jmp    _046685_jump

	_046633_jump:
		testb  $0x000008,0x000081(%esi)
		je     _046658_jump
		mov    0x000028(%esi),%ax
		add    $0x000030,%eax
		mov    %ax,_0c25da_data
		mov    _0c25d8_data,%eax
		sar    $0x000010,%eax
		add    $0x000050,%eax
		jmp    _046685_jump

	_046658_jump:
		mov    0x000028(%esi),%dx
		sub    $0x0000a0,%edx
		mov    %dx,_0c25da_data
		cmp    $0x000019,%eax
		jne    _04667a_jump
		mov    %edx,%ebx
		add    $0x000070,%ebx
		mov    %bx,_0c25da_data

	_04667a_jump:
		mov    _0c25d8_data,%eax
		sar    $0x000010,%eax
		sub    $0x000050,%eax

	_046685_jump:
		mov    %eax,0x000028(%esi)
		mov    $0x000018,%bl
		mov    $0x000001,%cl
		mov    _0c25ce_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    %bl,_0c25de_data
		mov    0x000069(%esi),%al
		mov    %bl,_0c25e0_data
		sub    %eax,%edx
		mov    %cl,_0c25df_data
		sub    $0x000010,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,0x00002c(%esi)
		mov    %ecx,%ebx
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%edx
		mov    %ax,_0c25dc_data
		mov    %esi,%eax
		call   _018710_func
		xor    %eax,%eax
		mov    _0c45c8_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x00000e,%ebx
		mov    %dx,_0c25dc_data
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _056614_func
		mov    %ch,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_046727_case:
		mov    %esi,%eax
		call   _01dea4_func
		xor    %edx,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _0456b4_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		xor    %dl,%dl
		mov    %dl,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_046778_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0456b4_func
		andb   $0x0000fb,0x000081(%ebp)
		mov    0x000081(%edi),%ah
		mov    $0x000006,%ebx
		and    $0x0000fb,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%edi)
		mov    %esi,%eax
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		xor    %dl,%dl
		mov    %dl,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0467db_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0456b4_func
		subl   $0x000064,0x000028(%esi)
		mov    0x000081(%edi),%ah
		xor    %edx,%edx
		and    $0x0000fb,%ah
		mov    $0x000014,%ebx
		mov    %ah,0x000081(%edi)
		mov    %esi,%eax
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		xor    %dl,%dl
		mov    %dl,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04683b_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000f,%ebx
		call   _0456b4_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x000028(%esi),%ax
		mov    $0x0000ff,%ecx
		mov    %ax,_0c25da_data
		xor    %eax,%eax
		mov    _0c25d0_data,%dx
		mov    0x000069(%esi),%al
		mov    $0x000001,%bh
		sub    %eax,%edx
		mov    %bh,_0c25df_data
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x000010,%eax
		mov    $0x0000ff,%dh
		mov    %ax,_0c25dc_data
		mov    %dh,_0c25de_data
		mov    %dh,_0c25e0_data
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _018710_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %cl,%cl
		call   _056614_func
		mov    %cl,_0c25e4_data
		movb   $0x0000ff,_0db1ac_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0468d8_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0456b4_func
		mov    0x000081(%esi),%bh
		xor    %edx,%edx
		test   $0x000008,%bh
		sete   %dl
		mov    %esi,%eax
		call   _044ec0_func
		testb  $0x000008,0x000081(%esi)
		je     _04692d_jump
		mov    $0x000090,%eax
		mov    _0ce534_data,%edx
		mov    0x000028(%esi),%ebx
		sub    %edx,%eax
		sub    %eax,%ebx
		xor    %edx,%edx
		mov    _0c25cc_data,%ax
		mov    0x000068(%esi),%dl
		add    $0x000140,%eax
		sub    %edx,%eax
		add    $0x000090,%eax
		mov    %ebx,0x000028(%esi)
		jmp    _04694f_jump

	_04692d_jump:
		xor    %eax,%eax
		mov    _0c25ca_data,%dx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000028(%esi),%ecx
		mov    %edx,%eax
		add    $0x000088,%ecx
		sub    $0x000090,%eax
		mov    %ecx,0x000028(%esi)

	_04694f_jump:
		mov    %ax,_0c25da_data
		mov    _0c25e3_data,%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0c25e7_data,%dl
		mov    %al,%bl
		inc    %al
		mov    _096528_data(,%edx,4),%edx
		mov    %al,_0c25e3_data
		add    %ebx,%edx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    (%edx),%bl
		mov    _0c45c6_data,%edx
		mov    0x000069(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		sub    $0x000020,%edx
		sub    %ebx,%edx
		mov    %edx,0x00002c(%esi)
		mov    $0x00000f,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0c25dc_data
		mov    %esi,%eax
		mov    $0x0000ff,%ch
		call   _01d6f8_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0c25de_data
		mov    %ch,_0c25e0_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0c25df_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018710_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _056614_func
		xor    %eax,%eax
		mov    $0x000029,%dl
		mov    _0c25e7_data,%al
		mov    %dl,_0db1ba_data
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0c25e3_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096528_data(%edx),%edx
		mov    %al,_0c25e3_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0db1ac_data
		xor    %eax,%eax
		mov    _0db1ac_data,%al
		cmp    $0x0000ff,%eax
		jne    _046a41_jump

	_046a23_jump:
		mov    $0x000006,%eax
		call   _061dd0_func
		mov    %al,_0db1ac_data
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _046a23_jump
		cmp    $0x000006,%eax
		je     _046a23_jump

	_046a41_jump:
		mov    $0x0000ff,%bl
		xor    %eax,%eax
		jmp    _046a4e_jump

	_046a47_jump:
		inc    %eax
		mov    %bl,_0db1b0_data(%edx)

	_046a4e_jump:
		movswl %ax,%edx
		cmp    $0x000008,%edx
		jl     _046a47_jump
		movw   $0x008300,_0db1b8_data
		xor    %dh,%dh
		mov    %dh,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_046a80_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0456b4_func
		mov    0x000081(%esi),%cl
		mov    (%esp),%eax
		test   $0x000008,%cl
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    %ch,%dh
		or     %dl,%dh
		xor    %ebx,%ebx
		mov    %dh,(%eax)
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		xor    %bl,%bl
		call   _045210_func
		mov    %bl,_0c25e4_data
		cmpb   $0x000000,_0c25e4_data
		jne    _046ae8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_046ae8_jump:
		xor    %eax,%eax
		mov    _0c25e7_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0c25e3_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096528_data(%edx),%edx
		mov    %al,_0c25e3_data
		mov    (%edx,%ebx,1),%al
		mov    %al,0x000004(%esp)
		cmp    $0x00002e,%al
		ja     _04580a_case
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		jmp    *%cs:_0456f0_switch(,%eax,4)



_046b2c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		mov    0x000048(%eax),%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edi
		mov    %esp,%ecx
		add    %eax,%edi
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		mov    0x000050(%esi),%edx
		push   %eax
		sar    $0x000010,%edx
		mov    %edi,%eax
		call   _01da90_func
		cmpb   $0x000000,0x000010(%esp)
		jne    _046b8b_jump
		jmp    _046bff_jump

	_046b79_jump:
		movb   $0x00002f,0x000002(%eax)
		jmp    _046bba_jump

	_046b7f_jump:
		movb   $0x000030,0x000002(%eax)
		jmp    _046bba_jump

	_046b85_jump:
		movb   $0x00002e,0x000002(%eax)
		jmp    _046bba_jump

	_046b8b_jump:
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		mov    (%eax),%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		mov    0x00006c(%edi),%dl
		cmp    $0x000012,%dl
		jb     _046bb5_jump
		jbe    _046b85_jump
		cmp    $0x000023,%dl
		je     _046b7f_jump
		jmp    _046bba_jump

	_046bb5_jump:
		cmp    $0x000011,%dl
		je     _046b79_jump

	_046bba_jump:
		mov    0x000002(%eax),%al
		mov    %al,0x00006a(%edi)
		mov    0x000006(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _046bf2_jump
		movb   $0x000001,0x000070(%esi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000028(%esi),%ebx
		sub    $0x000005,%eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		jmp    _046bff_jump

	_046bf2_jump:
		mov    0x000028(%esi),%edx
		movb   $0x000000,0x000070(%esi)
		add    $0x000005,%edx
		mov    %edx,0x000028(%esi)

	_046bff_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movw   $0x000000,0x000042(%esi)
		mov    0x000002(%esp),%ebx
		sar    $0x000011,%ebx
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		add    %ebx,%edx
		sub    %eax,%edx
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_046c3c_switch:
		.long   _046c6d_case
		.long   _046c7a_case
		.long   _046c87_case
		.long   _046c94_case




_046c4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    _0db1ab_data,%al
		dec    %al
		cmp    $0x000003,%al
		ja     _046c9f_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_046c3c_switch(,%edx,4)

	_046c6d_case:
		mov    $0x000003,%ch
		mov    $0x0000c0,%al
		mov    %ch,0x000004(%esp)
		mov    %al,(%esp)
		jmp    _046c9f_jump

	_046c7a_case:
		mov    $0x000004,%bh
		mov    $0x0000c0,%cl
		mov    %bh,0x000004(%esp)
		mov    %cl,(%esp)
		jmp    _046c9f_jump

	_046c87_case:
		mov    $0x000002,%dh
		mov    $0x0000c0,%bl
		mov    %dh,0x000004(%esp)
		mov    %bl,(%esp)
		jmp    _046c9f_jump

	_046c94_case:
		mov    $0x000004,%ah
		mov    $0x0000f4,%dl
		mov    %ah,0x000004(%esp)
		mov    %dl,(%esp)

	_046c9f_jump:
		mov    _0c1b34_data,%ebx
		mov    _0c1b38_data,%si
		xor    %eax,%eax
		test   %si,%si
		jg     _046cc8_jump
		jmp    _046d87_jump

	_046cb8_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %si,%ax
		jge    _046d87_jump

	_046cc8_jump:
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    (%esp),%dl
		mov    0x000060(%ebx),%cx
		cmp    %edx,%ecx
		jne    _046cb8_jump
		mov    0x000024(%ebx),%edx
		test   %edx,%edx
		jne    _046cb8_jump
		mov    0x000060(%edi),%dx
		cmp    $0x0000d5,%edx
		jne    _046d05_jump
		mov    _0db1be_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0c1b34_data,%edi
		shl    $0x000002,%edx
		add    %edx,%edi

	_046d05_jump:
		mov    0x000034(%edi),%ax
		mov    %ax,0x00004a(%ebx)
		xor    %eax,%eax
		mov    _0c25e6_data,%al
		mov    %ax,0x000052(%ebx)
		mov    0x000081(%ebx),%ah
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ebx)
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%ebx)
		mov    %dl,%dh
		movb   $0x000000,0x00006b(%ebx)
		or     %al,%dh
		mov    0x000004(%esp),%al
		mov    %dh,0x000081(%ebx)
		mov    %al,0x00006c(%ebx)
		mov    0x000034(%ebx),%ax
		mov    $0x000001,%edx
		mov    %ax,0x00004a(%edi)
		mov    %ebx,%eax
		call   _046b2c_func
		mov    0x000081(%ebx),%cl
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%cl
		mov    %ebx,%eax
		mov    %cl,0x000081(%ebx)
		call   _01f7d4_func
		mov    %ebx,%eax
		call   _01df3c_func

	_046d87_jump:
		mov    $0x0000ff,%ch
		xor    %al,%al
		mov    %ch,_0c25e6_data
		mov    %al,_0db1ab_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046da0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0db1c4_data,%edx
		test   %edx,%edx
		je     _046dbe_jump
		lea    -0x000001(%edx),%ebx
		mov    %ebx,_0db1c4_data
		jmp    _046e4f_jump

	_046dbe_jump:
		call   _044db0_func
		test   %al,%al
		je     _046e4f_jump
		mov    _0c25e5_data,%ah
		test   %ah,%ah
		je     _046ddf_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0c25e5_data

	_046ddf_jump:
		mov    0x000081(%esi),%al
		xor    %edx,%edx
		and    $0x000001,%al
		mov    %al,%dl
		test   %edx,%edx
		je     _046ec7_jump
		mov    %esi,%eax
		call   _0457ac_func
		andb   $0x0000fe,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_046e06_jump:
		mov    _0c25e6_data,%dl
		cmp    $0x0000ff,%edx
		je     _046e1b_jump
		mov    %esi,%eax
		call   _046c4c_func

	_046e1b_jump:
		movw   $0x000000,0x000040(%esi)
		mov    $0xffff8300,%edx
		movw   $0x000000,0x000042(%esi)
		mov    %dx,_0c25da_data
		mov    %dx,_0c25dc_data
		mov    %dx,_0db1a8_data

	_046e41_jump:
		mov    %esi,%eax
		call   _0188e8_func
		mov    %esi,%eax
		call   _0457ac_func

	_046e4f_jump:
		andb   $0x0000fe,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_046e5b_jump:
		xor    %edx,%edx
		mov    _0db1ba_data,%dl
		test   %edx,%edx
		jne    _046e8f_jump
		mov    _0db1ac_data,%dl
		cmp    $0x0000ff,%edx
		je     _046e8f_jump
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _046e8f_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x00000f,%edx
		jne    _046e8f_jump
		mov    %esi,%eax
		call   _045294_func
		jmp    _046ea3_jump

	_046e8f_jump:
		mov    _0db1ba_data,%bl
		test   %bl,%bl
		je     _046ea3_jump
		mov    %bl,%bh
		dec    %bh
		mov    %bh,_0db1ba_data

	_046ea3_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c25e0_data,%cl
		mov    _0c25de_data,%bl
		mov    _0c25df_data,%dl
		call   _018710_func
		jmp    _046e41_jump

	_046ec7_jump:
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		je     _046e06_jump
		movb   $0x0000ff,_0c25e6_data
		mov    _0db1a6_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffff8300,%edx
		je     _046e5b_jump
		call   _044fa0_func
		jmp    _046ea3_jump

_046ef8_switch:
		.long   _046f4d_case
		.long   _046f74_case
		.long   _046f84_case
		.long   _046f84_case
		.long   _046f84_case




_046f0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0c25e7_data,%al
		cmp    $0x000008,%eax
		je     _046f20_jump
		cmp    $0x000009,%eax
		jne    _046f2c_jump

	_046f20_jump:
		mov    $_0c25e8_data,%eax
		mov    $_0c25e2_data,%ebx
		jmp    _046f36_jump

	_046f2c_jump:
		mov    $_0c25e7_data,%eax
		mov    $_0c25e3_data,%ebx

	_046f36_jump:
		mov    (%eax),%dl
		mov    %dl,%dh
		dec    %dh
		cmp    $0x000004,%dh
		ja     _046f84_case
		xor    %ecx,%ecx
		mov    %dh,%cl
		jmp    *%cs:_046ef8_switch(,%ecx,4)

	_046f4d_case:
		xor    %ecx,%ecx
		mov    _0db1bb_data,%cl
		cmp    $0x000002,%ecx
		jl     _046f84_case
		xor    %ecx,%ecx
		mov    _0db1bc_data,%cl
		cmp    $0x000002,%ecx
		jle    _046f84_case
		xor    %dh,%dh
		movb   $0x000002,(%eax)
		mov    %dh,_0db1bc_data
		jmp    _046f84_case

	_046f74_case:
		xor    %ecx,%ecx
		mov    _0db1bb_data,%cl
		cmp    $0x000003,%ecx
		jl     _046f84_case
		movb   $0x000003,(%eax)

	_046f84_case:
		cmp    (%eax),%dl
		je     _046f93_jump
		xor    %ch,%ch
		movb   $0x000000,(%ebx)
		mov    %ch,_0db1bb_data

	_046f93_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046f98_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c25e3_data,%dl
		mov    _0c25e7_data,%dh

	_046fa7_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dh,%bl
		mov    %dl,%cl
		mov    _096528_data(,%ebx,4),%ebx
		xor    %ah,%ah
		mov    (%ecx,%ebx,1),%al
		cmp    $0x00001a,%al
		jb     _047018_jump
		jbe    _046ff2_jump
		cmp    $0x000021,%al
		jb     _04700c_jump
		jbe    _046ff0_jump
		cmp    $0x000023,%al
		jb     _046ff2_jump
		cmp    $0x000024,%al
		jbe    _046ff2_jump
		cmp    $0x00002b,%al
		je     _046ff0_jump
		jmp    _04703c_jump

	_046fdc_jump:
		mov    %al,%ah
		xor    %dl,%dl
		jmp    _04703c_jump

	_046fe5_jump:
		mov    $0x000001,%ah
		xor    %dl,%dl
		add    %ah,%dh
		jmp    _04703c_jump

	_046ff0_jump:
		inc    %dl

	_046ff2_jump:
		mov    $0x000001,%ah
		add    %ah,%dl
		jmp    _04703c_jump

	_046ffb_jump:
		add    $0x000002,%dl

	_046ffe_jump:
		mov    $0x000001,%ah
		jmp    _04703c_jump

	_047002_jump:
		test   %dl,%dl
		je     _04703c_jump
		mov    $0x000001,%ah
		sub    %ah,%dl
		jmp    _04703c_jump

	_04700c_jump:
		cmp    $0x00001c,%al
		jb     _04703c_jump
		jbe    _046ffb_jump
		cmp    $0x00001d,%al
		je     _046ffe_jump
		jmp    _04703c_jump

	_047018_jump:
		cmp    $0x00000f,%al
		jb     _047034_jump
		jbe    _046ff2_jump
		cmp    $0x000016,%al
		jb     _04702a_jump
		jbe    _047002_jump
		cmp    $0x000018,%al
		je     _046ff2_jump
		jmp    _04703c_jump

	_04702a_jump:
		cmp    $0x000012,%al
		jb     _04703c_jump
		cmp    $0x000013,%al
		jbe    _046ff2_jump
		jmp    _04703c_jump

	_047034_jump:
		test   %al,%al
		jbe    _046fe5_jump
		cmp    $0x000001,%al
		je     _046fdc_jump

	_04703c_jump:
		test   %ah,%ah
		jne    _046fa7_jump
		mov    %dl,_0c25e2_data
		mov    %dh,_0c25e8_data
		mov    %dh,_0c25e7_data
		mov    %dl,_0c25e3_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_047060_func:
		push   %ebx
		push   %ecx
		push   %edi
		mov    %eax,%ebx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%ebx),%edi
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edi
		xor    %eax,%eax
		mov    (%edi),%edi
		mov    0x00006c(%ebx),%al
		testb  $0x000001,0x000007(%edi,%eax,8)
		je     _047205_jump
		cmpb   $0x000000,_0c25e5_data
		jne    _047205_jump
		shl    $0x000008,%edx
		add    %edx,%eax
		cmp    $0x000013,%eax
		jb     _04716a_jump
		jbe    _0470bf_jump
		cmp    $0x00001e,%eax
		jb     _0470e4_jump
		cmp    $0x00001f,%eax
		jbe    _0470bf_jump
		cmp    $0x000025,%eax
		jb     _0470dd_jump
		jbe    _0470c9_jump
		cmp    $0x00002c,%eax
		je     _0470c9_jump
		jmp    _0470d3_jump

	_0470bf_jump:
		mov    $0x0000ff,%eax
		jmp    _047101_jump

	_0470c9_jump:
		mov    $0xffffffff,%eax
		jmp    _047101_jump

	_0470d3_jump:
		mov    $0x000001,%eax
		jmp    _047101_jump

	_0470dd_jump:
		cmp    $0x000022,%eax
		je     _0470bf_jump
		jmp    _0470d3_jump

	_0470e4_jump:
		cmp    $0x000016,%eax
		jb     _0470f7_jump
		jbe    _0470bf_jump
		cmp    $0x000018,%eax
		jbe    _0470bf_jump
		mov    $0x000001,%eax
		jmp    _047101_jump

	_0470f7_jump:
		cmp    $0x000015,%eax
		je     _0470bf_jump
		mov    $0x000001,%eax

	_047101_jump:
		cmp    %cx,%ax
		jne    _047205_jump
		movswl %cx,%eax
		cmp    $0x000001,%eax
		jne    _04712b_jump
		movb   $0x000001,_0c1f03_data
		mov    %ebx,%eax
		call   _01eb7c_func
		incb   _0db1bb_data
		call   _046f0c_func

	_04712b_jump:
		cmpb   $0x000000,0x000076(%ebx)
		je     _0471d1_jump
		xor    %eax,%eax
		mov    _0c25e7_data,%al
		cmp    $0x000008,%eax
		je     _0471df_jump
		cmp    $0x000009,%eax
		je     _0471df_jump
		call   _046f98_func
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x000062,%eax
		jne    _0471c8_jump
		movb   $0x000008,_0c25e7_data
		jmp    _0471df_jump

	_04716a_jump:
		cmp    $0x00000a,%eax
		jb     _0471a6_jump
		jbe    _0470c9_jump
		cmp    $0x00000d,%eax
		jb     _047193_jump
		jbe    _0470c9_jump
		cmp    $0x00000f,%eax
		je     _0470c9_jump
		mov    $0x000001,%eax
		jmp    _047101_jump

	_047193_jump:
		cmp    $0x00000b,%eax
		je     _0470c9_jump
		mov    $0x000001,%eax
		jmp    _047101_jump

	_0471a6_jump:
		cmp    $0x000002,%eax
		jb     _0470d3_jump
		jbe    _0470c9_jump
		cmp    $0x000006,%eax
		je     _0470c9_jump
		mov    $0x000001,%eax
		jmp    _047101_jump

	_0471c8_jump:
		movb   $0x000009,_0c25e7_data
		jmp    _0471df_jump

	_0471d1_jump:
		movb   $0x00000a,_0c25e7_data
		movb   $0x000001,_0c25a1_data

	_0471df_jump:
		xor    %dl,%dl
		mov    $0x000001,%cl
		mov    %dl,_0c25e3_data
		mov    %cl,_0c25e4_data
		mov    0x000081(%ebx),%ch
		mov    $0x0000ff,%dh
		or     %cl,%ch
		mov    %dh,_0c25e5_data
		mov    %ch,0x000081(%ebx)

	_047205_jump:
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    

_04720c_switch:
		.long   _04723f_case
		.long   _047237_case
		.long   _04723b_case
		.long   _047237_case




_04721c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x00006c(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000003,%al
		ja     _047241_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_04720c_switch(,%eax,4)

	_047237_case:
		xor    %dl,%dl
		jmp    _047241_jump

	_04723b_case:
		mov    $0x000007,%dl
		jmp    _047241_jump

	_04723f_case:
		mov    $0x00000e,%dl

	_047241_jump:
		cmp    0x00006b(%ebx),%dl
		jb     _047254_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _046b2c_func
		jmp    _0472e3_jump

	_047254_jump:
		mov    0x000048(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000034(%ebx),%cx
		cmp    0x00004a(%eax),%cx
		je     _0472ae_jump
		mov    %ebx,%eax
		call   _04aad8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047281_jump:
		movb   $0x000001,0x000002(%edx)
		mov    %ebx,%eax
		call   _04aad8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047290_jump:
		movb   $0x000000,0x000002(%edx)
		mov    %ebx,%eax
		call   _04aad8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04729f_jump:
		movb   $0x00001c,0x000002(%edx)
		mov    %ebx,%eax
		call   _04aad8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0472ae_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    (%ecx),%ecx
		shl    $0x000003,%edx
		mov    0x00006a(%eax),%al
		add    %ecx,%edx
		cmp    $0x00002f,%al
		jb     _0472df_jump
		jbe    _047290_jump
		cmp    $0x000030,%al
		je     _04729f_jump
		mov    %ebx,%eax
		call   _04aad8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0472df_jump:
		cmp    $0x00002e,%al
		je     _047281_jump

	_0472e3_jump:
		mov    %ebx,%eax
		call   _04aad8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0472f0_func:
		push   %edx
		mov    0x00007f(%eax),%dl
		test   %dl,%dl
		je     _047306_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x00007f(%eax)
		jne    _047306_jump
		call   _045058_func

	_047306_jump:
		pop    %edx
		ret    



_047310_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%esi
		mov    _0c1ef0_data,%edx
		cmpl   $0x000000,0x000024(%edx)
		jne    _047362_jump
		mov    _0c1b74_data,%di
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0c1bb4_data,%bl
		mov    _0c1bc0_data,%cl
		add    %edi,%ebx
		movzbl _0c1bb5_data,%edi
		add    %ecx,%edi
		mov    _0c1b78_data,%ebp
		sar    %edi
		add    %ebp,%edi
		movw   $0x000000,0x000040(%edx)
		sub    $0x00000a,%edi
		movw   $0x000000,0x000042(%edx)
		mov    %edi,%ecx
		jmp    _047380_jump

	_047362_jump:
		xor    %ebx,%ebx
		mov    0x000028(%edx),%cx
		mov    0x000068(%edx),%bl
		add    %ecx,%ebx
		xor    %ecx,%ecx
		movzbl 0x000074(%edx),%edi
		mov    0x000069(%edx),%cl
		add    %edi,%ecx
		sar    %ecx
		add    0x00002c(%edx),%ecx
		sub    $0x000003,%ecx

	_047380_jump:
		xor    %edx,%edx
		movzbl 0x000074(%eax),%edi
		mov    0x000069(%eax),%dl
		add    %edi,%edx
		sar    %edx
		mov    0x00002c(%eax),%edi
		add    %edx,%edi
		movswl %cx,%edx
		sub    %edx,%edi
		sub    0x000028(%eax),%bx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		movswl %di,%edx
		mov    %bx,(%esi)
		test   %edx,%edx
		jge    _0473ed_jump
		mov    _0c1ef0_data,%esi
		mov    0x000040(%esi),%esi
		sar    $0x000010,%esi
		test   %esi,%esi
		jle    _0473da_jump
		cmp    $0xffffffe2,%edx
		jle    _0473cb_jump
		addw   $0x000002,0x000042(%eax)
		jmp    _047435_jump

	_0473cb_jump:
		cmp    $0xffffffd0,%edx
		jle    _047435_jump
		incw   0x000042(%eax)
		jmp    _047435_jump

	_0473da_jump:
		cmp    $0xffffffe2,%edx
		jle    _0473e6_jump
		subw   $0x000002,0x000042(%eax)
		jmp    _047435_jump

	_0473e6_jump:
		cmp    $0xffffffd0,%edx
		jle    _047435_jump
		jmp    _047431_jump

	_0473ed_jump:
		mov    _0c1ef0_data,%esi
		mov    0x000040(%esi),%esi
		sar    $0x000010,%esi
		test   %esi,%esi
		jl     _04741c_jump
		cmp    $0x00001e,%edx
		jge    _04740d_jump
		addw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_04740d_jump:
		cmp    $0x000030,%edx
		jge    _047435_jump
		incw   0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_04741c_jump:
		cmp    $0x00001e,%edx
		jge    _04742c_jump
		subw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_04742c_jump:
		cmp    $0x000030,%edx
		jge    _047435_jump

	_047431_jump:
		decw   0x000042(%eax)

	_047435_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04743c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000002,%edx
		je     _04746f_jump
		shl    $0x000002,%edx
		mov    0x00000c(%eax),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _04749f_jump
		mov    $0x000001,%ebx
		mov    %ebx,%edx
		call   _056614_func
		jmp    _04749f_jump

	_04746f_jump:
		cmp    %edx,%edx
		jne    _04749d_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000001,%edx
		jne    _04749d_jump
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		test   %edx,%edx
		jne    _04749d_jump
		movw   $0x00fffb,0x000042(%eax)
		mov    %cl,0x000071(%eax)
		mov    0x00002c(%eax),%edx
		mov    %cl,0x000072(%eax)
		sub    $0x00000e,%edx
		mov    %edx,0x00002c(%eax)
		jmp    _04749f_jump

	_04749d_jump:
		mov    $0x000001,%cl

	_04749f_jump:
		mov    %cl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0474a8_func:
		push   %ebx
		mov    0x000081(%eax),%bl
		shl    $0x000004,%bl
		shr    $0x000007,%bl
		and    $0x0000ff,%ebx
		jne    _0474c4_jump
		movswl %dx,%ebx
		test   %ebx,%ebx
		jg     _0474e1_jump

	_0474c4_jump:
		mov    0x000081(%eax),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _0474e5_jump
		movswl %dx,%eax
		test   %eax,%eax
		jge    _0474e5_jump

	_0474e1_jump:
		mov    $0x000001,%al
		pop    %ebx
		ret    

	_0474e5_jump:
		xor    %al,%al
		pop    %ebx
		ret    



_0474ec_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		cmp    $0x000002,%eax
		je     _047503_jump
		cmp    $0x000001,%eax
		jne    _047691_jump

	_047503_jump:
		movswl %dx,%edx
		mov    %ebx,%eax
		call   _0474a8_func
		test   %al,%al
		je     _047564_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		cmp    $0x000002,%eax
		jne    _047535_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _047535_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		test   %eax,%eax
		je     _047535_jump
		incw   0x000042(%ebx)
		jmp    _04753c_jump

	_047535_jump:
		mov    %ebx,%eax
		call   _04743c_func

	_04753c_jump:
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _047556_jump
		mov    $0x000004,%eax
		jmp    _04755b_jump

	_047556_jump:
		mov    $0xfffffffc,%eax

	_04755b_jump:
		mov    %ax,0x000040(%ebx)
		jmp    _0475ed_jump

	_047564_jump:
		mov    _0c1b8c_data,%ax
		neg    %eax
		mov    %ax,0x000040(%ebx)
		mov    0x00003a(%ebx),%eax
		mov    0x000028(%ebx),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _0475b1_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _0475b1_jump
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0475a5_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _0475ed_jump

	_0475a5_jump:
		mov    0x000040(%ebx),%cx
		add    %ecx,%ecx
		mov    %cx,0x000040(%ebx)
		jmp    _0475ed_jump

	_0475b1_jump:
		mov    0x00003a(%ebx),%eax
		mov    0x000028(%ebx),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jge    _0475ed_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _0475ed_jump
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0475e3_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _0475ed_jump

	_0475e3_jump:
		mov    0x000040(%ebx),%dx
		add    %edx,%edx
		mov    %dx,0x000040(%ebx)

	_0475ed_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		cmp    $0x000001,%eax
		jne    _04766f_jump
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ebx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		xor    %ecx,%ecx
		shr    $0x000007,%al
		mov    %al,%cl
		lea    0x000007(%edx),%eax
		test   %ecx,%ecx
		jne    _047634_jump
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jg     _047655_jump

	_047634_jump:
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		jne    _04765c_jump
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _04765c_jump

	_047655_jump:
		mov    $0x000001,%edx
		jmp    _04765e_jump

	_04765c_jump:
		xor    %edx,%edx

	_04765e_jump:
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		shl    $0x000004,%dl
		mov    %dh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)

	_04766f_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jle    _047683_jump
		movw   $0x000004,0x000040(%ebx)
		pop    %ecx
		pop    %ebx
		ret    

	_047683_jump:
		cmp    $0xfffffffc,%eax
		jge    _047698_jump
		movw   $0x00fffc,0x000040(%ebx)
		pop    %ecx
		pop    %ebx
		ret    

	_047691_jump:
		mov    %ebx,%eax
		call   _04aad8_func

	_047698_jump:
		pop    %ecx
		pop    %ebx
		ret    



_04769c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		test   %eax,%eax
		jne    _0476d0_jump
		mov    0x00006c(%ebx),%al
		cmp    $0x00000a,%eax
		jne    _0476d0_jump
		mov    0x000048(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0x000032,%eax
		jle    _0479c7_jump
		subw   $0x000032,0x00004a(%ebx)
		jmp    _0479c7_jump

	_0476d0_jump:
		mov    %ebx,%eax
		call   _04743c_func
		test   %al,%al
		je     _0479c7_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000001,%eax
		je     _047726_jump
		mov    0x000048(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0x0001f4,%eax
		jne    _047726_jump
		movb   $0x00008c,0x00007d(%ebx)
		mov    0x00004a(%ebx),%dx
		mov    0x000028(%ebx),%ax
		inc    %edx
		mov    %ax,0x00004e(%ebx)
		mov    %ebx,%eax
		mov    %dx,0x00004a(%ebx)
		mov    $0x000003,%edx
		movw   $0x000000,0x000042(%ebx)
		call   _01d6e8_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047726_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000003,%eax
		jne    _047755_jump
		cmpb   $0x000000,0x000072(%ebx)
		je     _0479c7_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _0479c7_jump
		decw   0x000042(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047755_jump:
		cmp    $0x000004,%eax
		jne    _0479c7_jump
		mov    0x00004c(%ebx),%eax
		mov    0x000028(%ebx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _047771_jump
		neg    %eax

	_047771_jump:
		mov    %eax,%edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0c1b74_data,%esi
		mov    _0c1bb4_data,%al
		add    %eax,%esi
		mov    0x00004c(%ebx),%eax
		sar    $0x000010,%eax
		sub    %eax,%esi
		xor    %eax,%eax
		mov    0x000068(%ebx),%al
		sub    %eax,%esi
		lea    -0x00000a(%esi),%eax
		movswl %dx,%edi
		test   %eax,%eax
		jge    _04779f_jump
		neg    %eax

	_04779f_jump:
		movzbl 0x00007d(%ebx),%esi
		mov    %ax,(%esp)
		cmp    %esi,%edi
		jg     _0477c0_jump
		cmp    %ax,%dx
		jle    _04782d_jump
		cmp    $0x00008c,%esi
		jne    _04782d_jump

	_0477c0_jump:
		xor    %eax,%eax
		mov    0x00007d(%ebx),%al
		cmp    $0x00008c,%eax
		jne    _0477e0_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x00008c,%eax
		jge    _0477e0_jump
		mov    (%esp),%al
		mov    %al,0x00007d(%ebx)

	_0477e0_jump:
		xor    %eax,%eax
		mov    0x000072(%ebx),%al
		cmp    $0x000001,%eax
		jne    _047807_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _047803_jump
		incw   0x000040(%ebx)
		jmp    _047807_jump

	_047803_jump:
		decw   0x000040(%ebx)

	_047807_jump:
		xor    %eax,%eax
		mov    0x000071(%ebx),%al
		cmp    $0x000001,%eax
		jne    _047996_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jle    _047996_jump
		decw   0x000042(%ebx)
		jmp    _047996_jump

	_04782d_jump:
		xor    %eax,%eax
		mov    _0c1b78_data,%di
		mov    0x000069(%ebx),%al
		mov    0x00002c(%ebx),%si
		mov    %eax,%edx
		xor    %eax,%eax
		add    %esi,%edx
		mov    _0c1bb5_data,%al
		sub    %edi,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jg     _04786c_jump
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		je     _047891_jump

	_04786c_jump:
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jl     _0478f1_jump
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		jne    _0478f1_jump

	_047891_jump:
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		jne    _0478ad_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _0478b3_jump

	_0478ad_jump:
		movw   $0x000004,0x000040(%ebx)

	_0478b3_jump:
		movswl %ax,%edx
		cmp    $0x00000a,%edx
		jle    _0478c6_jump
		movw   $0x00ffff,0x000042(%ebx)
		jmp    _047996_jump

	_0478c6_jump:
		cmp    $0xffffffec,%edx
		jge    _0478d6_jump
		movw   $0x000002,0x000042(%ebx)
		jmp    _047996_jump

	_0478d6_jump:
		cmp    $0xfffffff6,%edx
		jge    _0478e6_jump
		movw   $0x000001,0x000042(%ebx)
		jmp    _047996_jump

	_0478e6_jump:
		movw   $0x000000,0x000042(%ebx)
		jmp    _047996_jump

	_0478f1_jump:
		cwtl   
		cmp    $0xfffffff6,%eax
		jle    _04790a_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _04790a_jump
		movw   $0x000000,0x000042(%ebx)
		jmp    _047910_jump

	_04790a_jump:
		movw   $0x000001,0x000042(%ebx)

	_047910_jump:
		movswl %cx,%eax
		cmp    $0x000008,%eax
		jge    _04792b_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		je     _047949_jump

	_04792b_jump:
		movswl %cx,%eax
		cmp    $0x000008,%eax
		jle    _047960_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _047960_jump

	_047949_jump:
		decw   0x000040(%ebx)
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _047975_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _047975_jump

	_047960_jump:
		incw   0x000040(%ebx)
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jle    _047975_jump
		movw   $0x000004,0x000040(%ebx)

	_047975_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _047996_jump
		movswl %cx,%eax
		cmp    $0x000008,%eax
		jge    _047996_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x00004a(%ebx)
		call   _01d6e8_func

	_047996_jump:
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _0479c7_jump
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0479be_jump
		mov    $0xffffffff,%eax
		jmp    _0479c3_jump

	_0479be_jump:
		mov    $0x000001,%eax

	_0479c3_jump:
		mov    %ax,0x000040(%ebx)

	_0479c7_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0479d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		xor    %bl,%bl
		test   %eax,%eax
		jne    _047a0b_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000003,%eax
		jne    _047a0b_jump
		movw   $0x00fffc,0x000042(%edx)
		mov    0x000081(%edx),%cl
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%cl
		mov    $0x000001,%bl
		mov    %cl,0x000081(%edx)
		jmp    _047b7b_jump

	_047a0b_jump:
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		cmp    $0x000001,%eax
		jne    _047a1f_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000002,%eax
		je     _047a51_jump

	_047a1f_jump:
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		test   %eax,%eax
		jne    _047a35_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000002,%eax
		je     _047a51_jump
		cmp    $0x000004,%eax
		je     _047a51_jump

	_047a35_jump:
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		cmp    $0x000002,%eax
		jne    _047b7b_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000002,%eax
		jne    _047b7b_jump

	_047a51_jump:
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		lea    0x000000(,%eax,8),%esi
		mov    (%ecx),%eax
		mov    $0x000001,%bl
		testb  $0x000010,0x000007(%esi,%eax,1)
		je     _047a7e_jump
		xor    %eax,%eax
		mov    0x00006b(%edx),%al
		test   %eax,%eax
		jmp    _047aa8_jump

	_047a7e_jump:
		xor    %ecx,%ecx
		mov    0x00006a(%edx),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		lea    0x000000(,%eax,4),%ecx
		mov    0x000004(%edx),%eax
		mov    0x00000a(%ecx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %ecx,%ecx
		dec    %eax
		mov    0x00006b(%edx),%cl
		cmp    %eax,%ecx

	_047aa8_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _047aeb_jump
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%cl
		mov    0x00000c(%edx),%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    (%ecx),%ecx
		mov    0x00006c(%edx),%al
		mov    0x000005(%ecx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _047aeb_jump
		movw   $0x000000,0x00004a(%edx)
		mov    %bl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047aeb_jump:
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		cmp    $0x000002,%eax
		je     _047b03_jump
		mov    %edx,%eax
		call   _04aad8_func
		mov    %bl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047b03_jump:
		mov    0x000048(%edx),%eax
		sar    $0x000010,%eax
		movw   $0x000000,0x000042(%edx)
		cmp    $0x0001f4,%eax
		jl     _047b7b_jump
		mov    0x00004c(%edx),%eax
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _047b29_jump
		neg    %eax

	_047b29_jump:
		cwtl   
		cmp    $0x000008,%eax
		jge    _047b58_jump
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _047b4d_jump
		decw   0x000040(%edx)
		mov    %bl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047b4d_jump:
		incw   0x000040(%edx)
		mov    %bl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047b58_jump:
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _047b72_jump
		mov    $0x000004,%eax
		jmp    _047b77_jump

	_047b72_jump:
		mov    $0xfffffffc,%eax

	_047b77_jump:
		mov    %ax,0x000040(%edx)

	_047b7b_jump:
		mov    %bl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_047b84_switch:
		.long   _047e45_case
		.long   _047e76_case
		.long   _047ed3_case
		.long   _047e45_case




_047b94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		mov    %ecx,%eax
		call   _0479d0_func
		test   %al,%al
		jne    _047ffe_jump
		mov    0x000048(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x0001f4,%eax
		jl     _047be0_jump
		mov    %ecx,%eax
		call   _04769c_func
		jmp    _047ffe_jump

	_047be0_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _047bf5_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000007,%eax
		je     _047ffe_jump

	_047bf5_jump:
		xor    %edx,%edx
		mov    0x000070(%ecx),%dl
		test   %edx,%edx
		jne    _047c07_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _047c13_jump

	_047c07_jump:
		cmp    $0x000001,%edx
		jne    _047c13_jump
		orb    $0x000008,0x000081(%ecx)

	_047c13_jump:
		cmpb   $0x000000,0x00007b(%ecx)
		je     _047f4d_jump
		xor    %eax,%eax
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%al
		mov    0x000028(%ecx),%bx
		add    %edx,%eax
		movzbw 0x000068(%ecx),%si
		sub    %ebx,%eax
		sub    %esi,%eax
		movswl %ax,%edx
		mov    %eax,%esi
		mov    %edx,%eax
		test   %eax,%eax
		jge    _047c47_jump
		neg    %eax

	_047c47_jump:
		sar    %eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x000069(%ecx),%al
		add    %ebx,%eax
		mov    _0c1b78_data,%bx
		sub    %ebx,%eax
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    _0c1bb5_data,%al
		sub    %eax,%ebx
		incw   0x00004a(%ecx)
		mov    %ecx,%eax
		mov    %bx,0x00000c(%esp)
		call   _0474a8_func
		test   %al,%al
		je     _047cb2_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _047ca6_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _047ca6_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		jmp    _047da9_jump

	_047ca6_jump:
		mov    %ecx,%eax
		call   _04743c_func
		jmp    _047da9_jump

	_047cb2_jump:
		cmpb   $0x000000,_0c1f02_data
		jne    _047cc8_jump
		cmpb   $0x000000,_0c1f04_data
		je     _047f33_jump

	_047cc8_jump:
		lea    0x000008(%esp),%edx
		mov    %ecx,%eax
		call   _047310_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _047d0b_jump
		movswl %si,%eax
		cmp    $0xfffffff6,%eax
		jge    _047d0b_jump
		movswl %di,%eax
		mov    0x000006(%esp),%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _047d3d_jump
		mov    (%esp),%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _047d3d_jump

	_047d0b_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _047d66_jump
		movswl %si,%eax
		cmp    $0x00000a,%eax
		jle    _047d66_jump
		cmp    0x000008(%esp),%di
		jg     _047d3d_jump
		mov    (%esp),%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _047d66_jump

	_047d3d_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _047d50_jump
		mov    %ecx,%eax
		call   _04743c_func
		jmp    _047d83_jump

	_047d50_jump:
		testb  $0x000004,0x000007(%ebp)
		je     _047d83_jump
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _047d83_jump

	_047d66_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _047d83_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _047d83_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d6e8_func

	_047d83_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _047d94_jump
		movw   $0x00fffd,0x000042(%ecx)

	_047d94_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jle    _047da9_jump
		movw   $0x000003,0x000042(%ecx)

	_047da9_jump:
		movswl %di,%eax
		cmp    $0x000028,%eax
		jge    _047df6_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jge    _047df6_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _047df6_jump
		testb  $0x000002,0x000007(%ebp)
		je     _047df6_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _047de0_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f0_func

	_047de0_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		movw   $0x000001,0x000052(%ecx)
		movb   $0x000000,0x00007f(%ecx)

	_047df6_jump:
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _047e18_jump
		mov    0x00007f(%ecx),%dl
		xor    %eax,%eax
		inc    %dl
		mov    %dl,%al
		mov    %dl,0x00007f(%ecx)
		cmp    $0x000028,%eax
		jle    _047e18_jump
		movw   $0x000000,0x000052(%ecx)

	_047e18_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %eax,%edx
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		sub    $0x000032,%eax
		cmp    %eax,%edx
		jge    _047e36_jump
		addw   $0x000002,0x000042(%ecx)

	_047e36_jump:
		movswl %si,%edx
		mov    %ecx,%eax
		call   _0474ec_func
		jmp    _047fbc_jump

	_047e45_case:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		cmp    $0x000001,%edx
		je     _047e5d_jump
		test   %edx,%edx
		jne    _047e6b_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _047e6b_jump

	_047e5d_jump:
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_047e6b_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _047da9_jump

	_047e76_case:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		cmp    $0x000002,%edx
		je     _047da9_jump
		test   %edx,%edx
		jne    _047e96_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000009,%eax
		je     _047da9_jump

	_047e96_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _047eab_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		je     _047da9_jump

	_047eab_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _047ec0_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000b,%eax
		je     _047da9_jump

	_047ec0_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		jmp    _047da9_jump

	_047ed3_case:
		mov    %ecx,%eax
		call   _04743c_func
		test   %al,%al
		je     _047da9_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _047f19_jump
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		cmp    $0x000001,%eax
		jne    _047da9_jump
		decw   0x000042(%ecx)
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _047da9_jump
		movw   $0x00fffd,0x000042(%ecx)
		jmp    _047da9_jump

	_047f19_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jle    _047da9_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _047da9_jump

	_047f33_jump:
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%al
		ja     _047da9_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_047b84_switch(,%eax,4)

	_047f4d_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000002,%eax
		je     _047fbc_jump
		cmp    $0x000001,%eax
		jne    _047f81_jump
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _056614_func

	_047f81_jump:
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01dea4_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shl    $0x000004,%dl
		shr    $0x000007,%al
		shr    $0x000007,%dl
		movzbl %al,%ebp
		xor    %eax,%eax
		mov    %dl,%al
		cmp    %eax,%ebp
		je     _047fbc_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _056614_func

	_047fbc_jump:
		xor    %eax,%eax
		mov    0x000065(%ecx),%al
		testb  $0x000001,_0921f8_data(%eax)
		je     _047fd0_jump
		movw   $0x000000,0x000042(%ecx)

	_047fd0_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _047fed_jump
		movw   $0x000000,0x000040(%ecx)

	_047fed_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _047ffe_jump
		mov    %ecx,%eax
		call   _0248b8_func

	_047ffe_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048008_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		cmp    $0x000001,%eax
		jne    _04804d_jump
		mov    %ecx,%eax
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _048038_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %ecx
		pop    %ebx
		ret    

	_048038_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		andb   $0x0000ef,0x000081(%ecx)

	_04804d_jump:
		pop    %ecx
		pop    %ebx
		ret    



_048050_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _048087_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		jne    _048087_jump
		movw   $0x000000,0x000040(%ecx)
		mov    0x000081(%ecx),%dl
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%dl
		mov    %dl,0x000081(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048087_jump:
		mov    %ecx,%eax
		call   _048260_func
		cmpw   $0x000000,0x00004a(%ecx)
		je     _0480c4_jump
		mov    %ecx,%eax
		call   _04743c_func
		test   %al,%al
		je     _0480c4_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _0480be_jump
		movw   $0x000002,0x000040(%ecx)
		jmp    _0480c4_jump

	_0480be_jump:
		movw   $0x00fffe,0x000040(%ecx)

	_0480c4_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _048104_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _0480f6_jump
		movw   $0x0001f6,0x00004a(%ecx)
		movw   $0x000000,0x000040(%ecx)

	_0480f6_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		mov    %ecx,%eax
		call   _0248b8_func

	_048104_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024278_func
		movzbw %al,%si
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _04815e_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _04818b_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04818b_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _04818b_jump

	_04815e_jump:
		xor    %eax,%eax
		mov    0x000066(%ecx),%al
		testb  $0x000002,_0921f8_data(%eax)
		jne    _04818b_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _056614_func

	_04818b_jump:
		movswl %si,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _0481ef_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _0481ad_jump
		mov    %ecx,%eax
		call   _01df68_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0481ad_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,0x000081(%ecx)
		mov    %bh,%ah
		mov    0x000040(%ecx),%bx
		or     %al,%ah
		neg    %ebx
		mov    %ah,0x000081(%ecx)
		mov    %bx,0x000040(%ecx)

	_0481ef_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0481f4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		cmp    $0x000001,%eax
		jne    _04825a_jump
		mov    _0c1ef0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _048218_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _048221_jump

	_048218_jump:
		jge    _048221_jump
		orb    $0x000008,0x000081(%ecx)

	_048221_jump:
		mov    %ecx,%eax
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _048245_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %ecx
		pop    %ebx
		ret    

	_048245_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		andb   $0x0000ef,0x000081(%ecx)

	_04825a_jump:
		pop    %ecx
		pop    %ebx
		ret    



_048260_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0c1f02_data
		jne    _04827f_jump
		cmpb   $0x000000,_0c1f04_data
		je     _0483ad_jump

	_04827f_jump:
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		mov    %esp,%edx
		mov    %esi,%eax
		call   _071088_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04829d_jump
		neg    %eax

	_04829d_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _0483e1_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000023,%eax
		jge    _0483e1_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _0483e1_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _0482e8_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _048311_jump

	_0482e8_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _0483e1_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0483e1_jump

	_048311_jump:
		mov    _0c1ef0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _04832a_jump
		mov    $0x000001,%eax
		jg     _04832a_jump
		neg    %eax

	_04832a_jump:
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		neg    %edx
		cmp    $0x000000,%eax
		je     _048342_jump
		mov    $0x000001,%eax
		jg     _048342_jump
		neg    %eax

	_048342_jump:
		cmp    %edx,%eax
		jne    _0483e1_jump
		xor    %edx,%eax
		movw   $0x000000,0x000040(%esi)
		mov    _0c1bb9_data,%al
		movw   $0x000000,0x000042(%esi)
		cmp    $0x000002,%eax
		je     _04836d_jump
		movw   $0x0001f5,0x00004a(%esi)
		jmp    _0483e1_jump

	_04836d_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000004,0x000007(%ebx,%eax,1)
		je     _0483e1_jump
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _0483da_jump

	_0483ad_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _0483e1_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%eax
		jne    _0483e1_jump
		mov    $0x00000c,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x00004a(%esi)
		call   _01d6e8_func
		mov    $0x000008,%edx

	_0483da_jump:
		mov    %esi,%eax
		call   _056614_func

	_0483e1_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0483f0_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c25a6_data,%ecx
		mov    _0c25a2_data,%esi
		sar    $0x000011,%ecx
		sar    $0x000010,%esi
		add    %esi,%ecx
		mov    _0c25a4_data,%edi
		mov    %ecx,%esi
		mov    _0c25a8_data,%ecx
		sar    $0x000010,%edi
		sar    $0x000011,%ecx
		add    %edi,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		testb  $0x000008,0x000081(%eax)
		je     _04843e_jump
		sub    $0x000030,%esi
		mov    %si,(%edx)
		jmp    _048446_jump

	_04843e_jump:
		mov    %esi,%ecx
		add    $0x000030,%ecx
		mov    %cx,(%edx)

	_048446_jump:
		mov    (%esp),%eax
		sub    $0x000070,%eax
		mov    %ax,(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_048458_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    %esp,%ebx
		lea    0x000004(%esp),%edx
		call   _0483f0_func
		mov    0x000004(%esp),%edx
		mov    0x000028(%ecx),%ax
		sub    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04848b_jump
		neg    %eax

	_04848b_jump:
		mov    %ax,0x000004(%esp)
		mov    (%esp),%ebx
		mov    0x00002c(%ecx),%ax
		sub    %eax,%ebx
		mov    %bx,(%esp)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		test   %eax,%eax
		jge    _0484ac_jump
		neg    %eax

	_0484ac_jump:
		mov    0x000002(%esp),%ebx
		mov    %si,%dx
		sar    $0x000010,%ebx
		mov    %ax,(%esp)
		cmp    %edx,%ebx
		jge    _0484ce_jump
		movswl %ax,%edx
		xor    %eax,%eax
		mov    %di,%ax
		cmp    %eax,%edx
		jge    _0484ce_jump
		mov    $0x000001,%al
		jmp    _0484d0_jump

	_0484ce_jump:
		xor    %al,%al

	_0484d0_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0484d8_func:
		push   %ebx
		push   %edx
		mov    _0c25ca_data,%dx
		mov    %dx,_0c25d2_data
		mov    _0c25cc_data,%dx
		mov    %dx,_0c25d4_data
		call   _0189c4_func
		mov    _0ce534_data,%bx
		mov    %eax,%edx
		mov    %ax,_0c45c8_data
		mov    _0ce538_data,%ax
		sub    %ebx,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		sub    $0x000010,%eax
		add    $0x000010,%edx
		mov    %ax,_0c25d6_data
		mov    %dx,_0c25d8_data
		call   _018a40_func

	_04852e_jump:
		pop    %edx
		pop    %ebx
		ret    



_048534_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		cmpb   $0x000000,_0c25e1_data
		jne    _0485f8_jump
		mov    _0c25d2_data,%ecx
		mov    _0c24ee_data,%eax
		mov    _0c25d0_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _04857c_jump
		cmp    %ecx,%eax
		jg     _04857c_jump
		mov    $0x000001,%eax
		jmp    _04857e_jump

	_04857c_jump:
		xor    %eax,%eax

	_04857e_jump:
		test   %eax,%eax
		je     _0485c1_jump
		mov    _0c25d6_data,%ecx
		mov    _0c24f0_data,%eax
		mov    _0c25d4_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0485b7_jump
		cmp    %ecx,%eax
		jg     _0485b7_jump
		mov    $0x000001,%eax
		jmp    _0485b9_jump

	_0485b7_jump:
		xor    %eax,%eax

	_0485b9_jump:
		test   %eax,%eax
		je     _0485c1_jump
		mov    $0x000001,%al
		jmp    _0485c3_jump

	_0485c1_jump:
		xor    %al,%al

	_0485c3_jump:
		mov    %al,_0c25e1_data
		test   %al,%al
		je     _04862f_jump
		mov    _0c24ac_data,%ax
		mov    %ax,_0c25cc_data
		mov    %ax,_0c25ca_data
		mov    _0c25d6_data,%ax
		mov    %ax,_0c25ce_data
		mov    _0c25d8_data,%ax
		mov    %ax,_0c25d0_data
		jmp    _04862f_jump

	_0485f8_jump:
		mov    _0c25ce_data,%ax
		mov    _0c24ae_data,%bx
		cmp    %bx,%ax
		jge    _048611_jump
		mov    %bx,_0c25ce_data

	_048611_jump:
		mov    0x00007f(%edx),%bl
		test   %bl,%bl
		je     _04861f_jump
		mov    %bl,%bh
		dec    %bh
		mov    %bh,0x00007f(%edx)

	_04861f_jump:
		mov    0x00005a(%edx),%cx
		test   %cx,%cx
		je     _04862f_jump
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x00005a(%edx)

	_04862f_jump:
		cmpb   $0x000000,_0c25e1_data
		je     _048645_jump
		cmpb   $0x000000,0x00007f(%edx)
		jne    _048645_jump
		mov    $0x000001,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048645_jump:
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04864c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _04865e_jump
		cmp    $0x000001,%dl
		je     _048689_jump
		jmp    _0486b8_jump

	_04865e_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0c25c8_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		and    $0x0000f7,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000081(%ebx)
		jmp    _048723_jump

	_048689_jump:
		mov    _0c25ca_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ebx),%al
		add    $0x000140,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%ebx)
		mov    0x000081(%ebx),%dl
		or     $0x000008,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000081(%ebx)
		jmp    _048723_jump

	_0486b8_jump:
		mov    _0c25c8_data,%esi
		mov    _0c25ca_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jle    _04870f_jump
		add    $0x000140,%edi
		sub    %ecx,%edi
		mov    0x000081(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_04870f_jump:
		sub    %ecx,%esi
		mov    0x000081(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000081(%ebx)

	_048723_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_04872c_switch:
		.long   _0487dc_case
		.long   _0487d6_case
		.long   _048d63_case
		.long   _0487f0_case
		.long   _048c0a_case
		.long   _048f56_case
		.long   _048f64_case
		.long   _049086_case
		.long   _048e41_case
		.long   _048d33_case
		.long   _048955_case
		.long   _048e9d_case
		.long   _048e18_case
		.long   _048def_case
		.long   _048be1_case
		.long   _048b63_case
		.long   _04919d_case
		.long   _04919d_case
		.long   _0492cd_case
		.long   _049272_case
		.long   _048a01_case
		.long   _048d08_case
		.long   _048ac8_case
		.long   _048992_case
		.long   _048c33_case




_048790_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0c25c8_data,%edx
		mov    _0c25ca_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		lea    0x000140(%eax),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edi
		cmpb   $0x000000,_0c25e4_data
		jne    _04938a_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0487d6_case:
		incb   _0c25e7_data

	_0487dc_case:
		xor    %dl,%dl
		mov    %dl,_0c25e3_data
		movb   $0x000001,_0c25e4_data
		jmp    _0493c4_jump

	_0487f0_case:
		mov    _0c25e8_data,%al
		mov    %al,_0c25e7_data
		mov    _0c25e2_data,%al
		mov    %al,_0c25e3_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c25e7_data,%al
		mov    _0c25e3_data,%dl
		mov    _0965f0_data(,%eax,4),%eax
		mov    (%edx,%eax,1),%al
		mov    %al,_0db24b_data
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x00001a,%eax
		je     _04883a_jump
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x00000e,%eax
		jne    _04887d_jump

	_04883a_jump:
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x00001a,%eax
		je     _04884f_jump
		cmp    $0x00000e,%eax
		jne    _048938_jump

	_04884f_jump:
		mov    _0c25e3_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    _0c25e7_data,%al
		mov    %dh,_0c25e3_data
		xor    %edx,%edx
		mov    _0965f0_data(,%eax,4),%eax
		mov    _0c25e3_data,%dl
		mov    (%edx,%eax,1),%al
		mov    %al,_0db24b_data
		jmp    _04883a_jump

	_04887d_jump:
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x000014,%eax
		jne    _048898_jump
		mov    %dl,%bl
		inc    %bl
		mov    %bl,_0c25e3_data
		jmp    _048938_jump

	_048898_jump:
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x000012,%eax
		je     _0488c0_jump
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x000013,%eax
		je     _0488c0_jump
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x000015,%eax
		jne    _048938_jump

	_0488c0_jump:
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x000015,%eax
		jne    _0488d2_jump
		incb   _0c25e3_data

	_0488d2_jump:
		mov    _0c25e3_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    _0c25e7_data,%al
		mov    %dh,_0c25e3_data

	_0488e7_jump:
		xor    %edx,%edx
		mov    _0965f0_data(,%eax,4),%eax
		mov    _0c25e3_data,%dl
		mov    (%edx,%eax,1),%al
		mov    %al,_0db24b_data
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x000015,%eax
		je     _04890f_jump
		cmp    $0x000014,%eax
		jne    _048938_jump

	_04890f_jump:
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x000015,%eax
		jne    _048921_jump
		incb   _0c25e3_data

	_048921_jump:
		mov    _0c25e3_data,%dl
		xor    %eax,%eax
		inc    %dl
		mov    _0c25e7_data,%al
		mov    %dl,_0c25e3_data
		jmp    _0488e7_jump

	_048938_jump:
		mov    $0x0000ff,%bl
		xor    %cl,%cl
		mov    %bl,_0c25e8_data
		mov    $0x000001,%bh
		mov    %cl,_0db24a_data
		mov    %bh,_0c25e4_data
		jmp    _0493c4_jump

	_048955_case:
		mov    _0c25e3_data,%al
		and    $0x0000ff,%eax
		mov    (%edx,%eax,1),%al
		xor    %ah,%ah
		mov    _0c25e7_data,%dl
		mov    %ah,_0c25e3_data
		cmp    %dl,%al
		jne    _048980_jump
		mov    %dl,%dh
		inc    %dh
		mov    %dh,_0c25e7_data
		jmp    _048985_jump

	_048980_jump:
		mov    %al,_0c25e7_data

	_048985_jump:
		xor    %bl,%bl
		mov    %bl,_0c25e4_data
		jmp    _0493c4_jump

	_048992_case:
		xor    %eax,%eax
		mov    0x000077(%esi),%al
		cmp    $0x000005,%eax
		jne    _0489aa_jump
		call   _0713cc_func
		orb    $0x000001,_0c331c_data
		jmp    _0489f4_jump

	_0489aa_jump:
		mov    $0xffff8300,%ebx
		mov    $0x000003,%edx
		mov    _0c331c_data,%ch
		mov    $_0c1b4c_data,%eax
		or     $0x000002,%ch
		mov    %bx,_0c25ac_data
		mov    $0x000036,%ebx
		mov    %ch,_0c331c_data
		call   _01d6f8_func
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d5a4_func
		inc    %eax
		mov    %ax,0x000048(%esi)
		movb   $0x000001,_0c25a0_data

	_0489f4_jump:
		xor    %dl,%dl
		mov    %dl,_0c25e4_data
		jmp    _0493c4_jump

	_048a01_case:
		xor    %eax,%eax
		mov    0x000077(%esi),%al
		cmp    $0x00000c,%eax
		jne    _048a1e_jump
		mov    $0x000013,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _048aa0_jump

	_048a1e_jump:
		mov    _0c1b34_data,%eax
		mov    _0c1b38_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jg     _048a3e_jump
		jmp    _048aa0_jump

	_048a33_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %dx,%bx
		jge    _048aa0_jump

	_048a3e_jump:
		xor    %ecx,%ecx
		mov    0x000060(%eax),%cx
		cmp    $0x0000ab,%ecx
		jne    _048a33_jump
		mov    (%eax),%edx
		mov    %edx,(%esi)
		mov    0x000004(%eax),%edx
		mov    %edx,0x000004(%esi)
		mov    0x000008(%eax),%edx
		mov    %edx,0x000008(%esi)
		mov    0x00000c(%eax),%edx
		mov    %edx,0x00000c(%esi)
		mov    0x000044(%eax),%dx
		mov    %dx,0x000044(%esi)
		mov    0x00006d(%eax),%dl
		mov    %dl,0x00006d(%esi)
		mov    0x00006c(%eax),%dl
		mov    0x000069(%esi),%bl
		mov    %dl,0x00006c(%esi)
		add    $0x000004,%bl
		mov    0x00006a(%eax),%al
		movb   $0x000000,0x00006b(%esi)
		mov    %bl,0x000069(%esi)
		mov    0x000081(%esi),%bh
		mov    %al,0x00006a(%esi)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)
		xor    %ebx,%ebx
		mov    %ebx,_0c1b70_data

	_048aa0_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _056614_func
		mov    0x000048(%esi),%ax
		xor    %cl,%cl
		add    $0x000080,%eax
		mov    %cl,_0c25e4_data
		mov    %ax,0x000048(%esi)
		jmp    _0493c4_jump

	_048ac8_case:
		xor    %eax,%eax
		mov    0x000077(%esi),%al
		cmp    $0x00000c,%eax
		jne    _048ad6_jump
		subb   $0x000010,0x000069(%esi)

	_048ad6_jump:
		mov    _0c25ca_data,%dx
		mov    0x000081(%esi),%bl
		xor    %eax,%eax
		add    $0x0000a0,%edx
		mov    0x000068(%esi),%al
		and    $0x0000f7,%bl
		sub    %eax,%edx
		mov    %bl,0x000081(%esi)
		mov    %dx,_0c25da_data
		mov    _0c25d8_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%dl
		mov    %eax,0x000028(%esi)
		mov    _0c45c8_data,%ax
		mov    $0x000001,%ebx
		sub    %edx,%eax
		mov    $0x000002,%edx
		mov    %ax,_0c25dc_data
		mov    %esi,%eax
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %cl,%cl
		call   _056614_func
		mov    $0x0000ff,%bh
		mov    %cl,_0c25e0_data
		mov    $0x000001,%ch
		mov    %bh,_0c25de_data
		mov    %ch,_0c25df_data
		mov    %cl,_0c25e4_data
		jmp    _0493c4_jump

	_048b63_case:
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    _0c45c8_data,%dx
		mov    %ax,_0c25da_data
		mov    _0ce534_data,%ax
		sub    $0x0000e6,%edx
		add    %eax,%edx
		mov    $0x000006,%ebx
		mov    %dx,_0c25dc_data
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x0000ff,%ecx
		call   _056614_func
		mov    $0x0000ff,%ah
		mov    $0x000001,%dh
		mov    %ecx,%ebx
		mov    %ah,_0c25de_data
		mov    %ah,_0c25e0_data
		mov    %dh,_0c25df_data
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _018710_func
		xor    %bl,%bl
		mov    %bl,_0c25e4_data
		jmp    _0493c4_jump

	_048be1_case:
		mov    $0x000005,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _056614_func
		xor    %bh,%bh
		mov    %bh,_0c25e4_data
		jmp    _0493c4_jump

	_048c0a_case:
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _056614_func
		xor    %ah,%ah
		mov    %ah,_0c25e4_data
		jmp    _0493c4_jump

	_048c33_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _048c71_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000014,%eax
		jne    _048c71_jump
		mov    %esi,%eax
		call   _01dea4_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %cl,%cl
		call   _056614_func
		mov    %cl,_0c25e4_data
		jmp    _0493c4_jump

	_048c71_jump:
		mov    %esi,%eax
		mov    0x000081(%esi),%bl
		call   _01dea4_func
		mov    0x000081(%esi),%al
		xor    %ecx,%ecx
		shl    $0x000004,%al
		shl    $0x000004,%bl
		shr    $0x000007,%al
		shr    $0x000007,%bl
		mov    %al,%cl
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %bl,%al
		mov    %bl,%dl
		cmp    %eax,%ecx
		je     _0493c4_jump
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		xor    %ebx,%ebx
		call   _01d6f8_func
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01d5a4_func
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _056614_func
		mov    0x000048(%esi),%dx
		xor    %bh,%bh
		add    %ecx,%edx
		mov    %bh,_0c25e4_data
		mov    %dx,0x000048(%esi)
		jmp    _0493c4_jump

	_048d08_case:
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		sub    $0x000030,%eax
		mov    %ax,_0c25ac_data
		testb  $0x000001,_0c1b74_data
		je     _048d2a_jump
		orb    $0x000001,_0c25ac_data
		jmp    _048d63_case

	_048d2a_jump:
		andb   $0x0000fe,_0c25ac_data
		jmp    _048d63_case

	_048d33_case:
		mov    _0db24a_data,%cl
		xor    %bh,%bh
		movb   $0x000003,0x00007e(%esi)
		mov    %bh,_0c25e5_data
		test   %cl,%cl
		jne    _048d55_jump
		movb   $0x000001,_0c25e4_data
		jmp    _0493c4_jump

	_048d55_jump:
		mov    $0x000004,%ah
		mov    %bh,_0db24a_data
		mov    %ah,_0db24b_data

	_048d63_case:
		mov    0x000028(%esi),%ax
		mov    _0ce534_data,%cx
		mov    %ax,_0c25da_data
		mov    _0c25ce_data,%ax
		add    %ecx,%eax
		sub    $0x000080,%eax
		mov    %ax,_0c25dc_data
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x000004,%eax
		jne    _048d9b_jump
		mov    $0x000008,%ebx
		jmp    _048da0_jump

	_048d9b_jump:
		mov    $0x000006,%ebx

	_048da0_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x0000ff,%bh
		mov    $0x000001,%ch
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %bh,_0c25de_data
		mov    %ch,_0c25df_data
		mov    $0x0000ff,%ecx
		mov    %bh,_0c25e0_data
		mov    %ecx,%ebx
		call   _018710_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _056614_func
		xor    %al,%al
		mov    %al,_0c25e4_data
		jmp    _0493c4_jump

	_048def_case:
		mov    $0x000014,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %cl,%cl
		call   _056614_func
		mov    %cl,_0c25e4_data
		jmp    _0493c4_jump

	_048e18_case:
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _056614_func
		mov    %ch,_0c25e4_data
		jmp    _0493c4_jump

	_048e41_case:
		mov    %esi,%eax
		call   _01dea4_func
		testb  $0x000008,0x000081(%esi)
		sete   %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _04864c_func
		mov    _0c25cc_data,%eax
		sar    $0x000010,%eax
		sub    $0x000080,%eax
		mov    0x000081(%esi),%dh
		mov    %eax,0x00002c(%esi)
		test   $0x000008,%dh
		je     _048e85_jump
		subl   $0x000030,0x000028(%esi)
		andb   $0x0000f7,0x000081(%esi)
		jmp    _048e9d_case

	_048e85_jump:
		mov    0x000028(%esi),%edx
		mov    0x000081(%esi),%bl
		add    $0x000030,%edx
		or     $0x000008,%bl
		mov    %edx,0x000028(%esi)
		mov    %bl,0x000081(%esi)

	_048e9d_case:
		mov    0x000081(%esi),%al
		mov    $_0c25dc_data,%ebx
		shl    $0x000004,%al
		mov    $_0c25da_data,%edx
		shr    $0x000007,%al
		xor    %cl,%cl
		mov    %al,(%esp)
		mov    %esi,%eax
		mov    %cl,_0db24c_data
		call   _01dea4_func
		mov    %esi,%eax
		call   _0483f0_func
		mov    $0x000008,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000010,%ch
		call   _01d6f8_func
		mov    $0x000002,%ah
		mov    $0x000001,%edx
		mov    %ch,_0c25de_data
		mov    %ch,_0c25e0_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0c25df_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018710_func
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x00000d,%eax
		jne    _048f17_jump
		movw   $0x00ffc0,0x000042(%esi)
		jmp    _048f1d_jump

	_048f17_jump:
		movw   $0x000000,0x000040(%esi)

	_048f1d_jump:
		mov    (%esp),%al
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,%dh
		mov    $0x000001,%ebx
		or     %al,%dh
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		mov    $0x000002,%edx
		call   _056614_func
		xor    %bl,%bl
		mov    %bl,_0c25e4_data
		jmp    _0493c4_jump

	_048f56_case:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_048f64_case:
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x000008,%eax
		jne    _048f7e_jump
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_048f7e_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _04864c_func
		cwtl   
		test   %eax,%eax
		jle    _048fbc_jump
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		add    $0x000030,%edx
		mov    0x000068(%esi),%al
		mov    %edx,0x000028(%esi)
		mov    _0c25ca_data,%dx
		mov    0x000081(%esi),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%esi)
		sub    $0x000030,%eax
		jmp    _048fef_jump

	_048fbc_jump:
		mov    0x000081(%esi),%dh
		mov    0x000028(%esi),%eax
		or     $0x000008,%dh
		sub    $0x000030,%eax
		mov    %dh,0x000081(%esi)
		mov    %eax,0x000028(%esi)
		mov    _0c25cc_data,%dx
		xor    %eax,%eax
		add    $0x000140,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		add    $0x000030,%eax

	_048fef_jump:
		mov    %ax,_0c25da_data
		mov    _0c45c6_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000e6,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0c25dc_data
		xor    %eax,%eax
		mov    _0c25e7_data,%al
		mov    $0x000001,%ch
		lea    0x000000(,%eax,4),%ebx
		xor    %edx,%edx
		mov    _0c25e3_data,%al
		mov    %ch,_0c25df_data
		mov    %al,%dl
		inc    %al
		mov    _0965f0_data(%ebx),%ebx
		mov    %al,_0c25e3_data
		xor    %eax,%eax
		mov    $0x0000ff,%ecx
		mov    (%edx,%ebx,1),%al
		mov    $0x0000ff,%bh
		shl    $0x00000a,%eax
		mov    $0x000001,%edx
		mov    %eax,_0c25f0_data
		mov    %bh,_0c25de_data
		mov    %bh,_0c25e0_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018710_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _056614_func
		xor    %al,%al
		mov    %al,_0c25e4_data
		jmp    _0493c4_jump

	_049086_case:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _04864c_func
		cwtl   
		test   %eax,%eax
		jle    _0490d2_jump
		mov    _0c25ca_data,%dx
		mov    0x000081(%esi),%cl
		mov    0x000028(%esi),%ebp
		xor    %eax,%eax
		and    $0x0000f7,%cl
		mov    0x000068(%esi),%al
		add    $0x000050,%ebp
		sub    %eax,%edx
		mov    %cl,0x000081(%esi)
		mov    %edx,%eax
		mov    %ebp,0x000028(%esi)
		sub    $0x000050,%eax
		jmp    _049105_jump

	_0490d2_jump:
		mov    _0c25cc_data,%dx
		mov    0x000081(%esi),%bh
		mov    0x000028(%esi),%ecx
		xor    %eax,%eax
		or     $0x000008,%bh
		add    $0x000140,%edx
		mov    0x000068(%esi),%al
		sub    $0x000060,%ecx
		sub    %eax,%edx
		mov    %bh,0x000081(%esi)
		mov    %edx,%eax
		mov    %ecx,0x000028(%esi)
		add    $0x000040,%eax

	_049105_jump:
		mov    %ax,_0c25da_data
		mov    _0c45c6_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000b4,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0c25dc_data
		xor    %eax,%eax
		mov    _0c25e7_data,%al
		mov    $0x0000ff,%ch
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0c25e3_data,%al
		mov    %ch,_0c25de_data
		mov    %al,%bl
		inc    %al
		mov    _0965f0_data(%edx),%edx
		mov    %al,_0c25e3_data
		xor    %eax,%eax
		mov    %ch,_0c25e0_data
		mov    (%edx,%ebx,1),%al
		mov    $0x0000ff,%ecx
		shl    $0x00000a,%eax
		mov    $0x000001,%edx
		mov    %eax,_0c25f0_data
		mov    $0x000001,%ah
		mov    %ecx,%ebx
		mov    %ah,_0c25df_data
		mov    %esi,%eax
		call   _018710_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _056614_func
		xor    %dl,%dl
		mov    %dl,_0c25e4_data
		jmp    _0493c4_jump

	_04919d_case:
		mov    _0c45c6_data,%eax
		sar    $0x000010,%eax
		sub    $0x000048,%eax
		mov    %eax,0x00002c(%esi)
		xor    %eax,%eax
		mov    _0db24b_data,%al
		cmp    $0x000013,%eax
		jne    _0491bb_jump
		subl   $0x000030,0x00002c(%esi)

	_0491bb_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _04864c_func
		cwtl   
		test   %eax,%eax
		jle    _0491ed_jump
		mov    0x000028(%esi),%eax
		add    $0x000044,%eax
		mov    0x000081(%esi),%bl
		mov    %eax,0x000028(%esi)
		and    $0x0000f7,%bl
		mov    0x000028(%esi),%ax
		mov    %bl,0x000081(%esi)
		sub    $0x000018,%eax
		jmp    _04920e_jump

	_0491ed_jump:
		mov    0x000028(%esi),%ebp
		sub    $0x00004c,%ebp
		mov    0x000081(%esi),%dh
		mov    %ebp,0x000028(%esi)
		or     $0x000008,%dh
		mov    0x000028(%esi),%ax
		mov    %dh,0x000081(%esi)
		add    $0x000010,%eax

	_04920e_jump:
		mov    %ax,_0c25da_data
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%ch
		call   _01d6f8_func
		mov    $0x0000ff,%bh
		mov    $0x000001,%edx
		mov    %ch,_0c25df_data
		mov    0x00002c(%esi),%ax
		mov    $0x0000ff,%ecx
		mov    %ax,_0c25dc_data
		mov    %bh,_0c25de_data
		mov    %bh,_0c25e0_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018710_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _056614_func
		xor    %al,%al
		mov    %al,_0c25e4_data
		jmp    _0493c4_jump

	_049272_case:
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _056614_func
		xor    %eax,%eax
		mov    _0c25e7_data,%al
		lea    0x000000(,%eax,4),%ebx
		xor    %edx,%edx
		mov    _0c25e3_data,%al
		mov    %al,%dl
		inc    %al
		mov    _0965f0_data(%ebx),%ebx
		mov    %al,_0c25e3_data
		mov    (%edx,%ebx,1),%al
		mov    0x000048(%esi),%dx
		xor    %ah,%ah
		imul   %eax,%edx
		mov    %ah,_0c25e4_data
		mov    %dx,0x000048(%esi)
		jmp    _0493c4_jump

	_0492cd_case:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		movswl %di,%eax
		cmp    %eax,%edx
		jle    _049302_jump
		xor    %eax,%eax
		mov    _0c25ca_data,%dx
		mov    0x000068(%esi),%al
		mov    0x000081(%esi),%cl
		sub    %eax,%edx
		and    $0x0000f7,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%esi)
		sub    $0x000038,%eax
		jmp    _049328_jump

	_049302_jump:
		mov    _0c25cc_data,%ax
		mov    0x000081(%esi),%bh
		xor    %edx,%edx
		add    $0x000140,%eax
		mov    0x000068(%esi),%dl
		or     $0x000008,%bh
		sub    %edx,%eax
		mov    %bh,0x000081(%esi)
		add    $0x000030,%eax

	_049328_jump:
		mov    %ax,_0c25da_data
		mov    $0x000004,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0c25dc_data
		mov    %esi,%eax
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x0000ff,%ch
		call   _056614_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0c25de_data
		mov    %ch,_0c25e0_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0c25df_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018710_func
		xor    %dl,%dl
		mov    %dl,_0c25e4_data
		jmp    _0493c4_jump

	_04938a_jump:
		xor    %eax,%eax
		mov    _0c25e7_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0c25e3_data,%al
		mov    %al,%bl
		inc    %al
		mov    _0965f0_data(%edx),%edx
		mov    %al,_0c25e3_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0db24b_data
		xor    %ebx,%ebx
		sub    $0x000002,%al
		mov    %ebx,_0c25f0_data
		cmp    $0x000018,%al
		jbe    _0493d7_jump

	_0493c4_jump:
		cmpb   $0x000000,_0c25e4_data
		jne    _04938a_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0493d7_jump:
		mov    %al,%bl
		mov    _0c25ca_data,%ax
		add    $0x0000a0,%eax
		jmp    *%cs:_04872c_switch(,%ebx,4)



_0493ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		mov    0x00006c(%eax),%al
		xor    %ebp,%ebp
		cmp    $0x00000b,%al
		jb     _049406_jump
		jbe    _04942d_jump
		cmp    $0x00000c,%al
		je     _04941f_jump

	_049406_jump:
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _04944b_jump
		jmp    _049580_jump

	_04941f_jump:
		mov    $0x000003,%ah
		mov    $0x000033,%dl
		mov    %ah,0x000014(%esp)
		mov    %dl,0x000010(%esp)
		jmp    _049406_jump

	_04942d_jump:
		mov    $0x000003,%dh
		mov    $0x000034,%bl
		mov    %dh,0x000014(%esp)
		mov    %bl,0x000010(%esp)
		jmp    _049406_jump

	_04943b_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %cx,%ax
		jge    _049580_jump

	_04944b_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000010(%esp),%dl
		mov    0x000060(%esi),%bx
		cmp    %edx,%ebx
		jne    _04943b_jump
		cmpl   $0x000000,0x000024(%esi)
		je     _049487_jump
		jmp    _04943b_jump

	_049463_jump:
		movw   $0x000001,0x000050(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _049518_jump

	_049474_jump:
		movw   $0x000003,0x000050(%esi)
		mov    0x000040(%edi),%ax
		mov    %ax,0x000040(%esi)
		jmp    _049518_jump

	_049487_jump:
		lea    0x000004(%esp),%edx
		lea    0x00000c(%esp),%ecx
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f7d4_func
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		xor    %edx,%edx
		mov    %edi,%eax
		mov    0x00001c(%esp),%dl
		call   _01da90_func
		mov    -0x000002(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000011,%edx
		add    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		xor    %edx,%edx
		mov    0x00000a(%esp),%ebx
		mov    0x000074(%esi),%dl
		mov    0x000028(%esi),%ax
		sar    $0x000010,%ebx
		mov    %ax,0x00003c(%esi)
		sub    %edx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    0x000010(%esp),%cl
		mov    %ax,0x00003e(%esi)
		cmp    $0x000033,%cl
		jb     _049518_jump
		jbe    _049463_jump
		cmp    $0x000034,%cl
		je     _049474_jump

	_049518_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movw   $0x000000,0x000042(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		mov    0x000002(%ebx,%edx,8),%al
		mov    %al,0x00006a(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01df3c_func
		movb   $0x000000,0x000071(%esi)
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		mov    0x000081(%esi),%dl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%dl
		and    $0x000008,%al
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,%bl
		and    $0x0000bf,%bl
		mov    %esi,%ebp
		mov    %bl,0x000081(%esi)

	_049580_jump:
		mov    %ebp,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04958c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		movzbw 0x000068(%eax),%di
		add    0x000028(%eax),%di
		mov    0x00006c(%eax),%al
		mov    %di,0x000004(%esp)
		cmp    $0x00000b,%al
		jb     _0495b9_jump
		jbe    _0496e9_jump
		cmp    $0x00000c,%al
		je     _0496bc_jump

	_0495b9_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0495c4_jump
		neg    %eax

	_0495c4_jump:
		mov    %ax,(%esp)
		test   %edx,%edx
		jge    _0495ce_jump
		add    %ebx,%edi

	_0495ce_jump:
		mov    _0c25ce_data,%bx
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		mov    _0c25ca_data,%ecx
		add    %eax,%edx
		mov    _0c25d0_data,%ax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		mov    %dx,0x000010(%esp)
		add    $0x0000c8,%eax
		mov    _0c25a2_data,%edx
		mov    %ax,0x000008(%esp)
		mov    _0c25a6_data,%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		mov    _0c25a8_data,%ebx
		add    %edx,%eax
		sar    $0x000011,%ebx
		mov    %eax,%edx
		mov    _0c25a4_data,%eax
		sar    $0x000010,%eax
		add    $0x000130,%ecx
		add    %ebx,%eax
		mov    _0c25c8_data,%ebx
		mov    %ax,0x00000c(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _049652_jump
		cmp    %ecx,%eax
		jg     _049652_jump
		mov    $0x000001,%eax
		jmp    _049654_jump

	_049652_jump:
		xor    %eax,%eax

	_049654_jump:
		test   %eax,%eax
		je     _0496b3_jump
		cmp    %di,%dx
		jl     _0496b3_jump
		mov    0x00000c(%esp),%eax
		cmp    0x000010(%esp),%ax
		jl     _0496b3_jump
		mov    -0x000002(%esp),%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		add    %ebx,%eax
		cmp    %eax,%edx
		jg     _0496b3_jump
		mov    0x00000e(%esp),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _0496b3_jump
		mov    %esi,%eax
		mov    $0x000010,%ebx
		call   _0493ec_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		subw   $0x000040,_0c25dc_data

	_0496b3_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0496bc_jump:
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %di,%edi
		sub    %eax,%edi
		jmp    _0495b9_jump

	_0496e9_jump:
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %eax,%ebx
		jmp    _0495b9_jump



_049710_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _048534_func
		test   %al,%al
		je     _0497c6_jump
		mov    0x00005a(%esi),%dx
		test   %dx,%dx
		je     _049733_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x00005a(%esi)

	_049733_jump:
		mov    _0c25e5_data,%ah
		test   %ah,%ah
		je     _049747_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0c25e5_data

	_049747_jump:
		mov    0x000081(%esi),%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _049921_jump
		jmp    _0497bf_jump

	_04975f_jump:
		mov    _0db246_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000e,%eax
		jne    _049799_jump
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		cmp    $0x00000f,%eax
		jne    _049799_jump
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_049799_jump:
		mov    $0xffff8300,%ebx
		mov    %bx,_0c25da_data
		mov    %bx,_0c25dc_data
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_0497b8_jump:
		mov    %esi,%eax
		call   _0188e8_func

	_0497bf_jump:
		mov    %esi,%eax
		call   _048790_func

	_0497c6_jump:
		xor    %eax,%eax
		mov    0x000081(%esi),%cl
		mov    0x00006a(%esi),%al
		and    $0x0000fe,%cl
		mov    %ax,_0db248_data
		mov    %cl,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0497e5_jump:
		mov    $_0c25dc_data,%ebx
		mov    %esi,%eax
		mov    $_0c25da_data,%edx
		call   _01dea4_func
		mov    %esi,%eax
		call   _0483f0_func
		mov    $0x000018,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _048458_func
		test   %al,%al
		je     _049816_jump
		movb   $0x000001,_0c25e4_data

	_049816_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000002,%eax
		jge    _0498d8_jump
		cmpb   $0x000000,_0c1f02_data
		je     _0498d8_jump
		cmpb   $0x000000,_0db24c_data
		jne    _0498d8_jump
		cmpb   $0x000000,_0cdb18_data
		jne    _0498d8_jump
		xor    %eax,%eax
		mov    _0c6970_data,%al
		test   %eax,%eax
		jne    _0498d8_jump
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movb   $0x000001,_0db24c_data
		mov    0x00002c(%esi),%ecx
		mov    _0c1ef0_data,%ebx
		add    %eax,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000074(%ebx),%dl
		mov    0x000069(%ebx),%al
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		add    0x00002c(%ebx),%eax
		cmp    %eax,%ecx
		jle    _0498a2_jump
		addw   $0x000050,0x000042(%esi)
		jmp    _0498a7_jump

	_0498a2_jump:
		subw   $0x000050,0x000042(%esi)

	_0498a7_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %eax,%ebx
		mov    _0c1ef0_data,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		add    0x000028(%eax),%edx
		cmp    %edx,%ebx
		jle    _0498c9_jump
		addw   $0x000050,0x000040(%esi)
		jmp    _0498d8_jump

	_0498c9_jump:
		subw   $0x000050,0x000040(%esi)
		jmp    _0498d8_jump

	_0498d0_jump:
		cmp    $0x000004,%al
		je     _049816_jump

	_0498d8_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c25e0_data,%cl
		mov    _0c25de_data,%bl
		mov    _0c25df_data,%dl
		call   _018710_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _0497b8_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000c,%eax
		je     _049915_jump
		cmp    $0x00000b,%eax
		jne    _0497b8_jump

	_049915_jump:
		mov    %esi,%eax
		call   _04958c_func
		jmp    _0497b8_jump

	_049921_jump:
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		je     _04975f_jump
		mov    _0db24b_data,%al
		cmp    $0x00000a,%al
		jb     _0498d0_jump
		jbe    _0497e5_jump
		cmp    $0x00000d,%al
		je     _0497e5_jump
		jmp    _0498d8_jump

_049948_switch:
		.long   _0499c4_case
		.long   _0499d6_case
		.long   _049a09_case
		.long   _0499e8_case
		.long   _049a09_case
		.long   _049a09_case
		.long   _049a09_case
		.long   _049a09_case
		.long   _049a09_case
		.long   _049a09_case
		.long   _0499fa_case




_049974_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c25e7_data,%al
		cmp    $0x000008,%eax
		je     _049994_jump
		xor    %edx,%edx
		mov    _0965f0_data(,%eax,4),%eax
		mov    _0c25e3_data,%dl
		add    %edx,%eax
		jmp    _0499ac_jump

	_049994_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c25e8_data,%al
		mov    _0c25e2_data,%dl
		mov    _0965f0_data(,%eax,4),%eax
		add    %edx,%eax

	_0499ac_jump:
		mov    (%eax),%dl
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _049a09_case
		and    $0x0000ff,%edx
		jmp    *%cs:_049948_switch(,%edx,4)

	_0499c4_case:
		xor    %eax,%eax
		mov    _0c25e7_data,%al
		mov    _0965f0_data(,%eax,4),%eax
		mov    (%eax),%al
		pop    %edx
		ret    

	_0499d6_case:
		xor    %eax,%eax
		mov    _0c25e7_data,%al
		mov    _0965f4_data(,%eax,4),%eax
		mov    (%eax),%al
		pop    %edx
		ret    

	_0499e8_case:
		xor    %eax,%eax
		mov    _0c25e8_data,%al
		mov    _0965f0_data(,%eax,4),%eax
		mov    (%eax),%al
		pop    %edx
		ret    

	_0499fa_case:
		mov    0x000001(%eax),%al
		and    $0x0000ff,%eax
		mov    _0965f0_data(,%eax,4),%eax

	_049a09_case:
		mov    (%eax),%al
		pop    %edx
		ret    



_049a10_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0c25e7_data,%al
		cmp    $0x000008,%eax
		jne    _049a30_jump
		mov    $_0c25e8_data,%eax
		mov    $_0c25e2_data,%ebx
		jmp    _049a3a_jump

	_049a30_jump:
		mov    $_0c25e7_data,%eax
		mov    $_0c25e3_data,%ebx

	_049a3a_jump:
		mov    (%eax),%cl
		mov    %cl,(%esp)
		xor    %ecx,%ecx
		mov    0x000077(%edx),%cl
		cmp    $0x00000c,%ecx
		jne    _049a8e_jump
		mov    0x000076(%edx),%dl
		and    $0x0000ff,%edx
		cmp    $0x000009,%edx
		jle    _049a5c_jump
		movb   $0x000003,(%eax)
		jmp    _049a84_jump

	_049a5c_jump:
		cmp    $0x000007,%edx
		jle    _049a66_jump
		movb   $0x000005,(%eax)
		jmp    _049a84_jump

	_049a66_jump:
		cmp    $0x000004,%edx
		jle    _049a70_jump
		movb   $0x000006,(%eax)
		jmp    _049a84_jump

	_049a70_jump:
		test   %edx,%edx
		jle    _049a79_jump
		movb   $0x000007,(%eax)
		jmp    _049a84_jump

	_049a79_jump:
		xor    %dl,%dl
		movb   $0x000009,(%eax)
		mov    %dl,_0c25e5_data

	_049a84_jump:
		mov    (%esp),%dl
		cmp    (%eax),%dl
		je     _049a8e_jump
		movb   $0x000000,(%ebx)

	_049a8e_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049a98_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmpb   $0x000000,_0c25e5_data
		jne    _049b7f_jump
		mov    $0x000001,%dl
		mov    %ebx,%eax
		mov    %dl,_0c1f03_data
		call   _01eb7c_func
		mov    $0x0000ff,%dh
		mov    0x000081(%ebx),%cl
		mov    %ebx,%eax
		or     %dl,%cl
		mov    %dh,_0c25e5_data
		mov    %cl,0x000081(%ebx)
		call   _049a10_func
		call   _049974_func
		cmp    $0x000007,%al
		jb     _049aea_jump
		cmp    $0x00000a,%al
		jbe    _049b4c_jump
		cmp    $0x000012,%al
		jb     _049aea_jump
		cmp    $0x000015,%al
		jbe    _049b4c_jump

	_049aea_jump:
		mov    0x000076(%ebx),%al
		test   %al,%al
		je     _049b55_jump
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %al,%cl
		mov    0x000077(%ebx),%dl
		add    %edx,%ecx
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		mov    %ebx,%edx
		shl    $0x00000e,%edx
		mov    $0x00000c,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x004000,%eax
		mov    %eax,_0c25ec_data
		xor    %eax,%eax
		mov    _0c25e7_data,%al
		cmp    $0x000008,%eax
		je     _049b70_jump
		mov    $0x000008,%dh
		mov    %al,_0c25e8_data
		mov    _0c25e3_data,%al
		mov    %dh,_0c25e7_data
		mov    %al,_0c25e2_data
		jmp    _049b70_jump

	_049b4c_jump:
		movb   $0x000001,_0db24a_data
		jmp    _049aea_jump

	_049b55_jump:
		mov    $0x004000,%edx
		mov    $0x000009,%ah
		mov    %edx,_0c25ec_data
		mov    $0x000001,%dl
		mov    %ah,_0c25e7_data
		mov    %dl,_0c25a1_data

	_049b70_jump:
		xor    %bl,%bl
		mov    %bl,_0c25e3_data
		movb   $0x000001,_0c25e4_data

	_049b7f_jump:
		pop    %ecx
		pop    %ebx
		ret    



_049b84_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %ecx,%ecx
		mov    0x000076(%eax),%cl
		test   %ecx,%ecx
		je     _049c3e_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049b9e_jump:
		mov    _0c1b74_data,%dx
		sub    $0x000032,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0c1b78_data,%dx
		sub    $0x000050,%edx
		mov    $0x000001,%ebx
		mov    %dx,0x000056(%eax)
		mov    %ebx,%edx
		jmp    _049c5b_jump

	_049bc6_jump:
		mov    _0c1b26_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _049bd8_jump
		movb   $0x000002,0x00007f(%eax)

	_049bd8_jump:
		mov    _0c24ac_data,%dx
		add    0x000050(%eax),%dx
		sub    $0x000064,%edx
		mov    0x000052(%eax),%cx
		mov    %dx,0x00004a(%eax)
		mov    _0c24ae_data,%dx
		add    %ecx,%edx
		mov    _0c24f0_data,%bx
		sub    $0x00000a,%edx
		inc    %ebx
		mov    %dx,0x000056(%eax)
		mov    $0x000002,%edx
		jmp    _049c5b_jump

	_049c0d_jump:
		mov    _0c24ac_data,%dx
		add    $0x0003e8,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0c1b78_data,%dx
		movw   $0x0001f4,0x000050(%eax)
		sub    $0x00007d,%edx
		mov    $0x000003,%ebx
		mov    %dx,0x000056(%eax)
		mov    $0x000001,%edx
		jmp    _049c5b_jump

	_049c3e_jump:
		mov    0x00007f(%eax),%cl
		cmp    $0x000001,%cl
		jb     _049c53_jump
		jbe    _049bc6_jump
		cmp    $0x000002,%cl
		je     _049c0d_jump
		jmp    _049c5b_jump

	_049c53_jump:
		test   %cl,%cl
		je     _049b9e_jump

	_049c5b_jump:
		mov    _0c1b26_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _049c77_jump
		xor    %ecx,%ecx
		mov    0x00007f(%eax),%cl
		cmp    $0x000002,%ecx
		je     _049c77_jump
		movb   $0x000001,0x00007f(%eax)

	_049c77_jump:
		cmpb   $0x000000,_0c24cd_data
		je     _049d2e_jump
		mov    0x000048(%eax),%ecx
		mov    0x000028(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jle    _049cbf_jump
		mov    0x000040(%eax),%di
		inc    %edi
		mov    %di,0x000040(%eax)
		cmp    %di,%bx
		jge    _049ca3_jump
		mov    %bx,0x000040(%eax)

	_049ca3_jump:
		mov    0x00003e(%eax),%ecx
		mov    0x000028(%eax),%edi
		mov    0x000048(%eax),%esi
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		add    %edi,%ecx
		cmp    %esi,%ecx
		jle    _049cd4_jump
		dec    %ebx
		mov    %bx,0x000040(%eax)
		jmp    _049cd4_jump

	_049cbf_jump:
		decw   0x000040(%eax)
		mov    0x00003e(%eax),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jge    _049cd4_jump
		movw   $0x00ffff,0x000040(%eax)

	_049cd4_jump:
		mov    0x000040(%eax),%ebx
		mov    0x00002c(%eax),%ebp
		mov    0x000054(%eax),%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		add    %ebp,%ebx
		cmp    %ebx,%ecx
		jle    _049d02_jump
		mov    0x000042(%eax),%bx
		inc    %ebx
		mov    %bx,0x000042(%eax)
		cmp    %bx,%dx
		jge    _049d2e_jump
		mov    %dx,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049d02_jump:
		movswl %dx,%esi
		sub    %esi,%ebx
		cmp    %ebx,%ecx
		jge    _049d28_jump
		decw   0x000042(%eax)
		mov    0x000040(%eax),%ebx
		neg    %esi
		sar    $0x000010,%ebx
		cmp    %esi,%ebx
		jge    _049d2e_jump
		neg    %edx
		mov    %dx,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049d28_jump:
		movw   $0x000000,0x000042(%eax)

	_049d2e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_049d38_switch:
		.long   _049d7c_case
		.long   _049d85_case
		.long   _049d8e_case
		.long   _049d97_case
		.long   _049da0_case




_049d4c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0c258c_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00004e(%eax),%ebx
		sar    $0x000010,%ebx
		cmp    $0x0001f4,%ebx
		jne    _049da9_jump
		pop    %edx
		pop    %ebx
		ret    

	_049d7c_case:
		movw   $0x000064,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_049d85_case:
		movw   $0x000000,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_049d8e_case:
		movw   $0x00ffb0,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_049d97_case:
		movw   $0x00ff9c,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_049da0_case:
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_049da9_jump:
		mov    0x000076(%edx),%dl
		dec    %dl
		cmp    $0x000004,%dl
		ja     _04852e_jump
		and    $0x0000ff,%edx
		jmp    *%cs:_049d38_switch(,%edx,4)



_049dc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _049df9_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _049df9_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000001,0x000050(%ecx)
		call   _056614_func
		movb   $0x000004,0x000072(%ecx)

	_049df9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049e00_func:
		push   %edx
		xor    %eax,%eax

	_049e03_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0c24c7_data(%eax)
		cmp    $0x000019,%eax
		jl     _049e03_jump
		pop    %edx
		ret    



_049e14_func:
		push   %edx
		xor    %eax,%eax
		jmp    _049e1f_jump

	_049e19_jump:
		inc    %eax
		cmp    $0x000019,%eax
		jge    _049e3b_jump

	_049e1f_jump:
		incb   _0c24c8_data(%eax)
		xor    %edx,%edx
		mov    _0c24c8_data(%eax),%dl
		cmp    %eax,%edx
		jl     _049e19_jump
		xor    %dh,%dh
		mov    %dh,_0c24c8_data(%eax)
		jmp    _049e19_jump

	_049e3b_jump:
		incl   _0c4764_data
		pop    %edx
		ret    

_049e44_switch:
		.long   _049e7b_case
		.long   _049f89_case
		.long   _04a097_case
		.long   _04a1a5_case
		.long   _04a2b3_case
		.long   _04a3c1_case




_049e5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000074,%esp
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000070(%esp)
		mov    %bx,0x00006c(%esp)
		jmp    _04a4e0_jump

	_049e7b_case:
		movw   $0x00fffe,(%eax)
		mov    0x00000c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000004(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000008(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000014(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000018(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00001c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000020(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000050(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000068(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00002c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000030(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000034(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000010(%esp),%eax
		movw   $0x00fffe,(%eax)
		movw   $0x00fffe,(%edx)
		movw   $0x00001e,(%ebx)
		movw   $0x00002d,(%ecx)
		movw   $0x000023,(%esi)
		mov    0x00003c(%esp),%eax
		movw   $0x000019,0x000000(%ebp)
		movw   $0x00fffe,(%eax)
		mov    0x000040(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000044(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000048(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00004c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000038(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000054(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000058(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00005c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000060(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000064(%esp),%eax
		movw   $0x00fffe,(%eax)
		jmp    _04a4ca_jump

	_049f89_case:
		movw   $0x00fffe,(%eax)
		mov    0x00000c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000004(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000008(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000014(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000018(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00001c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000020(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000050(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000068(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00002c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000030(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000034(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000010(%esp),%eax
		movw   $0x00fffe,(%eax)
		movw   $0x000028,(%edx)
		movw   $0x000019,(%ebx)
		movw   $0x00fffe,(%ecx)
		movw   $0x00fffe,(%esi)
		mov    0x00003c(%esp),%eax
		movw   $0x00fffe,0x000000(%ebp)
		movw   $0x00fffe,(%eax)
		mov    0x000040(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000044(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000048(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00004c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000038(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000054(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000058(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00005c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000060(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000064(%esp),%eax
		movw   $0x00fffe,(%eax)
		jmp    _04a4ca_jump

	_04a097_case:
		movw   $0x00fffe,(%eax)
		mov    0x00000c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000004(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000008(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000014(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000018(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00001c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000020(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000050(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000068(%esp),%eax
		movw   $0x00002d,(%eax)
		mov    0x00002c(%esp),%eax
		movw   $0x000014,(%eax)
		mov    0x000030(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000034(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000010(%esp),%eax
		movw   $0x00fffe,(%eax)
		movw   $0x00fffe,(%edx)
		movw   $0x00fffe,(%ebx)
		movw   $0x00fffe,(%ecx)
		movw   $0x00fffe,(%esi)
		mov    0x00003c(%esp),%eax
		movw   $0x00fffe,0x000000(%ebp)
		movw   $0x00fffe,(%eax)
		mov    0x000040(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000044(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000048(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00004c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000038(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000054(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000058(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00005c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000060(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000064(%esp),%eax
		movw   $0x00fffe,(%eax)
		jmp    _04a4ca_jump

	_04a1a5_case:
		movw   $0x00fffe,(%eax)
		mov    0x00000c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000004(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000008(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000014(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000018(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00001c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000020(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000050(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000068(%esp),%eax
		movw   $0x000023,(%eax)
		mov    0x00002c(%esp),%eax
		movw   $0x000032,(%eax)
		mov    0x000030(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000034(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000010(%esp),%eax
		movw   $0x00fffe,(%eax)
		movw   $0x00fffe,(%edx)
		movw   $0x00fffe,(%ebx)
		movw   $0x00fffe,(%ecx)
		movw   $0x00fffe,(%esi)
		mov    0x00003c(%esp),%eax
		movw   $0x00fffe,0x000000(%ebp)
		movw   $0x00fffe,(%eax)
		mov    0x000040(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000044(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000048(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00004c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000038(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000054(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000058(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00005c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000060(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000064(%esp),%eax
		movw   $0x00fffe,(%eax)
		jmp    _04a4ca_jump

	_04a2b3_case:
		movw   $0x00fffe,(%eax)
		mov    0x00000c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000004(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000008(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000014(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000018(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00001c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000020(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000050(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000068(%esp),%eax
		movw   $0x000023,(%eax)
		mov    0x00002c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000030(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000034(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000010(%esp),%eax
		movw   $0x00fffe,(%eax)
		movw   $0x00fffe,(%edx)
		movw   $0x00fffe,(%ebx)
		movw   $0x00fffe,(%ecx)
		movw   $0x00fffe,(%esi)
		mov    0x00003c(%esp),%eax
		movw   $0x00fffe,0x000000(%ebp)
		movw   $0x00fffe,(%eax)
		mov    0x000040(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000044(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000048(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00004c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000038(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000054(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000058(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00005c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000060(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000064(%esp),%eax
		movw   $0x00fffe,(%eax)
		jmp    _04a4ca_jump

	_04a3c1_case:
		movw   $0x00fffe,(%eax)
		mov    0x00000c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000004(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000008(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000014(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000018(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00001c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000020(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000050(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000068(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00002c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000030(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000034(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000010(%esp),%eax
		movw   $0x00fffe,(%eax)
		movw   $0x00fffe,(%edx)
		movw   $0x00fffe,(%ebx)
		movw   $0x00fffe,(%ecx)
		movw   $0x00fffe,(%esi)
		mov    0x00003c(%esp),%eax
		movw   $0x00fffe,0x000000(%ebp)
		movw   $0x00fffe,(%eax)
		mov    0x000040(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000044(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000048(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00004c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000038(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000054(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000058(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00005c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000060(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000064(%esp),%eax
		movw   $0x00fffe,(%eax)

	_04a4ca_jump:
		mov    0x00006c(%esp),%ecx
		mov    0x000070(%esp),%esi
		add    $0x000020,%ecx
		inc    %esi
		mov    %cx,0x00006c(%esp)
		mov    %si,0x000070(%esp)

	_04a4e0_jump:
		mov    0x00006e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jg     _04a5e4_jump
		mov    0x00006a(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000070(%esp),%edx
		add    %eax,%eax
		dec    %edx
		add    $_0c45ca_data,%eax
		cmp    $0x000005,%dx
		ja     _04a4ca_jump
		and    $0x00ffff,%edx
		shl    $0x000002,%edx
		mov    %edx,(%esp)
		lea    0x000002(%eax),%edx
		mov    %edx,0x00000c(%esp)
		lea    0x000004(%eax),%edx
		mov    %edx,0x000004(%esp)
		lea    0x000006(%eax),%edx
		mov    %edx,0x000008(%esp)
		lea    0x000008(%eax),%edx
		mov    %edx,0x000024(%esp)
		lea    0x00000a(%eax),%edx
		mov    %edx,0x000028(%esp)
		lea    0x00000c(%eax),%edx
		mov    %edx,0x000014(%esp)
		lea    0x00000e(%eax),%edx
		mov    %edx,0x000018(%esp)
		lea    0x000010(%eax),%edx
		mov    %edx,0x00001c(%esp)
		lea    0x000012(%eax),%edx
		mov    %edx,0x000020(%esp)
		lea    0x000014(%eax),%edx
		mov    %edx,0x000050(%esp)
		lea    0x000016(%eax),%edx
		mov    %edx,0x000068(%esp)
		lea    0x000018(%eax),%edx
		mov    %edx,0x00002c(%esp)
		lea    0x00001a(%eax),%edx
		mov    %edx,0x000030(%esp)
		lea    0x00001c(%eax),%edx
		mov    %edx,0x000034(%esp)
		lea    0x00001e(%eax),%edx
		mov    %edx,0x000010(%esp)
		lea    0x000020(%eax),%edx
		lea    0x000022(%eax),%ebx
		lea    0x000024(%eax),%ecx
		lea    0x000026(%eax),%esi
		lea    0x000028(%eax),%ebp
		lea    0x00002a(%eax),%edi
		mov    %edi,0x00003c(%esp)
		lea    0x00002c(%eax),%edi
		mov    %edi,0x000040(%esp)
		lea    0x00002e(%eax),%edi
		mov    %edi,0x000044(%esp)
		lea    0x000030(%eax),%edi
		mov    %edi,0x000048(%esp)
		lea    0x000032(%eax),%edi
		mov    %edi,0x00004c(%esp)
		lea    0x000034(%eax),%edi
		mov    %edi,0x000038(%esp)
		lea    0x000036(%eax),%edi
		mov    %edi,0x000054(%esp)
		lea    0x000038(%eax),%edi
		mov    %edi,0x000058(%esp)
		lea    0x00003a(%eax),%edi
		mov    %edi,0x00005c(%esp)
		lea    0x00003c(%eax),%edi
		mov    %edi,0x000060(%esp)
		lea    0x00003e(%eax),%edi
		mov    %edi,0x000064(%esp)
		mov    (%esp),%edi
		jmp    *%cs:_049e44_switch(%edi)

	_04a5e4_jump:
		add    $0x000074,%esp
		pop    %ebp

	_04a5e8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a5f0_func:
		push   %edx
		mov    _0c2520_data,%edx
		mov    _0c251e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		shl    $0x000005,%edx
		dec    %eax
		sub    $0x000020,%edx
		add    %edx,%eax
		mov    _0c45ca_data(,%eax,2),%ax
		pop    %edx
		ret    



_04a618_func:
		push   %ebx
		push   %edx
		push   %edi
		push   %ebp
		cmpw   $0x000000,_0c51be_data
		je     _04a6dc_jump
		mov    _0c2520_data,%eax
		mov    _0c251e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000005,%eax
		dec    %edx
		sub    $0x000020,%eax
		mov    _0c4764_data,%ebx
		add    %eax,%edx
		cmp    $0x000001,%ebx
		jne    _04a672_jump
		mov    _0c45c8_data(,%edx,2),%eax
		sar    $0x000010,%eax
		mov    %eax,_0c4768_data
		cmp    $0xfffffffe,%eax
		je     _04a672_jump
		mov    %eax,%ebx
		shl    $0x000004,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		mov    %eax,_0c4768_data

	_04a672_jump:
		mov    _0c45c8_data(,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffe,%edx
		je     _04a6dc_jump
		cmpl   $0x000000,_0c4768_data
		je     _04a6dc_jump
		mov    _0c4764_data,%edi
		cmp    $0x000078,%edi
		jle    _04a6dc_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    $0x000001,%ebp
		shl    $0x000002,%eax
		lea    -0x000078(%edi),%edx
		mov    %ebp,_0c1b70_data
		sub    %edx,%eax
		mov    %eax,_0c4768_data
		jne    _04a6dc_jump
		mov    _0c51b6_data,%al
		test   %eax,%eax
		je     _04a6dc_jump
		mov    _0c51b8_data,%al
		xor    %ebx,%ebx
		mov    %al,_0c24fe_data
		mov    $_0c1b4c_data,%eax
		mov    %bx,_0c24b8_data
		call   _06f8e4_func

	_04a6dc_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ebx

	_04a6e0_jump:
		ret    



_04a6e4_func:
		cmpl   $0x000000,_0c4764_data
		jne    _04a6f2_jump
		call   _039478_func

	_04a6f2_jump:
		xor    %eax,%eax
		mov    _0c2502_data,%al
		cmp    $0x000020,%eax
		jne    _04a703_jump
		call   _0394a0_func

	_04a703_jump:
		testb  $0x000040,_0c1b26_data
		jne    _04a6e0_jump
		jmp    _039450_func



_04a714_func:
		push   %ecx
		cwtl   
		mov    $0x000007,%cl
		mov    _0948cc_data(,%eax,2),%ax
		test   %ax,%ax
		js     _04a72a_jump
		sar    %cl,%ax
		jmp    _04a733_jump

	_04a72a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04a733_jump:
		pop    %ecx
		ret    



_04a738_func:
		push   %ebx
		push   %edx
		cmpw   $0x000000,_0c25f4_data
		je     _04a77a_jump
		mov    _0c25f2_data,%eax
		sar    $0x000010,%eax
		call   _04a714_func
		mov    _0c25f4_data,%bx
		mov    %eax,%edx
		inc    %ebx
		cwtl   
		mov    %bx,_0c25f4_data
		cmp    $0x0000ff,%eax
		jne    _04a773_jump
		xor    %edx,%edx
		mov    %dx,_0c25f4_data

	_04a773_jump:
		add    %dx,_0c24ae_data

	_04a77a_jump:
		pop    %edx
		pop    %ebx
		ret    



_04a780_func:
		push   %ebx
		push   %edx
		mov    _0c25f8_data,%dx
		movswl %dx,%eax
		mov    _09494a_data(,%eax,2),%ax
		movswl %ax,%ebx
		cmp    $0x0000ff,%ebx
		je     _04a7b2_jump
		mov    _0c24ae_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0c24ae_data
		jmp    _04a7b4_jump

	_04a7b2_jump:
		xor    %edx,%edx

	_04a7b4_jump:
		mov    %dx,_0c25f8_data
		pop    %edx
		pop    %ebx
		ret    



_04a7c0_func:
		push   %ebx
		push   %edx
		mov    _0c25f6_data,%dx
		movswl %dx,%eax
		mov    _09494a_data(,%eax,2),%ax
		movswl %ax,%ebx
		cmp    $0x0000ff,%ebx
		je     _04a7f2_jump
		mov    _0c24ac_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0c24ac_data
		jmp    _04a7f4_jump

	_04a7f2_jump:
		xor    %edx,%edx

	_04a7f4_jump:
		mov    %dx,_0c25f6_data
		pop    %edx
		pop    %ebx
		ret    



_04a800_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    _0c24ac_data,%cx
		mov    _0c24ae_data,%si
		mov    %eax,%ebx
		movswl (%edx),%eax
		cmp    $0x0000ff,%eax
		jne    _04a823_jump
		movw   $0x000000,(%edx)

	_04a823_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _04a842_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _04a842_jump
		movw   $0x000000,(%ebx)

	_04a842_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _04a861_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000b,%eax
		jne    _04a861_jump
		movw   $0x000000,(%ebx)

	_04a861_jump:
		mov    _0c2520_data,%eax
		mov    %cx,_0c24ac_data
		sar    $0x000010,%eax
		mov    %si,_0c24ae_data
		cmp    $0x000005,%eax
		jne    _04a893_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _04a893_jump
		movw   $0x000000,(%ebx)
		movw   $0x000000,(%edx)

	_04a893_jump:
		call   _04a738_func
		mov    _0c25f4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04a8a9_jump
		call   _04a7c0_func

	_04a8a9_jump:
		mov    _0c25f6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04a8ba_jump
		call   _04a780_func

	_04a8ba_jump:
		mov    _0c24ae_data,%si
		mov    (%edx),%ax
		mov    _0c24ac_data,%cx
		add    %eax,%esi
		mov    (%ebx),%ax
		mov    _0c25ca_data,%di
		add    %eax,%ecx
		cmp    %di,%cx
		jge    _04a8f2_jump
		mov    %edi,%eax
		sub    %ecx,%eax
		add    %ax,(%ebx)
		mov    %edi,%ecx
		xor    %edi,%edi
		mov    %di,_0c134a_data
		jmp    _04a914_jump

	_04a8f2_jump:
		mov    _0c25cc_data,%di
		cmp    %di,%cx
		jle    _04a914_jump
		mov    %ecx,%eax
		mov    %edi,%ecx
		sub    %edi,%eax
		mov    (%ebx),%di
		sub    %eax,%edi
		xor    %eax,%eax
		mov    %di,(%ebx)
		mov    %ax,_0c134a_data

	_04a914_jump:
		mov    _0c25ce_data,%bx
		cmp    %bx,%si
		jge    _04a93c_jump
		mov    (%edx),%ax
		sub    %esi,%ebx
		add    %ebx,%eax
		mov    %ax,(%edx)
		xor    %edx,%edx
		mov    _0c25ce_data,%si
		mov    %dx,_0c134c_data
		jmp    _04a95f_jump

	_04a93c_jump:
		mov    _0c25d0_data,%di
		cmp    %di,%si
		jle    _04a95f_jump
		mov    %esi,%eax
		mov    (%edx),%si
		sub    %edi,%eax
		sub    %eax,%esi
		mov    %si,(%edx)
		mov    %edi,%esi
		xor    %edi,%edi
		mov    %di,_0c134c_data

	_04a95f_jump:
		mov    $_0c1b4c_data,%eax
		mov    %cx,_0c24ac_data
		mov    %si,_0c24ae_data
		call   _01df3c_func
		mov    _0c24ac_data,%cx
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04a984_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edi
		xor    %esi,%esi
		jmp    _04aa2c_jump

	_04a992_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _04aa29_jump

	_04a9a2_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x0000d0,%edx
		jne    _04a992_jump
		mov    0x000024(%ecx),%edx
		test   %edx,%edx
		jne    _04a992_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f7d4_func
		movw   $0x000000,0x00005e(%ecx)
		xor    %ebx,%ebx
		mov    %edx,0x000030(%ecx)
		test   %si,%si
		setne  %al
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d6f8_func
		xor    %edx,%edx
		mov    0x000028(%edi),%ebx
		mov    0x000068(%edi),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%ecx),%dl
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x000028(%ecx)
		mov    0x000069(%edi),%dl
		mov    0x00002c(%edi),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000069(%ecx),%dl
		sub    %edx,%ebx
		mov    %ebx,0x00002c(%ecx)
		test   %si,%si
		je     _04aa1a_jump
		mov    $0x000002,%edx
		jmp    _04aa1f_jump

	_04aa1a_jump:
		mov    $0x000007,%edx

	_04aa1f_jump:
		mov    %ecx,%eax
		mov    %dl,0x00007e(%ecx)
		call   _01df3c_func

	_04aa29_jump:
		add    $0x000002,%esi

	_04aa2c_jump:
		movswl %si,%edx
		cmp    $0x000002,%edx
		jg     _04a5e8_jump
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _04a9a2_jump
		jmp    _04aa29_jump



_04aa54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _04aa68_jump
		sar    %cl,%ax
		jmp    _04aa71_jump

	_04aa68_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04aa71_jump:
		movswl %dx,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _04aa7f_jump
		neg    %eax

	_04aa7f_jump:
		mov    %eax,%esi
		and    $0x00000f,%esi
		je     _04aace_jump
		mov    _0c4764_data,%edi
		imul   %esi,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %eax,%eax
		je     _04aa9b_jump
		sar    %cl,%eax
		jmp    _04aaa1_jump

	_04aa9b_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_04aaa1_jump:
		mov    %eax,%ebp
		mov    %edi,%eax
		mov    $0x000004,%cl
		sub    %esi,%eax
		test   %eax,%eax
		je     _04aab1_jump
		sar    %cl,%eax
		jmp    _04aab7_jump

	_04aab1_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_04aab7_jump:
		sub    %eax,%ebp
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _04aac9_jump
		mov    $0x000001,%eax
		jg     _04aac9_jump
		neg    %eax

	_04aac9_jump:
		imul   %ebp,%eax
		add    %eax,%ebx

	_04aace_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04aad8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006a(%eax),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    0x000004(%edx),%ecx
		mov    0x000008(%ecx,%eax,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		inc    %eax
		xor    %ecx,%ecx
		mov    %al,%ah
		mov    %al,%cl
		mov    _0c24c8_data(%ecx),%cl
		and    $0x0000ff,%ecx
		je     _04ab33_jump
		jmp    _04ab61_jump

	_04ab18_jump:
		xor    %ebx,%ebx
		movsbw 0x000001(%ecx),%cx
		mov    %ah,%bl
		imul   %ecx,%ebx
		jmp    _04ab63_jump

	_04ab26_jump:
		xor    %ebx,%ebx
		movsbw (%ecx),%cx
		mov    %ah,%bl
		imul   %ecx,%ebx
		jmp    _04ab63_jump

	_04ab33_jump:
		movzbl 0x00006d(%edx),%esi
		mov    0x00000c(%edx),%ecx
		mov    0x000081(%edx),%al
		shl    $0x000002,%esi
		shl    $0x000004,%al
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x00006c(%edx),%cl
		mov    (%esi),%esi
		shl    $0x000003,%ecx
		shr    $0x000007,%al
		add    %esi,%ecx
		test   %al,%al
		jbe    _04ab18_jump
		cmp    $0x000001,%al
		je     _04ab26_jump
		jmp    _04ab63_jump

	_04ab61_jump:
		xor    %ebx,%ebx

	_04ab63_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000017,%eax
		jne    _04ab90_jump
		testb  $0x000002,_0c3315_data
		je     _04ab90_jump
		mov    $0x000001,%cl
		mov    %ebx,%eax
		test   %ax,%ax
		js     _04ab85_jump
		sar    %cl,%ax
		jmp    _04ab8e_jump

	_04ab85_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04ab8e_jump:
		mov    %eax,%ebx

	_04ab90_jump:
		mov    %bx,0x000040(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_04ab98_jump:
		ret    



_04ab9c_func:
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _04ab98_jump
		jmp    _070a70_func



_04abbc_func:
		testb  $0x000004,0x000081(%eax)
		je     _04ab98_jump
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _04ab98_jump
		jmp    _070a70_func



_04abe4_func:
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %dx,(%esp)
		mov    %ebx,%esi
		mov    %cl,0x00000c(%esp)
		xor    %edx,%edx
		mov    _0db26c_data,%dx
		xor    %ecx,%ecx
		mov    _09285c_data(,%edx,2),%ax
		mov    _092650_data(,%edx,2),%bx
		mov    %ax,0x000008(%esp)
		mov    0x000068(%esi),%al
		shl    $0x000002,%edx
		mov    %al,0x000010(%esp)
		mov    _092238_data(%edx),%ah
		mov    %bx,0x000004(%esp)
		test   $0x000010,%ah
		je     _04ae25_jump
		test   $0x000080,%ah
		je     _04ad6f_jump
		cmpb   $0x000000,_0c13e2_data
		je     _04ad6f_jump

	_04ac49_jump:
		mov    $0x000001,%ecx
		jmp    _04ae25_jump

	_04ac53_jump:
		movswl %di,%eax
		cmp    $0xfffffee4,%eax
		jle    _04ae25_jump
		cmp    $0x0001bc,%eax
		jge    _04ae25_jump
		mov    $0x000001,%ecx
		jmp    _04ae25_jump

	_04ac76_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0xffffffce,%eax
		jle    _04acd3_jump
		movswl %di,%eax
		cmp    $0xfffffee4,%eax
		jle    _04acd3_jump
		cmp    $0x0001f4,%eax
		jge    _04acd3_jump
		mov    _0c250e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		test   %edx,%edx
		jne    _04acd3_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x00000a,0x000076(%eax)
		call   _01d6f8_func

	_04acd3_jump:
		mov    _0c250e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		mov    0x000076(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		test   %eax,%eax
		jle    _04ae25_jump
		mov    $0x000001,%ecx
		jmp    _04ae25_jump

	_04ad04_jump:
		movswl %di,%eax
		cmp    $0xfffffee4,%eax
		jle    _04ae25_jump
		cmp    $0x0001f4,%eax
		jge    _04ae25_jump
		mov    $0x000001,%ecx
		jmp    _04ae25_jump

	_04ad27_jump:
		movswl %di,%eax
		cmp    $0xfffffee4,%eax
		jle    _04ae25_jump
		cmp    $0x0001bc,%eax
		jge    _04ae25_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff9c,%eax
		jle    _04ae25_jump
		cmp    $0x0000fa,%eax
		jge    _04ae25_jump
		mov    $0x000001,%ecx
		jmp    _04ae25_jump

	_04ad65_jump:
		movb   $0x000080,0x000010(%esp)
		jmp    _04ae25_jump

	_04ad6f_jump:
		mov    _0db26c_data,%ax
		cmp    $0x00009d,%ax
		jb     _04add9_jump
		jbe    _04ad04_jump
		cmp    $0x0000d7,%ax
		jb     _04adaf_jump
		jbe    _04ac49_jump
		cmp    $0x0000dc,%ax
		jb     _04ada0_jump
		jbe    _04ac76_jump
		cmp    $0x0000f4,%ax
		je     _04ad65_jump
		jmp    _04ae25_jump

	_04ada0_jump:
		cmp    $0x0000db,%ax
		je     _04acd3_jump
		jmp    _04ae25_jump

	_04adaf_jump:
		cmp    $0x0000c0,%ax
		jb     _04adcd_jump
		jbe    _04ad65_jump
		cmp    $0x0000cc,%ax
		jb     _04ae25_jump
		cmp    $0x0000cd,%ax
		jbe    _04ac49_jump
		jmp    _04ae25_jump

	_04adcd_jump:
		cmp    $0x0000be,%ax
		je     _04ac49_jump
		jmp    _04ae25_jump

	_04add9_jump:
		cmp    $0x000078,%ax
		jb     _04ae09_jump
		jbe    _04ac49_jump
		cmp    $0x00008f,%ax
		jb     _04adfd_jump
		jbe    _04ac49_jump
		cmp    $0x000099,%ax
		je     _04ac49_jump
		jmp    _04ae25_jump

	_04adfd_jump:
		cmp    $0x00007a,%ax
		je     _04ad27_jump
		jmp    _04ae25_jump

	_04ae09_jump:
		cmp    $0x00005e,%ax
		jb     _04ae1b_jump
		jbe    _04ac49_jump
		cmp    $0x000061,%ax
		jmp    _04ae1f_jump

	_04ae1b_jump:
		cmp    $0x00000a,%ax

	_04ae1f_jump:
		je     _04ac53_jump

	_04ae25_jump:
		movswl %cx,%eax
		test   %eax,%eax
		jne    _04aede_jump
		cmpb   $0x000000,0x00000c(%esp)
		je     _04ae4f_jump
		mov    0x000004(%esp),%edx
		mov    0x000008(%esp),%ebx
		add    $0x00003c,%edx
		add    $0x00003c,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x000008(%esp)

	_04ae4f_jump:
		mov    0x000002(%esp),%edx
		mov    $0xfffffee4,%ebx
		sar    $0x000010,%edx
		movswl %di,%eax
		sub    %edx,%ebx
		cmp    %ebx,%eax
		jl     _04aed5_jump
		add    $0x0001bc,%edx
		cmp    %edx,%eax
		jg     _04aed5_jump
		mov    0x000006(%esp),%eax
		mov    $0xffffff70,%ebx
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jl     _04aed5_jump
		add    $0x000130,%eax
		cmp    %eax,%edx
		jg     _04aed5_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		cmp    $0xffffffe2,%eax
		jl     _04aed5_jump
		mov    _0c24e4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jl     _04aed5_jump
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		mov    0x000028(%esi),%ecx
		add    %eax,%eax
		add    %ecx,%eax
		test   %eax,%eax
		jl     _04aed5_jump
		mov    _0c24e2_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ecx,%eax
		jge    _04aed9_jump

	_04aed5_jump:
		xor    %ecx,%ecx
		jmp    _04aede_jump

	_04aed9_jump:
		mov    $0x000001,%ecx

	_04aede_jump:
		movswl %cx,%eax
		cmp    $0x000001,%eax
		jne    _04af33_jump
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		testb  $0x000080,_092238_data(,%eax,4)
		je     _04af33_jump
		mov    $0x000001,%dh
		mov    _0c259f_data,%bl
		mov    %dh,_0c13e2_data
		test   %bl,%bl
		jne    _04af1c_jump
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		je     _04af1c_jump
		cmpb   $0x000000,_0c25e1_data
		jne    _04af2e_jump

	_04af1c_jump:
		cmpb   $0x000000,_0c259f_data
		je     _04af33_jump
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		jne    _04af33_jump

	_04af2e_jump:
		call   _01f790_func

	_04af33_jump:
		movswl %cx,%eax
		cmp    $0x000001,%eax
		sete   %al
		xor    %ah,%ah
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		ret    



_04af44_func:
		push   %edx
		movl   $0xffff8300,0x000028(%eax)
		movl   $0xffff8300,0x00002c(%eax)
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000030(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_04af6c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ebx,%esi
		mov    0x000060(%ebx),%bx
		mov    %bx,_0db26c_data
		mov    0x000024(%esi),%bl
		mov    %bl,(%esp)
		mov    0x000081(%esi),%bl
		movl   $0x000000,0x000024(%esi)
		test   $0x000004,%bl
		je     _04b1bf_jump
		movswl %dx,%edx
		cwtl   
		xor    %ecx,%ecx
		mov    %esi,%ebx
		mov    (%esp),%cl
		call   _04abe4_func
		test   %ax,%ax
		je     _04b0af_jump
		mov    0x00005c(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _04b095_jump
		mov    _0db26c_data,%ax
		testb  $0x000001,_092239_data(,%eax,4)
		jne    _04afea_jump
		mov    0x000030(%esi),%edx
		cmp    $0x000002,%edx
		jl     _04afea_jump
		je     _04b095_jump
		cmp    $0x00000a,%eax
		jne    _04b095_jump

	_04afea_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %eax,0x000024(%esi)
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		shl    $0x000002,%eax
		testb  $0x000001,_092238_data(%eax)
		jne    _04b00f_jump
		testb  $0x000040,_09223b_data(%eax)
		je     _04b03d_jump

	_04b00f_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _04b02b_jump
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		testb  $0x000001,_092239_data(,%eax,4)
		je     _04b02b_jump
		mov    $0x000001,%al
		jmp    _04b02d_jump

	_04b02b_jump:
		xor    %al,%al

	_04b02d_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _04ab9c_func
		jmp    _04b1bf_jump

	_04b03d_jump:
		mov    $0x000001,%cl
		mov    0x000034(%esi),%ax

	_04b043_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%ebx
		add    %eax,%ebx
		mov    0x000024(%ebx),%eax
		test   %eax,%eax
		jne    _04b06a_jump
		mov    0x000060(%esi),%ax
		test   %cl,_092239_data(,%eax,4)
		je     _04b06a_jump
		mov    %cl,%al
		jmp    _04b06c_jump

	_04b06a_jump:
		xor    %al,%al

	_04b06c_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,%eax
		call   _04abbc_func
		mov    0x000032(%ebx),%eax
		mov    _0c1b30_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%esi),%ax
		jne    _04b043_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04b095_jump:
		mov    0x00005c(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04b1bf_jump
		decw   0x00005e(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04b0af_jump:
		mov    0x000030(%esi),%ax
		cwtl   
		cmp    $0x000001,%eax
		je     _04b1bf_jump
		xor    %edx,%edx
		mov    _0db26c_data,%dx
		movw   $0x000000,0x00005e(%esi)
		testb  $0x000020,_09223a_data(,%edx,4)
		je     _04b0e5_jump
		mov    %esi,%eax
		call   _04af44_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04b0e5_jump:
		cmp    $0x000002,%eax
		jne    _04b0f9_jump
		movl   $0x000001,0x000030(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04b0f9_jump:
		test   %eax,%eax
		je     _04b106_jump
		cmp    $0x000004,%eax
		jne    _04b1bf_jump

	_04b106_jump:
		xor    %edx,%edx
		mov    _0db26c_data,%dx
		testb  $0x000001,_092238_data(,%edx,4)
		je     _04b128_jump
		mov    %esi,%eax
		call   _055608_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04b128_jump:
		movl   $0x000004,0x000030(%esi)
		mov    0x000034(%esi),%ax
		movl   $0x000001,0x000024(%esi)
		xor    %bl,%bl
		cmp    $0x00000a,%edx
		je     _04b173_jump

	_04b141_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		add    %edx,%eax
		cmpl   $0x000004,0x000030(%eax)
		je     _04b15a_jump
		mov    $0x000001,%bl
		jmp    _04b173_jump

	_04b15a_jump:
		mov    0x000032(%eax),%eax
		mov    _0c1b30_data,%edx
		sar    $0x000010,%eax
		mov    0x000034(%esi),%cx
		mov    (%edx,%eax,2),%ax
		cmp    %cx,%ax
		jne    _04b141_jump

	_04b173_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		cmp    $0xffffffe2,%eax
		jge    _04b189_jump
		movl   $0x000000,0x000024(%esi)

	_04b189_jump:
		test   %bl,%bl
		jne    _04b1bf_jump
		mov    0x000034(%esi),%ax

	_04b191_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		call   _055608_func
		mov    0x000032(%ebx),%edx
		mov    _0c1b30_data,%eax
		sar    $0x000010,%edx
		mov    0x000034(%esi),%di
		mov    (%eax,%edx,2),%ax
		cmp    %di,%ax
		jne    _04b191_jump

	_04b1bf_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_04b1c8_switch:
		.long   _04b2a1_case
		.long   _04b2b3_case
		.long   _04b2c5_case
		.long   _04b2e0_case
		.long   _04b305_case
		.long   _04b28c_case
		.long   _04b269_case
		.long   _04b269_case
		.long   _04b269_case
		.long   _04b31c_case
		.long   _04b33d_case




_04b1f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%cl
		mov    0x00000c(%edx),%esi
		shl    $0x000002,%ecx
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    (%esi),%esi
		mov    0x00006c(%edx),%cl
		mov    0x000005(%esi,%ecx,8),%cl
		shr    $0x000004,%cl
		mov    %cl,(%esp)
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    (%esp),%cl
		xor    %eax,%eax
		test   %ecx,%ecx
		je     _04b282_jump
		xor    %ecx,%ecx
		mov    0x000060(%edx),%cx
		cmp    $0x000057,%ecx
		je     _04b240_jump
		cmp    $0x000058,%ecx
		jne    _04b361_jump

	_04b240_jump:
		xor    %ecx,%ecx
		mov    0x00007d(%edx),%cl
		test   %ecx,%ecx
		jle    _04b253_jump
		dec    %cl
		mov    %cl,0x00007d(%edx)
		jmp    _04b269_case

	_04b253_jump:
		xor    %ecx,%ecx
		mov    0x000071(%edx),%cl
		test   %ecx,%ecx
		jne    _04b269_case
		mov    $0x000001,%ebx
		add    %bx,0x000042(%edx)

	_04b269_case:
		xor    %ecx,%ecx
		mov    0x000060(%edx),%cx
		testb  $0x000020,_092239_data(,%ecx,4)
		je     _04b27e_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax

	_04b27e_jump:
		add    %ax,0x000042(%edx)

	_04b282_jump:
		mov    %ebx,%eax
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04b28c_case:
		xor    %ecx,%ecx
		mov    _0c24ca_data,%cl
		test   %ecx,%ecx
		jne    _04b269_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _04b269_case

	_04b2a1_case:
		xor    %ecx,%ecx
		mov    0x000071(%edx),%cl
		test   %ecx,%ecx
		jne    _04b269_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _04b269_case

	_04b2b3_case:
		xor    %ecx,%ecx
		mov    0x000072(%edx),%cl
		test   %ecx,%ecx
		jne    _04b269_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _04b269_case

	_04b2c5_case:
		mov    0x000040(%edx),%ecx
		sar    $0x000010,%ecx
		cmp    $0x000001,%ecx
		jge    _04b2d7_jump
		mov    $0x000001,%eax
		jmp    _04b269_case

	_04b2d7_jump:
		jle    _04b269_case
		mov    $0xffffffff,%eax
		jmp    _04b269_case

	_04b2e0_case:
		mov    0x000040(%edx),%ecx
		sar    $0x000010,%ecx
		cmp    $0xfffffffe,%ecx
		jle    _04b2f5_jump
		mov    $0xffffffff,%eax
		jmp    _04b269_case

	_04b2f5_jump:
		jge    _04b269_case
		mov    $0x000001,%eax
		jmp    _04b269_case

	_04b305_case:
		xor    %ecx,%ecx
		mov    0x000071(%edx),%cl
		test   %ecx,%ecx
		jne    _04b269_case
		mov    $0xffffffff,%eax
		jmp    _04b269_case

	_04b31c_case:
		mov    0x000071(%edx),%cl
		inc    %cl
		mov    %cl,0x000071(%edx)
		cmp    0x000072(%edx),%cl
		jb     _04b269_case
		mov    $0x000001,%eax
		movb   $0x000000,0x000071(%edx)
		mov    %eax,%ebx
		jmp    _04b269_case

	_04b33d_case:
		mov    0x000071(%edx),%cl
		inc    %cl
		mov    %cl,0x000071(%edx)
		cmp    0x000072(%edx),%cl
		jb     _04b269_case
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		movb   $0x000000,0x000071(%edx)
		jmp    _04b269_case

	_04b361_jump:
		mov    (%esp),%cl
		dec    %cl
		cmp    $0x00000a,%cl
		ja     _04b269_case
		and    $0x0000ff,%ecx
		jmp    *%cs:_04b1c8_switch(,%ecx,4)



_04b380_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%ecx),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		dec    %eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%ebx,%eax,8)
		je     _04b3dd_jump
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _04b3d2_jump
		mov    %ebx,%eax

	_04b3d2_jump:
		mov    (%esp),%ah
		sub    %al,%ah
		mov    %ah,%al
		inc    %al
		jmp    _04b3ee_jump

	_04b3dd_jump:
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _04b3ee_jump
		mov    %ebx,%eax

	_04b3ee_jump:
		mov    %al,0x00006b(%ecx)
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_04b3f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		mov    0x00000c(%esi),%edx
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000004(%esi),%ebp
		mov    0x00006d(%esi),%al
		xor    %ecx,%ecx
		shl    $0x000002,%eax
		mov    0x00006a(%esi),%cl
		add    %eax,%edx
		xor    %eax,%eax
		lea    0x000000(,%ecx,4),%edi
		mov    0x00006c(%esi),%al
		mov    (%edx),%ebx
		shl    $0x000003,%eax
		sub    %ecx,%edi
		add    %eax,%ebx
		shl    $0x000002,%edi
		mov    0x000005(%ebx),%al
		add    %edi,%ebp
		and    $0x00000f,%al
		je     _04b480_jump
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		je     _04b470_jump
		jmp    _04b480_jump

	_04b468_jump:
		incb   0x00006b(%esi)
		jmp    _04b480_jump

	_04b470_jump:
		mov    0x000007(%ebx),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		test   %al,%al
		je     _04b468_jump
		decb   0x00006b(%esi)

	_04b480_jump:
		mov    0x000002(%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%edi
		mov    %al,0x00006a(%esi)
		sub    %edx,%edi
		mov    0x000004(%esi),%eax
		shl    $0x000002,%edi
		add    %eax,%edi
		mov    0x000073(%esi),%al
		cmp    $0x000001,%al
		jb     _04b4b0_jump
		jbe    _04b599_jump
		cmp    $0x000002,%al
		je     _04b5f9_jump

	_04b4b0_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00006b(%esi),%al
		mov    0x00000a(%edi),%dx
		cmp    %edx,%eax
		jge    _04b4ca_jump
		cmp    $0x0000ff,%eax
		jne    _04b681_jump

	_04b4ca_jump:
		mov    0x000004(%ebx),%al
		mov    %al,0x00006c(%esi)
		mov    0x000003(%ebx),%al
		mov    %al,0x00006d(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    (%edx),%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x000002(%ebx),%al
		mov    %al,%cl
		lea    0x000000(,%ecx,4),%edi
		mov    %al,0x00006a(%esi)
		sub    %ecx,%edi
		mov    0x000004(%esi),%eax
		shl    $0x000002,%edi
		add    %eax,%edi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000017,%eax
		jne    _04b543_jump
		mov    _0c1b20_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jne    _04b543_jump
		mov    _0c1b1e_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0x000002,%ecx
		je     _04b539_jump
		cmp    $0x000006,%ecx
		jne    _04b543_jump

	_04b539_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000008,%eax
		jne    _04b564_jump

	_04b543_jump:
		mov    _0c1b20_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00003d,%eax
		jne    _04b583_jump
		mov    _0c1b1e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _04b583_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00003d,%eax
		je     _04b583_jump

	_04b564_jump:
		mov    _0c1ba0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00003c,%eax
		jle    _04b583_jump
		testb  $0x000001,_0c3316_data
		jne    _04b583_jump
		movw   $0x00003c,_0c1ba2_data

	_04b583_jump:
		testb  $0x000010,0x000007(%ebx)
		je     _04b64e_jump
		xor    %eax,%eax
		mov    0x00000a(%edi),%ax
		dec    %eax
		jmp    _04b650_jump

	_04b599_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		je     _04b5b8_jump
		testb  $0x000010,0x000007(%ebx)
		jne    _04b5b0_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _04b5b8_jump

	_04b5b0_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006b(%esi)

	_04b5b8_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _04b4b0_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%ecx),%eax
		mov    (%esp),%ecx
		mov    0x000032(%esi),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		mov    0x000006(%eax),%al
		and    $0x0000ff,%eax
		call   _068654_func
		jmp    _04b4b0_jump

	_04b5f9_jump:
		testb  $0x000010,0x000007(%ebx)
		jne    _04b605_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _04b60d_jump

	_04b605_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006b(%esi)

	_04b60d_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _04b4b0_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%ecx),%eax
		mov    (%esp),%ecx
		mov    0x000032(%esi),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		mov    0x000006(%eax),%al
		and    $0x0000ff,%eax
		call   _068654_func
		jmp    _04b4b0_jump

	_04b64e_jump:
		xor    %eax,%eax

	_04b650_jump:
		mov    %al,0x00006b(%esi)
		cmpl   $0x000000,0x000024(%esi)
		je     _04b681_jump
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%bl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		mov    0x000032(%esi),%edx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%al
		sar    $0x000010,%edx
		mov    0x000006(%ebx,%eax,8),%al
		and    $0x0000ff,%eax
		call   _068654_func

	_04b681_jump:
		mov    0x000081(%esi),%ah
		movb   $0x000000,0x000073(%esi)
		test   $0x000020,%ah
		je     _04b6a2_jump
		mov    0x000002(%esp),%ecx
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		sar    $0x000010,%ecx
		call   _01d9e0_func

	_04b6a2_jump:
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00006b(%esi),%al
		lea    0x000081(%esi),%ebx
		cmp    %eax,%edx
		jne    _04b6c8_jump
		mov    0x000006(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00006a(%esi),%al
		cmp    %eax,%edx
		je     _04b6cf_jump

	_04b6c8_jump:
		mov    $0x000001,%eax
		jmp    _04b6d1_jump

	_04b6cf_jump:
		xor    %eax,%eax

	_04b6d1_jump:
		mov    (%ebx),%dl
		and    $0x000001,%al
		and    $0x00007f,%dl
		shl    $0x000007,%al
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,(%ebx)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b6ec_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		mov    0x00002c(%eax),%ax
		add    %edx,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		pop    %edx
		ret    

_04b700_switch:
		.long   _04b7c7_case
		.long   _04b7c7_case
		.long   _04b7de_case
		.long   _04b7fc_case
		.long   _04b814_case
		.long   _04b814_case
		.long   _04b833_case
		.long   _04b833_case
		.long   _04b7c7_case
		.long   _04b869_case
		.long   _04b7c7_case
		.long   _04b7c7_case
		.long   _04b7c7_case
		.long   _04b7c7_case
		.long   _04b855_case
		.long   _04b855_case
		.long   _04b7c7_case
		.long   _04b7c7_case
		.long   _04b7de_case
		.long   _04b7fc_case
		.long   _04b814_case
		.long   _04b814_case
		.long   _04b833_case
		.long   _04b833_case
		.long   _04b7c7_case
		.long   _04b7c7_case
		.long   _04b7c7_case
		.long   _04b7c7_case
		.long   _04b7c7_case
		.long   _04b7c7_case
		.long   _04b855_case




_04b77c_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %bl,%al
		mov    0x000040(%ecx),%ebx
		sar    $0x000010,%ebx
		cmp    $0x000001,%ebx
		jg     _04b7b8_jump
		xor    %ebx,%ebx
		movzbl %dl,%esi
		mov    %al,%bl
		mov    %esi,%edx
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _01d6f8_func
		cmp    $0x000002,%esi
		je     _04b7da_jump
		mov    %ecx,%eax
		call   _024bd4_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04b7b8_jump:
		movzbl _0c24ca_data,%esi
		test   %esi,%esi
		je     _04b879_jump

	_04b7c7_case:
		mov    0x000040(%ecx),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jge    _04b7da_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6e8_func

	_04b7da_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04b7de_case:
		mov    $0x000001,%esi
		mov    0x000040(%ecx),%ebx
		mov    0x000040(%ecx),%di
		sar    $0x000011,%ebx
		sub    $0x000002,%edi
		sub    %ebx,%esi
		mov    %di,0x000040(%ecx)
		mov    %si,0x000042(%ecx)
		jmp    _04b7c7_case

	_04b7fc_case:
		mov    0x000040(%ecx),%ebx
		mov    $0x000001,%esi
		sar    $0x000011,%ebx
		sub    %ebx,%esi
		mov    %si,0x000042(%ecx)
		addw   $0x000002,0x000040(%ecx)
		jmp    _04b7c7_case

	_04b814_case:
		mov    0x000040(%ecx),%ebx
		sar    $0x000010,%ebx
		inc    %ebx
		mov    $0x000001,%esi
		sar    %ebx
		sub    %ebx,%esi
		mov    0x000040(%ecx),%bx
		mov    %si,0x000042(%ecx)
		dec    %ebx
		mov    %bx,0x000040(%ecx)
		jmp    _04b7c7_case

	_04b833_case:
		mov    0x000040(%ecx),%ebx
		mov    $0x000001,%esi
		sar    $0x000010,%ebx
		mov    0x000040(%ecx),%dx
		inc    %ebx
		inc    %edx
		sar    %ebx
		mov    %dx,0x000040(%ecx)
		sub    %ebx,%esi
		mov    %si,0x000042(%ecx)
		jmp    _04b7c7_case

	_04b855_case:
		mov    0x000040(%ecx),%ebx
		sar    $0x000010,%ebx
		inc    %ebx
		sar    %ebx
		neg    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _04b7c7_case

	_04b869_case:
		add    $0x000003,%ebx
		sar    %ebx
		neg    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _04b7c7_case

	_04b879_jump:
		mov    0x000062(%ecx),%dl
		cmp    $0x00001e,%dl
		ja     _04b7c7_case
		movzbl %dl,%esi
		jmp    *%cs:_04b700_switch(,%esi,4)



_04b890_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000062(%eax),%dl
		testb  $0x000001,_0921f8_data(%edx)
		je     _04b8b4_jump
		mov    0x000065(%eax),%al
		and    $0x0000ff,%eax
		testb  $0x000040,_0921f8_data(%eax)
		je     _04b8b4_jump
		mov    $0x000001,%al
		pop    %edx
		ret    

	_04b8b4_jump:
		xor    %al,%al
		pop    %edx
		ret    



_04b8b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x00002f,%eax
		jne    _04b8d4_jump
		mov    $0x000020,%ecx
		mov    $0xfffffffc,%ebx
		jmp    _04b8e3_jump

	_04b8d4_jump:
		cmp    $0x000045,%eax
		jne    _04b8e3_jump
		mov    $0x000030,%ecx
		mov    $0xfffffffa,%ebx

	_04b8e3_jump:
		mov    %edx,%eax
		call   _04b890_func
		test   %al,%al
		je     _04b8f4_jump
		mov    0x000065(%edx),%al
		mov    %al,0x000062(%edx)

	_04b8f4_jump:
		mov    0x000062(%edx),%al
		cmp    $0x00000e,%al
		jb     _04b96b_jump
		jbe    _04b951_jump
		cmp    $0x000013,%al
		jb     _04b957_jump
		jbe    _04b927_jump
		cmp    $0x000016,%al
		jb     _04b918_jump
		cmp    $0x000017,%al
		jbe    _04b92d_jump
		cmp    $0x00001e,%al
		je     _04b951_jump
		jmp    _04b9a7_jump

	_04b918_jump:
		neg    %ecx
		mov    %bx,0x000042(%edx)
		mov    %cx,0x000040(%edx)
		jmp    _04b9a7_jump

	_04b927_jump:
		add    $0x000002,%ebx
		add    $0x000010,%ecx

	_04b92d_jump:
		mov    %bx,0x000042(%edx)
		mov    %cx,0x000040(%edx)
		jmp    _04b9a7_jump

	_04b93a_jump:
		mov    $0xfffffff0,%eax
		add    $0x000002,%ebx
		sub    %ecx,%eax
		mov    %bx,0x000042(%edx)
		mov    %ax,0x000040(%edx)
		jmp    _04b9a7_jump

	_04b94e_jump:
		sub    $0x000003,%ebx

	_04b951_jump:
		mov    %bx,0x000042(%edx)
		jmp    _04b9a7_jump

	_04b957_jump:
		cmp    $0x00000f,%al
		jbe    _04b951_jump
		cmp    $0x000012,%al
		je     _04b93a_jump
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04b96b_jump:
		cmp    $0x000004,%al
		jb     _04b987_jump
		cmp    $0x000005,%al
		jbe    _04b918_jump
		cmp    $0x000007,%al
		jbe    _04b92d_jump
		cmp    $0x000009,%al
		je     _04b94e_jump
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04b987_jump:
		cmp    $0x000002,%al
		jb     _04b9a7_jump
		jbe    _04b93a_jump
		add    $0x000002,%ebx
		add    $0x000010,%ecx
		mov    %bx,0x000042(%edx)
		mov    %cx,0x000040(%edx)
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04b9a7_jump:
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04b9b4_switch:
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bad5_case
		.long   _04baf0_case
		.long   _04bb0b_case
		.long   _04bb0b_case
		.long   _04bb26_case
		.long   _04bb26_case
		.long   _04bb51_case
		.long   _04bb41_case
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bad5_case
		.long   _04baf0_case
		.long   _04bb0b_case
		.long   _04bb0b_case
		.long   _04bb26_case
		.long   _04bb26_case
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bb51_case
		.long   _04bb51_case




_04ba30_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    $0x000005,%esi
		mov    0x00006d(%ecx),%al
		mov    $0x000003,%edi
		cmp    $0x000002,%eax
		jne    _04ba67_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _04ba67_jump
		mov    $0xffffffff,%edx
		mov    %ecx,%eax
		call   _072960_func
		jmp    _04bc37_jump

	_04ba67_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _04ba96_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _04ba96_jump
		mov    %ecx,%eax
		mov    0x000060(%ecx),%dx
		movw   $0x00002f,0x000060(%ecx)
		call   _04b8b8_func
		mov    %dx,0x000060(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04ba96_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _04bc05_jump
		mov    %ecx,%eax
		call   _04b890_func
		mov    %al,(%esp)
		and    $0x0000ff,%eax
		je     _04babd_jump
		mov    0x000065(%ecx),%al
		jmp    _04bac0_jump

	_04babd_jump:
		mov    0x000062(%ecx),%al

	_04bac0_jump:
		cmp    $0x00001e,%al
		ja     _04bb51_case
		and    $0x0000ff,%eax
		jmp    *%cs:_04b9b4_switch(,%eax,4)

	_04bad5_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _04bae5_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%ecx)

	_04bae5_jump:
		imul   0x000042(%ecx),%si
		sub    %si,0x000040(%ecx)
		jmp    _04bb51_case

	_04baf0_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _04bb00_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%ecx)

	_04bb00_jump:
		imul   0x000042(%ecx),%si
		add    %si,0x000040(%ecx)
		jmp    _04bb51_case

	_04bb0b_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _04bb1b_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_04bb1b_jump:
		imul   0x000042(%ecx),%di
		sub    %di,0x000040(%ecx)
		jmp    _04bb51_case

	_04bb26_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _04bb36_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_04bb36_jump:
		imul   0x000042(%ecx),%di
		add    %di,0x000040(%ecx)
		jmp    _04bb51_case

	_04bb41_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _04bb51_case
		mov    $0x000001,%edi
		mov    %di,0x000042(%ecx)

	_04bb51_case:
		movswl %bx,%eax
		test   %eax,%eax
		jle    _04bb83_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jle    _04bb7b_jump
		mov    0x000042(%ecx),%si
		sub    %esi,%ebx
		mov    %bx,0x000042(%ecx)
		test   %dx,%dx
		je     _04bb89_jump
		mov    %ebx,%edi
		inc    %edi
		mov    %di,0x000042(%ecx)
		jmp    _04bb89_jump

	_04bb7b_jump:
		movw   $0x000000,0x000042(%ecx)
		jmp    _04bb89_jump

	_04bb83_jump:
		movw   $0x00fffd,0x000042(%ecx)

	_04bb89_jump:
		cmpb   $0x000000,(%esp)
		je     _04bbcc_jump

	_04bb8f_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func
		cmp    0x000062(%ecx),%al
		jne    _04bbbc_jump
		decl   0x00002c(%ecx)
		jmp    _04bb8f_jump

	_04bbbc_jump:
		mov    %ecx,%eax
		call   _024bd4_func
		mov    %ecx,%eax
		call   _01e6e4_func
		jmp    _04bc05_jump

	_04bbcc_jump:
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000001,_0921f8_data(%eax)
		je     _04bbfe_jump
		mov    %ecx,%eax
		call   _04b6ec_func
		cwtl   
		cmp    $0x000004,%eax
		jl     _04bbfe_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jg     _04bbfe_jump
		test   %eax,%eax
		jne    _04bc05_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _04bc05_jump

	_04bbfe_jump:
		mov    %ecx,%eax
		call   _024bd4_func

	_04bc05_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movb   $0x000000,0x000071(%ecx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		and    $0x0000ff,%eax
		cmp    $0x00000b,%eax
		je     _04bc37_jump
		cmp    $0x00000a,%eax
		je     _04bc37_jump
		movb   $0x000000,0x000072(%ecx)

	_04bc37_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_04bc40_switch:
		.long   _04be45_case
		.long   _04be45_case
		.long   _04bd7d_case
		.long   _04bd9f_case
		.long   _04bdc1_case
		.long   _04bdc1_case
		.long   _04bdfb_case
		.long   _04bdfb_case
		.long   _04be45_case
		.long   _04be35_case
		.long   _04be45_case
		.long   _04be45_case
		.long   _04be45_case
		.long   _04be45_case
		.long   _04be45_case
		.long   _04be45_case
		.long   _04be45_case
		.long   _04be45_case
		.long   _04bd7d_case
		.long   _04bd9f_case
		.long   _04bdc1_case
		.long   _04bdc1_case
		.long   _04bdfb_case
		.long   _04bdfb_case
		.long   _04be45_case
		.long   _04be45_case
		.long   _04be45_case
		.long   _04be45_case
		.long   _04be45_case
		.long   _04be45_case
		.long   _04be45_case




_04bcbc_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,0x000004(%esp)
		mov    %ebx,%edi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000026,%eax
		jne    _04bce5_jump
		mov    $0x000001,%eax
		mov    $0x000002,%ecx
		mov    %eax,%ebx
		mov    %eax,%edx
		jmp    _04bcf9_jump

	_04bce5_jump:
		mov    $0x000005,%eax
		mov    $0x000004,%ebx
		mov    $0x000003,%edx
		mov    $0x000001,%ecx

	_04bcf9_jump:
		mov    %eax,0x000008(%esp)
		mov    %cx,(%esp)
		mov    0x000040(%esi),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jl     _04bf61_jump
		mov    0x00003e(%esi),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jle    _04bd1f_jump
		sub    %ax,0x000040(%esi)
		jmp    _04bd25_jump

	_04bd1f_jump:
		jge    _04bd25_jump
		add    %ax,0x000040(%esi)

	_04bd25_jump:
		movswl %bx,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jl     _04bd41_jump
		cmp    %ecx,%eax
		jg     _04bd41_jump
		mov    $0x000001,%eax
		jmp    _04bd43_jump

	_04bd41_jump:
		xor    %eax,%eax

	_04bd43_jump:
		test   %eax,%eax
		je     _04bd4d_jump
		movw   $0x000000,0x000040(%esi)

	_04bd4d_jump:
		mov    %esi,%eax
		call   _04b890_func
		mov    %al,%bl
		and    $0x0000ff,%eax
		je     _04bd65_jump
		mov    0x000065(%esi),%al
		jmp    _04bd68_jump

	_04bd65_jump:
		mov    0x000062(%esi),%al

	_04bd68_jump:
		cmp    $0x00001e,%al
		ja     _04be45_case
		and    $0x0000ff,%eax
		jmp    *%cs:_04bc40_switch(,%eax,4)

	_04bd7d_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _04bd8d_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%esi)

	_04bd8d_jump:
		mov    0x000008(%esp),%eax
		imul   0x000042(%esi),%ax
		sub    %ax,0x000040(%esi)
		jmp    _04be45_case

	_04bd9f_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _04bdaf_jump
		mov    $0x000001,%ecx
		mov    %cx,0x000042(%esi)

	_04bdaf_jump:
		mov    0x000008(%esp),%eax
		imul   0x000042(%esi),%ax
		add    %ax,0x000040(%esi)
		jmp    _04be45_case

	_04bdc1_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _04bdd1_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_04bdd1_jump:
		mov    0x000040(%esi),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _04be45_case

	_04bdfb_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _04be0b_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_04be0b_jump:
		mov    0x000040(%esi),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _04be45_case

	_04be35_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _04be45_case
		mov    $0x000001,%edx
		mov    %dx,0x000042(%esi)

	_04be45_case:
		movswl %di,%eax
		test   %eax,%eax
		jle    _04be87_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jle    _04be78_jump
		sub    0x000042(%esi),%di
		mov    0x000004(%esp),%edx
		mov    %di,0x000042(%esi)
		test   %dx,%dx
		je     _04beee_jump
		mov    %edi,%ecx
		inc    %ecx
		mov    %cx,0x000042(%esi)
		jmp    _04beee_jump

	_04be78_jump:
		movw   $0x000000,0x000042(%esi)
		movb   $0x000002,0x000076(%esi)
		jmp    _04beee_jump

	_04be87_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000008,%eax
		je     _04beac_jump
		cmp    $0x000086,%eax
		je     _04beac_jump
		cmp    $0x0000a7,%eax
		je     _04beac_jump
		cmp    $0x0000b1,%eax
		je     _04beac_jump
		cmp    $0x000006,%eax
		jne    _04bee8_jump

	_04beac_jump:
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _04bed1_jump
		testb  $0x000002,_0c3315_data
		je     _04bec9_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _04bed7_jump

	_04bec9_jump:
		movw   $0x00fffd,0x000042(%esi)
		jmp    _04bed7_jump

	_04bed1_jump:
		movw   $0x00fffb,0x000042(%esi)

	_04bed7_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000006,%eax
		jne    _04beee_jump
		incw   0x000042(%esi)
		jmp    _04beee_jump

	_04bee8_jump:
		movw   $0x00fffd,0x000042(%esi)

	_04beee_jump:
		test   %bl,%bl
		je     _04bf28_jump

	_04bef2_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func
		cmp    0x000062(%esi),%al
		jne    _04bf1f_jump
		decl   0x00002c(%esi)
		jmp    _04bef2_jump

	_04bf1f_jump:
		mov    %esi,%eax
		call   _01e6e4_func
		jmp    _04bf5a_jump

	_04bf28_jump:
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000001,_0921f8_data(%eax)
		je     _04bf5a_jump
		mov    %esi,%eax
		call   _04b6ec_func
		cwtl   
		cmp    $0x000004,%eax
		jl     _04bf5a_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jg     _04bf5a_jump
		test   %eax,%eax
		jne    _04bf61_jump
		movw   $0x000001,0x000042(%esi)
		jmp    _04bf61_jump

	_04bf5a_jump:
		mov    %esi,%eax
		call   _024bd4_func

	_04bf61_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movb   $0x000000,0x000071(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		and    $0x0000ff,%eax
		cmp    $0x00000b,%eax
		je     _04bf93_jump
		cmp    $0x00000a,%eax
		je     _04bf93_jump
		movb   $0x000000,0x000072(%esi)

	_04bf93_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04bf9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000042(%ecx)
		movw   $0x000000,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04bfc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _024bd4_func
		mov    0x000076(%ecx),%dl
		cmp    0x000077(%ecx),%dl
		je     _04c00b_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%bl
		testb  $0x000040,0x000007(%edx,%ebx,8)
		je     _04bff4_jump
		mov    $0x000002,%edx
		jmp    _04bff9_jump

	_04bff4_jump:
		mov    $0x00000b,%edx

	_04bff9_jump:
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %dl,%bl
		mov    $0x000001,%edx
		call   _01d6f8_func
		jmp    _04c020_jump

	_04c00b_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		orb    $0x000010,0x000081(%ecx)

	_04c020_jump:
		mov    %ecx,%eax
		call   _01dea4_func
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		test   $0x000008,%ah
		setne  %dl
		and    $0x0000ff,%edx
		add    $0x000002,%edx
		and    $0x0000ff,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c054_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000040(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04c08e_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    $0x000002,%edx
		call   _024bd4_func
		mov    %ecx,%eax
		call   _056614_func
		mov    0x000048(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x0001f4,%eax
		jle    _04c08e_jump
		movw   $0x000000,0x00004a(%ecx)

	_04c08e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c094_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,_0c2594_data
		je     _04c0bb_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _04c0bb_jump
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   _04b77c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04c0bb_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _04c0df_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _056614_func
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _024bd4_func

	_04c0df_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c0e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		jne    _04c10b_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _056614_func
		mov    %ecx,%eax
		call   _024bd4_func

	_04c10b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c110_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		lea    -0x000002(%eax),%edx
		lea    0x000002(%eax),%edi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%ebx
		mov    0x000069(%ecx),%al
		mov    _0c24e2_data,%esi
		add    %ebx,%eax
		sar    $0x000010,%esi
		sar    $0x000004,%eax
		imul   %eax,%esi
		sar    $0x000004,%edx
		add    %esi,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c24ec_data,%ebx
		sub    %edx,%eax
		sar    $0x000004,%edi
		mov    0x000002(%ebx,%eax,2),%al
		xor    %ah,%ah
		lea    (%edi,%esi,1),%edx
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    0x000002(%ebx,%eax,2),%dl
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _04c26b_jump
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000002,_0921f8_data(%eax)
		jne    _04c26b_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _04c1b9_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		je     _04c1e3_jump

	_04c1b9_jump:
		movswl %dx,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _04c26b_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _04c26b_jump

	_04c1e3_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04c21c_jump
		testb  $0x000008,0x000081(%ecx)
		je     _04c209_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _056614_func
		jmp    _04c26b_jump

	_04c209_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _056614_func
		jmp    _04c26b_jump

	_04c21c_jump:
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%esi
		mov    $0x000004,%edx
		add    %eax,%esi
		mov    %ecx,%eax
		mov    %esi,0x000028(%ecx)
		call   _056614_func
		mov    0x000081(%ecx),%dh
		lea    0x000081(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_04c26b_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c274_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		call   _01d6f8_func
		testb  $0x000008,0x000081(%ecx)
		je     _04c29c_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		jmp    _04c2a5_jump

	_04c29c_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_04c2a5_jump:
		call   _056614_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c2b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006e(%eax),%bl
		mov    0x00006f(%eax),%dl
		call   _01d6f8_func
		mov    %ecx,%eax
		call   _024bd4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04c2d0_switch:
		.long   _04c5da_case
		.long   _04c620_case
		.long   _04c51c_case
		.long   _04c5da_case
		.long   _04c51c_case
		.long   _04c51c_case
		.long   _04c5cf_case




_04c2ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		and    $0x0000ff,%eax
		cmp    $0x00000b,%eax
		je     _04c346_jump
		cmp    $0x00000a,%eax
		je     _04c346_jump
		incb   0x000071(%esi)
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		cmp    $0x000003,%eax
		jl     _04c331_jump
		movb   $0x000000,0x000071(%esi)

	_04c331_jump:
		mov    0x000072(%esi),%dl
		xor    %eax,%eax
		inc    %dl
		mov    %dl,%al
		mov    %dl,0x000072(%esi)
		cmp    $0x000004,%eax
		jl     _04c346_jump
		movb   $0x000000,0x000072(%esi)

	_04c346_jump:
		mov    %esi,%eax
		call   _04b1f4_func
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000003,%eax
		jne    _04c3ba_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _04c379_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _04c379_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d6e8_func

	_04c379_jump:
		cmpb   $0x000000,_0c2594_data
		jne    _04c439_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jl     _04c439_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _04c439_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		movw   $0x000000,0x000040(%esi)
		jmp    _04c439_jump

	_04c3ba_jump:
		cmp    $0x000028,%eax
		je     _04c3c4_jump
		cmp    $0x00007a,%eax
		jne    _04c41f_jump

	_04c3c4_jump:
		mov    %esi,%eax
		call   _04c110_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _04c439_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04c3fb_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _04c439_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		jmp    _04c439_jump

	_04c3fb_jump:
		jge    _04c439_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _023f98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _04c439_jump
		movw   $0x000000,0x000042(%esi)
		jmp    _04c439_jump

	_04c41f_jump:
		cmp    $0x00005b,%eax
		jne    _04c439_jump
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _04c439_jump
		mov    %esi,%eax
		call   _06ae60_func

	_04c439_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000004,_09223b_data(,%eax,4)
		je     _04c4f6_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04c4f6_jump
		testb  $0x000020,0x000081(%esi)
		je     _04c4a1_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000008(%esp),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _04c4c0_jump

	_04c4a1_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		mov    0x00002c(%esi),%dx
		add    %eax,%edx
		mov    %dx,0x000008(%esp)

	_04c4c0_jump:
		mov    0x000040(%esi),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000014,%eax
		cwtl   
		call   _01e4d8_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		je     _04c4f6_jump
		movw   $0x000000,0x000042(%esi)

	_04c4f6_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000001,_09223a_data(,%eax,4)
		je     _04c51c_case
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000002,_0921f8_data(%eax)
		jne    _04ca2e_jump

	_04c51c_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000020,_092239_data(,%eax,4)
		je     _04cf17_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000060,%eax
		jle    _04c541_jump
		movw   $0x000060,0x000042(%esi)

	_04c541_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff80,%eax
		jge    _04cf39_jump
		movw   $0x00ff80,0x000042(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04c55f_jump:
		mov    %esi,%eax
		call   _073e08_func
		jmp    _04c51c_case

	_04c568_jump:
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01dea4_func
		mov    %esi,%eax
		mov    $0x000003,%edx
		call   _024bd4_func
		mov    %esi,%eax
		call   _056614_func
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _04c5c1_jump
		mov    %esi,%eax
		call   _04a984_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    $0x000001,%bl
		mov    $0xfffffff8,%ecx
		mov    %bl,_0c2503_data
		call   _062d1c_func
		mov    %cx,_0c1b8e_data

	_04c5c1_jump:
		movw   $0x000001,_0c25f4_data
		jmp    _04c51c_case

	_04c5cf_case:
		mov    %esi,%eax
		movb   $0x000002,0x00007d(%esi)
		call   _01dea4_func

	_04c5da_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		testb  $0x000008,0x000081(%esi)
		je     _04c5fd_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _04c607_jump

	_04c5fd_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_04c607_jump:
		mov    %esi,%eax
		call   _056614_func
		mov    %esi,%eax
		call   _024bd4_func
		movw   $0x000000,0x000042(%esi)
		jmp    _04c51c_case

	_04c620_case:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		mov    %esi,%eax
		call   _024bd4_func
		movw   $0x000000,0x000042(%esi)
		jmp    _04c51c_case

	_04c63d_jump:
		mov    0x000075(%esi),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _04c51c_case
		and    $0x0000ff,%eax
		jmp    *%cs:_04c2d0_switch(,%eax,4)

	_04c657_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04c51c_case
		mov    %esi,%eax
		call   _024bd4_func
		negw   0x000042(%esi)
		jmp    _04c51c_case

	_04c675_jump:
		mov    %esi,%eax
		call   _04bf9c_func
		jmp    _04c51c_case

	_04c681_jump:
		mov    %esi,%eax
		call   _04c054_func
		jmp    _04c51c_case

	_04c68d_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _04c51c_case
		mov    $0x000001,%ebx
		mov    $0x000010,%edx
		mov    %esi,%eax
		call   _056614_func
		movb   $0x000000,0x00007d(%esi)
		jmp    _04c51c_case

	_04c6b5_jump:
		mov    0x000032(%esi),%edx
		mov    $0x0000bb,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    %esi,%eax
		call   _0707b0_func
		jmp    _04c51c_case

	_04c6d1_jump:
		mov    %esi,%eax
		call   _04bfc0_func
		jmp    _04c51c_case

	_04c6dd_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _04c6f7_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _068654_func

	_04c6f7_jump:
		mov    %esi,%eax
		call   _04b8b8_func
		jmp    _04c51c_case

	_04c703_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _04c71d_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _068654_func

	_04c71d_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _04ba30_func
		jmp    _04c51c_case

	_04c731_jump:
		mov    %esi,%eax
		call   _04c0e4_func
		jmp    _04c51c_case

	_04c73d_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _04bcbc_func
		jmp    _04c51c_case

	_04c751_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _04c51c_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _068654_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _04bcbc_func
		decw   0x000050(%esi)
		jmp    _04c51c_case

	_04c789_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _04c51c_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _068654_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000007,0x000042(%esi)
		call   _04bcbc_func
		decw   0x000050(%esi)
		jmp    _04c51c_case

	_04c7c1_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		call   _068654_func
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _04bcbc_func
		jmp    _04c51c_case

	_04c7e2_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00008c,%eax
		sar    $0x000010,%edx
		call   _068654_func
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _04bcbc_func
		jmp    _04c51c_case

	_04c803_jump:
		mov    0x000032(%esi),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		call   _068654_func
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _04bcbc_func
		jmp    _04c51c_case

	_04c821_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000082,%dx
		jb     _04c85a_jump
		jbe    _04c803_jump
		cmp    $0x0000a7,%dx
		jb     _04c83e_jump
		jbe    _04c7c1_jump
		cmp    $0x0000b1,%dx
		jmp    _04c881_jump

	_04c83e_jump:
		cmp    $0x000086,%dx
		je     _04c7c1_jump
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _04bcbc_func
		jmp    _04c51c_case

	_04c85a_jump:
		cmp    $0x000008,%dx
		jb     _04c87d_jump
		jbe    _04c7c1_jump
		cmp    $0x000026,%dx
		je     _04c803_jump
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _04bcbc_func
		jmp    _04c51c_case

	_04c87d_jump:
		cmp    $0x000006,%dx

	_04c881_jump:
		je     _04c7e2_jump
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _04bcbc_func
		jmp    _04c51c_case

	_04c898_jump:
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000042(%esi)
		jmp    _04c51c_case

	_04c8b1_jump:
		mov    %esi,%eax
		call   _04c094_func
		jmp    _04c51c_case

	_04c8bd_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _04c8ce_jump
		mov    $0x000007,%ebx
		jmp    _04c8dd_jump

	_04c8ce_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _04c8e6_jump
		mov    $0x00000a,%ebx

	_04c8dd_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_04c8e6_jump:
		mov    %esi,%eax
		call   _024bd4_func
		movw   $0x000000,0x000042(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _04c51c_case

	_04c8fe_jump:
		mov    %esi,%eax
		mov    $0x000005,%ebx
		call   _024bd4_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movw   $0x000000,0x000042(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _04c51c_case

	_04c924_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _04c51c_case

	_04c935_jump:
		mov    %esi,%eax
		call   _0208f0_func
		jmp    _04c51c_case

	_04c941_jump:
		mov    %esi,%eax
		call   _028e30_func
		jmp    _04c51c_case

	_04c94d_jump:
		mov    %esi,%eax
		call   _04c274_func
		jmp    _04c51c_case

	_04c959_jump:
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jge    _04c51c_case
		mov    %esi,%eax
		call   _02179c_func
		jmp    _04c51c_case

	_04c974_jump:
		mov    %esi,%eax
		call   _023000_func
		jmp    _04c51c_case

	_04c980_jump:
		mov    %esi,%eax
		call   _0233c4_func
		jmp    _04c51c_case

	_04c98c_jump:
		mov    %esi,%eax
		call   _06c790_func
		jmp    _04c51c_case

	_04c998_jump:
		mov    %esi,%eax
		call   _06c1f0_func
		jmp    _04c51c_case

	_04c9a4_jump:
		mov    %esi,%eax
		call   _05c170_func
		jmp    _04c51c_case

	_04c9b0_jump:
		mov    %esi,%eax
		call   _05c04c_func
		jmp    _04c51c_case

	_04c9bc_jump:
		mov    %esi,%eax
		call   _020838_func
		jmp    _04c51c_case

	_04c9c8_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _04c51c_case
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04c51c_case
		mov    $0x00001d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000028(%esi),%ebx
		mov    _0c1b74_data,%edx
		lea    0x000081(%esi),%eax
		cmp    %ebx,%edx
		setg   %dl
		and    $0x0000ff,%edx
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)
		jmp    _04c51c_case

	_04ca2e_jump:
		mov    0x000060(%esi),%dx
		mov    %edx,%eax
		cmp    $0x000064,%dx
		jb     _04cca2_jump
		jbe    _04c681_jump
		cmp    $0x0000ac,%dx
		jb     _04cb85_jump
		jbe    _04c68d_jump
		cmp    $0x0000cc,%dx
		jb     _04caf1_jump
		cmp    $0x0000cd,%dx
		jbe    _04c51c_case
		cmp    $0x0000d9,%dx
		jb     _04cab6_jump
		jbe    _04c681_jump
		cmp    $0x0000de,%dx
		jb     _04caa6_jump
		jbe    _04c51c_case
		cmp    $0x0000e3,%dx
		jb     _04cf0b_jump
		jbe    _04c51c_case
		cmp    $0x0000ef,%dx
		je     _04c8bd_jump
		jmp    _04cf0b_jump

	_04caa6_jump:
		cmp    $0x0000da,%dx
		je     _04c568_jump
		jmp    _04cf0b_jump

	_04cab6_jump:
		cmp    $0x0000d4,%dx
		jb     _04cada_jump
		jbe    _04c51c_case
		cmp    $0x0000d5,%dx
		je     _04c51c_case
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cada_jump:
		cmp    $0x0000d3,%dx
		je     _04c9bc_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04caf1_jump:
		cmp    $0x0000bb,%dx
		jb     _04cb4a_jump
		jbe    _04c9a4_jump
		cmp    $0x0000c3,%dx
		jb     _04cb33_jump
		jbe    _04c9c8_jump
		cmp    $0x0000c6,%dx
		jb     _04cf0b_jump
		jbe    _04c974_jump
		cmp    $0x0000c8,%dx
		je     _04c980_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cb33_jump:
		cmp    $0x0000be,%dx
		je     _04c9b0_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cb4a_jump:
		cmp    $0x0000b4,%dx
		jb     _04cb6e_jump
		jbe    _04c98c_jump
		cmp    $0x0000b6,%dx
		je     _04cd0a_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cb6e_jump:
		cmp    $0x0000b1,%dx
		je     _04c821_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cb85_jump:
		cmp    $0x000084,%dx
		jb     _04cc17_jump
		jbe    _04c51c_case
		cmp    $0x000093,%dx
		jb     _04cbef_jump
		jbe    _04c51c_case
		cmp    $0x000097,%dx
		jb     _04cbd8_jump
		jbe    _04c51c_case
		cmp    $0x0000a5,%dx
		jb     _04cf0b_jump
		jbe    _04c6d1_jump
		cmp    $0x0000a7,%dx
		je     _04c821_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cbd8_jump:
		cmp    $0x000096,%dx
		je     _04c51c_case
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cbef_jump:
		cmp    $0x000086,%dx
		jb     _04c924_jump
		jbe    _04c821_jump
		cmp    $0x00008b,%dx
		je     _04c51c_case
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cc17_jump:
		cmp    $0x000070,%dx
		jb     _04cc66_jump
		jbe    _04c657_jump
		cmp    $0x00007a,%dx
		jb     _04cc50_jump
		jbe    _04c731_jump
		cmp    $0x00007b,%dx
		jbe    _04c63d_jump
		cmp    $0x000082,%dx
		je     _04c821_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cc50_jump:
		cmp    $0x000077,%dx
		je     _04c6b5_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cc66_jump:
		cmp    $0x000067,%dx
		jb     _04cc8c_jump
		cmp    $0x000068,%dx
		jbe    _04c51c_case
		cmp    $0x00006e,%dx
		je     _04c51c_case
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cc8c_jump:
		cmp    $0x000066,%dx
		je     _04c51c_case
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cca2_jump:
		cmp    $0x000035,%dx
		jb     _04cdd8_jump
		jbe    _04c751_jump
		cmp    $0x000049,%dx
		jb     _04cd4e_jump
		jbe    _04c51c_case
		cmp    $0x000057,%dx
		jb     _04cd16_jump
		cmp    $0x000058,%dx
		jbe    _04c51c_case
		cmp    $0x00005d,%dx
		jb     _04cd00_jump
		jbe    _04cd0a_jump
		cmp    $0x000061,%dx
		jb     _04cf0b_jump
		jbe    _04c935_jump
		cmp    $0x000062,%dx
		je     _04c51c_case
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cd00_jump:
		cmp    $0x00005a,%dx
		jb     _04cf0b_jump

	_04cd0a_jump:
		mov    %esi,%eax
		call   _06b0f8_func
		jmp    _04c51c_case

	_04cd16_jump:
		cmp    $0x00004d,%dx
		jb     _04cd38_jump
		jbe    _04c8bd_jump
		cmp    $0x00004e,%dx
		je     _04c73d_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cd38_jump:
		cmp    $0x00004a,%dx
		je     _04c998_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cd4e_jump:
		cmp    $0x000041,%dx
		jb     _04cd9c_jump
		jbe    _04c94d_jump
		cmp    $0x000045,%dx
		jb     _04cd86_jump
		jbe    _04c6dd_jump
		cmp    $0x000046,%dx
		jbe    _04c55f_jump
		cmp    $0x000048,%dx
		je     _04c8fe_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cd86_jump:
		cmp    $0x000044,%dx
		je     _04c51c_case
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cd9c_jump:
		cmp    $0x00003c,%dx
		jb     _04cdc2_jump
		cmp    $0x00003d,%dx
		jbe    _04c941_jump
		cmp    $0x00003e,%dx
		je     _04c675_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cdc2_jump:
		cmp    $0x00003a,%dx
		je     _04c898_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cdd8_jump:
		cmp    $0x000020,%dx
		jb     _04ce90_jump
		jbe    _04c51c_case
		cmp    $0x00002e,%dx
		jb     _04ce58_jump
		jbe    _04c959_jump
		cmp    $0x000032,%dx
		jb     _04ce42_jump
		jbe    _04c51c_case
		cmp    $0x000033,%dx
		jbe    _04c789_jump
		cmpw   $0x000000,0x000050(%esi)
		je     _04c51c_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _068654_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _04ba30_func
		decw   0x000050(%esi)
		jmp    _04c51c_case

	_04ce42_jump:
		cmp    $0x00002f,%dx
		je     _04c6dd_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04ce58_jump:
		cmp    $0x000026,%dx
		jb     _04ce7a_jump
		jbe    _04c821_jump
		cmp    $0x000028,%dx
		je     _04c731_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04ce7a_jump:
		cmp    $0x000024,%dx
		je     _04c703_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04ce90_jump:
		cmp    $0x000008,%dx
		jb     _04cee0_jump
		jbe    _04c821_jump
		cmp    $0x00000d,%dx
		jb     _04ceca_jump
		jbe    _04c51c_case
		cmp    $0x00000f,%dx
		jb     _04cf0b_jump
		jbe    _04c51c_case
		cmp    $0x00001b,%dx
		je     _04c51c_case
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04ceca_jump:
		cmp    $0x000009,%dx
		je     _04c6d1_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cee0_jump:
		cmp    $0x000003,%dx
		jb     _04cf02_jump
		jbe    _04c8b1_jump
		cmp    $0x000006,%dx
		je     _04c821_jump
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cf02_jump:
		test   %dx,%dx
		je     _04c6d1_jump

	_04cf0b_jump:
		mov    %esi,%eax
		call   _04c2b0_func
		jmp    _04c51c_case

	_04cf17_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jle    _04cf28_jump
		movw   $0x000006,0x000042(%esi)

	_04cf28_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _04cf39_jump
		movw   $0x00fff8,0x000042(%esi)

	_04cf39_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04cf44_func:
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000062(%edx),%al
		cmp    $0x00000a,%eax
		jne    _04cfcf_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000017,%eax
		jne    _04cf6c_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000006,%eax
		je     _04cfcf_jump

	_04cf6c_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000034,%eax
		jne    _04cf80_jump
		andb   $0x0000fb,0x000081(%edx)
		pop    %edx
		ret    

	_04cf80_jump:
		testb  $0x000002,_09223a_data(,%eax,4)
		je     _04cfcf_jump
		testb  $0x000040,0x000081(%edx)
		jne    _04cfa8_jump
		mov    %edx,%eax
		call   _070160_func
		movw   $0x000000,0x000042(%edx)
		mov    0x000042(%edx),%ax
		mov    %ax,0x000040(%edx)

	_04cfa8_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000002,_09223b_data(,%eax,4)
		je     _04cfcf_jump
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%edx)
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%edx)

	_04cfcf_jump:
		pop    %edx
		ret    



_04cfd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _04cff7_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _04d1bd_jump

	_04cff7_jump:
		xor    %ecx,%ecx
		mov    0x000060(%esi),%cx
		mov    0x000040(%esi),%bx
		mov    _09223a_data(,%ecx,4),%dl
		mov    0x000042(%esi),%ax
		test   $0x000080,%dl
		je     _04d048_jump
		xor    %ecx,%ecx
		mov    0x00007d(%esi),%cl
		cmp    $0x000001,%ecx
		jne    _04d048_jump
		xor    %ecx,%ecx
		mov    _0c24dc_data,%cl
		test   %ecx,%ecx
		jne    _04d048_jump
		movswl %bx,%ecx
		test   %ecx,%ecx
		jle    _04d033_jump
		mov    %ebx,%ecx
		dec    %ecx
		jmp    _04d036_jump

	_04d033_jump:
		mov    %ebx,%ecx
		inc    %ecx

	_04d036_jump:
		mov    %cx,0x000040(%esi)
		mov    0x00003e(%esi),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jne    _04d048_jump
		movb   $0x000000,0x00007d(%esi)

	_04d048_jump:
		xor    %ecx,%ecx
		mov    0x000060(%esi),%cx
		cmp    $0x00005e,%ecx
		jne    _04d081_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		mov    _0c1ef4_data,%ecx
		mov    0x000028(%esi),%ebp
		add    %eax,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		sar    $0x000004,%ebx
		add    %eax,%ebp
		mov    %ebx,0x00002c(%esi)
		mov    %ecx,_0c1ef4_data
		mov    %ebp,0x000028(%esi)
		jmp    _04d184_jump

	_04d081_jump:
		testb  $0x000020,_092239_data(,%ecx,4)
		je     _04d096_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		call   _04aa54_func

	_04d096_jump:
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000010,_092239_data(,%eax,4)
		je     _04d0b9_jump
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		call   _04aa54_func
		mov    %eax,%edi
		jmp    _04d0bb_jump

	_04d0b9_jump:
		mov    %ebx,%edi

	_04d0bb_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000040,_09223a_data(,%eax,4)
		je     _04d16a_jump
		mov    0x000028(%esi),%dx
		mov    0x00002c(%esi),%cx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000068(%esi),%al
		add    %ecx,%ebx
		add    %edx,%eax
		sub    $0x000008,%ebx
		mov    %eax,%ecx
		movswl %bx,%ebx
		cwtl   
		add    %edi,%ecx
		sar    $0x000004,%ebx
		sar    $0x000004,%eax
		movswl %bx,%ebx
		cwtl   
		mov    %ebx,%edx
		mov    %cx,0x000004(%esp)
		call   _01e4d8_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		jne    _04d131_jump
		mov    0x000002(%esp),%eax
		sar    $0x000014,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e4d8_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		jne    _04d15e_jump

	_04d131_jump:
		mov    0x000002(%esp),%eax
		mov    _0c2524_data,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		add    $0x000130,%ecx
		cmp    %ebx,%eax
		jl     _04d158_jump
		cmp    %ecx,%eax
		jg     _04d158_jump
		mov    $0x000001,%eax
		jmp    _04d15a_jump

	_04d158_jump:
		xor    %eax,%eax

	_04d15a_jump:
		test   %eax,%eax
		jne    _04d16a_jump

	_04d15e_jump:
		mov    0x000040(%esi),%ax
		neg    %eax
		neg    %edi
		mov    %ax,0x000040(%esi)

	_04d16a_jump:
		movswl %di,%eax
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00002c(%esi),%ebx
		sar    $0x000010,%eax
		mov    %edx,0x000028(%esi)
		add    %eax,%ebx
		mov    %ebx,0x00002c(%esi)

	_04d184_jump:
		lea    0x000082(%esi),%ebx
		test   %di,%di
		jne    _04d196_jump
		cmpw   $0x000000,(%esp)
		je     _04d19d_jump

	_04d196_jump:
		mov    $0x000001,%eax
		jmp    _04d19f_jump

	_04d19d_jump:
		xor    %eax,%eax

	_04d19f_jump:
		mov    (%ebx),%cl
		and    $0x0000fe,%cl
		and    $0x000001,%al
		mov    %cl,%ch
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,(%ebx)
		call   _04cf44_func
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04d1bd_jump:
		andb   $0x0000fe,0x000082(%esi)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d1d0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _01dee0_func
		test   %ax,%ax
		je     _04d1f8_jump
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0932c0_data(%ebx)

	_04d1f8_jump:
		pop    %edx
		pop    %ebx
		mov    %eax,%eax
		ret    



_04d200_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		testb  $0x000002,_092238_data(,%eax,4)
		je     _04d21d_jump
		mov    %edx,%eax
		call   _070248_func

	_04d21d_jump:
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		testb  $0x000020,_092238_data(,%eax,4)
		je     _04d236_jump
		mov    %edx,%eax
		call   _02beb0_func

	_04d236_jump:
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		testb  $0x000001,_09223a_data(,%eax,4)
		je     _04d24f_jump
		mov    %edx,%eax
		call   _01e6e4_func

	_04d24f_jump:
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		testb  $0x000080,_092239_data(,%eax,4)
		je     _04d26a_jump
		mov    %edx,%eax
		call   _0565a0_func
		jmp    _04d26e_jump

	_04d26a_jump:
		movb   $0x00001e,0x000070(%edx)

	_04d26e_jump:
		xor    %ebx,%ebx
		mov    _0db26c_data,%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0932b4_data(%ebx)
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		cmp    $0x000002,%eax
		jne    _04d29c_jump
		mov    %edx,%eax
		call   _04c2ec_func

	_04d29c_jump:
		testb  $0x000020,0x000081(%edx)
		je     _04d2ae_jump
		mov    %edx,%eax
		call   _02b38c_func
		jmp    _04d2b4_jump

	_04d2ae_jump:
		movw   $0x002710,0x000054(%edx)

	_04d2b4_jump:
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		testb  $0x000040,_092239_data(,%eax,4)
		je     _04d2cd_jump
		mov    %edx,%eax
		call   _058f10_func

	_04d2cd_jump:
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		testb  $0x000020,_092238_data(,%eax,4)
		je     _04d2e6_jump
		mov    %edx,%eax
		call   _04d1d0_func

	_04d2e6_jump:
		pop    %edx
		pop    %ebx
		ret    



_04d2ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    $0xffffffff,%ebx
		xor    %edx,%edx
		mov    _0c24aa_data,%eax
		mov    %dx,_0c248a_data
		sar    $0x000010,%eax
		mov    %bx,_0c23c2_data
		mov    %eax,(%esp)
		mov    _0c24ac_data,%edx
		mov    (%esp),%ebx
		sar    $0x000010,%edx
		add    $0x000528,%eax
		mov    %edx,0x000010(%esp)
		sub    %ebx,%eax
		mov    0x000010(%esp),%ecx
		sar    %eax
		add    $0x0004b0,%edx
		mov    %eax,0x00000c(%esp)
		add    %ebx,%eax
		sub    %ecx,%edx
		sub    $0x0001f4,%eax
		sar    %edx
		mov    %eax,(%esp)
		lea    -0x0001f4(%ecx,%edx,1),%eax
		mov    %eax,0x000010(%esp)
		mov    _0c1b3c_data,%eax
		mov    %edx,0x000008(%esp)
		movswl (%eax),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		xor    %edi,%edi
		add    %edx,%eax
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		jmp    _04d39f_jump

	_04d37b_jump:
		movl   $0x000000,0x00001c(%ecx)
		mov    _0c1b3c_data,%ecx
		movswl 0x000002(%ecx,%eax,1),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0c1b34_data,%esi
		add    $0x000002,%eax
		inc    %ebx
		add    %esi,%ecx

	_04d39f_jump:
		mov    _0c1b3e_data,%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%ebx
		jl     _04d37b_jump
		mov    $_0c23c2_data,%esi
		mov    _0c2488_data,%eax
		dec    %ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000014(%esp)
		add    %eax,%eax
		lea    0x000000(%ebp,%ebp,1),%ecx
		add    %eax,%esi
		mov    _0c1b3c_data,%eax
		movswl (%ecx,%eax,1),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		mov    %esi,0x000004(%esp)
		add    %eax,%ebx
		test   %ebp,%ebp
		jmp    _04d452_jump

	_04d3e9_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000010,_092238_data(,%eax,4)
		je     _04d425_jump
		mov    _0c24ae_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0c24ac_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _04af6c_func
		jmp    _04d42c_jump

	_04d425_jump:
		movl   $0x000000,0x000024(%ebx)

	_04d42c_jump:
		mov    _0c1b3c_data,%eax
		movswl -0x000002(%ecx,%eax,1),%eax
		imul   $0x000084,%eax,%eax
		mov    0x000014(%esp),%edx
		mov    _0c1b34_data,%ebx
		dec    %edx
		sub    $0x000002,%ecx
		mov    %edx,0x000014(%esp)
		add    %eax,%ebx
		test   %ecx,%ecx

	_04d452_jump:
		jl     _04d4be_jump
		cmpl   $0x000000,0x00001c(%ebx)
		jne    _04d42c_jump
		mov    (%esp),%edx
		mov    0x000028(%ebx),%eax
		sub    %edx,%eax
		mov    0x00000c(%esp),%ebp
		test   %eax,%eax
		jge    _04d46c_jump
		neg    %eax

	_04d46c_jump:
		cmp    %ebp,%eax
		jge    _04d3e9_jump
		mov    0x000010(%esp),%edx
		mov    0x00002c(%ebx),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%ebp
		test   %eax,%eax
		jge    _04d487_jump
		neg    %eax

	_04d487_jump:
		cmp    %ebp,%eax
		jge    _04d3e9_jump
		mov    _0c24ae_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0c24ac_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _04af6c_func
		jmp    _04d42c_jump

	_04d4be_jump:
		mov    _0c1b3e_data,%ebp
		sar    $0x000010,%ebp
		dec    %ebp
		mov    _0c1b3c_data,%eax
		lea    0x000000(,%ebp,2),%ebx
		movswl (%ebx,%eax,1),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		test   %ebp,%ebp
		jmp    _04d527_jump

	_04d4ee_jump:
		xor    %ecx,%ecx
		mov    0x000060(%eax),%cx
		testb  $0x000001,_092238_data(,%ecx,4)
		je     _04d509_jump
		mov    0x000032(%eax),%eax
		sar    $0x000010,%eax
		call   _01f804_func

	_04d509_jump:
		mov    _0c1b3c_data,%eax
		movswl -0x000002(%ebx,%eax,1),%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%ecx
		sub    $0x000002,%ebx
		dec    %ebp
		add    %ecx,%eax
		test   %ebx,%ebx

	_04d527_jump:
		jl     _04d571_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _04d4ee_jump
		mov    _0c24ac_data,%dx
		mov    0x000028(%eax),%cx
		sub    %edx,%ecx
		add    $0x000008,%ecx
		mov    %cx,0x000036(%eax)
		mov    _0c24ae_data,%dx
		mov    0x00002c(%eax),%cx
		sub    %edx,%ecx
		mov    %cx,0x000038(%eax)
		add    $0x000002,%esi
		mov    0x000034(%eax),%ax
		inc    %edi
		mov    %ax,-0x000002(%esi)
		cmp    $0x000064,%edi
		jle    _04d509_jump
		mov    $_0c0520_data,%eax
		call   _01f878_func
		jmp    _04d509_jump

	_04d571_jump:
		mov    0x000004(%esp),%ebx
		mov    %esi,%edx
		sub    %ebx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		mov    _0c2488_data,%eax
		sar    $0x000010,%eax
		movw   $0x00ffff,(%esi)
		add    %edx,%eax
		mov    %ax,_0c248a_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi

	_04d59e_jump:
		pop    %esi

	_04d59f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d5a4_func:
		incw   _0c24f8_data
		mov    _0c24f6_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000063,%eax
		jle    _04d5c1_jump
		movw   $0x000063,_0c24f8_data

	_04d5c1_jump:
		xor    %eax,%eax
		mov    _0c2501_data,%al
		cmp    $0x000004,%eax
		jne    _04d5d5_jump
		movb   $0x000004,_0c1bc2_data
		ret    

	_04d5d5_jump:
		movb   $0x000002,_0c1bc2_data
		ret    



_04d5e0_func:
		push   %ebx
		push   %edx
		mov    _0c260a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _04d6c7_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00007f(%edx),%al
		test   %eax,%eax
		jle    _04d619_jump
		mov    %al,%ah
		movb   $0x000000,0x00006b(%edx)
		dec    %ah
		mov    %ah,0x00007f(%edx)

	_04d619_jump:
		mov    %edx,%eax
		call   _04b3f8_func
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		testb  $0x000010,0x000007(%ebx,%eax,8)
		je     _04d644_jump
		xor    %eax,%eax
		mov    0x00006b(%edx),%al
		test   %eax,%eax
		jmp    _04d667_jump

	_04d644_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%edx),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edx),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %ebx,%ebx
		dec    %eax
		mov    0x00006b(%edx),%bl
		cmp    %eax,%ebx

	_04d667_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _04d6c7_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%edx),%bl
		mov    0x000005(%eax,%ebx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _04d6c7_jump
		mov    _0c25ae_data,%eax
		mov    $0xffffffff,%ebx
		sar    $0x000010,%eax
		mov    %bx,_0c260c_data
		cmp    $0x000003,%eax
		je     _04d6c0_jump
		cmp    $0x000004,%eax
		je     _04d6c0_jump
		call   _04d5a4_func

	_04d6c0_jump:
		andb   $0x0000fb,0x000081(%edx)

	_04d6c7_jump:
		mov    _0c260c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _04d791_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00007f(%edx),%al
		test   %eax,%eax
		jle    _04d6fc_jump
		dec    %al
		movb   $0x000000,0x00006b(%edx)
		mov    %al,0x00007f(%edx)

	_04d6fc_jump:
		mov    %edx,%eax
		call   _04b3f8_func
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%edx),%bl
		testb  $0x000010,0x000007(%eax,%ebx,8)
		je     _04d727_jump
		xor    %eax,%eax
		mov    0x00006b(%edx),%al
		test   %eax,%eax
		jmp    _04d74b_jump

	_04d727_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%edx),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%edx),%ebx
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x00000a(%eax),%bx
		xor    %eax,%eax
		dec    %ebx
		mov    0x00006b(%edx),%al
		cmp    %ebx,%eax

	_04d74b_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _04d791_jump
		xor    %ebx,%ebx
		mov    0x00006d(%edx),%bl
		mov    0x00000c(%edx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _04d791_jump
		movw   $0x00ffff,_0c260e_data
		andb   $0x0000fb,0x000081(%edx)

	_04d791_jump:
		pop    %edx
		pop    %ebx
		ret    



_04d794_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c23c0_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _0c248a_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _04d59f_jump
		jmp    _04d7f2_jump

	_04d7c6_jump:
		inc    %edx
		movswl %dx,%eax
		mov    _0c23c0_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%ebx
		mov    _0c248a_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jge    _04d59f_jump

	_04d7f2_jump:
		xor    %ebx,%ebx
		mov    0x000060(%eax),%bx
		cmp    $0x0000cc,%ebx
		je     _04d7c6_jump
		cmp    $0x0000cd,%ebx
		je     _04d7c6_jump
		call   _04b3f8_func
		jmp    _04d7c6_jump



_04d810_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c260a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _04d82e_jump
		mov    _0c260c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _04d833_jump

	_04d82e_jump:
		call   _04d5e0_func

	_04d833_jump:
		cmpb   $0x000000,_0c25fa_data
		je     _04d853_jump
		mov    $0x000007,%edx
		mov    _0c25fc_data,%eax
		call   _028090_func
		xor    %dl,%dl
		mov    %dl,_0c25fa_data

	_04d853_jump:
		mov    _0c23c0_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c248a_data,%cx
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _04d59e_jump
		jmp    _04d8ae_jump

	_04d882_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0c23c0_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		mov    _0c248a_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jge    _04d59e_jump

	_04d8ae_jump:
		mov    0x000060(%edx),%ax
		mov    %ax,_0db26c_data
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		testb  $0x000008,_09223b_data(,%eax,4)
		jne    _04d909_jump
		cmp    $0x0000a1,%eax
		jne    _04d8db_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000017,%eax
		je     _04d909_jump

	_04d8db_jump:
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		cmp    $0x000053,%eax
		jne    _04d8f2_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000001,%eax
		je     _04d909_jump

	_04d8f2_jump:
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		cmp    $0x000021,%eax
		jne    _04d910_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000023,%eax
		je     _04d910_jump

	_04d909_jump:
		mov    %edx,%eax
		call   _01ea90_func

	_04d910_jump:
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		cmp    $0x0000a1,%eax
		je     _04d882_jump
		cmpl   $0x000000,0x000024(%edx)
		je     _04d882_jump
		mov    %edx,%eax
		call   _04d200_func
		xor    %eax,%eax
		mov    _0db26c_data,%ax
		testb  $0x000080,_092238_data(,%eax,4)
		jne    _04d882_jump
		xor    %eax,%eax
		mov    0x000076(%edx),%al
		test   %eax,%eax
		jne    _04d882_jump
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    (%eax),%eax
		mov    0x00006c(%edx),%cl
		testb  $0x000008,0x000007(%eax,%ecx,8)
		je     _04d882_jump
		incb   0x000076(%edx)
		jmp    _04d882_jump



_04d97c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c23c0_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    _0c248a_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _04d9d4_jump

	_04d9a7_jump:
		inc    %edx
		call   _04cfd4_func
		movswl %dx,%eax
		mov    _0c23c0_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%ebx
		mov    _0c248a_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _04d9a7_jump

	_04d9d4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d9d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    _0c23c0_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _0c248a_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _04da34_jump

	_04da08_jump:
		inc    %edx
		call   _01df3c_func
		movswl %dx,%eax
		mov    _0c23c0_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%ebx
		mov    _0c1b34_data,%eax
		mov    _0c248a_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _04da08_jump

	_04da34_jump:
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _04db00_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		je     _04db00_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0c1bb5_data,%dl
		sub    %edx,%eax
		mov    %eax,_0c1b78_data
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x0000fe,%eax
		jne    _04daf6_jump
		xor    %edx,%edx
		mov    _0c1b74_data,%ebx
		mov    _0c1bb4_data,%dl
		mov    0x000006(%esp),%eax
		add    %ebx,%edx
		mov    0x000002(%esp),%ebx
		sar    $0x000011,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		sub    %eax,%edx
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		imul   %edx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _04dade_jump
		sar    %cl,%ax
		jmp    _04dae7_jump

	_04dade_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04dae7_jump:
		mov    _0c1b78_data,%ecx
		cwtl   
		sub    %eax,%ecx
		mov    %ecx,_0c1b78_data

	_04daf6_jump:
		mov    $_0c1b4c_data,%eax
		call   _01df3c_func

	_04db00_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04db08_switch:
		.long   _04dcc7_case
		.long   _04dd91_case
		.long   _04db64_case
		.long   _04dc14_case




_04db18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1bcd_data,%dl
		xor    %ebx,%ebx
		test   $0x000008,%dl
		je     _04db39_jump
		mov    _0c1b74_data,%si
		add    $0x000046,%esi
		jmp    _04db43_jump

	_04db39_jump:
		mov    _0c1b74_data,%si
		add    $0x00003a,%esi

	_04db43_jump:
		mov    _0c1b78_data,%di
		add    $0x000020,%edi
		cmp    $0x000003,%ax
		ja     _04de4f_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_04db08_switch(,%eax,4)

	_04db64_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _04de4f_jump
		mov    _0c24e2_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24ec_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_0921f8_data(%edx)
		je     _04dbbb_jump
		mov    $0x000001,%ebx

	_04dbbb_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24ec_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_0921f8_data(%edx)
		je     _04dbe3_jump
		mov    $0x000001,%ebx

	_04dbe3_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _04de4f_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04dc14_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _04de4f_jump
		add    $0x000040,%ecx
		mov    _0c24e2_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24ec_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_0921f8_data(%edx)
		je     _04dc6e_jump
		mov    $0x000001,%ebx

	_04dc6e_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24ec_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_0921f8_data(%edx)
		je     _04dc96_jump
		mov    $0x000001,%ebx

	_04dc96_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _04de4f_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04dcc7_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _04de4f_jump
		movswl %di,%eax
		mov    _0c24e2_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		dec    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24ec_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_0921f8_data(%edx)
		je     _04dd22_jump
		mov    $0x000001,%ebx

	_04dd22_jump:
		mov    _0c24e2_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24ec_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_0921f8_data(%edx)
		je     _04dd54_jump
		mov    $0x000001,%ebx

	_04dd54_jump:
		mov    _0c24e2_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _04de4f_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04dd91_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _04de4f_jump
		movswl %di,%eax
		mov    _0c24e2_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		lea    0x000003(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c24ec_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _04dded_jump
		mov    $0x000001,%ebx

	_04dded_jump:
		mov    _0c24e2_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0c24ec_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _04de1f_jump
		mov    $0x000001,%ebx

	_04de1f_jump:
		mov    _0c24e2_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _04de4f_jump
		mov    $0x000001,%ebx

	_04de4f_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04de58_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _04de7b_jump
		call   _04db18_func
		test   %ax,%ax
		je     _04de7b_jump
		xor    %edx,%edx
		mov    %dx,_0c1b8e_data

	_04de7b_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1bb8_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _04dea7_jump
		testb  $0x000002,_0c3315_data
		je     _04deae_jump

	_04dea7_jump:
		mov    $0x000028,%eax
		jmp    _04deb3_jump

	_04deae_jump:
		mov    $0x000019,%eax

	_04deb3_jump:
		mov    _0c1b8c_data,%edx
		mov    _0c1b78_data,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		mov    %ebx,_0c1b78_data
		mov    _0c25cc_data,%ebx
		sar    $0x000010,%ebx
		movswl %ax,%edx
		lea    -0x000014(%ebx),%eax
		mov    _0c1b78_data,%ecx
		sub    %edx,%eax
		cmp    %ecx,%eax
		jle    _04df1a_jump
		mov    %eax,_0c1b78_data
		mov    _0c1b94_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    %bx,_0c1b8e_data
		cmp    $0xffffffff,%eax
		je     _04df1a_jump
		mov    _0c1ba0_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		cmp    $0xffffffff,%eax
		sete   %al
		and    $0x0000ff,%eax
		call   _02baec_func

	_04df1a_jump:
		mov    $_0c1b4c_data,%eax
		xor    %ecx,%ecx
		call   _01df3c_func
		mov    %cx,_0c24f2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04df34_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _04df5c_jump
		mov    $0x000003,%eax
		call   _04db18_func
		test   %ax,%ax
		je     _04df5c_jump
		xor    %edx,%edx
		mov    %dx,_0c1b8e_data

	_04df5c_jump:
		mov    _0c1b8c_data,%eax
		mov    _0c1b78_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    $_0c1b4c_data,%eax
		mov    %edx,_0c1b78_data
		call   _01df3c_func
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _04dfda_jump
		mov    _0c25ce_data,%edx
		mov    _0c24ac_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _04dfd1_jump
		mov    _0c1b82_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000064,%eax
		jge    _04dfc1_jump
		xor    %ecx,%ecx
		mov    %cx,_0c24f2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04dfc1_jump:
		mov    _0c1b8e_data,%ax
		mov    %ax,_0c24f2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04dfd1_jump:
		xor    %ebx,%ebx
		mov    %bx,_0c24f2_data

	_04dfda_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04dfe0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _04e001_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000017,%eax
		je     _04e4b1_jump

	_04e001_jump:
		mov    _0c1b28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _04e20c_jump
		mov    _0c25a8_data,%edx
		xor    %eax,%eax
		sar    $0x000011,%edx
		mov    _0c1bb5_data,%al
		sub    %eax,%edx
		lea    0x000072(%edx),%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _04e052_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000f,%eax
		jne    _04e187_jump
		cmpb   $0x000000,_0c25a2_data
		je     _04e187_jump

	_04e052_jump:
		mov    _0c25f2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _04e187_jump
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000ff,%eax
		jne    _04e081_jump
		mov    _0c25b4_data,%di
		test   %di,%di
		je     _04e14a_jump

	_04e081_jump:
		mov    _0c1b84_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _04e097_jump
		sar    %cl,%ax
		jmp    _04e0a0_jump

	_04e097_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04e0a0_jump:
		mov    %ax,_0c24f2_data
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04e0b4_jump
		neg    %eax

	_04e0b4_jump:
		mov    %eax,%ebx
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04e0c4_jump
		neg    %eax

	_04e0c4_jump:
		cmp    %eax,%ebx
		jg     _04e20c_jump
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04e0da_jump
		neg    %eax

	_04e0da_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _04e0e7_jump
		mov    %ebx,%eax

	_04e0e7_jump:
		mov    %eax,%ebx
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04e109_jump
		movswl %bx,%ebx
		cmp    %ebx,%eax
		jle    _04e0fe_jump
		mov    %ebx,%eax

	_04e0fe_jump:
		mov    %ax,_0c24f2_data
		jmp    _04e20c_jump

	_04e109_jump:
		jge    _04e121_jump
		movswl %bx,%ebx
		neg    %ebx
		cmp    %ebx,%eax
		jge    _04e116_jump
		mov    %ebx,%eax

	_04e116_jump:
		mov    %ax,_0c24f2_data
		jmp    _04e20c_jump

	_04e121_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jle    _04e136_jump
		movw   $0x000001,_0c24f2_data
		jmp    _04e20c_jump

	_04e136_jump:
		jge    _04e20c_jump
		movw   $0x00ffff,_0c24f2_data
		jmp    _04e20c_jump

	_04e14a_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		je     _04e20c_jump
		mov    _0c1b82_data,%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    $0x000030,%eax
		cmp    %eax,%ebx
		jge    _04e17b_jump
		movw   $0x00fffc,_0c24f2_data
		jmp    _04e20c_jump

	_04e17b_jump:
		mov    %di,_0c24f2_data
		jmp    _04e20c_jump

	_04e187_jump:
		mov    _0c24ae_data,%ax
		cmp    _0c25d0_data,%ax
		je     _04e1b4_jump
		mov    _0c1b82_data,%ebx
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _04e1b4_jump
		test   %eax,%eax
		jg     _04e1e8_jump

	_04e1b4_jump:
		mov    _0c24ae_data,%ax
		cmp    _0c25ce_data,%ax
		je     _04e20c_jump
		xor    %eax,%eax
		mov    _0c1bc0_data,%al
		mov    _0c1b82_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		sub    $0x000010,%eax
		cmp    %eax,%edx
		jg     _04e20c_jump
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04e20c_jump

	_04e1e8_jump:
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000010,%eax
		jg     _04e203_jump
		mov    _0c1b8e_data,%ax
		mov    %ax,_0c24f2_data
		jmp    _04e20c_jump

	_04e203_jump:
		xor    %esi,%esi
		mov    %si,_0c24f2_data

	_04e20c_jump:
		mov    _0c1b26_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _04e439_jump
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0c1bb4_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    _0c24c0_data,%bx
		add    $0x000030,%eax
		mov    _0c24be_data,%si
		add    %eax,%ebx
		mov    _0c25b2_data,%eax
		sub    $0x000030,%edx
		sar    $0x000010,%eax
		sub    %esi,%edx
		test   %eax,%eax
		jg     _04e260_jump
		mov    _0c1b8a_data,%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jle    _04e2ac_jump

	_04e260_jump:
		mov    _0c1b82_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _04e274_jump
		sar    %cl,%ax
		jmp    _04e27d_jump

	_04e274_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04e27d_jump:
		mov    _0c134a_data,%cx
		cmp    %cx,%ax
		jge    _04e297_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_0c134a_data
		jmp    _04e39a_jump

	_04e297_jump:
		jle    _04e39a_jump
		mov    %ecx,%edi
		inc    %edi
		mov    %di,_0c134a_data
		jmp    _04e39a_jump

	_04e2ac_jump:
		test   %eax,%eax
		jl     _04e2b4_jump
		test   %ecx,%ecx
		jge    _04e300_jump

	_04e2b4_jump:
		mov    _0c1b82_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _04e2c8_jump
		sar    %cl,%ax
		jmp    _04e2d1_jump

	_04e2c8_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04e2d1_jump:
		mov    _0c134a_data,%cx
		cmp    %cx,%ax
		jle    _04e2eb_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_0c134a_data
		jmp    _04e39a_jump

	_04e2eb_jump:
		jge    _04e39a_jump
		mov    %ecx,%edi
		dec    %edi
		mov    %di,_0c134a_data
		jmp    _04e39a_jump

	_04e300_jump:
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _04e357_jump
		mov    _0c1b82_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _04e329_jump
		sar    %cl,%ax
		jmp    _04e332_jump

	_04e329_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04e332_jump:
		mov    _0c134a_data,%cx
		cmp    %cx,%ax
		jge    _04e349_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_0c134a_data
		jmp    _04e39a_jump

	_04e349_jump:
		jle    _04e39a_jump
		mov    %ecx,%edi
		inc    %edi
		mov    %di,_0c134a_data
		jmp    _04e39a_jump

	_04e357_jump:
		test   %eax,%eax
		jne    _04e39a_jump
		mov    _0c1b82_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _04e36f_jump
		sar    %cl,%ax
		jmp    _04e378_jump

	_04e36f_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04e378_jump:
		mov    _0c134a_data,%di
		cmp    %di,%ax
		jle    _04e38e_jump
		inc    %edi
		mov    %di,_0c134a_data
		jmp    _04e39a_jump

	_04e38e_jump:
		jge    _04e39a_jump
		mov    %edi,%esi
		dec    %esi
		mov    %si,_0c134a_data

	_04e39a_jump:
		cmpb   $0x000000,_0c51b5_data
		je     _04e3d4_jump
		mov    _0c1348_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04e3b1_jump
		neg    %eax

	_04e3b1_jump:
		cmp    $0x000004,%eax
		jle    _04e3d4_jump
		mov    _0c1348_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04e3c9_jump
		mov    $0x000004,%eax
		jmp    _04e3ce_jump

	_04e3c9_jump:
		mov    $0xfffffffc,%eax

	_04e3ce_jump:
		mov    %ax,_0c134a_data

	_04e3d4_jump:
		mov    $0x000002,%cl
		mov    _0c134a_data,%ax
		test   %ax,%ax
		js     _04e3e6_jump
		sar    %cl,%ax
		jmp    _04e3ef_jump

	_04e3e6_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04e3ef_jump:
		mov    _0c24f0_data,%cx
		add    %eax,%ecx
		mov    _0c1b82_data,%si
		mov    %cx,_0c24f0_data
		cmp    %si,%bx
		jle    _04e417_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _04e42c_jump

	_04e417_jump:
		cmp    _0c1b82_data,%dx
		jge    _04e439_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04e439_jump

	_04e42c_jump:
		mov    _0c1b8c_data,%ax
		add    %ax,_0c24f0_data

	_04e439_jump:
		mov    _0c1b28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _04e4b1_jump
		mov    _0c1b94_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		je     _04e4b1_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000020,_092239_data(,%eax,4)
		je     _04e489_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _04aa54_func
		add    %ax,_0c24f2_data
		jmp    _04e49d_jump

	_04e489_jump:
		mov    _0c24f2_data,%bx
		mov    0x000042(%edx),%ax
		add    %eax,%ebx
		mov    %bx,_0c24f2_data

	_04e49d_jump:
		mov    _0c24f2_data,%si
		mov    0x00004c(%edx),%ax
		add    %eax,%esi
		mov    %si,_0c24f2_data

	_04e4b1_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e4b8_func:
		push   %ecx
		push   %edx
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _04e4e6_jump
		mov    $0x000001,%eax
		call   _04db18_func
		test   %ax,%ax
		je     _04e4e6_jump
		xor    %edx,%edx
		mov    %dx,_0c1b8c_data
		mov    %dx,_0c25b4_data

	_04e4e6_jump:
		mov    _0c1b8a_data,%eax
		mov    _0c1b74_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0ce5a0_data,%ax
		cwtl   
		mov    %edx,_0c1b74_data
		cmp    %edx,%eax
		jge    _04e52f_jump
		mov    %eax,_0c1b74_data
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %cx,_0c1b8c_data
		mov    _0c1bb9_data,%al
		mov    %cx,_0c25b4_data
		cmp    $0x000002,%eax
		je     _04e52f_jump
		mov    %cx,_0c1b8e_data

	_04e52f_jump:
		mov    $_0c1b4c_data,%eax
		call   _01df3c_func
		pop    %edx
		pop    %ecx
		ret    



_04e53c_func:
		push   %ecx
		push   %edx
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _04e567_jump
		xor    %eax,%eax
		call   _04db18_func
		test   %ax,%ax
		je     _04e567_jump
		xor    %edx,%edx
		mov    %dx,_0c1b8c_data
		mov    %dx,_0c25b4_data

	_04e567_jump:
		mov    _0c1b8a_data,%eax
		mov    _0c1b74_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0c1b26_data,%eax
		sar    $0x000010,%eax
		mov    %edx,_0c1b74_data
		cmp    $0xffffffff,%eax
		jne    _04e5b6_jump
		mov    _0ce5a2_data,%ax
		cwtl   
		cmp    %edx,%eax
		jle    _04e5b6_jump
		mov    %eax,_0c1b74_data
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0c1bb9_data,%al
		mov    %cx,_0c25b4_data
		cmp    $0x000002,%eax
		je     _04e5b6_jump
		mov    %cx,_0c1b8e_data

	_04e5b6_jump:
		pop    %edx
		pop    %ecx
		ret    



_04e5bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0c2501_data,%al
		cmp    $0x000002,%eax
		jne    _04e5df_jump
		mov    _0c1bc2_data,%al
		xor    %dh,%dh
		mov    %al,_0c24fd_data
		mov    %dh,_0c24fc_data
		jmp    _04e60c_jump

	_04e5df_jump:
		xor    %eax,%eax
		mov    _0c1bc2_data,%al
		cmp    $0x000002,%eax
		jg     _04e5fa_jump
		xor    %dl,%dl
		mov    %al,_0c24fd_data
		mov    %dl,_0c24fc_data
		jmp    _04e60c_jump

	_04e5fa_jump:
		mov    $0x000002,%ah
		mov    %al,%bl
		sub    %ah,%bl
		mov    %ah,_0c24fd_data
		mov    %bl,_0c24fc_data

	_04e60c_jump:
		mov    _0c24f6_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _04e62a_jump
		xor    %bl,%bl
		mov    %bl,_0c24fb_data
		mov    %bl,_0c24fa_data
		jmp    _04e64c_jump

	_04e62a_jump:
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0c24fb_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0c24fa_data

	_04e64c_jump:
		xor    %edx,%edx
		mov    _0c24fe_data,%dl
		cmp    $0x000063,%edx
		jle    _04e65e_jump
		mov    $0x000063,%edx

	_04e65e_jump:
		xor    %ebx,%ebx
		mov    $0x00000a,%ecx
		mov    %dl,%bl
		mov    %dl,_0c24fe_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0c24ff_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0c2500_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e690_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c1b30_data,%esi
		mov    _0c51ce_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _04e6f6_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		cmpl   $0x000000,0x000020(%ecx)
		je     _04e6f6_jump
		mov    0x000032(%ecx),%eax
		mov    %esi,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _04e6f6_jump

	_04e6d2_jump:
		cwtl   
		imul   $0x000084,%eax,%ebx
		mov    _0c1b34_data,%edx
		andb   $0x0000fb,0x000081(%edx,%ebx,1)
		mov    %esi,%edx
		mov    0x000034(%ecx),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _04e6d2_jump

	_04e6f6_jump:
		mov    %esi,_0c1b30_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e704_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    _0c1b30_data,%esi
		mov    %eax,%ecx
		xor    %ah,%ah
		mov    0x000032(%ecx),%edx
		mov    %ah,(%esp)
		sar    $0x000010,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _04e75f_jump

	_04e72a_jump:
		cwtl   
		imul   $0x000084,%eax,%edx
		mov    _0c1b34_data,%ebx
		mov    0x000060(%edx,%ebx,1),%dx
		and    $0x00ffff,%edx
		cmp    $0x0000a4,%edx
		jne    _04e750_jump
		movb   $0x000001,(%esp)
		jmp    _04e75f_jump

	_04e750_jump:
		mov    %esi,%edx
		mov    0x000034(%ecx),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _04e72a_jump

	_04e75f_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %esi,_0c1b30_data
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e774_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0c1b30_data,%edi
		mov    _0c1b34_data,%ebx
		mov    _0c1b38_data,%ax
		xor    %esi,%esi
		mov    %eax,0x000004(%esp)
		test   %ax,%ax
		jle    _04e86e_jump
		jmp    _04e7b4_jump

	_04e7a0_jump:
		mov    0x000004(%esp),%ecx
		inc    %esi
		add    $0x000084,%ebx
		cmp    %cx,%si
		jge    _04e86e_jump

	_04e7b4_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x0000a4,%eax
		jne    _04e7a0_jump
		movswl %si,%eax
		mov    %edi,%ecx
		mov    (%ecx,%eax,2),%ax
		mov    %esi,%edx
		cmp    %si,%ax
		je     _04e812_jump

	_04e7d1_jump:
		cmp    %si,%ax
		je     _04e812_jump
		testb  $0x000004,0x000081(%ebx)
		je     _04e804_jump
		xor    %edx,%edx
		mov    0x000060(%ebx),%dx
		cmp    $0x0000a4,%edx
		jne    _04e804_jump
		movswl %ax,%edx
		imul   $0x000084,%edx,%ecx
		mov    _0c1b34_data,%edx
		andb   $0x0000fb,0x000081(%ecx,%edx,1)

	_04e804_jump:
		mov    %edi,%ecx
		mov    %eax,%edx
		cwtl   
		mov    (%ecx,%eax,2),%ax
		cmp    %dx,%ax
		jne    _04e7d1_jump

	_04e812_jump:
		cmp    %si,%ax
		jne    _04e7a0_jump
		movswl %si,%ecx
		add    %ecx,%ecx
		lea    (%edi,%ecx,1),%ebp
		movswl %dx,%ecx
		mov    %ecx,(%esp)
		add    %ecx,%ecx
		lea    (%edi,%ecx,1),%eax
		mov    0x000000(%ebp),%cx
		mov    %cx,(%eax)
		cmp    %cx,%dx
		jne    _04e84b_jump
		imul   $0x000084,(%esp),%eax
		mov    _0c1b34_data,%edx
		movl   $0x000000,0x000020(%edx,%eax,1)

	_04e84b_jump:
		movswl %si,%eax
		lea    0x000000(,%eax,2),%edx
		lea    (%edi,%edx,1),%eax
		mov    (%eax),%dx
		mov    %dx,0x000052(%ebx)
		mov    %si,(%eax)
		movl   $0x000000,0x000020(%ebx)
		jmp    _04e7a0_jump

	_04e86e_jump:
		mov    %edi,_0c1b30_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e880_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c1b30_data,%esi
		mov    %eax,%ebx
		mov    0x000034(%eax),%cx
		mov    %esi,%edx
		movswl %cx,%eax
		mov    (%edx,%eax,2),%ax
		cmp    %cx,%ax
		je     _04e8b1_jump

	_04e8a0_jump:
		mov    %eax,%ecx
		movswl %ax,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ebx),%ax
		jne    _04e8a0_jump

	_04e8b1_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%ebp
		movswl %cx,%eax
		lea    (%eax,%eax,1),%edi
		lea    (%esi,%edi,1),%edx
		mov    0x000000(%ebp),%di
		mov    %di,(%edx)
		cmp    %di,%cx
		jne    _04e8e6_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		movl   $0x000000,0x000020(%edx,%eax,4)

	_04e8e6_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%edx
		mov    0x000034(%ebx),%ax
		mov    %ax,(%edx)
		movl   $0x000000,0x000020(%ebx)
		mov    %esi,_0c1b30_data
		pop    %ebp
		pop    %edi

	_04e907_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e90c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _04e907_jump
		jmp    _04e942_jump

	_04e926_jump:
		movl   $0x000001,0x000020(%edx)
		jmp    _04e936_jump

	_04e92f_jump:
		movl   $0x000000,0x000020(%edx)

	_04e936_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %si,%bx
		jge    _04e907_jump

	_04e942_jump:
		mov    _0c1b30_data,%ecx
		movswl %bx,%eax
		cmp    (%ecx,%eax,2),%bx
		je     _04e92f_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		shl    $0x000002,%eax
		mov    _09223b_data(%eax),%cl
		test   $0x000040,%cl
		jne    _04e976_jump
		test   $0x000020,%cl
		je     _04e926_jump
		mov    %edx,%eax
		call   _04e704_func
		test   %ax,%ax
		jne    _04e926_jump

	_04e976_jump:
		mov    %edx,%eax
		call   _04e880_func
		jmp    _04e936_jump



_04e980_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c3314_data,%ah
		mov    _0c3315_data,%dl
		mov    _0c1bcd_data,%bl
		xor    %cl,%cl
		and    $0x000048,%ah
		and    $0x000082,%dl
		and    $0x0000fe,%bl
		mov    %cl,_0c24fe_data
		mov    %ah,_0c3314_data
		mov    %dl,_0c3315_data
		mov    %bl,_0c1bcd_data
		mov    _0c3316_data,%dh
		mov    $0x000002,%bh
		and    $0x0000fe,%dh
		mov    %bh,_0c2501_data
		mov    %dh,_0c3316_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e9d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		xor    %ah,%ah
		mov    %ah,_0c2612_data
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000006,%eax
		sete   %al
		xor    %ah,%ah
		xor    %edx,%edx
		inc    %eax
		mov    %dx,_0cd0f4_data
		mov    _0c3315_data,%dl
		mov    %ax,_0c25b0_data
		test   $0x000002,%dl
		je     _04ea2c_jump
		mov    $0x000021,%ecx
		mov    _0c1bc2_data,%al
		mov    $_0c1b4c_data,%edi
		mov    $_0c1bd0_data,%esi
		mov    %al,_0c1c46_data
		rep movsl %ds:(%esi),%es:(%edi)

	_04ea2c_jump:
		mov    $0x000017,%esi
		mov    $0x000064,%edx
		mov    _0c1bcd_data,%al
		xor    %ebx,%ebx
		xor    %cl,%cl
		mov    %bx,_0c24ac_data
		mov    %bx,_0c24ae_data
		mov    %si,_0c1bac_data
		mov    %bx,_0c1b82_data
		mov    %bx,_0c1b84_data
		mov    %bx,_0c1b8c_data
		mov    %bx,_0c1b8e_data
		mov    %edx,_0c1b74_data
		mov    %cl,_0c1bb6_data
		mov    %cl,_0c1bb7_data
		or     $0x00000c,%al
		mov    $0x00000a,%ebx
		mov    $0x000050,%dh
		mov    $0xffffffff,%ecx
		mov    %al,_0c1bcd_data
		mov    $0x000002,%ah
		mov    %ebx,_0c1b78_data
		mov    %dh,_0c1bb4_data
		mov    %cx,_0c1b96_data
		mov    %ecx,%edi
		mov    %cx,_0c1b9e_data
		mov    $0x00004e,%bl
		mov    $0x000001,%ecx
		mov    %ah,_0c1bb9_data
		mov    %ah,_0c1bb8_data
		mov    %di,_0c1ba2_data
		xor    %dh,%dh
		mov    %bl,_0c1bb5_data
		mov    %ecx,_0c1b70_data
		mov    %dh,_0c1bc9_data
		mov    %dh,_0c1bcb_data
		mov    %dh,_0c1b00_data
		mov    %dh,_0c1afe_data
		mov    %dh,_0c259d_data
		mov    $0x000014,%bh
		mov    $0x000001,%cl
		xor    %dl,%dl
		mov    %bh,_0c1bc0_data
		mov    %cl,_0c259c_data
		mov    %dh,_0c259e_data
		mov    %dh,_0c25a3_data
		mov    %dh,_0c1b1e_data
		mov    %al,%bh
		mov    $0xffff8300,%eax
		mov    %dh,_0cd119_data
		mov    %ax,_0c25ac_data
		xor    %al,%al
		and    $0x0000bf,%bh
		xor    %ah,%ah
		mov    %bh,_0c1bcd_data
		mov    %ax,_0c25b4_data
		jmp    _04eb5a_jump

	_04eb45_jump:
		lea    0x000000(,%eax,2),%ebx
		mov    _0c1b74_data,%ax
		inc    %edx
		mov    %ax,_0c25b6_data(%ebx)

	_04eb5a_jump:
		movswl %dx,%eax
		cmp    $0x00000a,%eax
		jl     _04eb45_jump
		xor    %cl,%cl
		mov    (%esp),%al
		mov    %cl,_0c1f02_data
		mov    %cl,_0c1f04_data
		test   %al,%al
		je     _04eb7e_jump
		andb   $0x0000f7,_0c3314_data

	_04eb7e_jump:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _04eb98_jump
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _04ebb1_jump

	_04eb98_jump:
		cmpb   $0x000000,_0cdb18_data
		jne    _04ebb1_jump
		cmpb   $0x000000,_0c6970_data
		jne    _04ebb1_jump
		andb   $0x0000bf,_0c3314_data

	_04ebb1_jump:
		mov    _0c3316_data,%bh
		test   $0x000001,%bh
		je     _04ebe0_jump
		mov    _0c3315_data,%cl
		mov    %bh,%al
		and    $0x0000fd,%cl
		and    $0x000001,%al
		mov    %cl,_0c3315_data
		add    %al,%al
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,_0c3315_data
		call   _0506c0_jump

	_04ebe0_jump:
		andb   $0x0000e5,_0c3315_data
		cmpb   $0x000000,_0c215c_data
		je     _04ec28_jump
		mov    _0c1f4c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _04ec28_jump
		mov    _0c3315_data,%bl
		mov    _0c2520_data,%eax
		and    $0x00009f,%bl
		sar    $0x000010,%eax
		mov    %bl,_0c3315_data
		cmp    $0x000006,%eax
		jne    _04ec47_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _04ec47_jump
		jmp    _04ec42_jump

	_04ec28_jump:
		mov    _0c3315_data,%dl
		and    $0x00009f,%dl
		mov    %dl,_0c3315_data
		mov    %dl,%dh
		or     $0x000020,%dh
		mov    %dh,_0c3315_data

	_04ec42_jump:
		call   _0503e8_func

	_04ec47_jump:
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _04ec70_jump
		jmp    _04ed69_jump

	_04ec60_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _04ed69_jump

	_04ec70_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x000063,%ebx
		jne    _04ec60_jump
		xor    %esi,%esi
		mov    %esi,_0c1b70_data
		mov    _0c1bcd_data,%bh
		mov    _0c1b70_data,%al
		and    $0x0000fb,%bh
		and    $0x000001,%al
		mov    %bh,%cl
		shl    $0x000002,%al
		mov    %bh,_0c1bcd_data
		or     %al,%cl
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x0000a0,%eax
		mov    %ax,_0c24ac_data
		mov    0x00002c(%edx),%ax
		sub    $0x00000a,%eax
		mov    %ax,_0c24ae_data
		xor    %eax,%eax
		mov    _095b01_data,%al
		mov    %cl,_0c1bcd_data
		test   %eax,%eax
		jne    _04ecdc_jump
		call   _051eb0_func
		jmp    _04ed37_jump

	_04ecdc_jump:
		mov    _0c24ac_data,%ax
		mov    _0c2526_data,%cx
		cmp    %cx,%ax
		jl     _04ecf5_jump
		mov    %cx,_0c24ac_data

	_04ecf5_jump:
		mov    _0c24ae_data,%ax
		mov    _0c2524_data,%si
		cmp    %si,%ax
		jl     _04ed0e_jump
		mov    %si,_0c24ae_data

	_04ed0e_jump:
		mov    _0c24aa_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04ed23_jump
		xor    %edi,%edi
		mov    %di,_0c24ac_data

	_04ed23_jump:
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04ed37_jump
		xor    %eax,%eax
		mov    %ax,_0c24ae_data

	_04ed37_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%ebx
		mov    0x000068(%edx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1bb4_data,%al
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb5_data,%al
		sub    %eax,%edx
		mov    %ebx,_0c1b74_data
		mov    %edx,_0c1b78_data

	_04ed69_jump:
		cmpb   $0x000000,_0c11ae_data
		je     _04ed7e_jump
		mov    $_0c1b4c_data,%eax
		call   _01e6e4_func
		jmp    _04ed8e_jump

	_04ed7e_jump:
		xor    %eax,%eax

	_04ed80_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0c1bad_data(%eax)
		cmp    $0x000005,%eax
		jb     _04ed80_jump

	_04ed8e_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ed98_func:
		push   %edx
		and    $0x0000ff,%eax
		mov    _0921f8_data(%eax),%dl
		test   $0x000040,%dl
		je     _04edb5_jump
		test   $0x000008,%dl
		je     _04edb5_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_04edb5_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_04edbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000007,%eax
		je     _04ef3b_jump
		mov    _0c1b74_data,%si
		xor    %eax,%eax
		mov    _0c1b78_data,%dx
		mov    _0c1bb4_data,%al
		xor    %ebx,%ebx
		add    %eax,%esi
		xor    %eax,%eax
		mov    _0c1bb5_data,%bl
		mov    _0c1bae_data,%al
		add    %edx,%ebx
		testb  $0x000040,_0921f8_data(%eax)
		je     _04ee07_jump
		sub    $0x000008,%ebx

	_04ee07_jump:
		mov    _0c1b8c_data,%ax
		add    %eax,%eax
		movswl %bx,%ecx
		add    %eax,%esi
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _01e4d8_func
		mov    %al,0x00000c(%esp)
		lea    -0x000018(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _01e4d8_func
		mov    %al,(%esp)
		mov    %al,0x000004(%esp)
		lea    -0x000028(%ecx),%eax
		sar    $0x000004,%eax
		sub    $0x000038,%ecx
		movswl %ax,%edx
		mov    %ebx,%eax
		sar    $0x000004,%ecx
		call   _01e4d8_func
		mov    %al,0x000008(%esp)
		movswl %cx,%edx
		mov    %ebx,%eax
		call   _01e4d8_func
		mov    %al,%cl
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		mov    _0921f8_data(%eax),%dh
		xor    %ebx,%ebx
		test   $0x000010,%dh
		je     _04ee95_jump
		xor    %eax,%eax
		mov    (%esp),%al
		call   _04ed98_func
		test   %ax,%ax
		jne    _04ee95_jump
		mov    $0x000001,%ebx

	_04ee95_jump:
		test   %bx,%bx
		jne    _04ef0e_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b58_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1bb8_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _04ef0e_jump
		testb  $0x000002,_0c3315_data
		jne    _04ef0e_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		testb  $0x000010,_0921f8_data(%eax)
		je     _04eeec_jump
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		call   _04ed98_func
		test   %ax,%ax
		je     _04ef09_jump

	_04eeec_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		testb  $0x000010,_0921f8_data(%eax)
		je     _04ef0e_jump
		xor    %eax,%eax
		mov    %cl,%al
		call   _04ed98_func
		test   %ax,%ax
		jne    _04ef0e_jump

	_04ef09_jump:
		mov    $0x000001,%ebx

	_04ef0e_jump:
		test   %bx,%bx
		je     _04ef3b_jump
		xor    %ebx,%ebx
		mov    $0x000001,%eax
		mov    %bx,_0c1b8c_data
		mov    %bx,_0c25b4_data
		mov    %bx,_0c1b94_data
		call   _062ad4_func
		xor    %eax,%eax
		call   _062ad4_func

	_04ef3b_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ef44_func:
		push   %edx
		push   %edi
		xor    %edx,%edx
		mov    %dx,_0c24f0_data
		mov    %dx,_0c24f2_data
		mov    %dx,_0c1b8c_data
		mov    %dx,_0c1b8e_data
		call   _03e0a4_func
		test   %ax,%ax
		je     _04ef87_jump
		xor    %eax,%eax
		mov    _0c1b8c_data,%dx
		mov    _0c25b2_data,%al
		add    %eax,%edx
		mov    %dx,_0c1b8c_data
		jmp    _04efa8_jump

	_04ef87_jump:
		call   _03e030_func
		test   %ax,%ax
		je     _04efa8_jump
		xor    %eax,%eax
		mov    _0c1b8c_data,%di
		mov    _0c25b2_data,%al
		sub    %eax,%edi
		mov    %di,_0c1b8c_data

	_04efa8_jump:
		call   _03e118_func
		test   %ax,%ax
		je     _04efc9_jump
		xor    %eax,%eax
		mov    _0c25b2_data,%al
		mov    %eax,%edx
		mov    _0c1b8c_data,%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		jmp    _04efe7_jump

	_04efc9_jump:
		call   _03e18c_func
		test   %ax,%ax
		je     _04efed_jump
		xor    %edx,%edx
		mov    _0c1b8c_data,%eax
		mov    _0c25b2_data,%dl
		sar    $0x000010,%eax
		sar    %edx
		sub    %edx,%eax

	_04efe7_jump:
		mov    %ax,_0c1b8e_data

	_04efed_jump:
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04f000_jump
		call   _04df34_func
		jmp    _04f007_jump

	_04f000_jump:
		jge    _04f007_jump
		call   _04de58_func

	_04f007_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04f01a_jump
		call   _04e53c_func
		jmp    _04f021_jump

	_04f01a_jump:
		jle    _04f021_jump
		call   _04e4b8_func

	_04f021_jump:
		mov    $_0c1b4c_data,%eax
		call   _01df3c_func
		mov    _0c1b8c_data,%ax
		mov    %ax,_0c24f0_data
		mov    _0c1b8e_data,%ax
		mov    %ax,_0c24f2_data
		call   _02ca78_func
		pop    %edi
		pop    %edx
		ret    

_04f04c_switch:
		.long   _04f10a_case
		.long   _04f135_case
		.long   _04f164_case
		.long   _04f185_case




_04f05c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0c1b74_data,%di
		mov    _0c1b78_data,%ax
		mov    _0c2528_data,%cx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ax,(%esp)
		mov    %dx,_0c1b28_data
		mov    $0xffffffff,%edx
		test   %cx,%cx
		jg     _04f0a8_jump
		jmp    _04f0d2_jump

	_04f097_jump:
		mov    _0c2528_data,%si
		inc    %ebx
		cmp    %si,%bx
		jge    _04f0d2_jump

	_04f0a8_jump:
		movswl %bx,%eax
		mov    _0c2528_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%esi
		add    %esi,%eax
		xor    %ecx,%ecx
		mov    0x000060(%eax),%cx
		cmp    $0x000040,%ecx
		je     _04f227_jump

	_04f0d2_jump:
		mov    _0c1b26_data,%eax
		sar    $0x000010,%eax
		mov    $0x000001,%bl
		test   %eax,%eax
		jg     _04f0e7_jump
		decw   _0c1b28_data

	_04f0e7_jump:
		test   %bl,%bl
		je     _04f295_jump
		mov    _0c1b26_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04f241_jump
		mov    _0c1b28_data,%ax
		jmp    _04f24d_jump

	_04f10a_case:
		movswl %di,%ecx
		cmp    0x000028(%eax),%ecx
		jl     _04f097_jump
		mov    0x00003a(%eax),%ecx
		mov    _0c1b28_data,%si
		sar    $0x000010,%ecx
		inc    %esi
		sub    $0x0000c8,%ecx
		mov    %si,_0c1b28_data
		mov    %ecx,0x000028(%eax)
		jmp    _04f097_jump

	_04f135_case:
		movswl %di,%ecx
		cmp    0x000028(%eax),%ecx
		jl     _04f097_jump
		mov    0x00003a(%eax),%ecx
		mov    _0c1b28_data,%si
		sar    $0x000010,%ecx
		dec    %esi
		sub    $0x0000c8,%ecx
		mov    %si,_0c1b28_data
		mov    %ecx,0x000028(%eax)
		jmp    _04f097_jump

	_04f164_case:
		mov    -0x000002(%esp),%ecx
		mov    0x00002c(%eax),%ebp
		sar    $0x000010,%ecx
		cmp    %ebp,%ecx
		jl     _04f179_jump
		neg    %edx
		jmp    _04f097_jump

	_04f179_jump:
		movl   $0x002710,0x00002c(%eax)
		jmp    _04f097_jump

	_04f185_case:
		mov    _0c2590_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _04f1b6_jump
		imul   $0x000084,%ecx,%ecx
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x000076(%esi),%cl
		test   %ecx,%ecx
		jne    _04f097_jump
		mov    0x00004e(%esi),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jne    _04f097_jump

	_04f1b6_jump:
		mov    -0x000002(%esp),%ecx
		mov    0x00002c(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jl     _04f1eb_jump
		movswl %dx,%eax
		mov    %dx,_0c1b2a_data
		test   %eax,%eax
		jge    _04f1d4_jump
		neg    %eax

	_04f1d4_jump:
		mov    _0c1b2a_data,%dx
		cmp    $0x000001,%eax
		jne    _04f1e7_jump
		mov    $0x000002,%edx
		jmp    _04f1f2_jump

	_04f1e7_jump:
		neg    %edx
		jmp    _04f1f2_jump

	_04f1eb_jump:
		movl   $0x002710,0x00002c(%eax)

	_04f1f2_jump:
		mov    _0c2590_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _04f097_jump
		movswl %dx,%ecx
		cmp    $0x000002,%ecx
		je     _04f097_jump
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%ecx
		movw   $0x000002,0x000056(%ecx,%eax,1)
		jmp    _04f097_jump

	_04f227_jump:
		mov    0x000076(%eax),%cl
		cmp    $0x000003,%cl
		ja     _04f097_jump
		and    $0x0000ff,%ecx
		jmp    *%cs:_04f04c_switch(,%ecx,4)

	_04f241_jump:
		cmp    $0xffffffff,%eax
		jge    _04f253_jump
		mov    _0c1b28_data,%ax
		inc    %eax

	_04f24d_jump:
		mov    %ax,_0c24f0_data

	_04f253_jump:
		movswl %dx,%eax
		cmp    $0x000001,%eax
		jne    _04f266_jump
		movw   $0x00ffff,_0c24f2_data
		jmp    _04f295_jump

	_04f266_jump:
		cmp    $0x000002,%eax
		jne    _04f288_jump
		mov    _0c24ca_data,%ah
		test   %ah,%ah
		je     _04f280_jump
		movw   $0x00ffff,_0c24f2_data
		jmp    _04f288_jump

	_04f280_jump:
		xor    %al,%al
		mov    %ax,_0c24f2_data

	_04f288_jump:
		movswl %dx,%eax
		cmp    $0xfffffffe,%eax
		jne    _04f295_jump
		mov    $0xffffffff,%edx

	_04f295_jump:
		mov    %dx,_0c1b2a_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f2a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _01ac44_func
		call   _049e14_func
		mov    _0c51be_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _04f322_jump
		call   _039478_func
		mov    $0x00003c,%esi
		mov    _0c2522_data,%ax
		mov    _0c2520_data,%bx
		mov    _0c4764_data,%edx
		dec    %eax
		dec    %ebx
		shl    $0x000005,%eax
		sub    $0x000078,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %bx,%eax
		mov    _0c45c8_data(,%eax,2),%ebx
		mov    _0c4768_data,%eax
		push   %edx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		sar    $0x000010,%ebx
		lea    -0x000001(%ebx),%edx
		sub    %eax,%edx
		push   %edx
		push   $_0c0535_data
		push   $_0db258_data
		call   _079cfb_func
		add    $0x000010,%esp

	_04f322_jump:
		mov    _0c251e_data,%edx
		mov    _0c2520_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _06f660_func
		test   %al,%al
		je     _04f38c_jump
		push   $0x000003
		mov    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		mov    _0cd9f4_data,%eax
		xor    %ecx,%ecx
		call   _01a3ec_func
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x00006e,%ebx
		mov    $0x0000a0,%edx
		mov    _0cd9f8_data,%eax
		call   _01a3ec_func
		push   $0x000003
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0db258_data,%eax
		xor    %ecx,%ecx
		call   _01a3ec_func
		jmp    _04f4c4_jump

	_04f38c_jump:
		push   $0x000005
		mov    $0x000046,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c0542_data,%eax
		xor    %ecx,%ecx
		call   _01a3ec_func
		mov    _0c51be_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00003e,%eax
		jne    _04f45d_jump
		mov    $0x000050,%ebx
		xor    %ecx,%ecx
		jmp    _04f451_jump

	_04f3c1_jump:
		call   _0709ac_func
		mov    %eax,_0db250_data(,%edx,4)
		mov    %bx,0x000036(%eax)
		mov    _0db250_data(,%edx,4),%eax
		movw   $0x000032,0x000038(%eax)
		mov    _0db250_data(,%edx,4),%eax
		movl   $0x000001,0x000024(%eax)
		mov    $0x00001f,%eax
		call   _01d3cc_func
		mov    %eax,_0db254_data(,%edx,4)
		movl   $0x000001,0x000024(%eax)
		mov    _0db250_data(,%edx,4),%eax
		mov    _0db254_data(,%edx,4),%esi
		mov    0x000036(%eax),%ax
		mov    %ax,0x000036(%esi)
		mov    _0db250_data(,%edx,4),%eax
		mov    _0db254_data(,%edx,4),%esi
		mov    0x000038(%eax),%ax
		mov    %ax,0x000038(%esi)
		mov    _0db250_data(,%edx,4),%eax
		inc    %ecx
		call   _04b3f8_func
		mov    _0db254_data(,%edx,4),%eax
		add    $0x000020,%ebx
		call   _04b3f8_func
		call   _04d5a4_func

	_04f451_jump:
		movswl %cx,%edx
		cmp    $0x000001,%edx
		jl     _04f3c1_jump

	_04f45d_jump:
		mov    _0c51be_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00003e,%eax
		jle    _04f4c4_jump
		xor    %ebx,%ebx
		xor    %esi,%esi
		jmp    _04f471_jump

	_04f470_jump:
		inc    %ebx

	_04f471_jump:
		movswl %bx,%edx
		cmp    $0x000001,%edx
		jge    _04f4c4_jump
		mov    _0db250_data(,%edx,4),%eax
		call   _04b3f8_func
		mov    _0db254_data(,%edx,4),%eax
		call   _04b3f8_func
		mov    _0db250_data(,%edx,4),%eax
		call   _01ea90_func
		mov    _0db254_data(,%edx,4),%eax
		cmp    0x000024(%eax),%esi
		je     _04f4ae_jump
		call   _018b80_func

	_04f4ae_jump:
		movswl %bx,%eax
		mov    _0db250_data(,%eax,4),%eax
		cmp    0x000024(%eax),%esi
		je     _04f470_jump
		call   _018b80_func
		jmp    _04f470_jump

	_04f4c4_jump:
		mov    _0c51be_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		cmp    $0x0000f0,%eax
		jne    _04f4e4_jump
		mov    $_0c1b4c_data,%eax
		mov    $0x000001,%edx
		call   _06f8e4_func

	_04f4e4_jump:
		mov    _0c1b22_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _04f4f5_jump
		call   _039450_func

	_04f4f5_jump:
		mov    _0c51c0_data,%bx
		inc    %ebx
		mov    %edx,%eax
		mov    %bx,_0c51c0_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f50c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _04f531_jump

	_04f51d_jump:
		add    $0x000002,%edx
		inc    %eax
		mov    %si,-0x000002(%edx)

	_04f525_jump:
		movswl %ax,%ebx
		cmp    $0x000140,%ebx
		jl     _04f51d_jump
		inc    %ecx

	_04f531_jump:
		movswl %cx,%eax
		cmp    $0x000008,%eax
		jge    _04f550_jump
		imul   $0x000282,%eax,%edx
		mov    %esi,%eax
		mov    %si,_0c574e_data(%edx)
		add    $_0c54ce_data,%edx
		jmp    _04f525_jump

	_04f550_jump:
		call   _050cf0_func
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _04f579_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _04f579_jump
		mov    $0x00000b,%eax
		call   _05180c_jump

	_04f579_jump:
		xor    %ah,%ah
		xor    %dl,%dl
		xor    %ebx,%ebx
		mov    %ah,_0c25e1_data
		mov    %ah,_0cd10f_data
		mov    %ah,_0c51b5_data
		mov    %bx,_0c13a0_data
		mov    %bx,_0c13a2_data
		mov    %bx,_0c13a4_data
		mov    %ah,_0c13a6_data
		mov    _0c331d_data,%al
		xor    %dh,%dh
		shl    $0x000005,%al
		mov    %dx,_0c51c0_data
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,_0cd0f0_data
		mov    _0c2520_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %edx,_0c139c_data
		cmp    $0x000005,%eax
		jne    _04f607_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jne    _04f607_jump
		mov    $0x000020,%edi
		mov    $0x000138,%eax
		mov    %di,_0c24e6_data
		mov    %ax,_0c25d0_data
		mov    %ax,_0c2524_data

	_04f607_jump:
		xor    %bh,%bh
		mov    $0xfffffffe,%ecx
		mov    %bh,_0c6994_data
		mov    %ecx,_0c4768_data
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %ebx,_0c4764_data
		call   _049e00_func
		mov    $0xffffffff,%ebx
		mov    %cx,_0c248a_data
		mov    %cx,_0c24ac_data
		xor    %eax,%eax
		mov    %cx,_0c24ae_data
		mov    _095b01_data,%al
		mov    %bx,_0c1b80_data
		mov    %bx,_0c23c2_data
		test   %eax,%eax
		jne    _04f666_jump
		call   _051e0c_func
		jmp    _04f6e0_jump

	_04f666_jump:
		mov    _0c24e6_data,%ax
		shl    $0x000004,%eax
		sub    $0x0000c8,%eax
		mov    %ax,_0c2524_data
		mov    _0c24e4_data,%ax
		shl    $0x000004,%eax
		sub    $0x000131,%eax
		mov    %ax,_0c2526_data
		mov    _0c2524_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04f6a3_jump
		mov    %cx,_0c2526_data

	_04f6a3_jump:
		mov    _0c2522_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04f6b8_jump
		xor    %ebx,%ebx
		mov    %bx,_0c2524_data

	_04f6b8_jump:
		xor    %ecx,%ecx
		mov    _0c2526_data,%ax
		mov    %cx,_0c25ca_data
		mov    %ax,_0c25cc_data
		mov    _0c2524_data,%ax
		mov    %cx,_0c25ce_data
		mov    %ax,_0c25d0_data

	_04f6e0_jump:
		mov    $0xffffffff,%ebx
		mov    _0c2595_data,%dh
		xor    %edi,%edi
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    %di,_0c24f2_data
		mov    %di,_0c24f0_data
		mov    %di,_0c134c_data
		mov    %di,_0c134a_data
		mov    %di,_0c24f4_data
		mov    %di,_0c25b4_data
		mov    %di,_0c2598_data
		mov    %di,_0c259a_data
		mov    %di,_0c25f4_data
		xor    %al,%cl
		mov    %bx,_0c2504_data
		mov    %cl,_0c2594_data
		xor    %ah,%ch
		xor    %al,%al
		mov    %ch,_0c25fa_data
		mov    %al,_0c25a0_data
		mov    %al,_0c25a1_data
		mov    %al,_0c1b14_data
		test   %dh,%dh
		jne    _04f763_jump
		movb   $0x000040,_0c2502_data

	_04f763_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		call   _04e9d4_func
		cmpw   $0x000000,_0c51be_data
		jne    _04f7a0_jump
		cmpw   $0x000000,_0c24b8_data
		je     _04f7a0_jump
		cmpb   $0x000000,_0c2161_data
		je     _04f7a0_jump
		mov    $_0c1f08_data,%eax
		mov    _0c24fe_data,%dl
		call   _06a1fc_func
		mov    %dl,_0c24fe_data

	_04f7a0_jump:
		cmpw   $0x000000,_0c24b8_data
		jne    _04f832_jump
		mov    $0x000001,%esi
		mov    _0c23c0_data,%al
		mov    _0c1bcd_data,%cl
		mov    %al,_0c2161_data
		mov    %esi,_0c1b70_data
		and    $0x0000fb,%cl
		mov    _0c1b70_data,%al
		mov    %cl,_0c1bcd_data
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000002,%al
		or     %al,%ch
		mov    _0c24b8_data,%eax
		sar    $0x000010,%eax
		mov    %eax,_0c1b74_data
		mov    _0c24ba_data,%eax
		sar    $0x000010,%eax
		mov    %eax,_0c1b78_data
		mov    _0c24a8_data,%al
		inc    %al
		mov    %al,_0c24aa_data
		xor    %eax,%eax
		mov    _0c24a8_data,%al
		mov    %ch,_0c1bcd_data
		call   _0391dc_func
		mov    _0c24b4_data,%ax
		mov    %ax,_0c24ac_data
		mov    _0c24b6_data,%ax
		mov    %ax,_0c24ae_data
		jmp    _04f839_jump

	_04f832_jump:
		xor    %al,%al
		mov    %al,_0c51bc_data

	_04f839_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		call   _0545f4_func
		call   _04e90c_func
		call   _04e690_func
		call   _055644_func
		mov    _0c261c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _04f87e_jump
		mov    _0c261e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _04f87e_jump
		testb  $0x000002,_0c331d_data
		je     _04f87e_jump
		orb    $0x000004,_0c3315_data
		jmp    _04f885_jump

	_04f87e_jump:
		andb   $0x0000fb,_0c3315_data

	_04f885_jump:
		testb  $0x000004,_0c3315_data
		je     _04f893_jump
		call   _044258_func

	_04f893_jump:
		call   _04d810_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f8a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _049e5c_func
		call   _06f79c_func
		call   _01f76c_func
		call   _024d24_func
		mov    $0x000001,%edx
		mov    $0x000003,%ecx
		mov    $0x000002,%ah
		mov    $0xffffffff,%edi
		xor    %bl,%bl
		mov    %dx,_0c251c_data
		mov    %edx,%esi
		mov    %dx,_0c251e_data
		mov    %cx,_0c24f8_data
		mov    %ah,_0c1bc2_data
		mov    %bl,_0c2612_data
		mov    $0x000001,%dl
		mov    $0x0000a0,%eax
		mov    %si,_0c24b8_data
		xor    %bh,%bh
		mov    %dl,_0c1f00_data
		mov    $0x000005,%dh
		xor    %cl,%cl
		mov    %dh,_0cd104_data
		mov    $0x0000aa,%edx
		mov    %bl,_0cd10e_data
		call   _01d43c_func
		call   _04e980_func
		mov    $0x000005,%eax
		mov    %di,_0c1b28_data
		mov    %di,_0c1b2a_data
		mov    %bx,_0c24c0_data
		xor    %edx,%edx
		mov    %cl,_0c2596_data
		mov    %dx,_0c24be_data
		call   _061dd0_func
		movswl %ax,%edx
		add    %edx,%edx
		mov    _095ae2_data(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ax,_0cdb20_data
		cmp    $0x000005,%ebx
		jne    _04f99c_jump
		mov    _095aee_data(%edx),%edx
		sar    $0x000010,%edx
		cmp    $0x00000a,%edx
		jne    _04f99c_jump
		add    %esi,%eax
		mov    %ax,_0cdb20_data
		mov    _0cdb1e_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000006,%edx
		jne    _04f99c_jump
		xor    %ch,%ch
		mov    %cx,_0cdb20_data

	_04f99c_jump:
		mov    $0x000001,%ch
		xor    %edx,%edx
		xor    %ah,%ah
		xor    %esi,%esi
		mov    %ch,_0cd108_data
		mov    %ch,_0cd109_data
		mov    %edx,_0c4768_data
		mov    %ah,_0c11b0_data
		mov    %ah,_0cd118_data
		mov    %si,_0cdb22_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f9d0_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %dx,_0c251e_data
		mov    %bx,_0c251c_data
		pop    %edx
		pop    %ebx
		ret    



_04f9ec_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0ce53c_data,%eax
		mov    %eax,_0ce55c_data
		mov    _0ce540_data,%eax
		mov    %eax,_0ce560_data
		mov    _0ce534_data,%eax
		mov    %eax,_0ce554_data
		mov    _0ce538_data,%eax
		mov    %eax,_0ce558_data
		cmpb   $0x000000,_0c2595_data
		jne    _04facb_jump
		xor    %ebx,%ebx
		mov    %bx,_0c51d2_data
		call   _04a5f0_func
		cwtl   
		cmp    $0xfffffffe,%eax
		setne  %al
		xor    %ah,%ah
		mov    %ax,_0c51be_data
		test   %ax,%ax
		jne    _04fa58_jump
		mov    _0c24b6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _04fa58_jump
		call   _069fb0_func

	_04fa58_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _04f50c_func
		cmpw   $0x000000,_0c51be_data
		jne    _04fa83_jump
		mov    _0c24b6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _04fa83_jump
		mov    $_0c1f08_data,%edx
		xor    %eax,%eax
		call   _069fbc_func

	_04fa83_jump:
		cmpw   $0x000000,_0c24b8_data
		jne    _04fa9d_jump
		movw   $0x000001,_0c24b8_data
		call   _01d010_func
		jmp    _04faa5_jump

	_04fa9d_jump:
		xor    %dl,%dl
		mov    %dl,_0c51bc_data

	_04faa5_jump:
		call   _04e774_func
		mov    $0x000001,%edx
		xor    %eax,%eax
		mov    %dx,_0c25b0_data
		mov    $0x000010,%dh
		mov    %ax,_0c251c_data
		mov    %dh,_0c25b2_data
		call   _04d2ec_func

	_04facb_jump:
		pop    %edx
		pop    %ebx
		ret    



_04fad0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0c1b34_data,%esi
		xor    %edx,%edx
		mov    _0c1b38_data,%ax
		mov    %edx,(%esp)
		mov    %eax,0x000004(%esp)
		test   %ax,%ax
		jle    _04fbde_jump
		jmp    _04fb6e_jump

	_04fafb_jump:
		mov    0x000034(%esi),%dx
		movswl %dx,%ebx
		mov    _0c1f50_data(,%ebx,2),%ax
		cmp    %ax,%dx
		je     _04fb58_jump

	_04fb0f_jump:
		movswl %dx,%ecx
		imul   $0x000084,%ecx,%ebx
		mov    _0c1b30_data,%edi
		mov    _0c1f50_data(,%ecx,2),%ax
		mov    %ax,(%edi,%ecx,2)
		cmp    %ax,%dx
		je     _04fb3f_jump
		mov    _0c1b34_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _04fb4d_jump

	_04fb3f_jump:
		mov    _0c1b34_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_04fb4d_jump:
		mov    0x000034(%esi),%bx
		mov    %eax,%edx
		cmp    %bx,%ax
		jne    _04fb0f_jump

	_04fb58_jump:
		mov    (%esp),%ecx
		mov    0x000004(%esp),%edi
		inc    %ecx
		add    $0x000084,%esi
		mov    %ecx,(%esp)
		cmp    %di,%cx
		jge    _04fbde_jump

	_04fb6e_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		cmp    $0x0000a4,%ebx
		jne    _04fb58_jump
		testb  $0x000004,0x000081(%esi)
		je     _04fafb_jump
		mov    0x000052(%esi),%ax

	_04fb8d_jump:
		movswl %ax,%ebx
		lea    0x000000(,%ebx,2),%ecx
		mov    _0c1b30_data,%ebx
		mov    %eax,%edx
		mov    (%ecx,%ebx,1),%ax
		cmp    0x000052(%esi),%ax
		jne    _04fb8d_jump
		mov    0x000032(%esi),%ecx
		sar    $0x000010,%ecx
		mov    %ax,(%ebx,%ecx,2)
		movswl %dx,%ecx
		mov    0x000034(%esi),%ax
		mov    %ax,(%ebx,%ecx,2)
		imul   $0x000084,%ecx,%ebx
		mov    _0c1b34_data,%ecx
		movl   $0x000001,0x000020(%esi)
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _04fb58_jump

	_04fbde_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04fbe8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04fad0_func
		cmpw   $0x000000,_0c51be_data
		jne    _04fc1e_jump
		mov    _0c24b6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _04fc1e_jump
		xor    %eax,%eax
		mov    _0c2520_data,%al
		call   _0568a0_func
		cwtl   
		test   %eax,%eax
		jne    _04fc1e_jump
		call   _069fb0_func

	_04fc1e_jump:
		mov    _0c250a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _04fca0_jump
		cmpw   $0x000000,_0c251c_data
		jne    _04fc3f_jump
		cmpw   $0x000000,_0c251e_data
		je     _04fca0_jump

	_04fc3f_jump:
		mov    $0x000021,%ecx
		mov    $_0c1c54_data,%edi
		mov    $_0c1b4c_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0c1b4c_data,%edi
		mov    $_0c1bd0_data,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _04e9d4_func
		mov    _0c1cca_data,%al
		mov    %al,_0c1bc2_data
		mov    _0c1ccb_data,%al
		xor    %ebx,%ebx
		mov    %al,_0c1bc3_data
		mov    _0c1ccd_data,%al
		xor    %edx,%edx
		mov    %al,_0c1bc5_data
		mov    $_0c1b4c_data,%eax
		xor    %esi,%esi
		call   _01d6f8_func
		mov    %si,_0c25b0_data

	_04fca0_jump:
		cmpb   $0x000000,_0c259f_data
		je     _04fcae_jump
		call   _01f790_func

	_04fcae_jump:
		mov    _0c258e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _04fcc3_jump
		xor    %dl,%dl
		mov    %dl,_0c6971_data

	_04fcc3_jump:
		mov    $_0c6b44_data,%eax
		call   _075374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04fcd4_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c2502_data,%al
		test   %eax,%eax
		jne    _04fcf1_jump
		call   _04fad0_func
		xor    %eax,%eax
		call   _04f50c_func
		call   _04e774_func

	_04fcf1_jump:
		cmpw   $0x000000,_0c51be_data
		jne    _04fd1b_jump
		mov    _0c24b6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _04fd1b_jump
		mov    $_0c2164_data,%edx
		xor    %eax,%eax
		call   _069fbc_func
		xor    %ah,%ah
		mov    %ah,_0c11b0_data

	_04fd1b_jump:
		pop    %edx
		ret    



_04fd20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0c1b2c_data
		je     _04fde0_jump
		mov    _0c250a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _04fdc5_jump
		mov    $0x000021,%ecx
		mov    $_0c1bd0_data,%edi
		mov    $_0c1b4c_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%esi
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %esi,%eax
		mov    _0c1b34_data,%esi
		shl    $0x000002,%eax
		mov    $_0c1b4c_data,%edi
		add    %eax,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _04e9d4_func
		mov    _0c1c46_data,%al
		mov    %al,_0c1bc2_data
		mov    _0c1c47_data,%al
		mov    $0x000006,%edx
		mov    %al,_0c1bc3_data
		mov    _0c1c49_data,%al
		xor    %ebx,%ebx
		mov    %al,_0c1bc5_data
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    $0x000002,%edx
		xor    %bl,%bl
		mov    %dx,_0c25b0_data
		mov    %bl,_0c1b2c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04fdc5_jump:
		cmpb   $0x000000,_0c94a4_data
		je     _04fde0_jump
		mov    $0x000001,%eax
		xor    %dh,%dh
		call   _04e9d4_func
		mov    %dh,_0c1b2c_data

	_04fde0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04fde8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cdb18_data
		je     _04fe48_jump
		mov    $0x000201,%edx
		sub    %eax,%eax
		in     (%dx),%al
		test   $0x000010,%al
		je     _04fe19_jump
		test   $0x000020,%al
		je     _04fe19_jump
		test   $0x000040,%al
		je     _04fe19_jump
		test   $0x000080,%al
		je     _04fe19_jump
		xor    %eax,%eax
		mov    _0cdb18_data,%al
		cmp    $0x000003,%eax
		jne    _04fe48_jump

	_04fe19_jump:
		movb   $0x000002,_0cdb18_data
		mov    $0x000001,%edx
		mov    $0x000001,%eax
		mov    %dx,_0c251e_data
		call   _03dffc_func
		test   %al,%al
		je     _04fe48_jump
		mov    $0x000001,%dh
		mov    %dh,_0c2596_data
		mov    %dh,_0c2595_data

	_04fe48_jump:
		call   _049e14_func
		call   _04a618_func
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    %ax,_0c1b20_data
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		mov    %ax,_0c1b22_data
		mov    _0c24ac_data,%ax
		mov    %ax,_0c24b0_data
		mov    _0c24ae_data,%ax
		mov    %ax,_0c24b2_data
		xor    %eax,%eax
		mov    _095b00_data,%al
		cmp    $0x000001,%eax
		jne    _04fec5_jump
		xor    %eax,%eax
		mov    _0c24ac_data,%dx
		mov    _0c1bb4_data,%al
		add    $0x000140,%edx
		sub    %eax,%edx
		sub    $0x000024,%edx
		mov    %dx,_0ce5a0_data
		mov    _0c24ac_data,%dx
		add    $0x000014,%edx
		sub    %eax,%edx
		mov    %dx,_0ce5a2_data
		jmp    _04ff03_jump

	_04fec5_jump:
		mov    _0c24ac_data,%ax
		xor    %edx,%edx
		mov    _0ce540_data,%bx
		mov    _0c1bb4_data,%dl
		add    %ebx,%eax
		sub    %edx,%eax
		sub    $0x000024,%eax
		mov    _0ce53c_data,%cx
		mov    %ax,_0ce5a0_data
		mov    _0c24ac_data,%ax
		add    %ecx,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    %ax,_0ce5a2_data

	_04ff03_jump:
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _04ff2a_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0db26e_data,%al
		mov    %al,0x00007e(%edx)

	_04ff2a_jump:
		testb  $0x000004,_0c3315_data
		je     _04ff38_jump
		call   _044330_func

	_04ff38_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _04ff53_jump
		mov    _0c259a_data,%ax
		mov    %ax,_0c2598_data
		jmp    _04ff5c_jump

	_04ff53_jump:
		xor    %esi,%esi
		mov    %si,_0c2598_data

	_04ff5c_jump:
		call   _04d810_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04ff68_switch:
		.long   _04ffcc_case
		.long   _04ffd3_case
		.long   _04fff7_case
		.long   _04fff7_case
		.long   _04fffe_case




_04ff7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _06f734_func
		call   _06f690_func
		call   _04d794_func
		testb  $0x000004,_0c1bcd_data
		je     _050285_jump
		xor    %eax,%eax
		mov    _0c2502_data,%al
		cmp    $0x000040,%eax
		je     _04ffb2_jump
		movw   $0x00ffff,_0c1b96_data

	_04ffb2_jump:
		mov    _0c25b0_data,%ax
		dec    %eax
		cmp    $0x000004,%ax
		ja     _050005_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_04ff68_switch(,%eax,4)

	_04ffcc_case:
		call   _067820_func
		jmp    _05000a_jump

	_04ffd3_case:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000006,%eax
		je     _04fff0_jump
		mov    $0x000006,%edx
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func

	_04fff0_jump:
		call   _0674d8_func
		jmp    _05000a_jump

	_04fff7_case:
		call   _066e90_func
		jmp    _05000a_jump

	_04fffe_case:
		call   _0279cc_func
		jmp    _05000a_jump

	_050005_jump:
		call   _04ef44_func

	_05000a_jump:
		mov    _0c2526_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _050029_jump
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _050029_jump
		call   _04f05c_func
		jmp    _05003c_jump

	_050029_jump:
		mov    $0xffffffff,%ecx
		mov    %cx,_0c1b28_data
		mov    %cx,_0c1b2a_data

	_05003c_jump:
		call   _04d97c_func
		mov    $_0c1b4c_data,%eax
		call   _01df3c_func
		mov    _0c1b28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _050070_jump
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000ff,%eax
		jne    _050070_jump
		xor    %edi,%edi
		mov    %di,_0c24f2_data

	_050070_jump:
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _050081_jump
		call   _04dfe0_func

	_050081_jump:
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _050230_jump
		mov    _0c1b26_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0500dd_jump
		mov    _0c1b8c_data,%ax
		mov    %ax,_0c1b28_data
		mov    _0c24f0_data,%ax
		mov    %ax,_0c1b8c_data
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0500ca_jump
		call   _04e4b8_func
		jmp    _0500d1_jump

	_0500ca_jump:
		jge    _0500d1_jump
		call   _04e53c_func

	_0500d1_jump:
		mov    _0c1b28_data,%ax
		mov    %ax,_0c1b8c_data

	_0500dd_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000e,%eax
		je     _050209_jump
		cmp    $0x000001,%al
		jb     _0501e6_jump
		jbe    _050142_jump
		cmp    $0x000005,%al
		je     _0501bd_jump
		jmp    _0501ee_jump

	_050104_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _050112_jump
		neg    %eax

	_050112_jump:
		cmp    $0x000001,%eax
		jg     _05012e_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _050125_jump
		neg    %eax

	_050125_jump:
		cmp    $0x000001,%eax
		jle    _0501ee_jump

	_05012e_jump:
		mov    $0x000006,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		jmp    _0501ee_jump

	_050142_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _050150_jump
		neg    %eax

	_050150_jump:
		cmp    $0x000001,%eax
		jg     _05017c_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _050163_jump
		neg    %eax

	_050163_jump:
		cmp    $0x000001,%eax
		jg     _05017c_jump
		mov    $0x000007,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		jmp    _0501ee_jump

	_05017c_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05018a_jump
		neg    %eax

	_05018a_jump:
		cmp    $0x000004,%eax
		jle    _0501ee_jump
		mov    _0c2524_data,%eax
		mov    _0c24aa_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000064,%eax
		cmp    %eax,%edx
		jge    _0501ee_jump
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		call   _01cf4c_func
		jmp    _0501ee_jump

	_0501bd_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0501cb_jump
		neg    %eax

	_0501cb_jump:
		cmp    $0x000004,%eax
		jg     _0501ee_jump
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		call   _01cf4c_func
		jmp    _0501ee_jump

	_0501e6_jump:
		test   %al,%al
		je     _050104_jump

	_0501ee_jump:
		mov    _0c24ac_data,%ax
		cmp    _0c2526_data,%ax
		jne    _050209_jump
		mov    _0c24ac_data,%ax
		mov    %ax,_0c25ca_data

	_050209_jump:
		mov    _0c24ee_data,%edx
		mov    _0c1ef0_data,%eax
		sar    $0x000010,%edx
		mov    0x000028(%eax),%ebx
		add    %edx,%ebx
		mov    _0c24f0_data,%edx
		mov    0x00002c(%eax),%ecx
		sar    $0x000010,%edx
		mov    %ebx,0x000028(%eax)
		add    %edx,%ecx
		mov    %ecx,0x00002c(%eax)

	_050230_jump:
		mov    $_0c24f2_data,%edx
		mov    $_0c24f0_data,%eax
		call   _04a800_func
		call   _04d2ec_func
		call   _04d9d8_func
		mov    _0c1b94_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _0502af_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x00007e(%eax),%dl
		mov    %dl,_0db26e_data
		xor    %edx,%edx
		mov    _0db26e_data,%dl
		cmp    $0x000003,%edx
		jle    _0502af_jump
		movb   $0x000003,0x00007e(%eax)
		jmp    _0502af_jump

	_050285_jump:
		mov    $0xffffffff,%edx
		call   _04d97c_func
		mov    %dx,_0c1b2a_data
		call   _04d2ec_func
		mov    _0c2502_data,%dl
		test   %dl,%dl
		je     _0502af_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0c2502_data

	_0502af_jump:
		call   _04e5bc_func
		cmpw   $0x000000,_0c51d2_data
		je     _0502eb_jump
		mov    _0c24b0_data,%ecx
		mov    _0c24ae_data,%ebx
		mov    _0c24ac_data,%edx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _050ed0_func
		call   _051620_func

	_0502eb_jump:
		call   _07125c_func
		testb  $0x000002,_0c3315_data
		je     _0503e0_jump
		xor    %eax,%eax
		call   _01d52c_func
		testb  $0x000001,_0c3316_data
		je     _05032d_jump
		mov    _0c1ba0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _050342_jump
		mov    _0c1ba4_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000100,%eax
		je     _05032d_jump
		test   %eax,%eax
		jne    _050342_jump

	_05032d_jump:
		mov    $0x000100,%ecx
		mov    $0x0000c8,%al
		mov    %cx,_0c1ba6_data
		mov    %al,_0c11af_data
		jmp    _050386_jump

	_050342_jump:
		testb  $0x000001,_0c3316_data
		je     _050386_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000005,%eax
		je     _050386_jump
		xor    %eax,%eax
		mov    _0c11af_data,%al
		test   %eax,%eax
		jne    _05037c_jump
		mov    _0c1ba4_data,%ebx
		sar    $0x000010,%ebx
		sub    $0x000005,%ebx
		cmp    %ebx,%eax
		jge    _050374_jump
		mov    %ebx,%eax

	_050374_jump:
		mov    %ax,_0c1ba6_data
		jmp    _050386_jump

	_05037c_jump:
		mov    %al,%ch
		dec    %ch
		mov    %ch,_0c11af_data

	_050386_jump:
		testb  $0x000008,_0c1bcd_data
		je     _0503b7_jump
		xor    %eax,%eax
		mov    _0c1b84_data,%dx
		mov    _0c1bb5_data,%al
		add    %edx,%eax
		xor    %ebx,%ebx
		movswl %ax,%edx
		mov    _0c1b82_data,%ax
		mov    _0c1bb4_data,%bl
		sub    $0x000008,%eax
		add    %ebx,%eax
		jmp    _0503da_jump

	_0503b7_jump:
		xor    %eax,%eax
		mov    _0c1b84_data,%si
		mov    _0c1bb5_data,%al
		add    %esi,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0c1b82_data,%di
		mov    _0c1bb4_data,%al
		add    %edi,%eax

	_0503da_jump:
		cwtl   
		call   _01d43c_func

	_0503e0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0503e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1ee8_data,%edx
		mov    _0c1eec_data,%ebx
		mov    _0c3315_data,%al
		and    $0x00009f,%al
		testb  $0x000060,_0c3315_data
		jne    _05044b_jump
		mov    %al,_0c3315_data
		or     $0x000020,%al
		mov    %al,_0c3315_data
		test   %ebx,%ebx
		je     _050431_jump
		movl   $0x000001,0x000024(%ebx)
		mov    0x000081(%ebx),%cl
		movb   $0x000003,0x00007e(%ebx)
		or     $0x000004,%cl
		mov    %cl,0x000081(%ebx)

	_050431_jump:
		test   %edx,%edx
		je     _05048c_jump
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%ch
		movb   $0x000001,0x00007e(%edx)
		or     $0x000004,%ch
		jmp    _050486_jump

	_05044b_jump:
		mov    %al,_0c3315_data
		test   %ebx,%ebx
		je     _05046e_jump
		movl   $0x000000,0x000024(%ebx)
		mov    0x000081(%ebx),%cl
		movb   $0x000003,0x00007e(%ebx)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%ebx)

	_05046e_jump:
		test   %edx,%edx
		je     _05048c_jump
		movl   $0x000000,0x000024(%edx)
		mov    0x000081(%edx),%ch
		movb   $0x000003,0x00007e(%edx)
		and    $0x0000fb,%ch

	_050486_jump:
		mov    %ch,0x000081(%edx)

	_05048c_jump:
		mov    %ebx,_0c1eec_data
		mov    %edx,_0c1ee8_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05049c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c3315_data,%ah
		test   $0x000002,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000fd,%dl
		add    %al,%al
		mov    %dl,_0c3315_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0c3315_data
		test   $0x000002,%dh
		je     _050519_jump
		mov    $0x000021,%ecx
		mov    $_0c1bd0_data,%edi
		mov    $_0c1b4c_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0c250c_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %esi,%eax
		mov    _0c1b34_data,%esi
		shl    $0x000002,%eax
		mov    $_0c1b4c_data,%edi
		add    %eax,%esi
		mov    _0c1bd4_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0xffffffff,%edx
		mov    %eax,_0c1b50_data
		mov    $0x0000ce,%eax
		jmp    _050556_jump

	_050519_jump:
		mov    $0x000021,%ecx
		mov    $_0c1c54_data,%edi
		mov    $_0c1bd0_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0c1bd0_data,%edi
		mov    $_0c1b4c_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0c1b4c_data,%edi
		mov    $_0c1c54_data,%esi
		mov    $0xffffffff,%edx
		mov    $0x0000cf,%eax
		rep movsl %ds:(%esi),%es:(%edi)

	_050556_jump:
		call   _068654_func
		mov    _0c1c06_data,%ax
		mov    %ax,_0c1b82_data
		mov    _0c1c08_data,%ax
		mov    %ax,_0c1b84_data
		mov    _0c1c10_data,%ax
		mov    %ax,_0c1b8c_data
		mov    _0c1c12_data,%ax
		mov    %ax,_0c1b8e_data
		mov    _0c1bf8_data,%eax
		mov    %eax,_0c1b74_data
		mov    _0c1bfc_data,%eax
		mov    %eax,_0c1b78_data
		mov    _0c1c38_data,%al
		mov    %al,_0c1bb4_data
		mov    _0c1c39_data,%al
		mov    %al,_0c1bb5_data
		mov    _0c1c44_data,%al
		mov    %al,_0c1bc0_data
		mov    _0c1c3a_data,%al
		mov    _0c1bcd_data,%bh
		mov    %al,_0c1bb6_data
		mov    _0c1c3b_data,%al
		and    $0x0000f7,%bh
		mov    %al,_0c1bb7_data
		mov    _0c1c51_data,%al
		mov    %bh,%cl
		and    $0x000008,%al
		or     %al,%cl
		mov    _0c1c20_data,%ax
		mov    %ax,_0c1b9c_data
		mov    _0c1c3d_data,%al
		mov    %al,_0c1bb9_data
		mov    _0c1c3c_data,%al
		mov    $0x000017,%edx
		mov    %al,_0c1bb8_data
		mov    _0c1c1a_data,%ax
		mov    %dx,_0c1bac_data
		mov    %ax,_0c1b96_data
		mov    _0c1c22_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0c1b9e_data
		mov    _0c1c26_data,%ax
		mov    %bh,_0c1bcd_data
		mov    %ax,_0c1ba2_data
		mov    _0c1c4d_data,%al
		mov    %edx,_0c1b70_data
		mov    %al,_0c1bc9_data
		mov    _0c1c4f_data,%al
		mov    $0x000002,%edx
		mov    %al,_0c1bcb_data
		mov    _0c1c46_data,%al
		mov    %cl,_0c1bcd_data
		mov    %al,_0c1bc2_data
		mov    _0c1c47_data,%al
		mov    %cl,%ch
		mov    %al,_0c1bc3_data
		mov    _0c1c49_data,%al
		or     $0x000004,%ch
		mov    %al,_0c1bc5_data
		mov    $_0c1b4c_data,%eax
		mov    %ch,_0c1bcd_data
		call   _023f98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		je     _0506b7_jump
		mov    $0x00000f,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_0506b7_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0506c0_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c3315_data,%ah
		shl    $0x000006,%ah
		shr    $0x000007,%ah
		mov    _0c3316_data,%al
		and    $0x000001,%al
		cmp    %al,%ah
		jne    _050997_jump
		mov    _0c3316_data,%ah
		test   $0x000001,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000fe,%dl
		mov    %dl,_0c3316_data
		mov    %dl,%dh
		mov    _0c3315_data,%bl
		or     %al,%dh
		and    $0x0000fd,%bl
		mov    %dh,%al
		mov    %bl,_0c3315_data
		and    $0x000001,%al
		mov    %bl,%bh
		add    %al,%al
		or     %al,%bh
		mov    %dh,_0c3316_data
		mov    %bh,_0c3315_data
		test   $0x000001,%dh
		je     _0507c9_jump
		mov    $0x000021,%ecx
		mov    $_0c1bd0_data,%edi
		mov    _0c250c_data,%edx
		mov    $_0c1b4c_data,%esi
		sar    $0x000010,%edx
		mov    %bh,%bl
		mov    %edx,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %edx,%eax
		mov    _0c1b34_data,%esi
		shl    $0x000002,%eax
		mov    $_0c1b4c_data,%edi
		add    %eax,%esi
		and    $0x000084,%bl
		mov    _0c3314_data,%dh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0c1bd4_data,%eax
		mov    $_0c3318_data,%edi
		mov    $_0c3314_data,%esi
		mov    %eax,_0c1b50_data
		mov    _0c1bd8_data,%eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %eax,_0c1b54_data
		mov    %bl,_0c3315_data
		mov    _0c3316_data,%bh
		mov    _0c1bd0_data,%eax
		or     $0x000001,%bh
		mov    %eax,_0c1b4c_data
		mov    %bh,%al
		and    $0x000041,%dh
		and    $0x000001,%al
		mov    %bl,%cl
		add    %al,%al
		mov    %dh,_0c3314_data
		or     %al,%cl
		mov    %bh,_0c3316_data
		mov    %cl,_0c3315_data
		jmp    _050837_jump

	_0507c9_jump:
		mov    $0x000021,%ecx
		mov    $_0c1c54_data,%edi
		mov    $_0c1bd0_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0c1bd0_data,%edi
		mov    $_0c1b4c_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0c1b4c_data,%edi
		mov    $_0c1c54_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %al,%al
		mov    $_0c3314_data,%edi
		mov    $_0c3318_data,%esi
		and    $0x000001,%al
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _0c3315_data,%ah
		and    $0x0000fd,%ah
		mov    %ah,_0c3315_data
		add    %al,%al
		mov    _0c3316_data,%ch
		mov    %ah,%dl
		and    $0x0000fe,%ch
		or     %al,%dl
		mov    %ch,_0c3316_data
		mov    %dl,_0c3315_data

	_050837_jump:
		mov    _0c1c06_data,%ax
		mov    %ax,_0c1b82_data
		mov    _0c1c08_data,%ax
		mov    %ax,_0c1b84_data
		mov    _0c1c10_data,%ax
		mov    %ax,_0c1b8c_data
		mov    _0c1c12_data,%ax
		mov    %ax,_0c1b8e_data
		mov    _0c1bf8_data,%eax
		mov    %eax,_0c1b74_data
		mov    _0c1bfc_data,%eax
		mov    %eax,_0c1b78_data
		mov    _0c1c38_data,%al
		mov    %al,_0c1bb4_data
		mov    _0c1c39_data,%al
		mov    %al,_0c1bb5_data
		mov    _0c1c44_data,%al
		mov    %al,_0c1bc0_data
		mov    _0c1c3a_data,%al
		mov    %al,_0c1bb6_data
		mov    _0c1c3b_data,%al
		mov    _0c1bcd_data,%ch
		mov    %al,_0c1bb7_data
		mov    _0c1c51_data,%al
		and    $0x0000f7,%ch
		and    $0x000008,%al
		mov    %ch,%ah
		mov    %ch,_0c1bcd_data
		or     %al,%ah
		mov    %ah,_0c1bcd_data
		mov    _0c1c20_data,%ax
		mov    %ax,_0c1b9c_data
		mov    _0c1c3d_data,%al
		mov    %al,_0c1bb9_data
		mov    _0c1c3c_data,%al
		mov    %al,_0c1bb8_data
		mov    _0c1c1a_data,%ax
		mov    $0x000017,%edx
		mov    %ax,_0c1b96_data
		mov    _0c1c22_data,%ax
		mov    %dx,_0c1bac_data
		mov    %ax,_0c1b9e_data
		mov    _0c1c26_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0c1ba2_data
		mov    _0c1c4d_data,%al
		mov    %edx,_0c1b70_data
		mov    %al,_0c1bc9_data
		mov    _0c1c4f_data,%al
		mov    _0c1bcd_data,%dl
		mov    %al,_0c1bcb_data
		mov    _0c1c46_data,%al
		or     $0x000004,%dl
		mov    %al,_0c1bc2_data
		mov    _0c1c47_data,%al
		mov    %dl,_0c1bcd_data
		mov    %al,_0c1bc3_data
		mov    _0c1c49_data,%al
		mov    $0x000002,%edx
		mov    %al,_0c1bc5_data
		mov    $_0c1b4c_data,%eax
		call   _023f98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		je     _050997_jump
		mov    $0x00000f,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_050997_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0509a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0c2612_data,%al
		cmp    $0x000003,%eax
		je     _050ad0_jump
		cmp    $0x000002,%eax
		jne    _0509e0_jump
		call   _049e14_func
		call   _05759c_func
		xor    %edx,%edx
		mov    $_0c1b4c_data,%eax
		mov    %dx,_0c24f0_data
		mov    %dx,_0c24f2_data
		call   _04b3f8_func
		jmp    _0509e5_jump

	_0509e0_jump:
		call   _027e10_func

	_0509e5_jump:
		cmpw   $0x000000,_0c51d2_data
		je     _050a1c_jump
		mov    _0c24b0_data,%ecx
		mov    _0c24ae_data,%ebx
		mov    _0c24ac_data,%edx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _050ed0_func
		call   _051620_func

	_050a1c_jump:
		mov    _0c23c0_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c248a_data,%si
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %si,%si
		jle    _050ad0_jump
		jmp    _050a72_jump

	_050a4b_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0c23c0_data(,%eax,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0c1b34_data,%eax
		mov    _0c248a_data,%di
		add    %eax,%edx
		cmp    %di,%bx
		jge    _050ad0_jump

	_050a72_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000008,_09223b_data(,%eax,4)
		jne    _050abd_jump
		cmp    $0x0000a1,%eax
		jne    _050a93_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000017,%eax
		je     _050abd_jump

	_050a93_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000053,%eax
		jne    _050aa8_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000001,%eax
		je     _050abd_jump

	_050aa8_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000021,%eax
		jne    _050a4b_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000023,%eax
		je     _050a4b_jump

	_050abd_jump:
		mov    %edx,%eax
		call   _04b3f8_func
		mov    %edx,%eax
		call   _01ea90_func
		jmp    _050a4b_jump

	_050ad0_jump:
		call   _04d2ec_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050b30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpw   $0x000000,_0c51d2_data
		je     _050b90_jump
		xor    %esi,%esi

	_050b40_jump:
		mov    _0c24b0_data,%ecx
		mov    _0c24ae_data,%ebx
		mov    _0c24ac_data,%edx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _050ed0_func
		call   _051620_func
		call   _049e14_func
		mov    _0c24ac_data,%ax
		mov    %ax,_0c24b0_data
		mov    _0c24ae_data,%ax
		inc    %esi
		mov    %ax,_0c24b2_data
		cmp    $0x000064,%esi
		jl     _050b40_jump

	_050b90_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050b98_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x0001ff,%eax
		mov    $0x000007,%edx
		call   _061dd0_func
		xor    %ebx,%ebx
		mov    %eax,%ecx

	_050bae_jump:
		movswl %dx,%eax
		add    %eax,%eax
		cmp    _0c51d8_data(%eax),%cx
		jle    _050bc8_jump
		mov    $0x000001,%ebx
		add    %bx,_0c51e8_data(%eax)

	_050bc8_jump:
		movswl %bx,%eax
		dec    %edx
		test   %eax,%eax
		je     _050bae_jump
		movswl %dx,%eax
		add    %eax,%eax
		mov    _0c51ea_data(%eax),%dx
		cmp    _0c51fa_data(%eax),%dx
		jle    _050bef_jump
		mov    %edx,%ecx
		dec    %ecx
		mov    %cx,_0c51ea_data(%eax)

	_050bef_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050bf4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%edx
		mov    $0x00000f,%ebx
		mov    $0x000019,%ecx
		mov    $0x00001e,%esi
		mov    $0x000023,%edi
		mov    $0x000028,%eax
		mov    %dx,_0c51e8_data
		mov    %bx,_0c51ea_data
		mov    %cx,_0c51ec_data
		mov    %si,_0c51ee_data
		mov    %di,_0c51f0_data
		mov    %ax,_0c51f2_data
		mov    $0x00002b,%edx
		mov    $0x000035,%ebx
		mov    %dx,_0c51f4_data
		mov    %bx,_0c51f6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050c60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x0001ff,%eax
		mov    $0x000007,%edx
		call   _061dd0_func
		xor    %ebx,%ebx
		mov    %eax,%esi

	_050c77_jump:
		movswl %dx,%eax
		add    %eax,%eax
		cmp    _0c51d8_data(%eax),%si
		jl     _050c9e_jump
		mov    _0c51e6_data(%eax),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jle    _050c9e_jump
		mov    $0x000001,%ebx
		sub    %bx,_0c51e8_data(%eax)

	_050c9e_jump:
		movswl %bx,%eax
		dec    %edx
		test   %eax,%eax
		jne    _050cad_jump
		movswl %dx,%eax
		test   %eax,%eax
		jge    _050c77_jump

	_050cad_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		jne    _050ce9_jump
		mov    $0x000007,%eax
		xor    %ebx,%ebx

	_050cbc_jump:
		movswl %ax,%edx
		add    %edx,%edx
		mov    _0c51e6_data(%edx),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jle    _050cda_jump
		mov    $0x000001,%ebx
		sub    %bx,_0c51e8_data(%edx)

	_050cda_jump:
		movswl %bx,%edx
		dec    %eax
		test   %edx,%edx
		jne    _050ce9_jump
		movswl %ax,%edx
		test   %edx,%edx
		jge    _050cbc_jump

	_050ce9_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050cf0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    $0x000014,%edx
		mov    $0x00001e,%ebx
		mov    $0x000032,%ecx
		mov    $0x00003c,%esi
		mov    $0x000046,%edi
		mov    $0x000050,%eax
		mov    %dx,_0c51f8_data
		mov    %bx,_0c51fa_data
		mov    %cx,_0c51fc_data
		mov    %si,_0c51fe_data
		mov    %di,_0c5200_data
		mov    %ax,_0c5202_data
		mov    $0x000060,%edx
		mov    $0x00006a,%ebx
		mov    $0xffffffc0,%edi
		xor    %ecx,%ecx
		mov    %dx,_0c5204_data
		mov    %bx,_0c5206_data
		mov    %cx,0x000008(%esp)
		mov    %cx,0x000004(%esp)
		mov    %di,(%esp)
		mov    $0x0002bc,%ebp
		jmp    _050d88_jump

	_050d74_jump:
		mov    (%esp),%ecx
		mov    0x000004(%esp),%esi
		add    $0x000020,%ecx
		inc    %esi
		mov    %cx,(%esp)
		mov    %si,0x000004(%esp)

	_050d88_jump:
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		cmp    $0x000008,%ecx
		jge    _050eb6_jump
		xor    %eax,%eax
		mov    -0x000002(%esp),%ebx
		mov    %ax,_0c51e8_data(,%ecx,2)
		mov    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,_0c51d8_data(,%ecx,2)
		mov    (%esp),%eax
		sar    $0x000010,%ebx
		mov    %ax,0x00000c(%esp)
		mov    %ebx,%eax
		call   _01d56c_func
		mov    $0x0000c8,%edx
		mov    %ax,_0c5218_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d56c_func
		xor    %edx,%edx
		mov    %ax,_0c5238_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d534_func
		mov    $0x000140,%edx
		mov    %ax,_0c5208_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d534_func
		xor    %edx,%edx
		mov    %ax,_0c5228_data(,%ecx,2)
		mov    %edx,0x000010(%esp)
		jmp    _050e41_jump

	_050e0f_jump:
		mov    0x000006(%esp),%ebx
		mov    _0c51d4_data,%edx
		sar    $0x000010,%ebx
		mov    %cx,(%edx,%ebx,8)
		mov    0x00000c(%esp),%eax
		mov    %di,0x000002(%edx,%ebx,8)
		mov    %ax,0x000004(%edx,%ebx,8)
		mov    0x000008(%esp),%edi
		mov    0x000010(%esp),%eax
		inc    %edi
		inc    %eax
		mov    %di,0x000008(%esp)
		mov    %eax,0x000010(%esp)

	_050e41_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000010(%esp),%eax
		cmp    _0c51f8_data(,%edx,2),%ax
		jge    _050d74_jump

	_050e5a_jump:
		mov    %ebp,%eax
		mov    0x00000a(%esp),%ebx
		call   _061dd0_func
		mov    %eax,%ecx
		mov    $0x000190,%eax
		sar    $0x000010,%ebx
		call   _061dd0_func
		movswl %cx,%edx
		mov    %eax,%edi
		mov    %ebx,%eax
		sub    $0x000096,%edi
		call   _01d4b4_func
		mov    %eax,%esi
		movswl %di,%edx
		mov    %ebx,%eax
		movswl %si,%ebx
		call   _01d4f0_func
		cmp    $0x000140,%ebx
		jge    _050e5a_jump
		test   %ebx,%ebx
		jle    _050e5a_jump
		movswl %ax,%ebx
		cmp    $0x0000c8,%ebx
		jge    _050e5a_jump
		test   %ebx,%ebx
		jg     _050e0f_jump
		jmp    _050e5a_jump

	_050eb6_jump:
		xor    %edx,%edx
		mov    %dx,_0c45bc_data
		mov    %dx,_0c45be_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050ed0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    %eax,0x000038(%esp)
		mov    %edx,%edi
		mov    %ebx,0x000004(%esp)
		mov    %ecx,0x000034(%esp)
		mov    _0c45be_data,%ax
		mov    %eax,0x000008(%esp)
		mov    _0c45bc_data,%ax
		mov    %ax,0x00000c(%esp)
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%esi
		mov    0x000008(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,_0c45be_data
		mov    _0c45bc_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%ebp
		mov    %eax,0x000014(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %edx,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		movswl %bx,%eax
		test   %eax,%eax
		jge    _050f5e_jump
		neg    %eax

	_050f5e_jump:
		cmp    $0x000001,%eax
		jne    _050f86_jump
		xor    %eax,%eax
		mov    _0c24cc_data,%al
		test   %eax,%eax
		jne    _050f86_jump
		mov    _0c45ba_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _050f84_jump
		mov    $0x000001,%eax
		jg     _050f84_jump
		neg    %eax

	_050f84_jump:
		add    %eax,%esi

	_050f86_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _050f8f_jump
		neg    %eax

	_050f8f_jump:
		cmp    $0x000002,%eax
		jne    _050fb7_jump
		xor    %eax,%eax
		mov    _0c24ca_data,%al
		test   %eax,%eax
		jne    _050fb7_jump
		mov    _0c45ba_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _050fb5_jump
		mov    $0x000001,%eax
		jg     _050fb5_jump
		neg    %eax

	_050fb5_jump:
		add    %eax,%esi

	_050fb7_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _050fc0_jump
		neg    %eax

	_050fc0_jump:
		cmp    $0x000003,%eax
		jne    _050fe9_jump
		xor    %eax,%eax
		mov    _0c24cc_data,%al
		cmp    $0x000003,%eax
		jge    _050fe9_jump
		mov    _0c45ba_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _050fe7_jump
		mov    $0x000001,%eax
		jg     _050fe7_jump
		neg    %eax

	_050fe7_jump:
		add    %eax,%esi

	_050fe9_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _050ff2_jump
		neg    %eax

	_050ff2_jump:
		cmp    $0x000001,%eax
		jne    _051022_jump
		xor    %eax,%eax
		mov    _0c24cc_data,%al
		test   %eax,%eax
		jne    _051022_jump
		mov    _0c45bc_data,%eax
		sar    $0x000010,%eax
		mov    0x000014(%esp),%ebx
		cmp    $0x000000,%eax
		je     _05101c_jump
		mov    $0x000001,%eax
		jg     _05101c_jump
		neg    %eax

	_05101c_jump:
		add    %eax,%ebx
		mov    %ebx,0x000014(%esp)

	_051022_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _05102b_jump
		neg    %eax

	_05102b_jump:
		cmp    $0x000002,%eax
		jne    _05105b_jump
		xor    %eax,%eax
		mov    _0c24ca_data,%al
		test   %eax,%eax
		jne    _05105b_jump
		mov    _0c45bc_data,%eax
		sar    $0x000010,%eax
		mov    0x000014(%esp),%ecx
		cmp    $0x000000,%eax
		je     _051055_jump
		mov    $0x000001,%eax
		jg     _051055_jump
		neg    %eax

	_051055_jump:
		add    %eax,%ecx
		mov    %ecx,0x000014(%esp)

	_05105b_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _051064_jump
		neg    %eax

	_051064_jump:
		cmp    $0x000003,%eax
		jne    _051095_jump
		xor    %eax,%eax
		mov    _0c24cc_data,%al
		cmp    $0x000003,%eax
		jge    _051095_jump
		mov    _0c45bc_data,%eax
		sar    $0x000010,%eax
		mov    0x000014(%esp),%edx
		cmp    $0x000000,%eax
		je     _05108f_jump
		mov    $0x000001,%eax
		jg     _05108f_jump
		neg    %eax

	_05108f_jump:
		add    %eax,%edx
		mov    %edx,0x000014(%esp)

	_051095_jump:
		mov    $0x0000aa,%edx
		mov    $0x0000a0,%eax
		call   _01d43c_func
		mov    0x000034(%esp),%eax
		mov    $0xffffffc0,%ecx
		sub    %edi,%eax
		mov    0x000038(%esp),%edi
		mov    %eax,0x000010(%esp)
		mov    0x000004(%esp),%eax
		xor    %ebx,%ebx
		sub    %edi,%eax
		mov    %bx,0x000018(%esp)
		add    %esi,%eax
		mov    %cx,0x00001c(%esp)
		mov    %eax,0x000030(%esp)
		jmp    _0510e7_jump

	_0510d1_jump:
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%edx
		inc    %eax
		add    $0x000020,%edx
		mov    %ax,0x000018(%esp)
		mov    %dx,0x00001c(%esp)

	_0510e7_jump:
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x0000c0,%eax
		jge    _0511be_jump
		mov    0x000016(%esp),%edx
		sar    $0x000010,%edx
		mov    _0c51d6_data(,%edx,2),%eax
		mov    0x000014(%esp),%ecx
		sar    $0x000010,%eax
		mov    _0c51d4_data,%ebx
		shl    $0x000003,%eax
		mov    _0c5238_data(,%edx,2),%si
		add    %ebx,%eax
		mov    0x000010(%esp),%ebx
		mov    _0c51d8_data(,%edx,2),%di
		add    %ecx,%ebx
		mov    %edi,(%esp)
		mov    %ebx,0x000024(%esp)
		mov    0x000030(%esp),%ebx
		add    _0c51e8_data(,%edx,2),%di
		mov    %ebx,0x000020(%esp)
		mov    _0c5218_data(,%edx,2),%bx
		mov    _0c5208_data(,%edx,2),%cx
		mov    %ebx,0x00002c(%esp)
		mov    _0c5228_data(,%edx,2),%bx
		mov    (%esp),%edx
		mov    %edi,0x000028(%esp)
		jmp    _051199_jump

	_05116b_jump:
		cmp    %di,%cx
		jle    _051173_jump
		mov    %bx,(%eax)

	_051173_jump:
		mov    0x000002(%eax),%di
		cmp    %di,%si
		jge    _051186_jump
		mov    0x00002c(%esp),%edi
		mov    %di,0x000002(%eax)
		jmp    _051191_jump

	_051186_jump:
		cmp    0x00002c(%esp),%di
		jge    _051191_jump
		mov    %si,0x000002(%eax)

	_051191_jump:
		mov    0x000028(%esp),%edi
		inc    %edx
		add    $0x000008,%eax

	_051199_jump:
		cmp    %di,%dx
		jge    _0510d1_jump
		mov    0x000020(%esp),%edi
		add    %di,(%eax)
		mov    0x000024(%esp),%edi
		add    %di,0x000002(%eax)
		mov    (%eax),%di
		cmp    %di,%bx
		jge    _05116b_jump
		mov    %cx,(%eax)
		jmp    _051173_jump

	_0511be_jump:
		mov    0x000008(%esp),%eax
		mov    %ax,_0c45be_data
		mov    0x00000c(%esp),%eax
		mov    %ax,_0c45bc_data
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _0511f9_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %ax,_0c259a_data

	_0511f9_jump:
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_051200_func:
		push   %ebx
		mov    %ax,_0c5248_data
		xor    %ebx,%ebx
		cwtl   
		mov    %bx,_0c524a_data
		mov    %dx,_0c524c_data(,%eax,2)
		pop    %ebx
		ret    

	_05121b_jump:
		cmp    $0x000001,%edx
		jne    _05123d_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000003,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		jmp    _051593_jump

	_05123d_jump:
		cmp    $0x000002,%edx
		jne    _051263_jump
		movw   $0x000004,(%eax)
		add    %edx,%eax
		movw   $0x000003,(%eax)
		add    %edx,%eax
		movw   $0x000200,(%eax)
		add    %edx,%eax
		movw   $0x000000,(%eax)
		add    %edx,%eax
		jmp    _05159b_jump

	_051263_jump:
		cmp    $0x000003,%edx
		jne    _0512c3_jump
		movswl %cx,%edx
		cmp    $0x000008,%edx
		je     _051277_jump
		movw   $0x000004,(%eax)
		jmp    _05127c_jump

	_051277_jump:
		movw   $0x000002,(%eax)

	_05127c_jump:
		add    $0x000002,%eax
		mov    %ecx,%esi
		movswl %cx,%edx
		add    %ecx,%esi
		lea    0x000002(%eax),%edi
		mov    %esi,0x000004(%esp)
		lea    0x000004(%eax),%esi
		cmp    $0x000008,%edx
		jle    _0512a3_jump
		movw   $0x000008,(%eax)
		mov    0x000004(%esp),%eax
		sub    $0x000010,%eax
		jmp    _0512b9_jump

	_0512a3_jump:
		jge    _051593_jump
		mov    0x000004(%esp),%edx
		movw   $0x000009,(%eax)
		mov    $0x000010,%eax
		sub    %edx,%eax

	_0512b9_jump:
		mov    %ax,(%edi)
		mov    %esi,%eax
		jmp    _051593_jump

	_0512c3_jump:
		cmp    $0x000004,%edx
		jne    _051311_jump
		movswl %cx,%edx
		test   %edx,%edx
		je     _0512d6_jump
		movw   $0x000004,(%eax)
		jmp    _0512db_jump

	_0512d6_jump:
		movw   $0x000002,(%eax)

	_0512db_jump:
		add    $0x000002,%eax
		lea    0x000002(%eax),%esi
		movswl %cx,%edx
		lea    0x000004(%eax),%edi
		test   %edx,%edx
		jle    _0512f6_jump
		movw   $0x000008,(%eax)
		mov    %ecx,%eax
		add    %ecx,%eax
		jmp    _051307_jump

	_0512f6_jump:
		jge    _051593_jump
		movw   $0x000009,(%eax)
		mov    %ecx,%eax
		neg    %eax
		add    %eax,%eax

	_051307_jump:
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _051593_jump

	_051311_jump:
		add    $0x000002,%eax
		cmp    $0x000005,%edx
		jne    _051378_jump
		movswl %bx,%edx
		cmp    $0xfffffff8,%edx
		je     _05132c_jump
		movw   $0x000004,_0c52ce_data
		jmp    _051335_jump

	_05132c_jump:
		movw   $0x000002,_0c52ce_data

	_051335_jump:
		mov    %ebx,%edx
		movswl %bx,%esi
		add    %ebx,%edx
		lea    0x000002(%eax),%edi
		mov    %edx,(%esp)
		lea    0x000004(%eax),%edx
		cmp    $0xfffffff8,%esi
		jle    _051359_jump
		movw   $0x000006,(%eax)
		mov    (%esp),%eax
		add    $0x000010,%eax
		jmp    _05136e_jump

	_051359_jump:
		jge    _051593_jump
		mov    (%esp),%esi
		movw   $0x000007,(%eax)
		mov    $0xfffffff0,%eax
		sub    %esi,%eax

	_05136e_jump:
		mov    %ax,(%edi)
		mov    %edx,%eax
		jmp    _051593_jump

	_051378_jump:
		cmp    $0x000006,%edx
		jne    _0513dd_jump
		movswl %bx,%edx
		cmp    $0x000008,%edx
		je     _051390_jump
		movw   $0x000004,_0c52ce_data
		jmp    _051399_jump

	_051390_jump:
		movw   $0x000002,_0c52ce_data

	_051399_jump:
		mov    %ebx,%esi
		movswl %bx,%edx
		add    %ebx,%esi
		lea    0x000002(%eax),%edi
		mov    %esi,0x00000c(%esp)
		lea    0x000004(%eax),%esi
		cmp    $0x000008,%edx
		jle    _0513bd_jump
		movw   $0x000006,(%eax)
		mov    0x00000c(%esp),%eax
		sub    $0x000010,%eax
		jmp    _0513d3_jump

	_0513bd_jump:
		jge    _051593_jump
		mov    0x00000c(%esp),%edx
		movw   $0x000007,(%eax)
		mov    $0x000010,%eax
		sub    %edx,%eax

	_0513d3_jump:
		mov    %ax,(%edi)
		mov    %esi,%eax
		jmp    _051593_jump

	_0513dd_jump:
		cmp    $0x000007,%edx
		jne    _051440_jump
		movswl %bx,%edx
		cmp    $0xfffffff0,%edx
		je     _0513f5_jump
		movw   $0x000004,_0c52ce_data
		jmp    _0513fe_jump

	_0513f5_jump:
		movw   $0x000002,_0c52ce_data

	_0513fe_jump:
		movswl %bx,%edi
		lea    0x000002(%eax),%ebp
		mov    %ebx,%edx
		lea    0x000004(%eax),%esi
		add    %ebx,%edx
		cmp    $0xfffffff0,%edi
		jle    _051423_jump
		add    $0x000020,%edx
		movw   $0x000006,(%eax)
		mov    %esi,%eax
		mov    %dx,0x000000(%ebp)
		jmp    _051593_jump

	_051423_jump:
		jge    _051593_jump
		movw   $0x000007,(%eax)
		mov    $0xffffffe0,%eax
		sub    %edx,%eax
		mov    %ax,0x000000(%ebp)
		mov    %esi,%eax
		jmp    _051593_jump

	_051440_jump:
		cmp    $0x000008,%edx
		jne    _0514a5_jump
		movswl %bx,%edx
		cmp    $0x000010,%edx
		je     _051458_jump
		movw   $0x000004,_0c52ce_data
		jmp    _051461_jump

	_051458_jump:
		movw   $0x000002,_0c52ce_data

	_051461_jump:
		mov    %ebx,%esi
		movswl %bx,%edx
		add    %ebx,%esi
		lea    0x000002(%eax),%edi
		mov    %esi,0x000010(%esp)
		lea    0x000004(%eax),%esi
		cmp    $0x000010,%edx
		jle    _051485_jump
		movw   $0x000006,(%eax)
		mov    0x000010(%esp),%eax
		sub    $0x000020,%eax
		jmp    _05149b_jump

	_051485_jump:
		jge    _051593_jump
		mov    0x000010(%esp),%edx
		movw   $0x000007,(%eax)
		mov    $0x000020,%eax
		sub    %edx,%eax

	_05149b_jump:
		mov    %ax,(%edi)
		mov    %esi,%eax
		jmp    _051593_jump

	_0514a5_jump:
		cmp    $0x000009,%edx
		jne    _0514f8_jump
		movswl %bx,%edx
		test   %edx,%edx
		je     _0514bc_jump
		movw   $0x000004,_0c52ce_data
		jmp    _0514c5_jump

	_0514bc_jump:
		movw   $0x000002,_0c52ce_data

	_0514c5_jump:
		lea    0x000002(%eax),%esi
		movswl %bx,%edx
		lea    0x000004(%eax),%edi
		test   %edx,%edx
		jle    _0514dd_jump
		movw   $0x000006,(%eax)
		mov    %ebx,%eax
		add    %ebx,%eax
		jmp    _0514ee_jump

	_0514dd_jump:
		jge    _051593_jump
		movw   $0x000007,(%eax)
		mov    %ebx,%eax
		neg    %eax
		add    %eax,%eax

	_0514ee_jump:
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _051593_jump

	_0514f8_jump:
		cmp    $0x00000a,%edx
		jne    _051579_jump
		movswl %cx,%edx
		cmp    $0xfffffff0,%edx
		je     _051514_jump
		movw   $0x000006,_0c52ce_data
		jmp    _05151d_jump

	_051514_jump:
		movw   $0x000004,_0c52ce_data

	_05151d_jump:
		mov    %ecx,%edi
		movswl %cx,%edx
		add    %ecx,%edi
		lea    0x000002(%eax),%esi
		mov    %edi,0x000008(%esp)
		lea    0x000004(%eax),%edi
		cmp    $0xfffffff0,%edx
		jle    _051543_jump
		movw   $0x000008,(%eax)
		mov    0x000008(%esp),%eax
		add    $0x000020,%eax
		jmp    _051555_jump

	_051543_jump:
		jge    _05155a_jump
		mov    0x000008(%esp),%edx
		movw   $0x000009,(%eax)
		mov    $0xffffffe0,%eax
		sub    %edx,%eax

	_051555_jump:
		mov    %ax,(%esi)
		mov    %edi,%eax

	_05155a_jump:
		movw   $0x000000,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		movw   $0x000009,(%eax)
		add    $0x000002,%eax
		movw   $0x000020,(%eax)
		jmp    _0515a0_jump

	_051579_jump:
		cmp    $0x00000b,%edx
		jne    _0515a0_jump
		movw   $0x000004,_0c52ce_data
		movw   $0x00000a,(%eax)
		add    $0x000004,%eax
		mov    %si,-0x000002(%eax)

	_051593_jump:
		movw   $0x000000,(%eax)
		add    $0x000002,%eax

	_05159b_jump:
		movw   $0x007fff,(%eax)

	_0515a0_jump:
		mov    $0x000001,%esi
		mov    _0c52d0_data,%edx
		mov    _0c52ce_data,%eax
		mov    %bx,_0c45bc_data
		mov    %cx,_0c45be_data
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %si,_0c52cc_data
		call   _051200_func
		mov    _0c52cc_data,%di
		add    $0x000002,%edi
		mov    _0c45bc_data,%bx
		mov    %di,_0c52cc_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0515f4_switch:
		.long   _0516f2_case
		.long   _05165e_case
		.long   _051671_case
		.long   _05167b_case
		.long   _051691_case
		.long   _0516a4_case
		.long   _051685_case
		.long   _051699_case
		.long   _0516ad_case
		.long   _0516c1_case
		.long   _0516d5_case




_051620_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c52cc_data,%cx
		mov    _0c5248_data,%ax
		cmp    $0x00000a,%ax
		ja     _0516f2_case
		and    $0x00ffff,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    _0c45bc_data,%dx
		mov    _0c45bc_data,%ax
		inc    %edx
		dec    %eax
		jmp    *%cs:_0515f4_switch(%ebx)

	_05165e_case:
		xor    %eax,%eax
		mov    %ax,_0c45bc_data
		mov    %ax,_0c45be_data
		jmp    _0516f2_case

	_051671_case:
		call   _050b98_func
		jmp    _0516f2_case

	_05167b_case:
		call   _050c60_func
		jmp    _0516f2_case

	_051685_case:
		xor    %edx,%edx
		mov    _0c24ca_data,%dl
		test   %edx,%edx
		jne    _0516f2_case

	_051691_case:
		mov    %ax,_0c45bc_data
		jmp    _0516f2_case

	_051699_case:
		xor    %eax,%eax
		mov    _0c24ca_data,%al
		test   %eax,%eax
		jne    _0516f2_case

	_0516a4_case:
		mov    %dx,_0c45bc_data
		jmp    _0516f2_case

	_0516ad_case:
		xor    %eax,%eax
		mov    _0c24ca_data,%al
		test   %eax,%eax
		jne    _0516f2_case
		decw   _0c45be_data
		jmp    _0516f2_case

	_0516c1_case:
		xor    %eax,%eax
		mov    _0c24ca_data,%al
		test   %eax,%eax
		jne    _0516f2_case
		incw   _0c45be_data
		jmp    _0516f2_case

	_0516d5_case:
		mov    $0xfffffff8,%edx
		mov    $0x000008,%ebx
		mov    %dx,_0c45bc_data
		mov    %bx,_0c45be_data
		call   _050bf4_func

	_0516f2_case:
		mov    _0c5246_data,%eax
		sar    $0x000010,%eax
		mov    _0c524a_data,%bx
		lea    0x000000(,%eax,2),%edx
		mov    _0c52cc_data,%cx
		inc    %ebx
		mov    _0c524c_data(%edx),%si
		mov    %bx,_0c524a_data
		cmp    %si,%bx
		jne    _051762_jump
		movswl %cx,%eax
		inc    %ecx
		mov    _0c52ce_data(,%eax,2),%bx
		movswl %cx,%eax
		mov    _0c52ce_data(,%eax,2),%ax
		inc    %ecx
		movswl %ax,%edx
		movswl %bx,%eax
		mov    %cx,_0c52cc_data
		call   _051200_func
		mov    _0c52cc_data,%cx
		mov    _0c52ce_data,%di
		cmp    %di,%cx
		jne    _051762_jump
		xor    %edi,%ecx

	_051762_jump:
		mov    %cx,_0c52cc_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_051770_switch:
		.long   _0517c5_case
		.long   _0517cc_case
		.long   _0517d3_case
		.long   _0517da_case
		.long   _0517e1_case
		.long   _0517e8_case
		.long   _0517ef_case
		.long   _0517f6_case
		.long   _0517fd_case
		.long   _051804_case
		.long   _05185e_case
		.long   _0517c1_case




_0517a0_func:
		andb   $0x0000fb,0x000081(%eax)
		mov    0x00006c(%eax),%al
		sub    $0x000015,%al
		cmp    $0x00000b,%al
		ja     _05185e_case
		and    $0x0000ff,%eax
		jmp    *%cs:_051770_switch(,%eax,4)

	_0517c1_case:
		xor    %eax,%eax
		jmp    _05180c_jump

	_0517c5_case:
		mov    $0x000001,%eax
		jmp    _05180c_jump

	_0517cc_case:
		mov    $0x000002,%eax
		jmp    _05180c_jump

	_0517d3_case:
		mov    $0x000003,%eax
		jmp    _05180c_jump

	_0517da_case:
		mov    $0x000004,%eax
		jmp    _05180c_jump

	_0517e1_case:
		mov    $0x000005,%eax
		jmp    _05180c_jump

	_0517e8_case:
		mov    $0x000006,%eax
		jmp    _05180c_jump

	_0517ef_case:
		mov    $0x000007,%eax
		jmp    _05180c_jump

	_0517f6_case:
		mov    $0x000008,%eax
		jmp    _05180c_jump

	_0517fd_case:
		mov    $0x000009,%eax
		jmp    _05180c_jump

	_051804_case:
		mov    $0x00000a,%eax
		lea    0x000000(%eax),%eax

	_05180c_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0c45bc_data,%bx
		mov    _0c45be_data,%cx
		mov    %eax,%edx
		mov    $_0c52ce_data,%eax
		mov    $0x000001,%esi
		movswl %dx,%edx
		mov    %si,_0c51d2_data
		test   %edx,%edx
		jne    _05121b_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000002,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		jmp    _051593_jump

	_05185e_case:
		ret    



_051c14_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    _0c24ec_data,%eax
		mov    %ebx,0x00000c(%edx)
		mov    %eax,(%edx)
		mov    _0c24e8_data,%edx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _074d70_func
		mov    $0x000008,%edx
		mov    %eax,0x000004(%ecx)
		mov    %esi,%eax
		call   _074d70_func
		mov    _0c24e8_data,%edx
		xor    %esi,%esi
		mov    %eax,0x000008(%ecx)
		test   %edx,%edx
		jle    _051cdc_jump
		xor    %eax,%eax
		xor    %edx,%edx

	_051c5f_jump:
		mov    (%ecx),%ebx
		mov    (%edx,%ebx,1),%bx
		and    $0x00ffff,%ebx
		mov    0x00000c(%ecx),%edi
		mov    _0caa7c_data(,%ebx,4),%ebx
		add    %ebx,%edi
		mov    %edi,(%esp)
		mov    0x000004(%ecx),%edi
		mov    (%esp),%ebp
		mov    %ebp,(%edi,%eax,1)
		imul   $0x000120,_0ce5a8_data,%edi
		cmp    %edi,%ebx
		ja     _051c9f_jump
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000100(%ebx),%ebx
		jmp    _051cab_jump

	_051c9f_jump:
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000200(%ebx),%ebx

	_051cab_jump:
		cmp    $0xaaaaaaaa,%ebx
		jne    _051cb7_jump
		mov    $0x000001,%bl
		jmp    _051cc5_jump

	_051cb7_jump:
		cmp    $0x55555555,%ebx
		jne    _051cc3_jump
		xor    %bl,%bl
		jmp    _051cc5_jump

	_051cc3_jump:
		mov    $0x000002,%bl

	_051cc5_jump:
		mov    (%ecx),%edi
		add    $0x000004,%eax
		inc    %esi
		mov    %bl,0x000004(%edx,%edi,1)
		mov    _0c24e8_data,%ebx
		add    $0x000006,%edx
		cmp    %ebx,%esi
		jl     _051c5f_jump

	_051cdc_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_051ce4_func:
		mov    _0c24e4_data,%dx
		mov    %dx,0x000016(%eax)
		mov    _0c24e6_data,%dx
		mov    %dx,0x000018(%eax)
		mov    %eax,%eax



_051cfc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0c24aa_data,%ecx
		mov    _0ce53c_data,%ebx
		sar    $0x000010,%ecx
		add    %ebx,%ecx
		mov    _0c24ac_data,%ebx
		mov    _0ce534_data,%esi
		sar    $0x000010,%ebx
		add    %esi,%ebx
		mov    0x000014(%edx),%edx
		mov    %ebx,%esi
		sar    $0x000010,%edx
		sar    $0x000004,%esi
		imul   %edx,%esi
		sub    $0x000008,%ecx
		mov    %ecx,%edx
		mov    0x000008(%eax),%eax
		sar    $0x000004,%edx
		xor    %ch,%ch
		add    %esi,%edx
		and    $0x00000f,%cl
		mov    %dx,0x000006(%eax)
		mov    _0ce53c_data,%dx
		xor    %bh,%bh
		sub    %ecx,%edx
		and    $0x00000f,%bl
		mov    %dx,(%eax)
		mov    _0ce534_data,%dx
		sub    %ebx,%edx
		movswl (%eax),%ebx
		mov    %dx,0x000002(%eax)
		mov    _0ce540_data,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    (%eax),%edx
		mov    _0ce538_data,%ecx
		sar    $0x000010,%edx
		sub    %edx,%ecx
		mov    %ecx,%edx
		test   $0x00000f,%bl
		setne  %cl
		and    $0x0000ff,%ecx
		sar    $0x000004,%ebx
		add    %ecx,%ebx
		mov    %bl,0x000004(%eax)
		test   $0x00000f,%dl
		setne  %bl
		and    $0x0000ff,%ebx
		sar    $0x000004,%edx
		add    %ebx,%edx
		mov    %dl,0x000005(%eax)
		mov    (%eax),%ax
		xor    %ah,%ah
		and    $0x000003,%al
		mov    $0x000004,%edx
		cwtl   
		mov    _0cdf34_data,%ebx
		sub    %eax,%edx
		add    %edx,%ebx
		mov    %edx,_0cdf38_data
		mov    %ebx,_0cdf2c_data
		mov    %ebx,_0cd000_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051dd8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x0000c8,%ebx
		mov    $0x000004,%ecx
		xor    %edx,%edx
		mov    $0x000140,%esi
		mov    %edx,_0ce534_data
		mov    %ebx,_0ce538_data
		mov    %ecx,_0ce53c_data
		mov    %esi,_0ce540_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051e0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c24e4_data,%cx
		shl    $0x000004,%ecx
		mov    _0ce540_data,%bx
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    _0ce538_data,%dx
		mov    %eax,%ebx
		mov    _0c24e6_data,%ax
		sub    $0x000140,%ecx
		shl    $0x000004,%eax
		mov    %cx,_0ce564_data
		mov    %eax,%esi
		sub    $0x0000c8,%eax
		sub    %edx,%esi
		mov    %ax,_0ce566_data
		movswl %bx,%eax
		mov    %esi,%edx
		test   %eax,%eax
		jge    _051e5f_jump
		xor    %ebx,%ebx

	_051e5f_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _051e68_jump
		xor    %edx,%edx

	_051e68_jump:
		mov    _0ce53c_data,%ax
		neg    %eax
		add    $0x000008,%eax
		mov    %ax,_0c25ca_data
		mov    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,_0c25cc_data
		mov    _0ce534_data,%ax
		neg    %eax
		mov    %dx,_0c25d0_data
		mov    %ax,_0c25ce_data
		mov    %bx,_0c2526_data
		mov    %dx,_0c2524_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051eb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c24ac_data,%bx
		mov    _0c24ae_data,%cx
		mov    _0ce53c_data,%eax
		movswl %bx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _051ed9_jump
		mov    _0ce53c_data,%bx
		neg    %ebx

	_051ed9_jump:
		mov    _0c2526_data,%dx
		cmp    %dx,%bx
		jle    _051ee7_jump
		mov    %edx,%ebx

	_051ee7_jump:
		mov    _0ce534_data,%eax
		movswl %cx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _051efe_jump
		mov    _0ce534_data,%cx
		neg    %ecx

	_051efe_jump:
		mov    _0c2524_data,%si
		cmp    %si,%cx
		jle    _051f0c_jump
		mov    %esi,%ecx

	_051f0c_jump:
		mov    %cx,_0c24ae_data
		mov    %bx,_0c24ac_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05214c_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _0c2526_data,%di
		mov    %eax,%esi
		sub    _0ce53c_data,%ax
		mov    %eax,(%esp)
		mov    _0ce540_data,%ax
		sub    %edx,%eax
		mov    %eax,0x000004(%esp)
		mov    %ebx,%eax
		sub    _0ce534_data,%ax
		mov    %eax,0x00000c(%esp)
		mov    _0ce538_data,%ax
		sub    %ecx,%eax
		mov    %eax,0x000008(%esp)
		movswl %bx,%eax
		mov    %eax,_0ce534_data
		movswl %cx,%eax
		mov    %eax,_0ce538_data
		movswl %si,%eax
		mov    %eax,_0ce53c_data
		movswl %dx,%eax
		mov    _0ce538_data,%edx
		mov    %eax,_0ce540_data
		cmp    $0x0000c8,%edx
		jle    _0521c1_jump
		movl   $0x0000c8,_0ce538_data

	_0521c1_jump:
		cmpl   $0x000000,_0ce534_data
		jge    _0521d2_jump
		xor    %esi,%esi
		mov    %esi,_0ce534_data

	_0521d2_jump:
		cmpl   $0x000140,_0ce540_data
		jle    _0521e8_jump
		movl   $0x000140,_0ce540_data

	_0521e8_jump:
		cmpl   $0x000004,_0ce53c_data
		jge    _0521fb_jump
		movl   $0x000004,_0ce53c_data

	_0521fb_jump:
		cmpl   $0x000004,_0ce53c_data
		jl     _052290_jump
		mov    (%esp),%eax
		mov    _0c25ca_data,%dx
		mov    _0c25cc_data,%bx
		sub    %eax,%edx
		mov    0x000004(%esp),%eax
		mov    %dx,_0c25ca_data
		add    %eax,%ebx
		mov    _0c25c8_data,%eax
		sar    $0x000010,%eax
		mov    %bx,_0c25cc_data
		cmp    $0x00000c,%eax
		jle    _052245_jump
		movw   $0x00000c,_0c25ca_data

	_052245_jump:
		mov    _0ce562_data,%eax
		mov    _0c25ca_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    $0x000008,%eax
		cmp    %eax,%edx
		jge    _05226e_jump
		mov    _0ce564_data,%ax
		add    $0x000008,%eax
		mov    %ax,_0c25cc_data

	_05226e_jump:
		mov    0x000004(%esp),%esi
		mov    _0ce564_data,%dx
		add    %esi,%edi
		cmp    %dx,%di
		jge    _052282_jump
		mov    %edx,%edi

	_052282_jump:
		mov    _0c24ac_data,%bx
		cmp    %bx,%di
		jge    _052290_jump
		mov    %ebx,%edi

	_052290_jump:
		cmpl   $0x000000,_0ce534_data
		jl     _052332_jump
		mov    0x00000c(%esp),%eax
		mov    _0c25ce_data,%cx
		mov    _0c25d0_data,%si
		sub    %eax,%ecx
		mov    0x000008(%esp),%eax
		mov    %cx,_0c25ce_data
		add    %eax,%esi
		mov    _0c25cc_data,%eax
		sar    $0x000010,%eax
		mov    %si,_0c25d0_data
		test   %eax,%eax
		jle    _0522d9_jump
		xor    %eax,%eax
		mov    %ax,_0c25ce_data

	_0522d9_jump:
		mov    _0c25d0_data,%ax
		mov    _0ce566_data,%dx
		cmp    %dx,%ax
		jge    _0522f2_jump
		mov    %dx,_0c25d0_data

	_0522f2_jump:
		mov    0x000008(%esp),%eax
		mov    _0c2524_data,%bx
		add    %eax,%ebx
		mov    _0ce566_data,%cx
		mov    %bx,_0c2524_data
		cmp    %cx,%bx
		jge    _052319_jump
		mov    %cx,_0c2524_data

	_052319_jump:
		mov    _0c2524_data,%ax
		mov    _0c24ae_data,%si
		cmp    %si,%ax
		jge    _052332_jump
		mov    %si,_0c2524_data

	_052332_jump:
		mov    %di,_0c2526_data
		call   _051eb0_func
		xor    %ecx,%ecx
		mov    _0c2526_data,%di
		mov    _0ce540_data,%dx
		movswl %di,%ebx
		mov    %dx,%cx
		add    %ebx,%ecx
		mov    _0c24e2_data,%ebx
		sar    $0x000010,%ebx
		shl    $0x000004,%ebx
		mov    _0ce538_data,%ax
		cmp    %ebx,%ecx
		jle    _052378_jump
		mov    _0c24e4_data,%di
		shl    $0x000004,%edi
		sub    %edx,%edi

	_052378_jump:
		mov    _0c2522_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    %ax,%dx
		add    %edx,%ebx
		mov    _0c24e4_data,%edx
		sar    $0x000010,%edx
		shl    $0x000004,%edx
		cmp    %edx,%ebx
		jle    _0523ab_jump
		mov    _0c24e6_data,%dx
		shl    $0x000004,%edx
		sub    %eax,%edx
		mov    %dx,_0c2524_data

	_0523ab_jump:
		mov    _0ce53c_data,%eax
		mov    %eax,_0ce55c_data
		mov    _0ce540_data,%eax
		mov    %eax,_0ce560_data
		mov    _0ce534_data,%eax
		mov    %eax,_0ce554_data
		mov    _0ce538_data,%eax
		mov    %eax,_0ce558_data
		mov    %di,_0c2526_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    



_0523e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000004(%esp)
		mov    $0x000001,%edx
		mov    $0x00000c,%ebx
		mov    _0c24a4_data,%eax
		mov    $0x000004,%ebp
		mov    %edx,0x000008(%esp)
		mov    0x000044(%eax),%ax
		mov    %ebx,(%esp)
		mov    %ax,0x000010(%esp)
		jmp    _052428_jump

	_052413_jump:
		mov    (%esp),%edx
		mov    0x000008(%esp),%ebx
		add    $0x000004,%ebp
		add    $0x00000c,%edx
		inc    %ebx
		mov    %edx,(%esp)
		mov    %ebx,0x000008(%esp)

	_052428_jump:
		mov    0x00000e(%esp),%eax
		mov    0x000008(%esp),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jbe    _0524c2_jump
		mov    _0c24a4_data,%esi
		mov    (%esp),%edi
		mov    (%esi),%esi
		add    %edi,%esi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000006(%esi),%dl
		mov    0x000005(%esi),%al
		mov    %dx,0x00000c(%esp)
		test   $0x000001,%al
		je     _052460_jump
		and    $0x010000,%eax

	_052460_jump:
		mov    0x00000a(%esp),%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    0x000004(%esp),%eax
		call   _074d70_func
		mov    %eax,_0ce5ac_data(%ebp)
		mov    _0c24a4_data,%eax
		mov    0x000008(%eax),%ebx
		mov    (%esi),%eax
		xor    %edi,%edi
		add    %eax,%ebx
		mov    _0ce5ac_data(%ebp),%eax
		jmp    _052491_jump

	_052490_jump:
		inc    %edi

	_052491_jump:
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%edi
		jae    _052413_jump
		xor    %edx,%edx
		jmp    _0524aa_jump

	_0524a4_jump:
		movb   $0x000000,(%eax)

	_0524a7_jump:
		inc    %ebx
		inc    %eax
		inc    %edx

	_0524aa_jump:
		xor    %ecx,%ecx
		mov    0x000005(%esi),%cl
		cmp    %ecx,%edx
		jae    _052490_jump
		mov    (%ebx),%cl
		and    $0x0000ff,%ecx
		jne    _0524a4_jump
		movb   $0x0000ff,(%eax)
		jmp    _0524a7_jump

	_0524c2_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0524d0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000048,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		mov    0x000008(%edx),%eax
		mov    %eax,0x000020(%esp)
		mov    0x000020(%esp),%edx
		xor    %eax,%eax
		mov    0x000005(%edx),%al
		cmp    $0x000001,%eax
		jle    _052845_jump
		xor    %eax,%eax
		mov    0x000004(%edx),%al
		cmp    $0x000001,%eax
		jle    _052845_jump
		mov    (%edx),%eax
		sar    $0x000010,%eax
		movswl (%edx),%edx
		mov    %eax,%ebx
		add    %edx,%ebp
		shl    $0x000008,%ebx
		shl    $0x000006,%eax
		add    %ebx,%ebp
		mov    0x000020(%esp),%edx
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		mov    %eax,0x000010(%esp)
		mov    (%edx),%ax
		mov    %ax,0x000038(%esp)
		mov    %ax,0x000040(%esp)
		mov    0x000002(%edx),%ax
		mov    %eax,0x00002c(%esp)
		mov    %ax,0x000034(%esp)
		xor    %edx,%edx
		mov    0x000010(%esp),%eax
		mov    %edx,0x000028(%esp)
		mov    %eax,0x000004(%esp)
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    %ebp,(%esp)
		add    %eax,%eax
		shl    $0x000002,%edx
		mov    %eax,0x000018(%esp)
		jmp    _0525ae_jump

	_052564_jump:
		mov    0x000032(%esp),%ebx
		mov    0x00003e(%esp),%eax
		mov    %ebp,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%edx,%esi,1),%esi
		call   _0158aa_func

	_05257f_jump:
		mov    0x000040(%esp),%ebx
		mov    0x000018(%esp),%eax
		mov    0x000028(%esp),%esi
		add    $0x000010,%ebp
		add    $0x000004,%edx
		add    $0x000010,%ebx
		add    $0x000006,%eax
		inc    %esi
		mov    %bx,0x000040(%esp)
		mov    0x000010(%esp),%ebx
		mov    %eax,0x000018(%esp)
		inc    %ebx
		mov    %esi,0x000028(%esp)
		mov    %ebx,0x000010(%esp)

	_0525ae_jump:
		mov    0x000020(%esp),%ebx
		xor    %eax,%eax
		mov    0x000004(%ebx),%al
		cmp    0x000028(%esp),%eax
		jle    _0525f1_jump
		mov    0x000018(%esp),%edi
		mov    (%ecx),%eax
		add    %edi,%eax
		mov    0x000004(%eax),%al
		and    $0x0000ff,%eax
		je     _05257f_jump
		cmp    $0x000001,%eax
		jne    _052564_jump
		mov    0x000032(%esp),%ebx
		mov    0x00003e(%esp),%eax
		mov    %ebp,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%edx,%esi,1),%esi
		call   _015a42_func
		jmp    _05257f_jump

	_0525f1_jump:
		mov    (%esp),%edx
		mov    0x000004(%esp),%ebx
		mov    0x000014(%ecx),%eax
		mov    $0x000001,%esi
		sar    $0x000010,%eax
		add    $0x001400,%edx
		add    %eax,%ebx
		mov    %esi,0x00001c(%esp)
		jmp    _05271e_jump

	_052614_jump:
		mov    0x000036(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _0158aa_func

	_05262b_jump:
		mov    $0x000001,%ebp
		mov    0x000024(%esp),%eax
		add    %ebp,%eax
		add    $0x000010,%edx
		mov    %eax,0x000024(%esp)
		lea    0x000000(,%eax,4),%ebx
		mov    %ebp,0x000028(%esp)
		imul   $0x000006,%eax,%ebp
		jmp    _052675_jump

	_05264d_jump:
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _015348_func

	_05265a_jump:
		mov    0x000024(%esp),%eax
		mov    0x000028(%esp),%esi
		add    $0x000010,%edx
		add    $0x000004,%ebx
		add    $0x000006,%ebp
		inc    %eax
		inc    %esi
		mov    %eax,0x000024(%esp)
		mov    %esi,0x000028(%esp)

	_052675_jump:
		mov    0x000020(%esp),%esi
		movzbl 0x000004(%esi),%esi
		mov    0x000028(%esp),%edi
		dec    %esi
		cmp    %edi,%esi
		jle    _0526a5_jump
		mov    (%ecx),%esi
		movzbl 0x000004(%esi,%ebp,1),%esi
		test   %esi,%esi
		je     _05265a_jump
		cmp    $0x000001,%esi
		jne    _05264d_jump
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _015525_func
		jmp    _05265a_jump

	_0526a5_jump:
		mov    (%ecx),%eax
		movzbl 0x000004(%eax,%ebp,1),%esi
		test   %esi,%esi
		je     _0526ff_jump
		mov    0x00001c(%esp),%edi
		mov    0x00002c(%esp),%eax
		shl    $0x000004,%edi
		add    %eax,%edi
		mov    0x000028(%esp),%eax
		shl    $0x000004,%eax
		mov    %eax,0x000030(%esp)
		mov    0x000038(%esp),%eax
		add    0x000030(%esp),%eax
		cmp    $0x000001,%esi
		jne    _0526ec_jump
		movswl %di,%esi
		mov    0x000004(%ecx),%ebp
		cwtl   
		mov    %edx,%edi
		mov    (%ebx,%ebp,1),%ebp
		mov    %esi,%ebx
		mov    %ebp,%esi
		call   _015a42_func
		jmp    _0526ff_jump

	_0526ec_jump:
		movswl %di,%ebp
		mov    0x000004(%ecx),%esi
		cwtl   
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		mov    %ebp,%ebx
		call   _0158aa_func

	_0526ff_jump:
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    0x00001c(%esp),%ebp
		mov    0x000014(%ecx),%eax
		add    $0x001400,%edx
		sar    $0x000010,%eax
		inc    %ebp
		add    %eax,%ebx
		mov    %ebp,0x00001c(%esp)

	_05271e_jump:
		mov    %ebx,0x000024(%esp)
		mov    0x000020(%esp),%ebx
		mov    0x00002c(%esp),%esi
		mov    0x000024(%esp),%ebp
		xor    %eax,%eax
		mov    0x00001c(%esp),%edi
		mov    0x000005(%ebx),%al
		mov    0x00001c(%esp),%ebx
		shl    $0x000002,%ebp
		shl    $0x000004,%ebx
		dec    %eax
		add    %esi,%ebx
		cmp    %edi,%eax
		jle    _05278d_jump
		mov    0x000024(%esp),%eax
		mov    %eax,0x000008(%esp)
		imul   $0x000006,%eax,%esi
		mov    (%ecx),%eax
		mov    %edx,0x00000c(%esp)
		mov    0x000004(%esi,%eax,1),%al
		and    $0x0000ff,%eax
		je     _05262b_jump
		cmp    $0x000001,%eax
		jne    _052614_jump
		mov    0x000036(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _015a42_func
		jmp    _05262b_jump

	_05278d_jump:
		mov    0x000038(%esp),%eax
		mov    %bx,0x000044(%esp)
		mov    %ax,0x00003c(%esp)
		xor    %eax,%eax
		mov    0x000024(%esp),%ebx
		mov    %eax,0x000028(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    %eax,0x000014(%esp)
		jmp    _052800_jump

	_0527b6_jump:
		mov    0x000042(%esp),%ebx
		mov    0x00003a(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _0158aa_func

	_0527d1_jump:
		mov    0x00003c(%esp),%edi
		mov    0x000014(%esp),%esi
		mov    0x000028(%esp),%eax
		add    $0x000010,%edx
		add    $0x000004,%ebp
		add    $0x000010,%edi
		add    $0x000006,%esi
		inc    %eax
		mov    %di,0x00003c(%esp)
		mov    0x000024(%esp),%edi
		mov    %esi,0x000014(%esp)
		inc    %edi
		mov    %eax,0x000028(%esp)
		mov    %edi,0x000024(%esp)

	_052800_jump:
		mov    0x000020(%esp),%ebx
		xor    %eax,%eax
		mov    0x000028(%esp),%edi
		mov    0x000004(%ebx),%al
		cmp    %edi,%eax
		jle    _052845_jump
		mov    0x000014(%esp),%ebx
		mov    (%ecx),%eax
		add    %ebx,%eax
		mov    0x000004(%eax),%al
		and    $0x0000ff,%eax
		je     _0527d1_jump
		cmp    $0x000001,%eax
		jne    _0527b6_jump
		mov    0x000042(%esp),%ebx
		mov    0x00003a(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _015a42_func
		jmp    _0527d1_jump

	_052845_jump:
		add    $0x000048,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_052850_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    _0ce538_data,%edx
		mov    _0ce534_data,%ecx
		mov    _0ce540_data,%ebx
		mov    _0ce53c_data,%eax
		call   _01666f_func
		mov    _0cdf2c_data,%eax
		mov    %eax,_0cdf34_data
		lea    0x000004(%eax),%ebx
		mov    _0c94d4_data,%edx
		mov    $_0ce580_data,%eax
		mov    %ebx,_0cdf2c_data
		call   _051ce4_func
		mov    $0x00fa00,%ebx
		mov    _095afc_data,%eax
		xor    %edx,%edx
		call   _079cd0_func
		mov    _0cdf2c_data,%edi
		call   _01529a_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0528b4_func:
		mov    _0cdf34_data,%eax
		mov    %eax,_0cdf2c_data
		mov    %eax,_0cd000_data
		ret    



_0528d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c51ce_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _052909_jump
		mov    %edx,%eax
		push   $0xffffffcd
		shl    $0x000005,%eax
		mov    $0x000015,%ecx
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		mov    $0x000002,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01d0b8_func

	_052909_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052910_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    _0c51ce_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _0529ac_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		lea    0x000008(%esp),%ebx
		push   %ebx
		lea    0x000008(%esp),%ebx
		lea    0x000010(%esp),%ecx
		push   %ebx
		mov    $0x000002,%edx
		lea    0x000008(%esp),%ebx
		call   _01da90_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000015,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00000c(%esp),%eax
		sub    $0x000043,%eax
		mov    %ax,0x000008(%esp)
		mov    0x000040(%esi),%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		lea    (%eax,%ebx,1),%ecx
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x00002c(%esi),%eax
		cmp    %ebx,%eax
		jl     _052998_jump
		cmp    %ecx,%eax
		jg     _052998_jump
		mov    $0x000001,%eax
		jmp    _05299a_jump

	_052998_jump:
		xor    %eax,%eax

	_05299a_jump:
		test   %eax,%eax
		je     _0529ac_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d6f8_func

	_0529ac_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0529b4_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,0x000010(%esp)
		mov    %bl,%cl
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _0529eb_jump
		jmp    _052b57_jump

	_0529db_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _052b57_jump

	_0529eb_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000049,%edx
		jne    _0529db_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0529db_jump
		test   %cl,%cl
		je     _052a1d_jump
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _052a3f_jump

	_052a1d_jump:
		mov    0x000081(%edi),%ah
		lea    0x000081(%esi),%edx
		test   $0x000008,%ah
		sete   %al
		mov    (%edx),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,(%edx)

	_052a3f_jump:
		mov    0x000010(%esp),%eax
		mov    %ax,0x000042(%esi)
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %edi,%eax
		call   _01da90_func
		mov    0x00000a(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x000028(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _052a8e_jump
		mov    -0x000002(%esp),%eax
		mov    0x000028(%esi),%ebx
		sar    $0x000010,%eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)

	_052a8e_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		add    %edx,%eax
		mov    0x000002(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000081(%esi),%al
		mov    %edx,0x00002c(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _056614_func
		mov    %esi,%eax
		call   _01df3c_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f7d4_func
		mov    0x000081(%esi),%dl
		xor    %eax,%eax
		and    $0x0000bf,%dl
		mov    _0c1bb4_data,%al
		mov    %dl,0x000081(%esi)
		mov    _0c1b74_data,%dx
		mov    0x000028(%esi),%bx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000068(%esi),%al
		mov    0x000081(%esi),%bl
		sub    %eax,%edx
		test   $0x000008,%bl
		je     _052b1e_jump
		mov    $0x000001,%eax
		jmp    _052b23_jump

	_052b1e_jump:
		mov    $0xffffffff,%eax

	_052b23_jump:
		movswl %dx,%edx
		imul   %eax,%edx
		xor    %ebx,%ebx
		movswl %dx,%eax
		cmp    %ebx,%eax
		jge    _052b34_jump
		mov    %ebx,%eax

	_052b34_jump:
		mov    0x000081(%esi),%bh
		add    $0x00000f,%eax
		and    $0x0000fc,%bh
		mov    %ax,0x000052(%esi)
		mov    %bh,0x000081(%esi)
		mov    0x000034(%edi),%ax
		mov    %ax,0x000050(%esi)
		decb   0x00007d(%edi)

	_052b57_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_052b60_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x00001a,%eax
		jge    _052b75_jump
		movw   $0x000000,0x000052(%ecx)

	_052b75_jump:
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _052bc7_jump
		mov    0x00006b(%ecx),%al
		cmp    $0x00001a,%eax
		jne    _052bc7_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _052bc7_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0529b4_func
		movw   $0x000001,0x000052(%ecx)

	_052bc7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052bcc_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _052bde_jump
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		je     _052bf1_jump

	_052bde_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _052c06_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		jne    _052c06_jump

	_052bf1_jump:
		xor    %edx,%edx
		mov    0x00007d(%eax),%dl
		test   %edx,%edx
		jle    _052c06_jump
		mov    $0x000002,%ebx
		xor    %edx,%edx
		call   _01d6f8_func

	_052c06_jump:
		pop    %edx
		pop    %ebx
		ret    



_052c0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    0x000081(%eax),%bl
		call   _01dea4_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		shl    $0x000004,%bl
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x00006c(%ecx),%al
		shr    $0x000007,%bl
		add    %edx,%eax
		mov    %bl,%dl
		and    $0x000001,%dl
		shl    $0x000003,%dl
		cmp    $0x000006,%eax
		jb     _052ef7_jump
		jbe    _052e34_jump
		cmp    $0x000100,%eax
		jb     _052ee8_jump
		jbe    _052d51_jump
		cmp    $0x000205,%eax
		jb     _052ed1_jump
		jbe    _052f1f_jump
		cmp    $0x000207,%eax
		je     _052e28_jump

	_052c78_jump:
		mov    0x00007f(%ecx),%dh
		test   %dh,%dh
		je     _052c86_jump
		mov    %dh,%bl
		dec    %bl
		mov    %bl,0x00007f(%ecx)

	_052c86_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_052c8b_jump:
		movw   $0x00fff8,0x000042(%ecx)
		movw   $0x000000,0x000040(%ecx)
		jmp    _052c78_jump

	_052c99_jump:
		mov    _0c1f02_data,%al
		movw   $0x000000,0x000040(%ecx)
		test   %al,%al
		je     _052cb8_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _052c78_jump

	_052cb8_jump:
		xor    %eax,%eax
		mov    0x00007d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _052cf0_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %bl,%al
		je     _052ce0_jump
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		jmp    _052c78_jump

	_052ce0_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		jmp    _052c78_jump

	_052cf0_jump:
		mov    %bl,%al
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		jmp    _052c78_jump

	_052d0f_jump:
		mov    0x000081(%ecx),%dh
		and    $0x0000f7,%dh
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x000081(%ecx)
		mov    _0c1f02_data,%bh
		movw   $0x000000,0x000040(%ecx)
		test   %bh,%bh
		je     _052d45_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _052c78_jump

	_052d45_jump:
		mov    %ecx,%eax
		call   _052b60_func
		jmp    _052c78_jump

	_052d51_jump:
		cmpb   $0x000000,_0c1f02_data
		je     _052d6d_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _052c78_jump

	_052d6d_jump:
		xor    %eax,%eax
		mov    0x00007d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _052e18_jump
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		jne    _052dcb_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%esi
		mov    0x000068(%ecx),%al
		add    %eax,%esi
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		add    %esi,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		jne    _052de7_jump

	_052dcb_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%bl
		jne    _052de7_jump
		mov    0x000081(%ecx),%bl
		test   $0x000008,%bl
		sete   %bl

	_052de7_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %bl,%al
		je     _052e05_jump
		mov    $0x000006,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_052e05_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		mov    %ecx,%eax
		call   _0248b8_func
		jmp    _052c78_jump

	_052e18_jump:
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _052c78_jump

	_052e28_jump:
		mov    %ecx,%eax
		call   _052910_func
		jmp    _052c78_jump

	_052e34_jump:
		mov    %bl,%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		movw   $0x000000,0x000040(%ecx)
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    _0c1f02_data,%dl
		mov    %ah,0x000081(%ecx)
		test   %dl,%dl
		je     _052c78_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _052c78_jump

	_052e7b_jump:
		mov    0x000081(%ecx),%bh
		and    $0x0000f7,%bh
		mov    %bh,%al
		or     %dl,%al
		mov    %al,0x000081(%ecx)
		mov    _0c1f02_data,%ah
		movw   $0x000000,0x000040(%ecx)
		test   %ah,%ah
		jne    _052c78_jump
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		jmp    _052c78_jump

	_052eb3_jump:
		mov    0x000081(%ecx),%dh
		and    $0x0000f7,%dh
		movw   $0x000000,0x000040(%ecx)
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _052c78_jump

	_052ed1_jump:
		cmp    $0x000202,%eax
		jb     _052c78_jump
		mov    %ecx,%eax
		call   _0528d0_func
		jmp    _052c78_jump

	_052ee8_jump:
		cmp    $0x000007,%eax
		jbe    _052eb3_jump
		cmp    $0x000008,%eax
		je     _052e7b_jump
		jmp    _052c78_jump

	_052ef7_jump:
		cmp    $0x000002,%eax
		jb     _052f13_jump
		jbe    _052d0f_jump
		cmp    $0x000004,%eax
		jb     _052c8b_jump
		jbe    _052e34_jump
		jmp    _052f1f_jump

	_052f13_jump:
		test   %eax,%eax
		jbe    _052c99_jump
		movb   $0x000064,0x00007f(%ecx)

	_052f1f_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _052c78_jump



_052f2c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00007f(%eax)
		jne    _052ff6_jump
		mov    $0x000001,%dl
		mov    %ecx,%eax
		mov    %dl,_0c1f03_data
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _052fa5_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    _0c51ce_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _052ff6_jump
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%ecx
		add    %ecx,%eax
		call   _056574_func
		mov    _0c51ce_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0c1b34_data,%eax
		movw   $0x000000,0x000048(%eax,%ecx,4)
		pop    %ecx
		pop    %ebx
		ret    

	_052fa5_jump:
		mov    _0c1ef0_data,%edx
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _052fbe_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _052fe8_jump

	_052fbe_jump:
		jl     _052fe1_jump
		testb  $0x000008,0x000081(%edx)
		je     _052fe1_jump
		andb   $0x0000f7,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %ecx
		pop    %ebx
		ret    

	_052fe1_jump:
		orb    $0x000008,0x000081(%ecx)

	_052fe8_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_052ff6_jump:
		pop    %ecx
		pop    %ebx
		ret    



_052ffc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    0x00004e(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _053034_jump
		andb   $0x0000fb,0x000081(%ebx)
		mov    %ebx,%eax
		call   _070a70_func
		jmp    _053191_jump

	_053034_jump:
		mov    0x000050(%ebx),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jg     _053177_jump
		mov    0x000081(%ebx),%dl
		test   $0x000001,%dl
		je     _05306c_jump
		mov    0x000081(%ebx),%cl
		movl   $0x000000,0x000024(%ebx)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%ebx)
		incb   0x00007d(%eax)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05306c_jump:
		mov    %dl,%dh
		or     $0x000003,%dh
		mov    %dh,0x000081(%ebx)
		xor    %edx,%edx
		mov    0x000028(%ebx),%cx
		mov    0x000068(%ebx),%dl
		mov    0x000028(%eax),%si
		add    %ecx,%edx
		mov    0x000068(%eax),%al
		sub    %esi,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %dx,0x000052(%ebx)
		mov    0x000050(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05309f_jump
		neg    %eax

	_05309f_jump:
		mov    %ax,0x000052(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0530a9_jump:
		mov    0x000056(%ebx),%ax
		mov    %ax,0x000040(%ebx)
		mov    0x000048(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _0530c9_jump
		mov    0x00004a(%ebx),%ax
		mov    %ax,0x000042(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0530c9_jump:
		testb  $0x000001,0x000081(%ebx)
		je     _05315b_jump
		mov    0x00004e(%ebx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000028(%eax),%cx
		mov    0x000068(%eax),%dl
		mov    0x000028(%ebx),%si
		add    %edx,%ecx
		xor    %edx,%edx
		sub    %esi,%ecx
		mov    0x000068(%ebx),%dl
		sub    %edx,%ecx
		xor    %edx,%edx
		mov    %cx,0x000052(%ebx)
		xor    %ecx,%ecx
		mov    0x000069(%eax),%dl
		mov    0x000074(%eax),%cl
		add    %ecx,%edx
		sar    %edx
		mov    0x00002c(%eax),%ecx
		add    %edx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%ebx),%al
		mov    0x000069(%ebx),%dl
		add    %edx,%eax
		mov    0x00002c(%ebx),%esi
		sar    %eax
		add    %esi,%eax
		sub    %eax,%ecx
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		imul   %ecx,%eax
		mov    0x000052(%ebx),%di
		mov    %ax,0x000042(%ebx)
		test   %di,%di
		je     _05314b_jump
		cwtd   
		idiv   %di
		mov    %ax,0x000042(%ebx)

	_05314b_jump:
		mov    0x000050(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _053157_jump
		neg    %eax

	_053157_jump:
		mov    %ax,0x000052(%ebx)

	_05315b_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _053167_jump
		neg    %eax

	_053167_jump:
		cwtl   
		call   _04aa54_func
		sub    %ax,0x000052(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053177_jump:
		mov    0x000081(%ebx),%cl
		and    $0x0000fd,%cl
		mov    0x000070(%ebx),%al
		mov    %cl,0x000081(%ebx)
		cmp    $0x000014,%al
		je     _0530a9_jump

	_053191_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0531a0_func:
		push   %ecx
		push   %esi
		mov    $0x00000f,%esi
		and    $0x0000ff,%edx
		sub    %edx,%esi
		lea    (%esi,%esi,1),%edx
		mov    $0x000003,%esi
		mov    %dl,%cl
		mov    $0xffffffff,%edx
		shl    %cl,%esi
		shl    %cl,%ebx
		mov    (%eax),%ecx
		sub    %esi,%edx
		and    %edx,%ecx
		mov    %ecx,%esi
		or     %ebx,%esi
		mov    %esi,(%eax)
		pop    %esi
		pop    %ecx
		ret    



_0531d4_func:
		push   %esi
		push   %edi
		mov    %ecx,%esi
		mov    (%eax),%eax
		mov    $0x00000f,%ecx
		and    $0x0000ff,%edx
		sub    %edx,%ecx
		lea    (%ecx,%ecx,1),%edx
		mov    $0x000003,%edi
		mov    %dl,%cl
		shl    %cl,%edi
		and    %edi,%eax
		sar    %cl,%eax
		mov    %eax,%edx
		and    $0x000002,%edx
		sar    %edx
		and    $0x000001,%eax
		mov    %edx,(%ebx)
		mov    %eax,(%esi)
		pop    %edi
		pop    %esi
		ret    

	_053208_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dl,%cl
		mov    %dx,%bx
		and    $0x000007,%cl
		sar    $0x000003,%ebx
		mov    $0x000001,%dl
		movswl %bx,%ebx
		shl    %cl,%dl
		or     %dl,(%ebx,%eax,1)
		pop    %ecx
		pop    %ebx
		ret    

	_053248_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dx,%bx
		sar    $0x000003,%ebx
		mov    %dl,%cl
		movswl %bx,%ebx
		and    $0x000007,%cl
		add    %eax,%ebx
		mov    $0x000001,%al
		shl    %cl,%al
		and    (%ebx),%al
		pop    %ecx
		pop    %ebx
		ret    



_053270_func:
		push   %edx
		add    $0x000080,%eax
		and    $0x000001,%ah
		movswl %ax,%edx
		cmp    $0x000100,%edx
		jge    _0532a0_jump
		sub    $0x000080,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jge    _053293_jump
		neg    %eax

	_053293_jump:
		movswl %ax,%edx
		mov    _096618_data(,%edx,2),%ax
		pop    %edx
		ret    

	_0532a0_jump:
		sub    $0x000180,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jge    _0532af_jump
		neg    %eax

	_0532af_jump:
		movswl %ax,%edx
		mov    _096618_data(,%edx,2),%ax
		neg    %eax
		pop    %edx
		ret    



_0532c0_func:
		push   %edx
		and    $0x000001,%ah
		movswl %ax,%edx
		cmp    $0x000100,%edx
		jge    _0532e9_jump
		sub    $0x000080,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jge    _0532de_jump
		neg    %eax

	_0532de_jump:
		cwtl   
		mov    _096618_data(,%eax,2),%ax
		pop    %edx
		ret    

	_0532e9_jump:
		sub    $0x000180,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jge    _0532f8_jump
		neg    %eax

	_0532f8_jump:
		cwtl   
		mov    _096618_data(,%eax,2),%ax
		neg    %eax
		pop    %edx
		ret    



_053308_func:
		push   %ecx
		push   %esi
		and    $0x000001,%ah
		movswl %ax,%ecx
		cmp    $0x000100,%ecx
		jge    _05335c_jump
		sub    $0x000080,%eax
		movswl %ax,%ecx
		test   %ecx,%ecx
		jge    _05333b_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096618_data(,%esi,2),%cx
		jmp    _05334c_jump

	_05333b_jump:
		mov    $0x000080,%esi
		sub    %ecx,%esi
		mov    _096618_data(,%esi,2),%cx
		neg    %ecx

	_05334c_jump:
		mov    %cx,(%ebx)
		movswl %ax,%ebx
		mov    _096618_data(,%ebx,2),%ax
		jmp    _0533a0_jump

	_05335c_jump:
		sub    $0x000180,%eax
		movswl %ax,%ecx
		test   %ecx,%ecx
		jge    _053381_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096618_data(,%esi,2),%cx
		neg    %ecx
		jmp    _053390_jump

	_053381_jump:
		mov    $0x000080,%esi
		sub    %ecx,%esi
		mov    _096618_data(,%esi,2),%cx

	_053390_jump:
		mov    %cx,(%ebx)
		movswl %ax,%ebx
		mov    _096618_data(,%ebx,2),%ax
		neg    %eax

	_0533a0_jump:
		mov    %ax,(%edx)
		pop    %esi
		pop    %ecx
		ret    



_0533c8_func:
		push   %edx
		add    $0x000080,%eax
		xor    %ah,%ah
		sub    $0x000080,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jge    _0533df_jump
		neg    %eax

	_0533df_jump:
		cwtl   
		mov    _096618_data(,%eax,2),%ax
		pop    %edx
		ret    



_0533ec_func:
		push   %ecx
		xor    %ah,%ah
		sub    $0x000080,%eax
		movswl %ax,%ecx
		test   %ecx,%ecx
		jge    _0533fe_jump
		neg    %eax

	_0533fe_jump:
		cwtl   
		mov    _096618_data(,%eax,2),%cx
		mov    %cx,(%edx)
		mov    $0x000080,%edx
		sub    %eax,%edx
		mov    _096618_data(,%edx,2),%ax
		mov    %ax,(%ebx)
		pop    %ecx
		ret    



_053420_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000060(%eax),%dx
		mov    %edx,%eax
		cmp    $0x000089,%dx
		jb     _0536d2_jump
		jbe    _053699_jump
		cmp    $0x0000c0,%dx
		jb     _05359c_jump
		cmp    $0x0000c2,%dx
		jbe    _0534bb_jump
		cmp    $0x0000ea,%dx
		jb     _053513_jump
		jbe    _053499_jump
		cmp    $0x0000f6,%dx
		jb     _0534e3_jump
		jbe    _0534c0_jump
		cmp    $0x0000fb,%dx
		jb     _0534ca_jump
		jbe    _0534c0_jump
		cmp    $0x0000fc,%dx
		jbe    _0534c5_jump
		cmp    $0x0000fd,%dx
		je     _05349e_jump
		jmp    _0534bb_jump

	_05348c_jump:
		xor    %eax,%eax
		mov    0x000076(%ebx),%al
		test   %eax,%eax
		jne    _0534f9_jump

	_053499_jump:
		mov    $0x000002,%al
		pop    %edx
		pop    %ebx
		ret    

	_05349e_jump:
		mov    _0c51ce_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0534b3_jump
		mov    $0x000004,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0534b3_jump:
		mov    $0x000007,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0534bb_jump:
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_0534c0_jump:
		mov    $0x000005,%al
		pop    %edx
		pop    %ebx
		ret    

	_0534c5_jump:
		mov    $0x000007,%al
		pop    %edx
		pop    %ebx
		ret    

	_0534ca_jump:
		cmp    $0x0000f8,%dx
		jb     _0534bb_jump
		jbe    _053499_jump
		cmp    $0x0000f9,%dx
		je     _053836_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_0534e3_jump:
		cmp    $0x0000ef,%dx
		jb     _0534fe_jump
		jbe    _053836_jump
		cmp    $0x0000f4,%dx
		jb     _0534bb_jump
		jbe    _0534bb_jump

	_0534f9_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_0534fe_jump:
		cmp    $0x0000ec,%dx
		jb     _0534bb_jump
		jbe    _0534f9_jump
		cmp    $0x0000ee,%dx
		je     _0534f9_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_053513_jump:
		cmp    $0x0000cb,%dx
		jb     _053562_jump
		jbe    _053836_jump
		cmp    $0x0000d5,%dx
		jb     _05354b_jump
		jbe    _0534f9_jump
		cmp    $0x0000dc,%dx
		jb     _0534bb_jump
		cmp    $0x0000dd,%dx
		jbe    _053499_jump
		cmp    $0x0000e0,%dx
		je     _053499_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_05354b_jump:
		cmp    $0x0000cc,%dx
		jbe    _0534f9_jump
		cmp    $0x0000d3,%dx
		je     _053836_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_053562_jump:
		cmp    $0x0000c6,%dx
		jb     _053586_jump
		jbe    _053836_jump
		cmp    $0x0000c7,%dx
		jbe    _0534f9_jump
		cmp    $0x0000c9,%dx
		jbe    _053836_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_053586_jump:
		cmp    $0x0000c4,%dx
		jb     _0534bb_jump
		jbe    _0534bb_jump

	_053597_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_05359c_jump:
		cmp    $0x00009d,%dx
		jb     _05364e_jump
		jbe    _053597_jump
		cmp    $0x0000ad,%dx
		jb     _053605_jump
		jbe    _053699_jump
		cmp    $0x0000b7,%dx
		jb     _0535e4_jump
		jbe    _053836_jump
		cmp    $0x0000bb,%dx
		jb     _0534bb_jump
		jbe    _053836_jump
		cmp    $0x0000be,%dx
		je     _053836_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_0535e4_jump:
		cmp    $0x0000b4,%dx
		jb     _0534bb_jump
		jbe    _053836_jump
		cmp    $0x0000b5,%dx
		je     _0534f9_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_053605_jump:
		cmp    $0x0000a4,%dx
		jb     _053633_jump
		jbe    _0534f9_jump
		cmp    $0x0000a8,%dx
		jb     _0534bb_jump
		jbe    _053499_jump
		cmp    $0x0000aa,%dx
		je     _053499_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_053633_jump:
		cmp    $0x00009e,%dx
		jbe    _0534f9_jump
		cmp    $0x0000a1,%dx
		je     _053499_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_05364e_jump:
		cmp    $0x000092,%dx
		jb     _05369e_jump
		jbe    _053499_jump
		cmp    $0x000095,%dx
		jb     _05368e_jump
		jbe    _053499_jump
		cmp    $0x000096,%dx
		jbe    _053499_jump
		cmp    $0x00009a,%dx
		jb     _0534bb_jump
		cmp    $0x00009b,%dx
		jbe    _053836_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_05368e_jump:
		cmp    $0x000093,%dx
		jbe    _05348c_jump

	_053699_jump:
		mov    $0x000006,%al
		pop    %edx
		pop    %ebx
		ret    

	_05369e_jump:
		cmp    $0x00008d,%dx
		jb     _0536c2_jump
		jbe    _0534f9_jump
		cmp    $0x00008e,%dx
		jbe    _053699_jump
		cmp    $0x00008f,%dx
		je     _053499_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_0536c2_jump:
		cmp    $0x00008a,%dx
		je     _053836_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_0536d2_jump:
		cmp    $0x00004b,%dx
		jb     _053808_jump
		jbe    _053499_jump
		cmp    $0x000061,%dx
		jb     _05377e_jump
		jbe    _053836_jump
		cmp    $0x000070,%dx
		jb     _05374a_jump
		jbe    _0534c0_jump
		cmp    $0x00007b,%dx
		jb     _05372b_jump
		jbe    _053499_jump
		cmp    $0x000085,%dx
		jb     _0534bb_jump
		jbe    _053836_jump
		cmp    $0x000087,%dx
		je     _053499_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_05372b_jump:
		cmp    $0x000077,%dx
		jb     _0534bb_jump
		jbe    _053836_jump
		cmp    $0x000079,%dx
		je     _053499_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_05374a_jump:
		cmp    $0x00006d,%dx
		jb     _053765_jump
		jbe    _0534c0_jump
		cmp    $0x00006e,%dx
		jbe    _053499_jump
		mov    $0x000005,%al
		pop    %edx
		pop    %ebx
		ret    

	_053765_jump:
		cmp    $0x000062,%dx
		jbe    _0534f9_jump
		cmp    $0x000066,%dx
		je     _053499_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_05377e_jump:
		cmp    $0x000056,%dx
		jb     _0537ce_jump
		jbe    _053836_jump
		cmp    $0x00005d,%dx
		jb     _0537af_jump
		jbe    _053499_jump
		cmp    $0x00005e,%dx
		jbe    _053499_jump
		cmp    $0x00005f,%dx
		je     _053699_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_0537af_jump:
		cmp    $0x000058,%dx
		jb     _0534bb_jump
		jbe    _0534c5_jump
		cmp    $0x00005a,%dx
		jb     _0534bb_jump
		mov    $0x000002,%al
		pop    %edx
		pop    %ebx
		ret    

	_0537ce_jump:
		cmp    $0x00004f,%dx
		jb     _0537f9_jump
		jbe    _053499_jump
		cmp    $0x000052,%dx
		jb     _0534bb_jump
		jbe    _053699_jump
		cmp    $0x000053,%dx
		je     _053499_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_0537f9_jump:
		cmp    $0x00004d,%dx
		jb     _0534bb_jump
		mov    $0x000003,%al
		pop    %edx
		pop    %ebx
		ret    

	_053808_jump:
		cmp    $0x000029,%dx
		jb     _05388c_jump
		jbe    _053499_jump
		cmp    $0x000037,%dx
		jb     _053856_jump
		jbe    _053699_jump
		cmp    $0x000042,%dx
		jb     _05383b_jump
		jbe    _053836_jump
		cmp    $0x000048,%dx
		jb     _0534bb_jump

	_053836_jump:
		mov    $0x000003,%al
		pop    %edx
		pop    %ebx
		ret    

	_05383b_jump:
		cmp    $0x000039,%dx
		jb     _0534bb_jump
		jbe    _053499_jump
		cmp    $0x00003b,%dx
		jbe    _053836_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_053856_jump:
		cmp    $0x00002d,%dx
		jb     _053877_jump
		jbe    _053499_jump
		cmp    $0x00002e,%dx
		jbe    _053836_jump
		cmp    $0x000030,%dx
		je     _053499_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_053877_jump:
		cmp    $0x00002a,%dx
		jbe    _0534c5_jump
		cmp    $0x00002c,%dx
		je     _053836_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_05388c_jump:
		cmp    $0x000013,%dx
		jb     _0538d8_jump
		jbe    _053499_jump
		cmp    $0x00001c,%dx
		jb     _0538bf_jump
		jbe    _053836_jump
		cmp    $0x00001e,%dx
		jb     _0534bb_jump
		jbe    _0534f9_jump
		cmp    $0x00001f,%dx
		je     _053699_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_0538bf_jump:
		cmp    $0x000014,%dx
		jbe    _0534c0_jump
		cmp    $0x000015,%dx
		je     _053499_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_0538d8_jump:
		cmp    $0x000004,%dx
		jb     _053903_jump
		jbe    _0534c5_jump
		cmp    $0x000007,%dx
		jb     _0534bb_jump
		jbe    _0534c0_jump
		cmp    $0x00000b,%dx
		je     _053499_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_053903_jump:
		cmp    $0x000002,%dx
		je     _053699_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    



_053914_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000001,_092238_data(,%eax,4)
		je     _05393b_jump
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)
		jmp    _053960_jump

	_05393b_jump:
		test   %eax,%eax
		je     _053948_jump
		cmp    $0x000009,%eax
		jne    _053960_jump

	_053948_jump:
		cmpl   $0x000000,0x000028(%edx)
		jge    _053960_jump
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_053960_jump:
		movw   $0x000000,0x00005a(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    0x00006d(%edx),%al
		mov    %al,0x00006f(%edx)
		mov    0x00006c(%edx),%al
		mov    %al,0x00006e(%edx)
		mov    0x000076(%edx),%al
		mov    %al,0x000077(%edx)
		mov    0x000060(%edx),%ax
		movl   $0x000001,0x000030(%edx)
		mov    %eax,%ebx
		cmp    $0x000062,%ax
		jb     _053b3c_jump
		jbe    _0539d3_jump
		cmp    $0x0000ae,%ax
		jb     _053a9c_jump
		jbe    _053a13_jump
		cmp    $0x0000d5,%ax
		jb     _053a62_jump
		jbe    _0539d3_jump
		cmp    $0x0000e1,%ax
		jb     _053a4f_jump
		jbe    _053a13_jump
		cmp    $0x0000e2,%ax
		jbe    _053a1c_jump
		cmp    $0x0000e3,%ax
		je     _0539ef_jump
		jmp    _053a42_jump

	_0539d3_jump:
		call   _044d00_func
		jmp    _053c76_jump

	_0539dd_jump:
		movb   $0x0000c8,0x00007a(%edx)
		jmp    _053c76_jump

	_0539e6_jump:
		movb   $0x0000a0,0x00007a(%edx)
		jmp    _053c76_jump

	_0539ef_jump:
		movb   $0x00003c,0x00007a(%edx)
		jmp    _053c76_jump

	_0539f8_jump:
		movb   $0x0000b4,0x00007a(%edx)
		jmp    _053c76_jump

	_053a01_jump:
		movb   $0x0000dc,0x00007a(%edx)
		jmp    _053c76_jump

	_053a0a_jump:
		movb   $0x000064,0x00007a(%edx)
		jmp    _053c76_jump

	_053a13_jump:
		movb   $0x000096,0x00007a(%edx)
		jmp    _053c76_jump

	_053a1c_jump:
		movb   $0x000032,0x00007a(%edx)
		jmp    _053c76_jump

	_053a25_jump:
		movb   $0x0000fa,0x00007a(%edx)
		jmp    _053c76_jump

	_053a2e_jump:
		movb   $0x000000,0x00007a(%edx)
		jmp    _053c76_jump

	_053a37_jump:
		movw   $0x000000,0x000050(%edx)
		jmp    _053c76_jump

	_053a42_jump:
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053a4f_jump:
		cmp    $0x0000d9,%ax
		je     _0539e6_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053a62_jump:
		cmp    $0x0000b8,%ax
		jb     _053a85_jump
		jbe    _053a1c_jump
		cmp    $0x0000bb,%ax
		jb     _053a42_jump
		jbe    _053a13_jump
		cmp    $0x0000d4,%ax
		je     _053a13_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053a85_jump:
		cmp    $0x0000b7,%ax
		je     _0539f8_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053a9c_jump:
		cmp    $0x00007a,%ax
		jb     _053af2_jump
		jbe    _053a0a_jump
		cmp    $0x000099,%ax
		jb     _053adb_jump
		jbe    _0539dd_jump
		cmp    $0x0000a8,%ax
		jb     _053a42_jump
		cmp    $0x0000a9,%ax
		jbe    _053a2e_jump
		cmp    $0x0000ac,%ax
		je     _053a01_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053adb_jump:
		cmp    $0x000096,%ax
		je     _0539e6_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053af2_jump:
		cmp    $0x000071,%ax
		jb     _053b25_jump
		jbe    _053a37_jump
		cmp    $0x000074,%ax
		jb     _053a42_jump
		jbe    _0539dd_jump
		cmp    $0x000078,%ax
		je     _053a0a_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053b25_jump:
		cmp    $0x000064,%ax
		je     _053a01_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053b3c_jump:
		cmp    $0x000032,%ax
		jb     _053be6_jump
		jbe    _0539ef_jump
		cmp    $0x00003d,%ax
		jb     _053ba2_jump
		jbe    _053a13_jump
		cmp    $0x000046,%ax
		jb     _053b8b_jump
		jbe    _0539e6_jump
		cmp    $0x000048,%ax
		jb     _053a42_jump
		jbe    _053a0a_jump
		cmp    $0x000051,%ax
		je     _053a2e_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053b8b_jump:
		cmp    $0x000041,%ax
		je     _0539ef_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053ba2_jump:
		cmp    $0x000038,%ax
		jb     _053bcf_jump
		jbe    _053a01_jump
		cmp    $0x000039,%ax
		jbe    _053a25_jump
		cmp    $0x00003c,%ax
		je     _053a01_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053bcf_jump:
		cmp    $0x000037,%ax
		je     _053a0a_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053be6_jump:
		cmp    $0x000014,%ax
		jb     _053c3c_jump
		jbe    _0539f8_jump
		cmp    $0x000023,%ax
		jb     _053c25_jump
		jbe    _053a0a_jump
		cmp    $0x000028,%ax
		jb     _053a42_jump
		jbe    _053a0a_jump
		cmp    $0x00002b,%ax
		je     _053a0a_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053c25_jump:
		cmp    $0x000020,%ax
		je     _053a13_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053c3c_jump:
		cmp    $0x00000c,%ax
		jb     _053c5f_jump
		jbe    _0539f8_jump
		cmp    $0x00000e,%ax
		je     _0539f8_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053c5f_jump:
		cmp    $0x000005,%ax
		je     _0539ef_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_053c76_jump:
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

_053c80_switch:
		.long   _05400c_case
		.long   _05401b_case
		.long   _05402a_case
		.long   _054039_case
		.long   _054048_case
		.long   _05405d_case
		.long   _05406c_case




_053c9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		movw   $0x000000,0x000048(%eax)
		movl   $0x000000,0x000024(%eax)
		call   _053420_func
		mov    %al,0x00007e(%ecx)
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		mov    _0930a8_data(,%eax,2),%ax
		mov    %ax,0x00005c(%ecx)
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x0000a3,%eax
		je     _053ce8_jump
		mov    0x00006f(%ecx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%ecx),%al
		mov    %al,0x00006c(%ecx)

	_053ce8_jump:
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00003c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		movw   $0x000000,0x000040(%ecx)
		add    %edx,%eax
		movw   $0x000000,0x000042(%ecx)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000002(%eax,%edx,8),%al
		movb   $0x000000,0x000073(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000000,0x000072(%ecx)
		movw   $0x00ffff,0x000056(%ecx)
		movw   $0x00ffff,0x00004a(%ecx)
		movb   $0x000000,0x00007b(%ecx)
		mov    %al,0x00006a(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x00ffff,0x000046(%ecx)
		and    $0x0000f7,%ah
		mov    0x000010(%ecx),%ebx
		mov    %ah,0x000081(%ecx)
		lea    0x000081(%ecx),%eax
		test   %ebx,%ebx
		setne  %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		shl    $0x000004,%dl
		mov    %dh,%bl
		or     %dl,%bl
		xor    %edx,%edx
		mov    %bl,(%eax)
		mov    $0x000005,%ebx
		lea    0x000062(%ecx),%eax
		call   _079cd0_func
		mov    %ecx,%eax
		call   _0565a0_func
		movw   $0x000000,0x000058(%ecx)
		movb   $0x0000ff,0x00007c(%ecx)
		movl   $0x000001,0x000030(%ecx)
		movb   $0x000000,0x00007f(%ecx)
		movb   $0x000000,0x00007d(%ecx)
		mov    0x000077(%ecx),%al
		mov    0x000081(%ecx),%bh
		mov    %al,0x000076(%ecx)
		and    $0x00003f,%bh
		mov    0x000082(%ecx),%al
		mov    %bh,0x000081(%ecx)
		and    $0x0000fe,%al
		mov    0x000060(%ecx),%bx
		mov    %al,0x000082(%ecx)
		mov    %ebx,%eax
		cmp    $0x0000af,%bx
		jb     _054396_jump
		cmp    $0x0000af,%bx
		jbe    _053eec_jump
		cmp    $0x0000df,%bx
		jb     _0542db_jump
		jbe    _054500_jump
		cmp    $0x0000ed,%bx
		jb     _054294_jump
		jbe    _054170_jump
		cmp    $0x0000f1,%bx
		jb     _05425c_jump
		jbe    _054190_jump
		cmp    $0x0000fa,%bx
		jb     _05424a_jump
		jbe    _053eec_jump
		cmp    $0x0000fc,%bx
		jbe    _053e89_jump
		jmp    _054500_jump

	_053e33_jump:
		mov    %ecx,%eax
		call   _06a900_func
		jmp    _054500_jump

	_053e3f_jump:
		mov    _0c331d_data,%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _054500_jump
		mov    $0x000001,%edx
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %dx,_0cd0ee_data
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		movb   $0x000002,0x00006e(%ecx)
		call   _056614_func
		jmp    _054500_jump

	_053e89_jump:
		movw   $0x00fff1,0x00003c(%ecx)
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053e9f_jump:
		mov    0x000028(%ecx),%ax
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %ax,_0c25da_data
		mov    0x000069(%ecx),%dl
		mov    $_0c1b4c_data,%eax
		mov    $0x004000,%ecx
		call   _0189c4_func
		sub    %edx,%eax
		mov    %ecx,_0c25ec_data
		add    $0x000010,%eax
		mov    %esi,_0c25f0_data
		mov    %ax,_0c25dc_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053edf_jump:
		mov    0x000076(%ecx),%al
		mov    %al,0x00006b(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053eec_jump:
		mov    0x000076(%ecx),%al
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053f0e_jump:
		movb   $0x000005,0x000072(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053f19_jump:
		movb   $0x00000a,0x000072(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053f24_jump:
		movw   $0x0000d5,0x000060(%ecx)

	_053f2a_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x004000,%edi
		call   _0456b4_func
		xor    %ebp,%ebp
		xor    %bl,%bl
		mov    %ecx,%eax
		mov    $0x0000ff,%dh
		call   _044d5c_func
		mov    %edi,_0c25ec_data
		mov    %ebp,_0c25f0_data
		mov    %dh,_0c25e6_data
		mov    %bl,_0c13e2_data
		mov    %dh,_0c25e8_data
		xor    %al,%al
		movb   $0x0000b4,0x00007f(%ecx)
		mov    %al,_0c25e4_data
		mov    %al,_0c25e7_data
		xor    %bh,%bh
		xor    %ch,%ch
		mov    %bh,_0c25e1_data
		mov    %ch,_0c25e3_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053f8d_jump:
		xor    %dh,%dh
		mov    %dh,_0c25e7_data

	_053f95_jump:
		mov    %ecx,%eax
		movw   $0x0000ff,0x00005a(%ecx)
		call   _0484d8_func
		xor    %edx,%edx
		xor    %bl,%bl
		mov    $0x004000,%eax
		mov    %edx,_0c25f0_data
		mov    %bl,_0c13e2_data
		movb   $0x000064,0x00007f(%ecx)
		mov    $0x0000ff,%cl
		xor    %bh,%bh
		mov    %eax,_0c25ec_data
		mov    %bh,_0c25e1_data
		mov    %cl,_0c25e8_data
		xor    %al,%al
		xor    %ch,%ch
		mov    %al,_0c25e4_data
		mov    %ch,_0c25e3_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053fe6_jump:
		mov    0x000081(%ecx),%al
		movb   $0x00001e,0x000074(%ecx)
		and    $0x0000df,%al
		mov    %al,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053fff_jump:
		movw   $0x000000,0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05400c_case:
		movb   $0x000002,0x00007d(%ecx)
		movb   $0x000000,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05401b_case:
		movb   $0x000008,0x00007d(%ecx)
		movb   $0x00003c,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05402a_case:
		movb   $0x000018,0x00007d(%ecx)
		movb   $0x0000aa,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054039_case:
		movb   $0x00000a,0x00007d(%ecx)
		movb   $0x000064,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054048_case:
		movw   $0x000000,0x00004a(%ecx)
		movb   $0x000001,0x00007d(%ecx)
		movb   $0x000000,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05405d_case:
		movb   $0x000004,0x00007d(%ecx)
		movb   $0x00003c,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05406c_case:
		movb   $0x000024,0x00007d(%ecx)
		movb   $0x000078,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05407b_jump:
		mov    0x000075(%ecx),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _054500_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_053c80_switch(,%eax,4)

	_054095_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000028,0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0540a8_jump:
		movb   $0x000001,0x00007d(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0540b3_jump:
		xor    %eax,%eax
		mov    0x00006e(%ecx),%al
		xor    %edx,%edx
		cmp    $0x00000e,%eax
		sete   %al
		mov    %al,%dl
		mov    %ecx,%eax
		call   _03a4a0_func
		movw   $0x000000,0x000056(%ecx)
		movb   $0x000050,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0540da_jump:
		movw   $0x000064,0x00004a(%ecx)
		mov    0x000081(%ecx),%dl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%dl
		mov    %ax,0x000056(%ecx)
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0540fe_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _054124_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d5a4_func
		sub    $0x000002,%eax
		mov    %ax,0x000050(%ecx)
		mov    %ax,0x000056(%ecx)
		jmp    _054130_jump

	_054124_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000014,0x000056(%ecx)

	_054130_jump:
		mov    0x000081(%ecx),%dh
		movw   $0x000014,0x000052(%ecx)
		or     $0x000024,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05414c_jump:
		movw   $0x00000f,0x00004a(%ecx)
		mov    0x000081(%ecx),%bl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%bl
		mov    %ax,0x000056(%ecx)
		mov    %bl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054170_jump:
		movw   $0x000001,0x00004a(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000056(%ecx)

	_05417e_jump:
		orb    $0x000004,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05418c_jump:
		movb   $0x000000,0x00007d(%ecx)

	_054190_jump:
		movw   $0x000000,0x000052(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05419d_jump:
		xor    %ebx,%ebx
		movb   $0x0000a0,0x00007a(%ecx)
		mov    %bx,_0c51c6_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0541b1_jump:
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0541ce_jump:
		orb    $0x000008,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0541dc_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0541e9_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000007(%eax)
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000017(%eax)
		movw   $0x000000,0x00004a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05420a_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _054223_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000039,%eax
		jne    _054223_jump
		mov    %ecx,_0c1eec_data
		jmp    _054229_jump

	_054223_jump:
		mov    %ecx,_0c1ee8_data

	_054229_jump:
		movb   $0x000003,0x00007e(%ecx)
		mov    0x000081(%ecx),%bl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05424a_jump:
		cmp    $0x0000f3,%bx
		je     _054170_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05425c_jump:
		cmp    $0x0000ef,%bx
		jb     _054500_jump
		jbe    _0540b3_jump

	_05426d_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _061dd0_func
		mov    %al,0x00006b(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054294_jump:
		cmp    $0x0000e4,%bx
		jb     _0542be_jump
		jbe    _053e3f_jump
		cmp    $0x0000e6,%bx
		jbe    _053eec_jump
		cmp    $0x0000eb,%bx
		je     _053edf_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0542be_jump:
		cmp    $0x0000e2,%bx
		jb     _054500_jump
		jbe    _0541ce_jump
		movb   $0x000002,_0c25e7_data
		jmp    _053f95_jump

	_0542db_jump:
		cmp    $0x0000bf,%bx
		jb     _054349_jump
		jbe    _053edf_jump
		cmp    $0x0000d4,%bx
		jb     _054326_jump
		jbe    _0541dc_jump
		cmp    $0x0000d9,%bx
		jb     _054314_jump
		jbe    _0541e9_jump
		cmp    $0x0000da,%bx
		je     _053e9f_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054314_jump:
		cmp    $0x0000d5,%bx
		je     _053f2a_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054326_jump:
		cmp    $0x0000c5,%bx
		jb     _054500_jump
		jbe    _0541b1_jump
		cmp    $0x0000ca,%bx
		je     _05420a_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054349_jump:
		cmp    $0x0000b4,%bx
		jb     _054379_jump
		jbe    _053e33_jump
		cmp    $0x0000b7,%bx
		jb     _054500_jump
		jbe    _053e33_jump
		cmp    $0x0000b8,%bx
		je     _0541ce_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054379_jump:
		cmp    $0x0000b0,%bx
		jbe    _05426d_jump
		cmp    $0x0000b2,%bx
		je     _054190_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054396_jump:
		cmp    $0x000048,%bx
		jb     _054470_jump
		jbe    _0540a8_jump
		cmp    $0x00007b,%bx
		jb     _054418_jump
		jbe    _05407b_jump
		cmp    $0x000096,%bx
		jb     _0543f5_jump
		jbe    _05419d_jump
		cmp    $0x0000a8,%bx
		jb     _0543e3_jump
		cmp    $0x0000a9,%bx
		jbe    _054190_jump
		cmp    $0x0000aa,%bx
		je     _0541b1_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0543e3_jump:
		cmp    $0x000098,%bx
		je     _054170_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0543f5_jump:
		cmp    $0x000090,%bx
		jb     _054500_jump
		jbe    _053fff_jump
		cmp    $0x000091,%bx
		je     _054095_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054418_jump:
		cmp    $0x00004d,%bx
		jb     _05444f_jump
		jbe    _0540b3_jump
		cmp    $0x000062,%bx
		jb     _054500_jump
		jbe    _053f24_jump
		cmp    $0x000074,%bx
		jb     _054500_jump
		cmp    $0x000076,%bx
		jbe    _05418c_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05444f_jump:
		cmp    $0x00004a,%bx
		jb     _054500_jump
		jbe    _053e33_jump
		cmp    $0x00004b,%bx
		je     _0541b1_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054470_jump:
		cmp    $0x00001c,%bx
		jb     _0544c4_jump
		jbe    _0540da_jump
		cmp    $0x000032,%bx
		jb     _0544a9_jump
		jbe    _053f8d_jump
		cmp    $0x000034,%bx
		jb     _053f0e_jump
		jbe    _053f19_jump
		cmp    $0x000035,%bx
		je     _053f0e_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0544a9_jump:
		cmp    $0x00001d,%bx
		jbe    _054170_jump
		cmp    $0x000022,%bx
		je     _054170_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0544c4_jump:
		cmp    $0x000015,%bx
		jb     _0544ed_jump
		jbe    _05417e_jump
		cmp    $0x000019,%bx
		jb     _054500_jump
		jbe    _05414c_jump
		cmp    $0x00001a,%bx
		je     _0540fe_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0544ed_jump:
		test   %bx,%bx
		jbe    _053fe6_jump
		cmp    $0x000007,%bx
		je     _05417e_jump

	_054500_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054508_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    _0c1b38_data,%cx
		mov    %dx,_0c1b48_data
		mov    %dx,_0c1b40_data
		test   %cx,%cx
		jle    _054551_jump
		xor    %ecx,%ecx

	_05452d_jump:
		mov    _0c1b44_data,%ebx
		movswl %dx,%eax
		mov    %cx,(%ebx,%eax,2)
		mov    _0c1b3c_data,%ebx
		mov    _0c1b38_data,%si
		inc    %edx
		mov    %cx,(%ebx,%eax,2)
		cmp    %si,%dx
		jl     _05452d_jump

	_054551_jump:
		mov    _0c1b34_data,%ebx
		mov    _0c1b38_data,%ax
		xor    %edx,%edx
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _0545eb_jump
		jmp    _054596_jump

	_05456d_jump:
		mov    _0c1b40_data,%ax
		mov    _0c1b3c_data,%ecx
		movswl %ax,%esi
		inc    %eax
		mov    %dx,(%ecx,%esi,2)
		mov    %ax,_0c1b40_data

	_054587_jump:
		mov    (%esp),%eax
		inc    %edx
		add    $0x000084,%ebx
		cmp    %ax,%dx
		jge    _0545eb_jump

	_054596_jump:
		cmpw   $0x000000,_0c51be_data
		jne    _0545bf_jump
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000002,_092239_data(,%eax,4)
		je     _0545bf_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _06a694_func
		test   %al,%al
		jne    _054587_jump

	_0545bf_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000001,_092238_data(,%eax,4)
		je     _05456d_jump
		mov    _0c1b48_data,%ax
		movswl %ax,%ecx
		inc    %eax
		mov    _0c1b44_data,%esi
		mov    %ax,_0c1b48_data
		mov    %dx,(%esi,%ecx,2)
		jmp    _054587_jump

	_0545eb_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0545f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %al,0x00000c(%esp)
		mov    $0xffffffff,%edx
		xor    %ah,%ah
		xor    %esi,%esi
		mov    %dx,0x000004(%esp)
		mov    %edx,%ebx
		mov    %dx,(%esp)
		mov    %ah,_0c51b4_data
		mov    %ah,_0c251a_data
		mov    %ah,_0c13e2_data
		mov    %dx,_0c2514_data
		mov    %si,_0c2528_data
		mov    %dx,_0c250c_data
		mov    %dx,_0c250e_data
		mov    %dx,_0c260c_data
		mov    %dx,_0c260e_data
		mov    %dx,_0c2590_data
		mov    %dx,_0c2592_data
		mov    %dx,_0c258e_data
		mov    %dx,_0c51d0_data
		mov    %dx,_0c51ce_data
		mov    %dx,_0c1b04_data
		mov    %dx,_0c2510_data
		mov    %dx,_0c1b08_data
		mov    %dx,_0c51ca_data
		mov    %dx,_0c1b16_data
		mov    %dx,_0c1b18_data
		mov    %dx,_0c1b1a_data
		mov    %dx,_0c1b1c_data
		mov    %dx,_0c1b06_data
		mov    _0c1b34_data,%eax
		xor    %dl,%bl
		mov    %edx,%esi
		mov    %bl,_0c51b6_data
		xor    %edx,%esi
		mov    _0c1b38_data,%dx
		mov    %eax,%ecx
		mov    %edx,0x000008(%esp)
		test   %dx,%dx
		jle    _05559c_jump
		lea    0x000081(%eax),%edi

	_0546df_jump:
		mov    0x00000c(%esp),%al
		mov    %si,0x000034(%ecx)
		test   %al,%al
		je     _0546f2_jump
		mov    %ecx,%eax
		call   _053914_func

	_0546f2_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		movw   $0x000000,0x00005e(%ecx)
		cmp    $0x0000a3,%eax
		jne    _054711_jump
		mov    0x00006f(%ecx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%ecx),%al
		mov    %al,0x00006c(%ecx)

	_054711_jump:
		mov    %ecx,%eax
		call   _053c9c_func
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000001,_092238_data(,%eax,4)
		je     _05474a_jump
		movl   $0xffff8300,0x000028(%ecx)
		mov    0x000081(%ecx),%bl
		movl   $0xffff8300,0x00002c(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _054751_jump

	_05474a_jump:
		orb    $0x000004,0x000081(%ecx)

	_054751_jump:
		mov    0x000060(%ecx),%dx
		mov    %edx,%eax
		cmp    $0x000079,%dx
		jb     _055282_jump
		jbe    _05535f_jump
		cmp    $0x0000c4,%dx
		jb     _05513e_jump
		cmp    $0x0000c5,%dx
		jbe    _05535f_jump
		cmp    $0x0000dc,%dx
		jb     _05501c_jump
		jbe    _054911_jump
		cmp    $0x0000ee,%dx
		jb     _054fd3_jump
		jbe    _054e2f_jump
		cmp    $0x0000f6,%dx
		jb     _054fb2_jump
		jbe    _05483b_jump
		cmp    $0x0000f9,%dx
		jb     _0554e0_jump
		jbe    _0547c9_jump
		cmp    $0x000101,%dx
		je     _05481b_jump
		jmp    _0554e0_jump

	_0547c9_jump:
		xor    %eax,%eax
		mov    0x00006e(%ecx),%al
		cmp    $0x000002,%eax
		jne    _0554e0_jump
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c1b08_data
		jmp    _0554e0_jump

	_0547e6_jump:
		testb  $0x000008,_0c3314_data
		jne    _054e2f_jump
		mov    _0c331d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000fb,%bh
		shl    $0x000002,%al
		mov    %bh,%ah
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _0554e0_jump

	_05481b_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c51ca_data
		jmp    _0554e0_jump

	_05482a_jump:
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000056(%ecx)
		jmp    _0554e0_jump

	_05483b_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c1b06_data
		jmp    _0554e0_jump

	_05484a_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%bl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %ax,_0c1b16_data
		mov    %bl,0x000081(%ecx)
		jmp    _0554e0_jump

	_054875_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %ax,_0c1b1c_data
		mov    %bh,0x000081(%ecx)
		jmp    _0554e0_jump

	_0548a0_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		mov    %ax,_0c1b18_data
		and    $0x0000fb,%dl
		mov    0x000034(%ecx),%ax
		mov    %dl,0x000081(%ecx)
		mov    %ax,0x000004(%esp)
		jmp    _0554e0_jump

	_0548d4_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c1b1a_data
		mov    0x000034(%ecx),%ax
		mov    %ax,(%esp)
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000050(%ecx)
		or     $0x000008,%al
		mov    %al,0x000081(%ecx)
		mov    %al,%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _0554e0_jump

	_054911_jump:
		mov    %si,_0c2510_data
		movw   $0x000000,0x000056(%ecx)
		jmp    _0554e0_jump

	_054923_jump:
		mov    _0c250e_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		mov    0x00002c(%edx,%eax,1),%eax
		add    $0x000078,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _0554e0_jump

	_05494f_jump:
		mov    0x000081(%ecx),%bl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _0554e0_jump

	_05496a_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _054a79_jump
		mov    _0c24aa_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x000028(%ecx)
		cmp    $0x000001,%eax
		jne    _0549b9_jump
		testb  $0x000040,_0c3314_data
		je     _0549a4_jump
		movb   $0x000001,0x000076(%ecx)

	_0549a4_jump:
		mov    _0c2522_data,%eax
		sar    $0x000010,%eax
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _054a4a_jump

	_0549b9_jump:
		mov    0x000028(%ecx),%ax
		mov    %ax,0x000050(%ecx)
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		movb   $0x000000,0x000076(%ecx)
		cmp    $0x000003,%eax
		jne    _0549df_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000007,%eax
		je     _054a44_jump

	_0549df_jump:
		mov    _0c2522_data,%eax
		sar    $0x000010,%eax
		add    $0x000078,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0c2524_data,%ax
		add    $0x000078,%eax
		mov    %ax,0x00003e(%ecx)
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _054a16_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		je     _054a23_jump

	_054a16_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _054a4a_jump

	_054a23_jump:
		mov    _0c2522_data,%eax
		sar    $0x000010,%eax
		add    $0x000082,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0c2524_data,%ax
		add    $0x000082,%eax
		mov    %ax,0x00003e(%ecx)
		jmp    _054a4a_jump

	_054a44_jump:
		movw   $0x000000,0x00003a(%ecx)

	_054a4a_jump:
		mov    0x000081(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %si,_0c2592_data
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000056(%ecx)
		call   _01df3c_func
		jmp    _0554e0_jump

	_054a79_jump:
		mov    _0c2590_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _054bd5_jump
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _054bd5_jump
		andb   $0x0000f7,0x000081(%ecx)
		mov    _0c2590_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		movw   $0x000000,0x000042(%ecx)
		mov    _0c1b34_data,%edx
		movw   $0x000000,0x000040(%ecx)
		addw   $0x000065,0x000050(%edx,%eax,1)
		mov    0x00004e(%edx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0c2590_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    0x00002c(%edx,%eax,1),%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _054b05_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000007,%eax
		je     _054b75_jump

	_054b05_jump:
		mov    _0c2524_data,%ax
		add    $0x000078,%eax
		mov    %ax,0x00003e(%ecx)
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _054b30_jump
		mov    _0c2524_data,%ax
		add    $0x000082,%eax
		mov    %ax,0x00003e(%ecx)

	_054b30_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _054b83_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jne    _054b83_jump
		mov    _0c2590_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%ebx
		mov    _0c1b34_data,%edx
		mov    0x00002c(%edx,%ebx,1),%edx
		add    %eax,%edx
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		jmp    _054b7f_jump

	_054b75_jump:
		mov    0x00002c(%ecx),%ax
		movw   $0x000000,0x00003a(%ecx)

	_054b7f_jump:
		mov    %ax,0x00003e(%ecx)

	_054b83_jump:
		mov    %ecx,%eax
		call   _01df3c_func
		orb    $0x000004,0x000081(%ecx)
		mov    _0c2590_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		movl   $0x000001,0x000024(%ecx)
		mov    0x000076(%edx,%eax,1),%bl
		inc    %bl
		mov    %bl,0x000076(%edx,%eax,1)
		xor    %eax,%eax
		mov    %bl,%al
		mov    %bl,0x00006c(%ecx)
		cmp    $0x000003,%eax
		jle    _054bca_jump
		mov    %bl,%bh
		sub    $0x000004,%bh
		mov    %bh,0x00006c(%ecx)

	_054bca_jump:
		movw   $0x000000,0x000056(%ecx)
		jmp    _0554e0_jump

	_054bd5_jump:
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _0554e0_jump

	_054bf0_jump:
		mov    _0c3314_data,%dh
		mov    (%edi),%bl
		test   $0x000040,%dh
		sete   %dl
		and    $0x0000fb,%bl
		and    $0x000001,%dl
		shl    $0x000002,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%edi)
		jmp    _0554e0_jump

	_054c12_jump:
		mov    %si,_0c2590_data
		jmp    _0554e0_jump

	_054c1e_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _0554e0_jump
		mov    _0c1b74_data,%ax
		sub    $0x0000c8,%eax
		mov    %ax,0x00003c(%ecx)
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0c1b78_data,%eax
		mov    $0x000009,%ebx
		sub    $0x000032,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01d6f8_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movl   $0x000001,0x000024(%ecx)
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    0x000081(%ecx),%dl
		movb   $0x000000,0x00007f(%ecx)
		or     $0x000008,%dl
		mov    %si,_0c258e_data
		mov    %dl,0x000081(%ecx)
		jmp    _0554e0_jump

	_054c9b_jump:
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %si,_0c250e_data
		mov    %dh,0x000081(%ecx)
		jmp    _0554e0_jump

	_054cbd_jump:
		cmpb   $0x000000,_0c2161_data
		je     _054cd7_jump
		cmpw   $0x000000,_0c51be_data
		jne    _054cd7_jump
		andb   $0x0000fb,0x000081(%ecx)

	_054cd7_jump:
		mov    0x00006d(%ecx),%al
		test   %al,%al
		jbe    _054ce7_jump
		cmp    $0x000005,%al
		je     _054cf7_jump
		jmp    _0554e0_jump

	_054ce7_jump:
		movb   $0x000000,0x00007f(%ecx)
		movl   $0x000000,0x000024(%ecx)
		jmp    _0554e0_jump

	_054cf7_jump:
		movb   $0x00001e,0x00007f(%ecx)
		jmp    _0554e0_jump

	_054d00_jump:
		mov    _0c2526_data,%eax
		sar    $0x000010,%eax
		mov    %si,_0c252a_data(,%eax,2)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0c2528_data,%dx
		mov    0x00003a(%ecx),%eax
		inc    %edx
		sar    $0x000010,%eax
		mov    %dx,_0c2528_data
		mov    %eax,0x000028(%ecx)
		mov    _0c2526_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000032,%eax
		jl     _054d48_jump
		mov    $_0c0550_data,%eax
		call   _01f878_func

	_054d48_jump:
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _0554e0_jump

	_054d54_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000008(%eax),%eax
		movb   $0x000000,0x000016(%eax)
		jmp    _0554e0_jump

	_054d63_jump:
		mov    _0c251a_data,%al
		mov    _0c251a_data,%dl
		and    $0x0000ff,%eax
		inc    %dl
		mov    %si,_0c2516_data(,%eax,2)
		mov    %dl,_0c251a_data
		jmp    _0554e0_jump

	_054d88_jump:
		mov    0x000081(%ecx),%dl
		and    $0x0000fb,%dl
		mov    %si,_0c250c_data
		mov    %dl,0x000081(%ecx)
		jmp    _0554e0_jump

	_054da3_jump:
		andb   $0x0000fb,0x000081(%ecx)
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c1b02_data
		jmp    _0554e0_jump

	_054db9_jump:
		mov    _0c1f00_data,%al
		mov    %al,0x00006e(%ecx)
		mov    %si,_0c2512_data
		mov    %al,0x00006c(%ecx)
		mov    _0c2510_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		add    %eax,%edx
		mov    0x000081(%ecx),%ah
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%ah
		mov    %edx,_0c1ef0_data
		mov    %ah,0x000081(%ecx)
		jmp    _0554e0_jump

	_054dff_jump:
		mov    0x000081(%ecx),%bh
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%bh
		mov    %si,_0c250a_data
		mov    %bh,0x000081(%ecx)
		jmp    _0554e0_jump

	_054e1e_jump:
		movw   $0x000028,0x000056(%ecx)
		jmp    _0554e0_jump

	_054e29_jump:
		movw   $0x000000,0x000056(%ecx)

	_054e2f_jump:
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _0554e0_jump

	_054e3b_jump:
		movw   $0x000000,0x000052(%ecx)
		jmp    _0554e0_jump

	_054e46_jump:
		movl   $0x000000,0x000024(%ecx)
		mov    0x000081(%ecx),%dh
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _0554e0_jump

	_054e65_jump:
		movb   $0x000007,0x000078(%ecx)
		movb   $0x000000,0x00007f(%ecx)
		jmp    _0554e0_jump

	_054e72_jump:
		movw   $0x000001,0x00004a(%ecx)
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000007,0x000078(%ecx)
		mov    0x000081(%ecx),%dh
		mov    0x00004a(%ecx),%ax
		and    $0x0000fb,%dh
		mov    %ax,0x000056(%ecx)
		mov    %dh,0x000081(%ecx)
		jmp    _0554e0_jump

	_054e9f_jump:
		movswl %si,%eax
		cmp    $0x000001,%eax
		jl     _0554e0_jump
		movswl %si,%eax
		dec    %eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		add    %edx,%eax
		orb    $0x000004,0x000081(%ecx)
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		cmp    $0x00000a,%edx
		jne    _0554e0_jump
		mov    0x000028(%eax),%eax
		cmp    0x000028(%ecx),%eax
		jne    _0554e0_jump
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _0554e0_jump

	_054efa_jump:
		mov    %ecx,%eax
		call   _020ed0_func
		jmp    _0554e0_jump

	_054f06_jump:
		mov    _0c331d_data,%bl
		mov    0x000034(%ecx),%ax
		movb   $0x000007,0x000078(%ecx)
		mov    %ax,_0c2514_data
		test   $0x000008,%bl
		je     _0554e0_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movb   $0x000004,0x00006e(%ecx)
		call   _01d6f8_func
		jmp    _0554e0_jump

	_054f3a_jump:
		mov    0x000081(%ecx),%ah
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _0554e0_jump

	_054f52_jump:
		movw   $0x00ffff,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    %si,_0c51d0_data

	_054f65_jump:
		movb   $0x000000,0x00007f(%ecx)
		jmp    _0554e0_jump

	_054f6e_jump:
		mov    %si,_0c51ce_data
		jmp    _0554e0_jump

	_054f7a_jump:
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x00003c(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		mov    0x00003a(%ecx),%eax
		movw   $0x000000,0x00003e(%ecx)
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00003c(%ecx),%eax
		movl   $0x000000,0x000024(%ecx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _0554e0_jump

	_054fb2_jump:
		cmp    $0x0000f2,%dx
		jb     _0554e0_jump
		jbe    _05494f_jump
		cmp    $0x0000f4,%dx
		je     _05535f_jump
		jmp    _0554e0_jump

	_054fd3_jump:
		cmp    $0x0000e7,%dx
		jb     _054ffb_jump
		jbe    _0548a0_jump
		cmp    $0x0000e8,%dx
		jbe    _0548d4_jump
		cmp    $0x0000e9,%dx
		je     _05535f_jump
		jmp    _0554e0_jump

	_054ffb_jump:
		cmp    $0x0000df,%dx
		jb     _0554e0_jump
		jbe    _05484a_jump
		cmp    $0x0000e0,%dx
		je     _054e2f_jump
		jmp    _0554e0_jump

	_05501c_jump:
		cmp    $0x0000cd,%dx
		jb     _0550df_jump
		jbe    _054da3_jump
		cmp    $0x0000d7,%dx
		jb     _0550b9_jump
		jbe    _05535f_jump
		cmp    $0x0000da,%dx
		jb     _0554e0_jump
		jbe    _054875_jump
		xor    %eax,%eax
		mov    0x000077(%ecx),%al
		sar    $0x000002,%eax
		mov    %al,0x000076(%ecx)
		mov    _0c250e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0554e0_jump
		mov    _0c250e_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		add    %eax,%edx
		mov    0x000028(%ecx),%eax
		cmp    0x000028(%edx),%eax
		jge    _054923_jump
		mov    _0c250e_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%edx
		mov    0x00002c(%edx,%eax,1),%eax
		add    $0x000070,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _0554e0_jump

	_0550b9_jump:
		cmp    $0x0000ce,%dx
		jbe    _05535f_jump
		cmp    $0x0000d1,%dx
		jb     _0554e0_jump
		cmp    $0x0000d2,%dx
		jbe    _05535f_jump
		jmp    _0554e0_jump

	_0550df_jump:
		cmp    $0x0000c8,%dx
		jb     _05512e_jump
		jbe    _054efa_jump
		cmp    $0x0000cb,%dx
		jb     _0554e0_jump
		jbe    _054e2f_jump
		mov    _0c1b50_data,%eax
		mov    %eax,0x000004(%ecx)
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%ax
		movb   $0x000007,0x000078(%ecx)
		mov    %ax,_0c1b04_data
		jmp    _0554e0_jump

	_05512e_jump:
		cmp    $0x0000c6,%dx
		je     _054efa_jump
		jmp    _0554e0_jump

	_05513e_jump:
		cmp    $0x000093,%dx
		jb     _0551f4_jump
		jbe    _054c1e_jump
		cmp    $0x0000b3,%dx
		jb     _0551ab_jump
		jbe    _05494f_jump
		cmp    $0x0000be,%dx
		jb     _05518a_jump
		jbe    _054e72_jump
		cmp    $0x0000c0,%dx
		jb     _0554e0_jump
		jbe    _05535f_jump
		cmp    $0x0000c2,%dx
		jbe    _05535f_jump
		jmp    _0554e0_jump

	_05518a_jump:
		cmp    $0x0000ba,%dx
		jb     _0554e0_jump
		jbe    _05535f_jump
		cmp    $0x0000bb,%dx
		je     _054f6e_jump
		jmp    _0554e0_jump

	_0551ab_jump:
		cmp    $0x00009d,%dx
		jb     _0551d9_jump
		jbe    _05496a_jump
		cmp    $0x0000a5,%dx
		jb     _0554e0_jump
		jbe    _054d54_jump
		cmp    $0x0000ad,%dx
		je     _054f52_jump
		jmp    _0554e0_jump

	_0551d9_jump:
		cmp    $0x000094,%dx
		jbe    _0552f8_jump
		cmp    $0x000099,%dx
		je     _054c12_jump
		jmp    _0554e0_jump

	_0551f4_jump:
		cmp    $0x000088,%dx
		jb     _055245_jump
		jbe    _054c9b_jump
		cmp    $0x00008f,%dx
		jb     _055224_jump
		jbe    _05535f_jump
		cmp    $0x000091,%dx
		jb     _0554e0_jump
		jbe    _054e1e_jump
		jmp    _05535f_jump

	_055224_jump:
		cmp    $0x00008b,%dx
		jb     _0554e0_jump
		jbe    _05535f_jump
		cmp    $0x00008e,%dx
		je     _0552f8_jump
		jmp    _0554e0_jump

	_055245_jump:
		cmp    $0x000082,%dx
		jb     _055273_jump
		jbe    _05535f_jump
		cmp    $0x000085,%dx
		jb     _0554e0_jump
		jbe    _0547e6_jump
		cmp    $0x000087,%dx
		je     _05535f_jump
		jmp    _0554e0_jump

	_055273_jump:
		cmp    $0x00007a,%dx
		je     _05535f_jump
		jmp    _0554e0_jump

	_055282_jump:
		cmp    $0x00003e,%dx
		jb     _0553c9_jump
		jbe    _05535f_jump
		cmp    $0x00005e,%dx
		jb     _05533f_jump
		jbe    _054db9_jump
		cmp    $0x00006d,%dx
		jb     _055301_jump
		jbe    _0552f8_jump
		cmp    $0x000070,%dx
		jb     _0552d5_jump
		jbe    _05535f_jump
		cmp    $0x000073,%dx
		jb     _0554e0_jump
		jbe    _054e46_jump
		cmp    $0x000077,%dx
		je     _05535f_jump
		jmp    _0554e0_jump

	_0552d5_jump:
		cmp    $0x00006e,%dx
		jbe    _05535f_jump
		testb  $0x000008,_0c331d_data
		je     _0552f8_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		movb   $0x00000a,0x00006e(%ecx)

	_0552f8_jump:
		movb   $0x000007,0x000078(%ecx)
		jmp    _0554e0_jump

	_055301_jump:
		cmp    $0x000063,%dx
		jb     _055324_jump
		jbe    _054cbd_jump
		cmp    $0x000066,%dx
		jb     _0554e0_jump
		jbe    _05535f_jump
		cmp    $0x00006c,%dx
		je     _05535f_jump
		jmp    _0554e0_jump

	_055324_jump:
		cmp    $0x000060,%dx
		jb     _0554e0_jump
		jbe    _05482a_jump
		cmp    $0x000061,%dx
		je     _05535f_jump
		jmp    _0554e0_jump

	_05533f_jump:
		cmp    $0x000049,%dx
		jb     _05539d_jump
		jbe    _05535f_jump
		cmp    $0x000052,%dx
		jb     _05537e_jump
		jbe    _0552f8_jump
		cmp    $0x000053,%dx
		jbe    _05535f_jump
		cmp    $0x00005a,%dx
		jb     _0554e0_jump

	_05535f_jump:
		movl   $0x000000,0x000024(%ecx)

	_055366_jump:
		mov    0x000081(%ecx),%bl
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _0554e0_jump

	_05537e_jump:
		cmp    $0x00004e,%dx
		jb     _0554e0_jump
		cmp    $0x00004f,%dx
		jbe    _05535f_jump
		cmp    $0x000051,%dx
		je     _054d63_jump
		jmp    _0554e0_jump

	_05539d_jump:
		cmp    $0x000041,%dx
		jb     _0553ba_jump
		jbe    _054e3b_jump
		cmp    $0x000042,%dx
		jbe    _05535f_jump
		cmp    $0x000047,%dx
		je     _05535f_jump
		jmp    _0554e0_jump

	_0553ba_jump:
		cmp    $0x000040,%dx
		je     _054d00_jump
		jmp    _0554e0_jump

	_0553c9_jump:
		cmp    $0x00001f,%dx
		jb     _05546e_jump
		jbe    _054f3a_jump
		cmp    $0x000027,%dx
		jb     _055433_jump
		jbe    _054e29_jump
		cmp    $0x000033,%dx
		jb     _055414_jump
		cmp    $0x000034,%dx
		jbe    _05535f_jump
		cmp    $0x000037,%dx
		jb     _0554e0_jump
		jbe    _054f06_jump
		cmp    $0x00003b,%dx
		je     _05535f_jump
		jmp    _0554e0_jump

	_055414_jump:
		cmp    $0x00002c,%dx
		jb     _0554e0_jump
		jbe    _05535f_jump
		cmp    $0x00002e,%dx
		je     _054efa_jump
		jmp    _0554e0_jump

	_055433_jump:
		cmp    $0x000024,%dx
		jb     _055455_jump
		jbe    _05535f_jump
		cmp    $0x000025,%dx
		jbe    _054bf0_jump
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _0554e0_jump

	_055455_jump:
		cmp    $0x000020,%dx
		jbe    _054f7a_jump
		cmp    $0x000021,%dx
		je     _05535f_jump
		jmp    _0554e0_jump

	_05546e_jump:
		cmp    $0x00000d,%dx
		jb     _0554b4_jump
		jbe    _05535f_jump
		cmp    $0x000014,%dx
		jb     _05549c_jump
		jbe    _054e65_jump
		cmp    $0x000015,%dx
		jbe    _054f65_jump
		cmp    $0x000017,%dx
		je     _054d88_jump
		jmp    _0554e0_jump

	_05549c_jump:
		cmp    $0x00000f,%dx
		jb     _0554e0_jump
		jbe    _05535f_jump
		cmp    $0x000013,%dx
		je     _054d48_jump
		jmp    _0554e0_jump

	_0554b4_jump:
		cmp    $0x000009,%dx
		jb     _0554d6_jump
		jbe    _054d54_jump
		cmp    $0x00000a,%dx
		jbe    _054e9f_jump
		cmp    $0x00000b,%dx
		je     _054dff_jump
		jmp    _0554e0_jump

	_0554d6_jump:
		cmp    $0x000003,%dx
		je     _055366_jump

	_0554e0_jump:
		xor    %eax,%eax
		mov    _0c261c_data,%al
		imul   $0x000014,%eax,%eax
		mov    _094a1d_data(%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x000006,%eax
		jne    _055526_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x00003a,%eax
		jne    _055526_jump
		movl   $0x000000,0x000024(%ecx)
		mov    0x000081(%ecx),%bh
		mov    0x000032(%ecx),%eax
		and    $0x0000fb,%bh
		sar    $0x000010,%eax
		mov    %bh,0x000081(%ecx)
		call   _06a65c_func

	_055526_jump:
		cmpw   $0x000000,_0c51be_data
		jne    _055565_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000002,_092239_data(,%eax,4)
		je     _055565_jump
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		call   _06a694_func
		test   %al,%al
		je     _055565_jump
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)

	_055565_jump:
		cmpw   $0x000000,_0c51be_data
		je     _055582_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x0000a1,%eax
		jne    _055582_jump
		incb   _0c51b6_data

	_055582_jump:
		mov    0x000008(%esp),%eax
		add    $0x000084,%edi
		inc    %esi
		add    $0x000084,%ecx
		cmp    %ax,%si
		jl     _0546df_jump

	_05559c_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0555d9_jump
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _0555d9_jump
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		mov    (%esp),%ecx
		mov    %cx,0x000052(%ebx,%eax,4)
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    0x000004(%esp),%edx
		mov    %dx,0x000052(%ebx,%eax,4)

	_0555d9_jump:
		cmpw   $0x000000,_0c51be_data
		je     _0555f7_jump
		xor    %eax,%eax
		mov    _0c24fe_data,%al
		xor    %bh,%bh
		mov    %eax,_0c51b8_data
		mov    %bh,_0c24fe_data

	_0555f7_jump:
		call   _054508_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055608_func:
		push   %edx
		mov    %eax,%edx
		call   _053c9c_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000002,0x000030(%edx)
		call   _01df3c_func
		cmpl   $0x000000,0x000020(%edx)
		je     _05562f_jump
		xor    %eax,%eax
		jmp    _055634_jump

	_05562f_jump:
		mov    $0x000078,%eax

	_055634_jump:
		movl   $0x000000,0x000024(%edx)
		mov    %ax,0x00005e(%edx)
		pop    %edx
		ret    



_055644_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c2520_data,%si
		mov    _0c2522_data,%di
		xor    %eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		jmp    _05569d_jump

	_05565f_jump:
		xor    %ecx,%ecx
		mov    %cx,_092650_data(%ebx)

	_055668_jump:
		cmp    $0x000011,%eax
		je     _055677_jump
		cmp    $0x000010,%eax
		je     _055677_jump
		cmp    $0x000018,%eax
		jne    _05568f_jump

	_055677_jump:
		movswl %di,%ecx
		cmp    $0x000001,%ecx
		jne    _055688_jump
		orb    $0x000008,_092239_data(%edx)
		jmp    _05568f_jump

	_055688_jump:
		andb   $0x0000f7,_092239_data(%edx)

	_05568f_jump:
		add    $0x000002,%ebx
		inc    %eax
		add    $0x000004,%edx
		cmp    $0x000106,%eax
		jge    _0556b4_jump

	_05569d_jump:
		test   %eax,%eax
		jne    _055668_jump
		movswl %si,%ecx
		cmp    $0x000003,%ecx
		jne    _05565f_jump
		movw   $0x00ff88,_092650_data(%ebx)
		jmp    _055668_jump

	_0556b4_jump:
		mov    %di,_0c2522_data
		mov    %si,_0c2520_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_055720_switch:
		.long   _05593b_case
		.long   _055916_case
		.long   _0558f8_case
		.long   _055901_case
		.long   _055910_case
		.long   _05591f_case
		.long   _05592e_case
		.long   _055944_case
		.long   _055977_case
		.long   _0559a2_case
		.long   _0559cd_case
		.long   _055a00_case
		.long   _055a2b_case
		.long   _055a57_case
		.long   _055a83_case




_05575c_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%ebx
		mov    _0db270_data,%edx
		movswl %bx,%ebx
		mov    0x000034(%edx),%ecx
		call   _010010_func
		test   %ebx,%ebx
		jl     _05578d_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _055786_jump
		mov    %ebx,%eax

	_055786_jump:
		neg    %eax
		jmp    _05579a_jump

	_05578d_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _05579a_jump
		mov    %ebx,%eax

	_05579a_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000004(%edx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0557ae_jump
		mov    %ebx,%eax

	_0557ae_jump:
		mov    $0x00000f,%ebx
		cmp    %ebx,%eax
		jle    _0557b9_jump
		mov    %ebx,%eax

	_0557b9_jump:
		mov    %al,0x00001d(%edx)
		movl   $0x000000,0x000014(%ecx)
		movl   $0x000000,0x000054(%ecx)
		movl   $0x00013f,0x00003c(%ecx)
		movl   $0x0000c7,0x000068(%ecx)
		movl   $0x0000a0,0x000064(%ecx)
		movl   $0x000000,0x00006c(%ecx)
		mov    0x000014(%ecx),%eax
		mov    %eax,(%ecx)
		mov    0x000054(%ecx),%eax
		mov    %eax,0x000040(%ecx)
		mov    %eax,0x000004(%ecx)
		mov    0x00003c(%ecx),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000068(%ecx),%eax
		mov    %eax,0x00002c(%ecx)
		mov    %eax,0x000018(%ecx)
		mov    0x000064(%ecx),%eax
		mov    %eax,0x000050(%ecx)
		mov    0x00006c(%ecx),%eax
		mov    %eax,0x000058(%ecx)
		mov    %eax,0x000044(%ecx)
		mov    %eax,0x000030(%ecx)
		mov    %eax,0x00001c(%ecx)
		mov    %eax,0x000008(%ecx)
		mov    0x000030(%edx),%ecx
		mov    0x000028(%edx),%eax
		movb   $0x000000,0x000026(%ecx)
		movb   $0x00009f,0x00002a(%ecx)
		movb   $0x000000,0x00002b(%ecx)
		movb   $0x0000c7,0x000029(%ecx)
		mov    %eax,(%ecx)
		mov    0x000026(%ecx),%al
		mov    %al,0x000024(%ecx)
		mov    0x00002a(%ecx),%al
		mov    %al,0x000028(%ecx)
		mov    0x00002b(%ecx),%al
		mov    %al,0x000025(%ecx)
		mov    0x000029(%ecx),%al
		mov    %al,0x000027(%ecx)
		mov    0x000030(%edx),%ecx
		mov    0x00002c(%edx),%eax
		movb   $0x000000,0x000052(%ecx)
		movb   $0x00009f,0x000056(%ecx)
		movb   $0x000000,0x000057(%ecx)
		movb   $0x0000c7,0x000055(%ecx)
		mov    %eax,0x00002c(%ecx)
		mov    0x000052(%ecx),%al
		mov    %al,0x000050(%ecx)
		mov    0x000056(%ecx),%al
		mov    %al,0x000054(%ecx)
		mov    0x000057(%ecx),%al
		mov    %al,0x000051(%ecx)
		mov    0x000055(%ecx),%al
		mov    %al,0x000053(%ecx)
		movw   $0x000000,(%edx)
		movw   $0x000200,0x000002(%edx)
		movw   $0x000000,0x00000a(%edx)
		movw   $0x000000,0x000010(%edx)
		movw   $0x000000,0x000016(%edx)
		movw   $0x0000a0,0x000018(%edx)
		mov    0x00000a(%edx),%ax
		mov    %ax,0x000008(%edx)
		mov    %ax,0x000006(%edx)
		mov    0x000010(%edx),%ax
		mov    %ax,0x00000e(%edx)
		mov    %ax,0x00000c(%edx)
		mov    0x000016(%edx),%ax
		mov    %ax,0x000014(%edx)
		mov    %ax,0x000012(%edx)
		add    $0x00002c,%ecx
		mov    0x000002(%edx),%eax
		movw   $0x000064,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000000,0x00001c(%edx)
		test   %eax,%eax
		jge    _0558dc_jump
		neg    %eax

	_0558dc_jump:
		mov    %eax,%ecx
		mov    0x00001d(%edx),%al
		dec    %al
		cmp    $0x00000e,%al
		ja     _055aa5_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_055720_switch(,%eax,4)

	_0558f8_case:
		mov    %cx,0x000016(%edx)
		jmp    _055aa5_jump

	_055901_case:
		mov    %cx,0x000014(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _055aa5_jump

	_055910_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx

	_055916_case:
		mov    %cx,0x000014(%edx)
		jmp    _055aa5_jump

	_05591f_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _055aa5_jump

	_05592e_case:
		mov    %cx,0x000016(%edx)
		imul   $0x000003,%ecx,%eax
		add    %ecx,%ecx
		mov    %ax,0x000014(%edx)

	_05593b_case:
		mov    %cx,0x000012(%edx)
		jmp    _055aa5_jump

	_055944_case:
		mov    0x000004(%edx),%ax
		movw   $0x000200,0x000006(%edx)
		neg    %eax
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x0000c9,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _055aa5_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _055aa5_jump

	_055977_case:
		mov    0x000004(%edx),%ax
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x0000c9,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _055aa5_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _055aa5_jump

	_0559a2_case:
		mov    0x000004(%edx),%ax
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x00fffe,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _055aa5_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _055aa5_jump

	_0559cd_case:
		mov    0x000004(%edx),%ax
		movw   $0x000200,0x000006(%edx)
		neg    %eax
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x00fffe,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _055aa5_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _055aa5_jump

	_055a00_case:
		mov    0x000004(%edx),%ax
		mov    %ax,0x000014(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x00fffe,0x000018(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _055aa5_jump
		movw   $0x000080,0x000008(%edx)
		jmp    _055aa5_jump

	_055a2b_case:
		mov    0x000004(%edx),%ax
		movw   $0x000200,0x000008(%edx)
		neg    %eax
		mov    %ax,0x000014(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x00fffe,0x000018(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _055aa5_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _055aa5_jump

	_055a57_case:
		mov    0x000004(%edx),%ax
		movw   $0x000200,0x000008(%edx)
		neg    %eax
		mov    %ax,0x000014(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x000141,0x000018(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _055aa5_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _055aa5_jump

	_055a83_case:
		mov    0x000004(%edx),%ax
		mov    %ax,0x000014(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x000141,0x000018(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _055aa5_jump
		movw   $0x000080,0x000008(%edx)

	_055aa5_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%al
		cmp    $0x000001,%eax
		jne    _055ab5_jump
		movw   $0x000081,0x000002(%edx)

	_055ab5_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    

	_055abc_case:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0db270_data,%edx
		test   %edx,%edx
		je     _055af7_jump
		mov    0x000030(%edx),%ebx
		test   %ebx,%ebx
		je     _055ad8_jump
		mov    %ebx,%eax
		call   _07539c_func

	_055ad8_jump:
		mov    0x000034(%edx),%ecx
		test   %ecx,%ecx
		je     _055ae6_jump
		mov    %ecx,%eax
		call   _07539c_func

	_055ae6_jump:
		mov    _0db270_data,%esi
		test   %esi,%esi
		je     _055af7_jump
		mov    %esi,%eax
		call   _07539c_func

	_055af7_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055afc_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ebx,%edi
		mov    %ecx,%ebx
		xor    %cl,%cl
		test   %edi,%edi
		je     _055b69_jump
		test   %ebx,%ebx
		je     _055b69_jump
		mov    $0x000038,%eax
		call   _075384_func
		mov    %eax,%edx
		mov    %eax,_0db270_data
		test   %eax,%eax
		je     _055b69_jump
		mov    %edi,0x000020(%eax)
		mov    %eax,%esi
		mov    %ebx,0x000024(%eax)
		mov    $0x000058,%eax
		call   _075384_func
		mov    %eax,0x000030(%edx)
		test   %eax,%eax
		je     _055b69_jump
		mov    $0x000078,%eax
		call   _075384_func
		mov    %eax,0x000034(%edx)
		test   %eax,%eax
		je     _055b69_jump
		mov    _0cdf30_data,%eax
		mov    %eax,0x000028(%edx)
		lea    0x00c800(%eax),%ebx
		mov    $0x000001,%cl
		mov    %ebx,0x00002c(%edx)

	_055b69_jump:
		test   %cl,%cl
		je     _055ba6_jump
		mov    $0x0000a0,%ebx
		mov    0x000028(%esi),%edx
		mov    0x000020(%esi),%eax
		call   _073a90_func
		mov    $0x0000a0,%ebx
		mov    0x000020(%esi),%eax
		mov    0x00002c(%esi),%edx
		add    $0x0000a0,%eax
		call   _073a90_func
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000004(%esp),%al
		sar    $0x000010,%edx
		call   _05575c_func
		jmp    _055bab_jump

	_055ba6_jump:
		call   _055abc_case

	_055bab_jump:
		mov    %cl,%al
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_055bb4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    _0db270_data,%ecx
		xor    %eax,%eax
		mov    0x00001c(%ecx),%al
		mov    0x000034(%ecx),%edi
		test   %eax,%eax
		jne    _055bfd_jump
		mov    0x000002(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _055bde_jump
		mov    (%ecx),%ax
		jmp    _055be7_jump

	_055bde_jump:
		mov    0x000002(%ecx),%ax
		mov    (%ecx),%bx
		sub    %ebx,%eax

	_055be7_jump:
		mov    %ax,0x000028(%esp)
		mov    0x000028(%esp),%eax
		shl    $0x000002,%eax
		add    $0x000002,%ah
		mov    %ax,0x000028(%esp)
		jmp    _055c04_jump

	_055bfd_jump:
		movw   $0x000200,0x000028(%esp)

	_055c04_jump:
		lea    0x000024(%esp),%ebx
		mov    0x000004(%ecx),%eax
		lea    0x000020(%esp),%edx
		sar    $0x000010,%eax
		call   _053308_func
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000024(%esp),%ebx
		mov    %eax,0x000010(%esp)
		mov    0x000006(%ecx),%eax
		lea    0x000020(%esp),%edx
		sar    $0x000010,%eax
		mov    0x000022(%esp),%ebp
		call   _053308_func
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000014(%esp)
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000024(%esp),%ebx
		mov    %eax,0x00000c(%esp)
		mov    0x000008(%ecx),%eax
		lea    0x000020(%esp),%edx
		sar    $0x000010,%eax
		call   _053308_func
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000018(%esp)
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00001c(%esp)
		xor    %ah,%ah
		sar    $0x000010,%ebp
		mov    %ah,0x00002c(%esp)
		jmp    _055cc5_jump

	_055c83_jump:
		mov    0x000026(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%eax
		add    %edx,%ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000016(%ecx),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,0x00000c(%edi)
		mov    %esi,%edx
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000018(%ecx),%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x00002c(%esp),%dl
		add    $0x000014,%edi
		inc    %dl
		mov    %eax,-0x000004(%edi)
		mov    %dl,0x00002c(%esp)

	_055cc5_jump:
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		cmp    $0x000006,%eax
		jge    _055db5_jump
		mov    0x000016(%ecx),%eax
		mov    (%edi),%edx
		sar    $0x000010,%eax
		mov    0x000018(%ecx),%esi
		sub    %eax,%edx
		sar    $0x000010,%esi
		mov    %edx,%eax
		mov    0x000004(%edi),%edx
		sub    %esi,%edx
		mov    %edx,%esi
		mov    0x000008(%ecx),%edx
		sar    $0x000010,%edx
		mov    0x000008(%edi),%ebx
		test   %edx,%edx
		je     _055d30_jump
		mov    0x00001c(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000018(%esp),%edx
		imul   %esi,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		sub    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000018(%esp),%eax
		imul   0x00001c(%esp),%esi
		add    %eax,%esi
		mov    (%esp),%eax
		sar    $0x000009,%esi
		sar    $0x000009,%eax

	_055d30_jump:
		mov    0x000006(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		je     _055d70_jump
		mov    0x000014(%esp),%edx
		imul   %ebx,%edx
		mov    %edx,0x000008(%esp)
		mov    0x00000c(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		add    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x00000c(%esp),%ebx
		imul   0x000014(%esp),%eax
		sub    %eax,%ebx
		mov    (%esp),%eax
		sar    $0x000009,%ebx
		sar    $0x000009,%eax

	_055d70_jump:
		mov    0x000004(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		je     _055c83_jump
		mov    0x000010(%esp),%edx
		imul   %ebx,%edx
		imul   %ebp,%ebx
		mov    %edx,0x000004(%esp)
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000004(%esp),%edx
		add    0x000008(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000010(%esp),%esi
		sub    %esi,%ebx
		mov    (%esp),%esi
		sar    $0x000009,%ebx
		sar    $0x000009,%esi
		jmp    _055c83_jump

	_055db5_jump:
		mov    0x000012(%ecx),%ax
		mov    0x000006(%ecx),%si
		mov    0x000008(%ecx),%di
		mov    0x00000a(%ecx),%dx
		add    %eax,%esi
		mov    0x000014(%ecx),%ax
		mov    %si,0x000006(%ecx)
		add    %eax,%edi
		mov    0x000016(%ecx),%ax
		mov    %di,0x000008(%ecx)
		add    %eax,%edx
		mov    %dx,0x00000a(%ecx)
		mov    0x000034(%ecx),%edx
		mov    0x000030(%ecx),%eax
		mov    0x00000c(%edx),%ebx
		mov    %ebx,0x000004(%eax)
		mov    0x000010(%edx),%ebx
		mov    %ebx,0x000008(%eax)
		mov    0x000020(%edx),%ebx
		mov    %ebx,0x00000c(%eax)
		mov    0x000024(%edx),%ebx
		mov    %ebx,0x000010(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000014(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x000018(%eax)
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x00001c(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000020(%eax)
		mov    0x000030(%ecx),%eax
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x000030(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000034(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000038(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x00003c(%eax)
		mov    0x000034(%edx),%ebx
		mov    %ebx,0x000040(%eax)
		mov    0x000038(%edx),%ebx
		mov    %ebx,0x000044(%eax)
		mov    0x000048(%edx),%ebx
		mov    %ebx,0x000048(%eax)
		add    $0x00002c,%eax
		mov    0x00004c(%edx),%edx
		mov    %edx,0x000020(%eax)
		mov    0x000002(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _055e57_jump
		neg    %eax

	_055e57_jump:
		mov    (%ecx),%bx
		add    %eax,%ebx
		mov    0x000002(%ecx),%si
		mov    %bx,(%ecx)
		cmp    %si,%bx
		jbe    _055e6d_jump
		movw   $0x000000,(%ecx)

	_055e6d_jump:
		mov    (%ecx),%ax
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055e7c_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    _0db270_data,%ebx
		mov    0x000030(%ebx),%edx
		mov    0x000024(%ebx),%eax
		mov    %edx,%esi
		call   _010045_func
		lea    0x00002c(%edx),%esi
		mov    0x000024(%ebx),%eax
		call   _010045_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_055eb0_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		decb   0x00007c(%eax)
		pop    %edx
		ret    



_055ec4_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00007f,%edx
		jle    _055edd_jump
		mov    $0x000100,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		neg    %eax
		pop    %edx
		ret    

	_055edd_jump:
		xor    %ah,%ah
		pop    %edx
		ret    

	_055ee4_jump:
		xor    %al,%al
		ret    



_055ee8_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_055f08_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		cmp    $0x000004,%dx
		jbe    _055f2b_jump
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_055f2b_jump:
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000050(%eax)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_055f48_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _055ec4_func
		mov    0x000046(%edx),%cx
		mov    %ax,0x000048(%edx)
		inc    %ecx
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%ebx
		mov    0x000010(%edx),%eax
		sar    $0x000010,%ebx
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _055ec4_func
		mov    %ax,0x000052(%edx)
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055f94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		mov    0x000046(%edx),%cx
		xor    %ah,%ah
		inc    %ecx
		mov    %ax,0x000048(%edx)
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _055ec4_func
		mov    0x000046(%edx),%si
		mov    %ax,0x000056(%edx)
		inc    %esi
		mov    %si,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _055ec4_func
		mov    %ax,0x00004a(%edx)
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056000_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _056548_func
		mov    $0x000001,%al
		ret    

	_056010_jump:
		incw   0x000046(%eax)
		xor    %al,%al
		ret    



_056018_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		cmp    $0x000004,%dl
		jbe    _056034_jump
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_056034_jump:
		incw   0x000046(%eax)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_056040_jump:
		addw   $0x000002,0x000046(%eax)
		xor    %al,%al
		ret    



_056048_func:
		addw   $0x000003,0x000046(%eax)
		lea    0x000000(%eax),%eax

	_056050_jump:
		xor    %al,%al
		ret    



_056054_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _056574_func
		nop



_056060_func:
		mov    $0x000001,%al
		ret    



_056064_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movb   $0x000001,0x000073(%eax)
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		movb   $0x000002,0x000070(%eax)
		call   _01d5a4_func
		dec    %eax
		mov    %ax,0x000048(%ebx)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_056084_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000001,%edx
		call   _0565e8_func
		mov    0x000046(%ebx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    0x000014(%ebx),%eax
		mov    (%edx,%eax,1),%ax
		mov    %ax,0x000046(%ebx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_0560b0_func:
		push   %ebx
		push   %edx
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_0560d0_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _0560f3_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_0560f3_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_0560f8_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _05611b_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05611b_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_056120_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _056143_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_056143_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_056148_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _05616b_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05616b_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_056170_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x000028(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05619c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_0561c8_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _056614_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_0561e0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01d6f0_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_056200_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01d6e8_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_056220_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000048(%eax),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _05623d_jump

	_056230_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _056574_func
		cmp    %cx,%dx
		jl     _056230_jump

	_05623d_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056244_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _0565e8_func
		mov    $0x000001,%al
		pop    %edx
		ret    



_056254_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		mov    $0x000001,%ebx
		call   _0565e8_func
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000048(%ecx),%dl
		call   _056614_func
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05627c_func:
		call   _055eb0_func
		mov    $0x000001,%al
		ret    



_056284_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		decw   0x00001a(%eax,%edx,4)
		mov    0x000018(%eax,%edx,4),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _0562ac_jump
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		ret    

	_0562ac_jump:
		decb   0x00007c(%eax)
		mov    $0x000001,%al
		pop    %edx
		ret    



_0562b4_func:
		movw   $0x00ffff,0x000046(%eax)
		mov    $0x000001,%al
		ret    



_0562c0_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _0562df_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _056614_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_0562df_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_0562e4_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _056303_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _056614_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_056303_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_056308_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000081(%eax)
		je     _05632e_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _05632e_jump

	_056321_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _056574_func
		cmp    %cx,%dx
		jl     _056321_jump

	_05632e_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056334_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000081(%eax)
		jne    _05635a_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _05635a_jump

	_05634d_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _056574_func
		cmp    %cx,%dx
		jl     _05634d_jump

	_05635a_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056360_func:
		push   %ebx
		push   %edx
		mov    0x000048(%eax),%dl
		and    $0x000001,%dl
		mov    0x000081(%eax),%dh
		and    $0x0000fd,%dh
		add    %dl,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x000081(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_056384_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ax
		cmp    $0x000003,%ax
		jb     _0564f0_jump
		jbe    _0564a4_jump
		cmp    $0x000046,%ax
		jb     _0564e4_jump
		jbe    _0563ba_jump
		cmp    $0x000047,%ax
		jbe    _0563de_jump
		cmp    $0x000048,%ax
		je     _056408_jump
		jmp    _056542_jump

	_0563ba_jump:
		mov    %edx,%eax
		call   _01dee0_func
		test   %ax,%ax
		je     _0563d2_jump
		orb    $0x000002,0x000081(%edx)
		jmp    _056542_jump

	_0563d2_jump:
		andb   $0x0000fd,0x000081(%edx)
		jmp    _056542_jump

	_0563de_jump:
		mov    0x000081(%edx),%cl
		test   $0x000001,%cl
		je     _0563f8_jump
		mov    %cl,%al
		or     $0x000002,%al
		mov    %al,0x000081(%edx)
		jmp    _056542_jump

	_0563f8_jump:
		mov    %cl,%ch
		and    $0x0000fd,%ch
		mov    %ch,0x000081(%edx)
		jmp    _056542_jump

	_056408_jump:
		mov    0x000081(%edx),%ah
		test   $0x000010,%ah
		jne    _056424_jump
		mov    %ah,%bl
		or     $0x000002,%bl
		mov    %bl,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056424_jump:
		mov    %ah,%bh
		and    $0x0000fd,%bh
		mov    %bh,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056435_jump:
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    %al,%bl
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		cmp    %eax,%ebx
		jne    _0563d2_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05645c_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		call   _061dd0_func
		test   %ax,%ax
		jne    _0563d2_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05647d_jump:
		andb   $0x0000fd,0x000081(%edx)

	_056484_jump:
		mov    %cl,%al
		mov    0x000081(%edx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%cl
		or     %al,%cl
		mov    %cl,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0564a4_jump:
		mov    0x00004e(%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00006d(%edx),%bl
		cmp    %eax,%ebx
		jne    _0563d2_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0564c4_jump:
		mov    0x00004e(%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00006c(%edx),%bl
		cmp    %eax,%ebx
		jne    _0563d2_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0564e4_jump:
		cmp    $0x000004,%ax
		je     _0564c4_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0564f0_jump:
		cmp    $0x000001,%ax
		jb     _056539_jump
		jbe    _05645c_jump
		mov    %edx,%eax
		mov    0x000081(%edx),%cl
		call   _01dea4_func
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    %al,%bl
		mov    0x00004e(%edx),%eax
		shl    $0x000004,%cl
		sar    $0x000010,%eax
		shr    $0x000007,%cl
		cmp    %eax,%ebx
		jne    _05647d_jump
		orb    $0x000002,0x000081(%edx)
		jmp    _056484_jump

	_056539_jump:
		test   %ax,%ax
		je     _056435_jump

	_056542_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056548_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000070(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_09671c_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_056574_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000070(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_096720_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_0565a0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		cmpl   $0x000000,0x000010(%eax)
		je     _0565e1_jump
		testb  $0x000010,0x000081(%eax)
		je     _0565e5_jump
		mov    0x000048(%edx),%bx
		movswl %bx,%eax
		dec    %ebx
		mov    %bx,0x000048(%edx)
		test   %eax,%eax
		jne    _0565e5_jump

	_0565c3_jump:
		mov    %edx,%eax
		xor    %ebx,%ebx
		call   _056548_func
		mov    0x000070(%edx),%bl
		imul   $0x00000c,%ebx,%ebx
		mov    %edx,%eax
		call   *_096724_data(%ebx)
		test   %al,%al
		jne    _0565c3_jump
		pop    %edx
		pop    %ebx
		ret    

	_0565e1_jump:
		movb   $0x00001e,0x000070(%eax)

	_0565e5_jump:
		pop    %edx
		pop    %ebx
		ret    



_0565e8_func:
		push   %ebx
		push   %ecx
		mov    0x00007c(%eax),%dh
		xor    %ebx,%ebx
		inc    %dh
		mov    %dh,%bl
		shl    $0x000002,%ebx
		mov    %dh,0x00007c(%eax)
		lea    (%eax,%ebx,1),%ecx
		mov    0x000046(%eax),%bx
		mov    %bx,0x000018(%ecx)
		xor    %ebx,%ebx
		mov    0x00007c(%eax),%bl
		xor    %dh,%dh
		mov    %dx,0x00001a(%eax,%ebx,4)
		pop    %ecx
		pop    %ebx
		ret    



_056614_func:
		push   %ecx
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    %dl,0x000008(%esp)
		mov    %bl,(%esp)
		mov    0x000046(%eax),%bx
		mov    0x000081(%eax),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		mov    %al,0x000004(%esp)

	_056635_jump:
		mov    %ecx,%eax
		call   _056574_func
		cmp    0x000046(%ecx),%bx
		je     _05665e_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		cmp    $0x00000b,%eax
		jne    _056635_jump
		mov    0x000044(%ecx),%eax
		mov    0x000010(%ecx),%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,1),%al
		cmp    0x000008(%esp),%al
		jne    _056635_jump

	_05665e_jump:
		cmpb   $0x000000,(%esp)
		je     _0566a7_jump
		cmp    0x000046(%ecx),%bx
		je     _0566ab_jump
		mov    0x000081(%ecx),%dh
		movw   $0x000000,0x000048(%ecx)
		or     $0x000010,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _0565a0_func
		mov    0x000004(%esp),%al
		mov    0x000081(%ecx),%bl
		and    $0x000001,%al
		and    $0x0000ef,%bl
		shl    $0x000004,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,0x000081(%ecx)
		add    $0x00000c,%esp
		pop    %ecx
		ret    

	_0566a7_jump:
		movb   $0x00001e,0x000070(%ecx)

	_0566ab_jump:
		add    $0x00000c,%esp
		pop    %ecx
		ret    



_0566b0_func:
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %dl,(%esp)
		mov    $0x000001,%edx
		call   _0565e8_func
		and    $0x0000ff,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		call   _056614_func
		add    $0x000004,%esp
		pop    %ecx
		ret    



_0566e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000081(%edx),%bl
		add    $0x000081,%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05670c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x00006c(%eax),%al
		cmp    $0x000003,%al
		jb     _05684e_jump
		jbe    _05677c_jump
		cmp    $0x000005,%al
		je     _0567c4_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05672a_jump:
		xor    %eax,%eax
		mov    _0c24fe_data,%al
		cmp    $0x00000a,%eax
		jl     _056765_jump
		xor    %eax,%eax
		mov    _0c24fe_data,%al
		mov    $0x000002,%edx
		mov    %ax,0x000052(%ecx)
		mov    %ecx,%eax
		mov    $0x000009,%ebx
		call   _01d6e8_func
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056765_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		andb   $0x0000f7,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05677c_jump:
		mov    $0x00000a,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		cmpb   $0x000000,_0c24ca_data
		jne    _056856_jump
		xor    %edx,%edx
		mov    0x000050(%ecx),%eax
		mov    _0c24fe_data,%dl
		sar    $0x000010,%eax
		sub    %edx,%eax
		cmp    $0x00000a,%eax
		jge    _056856_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0c24fe_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0567c4_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _0567f0_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000b,%eax
		je     _0567f0_jump
		cmp    $0x00000c,%eax
		je     _0567f0_jump
		mov    $0x00000b,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func

	_0567f0_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _056856_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6e8_func
		mov    %ecx,%eax
		call   _06f8e4_func
		call   _01cfa0_func
		orb    $0x000001,_0c1bcd_data
		mov    _0c2161_data,%al
		mov    %al,_0c23c0_data
		mov    _0c24aa_data,%al
		mov    %al,_0c24a8_data
		call   _0394c8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05684e_jump:
		cmp    $0x000001,%al
		je     _05672a_jump

	_056856_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05685c_switch:
		.long   _0568c6_case
		.long   _056937_case
		.long   _0568ce_case
		.long   _056937_case
		.long   _056937_case
		.long   _056937_case
		.long   _056937_case
		.long   _056937_case
		.long   _056937_case
		.long   _0568d6_case
		.long   _0568de_case

_056888_switch:
		.long   _0568e6_case
		.long   _056904_case
		.long   _056937_case
		.long   _056923_case
		.long   _056932_case
		.long   _056937_case




_0568a0_func:
		push   %ebx
		push   %edx
		mov    %al,%dl
		mov    _0c2522_data,%bx
		dec    %ebx
		xor    %eax,%eax
		cmp    $0x000005,%bx
		ja     _056937_case
		and    $0x00ffff,%ebx
		jmp    *%cs:_056888_switch(,%ebx,4)

	_0568c6_case:
		mov    $0x000015,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0568ce_case:
		mov    $0x000014,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0568d6_case:
		mov    $0x000012,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0568de_case:
		mov    $0x000013,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0568e6_case:
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _056937_case
		and    $0x0000ff,%edx
		jmp    *%cs:_05685c_switch(,%edx,4)

	_0568fc_jump:
		mov    $0x000011,%eax
		pop    %edx
		pop    %ebx
		ret    

	_056904_case:
		cmp    $0x000004,%dl
		jb     _056937_case
		jbe    _0568fc_jump
		cmp    $0x000009,%dl
		je     _0568d6_case
		pop    %edx
		pop    %ebx
		ret    

	_056913_jump:
		mov    $0x00000c,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05691b_jump:
		mov    $0x00000d,%eax
		pop    %edx
		pop    %ebx
		ret    

	_056923_case:
		cmp    $0x000003,%dl
		jb     _056937_case
		jbe    _056913_jump
		cmp    $0x000009,%dl
		je     _05691b_jump
		pop    %edx
		pop    %ebx
		ret    

	_056932_case:
		cmp    $0x000002,%dl
		je     _056913_jump

	_056937_case:
		pop    %edx
		pop    %ebx
		ret    



_05693c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		testb  $0x000002,_0c3315_data
		jne    _056970_jump
		testb  $0x000001,_0c1bcd_data
		jne    _056974_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		je     _056967_jump
		cmp    $0x000003,%eax
		jne    _056970_jump

	_056967_jump:
		cmpb   $0x000000,_0c51bc_data
		je     _056974_jump

	_056970_jump:
		movb   $0x000000,0x00007b(%esi)

	_056974_jump:
		xor    %eax,%eax
		mov    _0c1bcd_data,%bl
		mov    0x00006c(%esi),%al
		and    $0x0000fe,%bl
		test   %eax,%eax
		jne    _056a49_jump
		testb  $0x000001,_0c1bcd_data
		je     _0569c9_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c24fe_data,%dl
		mov    _0c51bc_data,%al
		add    %edx,%eax
		cmp    $0x00000a,%eax
		jl     _0569be_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		movb   $0x0000c8,0x00007f(%esi)
		jmp    _056ca2_jump

	_0569be_jump:
		mov    %bl,_0c1bcd_data
		jmp    _056ca2_jump

	_0569c9_jump:
		xor    %eax,%eax
		mov    0x00007b(%esi),%al
		cmp    $0x000001,%eax
		jl     _056a10_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000014,%eax
		jge    _056a10_jump
		xor    %eax,%eax
		mov    _0c24fe_data,%al
		cmp    $0x00000a,%eax
		jl     _0569f5_jump
		movb   $0x000014,0x00006b(%esi)
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0569f5_jump:
		mov    $0x00000a,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		andb   $0x0000f7,0x000081(%esi)
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056a10_jump:
		xor    %eax,%eax
		mov    0x00007b(%esi),%al
		test   %eax,%eax
		jne    _056ca2_jump
		mov    0x00006b(%esi),%al
		cmp    $0x000013,%eax
		jne    _056ca2_jump
		xor    %eax,%eax
		mov    0x00007b(%esi),%al
		movb   $0x000000,0x00006b(%esi)
		test   %eax,%eax
		jne    _056ca2_jump
		andb   $0x0000fe,_0c1bcd_data
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056a49_jump:
		xor    %edx,%edx
		mov    0x00007b(%esi),%dl
		test   %edx,%edx
		je     _056c7d_jump
		testb  $0x000001,_0c1bcd_data
		je     _056a86_jump
		cmp    $0x00000b,%eax
		jne    _056a86_jump
		decb   0x00007f(%esi)
		xor    %eax,%eax
		mov    0x00007f(%esi),%al
		test   %eax,%eax
		jne    _056ca2_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %bl,_0c1bcd_data
		jmp    _056c9d_jump

	_056a86_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _056c6e_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _056ab2_jump
		mov    _0c1bb8_data,%al
		test   %eax,%eax
		je     _056ac2_jump
		cmp    $0x000001,%eax
		je     _056ac2_jump
		cmp    $0x000002,%eax
		je     _056ac2_jump

	_056ab2_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		jne    _056ca2_jump

	_056ac2_jump:
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    _0c1b74_data,%ebx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    _0c1bb4_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x00000a(%esp),%edx
		mov    %eax,%ecx
		sar    $0x000011,%edx
		sub    %edx,%ecx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b78_data,%ebx
		mov    _0c1bb5_data,%al
		add    %eax,%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %eax,%eax
		jge    _056b2b_jump
		neg    %eax

	_056b2b_jump:
		cmp    $0x000008,%eax
		jg     _056ca2_jump
		movswl %cx,%eax
		test   %eax,%eax
		jge    _056b3d_jump
		neg    %eax

	_056b3d_jump:
		cmp    $0x000010,%eax
		jg     _056b57_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _056b7f_jump

	_056b57_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _056b60_jump
		neg    %eax

	_056b60_jump:
		cmp    $0x000010,%eax
		jg     _056ca2_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _056ca2_jump

	_056b7f_jump:
		movswl %cx,%eax
		test   %eax,%eax
		jge    _056b88_jump
		neg    %eax

	_056b88_jump:
		cmp    $0x000010,%eax
		jg     _056bd3_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _056bd3_jump
		mov    0x000081(%esi),%ch
		and    $0x0000f7,%ch
		xor    %eax,%eax
		mov    %ch,0x000081(%esi)
		xor    %edx,%edx
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%ecx
		mov    _0c1bb4_data,%dl
		add    %ecx,%eax
		sub    %edx,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000011,%edx
		sub    %edx,%eax
		sub    $0x00000c,%eax
		jmp    _056c1f_jump

	_056bd3_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _056bdc_jump
		neg    %eax

	_056bdc_jump:
		cmp    $0x000010,%eax
		jg     _056c24_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _056c24_jump
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		mov    0x000081(%esi),%cl
		add    %eax,%edx
		xor    %eax,%eax
		or     $0x000008,%cl
		mov    _0c1bb4_data,%al
		mov    %cl,0x000081(%esi)
		sub    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000011,%eax
		add    %edx,%eax
		add    $0x00000c,%eax

	_056c1f_jump:
		mov    %eax,_0c1b74_data

	_056c24_jump:
		xor    %eax,%eax
		mov    _0c1b78_data,%edx
		mov    _0c1bb5_data,%al
		add    %eax,%edx
		sar    $0x000004,%edx
		shl    $0x000004,%edx
		sub    %eax,%edx
		mov    %edx,_0c1b78_data
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %dx,_0c1b8c_data
		mov    %dx,_0c25b4_data
		mov    %dx,_0c1b8e_data
		mov    %dx,_0c1b9e_data
		call   _05670c_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056c6e_jump:
		mov    %esi,%eax
		call   _05670c_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056c7d_jump:
		cmp    $0x00000a,%eax
		je     _056ca2_jump
		test   %edx,%edx
		jne    _056ca2_jump
		mov    _0c1bb9_data,%dl
		cmp    $0x000003,%edx
		je     _056ca2_jump
		cmp    $0x000001,%eax
		je     _056ca2_jump
		mov    $0x000001,%edx
		mov    %esi,%eax

	_056c9d_jump:
		call   _01d6e8_func

	_056ca2_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056cac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		xor    %edx,%edx
		call   _02d750_func
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _056d7f_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000004,%edx
		jne    _056d7f_jump
		mov    $0x000001,%ah
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		mov    %ah,_0cd10f_data
		xor    %eax,%eax
		test   %bx,%bx
		jg     _056d01_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056cf1_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _056d7f_jump

	_056d01_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000026,%edx
		jne    _056cf1_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _056cf1_jump
		mov    $0x000002,%ebx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f7d4_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		mov    0x000028(%esi),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    0x000068(%ecx),%al
		add    %ebx,%edx
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%edx
		movw   $0x00fffe,0x000042(%ecx)
		add    $0x000032,%edx
		movw   $0x000001,0x000040(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01df3c_func
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		movw   $0x00fff8,0x000042(%esi)

	_056d7f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056d84_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		movb   $0x000000,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_056d9c_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%si
		xor    %eax,%eax
		test   %si,%si
		jg     _056dd3_jump
		jmp    _056ea5_jump

	_056dc3_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %si,%ax
		jge    _056ea5_jump

	_056dd3_jump:
		xor    %ebx,%ebx
		mov    0x000060(%ecx),%bx
		test   %ebx,%ebx
		jne    _056de5_jump
		movswl %dx,%ebx
		cmp    $0x000001,%ebx
		je     _056df8_jump

	_056de5_jump:
		xor    %ebx,%ebx
		mov    0x000060(%ecx),%bx
		cmp    $0x000009,%ebx
		jne    _056dc3_jump
		movswl %dx,%ebx
		cmp    $0x000002,%ebx
		jne    _056dc3_jump

	_056df8_jump:
		mov    0x00003a(%ecx),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jg     _056dc3_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _056dc3_jump
		andb   $0x0000bb,0x000081(%ecx)
		mov    $0x000002,%ebx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    %ebx,%edx
		movw   $0x000000,0x00005e(%ecx)
		call   _01d6f8_func
		movl   $0x000001,0x000030(%ecx)
		xor    %ebx,%ebx
		mov    0x000068(%edi),%bl
		mov    0x000028(%edi),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		mov    0x00002c(%edi),%ebx
		sar    $0x000002,%eax
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x00002c(%ecx)
		call   _01dea4_func
		mov    0x000004(%esp),%eax
		mov    %ax,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _056e8e_jump
		mov    (%esp),%eax
		jmp    _056e93_jump

	_056e8e_jump:
		mov    (%esp),%eax
		neg    %eax

	_056e93_jump:
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01df3c_func
		andb   $0x0000ef,0x000081(%ecx)

	_056ea5_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_056eac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		call   _02d750_func
		cmpb   $0x000000,_0c1f02_data
		jne    _056ed0_jump
		cmpb   $0x000000,_0c1f04_data
		je     _056fc3_jump

	_056ed0_jump:
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _071088_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _056eee_jump
		neg    %eax

	_056eee_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _056fb0_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x00000f,%eax
		jge    _056fb0_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _056f1d_jump
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		je     _056f3c_jump

	_056f1d_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _056f2e_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _056f3c_jump

	_056f2e_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _056fe0_jump

	_056f3c_jump:
		mov    _0c1ef0_data,%eax
		mov    0x000081(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%ah
		je     _056fe0_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x000040(%esi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%esi)
		call   _01d6f8_func
		mov    0x000081(%esi),%dh
		and    $0x0000ef,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%esi)
		test   $0x000008,%dh
		setne  %al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		add    $0x000002,%eax
		mov    %al,%dl
		mov    %esi,%eax
		call   _056614_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056fb0_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _056fe0_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000010,%eax
		jne    _056fe0_jump
		jmp    _056fd4_jump

	_056fc3_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _056fe0_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000010,%eax
		jne    _056fe0_jump

	_056fd4_jump:
		mov    $0x000011,%edx
		mov    %esi,%eax
		call   _01d6e8_func

	_056fe0_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056fe8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    _0c1ef0_data,%eax
		mov    0x000034(%eax),%eax
		mov    0x000034(%ecx),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jle    _057044_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _057044_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _057044_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _056614_func
		mov    $0x000001,%edx
		mov    _0c331d_data,%ah
		movb   $0x000002,0x00006e(%ecx)
		or     $0x000004,%ah
		mov    %dx,_0cd0ee_data
		mov    %ah,_0c331d_data

	_057044_jump:
		pop    %ecx
		pop    %ebx
		ret    



_057048_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		cmp    $0x000002,%edx
		jg     _05705a_jump
		dec    %dl
		mov    %dl,0x00006b(%eax)
		pop    %edx
		ret    

	_05705a_jump:
		sub    $0x000003,%dl
		mov    %dl,0x00006b(%eax)
		pop    %edx
		ret    



_057064_func:
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		cmp    $0x000002,%edx
		je     _057073_jump
		cmp    $0x000004,%edx
		jne    _057076_jump

	_057073_jump:
		decb   0x000076(%eax)

	_057076_jump:
		ret    



_057078_func:
		push   %edx
		mov    %eax,%edx
		call   _02d750_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		pop    %edx
		ret    



_057090_func:
		push   %ebx
		mov    %eax,%ebx
		testb  $0x000080,_0c3314_data
		je     _0570c8_jump
		mov    _0c25ae_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000003,%edx
		je     _0570c8_jump
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    _0c1ef0_data,%edx
		mov    0x000034(%ebx),%bx
		mov    %bx,0x00004a(%edx)

	_0570c8_jump:
		pop    %ebx
		ret    



_0570cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		call   _070a70_func
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    _0c260a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _057118_jump
		call   _04d5a4_func
		mov    _0c260a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,1)

	_057118_jump:
		call   _070c7c_func
		mov    %ax,_0c260c_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _05712e_jump
		call   _04d5a4_func

	_05712e_jump:
		mov    0x000081(%ebx),%ch
		mov    0x000032(%ebx),%eax
		and    $0x0000fb,%ch
		sar    $0x000010,%eax
		mov    %ch,0x000081(%ebx)
		call   _06a65c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05714c_func:
		push   %ebx
		movswl %dx,%edx
		cmp    $0x000004,%edx
		jne    _057192_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000005,%edx
		jne    _057192_jump
		mov    _0c1ef0_data,%ebx
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jl     _057188_jump
		jle    _057178_jump
		mov    $0x000009,%edx
		jmp    _05718d_jump

	_057178_jump:
		testb  $0x000008,0x000081(%ebx)
		je     _057188_jump
		mov    $0x000009,%edx
		jmp    _05718d_jump

	_057188_jump:
		mov    $0x000006,%edx

	_05718d_jump:
		call   _01d6e8_func

	_057192_jump:
		pop    %ebx
		ret    



_057194_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _070a70_func
		mov    _0c3314_data,%ah
		mov    0x000081(%edx),%bl
		or     $0x000080,%ah
		and    $0x0000fb,%bl
		mov    %ah,_0c3314_data
		mov    %bl,0x000081(%edx)
		pop    %edx
		pop    %ebx
		ret    

_0571c0_switch:
		.long   _057267_case
		.long   _05729c_case
		.long   _05726d_case
		.long   _05729c_case
		.long   _05726d_case
		.long   _05729c_case
		.long   _05729c_case
		.long   _057273_case
		.long   _05729c_case
		.long   _057279_case
		.long   _05729c_case
		.long   _057279_case




_0571f0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x00006c(%eax),%bl
		mov    _0c3314_data,%al
		and    $0x000001,%al
		cmp    $0x000007,%ebx
		jne    _057250_jump
		and    $0x0000ff,%eax
		jne    _057235_jump
		mov    _0c1ef0_data,%eax
		movb   $0x000008,0x00006e(%eax)
		jmp    _05729c_case

	_05721a_jump:
		movb   $0x000008,0x00006e(%ebx)
		jmp    _05729c_case

	_057223_jump:
		movb   $0x00000a,0x00006e(%ebx)
		jmp    _05729c_case

	_05722c_jump:
		movb   $0x00000c,0x00006e(%ebx)
		jmp    _05729c_case

	_057235_jump:
		mov    _0c1ef0_data,%ebx
		mov    0x00006e(%ebx),%al
		cmp    $0x000003,%al
		jb     _05724a_jump
		jbe    _057223_jump
		cmp    $0x000005,%al
		je     _05722c_jump
		jmp    _05729c_case

	_05724a_jump:
		cmp    $0x000001,%al
		je     _05721a_jump
		jmp    _05729c_case

	_057250_jump:
		cmp    $0x00000e,%ebx
		jne    _05729c_case
		and    $0x0000ff,%eax
		jne    _05727f_jump
		mov    _0c1ef0_data,%eax
		movb   $0x000001,0x00006e(%eax)
		jmp    _05729c_case

	_057267_case:
		movb   $0x000003,0x00006e(%eax)
		jmp    _05729c_case

	_05726d_case:
		movb   $0x000005,0x00006e(%eax)
		jmp    _05729c_case

	_057273_case:
		movb   $0x00000a,0x00006e(%eax)
		jmp    _05729c_case

	_057279_case:
		movb   $0x00000c,0x00006e(%eax)
		jmp    _05729c_case

	_05727f_jump:
		mov    _0c1ef0_data,%eax
		mov    0x00006e(%eax),%bl
		dec    %bl
		cmp    $0x00000b,%bl
		ja     _05729c_case
		and    $0x0000ff,%ebx
		jmp    *%cs:_0571c0_switch(,%ebx,4)

	_05729c_case:
		mov    %edx,%eax
		call   _070a70_func
		mov    0x000081(%edx),%ah
		mov    _0c3314_data,%bl
		and    $0x0000fb,%ah
		or     $0x000001,%bl
		mov    %ah,0x000081(%edx)
		mov    _0c1ef0_data,%eax
		mov    %bl,_0c3314_data
		mov    0x00006e(%eax),%bl
		mov    %bl,0x00006c(%eax)
		mov    %bl,_0c1f00_data
		mov    0x000032(%edx),%edx
		mov    $0x00000b,%eax
		sar    $0x000010,%edx
		mov    %bl,_0c215b_data
		call   _068654_func
		pop    %edx
		pop    %ebx
		ret    



_0572ec_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _070a70_func
		mov    0x000076(%edx),%al
		mov    _0c1bc2_data,%ah
		add    %al,%ah
		mov    _0c2501_data,%bl
		mov    %ah,_0c1bc2_data
		cmp    %bl,%ah
		jbe    _057316_jump
		mov    %bl,_0c1bc2_data

	_057316_jump:
		andb   $0x0000fb,0x000081(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x000008,%eax
		sar    $0x000010,%edx
		call   _068654_func
		pop    %edx
		pop    %ebx
		ret    



_057330_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x0000d5,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    %ebx,%eax
		call   _070a70_func
		mov    _0c3314_data,%ah
		mov    0x000081(%ebx),%dl
		or     $0x000008,%ah
		and    $0x0000fb,%dl
		mov    %ah,_0c3314_data
		mov    %dl,0x000081(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_05736c_func:
		push   %edx
		orb    $0x000040,_0c3314_data
		mov    0x000081(%eax),%dh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%eax)
		mov    0x000032(%eax),%edx
		mov    $0x00000a,%eax
		sar    $0x000010,%edx
		call   _068654_func
		pop    %edx
		ret    



_05739c_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x00000e,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    $0x000017,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		cmpw   $0x000000,_0c51be_data
		je     _057400_jump
		mov    _0c51b6_data,%dl
		dec    %dl
		mov    %dl,_0c51b6_data
		mov    _0c51bc_data,%dh
		inc    %dh
		xor    %eax,%eax
		mov    %dh,_0c51bc_data
		mov    %dl,%al
		mov    %dh,_0c24fe_data
		test   %eax,%eax
		jne    _057406_jump
		movw   $0x00ffe0,_0c51c0_data
		call   _0394a0_func
		jmp    _057406_jump

	_057400_jump:
		incb   _0c24fe_data

	_057406_jump:
		xor    %eax,%eax
		mov    _0c24fe_data,%al
		cmp    $0x000063,%eax
		jle    _057459_jump
		mov    %ebx,%eax
		call   _070a70_func
		cmpw   $0x000000,_0c51be_data
		je     _05742e_jump
		movw   $0x00ffff,_0c260c_data
		jmp    _057439_jump

	_05742e_jump:
		call   _070c7c_func
		mov    %ax,_0c260c_data

	_057439_jump:
		mov    _0c260a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05744b_jump
		call   _04d5a4_func

	_05744b_jump:
		movb   $0x000001,_0c11b0_data
		subb   $0x000064,_0c24fe_data

	_057459_jump:
		mov    0x000038(%ebx),%ax
		add    $0x00000a,%eax
		movswl %ax,%edx
		mov    0x000036(%ebx),%ax
		add    $0x00000a,%eax
		cwtl   
		call   _071164_func
		pop    %edx
		pop    %ebx
		ret    



_057478_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _070a70_func
		mov    _0c260c_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _0574b4_jump
		mov    $0x000004,%ah
		mov    %ah,_0c1bc2_data
		mov    %ah,_0c2501_data
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%ebx
		andb   $0x0000fb,0x000081(%ebx,%eax,1)

	_0574b4_jump:
		call   _070c7c_func
		mov    %ax,_0c260e_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _0574d1_jump
		mov    $0x000004,%al
		mov    %al,_0c1bc2_data
		mov    %al,_0c2501_data

	_0574d1_jump:
		andb   $0x0000fb,0x000081(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x00000c,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _057508_jump
		cmp    $0x000004,%eax
		je     _057508_jump
		mov    $0x000004,%bh
		mov    %bh,_0c1bc2_data
		mov    %bh,_0c2501_data

	_057508_jump:
		pop    %edx
		pop    %ebx
		ret    



_05750c_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		call   _02c9e4_func
		pop    %edx
		ret    



_05752c_func:
		push   %ebx
		push   %edx
		mov    0x000076(%eax),%dl
		cmp    0x000077(%eax),%dl
		jae    _05754c_jump
		mov    %dl,%bl
		dec    %bl
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %bl,0x000076(%eax)
		cmp    $0x000001,%edx
		jge    _05754c_jump
		mov    0x000077(%eax),%dl
		mov    %dl,0x000076(%eax)

	_05754c_jump:
		pop    %edx
		pop    %ebx
		ret    



_057550_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0c250c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _057589_jump
		mov    0x000076(%edx),%al
		cmp    0x000077(%edx),%al
		jne    _057589_jump
		mov    %edx,%eax
		call   _070a70_func
		movw   $0x000000,0x000040(%edx)
		mov    0x000076(%edx),%bl
		movw   $0x000000,0x000042(%edx)
		dec    %bl
		mov    %bl,0x000076(%edx)
		call   _05049c_func

	_057589_jump:
		pop    %edx
		pop    %ebx
		ret    



_05758c_func:
		call   _05759c_func
		xor    %ah,%ah
		mov    %ah,_0c11b0_data
		ret    



_05759c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _05760c_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		je     _05760c_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _0575d8_jump
		mov    _0c25b2_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _0575d8_jump
		sub    %eax,_0c1b74_data

	_0575d8_jump:
		xor    %edx,%edx
		mov    $0x000001,%ah
		mov    %dx,_0c1b8c_data
		mov    %ah,_0c25a3_data
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0c25b4_data
		test   %eax,%eax
		jge    _057af0_jump
		mov    %dx,_0c1b8e_data
		jmp    _057af0_jump

	_05760c_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		je     _057620_jump
		cmp    $0x000001,%eax
		jne    _05779d_jump

	_057620_jump:
		mov    _0c1ba0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05779d_jump
		xor    %eax,%eax
		mov    _0c2612_data,%al
		test   %eax,%eax
		jne    _05779d_jump
		mov    _0c25a0_data,%cl
		test   %cl,%cl
		je     _057660_jump
		mov    $0x000036,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		jmp    _05767a_jump

	_057660_jump:
		mov    $0x000017,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    %cl,_0c1bb7_data

	_05767a_jump:
		cmpb   $0x000000,_0c1f02_data
		je     _0576a3_jump
		mov    _0c1ef0_data,%eax
		andb   $0x0000fb,0x000081(%eax)
		xor    %dh,%dh
		mov    %dh,_0c1f02_data
		call   _070a70_func
		xor    %eax,%eax
		call   _05cabc_func

	_0576a3_jump:
		call   _071760_func
		xor    %eax,%eax
		mov    _0c51b4_data,%al
		cmp    $0x000001,%eax
		jne    _0576e3_jump
		mov    $_0c3314_data,%edi
		mov    $_0c3318_data,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		xor    %edi,%edi
		xor    %eax,%eax
		mov    %di,_0c25b4_data
		call   _062ad4_func
		mov    $0x000001,%eax
		xor    %bl,%bl
		call   _062ad4_func
		mov    %bl,_0c51b4_data

	_0576e3_jump:
		mov    _0c260a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05771e_jump
		movw   $0x00ffff,_0c260c_data
		call   _04d5a4_func
		mov    _0c260a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,1)

	_05771e_jump:
		mov    _0c260c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05775b_jump
		mov    $0xffffffff,%edx
		mov    $0x000004,%cl
		mov    _0c1b34_data,%eax
		mov    %dx,_0c260e_data
		mov    %cl,_0c1bc2_data
		mov    -0x000003(%eax),%dl
		sub    $0x000084,%eax
		and    $0x0000fb,%dl
		mov    %cl,_0c2501_data
		mov    %dl,0x000081(%eax)

	_05775b_jump:
		xor    %ebx,%ebx
		mov    _0c25a0_data,%dh
		mov    %bx,_0c25b4_data
		mov    %bx,_0c1b8c_data
		test   %dh,%dh
		jne    _057792_jump
		cmpb   $0x000000,_0c51b4_data
		jne    _057792_jump
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		je     _057792_jump
		movb   $0x000002,_0c2612_data

	_057792_jump:
		call   _01cf4c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05779d_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _0577b5_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000017,%eax
		je     _0577d5_jump

	_0577b5_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _0579f0_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000036,%eax
		jne    _0579f0_jump

	_0577d5_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _057802_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jmp    _05782e_jump

	_057802_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b50_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_05782e_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _057889_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _057889_jump
		cmpb   $0x000000,_0c25a0_data
		je     _05795c_jump
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _05795c_jump

	_057889_jump:
		cmpb   $0x000000,_0c25a0_data
		je     _057966_jump
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _057966_jump
		call   _0357d4_func
		test   %al,%al
		jne    _05795c_jump
		xor    %eax,%eax
		mov    _0cd102_data,%al
		test   %eax,%eax
		je     _057966_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _0578f0_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jmp    _05791c_jump

	_0578f0_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b50_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_05791c_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _057966_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b58_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _057966_jump

	_05795c_jump:
		call   _0394c8_func
		jmp    _057ae3_jump

	_057966_jump:
		xor    %edx,%edx
		mov    _0c1b94_data,%eax
		mov    %dx,_0c1b8c_data
		mov    %dx,_0c1b8e_data
		mov    %dx,_0c25b4_data
		sar    $0x000010,%eax
		mov    %dx,_0c2528_data
		cmp    $0xffffffff,%eax
		je     _057af0_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		mov    _0c1b94_data,%ebx
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000042(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b94_data,%ebx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000040(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b94_data,%ebx
		sar    $0x000010,%ebx
		movb   $0x000000,0x000071(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movb   $0x000000,0x000072(%edx,%eax,4)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0579f0_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000006,%eax
		jne    _057af0_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000e,%eax
		je     _057a28_jump
		mov    $0x00000e,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		xor    %dl,%dl
		mov    %dl,_0c1bb7_data
		call   _01cf4c_func

	_057a28_jump:
		mov    $0x000002,%dh
		xor    %eax,%eax
		xor    %esi,%esi
		mov    _0c1bb8_data,%al
		mov    %dh,_0c2612_data
		mov    %si,_0c25b4_data
		mov    %si,_0c1b8c_data
		mov    %si,_0c1b8e_data
		cmp    $0x00000e,%eax
		jne    _057af0_jump
		xor    %edx,%edx
		mov    _0c1b58_data,%ebx
		mov    _0c1bb9_data,%dl
		mov    (%ebx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _057a7a_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jmp    _057aa6_jump

	_057a7a_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b50_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_057aa6_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _057af0_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _057af0_jump

	_057ae3_jump:
		xor    %bh,%bh
		call   _0713cc_func
		mov    %bh,_0c2612_data

	_057af0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057af8_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0c51be_data
		je     _057b30_jump
		mov    _0c51b8_data,%al
		xor    %edx,%edx
		xor    %edi,%edi
		mov    %al,_0c24fe_data
		mov    %edx,_0c51b8_data
		mov    $_0c1b4c_data,%eax
		mov    %di,_0c24b8_data
		call   _06f8e4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_057b30_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _057b48_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		je     _057bab_jump

	_057b48_jump:
		xor    %eax,%eax
		mov    _0c1bc2_data,%al
		cmp    $0x0000ff,%eax
		je     _057bab_jump
		xor    %eax,%eax
		mov    _0c2612_data,%al
		test   %eax,%eax
		jne    _057bab_jump
		call   _0394c8_func
		mov    $_0c2164_data,%eax
		mov    $0x000001,%ebx
		call   _06a1fc_func
		mov    _0c11b0_data,%ah
		mov    %bx,_0c251e_data
		test   %ah,%ah
		je     _057bab_jump
		sub    %bx,_0c24f8_data
		mov    _0c24f6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _057ba3_jump
		xor    %esi,%esi
		mov    %si,_0c24f8_data

	_057ba3_jump:
		xor    %dl,%dl
		mov    %dl,_0c11b0_data

	_057bab_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_057bb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		test   %ebx,%ebx
		jne    _057c86_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000004,%edx
		jne    _057c86_jump
		lea    0x000000(,%ebx,4),%ecx
		mov    0x00000c(%eax),%ebx
		mov    (%ecx,%ebx,1),%ebx
		testb  $0x000010,0x000007(%ebx,%edx,8)
		je     _057beb_jump
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		test   %edx,%edx
		jmp    _057c0f_jump

	_057beb_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		xor    %ebx,%ebx
		dec    %edx
		mov    0x00006b(%eax),%bl
		cmp    %edx,%ebx

	_057c0f_jump:
		sete   %dl
		and    $0x0000ff,%edx
		je     _057c86_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%eax),%edx
		mov    0x00006c(%eax),%al
		and    $0x0000ff,%eax
		mov    (%edx,%ebx,1),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _057c86_jump
		mov    _0c331d_data,%ch
		test   $0x000008,%ch
		jne    _057c86_jump
		mov    %ch,%al
		mov    _0c2512_data,%edx
		or     $0x000008,%al
		sar    $0x000010,%edx
		mov    %al,_0c331d_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		call   _0715f8_func
		movb   $0x000001,_0cd10f_data

	_057c86_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057c8c_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000001,%edx
		jne    _057ca1_jump
		mov    $0x000005,%edx
		call   _01d6e8_func

	_057ca1_jump:
		pop    %edx
		ret    



_057ca4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		xor    %edx,%edx
		mov    0x000070(%eax),%dl
		test   %edx,%edx
		jne    _057cc0_jump
		andb   $0x0000f7,0x000081(%eax)
		jmp    _057cd4_jump

	_057cc0_jump:
		cmp    $0x000001,%edx
		jne    _057cd4_jump
		mov    0x000081(%eax),%ah
		or     $0x000008,%ah
		mov    %ah,0x000081(%edi)

	_057cd4_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		test   %edx,%edx
		jne    _057d8c_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x00000b,%edx
		jne    _057d8c_jump
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000005,%edx
		jl     _057d71_jump
		xor    %edx,%edx
		mov    0x00007f(%edi),%dl
		test   %edx,%edx
		jne    _057d71_jump
		mov    %dl,%ch
		mov    0x00007d(%edi),%al
		inc    %ch
		inc    %al
		mov    %ch,0x00007f(%edi)
		mov    %al,%dl
		mov    %al,0x00007d(%edi)
		cmp    $0x000002,%edx
		jle    _057d1e_jump
		movb   $0x000001,0x00007d(%edi)

	_057d1e_jump:
		xor    %edx,%edx
		mov    0x000076(%edi),%dl
		cmp    $0x000001,%edx
		je     _057d43_jump
		mov    $0xffffffff,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %edi,%eax
		mov    0x00007d(%edi),%dl
		call   _056d9c_func
		jmp    _057ee0_jump

	_057d43_jump:
		mov    $0xfffffffe,%ecx
		mov    %edx,%ebx
		mov    %edi,%eax
		mov    $0x000002,%edx
		call   _056d9c_func
		mov    $0xffffffff,%ecx
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _056d9c_func
		jmp    _057ee0_jump

	_057d71_jump:
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000002,%edx
		jge    _057ee0_jump
		movb   $0x000000,0x00007f(%edi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_057d8c_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		test   %edx,%edx
		jne    _057e31_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x000015,%edx
		jne    _057e31_jump
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000005,%edx
		jl     _057e16_jump
		xor    %edx,%edx
		mov    0x00007f(%edi),%dl
		test   %edx,%edx
		jne    _057e16_jump
		mov    $0xfffffffc,%esi
		mov    %dl,%cl
		xor    %bh,%bh
		inc    %cl
		mov    %bh,(%esp)
		mov    %cl,0x00007f(%edi)
		jmp    _057dce_jump

	_057dcb_jump:
		incb   (%esp)

	_057dce_jump:
		xor    %edx,%edx
		mov    (%esp),%dl
		cmp    $0x000004,%edx
		jge    _057ee0_jump
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edx
		xor    %dh,%dh
		mov    $0x000003,%eax
		mov    %edx,%ebx
		sub    %edx,%eax
		neg    %ebx
		movswl %ax,%edx
		movswl %bx,%ecx
		mov    %edi,%eax
		movswl %si,%ebx
		inc    %esi
		call   _056d9c_func
		movswl %si,%edx
		cmp    $0xfffffffe,%edx
		jne    _057dcb_jump
		mov    $0x000003,%esi
		jmp    _057dcb_jump

	_057e16_jump:
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000002,%edx
		jge    _057ee0_jump
		movb   $0x000000,0x00007f(%edi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_057e31_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		test   %edx,%edx
		jne    _057ea0_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x000003,%edx
		jne    _057ea0_jump
		mov    0x00007f(%edi),%bl
		xor    %edx,%edx
		inc    %bl
		mov    0x00007d(%edi),%dl
		mov    %bl,0x00007f(%edi)
		cmp    $0x000003,%edx
		je     _057e6b_jump
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    $0x0000fd,%edx
		jl     _057e6b_jump
		mov    %edi,%eax
		call   _07048c_func
		movb   $0x000003,0x00007d(%edi)

	_057e6b_jump:
		movw   $0x000000,0x000040(%edi)
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		movw   $0x000000,0x000042(%edi)
		cmp    $0x00000c,%edx
		jle    _057e8e_jump
		movb   $0x000003,0x00006b(%edi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_057e8e_jump:
		cmp    $0x000001,%edx
		jg     _057ee0_jump
		movb   $0x000000,0x00007f(%edi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_057ea0_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		cmp    $0x000001,%edx
		jne    _057ee0_jump
		cmpw   $0x000000,0x000052(%edi)
		je     _057eb4_jump
		incb   0x00007f(%edi)

	_057eb4_jump:
		xor    %edx,%edx
		mov    0x00007f(%edi),%dl
		cmp    $0x0000fe,%edx
		jl     _057ed2_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %edi,%eax
		call   _056614_func

	_057ed2_jump:
		mov    %edi,%eax
		call   _04aad8_func
		mov    %edi,%eax
		call   _0248b8_func

	_057ee0_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057eec_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		test   %eax,%eax
		jne    _057f26_jump
		movb   $0x000001,_0c1f03_data
		mov    %ecx,%eax
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _057f1a_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _057f30_jump

	_057f1a_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		jmp    _057f30_jump

	_057f26_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_057f30_jump:
		mov    %ecx,%eax
		call   _056614_func
		pop    %ecx
		pop    %ebx
		ret    



_057f3c_func:
		movw   $0x000001,0x000052(%eax)
		ret    



_057f44_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _057fb6_jump
		mov    %ecx,%eax
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _057f8a_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _057f93_jump

	_057f8a_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_057f93_jump:
		call   _01d6f8_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _057fb2_jump
		movb   $0x000000,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_057fb2_jump:
		movb   $0x000001,0x000070(%ecx)

	_057fb6_jump:
		pop    %ecx
		pop    %ebx
		ret    



_057fbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _058013_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _057fd6_jump
		cmp    $0x000002,%eax
		jne    _058013_jump

	_057fd6_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01d6f8_func
		andb   $0x0000ef,0x000081(%ecx)
		mov    %ecx,%eax
		call   _01dea4_func
		testb  $0x000008,0x000081(%ecx)
		je     _05800f_jump
		movb   $0x000001,0x000070(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05800f_jump:
		movb   $0x000000,0x000070(%ecx)

	_058013_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058070_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		cmp    $0x0000ff,%eax
		je     _0580a4_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000001,0x000007(%ebx,%eax,1)
		je     _058167_jump

	_0580a4_jump:
		mov    %ecx,%eax
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _0580e1_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _056614_func
		subl   $0x000002,0x00002c(%ecx)
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_0580e1_jump:
		mov    _0c1ef0_data,%eax
		testb  $0x000008,0x000081(%eax)
		je     _05810a_jump
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _058106_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _05812d_jump

	_058106_jump:
		jge    _058134_jump
		jmp    _058123_jump

	_05810a_jump:
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jle    _058121_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _05812d_jump

	_058121_jump:
		jge    _058134_jump

	_058123_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_05812d_jump:
		mov    %ecx,%eax
		call   _056614_func

	_058134_jump:
		mov    $0x000002,%ebx
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%ecx)
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		movw   $0x00fffc,0x000042(%ecx)
		call   _01d6f8_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _068654_func

	_058167_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05816c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _058193_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x00000b,%edx
		jne    _058193_jump
		mov    $0x00000e,%edx
		call   _01d6e8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058193_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		test   %edx,%edx
		jne    _0581a3_jump
		mov    0x00006c(%ecx),%dl
		test   %edx,%edx
		je     _0581b6_jump

	_0581a3_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		cmp    $0x000001,%edx
		jne    _0581f7_jump
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		test   %edx,%edx
		jne    _0581f7_jump

	_0581b6_jump:
		mov    $0x00000b,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		mov    0x000081(%ecx),%ah
		and    $0x0000ef,%ah
		mov    $0x000001,%ebx
		mov    %ah,0x000081(%ecx)
		test   $0x000008,%ah
		setne  %dl
		and    $0x0000ff,%edx
		add    $0x000002,%edx
		and    $0x0000ff,%edx
		mov    %ecx,%eax
		call   _056614_func

	_0581f7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0581fc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb7c_func
		mov    _0c1ef0_data,%edx
		mov    0x00003e(%edx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _058221_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _05822d_jump

	_058221_jump:
		jge    _058234_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_05822d_jump:
		mov    %ecx,%eax
		call   _056614_func

	_058234_jump:
		subl   $0x000002,0x00002c(%ecx)
		xor    %edx,%edx
		mov    0x000076(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		test   %edx,%edx
		je     _058297_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movw   $0x00fffc,0x000042(%ecx)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%dl
		testb  $0x000040,0x000007(%ebx,%edx,8)
		je     _05826f_jump
		mov    $0x00000a,%edx
		jmp    _058274_jump

	_05826f_jump:
		mov    $0x000002,%edx

	_058274_jump:
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %dl,%bl
		mov    $0x000002,%edx
		call   _01d6f8_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _068654_func
		pop    %ecx
		pop    %ebx
		ret    

	_058297_jump:
		xor    %ebx,%ebx
		mov    0x00006d(%ecx),%bl
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		movw   $0x00fff8,0x000042(%ecx)
		lea    0x000000(,%edx,8),%eax
		mov    (%ebx),%edx
		testb  $0x000040,0x000007(%edx,%eax,1)
		je     _0582c6_jump
		mov    $0x000006,%edx
		jmp    _0582cb_jump

	_0582c6_jump:
		mov    $0x000003,%edx

	_0582cb_jump:
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %dl,%bl
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %ecx
		pop    %ebx
		ret    



_0582dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000081(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %ah,%al
		je     _058378_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _058313_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _058323_jump

	_058313_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _058378_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _058378_jump

	_058323_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _058378_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000012,%eax
		jne    _058378_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01d6f8_func
		testb  $0x000008,0x000081(%ecx)
		je     _058367_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		jmp    _058371_jump

	_058367_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx

	_058371_jump:
		mov    %ecx,%eax
		call   _056614_func

	_058378_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05837c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000070(%eax),%al
		cmp    $0x000002,%al
		jb     _0583ea_jump
		jbe    _058392_jump
		cmp    $0x00001e,%al
		je     _058392_jump

	_05838e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058392_jump:
		mov    %edx,%eax
		call   _04aad8_func
		mov    %edx,%eax
		call   _0248b8_func
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		test   %eax,%eax
		jne    _05838e_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000002,%eax
		jne    _05838e_jump
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    0x000076(%edx),%al
		je     _05838e_jump
		lea    0x000081(%edx),%eax
		testb  $0x000001,0x000076(%edx)
		setne  %dl
		and    $0x0000ff,%edx
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0583ea_jump:
		and    $0x0000ff,%eax
		jne    _0583fa_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _058401_jump

	_0583fa_jump:
		orb    $0x000008,0x000081(%edx)

	_058401_jump:
		mov    %edx,%eax
		call   _04aad8_func
		mov    %edx,%eax
		call   _0248b8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058414_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _058429_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _058487_jump

	_058429_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _058467_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ebx
		or     $0x000008,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    $0x000003,%edx
		jmp    _058482_jump

	_058467_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		and    $0x0000f7,%ah
		mov    $0x000002,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax

	_058482_jump:
		call   _056614_func

	_058487_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05848c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0584d5_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _0584d5_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		testb  $0x000008,0x000081(%ecx)
		je     _0584c4_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _0584ce_jump

	_0584c4_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_0584ce_jump:
		mov    %ecx,%eax
		call   _056614_func

	_0584d5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0584dc_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000004,%edx
		jne    _0584f7_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		call   _056614_func

	_0584f7_jump:
		pop    %edx
		pop    %ebx
		ret    



_0584fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02d750_func
		cmpw   $0x000000,_0cd0ee_data
		je     _05859c_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _058532_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _058532_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _056614_func

	_058532_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05856a_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _05856a_jump
		mov    0x000004(%ecx),%eax
		mov    0x000016(%eax),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _05856a_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _056614_func

	_05856a_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0585aa_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		jne    _0585aa_jump
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _0585aa_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _0585a5_jump

	_05859c_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_0585a5_jump:
		call   _056614_func

	_0585aa_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0585b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		cmpw   $0x000000,_0cd0f0_data
		je     _05863a_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0585de_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _0585de_jump
		movw   $0x000001,_0cd0f2_data

	_0585de_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05863a_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _05863a_jump
		cmpw   $0x000000,_0cd0f2_data
		je     _05861d_jump
		mov    $0x000001,%ah
		mov    _0c331d_data,%dl
		movb   $0x000000,0x00007f(%ecx)
		xor    %edi,%edi
		mov    %ah,_0cd10f_data
		or     $0x000002,%dl
		mov    %di,_0cd0f2_data
		mov    %dl,_0c331d_data

	_05861d_jump:
		mov    0x00007f(%ecx),%dh
		xor    %eax,%eax
		inc    %dh
		mov    %dh,%al
		mov    %dh,0x00007f(%ecx)
		cmp    $0x000064,%eax
		jle    _05863a_jump
		call   _0713cc_func
		orb    $0x000004,_0c3315_data

	_05863a_jump:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jne    _05867c_jump
		cmpw   $0x000000,_0cd0ee_data
		je     _058675_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05867c_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _05867c_jump
		mov    $0x000003,%edx
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   _056614_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058675_jump:
		andb   $0x0000fb,0x000081(%ecx)

	_05867c_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058684_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0586c8_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _0586c8_jump
		mov    _0cd0f0_data,%dx
		test   %dx,%dx
		jne    _0586c8_jump
		mov    %dx,_0cd0f2_data
		mov    %eax,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    $0x000001,%esi
		call   _056614_func
		mov    %si,_0cd0f0_data

	_0586c8_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0586ea_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		jne    _0586ea_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _056614_func

	_0586ea_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0586f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x00000c,%eax
		cwtl   
		call   _071540_func
		mov    0x000054(%edx),%ebx
		cwtl   
		sar    $0x000010,%ebx
		sub    $0x00002b,%eax
		add    %ebx,%eax
		mov    0x000034(%edx),%cx
		mov    %eax,0x00002c(%edx)
		cmp    _0c1b96_data,%cx
		jne    _05872e_jump
		movw   $0x00000d,0x000050(%edx)
		jmp    _058734_jump

	_05872e_jump:
		movw   $0x000000,0x000050(%edx)

	_058734_jump:
		mov    0x000056(%edx),%ax
		mov    0x000050(%edx),%si
		cmp    %si,%ax
		jge    _05874d_jump
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,0x000056(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05874d_jump:
		jle    _058754_jump
		dec    %eax
		mov    %ax,0x000056(%edx)

	_058754_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05875c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _02d750_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%dl
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		and    $0x00000f,%dl
		cmp    $0x000004,%eax
		jne    _0587b7_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00000a,%eax
		jne    _0587b7_jump
		xor    %eax,%eax
		mov    %dl,%al
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0587b7_jump
		mov    0x000032(%esi),%edx
		mov    $0x000028,%eax
		sar    $0x000010,%edx
		call   _068654_func

	_0587b7_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _0587db_jump
		mov    0x00007f(%esi),%bl
		inc    %bl
		mov    %bl,0x00007f(%esi)
		jne    _0588ea_jump
		mov    %bl,%cl
		inc    %cl
		mov    %cl,0x00007f(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0587db_jump:
		cmpb   $0x000000,0x00007f(%esi)
		je     _05880b_jump
		mov    $0x000001,%ebx
		mov    $_0c1f08_data,%edx
		mov    %ebx,_0c1b70_data
		call   _04fad0_func
		mov    %esi,%eax
		call   _069fbc_func
		call   _04e774_func
		movb   $0x000000,0x00007f(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05880b_jump:
		testb  $0x000002,_0c3315_data
		jne    _0588ea_jump
		mov    0x000081(%esi),%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _0588ea_jump
		mov    %esi,%eax
		call   _01dee0_func
		test   %ax,%ax
		je     _0588ea_jump
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0588ea_jump
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0588ea_jump
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _0588ea_jump
		mov    _0c1bb8_data,%al
		test   %eax,%eax
		jne    _0588ea_jump
		mov    _0c25a8_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c25a6_data,%eax
		mov    $0x00000f,%ecx
		sar    $0x000010,%eax
		mov    0x000028(%esi),%bx
		push   %eax
		mov    _0c25a4_data,%eax
		mov    0x00002c(%esi),%dx
		sar    $0x000010,%eax
		add    $0x00002a,%ebx
		push   %eax
		mov    _0c25a2_data,%eax
		add    $0x000030,%edx
		sar    $0x000010,%eax
		movswl %dx,%edx
		push   %eax
		movswl %bx,%eax
		mov    $0x000005,%ebx
		call   _0291bc_func
		test   %ax,%ax
		je     _0588ea_jump
		xor    %edx,%edx
		mov    %dx,_0c1b8c_data
		mov    0x000081(%esi),%dh
		or     $0x000001,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%esi)
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %edx,_0c1b70_data
		call   _056614_func

	_0588ea_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0588f0_func:
		jmp    _067fb0_jump



_0588f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000073(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0x000000,%eax
		je     _058915_jump
		mov    $0x000001,%eax
		jg     _058915_jump
		neg    %eax

	_058915_jump:
		mov    %ax,0x000004(%esp)
		mov    0x000034(%esi),%dx
		cmp    _0c1b96_data,%dx
		je     _05894f_jump
		cmpb   $0x000000,_0c24d2_data
		jne    _0589e1_jump
		mov    0x000076(%esi),%bl
		test   %bl,%bl
		je     _0589e1_jump
		mov    0x000004(%esp),%al
		mov    %bl,%bh
		sub    %al,%bh
		mov    %bh,0x000076(%esi)
		jmp    _0589e1_jump

	_05894f_jump:
		cmpb   $0x000000,_0c24d0_data
		jne    _0589e1_jump
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		xor    %eax,%eax
		mov    0x000010(%esp),%ebx
		mov    0x000074(%esi),%al
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0c1bb4_data,%dl
		mov    %ebx,0x000010(%esp)
		add    _0c1b74_data,%edx
		mov    0x00000a(%esp),%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000011,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		sub    %eax,%edx
		mov    $0x000003,%cl
		mov    %edx,%eax
		mov    %edx,0x000008(%esp)
		test   %ax,%ax
		js     _0589b9_jump
		sar    %cl,%ax
		jmp    _0589c2_jump

	_0589b9_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0589c2_jump:
		sub    %al,0x000076(%esi)
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _0589d1_jump
		neg    %eax

	_0589d1_jump:
		cmp    $0x000010,%eax
		jl     _0589e1_jump
		mov    0x000004(%esp),%al
		mov    $0x00000f,%ah
		mul    %ah
		mov    %al,0x000076(%esi)

	_0589e1_jump:
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0589f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %eax,%edi
		call   _01d704_func
		mov    %eax,%edx
		mov    %ax,0x000010(%esp)
		mov    %edi,%eax
		call   _01d82c_func
		movswl %dx,%esi
		mov    %ax,0x000008(%esp)
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %ecx,%ebx
		mov    %edi,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _058aff_jump
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x00000d,%edx
		je     _058aff_jump
		cmp    $0x00001c,%edx
		je     _058aff_jump
		cmp    $0x00000e,%edx
		je     _058aff_jump
		cmp    $0x00001d,%edx
		je     _058aff_jump
		mov    0x000040(%edi),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _058a9e_jump
		decw   0x000042(%edi)
		xor    %edx,%edx
		mov    0x000060(%edi),%dx
		cmp    $0x0000ae,%edx
		je     _058a79_jump
		cmp    $0x0000e1,%edx
		jne    _058a81_jump

	_058a79_jump:
		movw   $0x00ffdc,0x000040(%edi)
		jmp    _058a87_jump

	_058a81_jump:
		movw   $0x000024,0x000040(%edi)

	_058a87_jump:
		mov    0x000006(%esp),%ebx
		mov    0x00000e(%esp),%edx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _02d280_func
		jmp    _058aff_jump

	_058a9e_jump:
		mov    %ecx,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _02d280_func
		test   %ax,%ax
		je     _058aff_jump
		xor    %edx,%edx
		mov    0x000060(%edi),%dx
		movw   $0x00ffff,0x000042(%edi)
		cmp    $0x0000ae,%edx
		je     _058aca_jump
		cmp    $0x0000e1,%edx
		jne    _058ad2_jump

	_058aca_jump:
		movw   $0x00fff0,0x000040(%edi)
		jmp    _058ad8_jump

	_058ad2_jump:
		movw   $0x000010,0x000040(%edi)

	_058ad8_jump:
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x000006,%edx
		jne    _058ae9_jump
		mov    $0x000007,%ebx
		jmp    _058af3_jump

	_058ae9_jump:
		cmp    $0x000015,%edx
		jne    _058aff_jump
		mov    $0x000016,%ebx

	_058af3_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01d6f8_func

	_058aff_jump:
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x00000d,%edx
		je     _058b12_jump
		cmp    $0x00001c,%edx
		jne    _058c57_jump

	_058b12_jump:
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000006,%edx
		jne    _058c57_jump
		cmpb   $0x000000,_0c24ca_data
		je     _058c57_jump
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _058b56_jump
		jmp    _058ce8_jump

	_058b46_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _058ce8_jump

	_058b56_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x0000ba,%edx
		jne    _058b46_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _058b46_jump
		lea    0x00000c(%esp),%edx
		lea    0x000014(%esp),%ecx
		push   %edx
		lea    0x000008(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01da90_func
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		cmp    $0x000001,%edx
		jne    _058bd4_jump
		mov    -0x000002(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000011,%edx
		add    %edx,%ebx
		movw   $0x00000d,0x000040(%esi)
		add    $0x00000d,%ebx
		mov    0x000081(%esi),%dh
		mov    %ebx,0x000028(%esi)
		or     $0x000008,%dh
		mov    0x000028(%esi),%ax
		mov    %dh,0x000081(%esi)
		jmp    _058bfb_jump

	_058bd4_jump:
		mov    -0x000002(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000011,%edx
		add    %ebx,%edx
		movw   $0x00fff3,0x000040(%esi)
		sub    $0x00000d,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000028(%esi),%ax

	_058bfb_jump:
		mov    %ax,0x00003c(%esi)
		mov    0x000012(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000069(%esi),%dl
		sub    %edx,%ebx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		movw   $0x000002,0x000042(%esi)
		add    %ebx,%edx
		movl   $0x000001,0x000024(%esi)
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x000081(%esi),%bl
		mov    0x00002c(%esi),%ax
		or     $0x000004,%bl
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f7d4_func
		andb   $0x0000ef,0x000081(%esi)
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058c57_jump:
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x00000e,%edx
		je     _058c66_jump
		cmp    $0x00001d,%edx
		jne    _058c8a_jump

	_058c66_jump:
		movw   $0x00fff8,0x000042(%edi)
		mov    0x000081(%edi),%dl
		movw   $0x000000,0x000040(%edi)
		and    $0x0000ef,%dl
		mov    %dl,0x000081(%edi)
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058c8a_jump:
		mov    0x000040(%edi),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _058ce8_jump
		cmp    $0x000006,%edx
		jne    _058ca1_jump
		mov    $0x000007,%ebx
		jmp    _058cdc_jump

	_058ca1_jump:
		cmp    $0x000015,%edx
		jne    _058cad_jump
		mov    $0x000016,%ebx
		jmp    _058cdc_jump

	_058cad_jump:
		cmp    $0x00000b,%edx
		jne    _058cc3_jump
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000036,%edx
		jne    _058cc3_jump
		mov    $0x000002,%ebx
		jmp    _058cdc_jump

	_058cc3_jump:
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x00001a,%edx
		jne    _058ce8_jump
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000036,%edx
		jne    _058ce8_jump
		mov    $0x000013,%ebx

	_058cdc_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01d6f8_func

	_058ce8_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058cf4_func:
		push   %ebx
		push   %ecx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		je     _058d04_jump
		cmp    $0x000001,%edx
		jne    _058d28_jump

	_058d04_jump:
		mov    0x000076(%eax),%ch
		xor    %edx,%edx
		dec    %ch
		mov    %ch,%dl
		mov    %ch,0x000076(%eax)
		test   %edx,%edx
		jne    _058d1e_jump
		mov    $0x00000d,%ebx
		jmp    _058e3a_jump

	_058d1e_jump:
		mov    $0x00000a,%ebx
		jmp    _058e38_jump

	_058d28_jump:
		cmp    $0x000007,%edx
		je     _058d3c_jump
		cmp    $0x000002,%edx
		je     _058d3c_jump
		cmp    $0x000003,%edx
		je     _058d3c_jump
		cmp    $0x000004,%edx
		jne    _058d68_jump

	_058d3c_jump:
		mov    0x000076(%eax),%cl
		xor    %edx,%edx
		dec    %cl
		mov    %cl,%dl
		mov    %cl,0x000076(%eax)
		test   %edx,%edx
		jne    _058d59_jump
		mov    $0x00000d,%ebx
		call   _01d6f8_func
		pop    %ecx
		pop    %ebx
		ret    

	_058d59_jump:
		mov    $0x00000c,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %ecx
		pop    %ebx
		ret    

	_058d68_jump:
		cmp    $0x000005,%edx
		je     _058d72_jump
		cmp    $0x000006,%edx
		jne    _058d9e_jump

	_058d72_jump:
		mov    0x000076(%eax),%bh
		xor    %edx,%edx
		dec    %bh
		mov    %bh,%dl
		mov    %bh,0x000076(%eax)
		test   %edx,%edx
		jne    _058d8f_jump
		mov    $0x00000d,%ebx
		call   _01d6f8_func
		pop    %ecx
		pop    %ebx
		ret    

	_058d8f_jump:
		mov    $0x00000b,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %ecx
		pop    %ebx
		ret    

	_058d9e_jump:
		cmp    $0x00000f,%edx
		je     _058da8_jump
		cmp    $0x000010,%edx
		jne    _058dd4_jump

	_058da8_jump:
		mov    0x000076(%eax),%bl
		xor    %edx,%edx
		dec    %bl
		mov    %bl,%dl
		mov    %bl,0x000076(%eax)
		test   %edx,%edx
		jne    _058dc5_jump
		mov    $0x00001c,%ebx
		call   _01d6f8_func
		pop    %ecx
		pop    %ebx
		ret    

	_058dc5_jump:
		mov    $0x000019,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %ecx
		pop    %ebx
		ret    

	_058dd4_jump:
		cmp    $0x000016,%edx
		je     _058de8_jump
		cmp    $0x000011,%edx
		je     _058de8_jump
		cmp    $0x000012,%edx
		je     _058de8_jump
		cmp    $0x000013,%edx
		jne    _058e10_jump

	_058de8_jump:
		decb   0x000076(%eax)
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		test   %edx,%edx
		jne    _058e01_jump
		mov    $0x00001c,%ebx
		call   _01d6f8_func
		pop    %ecx
		pop    %ebx
		ret    

	_058e01_jump:
		mov    $0x00001b,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %ecx
		pop    %ebx
		ret    

	_058e10_jump:
		cmp    $0x000014,%edx
		je     _058e1a_jump
		cmp    $0x000015,%edx
		jne    _058e3f_jump

	_058e1a_jump:
		decb   0x000076(%eax)
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		test   %edx,%edx
		jne    _058e33_jump
		mov    $0x00001c,%ebx
		call   _01d6f8_func
		pop    %ecx
		pop    %ebx
		ret    

	_058e33_jump:
		mov    $0x00001a,%ebx

	_058e38_jump:
		xor    %edx,%edx

	_058e3a_jump:
		call   _01d6f8_func

	_058e3f_jump:
		pop    %ecx
		pop    %ebx
		ret    



_058e44_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _058efe_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _058e70_jump
		cmp    $0x000001,%eax
		je     _058e70_jump
		cmp    $0x00000f,%eax
		je     _058e70_jump
		cmp    $0x000010,%eax
		jne    _058efe_jump

	_058e70_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _058e7e_jump
		cmp    $0x000001,%eax
		jne    _058e85_jump

	_058e7e_jump:
		mov    $0x000005,%ebx
		jmp    _058e94_jump

	_058e85_jump:
		cmp    $0x00000f,%eax
		je     _058e8f_jump
		cmp    $0x000010,%eax
		jne    _058ea0_jump

	_058e8f_jump:
		mov    $0x000014,%ebx

	_058e94_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d6f8_func

	_058ea0_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x0000ae,%eax
		je     _058eb4_jump
		cmp    $0x0000b8,%eax
		jne    _058edb_jump

	_058eb4_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		movw   $0x000003,0x000042(%ecx)
		cmp    $0x0000ae,%eax
		jne    _058ed1_jump
		movw   $0x00ffe8,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058ed1_jump:
		movw   $0x000018,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058edb_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		movw   $0x000002,0x000042(%ecx)
		cmp    $0x0000e1,%eax
		jne    _058ef8_jump
		movw   $0x00ffdc,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058ef8_jump:
		movw   $0x000024,0x000040(%ecx)

	_058efe_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058f10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		testb  $0x000002,_0c3315_data
		je     _058f2d_jump
		mov    $0x000100,%edx
		jmp    _058f32_jump

	_058f2d_jump:
		mov    $0x000200,%edx

	_058f32_jump:
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _058f43_jump
		neg    %eax

	_058f43_jump:
		cmp    %edx,%eax
		setg   %cl
		mov    0x000060(%esi),%ax
		cmp    $0x000022,%ax
		jb     _059b0d_jump
		cmp    $0x000022,%ax
		jbe    _058f7e_jump
		cmp    $0x000098,%ax
		jb     _059aea_jump
		jbe    _058f7e_jump
		cmp    $0x0000ed,%ax
		jb     _059ad7_jump
		jbe    _058f7e_jump
		cmp    $0x0000f3,%ax
		jne    _059b87_jump

	_058f7e_jump:
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0590f4_jump
		mov    0x000056(%esi),%bx
		test   %bx,%bx
		je     _058f9e_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x000056(%esi)

	_058f9e_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _059b87_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0c1bb8_data,%al
		mov    $0x000001,%bh
		add    %edx,%eax
		mov    %bh,_0c2503_data
		cmp    $0x00000b,%eax
		jb     _058fd0_jump
		cmp    $0x00000c,%eax
		jbe    _059025_jump

	_058fd0_jump:
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		call   _062d1c_func
		movw   $0x002710,0x000054(%esi)
		mov    $0x00000c,%eax
		mov    _0c1b8e_data,%dx
		mov    %ax,_0c24f4_data
		xor    %eax,%eax
		sub    $0x000003,%edx
		mov    0x000060(%esi),%ax
		mov    %dx,_0c1b8e_data
		cmp    $0x0000f3,%eax
		jne    _05902c_jump
		mov    $0x000011,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _059093_jump

	_059025_jump:
		call   _05c634_func
		jmp    _058fd0_jump

	_05902c_jump:
		cmp    $0x000098,%eax
		jne    _059064_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _059044_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _059054_jump

	_059044_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _059093_jump

	_059054_jump:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _059093_jump

	_059064_jump:
		cmp    $0x0000ed,%eax
		jne    _059093_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _059093_jump
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _059093_jump
		mov    $_0c1b4c_data,%eax
		mov    $0x000001,%ebx
		call   _0716a8_func
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _056614_func

	_059093_jump:
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		xor    %eax,%eax
		mov    _0c1b74_data,%edx
		mov    _0c1bb4_data,%al
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000011,%eax
		cmp    %eax,%edx
		jge    _0590e2_jump
		movw   $0x00fe00,_0c25b4_data
		jmp    _059b87_jump

	_0590e2_jump:
		movw   $0x000200,_0c25b4_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0590f4_jump:
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000056(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059105_jump:
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0590f4_jump
		mov    0x000056(%esi),%cx
		test   %cx,%cx
		je     _059121_jump
		mov    %ecx,%edi
		dec    %edi
		mov    %di,0x000056(%esi)

	_059121_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _059b87_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		xor    %edx,%edx
		xor    %eax,%eax
		call   _02baec_func
		xor    %eax,%eax
		mov    _0c1b74_data,%edx
		mov    _0c1bb4_data,%al
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000011,%eax
		cmp    %eax,%edx
		jge    _059186_jump
		orb    $0x000008,_0c1bcd_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059186_jump:
		andb   $0x0000f7,_0c1bcd_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059196_jump:
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0590f4_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _0590f4_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000009,%eax
		jne    _0590f4_jump
		mov    0x000056(%esi),%bx
		test   %bx,%bx
		je     _0591cf_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x000056(%esi)

	_0591cf_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _059b87_jump
		xor    %eax,%eax
		mov    $0x000001,%dl
		mov    _0c1bb9_data,%al
		mov    %dl,_0c2503_data
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0c1bb8_data,%al
		add    %edx,%eax
		cmp    $0x00000b,%eax
		jb     _059205_jump
		cmp    $0x00000c,%eax
		jbe    _05929f_jump

	_059205_jump:
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		call   _062d1c_func
		mov    $0x00000c,%eax
		movw   $0x002710,0x000054(%esi)
		mov    $0x00000a,%ebx
		mov    _0c1b8e_data,%dx
		mov    %ax,_0c24f4_data
		sub    $0x000004,%edx
		mov    %esi,%eax
		mov    %dx,_0c1b8e_data
		xor    %edx,%edx
		lea    0x000008(%esp),%ecx
		call   _01d6f8_func
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		xor    %eax,%eax
		mov    _0c1b74_data,%edx
		mov    _0c1bb4_data,%al
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000011,%eax
		cmp    %eax,%edx
		jge    _0590e2_jump
		movw   $0x00fe00,_0c25b4_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05929f_jump:
		call   _05c634_func
		jmp    _059205_jump

	_0592a9_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _05934c_jump
		mov    0x000050(%esi),%dx
		mov    _0c2520_data,%eax
		dec    %edx
		sar    $0x000010,%eax
		mov    %dx,0x000050(%esi)
		cmp    $0x000001,%eax
		jne    _0592dd_jump
		cmpb   $0x000000,_0c24ca_data
		je     _0592d9_jump
		movb   $0x000000,0x00007e(%esi)
		jmp    _0592dd_jump

	_0592d9_jump:
		movb   $0x000004,0x00007e(%esi)

	_0592dd_jump:
		mov    0x000050(%esi),%ax
		cmp    0x000056(%esi),%ax
		jg     _059b87_jump
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _05933c_jump
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ax,_0c1b96_data
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _062ad4_func
		mov    %dx,_0c1b9e_data
		movw   $0x002710,0x000054(%esi)
		mov    %dx,_0c24f4_data
		mov    %dx,_0c1b8e_data

	_05933c_jump:
		andb   $0x0000df,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05934c_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _05945b_jump
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0593ad_jump
		mov    $0xffffffff,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		mov    %bx,_0c1b96_data
		mov    $0x000001,%ebx
		call   _01d6f8_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _062ad4_func
		mov    %di,_0c24f4_data
		mov    %di,_0c1b9e_data
		mov    %di,_0c1b8e_data
		movw   $0x002710,0x000054(%esi)

	_0593ad_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%eax
		jne    _05943d_jump
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%esi),%edx
		mov    (%edx,%ebx,1),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _0593dd_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		test   %eax,%eax
		jmp    _059400_jump

	_0593dd_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx

	_059400_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05943d_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05943d_jump
		mov    %esi,%eax
		call   _053c9c_func

	_05943d_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000014,%eax
		jne    _059b87_jump
		orb    $0x000020,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05945b_jump:
		movl   $0x000000,0x000024(%esi)
		movl   $0x000004,0x000030(%esi)
		mov    0x000081(%esi),%ch
		movb   $0x000004,0x00007e(%esi)
		or     $0x000020,%ch
		mov    %ch,0x000081(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0c1b96_data,%dx
		jne    _059b87_jump
		mov    $0xffffffff,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		mov    %bx,_0c1b96_data
		mov    $0x000001,%ebx
		call   _01d6f8_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _062ad4_func
		mov    %di,_0c24f4_data
		mov    %di,_0c1b9e_data
		mov    %di,_0c1b8e_data
		movw   $0x002710,0x000054(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0594da_jump:
		mov    _0c1b96_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _059548_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		je     _059535_jump
		mov    0x000048(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _059535_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000072(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x000056(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _059548_jump

	_059535_jump:
		mov    0x000048(%esi),%eax
		mov    0x000054(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _059548_jump
		mov    $0x000001,%cl

	_059548_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _059b87_jump
		mov    0x000054(%esi),%eax
		mov    0x000040(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _059618_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000056(%esi)
		mov    0x00003c(%esi),%eax
		movw   $0x000000,0x000042(%esi)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000034(%esi),%di
		cmp    _0c1b96_data,%di
		je     _0595ac_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0595a5_jump:
		call   _05c634_func
		jmp    _0595e4_jump

	_0595ac_jump:
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%eax
		mov    _0c1b78_data,%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0c1bb8_data,%al
		add    %edx,%eax
		mov    %ebx,_0c1b78_data
		cmp    $0x00000b,%eax
		jb     _0595e4_jump
		cmp    $0x00000c,%eax
		jbe    _0595a5_jump

	_0595e4_jump:
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		movb   $0x000001,_0c2503_data
		call   _062d1c_func
		mov    $0x00000c,%eax
		movw   $0x002710,0x000054(%esi)
		mov    %ax,_0c24f4_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059618_jump:
		test   %cl,%cl
		jne    _059b87_jump
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _059b87_jump
		xor    %edx,%edx
		mov    _0c2503_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _059b87_jump
		call   *_0cd03c_data
		test   %ax,%ax
		je     _059b87_jump
		call   _062d1c_func
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    %ebx,%eax
		jne    _059672_jump
		movw   $0x002710,0x000054(%esi)

	_059672_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _059691_jump
		cmp    %ecx,%eax
		jg     _059691_jump
		mov    $0x000001,%eax
		jmp    _059693_jump

	_059691_jump:
		xor    %eax,%eax

	_059693_jump:
		test   %eax,%eax
		je     _0596a8_jump
		subw   $0x000002,_0c1b8e_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0596a8_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _059b87_jump
		mov    0x000042(%esi),%ax
		mov    _0c1b8e_data,%cx
		sub    $0x000002,%eax
		add    %eax,%ecx
		mov    %cx,_0c1b8e_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0596d7_jump:
		mov    _0c1b96_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _059745_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		je     _059732_jump
		mov    0x000048(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _059732_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000072(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x000056(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _059745_jump

	_059732_jump:
		mov    0x000048(%esi),%edx
		mov    0x000054(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		inc    %edx
		cmp    %edx,%eax
		jne    _059745_jump
		mov    $0x000001,%cl

	_059745_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _059b87_jump
		mov    0x000054(%esi),%eax
		mov    0x000040(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _05980f_jump
		mov    $0x000018,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000056(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0c1b96_data,%dx
		je     _059799_jump
		jmp    _0597fd_jump

	_059792_jump:
		call   _05c634_func
		jmp    _0597d0_jump

	_059799_jump:
		mov    _0c1b78_data,%edi
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%ecx
		sar    $0x000010,%eax
		xor    %edx,%edx
		sub    %ecx,%eax
		mov    _0c1bb9_data,%dl
		add    %eax,%edi
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0c1bb8_data,%al
		add    %edx,%eax
		mov    %edi,_0c1b78_data
		cmp    $0x00000b,%eax
		jb     _0597d0_jump
		cmp    $0x00000c,%eax
		jbe    _059792_jump

	_0597d0_jump:
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    $0x000001,%cl
		call   _01d6f8_func
		mov    $0x00000c,%ebx
		mov    %cl,_0c2503_data
		call   _062d1c_func
		mov    %bx,_0c24f4_data
		movw   $0x002710,0x000054(%esi)

	_0597fd_jump:
		mov    0x00003c(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05980f_jump:
		test   %cl,%cl
		jne    _059b87_jump
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _059b87_jump
		xor    %edx,%edx
		mov    _0c2503_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _059b87_jump
		call   *_0cd03c_data
		test   %ax,%ax
		je     _059b87_jump
		call   _062d1c_func
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    %ebx,%eax
		jne    _059869_jump
		movw   $0x002710,0x000054(%esi)

	_059869_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _059888_jump
		cmp    %ecx,%eax
		jg     _059888_jump
		mov    $0x000001,%eax
		jmp    _05988a_jump

	_059888_jump:
		xor    %eax,%eax

	_05988a_jump:
		test   %eax,%eax
		je     _05989f_jump
		subw   $0x000002,_0c1b8e_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05989f_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _059b87_jump
		mov    _0c1b8e_data,%cx
		mov    0x000042(%esi),%ax
		add    %eax,%ecx
		mov    %cx,_0c1b8e_data
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff9,%eax
		jge    _059b87_jump
		movw   $0x00fff9,_0c1b8e_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0598e5_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000014,%eax
		jne    _059937_jump
		mov    0x000056(%esi),%di
		test   %di,%di
		jne    _059930_jump
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000056(%esi)
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _05991b_jump
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		jmp    _059937_jump

	_05991b_jump:
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		test   %eax,%eax
		je     _05992a_jump
		movb   $0x000000,0x00007e(%esi)
		jmp    _059937_jump

	_05992a_jump:
		movb   $0x000003,0x00007e(%esi)
		jmp    _059937_jump

	_059930_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_059937_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _05994d_jump
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		test   %eax,%eax
		je     _05996c_jump

	_05994d_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _059b87_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000014,%eax
		je     _059b87_jump

	_05996c_jump:
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0599b2_jump
		movw   $0x00ffff,_0c1b96_data
		mov    $0x000002,%ebx
		mov    $_0c1b4c_data,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %ecx,%ecx
		call   _062ad4_func
		mov    %cx,_0c24f4_data
		mov    %cx,_0c1b9e_data
		mov    %cx,_0c1b8e_data

	_0599b2_jump:
		movw   $0x0003e8,0x000054(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0599c1_jump:
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		cmp    $0x000007,%edx
		jne    _059a77_jump
		xor    %ebx,%ebx
		mov    0x00006a(%esi),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%esi),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %ebx,%ebx
		dec    %eax
		mov    0x00006b(%esi),%bl
		cmp    %eax,%ebx
		jne    _059a29_jump
		xor    %eax,%eax
		mov    0x00000c(%esi),%ebx
		mov    0x00006d(%esi),%al
		mov    (%ebx,%eax,4),%eax
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _059a29_jump
		mov    0x000081(%esi),%dh
		mov    %eax,0x000024(%esi)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%esi)

	_059a29_jump:
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _059a71_jump
		mov    $0xffffffff,%eax
		mov    $0x000002,%ebx
		mov    %ax,_0c1b96_data
		mov    %ebx,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _062ad4_func
		mov    %dx,_0c24f4_data
		mov    %dx,_0c1b9e_data
		mov    %dx,_0c1b8e_data

	_059a71_jump:
		movw   $0x0003e8,0x000054(%esi)

	_059a77_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000014,%eax
		jne    _059b87_jump
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		je     _059a9b_jump
		mov    0x000052(%esi),%ax
		cmp    0x000050(%esi),%ax
		je     _059a9f_jump

	_059a9b_jump:
		decw   0x000052(%esi)

	_059a9f_jump:
		mov    0x000056(%esi),%cx
		test   %cx,%cx
		je     _059ab2_jump
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _059ac7_jump

	_059ab2_jump:
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059ac7_jump:
		mov    %ecx,%edi
		dec    %edi
		mov    %di,0x000056(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059ad7_jump:
		cmp    $0x0000be,%ax
		je     _059196_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059aea_jump:
		cmp    $0x000044,%ax
		jb     _059b87_jump
		jbe    _0594da_jump
		cmp    $0x000073,%ax
		je     _0599c1_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059b0d_jump:
		cmp    $0x00001b,%ax
		jb     _059b36_jump
		jbe    _0596d7_jump
		cmp    $0x00001c,%ax
		jbe    _0598e5_jump
		cmp    $0x00001d,%ax
		je     _058f7e_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059b36_jump:
		cmp    $0x000019,%ax
		jb     _059b87_jump
		jbe    _059105_jump
		mov    0x000052(%esi),%di
		test   %di,%di
		je     _0592a9_jump
		mov    _0c1b96_data,%ax
		cmp    0x000034(%esi),%ax
		je     _059b66_jump
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000014,%eax
		je     _059b87_jump

	_059b66_jump:
		mov    0x000052(%esi),%ax
		dec    %ax
		mov    %ax,0x000052(%esi)
		jne    _059b87_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059b87_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059b90_func:
		push   %ebx
		xor    %ebx,%ebx
		movswl %dx,%edx
		mov    0x000079(%eax),%bl
		cmp    %ebx,%edx
		jne    _059bc0_jump
		mov    _0c1ef0_data,%edx
		mov    0x00003e(%edx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _059bb4_jump
		mov    $0x000019,%edx
		jmp    _059bbb_jump

	_059bb4_jump:
		jge    _059bc0_jump
		mov    $0x00001a,%edx

	_059bbb_jump:
		call   _01d6e8_func

	_059bc0_jump:
		pop    %ebx
		ret    



_059bd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c51ce_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _059c0d_jump
		push   $0xffffffa2
		mov    %eax,%edx
		shl    $0x000005,%eax
		mov    $0xffffff5b,%ecx
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		mov    $0x000006,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01d0b8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059c0d_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059c20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%di
		xor    %bl,%bl
		xor    %ecx,%ecx
		test   %di,%di
		jg     _059c50_jump
		jmp    _059ce4_jump

	_059c40_jump:
		inc    %ecx
		add    $0x000084,%edx
		cmp    %di,%cx
		jge    _059ce4_jump

	_059c50_jump:
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000005,%eax
		jge    _059ce4_jump
		xor    %esi,%esi
		mov    0x000060(%edx),%si
		cmp    $0x0000be,%esi
		jne    _059c40_jump
		imul   $0x000014,%eax,%eax
		xor    %esi,%esi
		mov    %si,_0db280_data(%eax)
		xor    %bh,%bh
		mov    %si,_0db282_data(%eax)
		mov    %bh,_0db290_data(%eax)
		mov    %bh,_0db291_data(%eax)
		mov    %cx,_0db28e_data(%eax)
		mov    $0x000001,%esi
		mov    %si,_0db284_data(%eax)
		mov    $0x000005,%bh
		mov    %si,_0db286_data(%eax)
		mov    %bh,_0db292_data(%eax)
		movw   $0x00000f,_0db288_data(%eax)
		xor    %esi,%esi
		mov    %si,_0db28a_data(%eax)
		mov    %si,_0db28c_data(%eax)
		andb   $0x0000fb,0x000081(%edx)
		xor    %eax,%eax
		movl   $0x000000,0x000024(%edx)
		mov    %bl,%al
		inc    %bl
		mov    %ax,0x000050(%edx)
		jmp    _059c40_jump

	_059ce4_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059cec_func:
		push   %edx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000005,%edx
		jl     _059cfa_jump
		pop    %edx
		ret    

	_059cfa_jump:
		imul   $0x000014,%edx,%edx
		xor    %ah,%ah
		mov    %ah,_0db291_data(%edx)
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000005,%edx
		jl     _059cfa_jump
		pop    %edx
		ret    



_059d14_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		xor    %al,%al
		jmp    _059d1e_jump

	_059d1c_jump:
		inc    %al

	_059d1e_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000005,%edx
		jge    _059d3f_jump
		imul   $0x000014,%edx,%edx
		mov    _0db291_data(%edx),%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		jne    _059d1c_jump
		inc    %ah
		jmp    _059d1c_jump

	_059d3f_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0db274_data,%dl
		mov    _0db275_data,%bl
		mov    _0968bc_data(%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		cmp    _0968b4_data(%edx),%ah
		sete   %al
		pop    %edx
		pop    %ebx
		ret    



_059d68_func:
		push   %edx
		mov    0x000050(%eax),%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000005,%edx
		jl     _059d77_jump
		mov    $0x0000ff,%al

	_059d77_jump:
		pop    %edx
		ret    



_059d7c_func:
		push   %ebx
		push   %ecx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %dl,%al
		test   %eax,%eax
		jne    _059d8f_jump
		xor    %edx,%edx
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_059d8f_jump:
		lea    0x000000(,%eax,2),%ecx
		mov    $0x0000f0,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		and    $0x0000ff,%ebx
		add    %ebx,%ebx
		inc    %ebx
		imul   %ebx,%eax
		mov    _0c51cc_data,%ebx
		sar    $0x000010,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%ebx
		mov    0x000081(%ebx,%eax,1),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _059de2_jump
		add    $0x000050,%edx

	_059de2_jump:
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_059de8_func:
		movswl %dx,%edx
		test   %edx,%edx
		jne    _059df5_jump
		mov    $0x00002c,%eax
		ret    

	_059df5_jump:
		shl    $0x000004,%eax
		add    $0x00002c,%eax
		ret    



_059e00_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%ebx
		movswl %dx,%edx
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx

	_059e14_jump:
		cwtl   
		call   _01e4d8_func
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		jne    _059e3c_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %cx,%eax
		sar    $0x000004,%eax
		jmp    _059e14_jump

	_059e3c_jump:
		xor    %ch,%ch
		and    $0x0000f0,%bl
		and    $0x00000f,%cl
		mov    %ebx,%esi
		movswl %cx,%edx
		xor    %ebx,%ebx
		call   _023ee4_func
		mov    %esi,%ebx
		add    %ebx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_059e58_switch:
		.long   _059ea0_case
		.long   _059ea0_case
		.long   _059ea0_case
		.long   _059ee8_case
		.long   _059ee8_case
		.long   _059ea0_case




_059e70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000084,%esp
		call   _059d68_func
		mov    %al,%bl
		and    $0x0000ff,%eax
		cmp    $0x0000ff,%eax
		jne    _059fa2_jump

	_059e93_jump:
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059ea0_case:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %cx,_0db280_data(,%eax,4)
		mov    $0x000001,%edi
		mov    %si,_0db282_data(,%eax,4)
		mov    %di,_0db284_data(,%eax,4)
		mov    $0x000002,%dh
		mov    %di,_0db286_data(,%eax,4)
		mov    %dh,_0db292_data(,%eax,4)
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059ee8_case:
		xor    %eax,%eax
		mov    _0db276_data,%al
		cmp    $0x000003,%eax
		jne    _059ef8_jump
		mov    $0x000004,%dl
		jmp    _059efa_jump

	_059ef8_jump:
		xor    %dl,%dl

	_059efa_jump:
		xor    %ecx,%ecx
		mov    %bl,%cl
		lea    0x000000(,%ecx,4),%eax
		lea    (%ecx,%eax,1),%esi
		shl    $0x000002,%esi
		cmp    $0x000001,%ecx
		jne    _059f1b_jump
		xor    %eax,%eax
		mov    %dl,%al
		mov    $0x000006,%edx
		jmp    _059f29_jump

	_059f1b_jump:
		mov    $0x000004,%al
		sub    %dl,%al
		mov    $0x000006,%edx
		and    $0x0000ff,%eax

	_059f29_jump:
		call   _059d7c_func
		mov    %ax,_0db280_data(%esi)
		xor    %eax,%eax
		mov    $0x000009,%edx
		mov    %bl,%al
		sub    %eax,%edx
		xor    %ecx,%ecx
		movswl %dx,%eax
		mov    $0x000001,%edx
		mov    %bl,%cl
		call   _059de8_func
		mov    %eax,%esi
		mov    %ecx,%edx
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		add    $0x000008,%esi
		shl    $0x000002,%eax
		xor    %bl,%dl
		mov    %si,_0db282_data(%eax)
		mov    %dl,_0db292_data(%eax)
		test   %ecx,%ecx
		movw   $0x000032,_0db284_data(%eax)
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		movw   $0x000046,_0db286_data(,%eax,4)
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059fa2_jump:
		lea    0x000000(,%eax,4),%ebp
		add    %eax,%ebp
		shl    $0x000002,%ebp
		mov    _0db28c_data(%ebp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %edx,%eax
		mov    _0c1b34_data,%esi
		shl    $0x000002,%eax
		mov    %esp,%edi
		add    %eax,%esi
		xor    %eax,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    0x000068(%esp),%al
		mov    0x000028(%esp),%ecx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00002c(%esp),%esi
		mov    0x000069(%esp),%al
		add    %eax,%esi
		xor    %ah,%ah
		mov    %ah,_0db291_data(%ebp)
		mov    _0db276_data,%al
		cmp    $0x000005,%al
		ja     _059e93_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_059e58_switch(,%eax,4)



_05a00c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %al,%cl
		cmp    _0db277_data,%al
		jae    _05a2c7_jump
		movzbl %al,%ebp
		cmp    $0x000005,%ebp
		jge    _05a2c7_jump
		lea    0x000000(,%ebp,4),%edi
		add    %ebp,%edi
		shl    $0x000002,%edi
		mov    _0db28c_data(%edi),%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0c1b34_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		jne    _05a2c7_jump
		movb   $0x000000,0x00007e(%esi)
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f7d4_func
		xor    %eax,%eax
		xor    %dh,%dh
		mov    _0db276_data,%al
		mov    %dh,_0db291_data(%edi)
		test   %eax,%eax
		je     _05a0a1_jump
		cmp    $0x000003,%eax
		je     _05a0a1_jump
		cmp    $0x000004,%eax
		jne    _05a129_jump

	_05a0a1_jump:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		mov    0x00000c(%esi),%eax
		mov    0x000008(%eax),%eax
		mov    0x000052(%eax),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    %cl,%al
		lea    0x000000(,%eax,4),%ebp
		add    %eax,%ebp
		shl    $0x000002,%ebp
		movb   $0x000004,_0db292_data(%ebp)
		xor    %edx,%edx
		mov    _0db277_data,%dl
		call   _059d7c_func
		mov    %ax,_0db280_data(%ebp)
		mov    _0c51cc_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0c1b34_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax,%edi,4),%dl
		mov    0x000038(%eax,%edi,4),%cx
		xor    %eax,%eax
		add    %ecx,%edx
		mov    0x000069(%esi),%al
		mov    $0x000001,%edi
		sub    %eax,%edx
		mov    %di,_0db284_data(%ebp)
		mov    %dx,_0db282_data(%ebp)
		jmp    _05a229_jump

	_05a129_jump:
		mov    $0x00000b,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		mov    0x00000c(%esi),%eax
		mov    0x000008(%eax),%eax
		mov    0x00005a(%eax),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    _0db276_data,%al
		cmp    $0x000005,%eax
		jne    _05a192_jump
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    _0db277_data,%dl
		call   _059d7c_func
		xor    %edx,%edx
		mov    %ax,_0db280_data(%edi)
		xor    %eax,%eax
		mov    $0x000001,%ch
		call   _059de8_func
		mov    %ax,_0db282_data(%edi)
		mov    %ch,_0db292_data(%edi)
		mov    _0db27c_data,%ax
		mov    %ax,_0db284_data(%edi)
		jmp    _05a229_jump

	_05a192_jump:
		xor    %edx,%edx
		mov    _0db27e_data,%dl
		mov    _0db277_data,%al
		mov    _0968c4_data(%edx),%bl
		inc    %al
		cmp    %bl,%cl
		jb     _05a1ba_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %cl,%al
		inc    %al
		and    $0x0000ff,%eax
		jmp    _05a1c0_jump

	_05a1ba_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebp,%eax

	_05a1c0_jump:
		call   _059d7c_func
		mov    %ax,_0db280_data(%edi)
		xor    %ebx,%ebx
		mov    %cl,%bl
		mov    %ebx,%eax
		lea    0x000000(,%ebx,4),%edi
		xor    %ebx,%eax
		add    %ebx,%edi
		mov    %cl,%al
		shl    $0x000002,%edi
		shl    $0x000002,%eax
		mov    _0db280_data(%edi),%dx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,_0db280_data(%edi)
		xor    %edx,%edx
		mov    $0x000003,%cl
		call   _059de8_func
		mov    %ax,_0db282_data(%edi)
		mov    %cl,_0db292_data(%edi)
		test   %ebx,%ebx
		jne    _05a220_jump
		mov    _0db27c_data,%ax
		mov    %ax,_0db284_data(%edi)
		jmp    _05a229_jump

	_05a220_jump:
		movw   $0x000001,_0db284_data(%edi)

	_05a229_jump:
		lea    0x000008(%esp),%eax
		push   %eax
		lea    0x000004(%esp),%eax
		push   %eax
		mov    _0c51cc_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		lea    0x00000c(%esp),%ecx
		shl    $0x000005,%edi
		lea    0x000014(%esp),%ebx
		add    %eax,%edi
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edi
		mov    $0x000006,%edx
		add    %edi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01da90_func
		mov    _0c51cc_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0c1b34_data,%eax
		mov    0x000081(%eax,%edi,4),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _05a295_jump
		mov    (%esp),%eax
		add    %ax,0x00000c(%esp)

	_05a295_jump:
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000002(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)

	_05a2c7_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a2d4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		cwtl   
		test   %eax,%eax
		jne    _05a2f4_jump
		movswl %dx,%eax
		test   %eax,%eax
		jl     _05a2eb_jump
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05a2eb_jump:
		mov    $0x000008,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05a2f4_jump:
		movswl %dx,%ebx
		test   %ebx,%ebx
		jne    _05a317_jump
		test   %eax,%eax
		je     _05a370_jump
		jle    _05a30e_jump
		mov    $0x000004,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05a30e_jump:
		mov    $0x00000c,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05a317_jump:
		test   %eax,%eax
		jge    _05a31d_jump
		neg    %eax

	_05a31d_jump:
		mov    %eax,%esi
		mov    %ebx,%eax
		test   %eax,%eax
		jge    _05a327_jump
		neg    %eax

	_05a327_jump:
		sub    %eax,%esi
		movswl %si,%eax
		test   %eax,%eax
		jne    _05a337_jump
		mov    $0x000006,%eax
		jmp    _05a345_jump

	_05a337_jump:
		jl     _05a340_jump
		mov    $0x000005,%eax
		jmp    _05a345_jump

	_05a340_jump:
		mov    $0x000007,%eax

	_05a345_jump:
		movswl %cx,%ebx
		test   %ebx,%ebx
		jle    _05a35d_jump
		movswl %dx,%ebx
		test   %ebx,%ebx
		jle    _05a370_jump
		mov    $0x000008,%ah
		sub    %al,%ah
		mov    %ah,%al
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05a35d_jump:
		movswl %dx,%ebx
		test   %ebx,%ebx
		jge    _05a36e_jump
		mov    $0x000010,%ah
		sub    %al,%ah
		mov    %ah,%al
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05a36e_jump:
		add    $0x000008,%al

	_05a370_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_05a374_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000040(%eax),%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05a2d4_func
		mov    %al,0x00006b(%ebx)
		pop    %edx
		pop    %ebx
		ret    

_05a390_switch:
		.long   _05a499_case
		.long   _05a4d6_case
		.long   _05a4d6_case
		.long   _05a4d6_case
		.long   _05a50b_case
		.long   _05a548_case
		.long   _05a548_case
		.long   _05a548_case
		.long   _05a46b_case
		.long   _05a56c_case
		.long   _05a56c_case
		.long   _05a56c_case
		.long   _05a587_case
		.long   _05a5c0_case
		.long   _05a5c0_case
		.long   _05a5c0_case




_05a3d0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,%ebp
		mov    %ecx,%edi
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01da90_func
		mov    0x000024(%esp),%eax
		movw   $0x000006,(%edi)
		movw   $0x000006,(%eax)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _05a42d_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%eax
		je     _05a627_jump
		cmp    $0x00000b,%eax
		je     _05a627_jump

	_05a42d_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _05a63b_jump
		xor    %ebx,%ebx
		mov    0x00006c(%esi),%bl
		cmp    $0x00000e,%ebx
		jne    _05a63b_jump
		mov    0x00000c(%esi),%ecx
		mov    (%ecx,%eax,4),%eax
		mov    0x000005(%eax,%ebx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		jne    _05a63b_jump
		mov    0x000024(%esp),%ebx
		mov    0x000010(%esp),%eax
		mov    %ax,(%ebx)

	_05a46b_case:
		mov    0x000006(%esp),%ebx
		movswl (%edi),%eax
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    0x000002(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    (%esp),%ebx
		mov    %ax,(%ebx)
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05a499_case:
		mov    0x000006(%esp),%ebx
		movswl (%edi),%eax
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    0x000002(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    (%esp),%ebx
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000010(%esp),%edi
		mov    (%eax),%ax
		add    %edi,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05a4d6_case:
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    (%edi),%ax
		add    %ecx,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		mov    0x000024(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000010(%esp),%esi
		mov    (%eax),%ax
		add    %esi,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05a50b_case:
		mov    0x000008(%esp),%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%ebx
		add    %eax,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		mov    0x00000e(%esp),%ebx
		mov    0x000024(%esp),%eax
		sar    $0x000010,%ebx
		movswl (%eax),%eax
		sub    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    %ax,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05a548_case:
		mov    0x000004(%esp),%ebx
		add    0x000008(%esp),%ebx
		mov    (%edi),%ax
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05a56c_case:
		mov    (%esp),%ebx
		mov    0x000004(%esp),%eax
		mov    %ax,(%ebx)
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05a587_case:
		mov    0x000008(%esp),%eax
		mov    %ax,(%edi)
		mov    (%esp),%ebx
		mov    0x000004(%esp),%eax
		mov    %ax,(%ebx)
		mov    0x00000e(%esp),%ebx
		mov    0x000024(%esp),%eax
		sar    $0x000010,%ebx
		movswl (%eax),%eax
		sub    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    %ax,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05a5c0_case:
		mov    (%esp),%ebx
		mov    0x000004(%esp),%eax
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000010(%esp),%esi
		mov    (%eax),%ax
		add    %esi,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05a5ea_jump:
		mov    0x000006(%esp),%eax
		movswl (%edi),%ebx
		sar    $0x000010,%eax
		sub    %ebx,%eax
		mov    0x000002(%esp),%ebx
		sar    %eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    (%esp),%ebx
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000010(%esp),%ecx
		mov    (%eax),%ax
		add    %ecx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05a627_jump:
		mov    0x00006b(%esi),%al
		cmp    $0x00000f,%al
		ja     _05a5ea_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05a390_switch(,%eax,4)

	_05a63b_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _05a64f_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000d,%eax
		je     _05a676_jump

	_05a64f_jump:
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%bl
		cmp    $0x000002,%ebx
		jne    _05a6aa_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000e,%eax
		jne    _05a6aa_jump
		mov    0x00000c(%esi),%ecx
		mov    (%ecx,%ebx,4),%ebx
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		je     _05a6aa_jump

	_05a676_jump:
		mov    0x000028(%esi),%ebx
		movswl (%edi),%eax
		add    $0x000080,%ebx
		sar    %eax
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		mov    0x000024(%esp),%eax
		mov    0x00002c(%esi),%ebx
		movswl (%eax),%eax
		add    $0x000060,%ebx
		sar    %eax
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05a6aa_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _05a6fb_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000c,%eax
		jne    _05a6fb_jump
		mov    0x000006(%esp),%ebx
		movswl (%edi),%eax
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    0x000002(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    (%esp),%ebx
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000010(%esp),%edx
		mov    (%eax),%ax
		add    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05a6fb_jump:
		mov    (%edi),%ax
		mov    (%esp),%ebx
		neg    %eax
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		mov    (%eax),%ax
		neg    %eax
		mov    %ax,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_05a71c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0db27c_data,%si
		mov    _0db27a_data,%di
		xor    %edx,%edx
		mov    _0db276_data,%dl
		cmp    $0x000001,%edx
		je     _05a741_jump
		cmp    $0x000002,%edx
		jne    _05a760_jump

	_05a741_jump:
		mov    _0db27e_data,%ah
		xor    %edx,%edx
		inc    %ah
		mov    %ah,%dl
		mov    %ah,_0db27e_data
		cmp    $0x000005,%edx
		jl     _05a760_jump
		xor    %ah,%dl
		mov    %dl,_0db27e_data

	_05a760_jump:
		mov    _0db274_data,%al
		mov    %esi,%edx
		xor    %ecx,%ecx
		mov    %edi,%ebx
		mov    _0db279_data,%cl
		sub    $0x00000a,%edx
		sub    $0x00000a,%ebx
		inc    %al
		test   %ecx,%ecx
		jne    _05a7b6_jump
		mov    _0db275_data,%ah
		inc    %ah
		mov    %ah,%cl
		mov    %ah,_0db275_data
		cmp    $0x000002,%ecx
		jne    _05a7d7_jump
		xor    %ah,%cl
		mov    %cl,_0db275_data
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    %al,_0db274_data
		cmp    $0x000004,%ecx
		jne    _05a7d7_jump
		mov    %ebx,%edi
		xor    %ch,%ch
		mov    %edx,%esi
		mov    %ch,_0db274_data
		jmp    _05a7d7_jump

	_05a7b6_jump:
		xor    %cl,%cl
		mov    %al,_0db274_data
		mov    %cl,_0db275_data
		and    $0x0000ff,%eax
		cmp    $0x000004,%eax
		jne    _05a7d7_jump
		mov    %cl,_0db274_data
		mov    %ebx,%edi
		mov    %edx,%esi

	_05a7d7_jump:
		movswl %di,%eax
		cmp    $0x000064,%eax
		jge    _05a7e4_jump
		mov    $0x000064,%edi

	_05a7e4_jump:
		movswl %si,%edx
		cmp    $0x000032,%edx
		jge    _05a7f1_jump
		mov    $0x000032,%esi

	_05a7f1_jump:
		xor    %edx,%edx
		mov    _0db274_data,%dl
		lea    0x000000(,%edx,2),%ebx
		xor    %edx,%edx
		xor    %al,%al
		mov    _0db275_data,%dl
		mov    %al,_0db278_data
		mov    _0968bc_data(%edx,%ebx,1),%al
		mov    %al,_0db276_data
		xor    %eax,%eax
		mov    _0db276_data,%al
		mov    _0968b4_data(%eax),%al
		mov    %al,_0db277_data
		xor    %ah,%ah
		mov    %ah,_0db279_data
		xor    %al,%al
		jmp    _05a87b_jump

	_05a839_jump:
		imul   $0x000014,%edx,%edx
		mov    _0db28c_data(%edx),%ecx
		sar    $0x000010,%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0c1b34_data,%ebx
		movl   $0x000000,0x000024(%ecx,%ebx,1)
		mov    _0db28c_data(%edx),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    0x000081(%edx,%ebx,1),%cl
		and    $0x0000fb,%cl
		inc    %al
		mov    %cl,0x000081(%edx,%ebx,1)

	_05a87b_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000005,%edx
		jl     _05a839_jump
		mov    %di,_0db27a_data
		mov    %si,_0db27c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a898_func:
		push   %ecx
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		pop    %ecx
		ret    



_05a8a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _059d68_func
		and    $0x0000ff,%eax
		cmp    $0x0000ff,%eax
		je     _05a9c6_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0c24ac_data,%dx
		mov    _0db280_data(%eax),%cx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x000028(%ebx),%si
		mov    0x000068(%ebx),%dl
		add    %esi,%edx
		mov    _0db282_data(%eax),%di
		sub    %edx,%ecx
		mov    _0c24ae_data,%si
		mov    %ecx,%edx
		add    %edi,%esi
		xor    %ecx,%ecx
		mov    0x00002c(%ebx),%di
		mov    0x000069(%ebx),%cl
		add    %edi,%ecx
		sub    %ecx,%esi
		mov    _0db282_data(%eax),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		je     _05a9a4_jump
		xor    %ecx,%ecx
		mov    %cx,_0db284_data(%eax)
		movswl %dx,%eax
		test   %eax,%eax
		jne    _05a93c_jump
		call   _05a898_func
		mov    %ax,0x000040(%ebx)
		mov    $0xffffffff,%eax
		call   _05a898_func
		mov    %ax,0x000042(%ebx)
		jmp    _05a993_jump

	_05a93c_jump:
		jl     _05a945_jump
		mov    $0x000002,%eax
		jmp    _05a94a_jump

	_05a945_jump:
		mov    $0xfffffffe,%eax

	_05a94a_jump:
		mov    %eax,%ecx
		movswl %si,%eax
		mov    %eax,%esi
		movswl %cx,%ecx
		shl    $0x000004,%esi
		imul   %ecx,%esi
		movswl %dx,%eax
		lea    0x000000(,%eax,8),%edx
		imul   %eax,%edx
		imul   %ecx,%eax
		shl    $0x000003,%esi
		add    %esi,%edx
		neg    %edx
		lea    0x000000(,%eax,8),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _05a898_func
		sub    $0x00000a,%eax
		mov    %dx,0x000042(%ebx)
		mov    %ax,0x000040(%ebx)

	_05a993_jump:
		mov    %ebx,%eax
		call   _05a374_func
		movb   $0x000003,0x00007e(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05a9a4_jump:
		addw   $0x000004,0x000042(%ebx)
		mov    0x00003e(%ebx),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		test   %eax,%eax
		jge    _05a9bf_jump
		movw   $0x000000,0x000040(%ebx)

	_05a9bf_jump:
		mov    %ebx,%eax
		call   _05a374_func

	_05a9c6_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a9cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		call   _059d68_func
		mov    %al,%dl
		mov    %al,%bl
		cmp    $0x0000ff,%edx
		je     _05aba2_jump
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		mov    _0c24ac_data,%ax
		mov    _0db280_data(%edx),%cx
		movzbw 0x000068(%esi),%di
		add    %ecx,%eax
		add    0x000028(%esi),%di
		sub    %edi,%eax
		mov    _0db282_data(%edx),%cx
		mov    %eax,%edi
		mov    _0c24ae_data,%ax
		add    %ecx,%eax
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    (%esp),%ecx
		sub    %eax,%ecx
		movswl %di,%eax
		mov    %cx,0x000004(%esp)
		test   %eax,%eax
		jge    _05aa45_jump
		neg    %eax

	_05aa45_jump:
		cmp    $0x000004,%eax
		jge    _05aa60_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05aa57_jump
		neg    %eax

	_05aa57_jump:
		cmp    $0x000004,%eax
		jl     _05aaf1_jump

	_05aa60_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %dh,%dh
		mov    %dh,_0db291_data(,%eax,4)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05aa83_jump
		neg    %eax

	_05aa83_jump:
		mov    %eax,%ebx
		movswl %di,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _05aa90_jump
		neg    %eax

	_05aa90_jump:
		cmp    %ebx,%eax
		jge    _05aa96_jump
		mov    %ebx,%eax

	_05aa96_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000004,%cl
		call   _05a898_func
		mov    %ax,0x000040(%esi)
		mov    0x000004(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _05a898_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _05a374_func
		movb   $0x000003,0x00007e(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05aaf1_jump:
		movb   $0x000001,_0db291_data(%edx)
		xor    %eax,%eax
		mov    _0db276_data,%al
		cmp    $0x000001,%eax
		je     _05ab27_jump
		cmp    $0x000002,%eax
		je     _05ab27_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _05ab1d_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000d,%eax
		je     _05ab36_jump

	_05ab1d_jump:
		movb   $0x000002,0x00006d(%esi)
		movb   $0x00000d,0x00006c(%esi)
		jmp    _05ab36_jump

	_05ab27_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		call   _05a2d4_func
		mov    %al,0x00006b(%esi)

	_05ab36_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		movw   $0x000000,0x000040(%esi)
		add    %edx,%eax
		movw   $0x000000,0x000042(%esi)
		mov    _0db27e_data(,%eax,4),%ebx
		mov    _0c24aa_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    _0c24ac_data,%edx
		mov    _0db280_data(,%eax,4),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		call   _059d14_func
		test   %al,%al
		je     _05aba2_jump
		movb   $0x000003,_0db278_data
		call   _059cec_func

	_05aba2_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05abac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		call   _059d68_func
		mov    %al,%dl
		and    $0x0000ff,%eax
		cmp    $0x0000ff,%eax
		je     _05adaf_jump
		test   %eax,%eax
		je     _05abf5_jump
		je     _05adaf_jump
		lea    -0x000001(%eax),%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		mov    _0db284_data(,%eax,4),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _05adaf_jump

	_05abf5_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		mov    _0db284_data(%eax),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jne    _05ada8_jump
		xor    %ebx,%ebx
		mov    %bx,(%esp)
		xor    %ebx,%ebx
		mov    _0db292_data(%eax),%bl
		xor    %edi,%edi
		cmp    $0x000002,%ebx
		je     _05ac6b_jump
		mov    _0c24ac_data,%di
		xor    %ebx,%ebx
		mov    _0db280_data(%eax),%cx
		mov    0x000068(%esi),%bl
		add    %ecx,%edi
		add    0x000028(%esi),%bx
		sub    %ebx,%edi
		mov    0x00002c(%esi),%cx
		mov    %di,(%esp)
		mov    _0c24ae_data,%di
		mov    _0db282_data(%eax),%bx
		mov    %edi,%eax
		movzbw 0x000069(%esi),%di
		add    %ebx,%eax
		add    %ecx,%edi
		sub    %edi,%eax
		mov    %eax,%edi

	_05ac6b_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05ac78_jump
		neg    %eax

	_05ac78_jump:
		cmp    $0x000002,%eax
		jge    _05ac8f_jump
		movswl %di,%eax
		test   %eax,%eax
		jge    _05ac86_jump
		neg    %eax

	_05ac86_jump:
		cmp    $0x000002,%eax
		jl     _05ad12_jump

	_05ac8f_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %dh,%dh
		mov    %dh,_0db291_data(,%eax,4)
		movswl %di,%eax
		test   %eax,%eax
		jge    _05acb0_jump
		neg    %eax

	_05acb0_jump:
		mov    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _05acc1_jump
		neg    %eax

	_05acc1_jump:
		cmp    %ebx,%eax
		jge    _05acc7_jump
		mov    %ebx,%eax

	_05acc7_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000004,%cl
		call   _05a898_func
		mov    %ax,0x000040(%esi)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _05a898_func
		mov    %ax,0x000042(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ad12_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		movb   $0x000001,_0db291_data(%edx)
		xor    %eax,%eax
		call   _05a898_func
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		call   _05a898_func
		mov    %ax,0x000042(%esi)
		xor    %eax,%eax
		mov    _0db292_data(%edx),%al
		cmp    $0x000002,%eax
		je     _05ad8a_jump
		mov    _0db27e_data(%edx),%eax
		mov    _0c24aa_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    _0db280_data(%edx),%eax
		mov    _0c24ac_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)

	_05ad8a_jump:
		call   _059d14_func
		test   %al,%al
		je     _05adaf_jump
		movb   $0x000003,_0db278_data
		call   _059cec_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ada8_jump:
		decw   _0db286_data(%eax)

	_05adaf_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05af68_switch:
		.long   _05b349_case
		.long   _05b1bf_case
		.long   _05b391_case
		.long   _05b317_case




_05af78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		call   _059d68_func
		mov    %al,0x000014(%esp)
		and    $0x0000ff,%eax
		cmp    $0x0000ff,%eax
		je     _05b5a0_jump
		test   %eax,%eax
		je     _05afc4_jump
		je     _05b5a0_jump
		lea    -0x000001(%eax),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		mov    _0db282_data(,%eax,4),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _05b5a0_jump

	_05afc4_jump:
		movzbl 0x000014(%esp),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		shl    $0x000002,%eax
		mov    _0db282_data(%eax),%edi
		sar    $0x000010,%edi
		test   %edi,%edi
		jne    _05b111_jump
		xor    %edx,%edx
		mov    _0db291_data(%eax),%dl
		test   %edx,%edx
		jne    _05b5a0_jump
		mov    _0db28c_data(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000069(%eax),%dl
		add    %ebx,%ecx
		mov    0x00002c(%eax),%bx
		movswl %cx,%eax
		add    %edx,%ebx
		cmp    $0xffffffec,%eax
		jl     _05b061_jump
		mov    _0c2524_data,%edx
		sar    $0x000010,%edx
		add    $0x000154,%edx
		cmp    %edx,%eax
		jg     _05b061_jump
		movswl %bx,%eax
		cmp    $0xffffffec,%eax
		jl     _05b061_jump
		mov    _0c2522_data,%edx
		sar    $0x000010,%edx
		add    $0x0000dc,%edx
		cmp    %edx,%eax
		jle    _05b5a0_jump

	_05b061_jump:
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		mov    _0db28c_data(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    $0x000001,%ch
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		mov    %ch,_0db291_data(%edx)
		movl   $0x000000,0x000024(%ebx,%eax,4)
		mov    _0db28c_data(%edx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		andb   $0x0000fb,0x000081(%ebx,%eax,4)
		call   _059d14_func
		test   %al,%al
		je     _05b5a0_jump
		movb   $0x000004,_0db278_data
		mov    _0c51cc_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		mov    0x000076(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		jne    _05b5a0_jump
		mov    _0c331c_data,%bh
		mov    %ch,_0c25a0_data
		or     $0x000010,%bh
		mov    %ch,_0c25a1_data
		mov    %bh,_0c331c_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b111_jump:
		cmp    $0x000001,%edi
		jne    _05b56e_jump
		mov    _0db286_data(%eax),%edi
		sar    $0x000010,%edi
		cmp    $0x00000f,%edi
		je     _05b3c6_jump
		test   %edi,%edi
		jne    _05b516_jump
		mov    _0db28a_data(%eax),%dx
		mov    %dx,0x000040(%esi)
		mov    _0db28c_data(%eax),%dx
		mov    %dx,0x000042(%esi)
		mov    _0db292_data(%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x000002,%eax
		jne    _05b186_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%bl
		and    $0x0000f0,%bl
		mov    %bl,%bh
		or     $0x000002,%bh
		mov    %bh,0x000005(%eax,%edx,8)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000008,0x000072(%esi)

	_05b186_jump:
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x00000f,%esi
		xor    %edi,%edi
		mov    %si,_0db288_data(,%eax,4)
		xor    %cl,%cl
		mov    %di,_0db284_data(,%eax,4)
		mov    %cl,_0db291_data(,%eax,4)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b1bf_case:
		mov    0x000002(%esp),%eax
		mov    $0x00000b,%ebx
		sar    $0x000010,%eax
		mov    %bx,0x00000c(%esp)
		test   %eax,%eax
		jge    _05b1d6_jump
		neg    %eax

	_05b1d6_jump:
		mov    %eax,%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _05b1e7_jump
		neg    %eax

	_05b1e7_jump:
		cmp    %ebx,%eax
		jge    _05b1ed_jump
		mov    %ebx,%eax

	_05b1ed_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		cwtl   
		mov    $0x000004,%cl
		call   _05a898_func
		mov    %eax,%edi
		mov    %eax,%ebx
		mov    0x000004(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		cwtl   
		call   _05a898_func
		mov    %eax,%ecx
		movswl %ax,%edx
		movswl %di,%eax
		call   _05a2d4_func
		mov    %al,%dl

	_05b241_jump:
		movzbl 0x000014(%esp),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		shl    $0x000002,%eax
		movzbl _0db292_data(%eax),%edi
		cmp    $0x000002,%edi
		jne    _05b467_jump
		mov    0x00000c(%esp),%dh
		movzbl 0x00006d(%esi),%edi
		mov    0x00000c(%esi),%ebp
		shl    $0x000002,%edi
		mov    %dh,0x00006c(%esi)
		add    %edi,%ebp
		movzbl 0x00006c(%esi),%edi
		mov    %dl,0x00006b(%esi)
		shl    $0x000003,%edi
		mov    %edi,(%esp)
		mov    0x000000(%ebp),%edi
		add    (%esp),%edi
		andb   $0x0000f0,0x000005(%edi)
		mov    %dl,_0db290_data(%eax)
		mov    %cx,_0db28c_data(%eax)
		mov    _0db288_data(%eax),%cx
		mov    %bx,_0db28a_data(%eax)
		dec    %ecx
		mov    _0db28a_data(%eax),%dx
		mov    %cx,_0db288_data(%eax)
		mov    %dx,0x000040(%esi)
		mov    _0db28c_data(%eax),%dx
		mov    $0x00000f,%edi
		mov    %dx,0x000042(%esi)
		xor    %bl,%bl
		mov    %di,_0db288_data(%eax)
		xor    %edx,%edx
		mov    %bl,_0db291_data(%eax)
		mov    %dx,_0db284_data(%eax)
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%bh
		and    $0x0000f0,%bh
		mov    %bh,%cl
		or     $0x000002,%cl
		mov    %cl,0x000005(%edx,%eax,8)
		movb   $0x000008,0x000072(%esi)
		mov    %bl,0x000071(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b317_case:
		movw   $0x00000b,0x00000c(%esp)
		xor    %eax,%eax
		call   _05a898_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000003,%eax
		call   _05a898_func
		mov    %eax,%ecx
		movswl %ax,%edi
		movswl %dx,%eax
		mov    %edi,%edx
		call   _05a2d4_func
		mov    %al,%dl
		jmp    _05b241_jump

	_05b349_case:
		mov    0x000006(%esp),%eax
		mov    $0x00000b,%ecx
		sar    $0x000010,%eax
		mov    %cx,0x00000c(%esp)
		test   %eax,%eax
		jl     _05b365_jump
		mov    $0x000003,%eax
		jmp    _05b36a_jump

	_05b365_jump:
		mov    $0xfffffffd,%eax

	_05b36a_jump:
		cwtl   
		call   _05a898_func
		mov    %eax,%edx
		mov    %eax,%ebx
		xor    %eax,%eax
		call   _05a898_func
		mov    %eax,%ecx
		movswl %ax,%edi
		movswl %dx,%eax
		mov    %edi,%edx
		call   _05a2d4_func
		mov    %al,%dl
		jmp    _05b241_jump

	_05b391_case:
		mov    $0xffffffff,%eax
		mov    $0x00000e,%edx
		call   _05a898_func
		mov    %dx,0x00000c(%esp)
		mov    %eax,%ebx
		mov    $0x000005,%eax
		mov    $0x000001,%edx
		call   _05a898_func
		mov    %eax,%ecx
		xor    %eax,%eax
		call   _05a2d4_func
		mov    %al,%dl
		jmp    _05b241_jump

	_05b3c6_jump:
		movzbw _0c1bb4_data,%di
		mov    %edi,0x000010(%esp)
		mov    _0c1b74_data,%di
		add    0x000010(%esp),%edi
		mov    %di,_0db280_data(%eax)
		movzbw _0c1bb5_data,%di
		mov    %edi,0x000010(%esp)
		mov    _0c1b78_data,%di
		add    0x000010(%esp),%edi
		mov    %di,_0db282_data(%eax)
		movzbw 0x000068(%esi),%di
		mov    %edi,0x000010(%esp)
		mov    0x000028(%esi),%di
		add    0x000010(%esp),%edi
		mov    %edi,0x000010(%esp)
		mov    _0db280_data(%eax),%di
		sub    0x000010(%esp),%edi
		mov    %di,0x000008(%esp)
		movzbw 0x000069(%esi),%di
		mov    %edi,0x000010(%esp)
		mov    0x00002c(%esi),%di
		add    0x000010(%esp),%edi
		mov    %edi,0x000010(%esp)
		mov    _0db282_data(%eax),%di
		sub    0x000010(%esp),%edi
		mov    _0db292_data(%eax),%al
		mov    %di,0x000004(%esp)
		cmp    $0x000003,%al
		ja     _05b241_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05af68_switch(,%eax,4)

	_05b467_jump:
		cmp    $0x000003,%edi
		jne    _05b4d6_jump
		mov    0x00000c(%esp),%dh
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		mov    %dl,_0db290_data(%eax)
		mov    %bx,_0db28a_data(%eax)
		mov    _0db288_data(%eax),%di
		mov    %cx,_0db28c_data(%eax)
		dec    %edi
		mov    _0db28a_data(%eax),%dx
		mov    %di,_0db288_data(%eax)
		mov    %dx,0x000040(%esi)
		mov    _0db28c_data(%eax),%dx
		xor    %ebx,%ebx
		mov    %dx,0x000042(%esi)
		mov    $0x00000f,%edx
		mov    %bx,_0db284_data(%eax)
		xor    %bl,%bl
		mov    %dx,_0db288_data(%eax)
		mov    %bl,_0db291_data(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b4d6_jump:
		cmp    0x00006b(%esi),%dl
		jne    _05b5a0_jump
		mov    0x00000c(%esp),%dh
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		mov    %dl,_0db290_data(%eax)
		mov    %bx,_0db28a_data(%eax)
		mov    _0db288_data(%eax),%si
		mov    %cx,_0db28c_data(%eax)
		dec    %esi
		mov    %si,_0db288_data(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b516_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    _0db290_data(%eax),%dl
		mov    %dl,0x00006b(%esi)
		testb  $0x000001,_0db288_data(%eax)
		je     _05b53a_jump
		addl   $0x000002,0x00002c(%esi)
		jmp    _05b53e_jump

	_05b53a_jump:
		subl   $0x000002,0x00002c(%esi)

	_05b53e_jump:
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0db286_data(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _05b5a0_jump
		decw   _0db288_data(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b56e_jump:
		jle    _05b577_jump
		decw   _0db284_data(%eax)

	_05b577_jump:
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0db282_data(%eax),%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jne    _05b5a0_jump
		movw   $0x00000f,_0db288_data(%eax)

	_05b5a0_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05b5ac_switch:
		.long   _05b668_case
		.long   _05b683_case
		.long   _05b73d_case
		.long   _05b710_case
		.long   _05b6af_case




_05b5c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x00006d(%eax),%al
		test   %al,%al
		jbe    _05b658_jump
		cmp    $0x000002,%al
		je     _05b820_jump

	_05b5d9_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b5de_jump:
		mov    0x000081(%esi),%cl
		or     $0x000020,%cl
		mov    0x000040(%esi),%ax
		mov    %cl,0x000081(%esi)
		mov    $0x000001,%cl
		test   %ax,%ax
		js     _05b5fd_jump
		sar    %cl,%ax
		jmp    _05b606_jump

	_05b5fd_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05b606_jump:
		mov    %ax,0x000040(%esi)
		mov    %esi,%eax
		call   _0248b8_func
		mov    _0c25f2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _05b62a_jump
		xor    %eax,%eax
		mov    _0db278_data,%al
		cmp    $0x000002,%eax
		jne    _05b5d9_jump

	_05b62a_jump:
		xor    %eax,%eax
		mov    _0db278_data,%al
		cmp    $0x000002,%eax
		je     _05b642_jump
		movb   $0x000002,_0db278_data
		call   _059cec_func

	_05b642_jump:
		mov    $0x00000c,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b658_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000009,%al
		je     _05b5de_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b668_case:
		xor    %eax,%eax
		mov    _0db278_data,%al
		test   %eax,%eax
		jne    _05b5d9_jump
		mov    %esi,%eax
		call   _05a8a0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b683_case:
		xor    %eax,%eax
		mov    _0db278_data,%al
		cmp    $0x000003,%eax
		jne    _05b69b_jump
		mov    %esi,%eax
		call   _05af78_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b69b_jump:
		test   %eax,%eax
		jne    _05b5d9_jump
		mov    %esi,%eax
		call   _05a9cc_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b6af_case:
		xor    %eax,%eax
		mov    _0db278_data,%al
		cmp    $0x000003,%eax
		jne    _05b6c4_jump
		mov    %esi,%eax
		call   _05af78_func
		jmp    _05b6cf_jump

	_05b6c4_jump:
		test   %eax,%eax
		jne    _05b6cf_jump
		mov    %esi,%eax
		call   _05a9cc_func

	_05b6cf_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _05b5d9_jump
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		call   _05a2d4_func
		cmp    0x00006b(%esi),%al
		jne    _05b5d9_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		andb   $0x0000f0,0x000005(%edx,%eax,8)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b710_case:
		xor    %eax,%eax
		mov    _0db278_data,%al
		cmp    $0x000002,%eax
		jne    _05b728_jump
		mov    %esi,%eax
		call   _05abac_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b728_jump:
		cmp    $0x000003,%eax
		jne    _05b5d9_jump
		mov    %esi,%eax
		call   _05af78_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b73d_case:
		xor    %eax,%eax
		call   _05a898_func
		mov    %ax,0x000040(%esi)
		mov    $0xffffffff,%eax
		call   _05a898_func
		mov    %ax,0x000042(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05b77a_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		test   %eax,%eax
		jmp    _05b79d_jump

	_05b77a_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx

	_05b79d_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05b5d9_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05b5d9_jump
		call   _05a898_func
		mov    %ax,0x000042(%esi)
		xor    %eax,%eax
		mov    _0db278_data,%al
		cmp    $0x000002,%eax
		jne    _05b80d_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		mov    $0x000002,%edx
		call   _059e70_func
		mov    %esi,%eax
		call   _01d6f8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b80d_jump:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b820_jump:
		andb   $0x0000df,0x000081(%esi)
		mov    0x00006c(%esi),%al
		sub    $0x00000a,%al
		cmp    $0x000004,%al
		ja     _05b5d9_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05b5ac_switch(,%eax,4)



_05b844_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0c1b74_data,%cx
		mov    _0c1bb4_data,%bl
		add    %ecx,%ebx
		sub    %edx,%ebx
		movswl %bx,%edx
		test   %edx,%edx
		je     _05b88d_jump
		add    $0x000081,%eax
		test   %edx,%edx
		setg   %dl
		and    $0x0000ff,%edx
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_05b88d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05b894_switch:
		.long   _05b991_case
		.long   _05b94e_case
		.long   _05b900_case
		.long   _05b900_case
		.long   _05ba43_case
		.long   _05b906_case
		.long   _05bb55_case

_05b8b0_switch:
		.long   _05bd68_case
		.long   _05bd81_case
		.long   _05bda3_case
		.long   _05be0c_case
		.long   _05be60_case
		.long   _05bd38_case
		.long   _05b900_case
		.long   _05bd6f_case
		.long   _05bc5a_case




_05b8d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ah,_0c25e1_data
		mov    0x00006d(%ecx),%bl
		mov    0x00006c(%ecx),%dl
		test   %bx,%bx
		jbe    _05bc40_jump
		cmp    $0x000002,%bx
		je     _05bef8_jump

	_05b900_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b906_case:
		movw   $0x000001,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _0248b8_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%eax
		add    $0x000100,%eax
		cmp    %eax,%edx
		jle    _05b900_case
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000040(%ecx)
		call   _01d6f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b94e_case:
		mov    %ecx,%eax
		call   _05b844_func
		mov    %ecx,%eax
		call   _0248b8_func
		xor    %eax,%eax
		mov    _0db278_data,%al
		cmp    $0x000004,%eax
		jne    _05b972_jump
		call   _059cec_func
		call   _05a71c_func

	_05b972_jump:
		xor    %eax,%eax
		mov    _0db278_data,%al
		test   %eax,%eax
		jne    _05b900_case
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b991_case:
		mov    %ecx,%eax
		call   _0248b8_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05b9bc_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _05b9e0_jump

	_05b9bc_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%ecx),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		xor    %eax,%eax
		dec    %edx
		mov    0x00006b(%ecx),%al
		cmp    %edx,%eax

	_05b9e0_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05b900_case
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		je     _05ba34_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ba20_jump:
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ba34_jump:
		mov    _0db278_data,%al
		test   %al,%al
		je     _05ba20_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ba43_case:
		mov    %ecx,%eax
		call   _0248b8_func
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000023,%eax
		jne    _05bab5_jump
		movswl %bx,%eax
		shl    $0x000002,%eax
		mov    0x00000c(%ecx),%ebx
		add    %eax,%ebx
		movswl %dx,%eax
		mov    (%ebx),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%bl
		test   %bl,%bl
		jne    _05bab5_jump
		mov    0x000032(%ecx),%edx
		mov    $0x000099,%eax
		sar    $0x000010,%edx
		xor    %bh,%bh
		call   _068654_func
		jmp    _05ba97_jump

	_05ba8d_jump:
		xor    %eax,%eax
		mov    %bl,%al
		call   _05a00c_func
		inc    %ebx

	_05ba97_jump:
		xor    %ecx,%ecx
		movswl %bx,%eax
		mov    _0db277_data,%cl
		cmp    %ecx,%eax
		jge    _05b900_case
		cmp    $0x000005,%eax
		jl     _05ba8d_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bab5_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05bad9_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _05bafc_jump

	_05bad9_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_05bafc_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05b900_case
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05b900_case
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bb55_case:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		movw   $0x000000,0x000040(%ecx)
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		movw   $0x00fffe,0x000042(%ecx)
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000010,0x000007(%ebx,%eax,1)
		je     _05bb8c_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _05bbaf_jump

	_05bb8c_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%ecx),%bl
		lea    0x000000(,%ebx,4),%eax
		mov    0x000004(%ecx),%edx
		sub    %ebx,%eax
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_05bbaf_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05b900_case
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05b900_case
		mov    0x000081(%ecx),%dh
		mov    %eax,0x000024(%ecx)
		and    $0x0000fb,%dh
		xor    %ebx,%ebx
		mov    %dh,0x000081(%ecx)
		mov    $0x00000f,%edx
		jmp    _05bc2b_jump

	_05bc08_jump:
		imul   $0x000014,%ecx,%ecx
		movb   $0x000002,_0db292_data(%ecx)
		mov    %dx,_0db288_data(%ecx)
		movw   $0x000001,_0db284_data(%ecx)
		xor    %ah,%ah
		inc    %ebx
		mov    %ah,_0db291_data(%ecx)

	_05bc2b_jump:
		movswl %bx,%ecx
		cmp    $0x000005,%ecx
		jl     _05bc08_jump
		movb   $0x000002,_0db278_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bc40_jump:
		mov    %edx,%eax
		dec    %eax
		cmp    $0x000006,%ax
		ja     _05b900_case
		and    $0x00ffff,%eax
		jmp    *%cs:_05b894_switch(,%eax,4)

	_05bc5a_case:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movw   $0x000000,0x000040(%ecx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05bc84_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _05bca7_jump

	_05bc84_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_05bca7_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05bcdd_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		je     _05bcf9_jump

	_05bcdd_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		cmp    $0x000001,%eax
		jne    _05b900_case
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _05b900_case

	_05bcf9_jump:
		mov    $0x000001,%bh
		sub    %bh,0x000076(%ecx)
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		mov    %bh,_0db279_data
		test   %eax,%eax
		jne    _05bd21_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bd21_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bd38_case:
		andb   $0x0000f7,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000006,%eax
		jge    _05bd5c_jump
		mov    %ecx,%eax
		call   _059bd0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bd5c_jump:
		movw   $0x00fffe,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bd68_case:
		mov    %ecx,%eax
		call   _05b844_func

	_05bd6f_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bd81_case:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		movw   $0x00fffe,0x000042(%ecx)
		cmp    $0x00000f,%eax
		jl     _05bd97_jump
		movw   $0x000000,0x000042(%ecx)

	_05bd97_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bda3_case:
		movw   $0x000000,0x000042(%ecx)
		call   _059d14_func
		test   %al,%al
		je     _05b900_case
		xor    %eax,%eax
		mov    _0db278_data,%al
		test   %eax,%eax
		jne    _05bdc8_jump
		movb   $0x000001,_0db278_data

	_05bdc8_jump:
		mov    0x000050(%ecx),%si
		inc    %esi
		mov    _0db27a_data,%di
		mov    %si,0x000050(%ecx)
		cmp    %di,%si
		je     _05bded_jump
		xor    %eax,%eax
		mov    _0db276_data,%al
		cmp    $0x000005,%eax
		jne    _05b900_case

	_05bded_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x000000,0x000071(%ecx)
		mov    %ecx,%eax
		movb   $0x000003,0x000072(%ecx)
		call   _01d6f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05be0c_case:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x000069(%ecx),%al
		mov    _0c24ac_data,%dx
		add    %ebx,%eax
		add    $0x0000a0,%edx
		movswl %ax,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _059e00_func
		cwtl   
		sub    %ebx,%eax
		cmp    $0x000005,%eax
		jge    _05b900_case
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000042(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d6f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05be60_case:
		xor    %eax,%eax
		mov    %bl,%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05be83_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _05bea6_jump

	_05be83_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%ecx),%bl
		lea    0x000000(,%ebx,4),%eax
		mov    0x000004(%ecx),%edx
		sub    %ebx,%eax
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_05bea6_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05b900_case
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05b900_case
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bef8_jump:
		dec    %edx
		cmp    $0x000008,%dx
		ja     _05b900_case
		xor    %eax,%eax
		mov    %dx,%ax
		jmp    *%cs:_05b8b0_switch(,%eax,4)



_05bf10_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _059c20_func
		mov    $0x000096,%edx
		mov    $0x000046,%ebx
		movb   $0x000006,0x000076(%ecx)
		xor    %ah,%ah
		movb   $0x000006,0x000077(%ecx)
		mov    %ah,_0db274_data
		mov    %ah,_0db275_data
		mov    %ah,_0db278_data
		mov    %ah,_0db27e_data
		mov    _0968bc_data,%al
		mov    %dx,_0db27a_data
		mov    %al,_0db276_data
		xor    %eax,%eax
		mov    %bx,_0db27c_data
		mov    _0db276_data,%al
		mov    $0x000002,%edx
		xor    %bh,%bh
		mov    _0968b4_data(%eax),%al
		mov    %bh,_0db279_data
		mov    %al,_0db277_data
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%al
		mov    $0x000006,%ebx
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _01d6f8_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000032(%eax),%al
		mov    %al,0x00006a(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bfb8_func:
		call   _05bf10_func
		mov    _0c24ac_data,%ax
		mov    %ax,_0c25cc_data
		mov    %ax,_0c25ca_data
		mov    _0c24ae_data,%ax
		mov    %ax,_0c25d0_data
		mov    %ax,_0c25ce_data
		ret    



_05bfe4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		cmp    $0x000005,%eax
		jne    _05c032_jump
		xor    %eax,%eax
		mov    _0db279_data,%al
		test   %eax,%eax
		jne    _05c032_jump
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05c032_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		jne    _05c032_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fffe,0x000042(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000008,0x000072(%ecx)

	_05c032_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05c038_func:
		push   %edx
		mov    $0x000028,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0c1ba2_data
		pop    %edx
		ret    



_05c04c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05c0a2_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _05c0a2_jump
		mov    %ecx,%eax
		call   _024bd4_func
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%bl
		xor    %edx,%edx
		mov    %bl,_0db291_data(,%eax,4)
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		call   _01d6f8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c0a2_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05c117_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x00000b,%eax
		jne    _05c117_jump
		xor    %eax,%eax
		mov    _0db276_data,%al
		cmp    $0x000001,%eax
		je     _05c0cb_jump
		cmp    $0x000002,%eax
		jne    _05c16b_jump

	_05c0cb_jump:
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%dl
		mov    %dl,_0db291_data(,%eax,4)
		call   _059d14_func
		test   %al,%al
		je     _05c0f2_jump
		mov    %dl,_0db278_data

	_05c0f2_jump:
		mov    %ecx,%eax
		mov    $0x000009,%ebx
		call   _024bd4_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c117_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05c16b_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x00000e,%eax
		jne    _05c16b_jump
		mov    0x000072(%ecx),%al
		mov    0x000042(%ecx),%dx
		mov    0x000071(%ecx),%ah
		neg    %edx
		sub    %ah,%al
		mov    %dx,0x000042(%ecx)
		mov    %al,0x000071(%ecx)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%bl
		and    $0x0000f0,%bl
		mov    %bl,%bh
		or     $0x000002,%bh
		mov    %bh,0x000005(%eax,%edx,8)
		mov    %ecx,%eax
		call   _024bd4_func

	_05c16b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c170_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05c1c6_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000007,%eax
		jne    _05c1c6_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _024bd4_func
		mov    _0c25f2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _05c1b1_jump
		movw   $0x000001,_0c25f4_data

	_05c1b1_jump:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c1c6_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05c232_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000005,%eax
		jne    _05c232_jump
		mov    _0c25f2_data,%eax
		movw   $0x000000,0x000040(%ecx)
		sar    $0x000010,%eax
		movw   $0x000000,0x000042(%ecx)
		test   %eax,%eax
		jne    _05c219_jump
		mov    0x00004e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _05c210_jump
		mov    %ecx,%eax
		call   _024bd4_func
		mov    %ecx,%eax
		call   _04a984_func
		movw   $0x000001,0x000050(%ecx)

	_05c210_jump:
		movw   $0x000001,_0c25f4_data

	_05c219_jump:
		xor    %ecx,%ecx
		mov    _0db278_data,%cl
		cmp    $0x000001,%ecx
		jne    _05c232_jump
		movb   $0x000002,_0db278_data
		call   _059cec_func

	_05c232_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c240_func:
		push   $0x000024
		call   _07a29e_func
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x000004(%ebp)
		mov    %edx,-0x000008(%ebp)
		movl   $0x000100,_0db2f0_data
		xor    %edx,%edx
		mov    -0x000004(%ebp),%dx
		add    $0x00000f,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %eax,_0db2f4_data
		mov    $_0db2f0_data,%ebx
		mov    $_0db2f0_data,%edx
		mov    $0x000031,%eax
		call   _07b52d_func
		testb  $0x000001,_0db308_data
		je     _05c2b1_jump
		mov    -0x000008(%ebp),%eax
		movl   $0x000000,(%eax)
		movl   $0x000000,-0x00000c(%ebp)
		jmp    _05c2cb_jump

	_05c2b1_jump:
		xor    %edx,%edx
		mov    _0db2f0_data,%dx
		mov    -0x000008(%ebp),%eax
		shl    $0x000010,%edx
		mov    %edx,(%eax)
		mov    _0db2fc_data,%ax
		mov    %eax,-0x00000c(%ebp)

	_05c2cb_jump:
		mov    -0x00000c(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_05c2d8_func:
		push   $0x000024
		call   _07a29e_func
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		movw   $0x000101,_0db2f0_data
		mov    -0x000004(%ebp),%eax
		mov    %ax,_0db2fc_data
		mov    $_0db2f0_data,%ebx
		mov    $_0db2f0_data,%edx
		mov    $0x000031,%eax
		call   _07b52d_func
		testb  $0x000001,_0db308_data
		je     _05c328_jump
		movb   $0x000001,-0x000008(%ebp)
		jmp    _05c32c_jump

	_05c328_jump:
		movb   $0x000000,-0x000008(%ebp)

	_05c32c_jump:
		mov    -0x000008(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c338_func:
		push   $0x000020
		call   _07a29e_func
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %al,-0x000004(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		mov    $_0db2f0_data,%eax
		call   _079cd0_func
		mov    $0x00000c,%ebx
		xor    %edx,%edx
		mov    $_0db2e4_data,%eax
		call   _079cd0_func
		mov    $0x000034,%ebx
		xor    %edx,%edx
		mov    $_0db30c_data,%eax
		call   _079cd0_func
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		mov    %eax,_0db328_data
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    0x000002(%edx),%ax
		mov    %eax,_0db31c_data
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    0x000004(%edx),%ax
		mov    %eax,_0db324_data
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		mov    %eax,_0db320_data
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    0x000008(%edx),%ax
		mov    %eax,_0db310_data
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    0x00000a(%edx),%ax
		mov    %eax,_0db30c_data
		mov    -0x000008(%ebp),%eax
		mov    0x00000c(%eax),%ax
		mov    %ax,_0db32c_data
		mov    -0x000008(%ebp),%eax
		mov    0x00000e(%eax),%ax
		mov    %ax,_0db338_data
		mov    -0x000008(%ebp),%eax
		mov    0x000010(%eax),%ax
		mov    %ax,_0db330_data
		mov    -0x000008(%ebp),%eax
		mov    0x000012(%eax),%ax
		mov    %ax,_0db32e_data
		mov    -0x000008(%ebp),%eax
		mov    0x000014(%eax),%ax
		mov    %ax,_0db33c_data
		movw   $0x000300,_0db2f0_data
		mov    -0x000004(%ebp),%al
		mov    %al,_0db2f4_data
		movb   $0x000000,_0db2f5_data
		movw   $0x000000,_0db2f8_data
		mov    %ds,%ebx
		mov    $_0db30c_data,%edx
		mov    %ebx,%eax
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		mov    %dx,_0db2e4_data
		movl   $_0db30c_data,_0db304_data
		mov    $_0db2e4_data,%ecx
		mov    $_0db2f0_data,%ebx
		mov    $_0db2f0_data,%edx
		mov    $0x000031,%eax
		call   _07b548_func
		mov    _0db328_data,%ax
		mov    -0x000008(%ebp),%edx
		mov    %ax,(%edx)
		mov    _0db31c_data,%ax
		mov    -0x000008(%ebp),%edx
		mov    %ax,0x000002(%edx)
		mov    _0db324_data,%ax
		mov    -0x000008(%ebp),%edx
		mov    %ax,0x000004(%edx)
		mov    _0db320_data,%ax
		mov    -0x000008(%ebp),%edx
		mov    %ax,0x000006(%edx)
		mov    _0db310_data,%ax
		mov    -0x000008(%ebp),%edx
		mov    %ax,0x000008(%edx)
		mov    _0db30c_data,%ax
		mov    -0x000008(%ebp),%edx
		mov    %ax,0x00000a(%edx)
		mov    _0db32c_data,%dx
		mov    -0x000008(%ebp),%eax
		mov    %dx,0x00000c(%eax)
		mov    _0db338_data,%dx
		mov    -0x000008(%ebp),%eax
		mov    %dx,0x00000e(%eax)
		mov    _0db330_data,%dx
		mov    -0x000008(%ebp),%eax
		mov    %dx,0x000010(%eax)
		mov    _0db32e_data,%dx
		mov    -0x000008(%ebp),%eax
		mov    %dx,0x000012(%eax)
		mov    _0db33c_data,%dx
		mov    -0x000008(%ebp),%eax
		mov    %dx,0x000014(%eax)
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_05c520_switch:
		.long   _05c571_case
		.long   _05c5b7_case
		.long   _05c57d_case
		.long   _05c5b7_case
		.long   _05c589_case
		.long   _05c5b7_case
		.long   _05c5b7_case
		.long   _05c595_case
		.long   _05c5b7_case
		.long   _05c5a1_case
		.long   _05c5b7_case
		.long   _05c5ad_case




_05c550_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		mov    _0c1ef0_data,%eax
		mov    0x00006c(%eax),%dl
		dec    %dl
		cmp    $0x00000b,%dl
		ja     _05c5b7_case
		and    $0x0000ff,%edx
		jmp    *%cs:_05c520_switch(,%edx,4)

	_05c571_case:
		mov    $0x000002,%edx
		call   _01d6e8_func
		jmp    _05c5b7_case

	_05c57d_case:
		mov    $0x000004,%edx
		call   _01d6e8_func
		jmp    _05c5b7_case

	_05c589_case:
		mov    $0x000006,%edx
		call   _01d6e8_func
		jmp    _05c5b7_case

	_05c595_case:
		mov    $0x000009,%edx
		call   _01d6e8_func
		jmp    _05c5b7_case

	_05c5a1_case:
		mov    $0x00000b,%edx
		call   _01d6e8_func
		jmp    _05c5b7_case

	_05c5ad_case:
		mov    $0x00000d,%edx
		call   _01d6e8_func

	_05c5b7_case:
		test   %bl,%bl
		je     _05c5c4_jump
		mov    _0c1ef0_data,%eax
		movb   $0x000007,0x00006b(%eax)

	_05c5c4_jump:
		pop    %edx
		pop    %ebx
		ret    



_05c5c8_func:
		push   %ebx
		push   %edx
		mov    _0c1ef4_data,%eax
		mov    _0c24ac_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		cwtl   
		sub    %edx,%eax
		mov    _0c1ef0_data,%edx
		mov    %ax,0x000038(%edx)
		mov    _0c24ac_data,%bx
		mov    0x000028(%edx),%ax
		sub    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,0x000036(%edx)
		pop    %edx
		pop    %ebx
		ret    

_05c604_switch:
		.long   _05c877_case
		.long   _05c880_case
		.long   _05c867_case
		.long   _05c880_case
		.long   _05c857_case
		.long   _05c880_case
		.long   _05c880_case
		.long   _05c872_case
		.long   _05c880_case
		.long   _05c862_case
		.long   _05c880_case
		.long   _05c852_case




_05c634_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _05c65c_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000019,%eax
		je     _05c655_jump
		cmp    $0x00001a,%eax
		jne    _05c65c_jump

	_05c655_jump:
		mov    $0x00001d,%edx
		jmp    _05c6a7_jump

	_05c65c_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _05c680_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00001b,%eax
		je     _05c679_jump
		cmp    $0x00001c,%eax
		jne    _05c680_jump

	_05c679_jump:
		mov    $0x00001e,%edx
		jmp    _05c6a7_jump

	_05c680_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _05c6a2_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000011,%eax
		je     _05c6b1_jump
		cmp    $0x000012,%eax
		je     _05c6b1_jump
		cmp    $0x000013,%eax
		je     _05c6b1_jump

	_05c6a2_jump:
		mov    $0x00000d,%edx

	_05c6a7_jump:
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func

	_05c6b1_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _05c717_jump
		testb  $0x000008,_0c1bcd_data
		je     _05c6ec_jump
		mov    _0c1efa_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		jmp    _05c711_jump

	_05c6ec_jump:
		mov    _0c1efa_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax

	_05c711_jump:
		mov    %ax,_0c25b4_data

	_05c717_jump:
		xor    %dl,%dl
		mov    _0c1ef0_data,%eax
		mov    %dl,_0c1f04_data
		mov    $0x000001,%dh
		mov    0x000081(%eax),%cl
		mov    %dh,_0c1f02_data
		mov    %dl,_0c1f05_data
		mov    %dl,_0c1f01_data
		mov    _0c1bcd_data,%dl
		and    $0x0000f7,%cl
		and    $0x000008,%dl
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ch,0x000081(%eax)
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dl
		mov    %dl,0x000081(%eax)
		mov    _0c2510_data,%eax
		sar    $0x000010,%eax
		call   _01f804_func
		mov    _0c1ef0_data,%eax
		call   _01f7d4_func
		mov    _0c1ef0_data,%eax
		xor    %bl,%bl
		movw   $0x000000,0x000042(%eax)
		xor    %edx,%edx
		mov    %bl,0x00006b(%eax)
		xor    %ebx,%ebx
		mov    0x00006f(%eax),%dl
		mov    0x00006e(%eax),%bl
		movw   $0x00ffff,0x00004a(%eax)
		call   _01d6f8_func
		mov    _0c1ef0_data,%eax
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%eax),%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		mov    0x000002(%ecx,%edx,1),%dl
		mov    _0c25a2_data,%ebx
		mov    %dl,0x00006a(%eax)
		mov    _0c25a6_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000011,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%eax)
		mov    _0c1bcd_data,%bl
		lea    0x000028(%eax),%edx
		test   $0x000008,%bl
		je     _05c804_jump
		mov    $0xfffffffb,%eax
		jmp    _05c809_jump

	_05c804_jump:
		mov    $0x000005,%eax

	_05c809_jump:
		mov    (%edx),%ebx
		mov    $0x000004,%cl
		add    %eax,%ebx
		mov    _0c1efc_data,%ax
		mov    %ebx,(%edx)
		test   %ax,%ax
		js     _05c821_jump
		sar    %cl,%ax
		jmp    _05c82a_jump

	_05c821_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05c82a_jump:
		inc    %al
		mov    %al,_0c1f03_data
		mov    _0c1ef0_data,%eax
		mov    0x00006e(%eax),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _05c880_case
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0c1f03_data,%al
		add    $0x000002,%al
		jmp    *%cs:_05c604_switch(,%edx,4)

	_05c852_case:
		mov    %al,_0c1f03_data

	_05c857_case:
		movw   $0x00000b,_0c1efa_data
		jmp    _05c880_case

	_05c862_case:
		mov    %al,_0c1f03_data

	_05c867_case:
		movw   $0x000008,_0c1efa_data
		jmp    _05c880_case

	_05c872_case:
		mov    %al,_0c1f03_data

	_05c877_case:
		movw   $0x000005,_0c1efa_data

	_05c880_case:
		testb  $0x000008,_0c1bcd_data
		je     _05c895_jump
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _05c8aa_jump

	_05c895_jump:
		testb  $0x000008,_0c1bcd_data
		jne    _05c8ca_jump
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05c8ca_jump

	_05c8aa_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		test   %eax,%eax
		jge    _05c8ba_jump
		neg    %eax

	_05c8ba_jump:
		sub    $0x000005,%eax
		cmp    %ebx,%eax
		jge    _05c8c3_jump
		mov    %ebx,%eax

	_05c8c3_jump:
		add    %ax,_0c1efa_data

	_05c8ca_jump:
		mov    _0c1ef8_data,%eax
		mov    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _05c8dd_jump
		mov    %ebx,%eax

	_05c8dd_jump:
		mov    %eax,%edx
		mov    %ax,_0c1efa_data
		mov    _0c1ef0_data,%eax
		testb  $0x000008,0x000081(%eax)
		je     _05c902_jump
		mov    0x000028(%eax),%esi
		mov    %dx,0x000040(%eax)
		add    $0x00000b,%esi
		mov    %esi,0x000028(%eax)
		jmp    _05c911_jump

	_05c902_jump:
		mov    0x000028(%eax),%ecx
		neg    %edx
		sub    $0x00000b,%ecx
		mov    %dx,0x000040(%eax)
		mov    %ecx,0x000028(%eax)

	_05c911_jump:
		mov    _0c1efa_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000006,%eax
		add    %eax,%edx
		add    %edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    _0c1ef8_data,%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    $0x000028,%ebx
		sub    %edx,%eax
		mov    $0x000008,%cl
		sub    %eax,%ebx
		mov    _0c1efc_data,%ax
		mov    %bx,_0c1efe_data
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0c1ef8_data
		mov    %ax,_0c1efc_data
		mov    _0c1ef8_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    _0c1efc_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,_0c1efe_data
		mov    _0c1ef0_data,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%dl
		mov    0x000074(%eax),%bl
		lea    (%edx,%ebx,1),%ecx
		mov    _0c25a8_data,%ebx
		mov    _0c25a4_data,%edx
		sar    $0x000011,%ebx
		sar    $0x000010,%edx
		sar    %ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    %edx,0x00002c(%eax)
		mov    $0x000004,%cl
		mov    0x00002c(%eax),%ax
		cwtl   
		shl    %cl,%eax
		mov    %eax,_0c1ef4_data
		call   _05c5c8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c9d0_jump:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		mov    _0c1b58_data,%eax
		lea    0x000000(,%edx,4),%ebx
		lea    (%eax,%ebx,1),%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    _0c1bb8_data,%bl
		testb  $0x000002,0x000007(%ecx,%ebx,8)
		je     _05ca98_jump
		cmp    $0x000002,%edx
		jne    _05ca70_jump
		mov    _0c1b8c_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _05ca29_jump
		mov    0x000008(%eax),%eax
		mov    0x00006d(%eax),%bh
		mov    0x000015(%eax),%dl
		and    $0x00000f,%bh
		and    $0x0000f0,%dl
		mov    %bh,%cl
		or     %dl,%cl
		mov    %cl,0x00006d(%eax)
		jmp    _05ca3f_jump

	_05ca29_jump:
		mov    0x000008(%eax),%eax
		mov    0x000005(%eax),%dl
		and    $0x0000f0,%dl
		mov    0x00006d(%eax),%dh
		and    $0x00000f,%dh
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x00006d(%eax)

	_05ca3f_jump:
		mov    $0x000020,%ebx
		mov    $0xffffffff,%ecx
		mov    %bx,_0c1efc_data
		call   _05c634_func
		mov    %cx,_0c2504_data
		testb  $0x000008,_0c3314_data
		je     _05ca98_jump
		xor    %al,%al
		mov    %al,_0c2503_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ca70_jump:
		call   _06376c_func
		mov    $0x00000b,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		mov    $0x000001,%ah
		mov    $0x000005,%edx
		mov    %ah,_0c1f04_data
		mov    %dx,_0c1efc_data

	_05ca98_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ca9c_func:
		incw   _0c1efc_data
		mov    _0c1efa_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000040,%eax
		jl     _05cab9_jump
		movw   $0x00003f,_0c1efc_data

	_05cab9_jump:
		ret    



_05cabc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%bl
		mov    _0c1ef0_data,%edx
		mov    0x000048(%edx),%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _05cb70_jump
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		movw   $0x000000,0x000040(%eax)
		movw   $0x000000,0x000042(%eax)
		movw   $0x00ffff,0x00004a(%edx)
		test   %bl,%bl
		jne    _05cb12_jump
		mov    0x000081(%edx),%dl
		shl    $0x000005,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		jne    _05cb56_jump

	_05cb12_jump:
		xor    %edx,%edx
		mov    _0c1b74_data,%ecx
		mov    _0c1bb4_data,%dl
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000028(%eax)
		xor    %ecx,%ecx
		mov    0x000069(%eax),%dl
		mov    0x000074(%eax),%cl
		lea    (%edx,%ecx,1),%ebx
		mov    _0c25a8_data,%ecx
		mov    _0c25a4_data,%edx
		sar    $0x000011,%ecx
		sar    $0x000010,%edx
		add    %ecx,%edx
		sar    %ebx
		sub    $0x000005,%edx
		sub    %ebx,%edx
		jmp    _05cb6d_jump

	_05cb56_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		test   %edx,%edx
		jne    _05cb70_jump
		mov    0x00003a(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%eax)
		mov    0x00003c(%eax),%edx
		sar    $0x000010,%edx

	_05cb6d_jump:
		mov    %edx,0x00002c(%eax)

	_05cb70_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05cb74_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000040(%edx),%bx
		mov    %bx,0x000040(%eax)
		mov    0x000042(%edx),%dx
		mov    %dx,0x000042(%eax)
		mov    _0c1ba0_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _05cbb4_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _05cbbb_jump

	_05cbb4_jump:
		xor    %eax,%eax
		call   _05cabc_func

	_05cbbb_jump:
		pop    %edx
		pop    %ebx
		ret    



_05cbc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05cbd1_jump
		neg    %eax

	_05cbd1_jump:
		cmp    $0x00000b,%eax
		jl     _05cbda_jump
		mov    $0x000002,%al
		jmp    _05cbfe_jump

	_05cbda_jump:
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05cbe6_jump
		neg    %eax

	_05cbe6_jump:
		cmp    $0x000008,%eax
		jl     _05cbef_jump
		mov    $0x000001,%al
		jmp    _05cbfe_jump

	_05cbef_jump:
		cmpb   $0x000000,_0c24ca_data
		je     _05cbfc_jump
		mov    $0x000001,%al
		jmp    _05cbfe_jump

	_05cbfc_jump:
		xor    %al,%al

	_05cbfe_jump:
		testb  $0x000008,0x000081(%edx)
		je     _05cc17_jump
		mov    0x000040(%edx),%cx
		xor    %ah,%ah
		sub    %eax,%ecx
		mov    %cx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cc17_jump:
		mov    0x000040(%edx),%bx
		xor    %ah,%ah
		add    %eax,%ebx
		mov    %bx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05cc28_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    %ah,_0c1f02_data
		mov    %ah,_0c1f05_data
		mov    %ah,_0c1f01_data
		mov    _0c1ef0_data,%eax
		mov    $0x000005,%edx
		movl   $0x000000,0x000024(%eax)
		mov    %dx,_0c1efc_data
		mov    0x000081(%eax),%bl
		mov    0x00006e(%eax),%dl
		and    $0x0000fb,%bl
		mov    %dl,0x00006c(%eax)
		mov    %bl,0x000081(%eax)
		xor    %eax,%eax
		call   _05cabc_func
		pop    %edx
		pop    %ebx
		ret    



_05cc78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		cmpb   $0x000000,_0c1f02_data
		je     _05ced3_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _05ce70_jump
		call   _05c5c8_func
		mov    _0c1ef4_data,%eax
		sar    $0x000004,%eax
		mov    %eax,0x00002c(%esi)
		mov    _0c1efa_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _05ccf5_jump
		mov    _0c1efc_data,%ax
		mov    _0c1efe_data,%cx
		cmp    %cx,%ax
		jge    _05ccd0_jump
		xor    %eax,%eax
		mov    %ax,_0c1efc_data
		jmp    _05ccdb_jump

	_05ccd0_jump:
		mov    %eax,%edi
		sub    %ecx,%edi
		mov    %di,_0c1efc_data

	_05ccdb_jump:
		mov    _0c1efa_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _05ce55_jump
		call   _05c550_func
		jmp    _05ce55_jump

	_05ccf5_jump:
		xor    %eax,%eax
		mov    _0c1f01_data,%al
		test   %eax,%eax
		jne    _05cd0c_jump
		mov    %esi,%eax
		call   _05cbc0_func
		jmp    _05ce55_jump

	_05cd0c_jump:
		cmp    $0x000001,%eax
		jne    _05ce55_jump
		mov    0x00003e(%esi),%eax
		mov    _0c1ef8_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		test   %eax,%eax
		jge    _05cd2a_jump
		neg    %eax

	_05cd2a_jump:
		cmp    %edx,%eax
		jge    _05cd35_jump
		mov    %esi,%eax
		call   _05cbc0_func

	_05cd35_jump:
		mov    _0c25a6_data,%eax
		mov    _0c25a2_data,%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000081(%esi),%cl
		mov    %edx,%eax
		test   $0x000008,%cl
		je     _05cd61_jump
		lea    0x00000b(%edx),%eax
		jmp    _05cd64_jump

	_05cd61_jump:
		lea    -0x00000b(%edx),%eax

	_05cd64_jump:
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		cmp    $0x000004,%edx
		jne    _05cd82_jump
		testb  $0x000008,0x000081(%esi)
		je     _05cd7f_jump
		add    $0x00000b,%eax
		jmp    _05cd82_jump

	_05cd7f_jump:
		sub    $0x00000b,%eax

	_05cd82_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%dl
		lea    (%edx,%ebx,1),%ecx
		mov    _0c25a8_data,%ebx
		mov    _0c25a4_data,%edi
		sar    $0x000011,%ebx
		sar    $0x000010,%edi
		sar    %ecx
		add    %ebx,%edi
		sub    %ecx,%edi
		mov    0x000081(%esi),%dl
		shl    $0x000004,%edi
		test   $0x000008,%dl
		je     _05cdba_jump
		cmp    0x000028(%esi),%eax
		jge    _05cdc8_jump

	_05cdba_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _05cdd2_jump
		cmp    0x000028(%esi),%eax
		jg     _05cdd2_jump

	_05cdc8_jump:
		call   _05cc28_func
		jmp    _05ce55_jump

	_05cdd2_jump:
		mov    _0c1ef4_data,%ecx
		mov    %edi,%ebx
		mov    0x000028(%esi),%dx
		sub    %ecx,%ebx
		sub    %dx,%ax
		je     _05cdf3_jump
		movswl %ax,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ebx

	_05cdf3_jump:
		mov    0x000040(%esi),%ax
		imul   %eax,%ebx
		mov    _0c1ef4_data,%ebp
		mov    %ebp,%eax
		mov    %bx,0x000042(%esi)
		mov    %edi,%ebx
		mov    0x000040(%esi),%edx
		cmp    %ebx,%eax
		jge    _05ce11_jump
		mov    %ebx,%eax

	_05ce11_jump:
		mov    %eax,%ecx
		mov    %edi,%ebx
		mov    _0c1ef4_data,%eax
		sar    $0x000010,%edx
		cmp    %ebx,%eax
		jle    _05ce23_jump
		mov    %ebx,%eax

	_05ce23_jump:
		add    %ebp,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _05ce38_jump
		cmp    %ecx,%eax
		jg     _05ce38_jump
		mov    $0x000001,%eax
		jmp    _05ce3a_jump

	_05ce38_jump:
		xor    %eax,%eax

	_05ce3a_jump:
		test   %eax,%eax
		je     _05ce45_jump
		sarw   $0x000004,0x000042(%esi)
		jmp    _05ce55_jump

	_05ce45_jump:
		mov    _0c1ef4_data,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		sar    $0x000004,%eax
		mov    %ax,0x000042(%esi)

	_05ce55_jump:
		xor    %eax,%eax
		mov    _0c1f05_data,%al
		test   %eax,%eax
		jne    _05cec1_jump
		cmpb   $0x000000,_0c1f02_data
		je     _05cec1_jump
		call   _02b4b0_func
		jmp    _05cec1_jump

	_05ce70_jump:
		cmpb   $0x000000,_0c1f05_data
		je     _05cea7_jump
		cmpb   $0x000000,_0c1f01_data
		jne    _05cea7_jump
		mov    $0x000001,%eax
		call   _05c550_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000002(%edx,%eax,8),%al
		mov    %al,0x00006a(%esi)

	_05cea7_jump:
		movb   $0x000001,_0c1f01_data
		testb  $0x000008,0x000081(%esi)
		je     _05cebd_jump
		decw   0x000040(%esi)
		jmp    _05cec1_jump

	_05cebd_jump:
		incw   0x000040(%esi)

	_05cec1_jump:
		mov    0x000048(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05ced3_jump
		mov    %esi,%eax
		call   _05cb74_func

	_05ced3_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05cedc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _05cf0c_jump
		jmp    _05cfc8_jump

	_05cefc_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _05cfc8_jump

	_05cf0c_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x00000b,%edx
		jne    _05cefc_jump
		mov    0x000024(%esi),%edx
		test   %edx,%edx
		jne    _05cefc_jump
		mov    %esi,%eax
		call   _01f7d4_func
		mov    %esp,%eax
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x00001c(%esp),%ecx
		push   %eax
		lea    0x00001c(%esp),%ebx
		mov    _0c1ef0_data,%eax
		call   _01da90_func
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		movb   $0x000000,0x00006b(%esi)
		xor    %eax,%eax
		mov    0x000012(%esp),%edx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    _0c1ef0_data,%eax
		mov    %edx,0x000028(%esi)
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _05cf88_jump
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebx
		mov    %ebx,0x000028(%esi)

	_05cf88_jump:
		mov    -0x000002(%esp),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%dl
		sar    $0x000011,%ebx
		add    %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		sar    %edx
		add    %ebx,%eax
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _01df3c_func
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)

	_05cfc8_jump:
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05cfd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02d750_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		test   %edx,%edx
		jne    _05d032_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _05d032_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02d280_func
		test   %ax,%ax
		jne    _05d097_jump

	_05d032_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		cmp    $0x000001,%edx
		jne    _05d0e9_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _05d0e9_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02d280_func
		test   %ax,%ax
		je     _05d0e9_jump

	_05d097_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		cmp    $0x000001,%edx
		jne    _05d0c9_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ebx
		and    $0x0000f7,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    $0x000007,%edx
		jmp    _05d0e4_jump

	_05d0c9_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000008,%ah
		mov    $0x000008,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax

	_05d0e4_jump:
		call   _056614_func

	_05d0e9_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _02ce7c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d0fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02d750_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _05d15d_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _05d15d_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02d280_func
		test   %ax,%ax
		jne    _05d1c3_jump

	_05d15d_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _05d21c_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _05d21c_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02d280_func
		test   %ax,%ax
		je     _05d21c_jump

	_05d1c3_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _05d1f3_jump
		mov    0x000081(%ecx),%dl
		mov    %eax,%ebx
		and    $0x0000f7,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    $0x00000d,%edx
		jmp    _05d20e_jump

	_05d1f3_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000008,%ah
		mov    $0x00000e,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax

	_05d20e_jump:
		call   _056614_func
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)

	_05d21c_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05d276_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000011,%eax
		jne    _05d276_jump
		mov    0x00003c(%ecx),%eax
		mov    0x00002c(%ecx),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _05d276_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _05d25c_jump
		mov    $0x00000a,%edx
		mov    %eax,%ebx
		jmp    _05d266_jump

	_05d25c_jump:
		mov    $0x000001,%ebx
		mov    $0x000009,%edx

	_05d266_jump:
		mov    %ecx,%eax
		call   _056614_func
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)

	_05d276_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		cmp    $0x000002,%edx
		jne    _05d34a_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000012,%eax
		jne    _05d34a_jump
		mov    0x00000c(%ecx),%ebx
		mov    (%ebx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05d2a8_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _05d2d2_jump

	_05d2a8_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ecx),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_05d2d2_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05d34a_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05d34a_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _05d32d_jump
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000000,0x00007e(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d32d_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000005,0x000042(%ecx)
		call   _056614_func

	_05d34a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d350_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05d368_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000012,%eax
		je     _05d389_jump

	_05d368_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _056614_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movb   $0x000000,0x000076(%ecx)

	_05d389_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05d38c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    $0x000001,%ah
		mov    _0c1b38_data,%si
		xor    %edx,%edx
		mov    %ah,(%esp)
		mov    _0c1b34_data,%eax
		test   %si,%si
		jg     _05d3ba_jump
		jmp    _05d3e4_jump

	_05d3af_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %si,%dx
		jge    _05d3e4_jump

	_05d3ba_jump:
		xor    %ebx,%ebx
		mov    0x000060(%eax),%bx
		cmp    $0x00000a,%ebx
		jne    _05d3af_jump
		mov    0x00003c(%eax),%bx
		cmp    0x00003c(%ecx),%bx
		jne    _05d3af_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _05d3af_jump
		xor    %ebx,%ebx
		mov    0x00007f(%eax),%bl
		cmp    $0x000064,%ebx
		jge    _05d3af_jump
		xor    %dl,%dl
		mov    %dl,(%esp)

	_05d3e4_jump:
		mov    (%esp),%al
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d3f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000032(%eax),%eax
		mov    _0c1b30_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%ecx
		cmp    0x00002c(%eax),%ecx
		jne    _05d44b_jump
		mov    _0c24ac_data,%ebx
		sar    $0x000010,%ebx
		add    $0x0000c8,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x000081(%eax),%bl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax)

	_05d44b_jump:
		mov    0x000032(%eax),%eax
		mov    _0c1b30_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		cmp    0x00002c(%eax),%esi
		jne    _05d4a0_jump
		movl   $0x000000,0x000024(%eax)
		mov    _0c24ac_data,%edx
		mov    0x000081(%eax),%bh
		sar    $0x000010,%edx
		and    $0x0000fb,%bh
		add    $0x0000c8,%edx
		mov    %bh,0x000081(%eax)
		mov    %edx,0x00002c(%eax)

	_05d4a0_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d4a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %eax,%edx
		xor    %ebx,%ebx
		call   _02d750_func
		mov    0x00006d(%edx),%bl
		xor    %al,%al
		test   %ebx,%ebx
		jne    _05d5d0_jump
		mov    0x000069(%edx),%bl
		add    0x00002c(%edx),%ebx
		mov    _0c24ac_data,%ecx
		sar    $0x000010,%ecx
		add    $0x000014,%ebx
		add    $0x0000c8,%ecx
		cmp    %ecx,%ebx
		jge    _05d4e2_jump
		incb   0x00007f(%edx)

	_05d4e2_jump:
		xor    %ebx,%ebx
		mov    0x00006c(%edx),%bl
		cmp    $0x000003,%ebx
		jne    _05d4f7_jump
		movw   $0x000000,0x000042(%edx)
		jmp    _05d5d0_jump

	_05d4f7_jump:
		cmp    $0x000009,%ebx
		jne    _05d593_jump
		mov    _0c24ac_data,%ecx
		mov    0x00002c(%edx),%esi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000074(%edx),%bl
		add    $0x0000c8,%ecx
		add    %esi,%ebx
		movw   $0x000006,0x000042(%edx)
		cmp    %ecx,%ebx
		jg     _05d541_jump
		xor    %ecx,%ecx
		mov    _0c24e4_data,%ebx
		mov    0x000069(%edx),%cl
		sar    $0x000010,%ebx
		add    %esi,%ecx
		shl    $0x000004,%ebx
		add    $0x00000e,%ecx
		cmp    %ebx,%ecx
		jle    _05d5d0_jump

	_05d541_jump:
		mov    _0c24e4_data,%ebx
		xor    %eax,%eax
		mov    0x00002c(%edx),%ebp
		mov    0x000069(%edx),%al
		sar    $0x000010,%ebx
		add    %ebp,%eax
		shl    $0x000004,%ebx
		add    $0x00000e,%eax
		cmp    %ebx,%eax
		jle    _05d565_jump
		mov    %edx,%eax
		call   _070160_func

	_05d565_jump:
		movl   $0x000000,0x000024(%edx)
		mov    _0c24ac_data,%eax
		movb   $0x000000,0x00007f(%edx)
		sar    $0x000010,%eax
		mov    0x000081(%edx),%bh
		add    $0x0000c8,%eax
		and    $0x0000fb,%bh
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		jmp    _05d5cb_jump

	_05d593_jump:
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x000069(%edx),%bl
		add    %ebx,%ecx
		mov    _0c24ac_data,%ebx
		sar    $0x000010,%ebx
		cmp    %ebx,%ecx
		jge    _05d5d0_jump
		add    $0x0000c8,%ebx
		mov    %ebx,0x00002c(%edx)
		mov    0x000081(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%edx)

	_05d5cb_jump:
		call   _05d38c_func

	_05d5d0_jump:
		xor    %ebx,%ebx
		mov    0x00007f(%edx),%bl
		cmp    $0x000064,%ebx
		jne    _05d5e1_jump
		mov    %edx,%eax
		call   _05d38c_func

	_05d5e1_jump:
		test   %al,%al
		je     _05d6b5_jump
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%si
		xor    %eax,%eax
		test   %si,%si
		jg     _05d612_jump
		jmp    _05d6b5_jump

	_05d602_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %si,%ax
		jge    _05d6b5_jump

	_05d612_jump:
		xor    %ebx,%ebx
		mov    0x000060(%ecx),%bx
		cmp    $0x00000a,%ebx
		jne    _05d602_jump
		mov    0x00003c(%ecx),%bx
		cmp    0x00003c(%edx),%bx
		jne    _05d602_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _05d602_jump
		orb    $0x000004,0x000081(%ecx)
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		movl   $0x000001,0x000024(%ecx)
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0c24e4_data,%eax
		mov    0x000069(%ecx),%bl
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%esi
		shl    $0x000004,%eax
		add    %ebx,%esi
		sub    $0x000010,%eax
		cmp    %eax,%esi
		jle    _05d67b_jump
		sub    %ebx,%eax
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _070160_func

	_05d67b_jump:
		mov    0x00006f(%edx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%edx),%al
		mov    %al,0x00006c(%ecx)
		mov    0x000077(%edx),%al
		mov    %al,0x000076(%ecx)
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000010,%ah
		mov    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movb   $0x000000,0x00007f(%ecx)
		call   _01df3c_func
		mov    %ecx,%eax
		call   _056614_func

	_05d6b5_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d6bc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _05d6e5_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _05d6ee_jump

	_05d6e5_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_05d6ee_jump:
		call   _01d6f8_func
		mov    %ecx,%eax
		call   _05d3f0_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		setne  %al
		mov    %al,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_05d714_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05d733_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000010,%eax
		je     _05d83e_jump

	_05d733_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05d74b_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000011,%eax
		je     _05d83e_jump

	_05d74b_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05d763_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000012,%eax
		je     _05d83e_jump

	_05d763_jump:
		xor    %eax,%eax
		mov    _0c1b74_data,%edx
		mov    _0c1bb4_data,%al
		mov    0x000028(%ecx),%ebx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _05d78e_jump
		mov    $0x000001,%eax
		jg     _05d78e_jump
		neg    %eax

	_05d78e_jump:
		test   %eax,%eax
		jl     _05d7a8_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _05d7eb_jump

	_05d7a8_jump:
		xor    %eax,%eax
		mov    _0c1b74_data,%esi
		mov    _0c1bb4_data,%al
		lea    (%eax,%esi,1),%edx
		mov    0x000028(%ecx),%edi
		xor    %eax,%eax
		sub    %edi,%edx
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _05d7d4_jump
		mov    $0x000001,%eax
		jg     _05d7d4_jump
		neg    %eax

	_05d7d4_jump:
		test   %eax,%eax
		jge    _05d83e_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _05d83e_jump

	_05d7eb_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _05d809_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _05d80f_jump

	_05d809_jump:
		movw   $0x00fffd,0x000040(%ecx)

	_05d80f_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movw   $0x00fffb,0x000042(%ecx)
		call   _01d6f0_func
		mov    $0x000010,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d6e8_func
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _056614_func

	_05d83e_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d994_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    $_094a14_data,%esi
		xor    %edx,%edx
		mov    $_0c2624_data,%edi
		mov    %dx,(%esp)
		jmp    _05d9bf_jump

	_05d9ae_jump:
		mov    (%esp),%ebx
		add    $0x000014,%esi
		inc    %ebx
		add    $0x000084,%edi
		mov    %bx,(%esp)

	_05d9bf_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000018,%eax
		jge    _05db28_jump
		testb  $0x000001,0x000008(%esi)
		jne    _05d9da_jump
		cmp    $0x000011,%eax
		jne    _05d9ae_jump

	_05d9da_jump:
		mov    0x000034(%edi),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%edi),%dl
		add    %edx,%eax
		add    $0x000008,%eax
		cmp    $0xfffffff8,%eax
		jle    _05da22_jump
		mov    _0cdfac_data,%edx
		add    $0x00000e,%edx
		cmp    %edx,%eax
		jge    _05da22_jump
		mov    0x000036(%edi),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000069(%edi),%dl
		add    %edx,%eax
		cmp    $0xfffffff6,%eax
		jle    _05da22_jump
		mov    _0cdfb0_data,%edx
		add    $0x00000c,%edx
		cmp    %edx,%eax
		jge    _05da22_jump
		mov    %edi,%eax
		call   _018b80_func

	_05da22_jump:
		cmpb   $0x000000,_0cd100_data
		je     _05d9ae_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000011,%eax
		je     _05d9ae_jump
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a1c_data(%eax)
		je     _05da74_jump
		mov    _094a14_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a12_data(%eax),%ebx
		mov    _0cd100_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _019644_func

	_05da74_jump:
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a1c_data(%eax)
		je     _05daad_jump
		mov    _094a14_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a12_data(%eax),%ebx
		mov    _0cd100_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _019644_func

	_05daad_jump:
		xor    %eax,%eax
		mov    0x000006(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a1c_data(%eax)
		je     _05dae6_jump
		mov    _094a14_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a12_data(%eax),%ebx
		mov    _0cd100_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _019644_func

	_05dae6_jump:
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a1c_data(%eax)
		je     _05d9ae_jump
		mov    _094a14_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a12_data(%eax),%ebx
		mov    _0cd100_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _019644_func
		jmp    _05d9ae_jump

	_05db28_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05db34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    %ah,(%esp)
		xor    %eax,%eax
		mov    _0cd100_data,%al
		cmp    $0x000080,%eax
		jge    _05db68_jump
		cmpb   $0x000000,_0c24ca_data
		jne    _05db62_jump
		cmpb   $0x000000,_0c2622_data
		je     _05db68_jump

	_05db62_jump:
		incb   _0cd100_data

	_05db68_jump:
		mov    $_0c2624_data,%ebx
		mov    $_094a14_data,%ecx
		xor    %esi,%esi
		jmp    _05ded3_jump

	_05db79_jump:
		movswl %si,%eax
		cmp    $0x000012,%eax
		je     _05db9a_jump
		cmp    $0x000013,%eax
		je     _05db9a_jump
		cmp    $0x000014,%eax
		je     _05db9a_jump
		cmp    $0x000015,%eax
		je     _05db9a_jump
		cmp    $0x000016,%eax
		je     _05db9a_jump
		cmp    $0x000017,%eax
		jne    _05dbb9_jump

	_05db9a_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x00003a,%eax
		je     _05dbb9_jump
		cmp    $0x00002e,%eax
		je     _05dbb9_jump
		testb  $0x000001,0x000008(%ecx)
		je     _05dbb9_jump
		mov    $0x00003a,%edx
		jmp    _05debb_jump

	_05dbb9_jump:
		mov    0x000009(%ecx),%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000005,%edx
		jle    _05dc58_jump
		xor    %edx,%edx
		mov    0x00006c(%ebx),%dl
		cmp    $0x000033,%edx
		jne    _05dc58_jump
		movzbl 0x00006d(%ebx),%edi
		mov    0x00000c(%ebx),%ebp
		shl    $0x000002,%edi
		add    %ebp,%edi
		mov    (%edi),%edi
		mov    0x000007(%edi,%edx,8),%ah
		test   $0x000010,%ah
		je     _05dbf7_jump
		xor    %edx,%edx
		mov    0x00006b(%ebx),%dl
		test   %edx,%edx
		jmp    _05dc14_jump

	_05dbf7_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebx),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000004(%ebx),%edi
		mov    0x00000a(%edx,%edi,1),%dx
		and    $0x00ffff,%edx
		movzbl 0x00006b(%ebx),%edi
		dec    %edx
		cmp    %edx,%edi

	_05dc14_jump:
		sete   %ah
		xor    %edx,%edx
		mov    %ah,%dl
		test   %edx,%edx
		je     _05dc58_jump
		xor    %edx,%edx
		mov    0x00006d(%ebx),%dl
		mov    0x00000c(%ebx),%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    (%edi),%edi
		mov    0x00006c(%ebx),%dl
		mov    0x000005(%edi,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c24c8_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _05dc58_jump
		mov    $0x000034,%edx
		jmp    _05debb_jump

	_05dc58_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000004,%edx
		jle    _05dcf4_jump
		xor    %edx,%edx
		mov    0x00006c(%ebx),%dl
		cmp    $0x000032,%edx
		jne    _05dcf4_jump
		movzbl 0x00006d(%ebx),%edi
		mov    0x00000c(%ebx),%ebp
		shl    $0x000002,%edi
		add    %ebp,%edi
		mov    (%edi),%edi
		mov    0x000007(%edi,%edx,8),%ah
		test   $0x000010,%ah
		je     _05dc93_jump
		xor    %edx,%edx
		mov    0x00006b(%ebx),%dl
		test   %edx,%edx
		jmp    _05dcb0_jump

	_05dc93_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebx),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000004(%ebx),%edi
		mov    0x00000a(%edx,%edi,1),%dx
		and    $0x00ffff,%edx
		movzbl 0x00006b(%ebx),%edi
		dec    %edx
		cmp    %edx,%edi

	_05dcb0_jump:
		sete   %ah
		xor    %edx,%edx
		mov    %ah,%dl
		test   %edx,%edx
		je     _05dcf4_jump
		xor    %edx,%edx
		mov    0x00006d(%ebx),%dl
		mov    0x00000c(%ebx),%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    (%edi),%edi
		mov    0x00006c(%ebx),%dl
		mov    0x000005(%edi,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c24c8_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _05dcf4_jump
		mov    $0x000033,%edx
		jmp    _05debb_jump

	_05dcf4_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000003,%edx
		jle    _05dd90_jump
		xor    %edx,%edx
		mov    0x00006c(%ebx),%dl
		cmp    $0x000031,%edx
		jne    _05dd90_jump
		movzbl 0x00006d(%ebx),%edi
		mov    0x00000c(%ebx),%ebp
		shl    $0x000002,%edi
		add    %ebp,%edi
		mov    (%edi),%edi
		mov    0x000007(%edi,%edx,8),%ah
		test   $0x000010,%ah
		je     _05dd2f_jump
		xor    %edx,%edx
		mov    0x00006b(%ebx),%dl
		test   %edx,%edx
		jmp    _05dd4c_jump

	_05dd2f_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebx),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000004(%ebx),%edi
		mov    0x00000a(%edx,%edi,1),%dx
		and    $0x00ffff,%edx
		movzbl 0x00006b(%ebx),%edi
		dec    %edx
		cmp    %edx,%edi

	_05dd4c_jump:
		sete   %ah
		xor    %edx,%edx
		mov    %ah,%dl
		test   %edx,%edx
		je     _05dd90_jump
		xor    %edx,%edx
		mov    0x00006d(%ebx),%dl
		mov    0x00000c(%ebx),%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    (%edi),%edi
		mov    0x00006c(%ebx),%dl
		mov    0x000005(%edi,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c24c8_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _05dd90_jump
		mov    $0x000032,%edx
		jmp    _05debb_jump

	_05dd90_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000002,%edx
		jle    _05de2c_jump
		xor    %edx,%edx
		mov    0x00006c(%ebx),%dl
		cmp    $0x000030,%edx
		jne    _05de2c_jump
		movzbl 0x00006d(%ebx),%edi
		mov    0x00000c(%ebx),%ebp
		shl    $0x000002,%edi
		add    %ebp,%edi
		mov    (%edi),%edi
		mov    0x000007(%edi,%edx,8),%ah
		test   $0x000010,%ah
		je     _05ddcb_jump
		xor    %edx,%edx
		mov    0x00006b(%ebx),%dl
		test   %edx,%edx
		jmp    _05dde8_jump

	_05ddcb_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebx),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000004(%ebx),%edi
		mov    0x00000a(%edx,%edi,1),%dx
		and    $0x00ffff,%edx
		movzbl 0x00006b(%ebx),%edi
		dec    %edx
		cmp    %edx,%edi

	_05dde8_jump:
		sete   %ah
		xor    %edx,%edx
		mov    %ah,%dl
		test   %edx,%edx
		je     _05de2c_jump
		xor    %edx,%edx
		mov    0x00006d(%ebx),%dl
		mov    0x00000c(%ebx),%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    (%edi),%edi
		mov    0x00006c(%ebx),%dl
		mov    0x000005(%edi,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c24c8_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _05de2c_jump
		mov    $0x000031,%edx
		jmp    _05debb_jump

	_05de2c_jump:
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jle    _05dec2_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x00002f,%eax
		jne    _05dec2_jump
		xor    %edx,%edx
		mov    0x00000c(%ebx),%edi
		mov    0x00006d(%ebx),%dl
		mov    (%edi,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05de63_jump
		xor    %eax,%eax
		mov    0x00006b(%ebx),%al
		test   %eax,%eax
		jmp    _05de80_jump

	_05de63_jump:
		xor    %eax,%eax
		mov    0x00006a(%ebx),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%ebx),%edx
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx

	_05de80_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05dec2_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05dec2_jump
		mov    $0x000030,%edx

	_05debb_jump:
		mov    %ebx,%eax
		call   _01d6e8_func

	_05dec2_jump:
		mov    %ebx,%eax
		call   _04b3f8_func

	_05dec9_jump:
		add    $0x000084,%ebx
		add    $0x000014,%ecx
		inc    %esi

	_05ded3_jump:
		movswl %si,%eax
		cmp    $0x000018,%eax
		jge    _05df9d_jump
		mov    0x000008(%ecx),%al
		test   $0x000004,%al
		jne    _05deea_jump
		test   $0x000002,%al
		je     _05dec9_jump

	_05deea_jump:
		mov    %ebx,%eax
		call   _0407b0_func
		xor    %eax,%eax
		mov    _0cd100_data,%al
		cmp    $0x000080,%eax
		jne    _05df66_jump
		testb  $0x000004,0x000008(%ecx)
		je     _05df66_jump
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a1c_data(%eax)
		jne    _05df49_jump
		xor    %eax,%eax
		mov    0x000007(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a1c_data(%eax)
		jne    _05df49_jump
		xor    %eax,%eax
		mov    0x000004(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a1c_data(%eax)
		jne    _05df49_jump
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a1c_data(%eax)
		je     _05df66_jump

	_05df49_jump:
		mov    0x000008(%ecx),%dh
		or     $0x000001,%dh
		mov    %dh,%al
		and    $0x0000f9,%al
		mov    $0x00002e,%edx
		mov    %al,0x000008(%ecx)
		mov    %ebx,%eax
		call   _01d6e8_func
		movb   $0x000001,(%esp)

	_05df66_jump:
		movswl %si,%eax
		cmp    $0x000011,%eax
		jne    _05db79_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x00003b,%eax
		je     _05db79_jump
		cmp    $0x00002e,%eax
		je     _05db79_jump
		testb  $0x000001,0x000008(%ecx)
		je     _05db79_jump
		mov    $0x00003b,%edx
		jmp    _05debb_jump

	_05df9d_jump:
		cmpb   $0x000000,(%esp)
		je     _05dfec_jump
		mov    $_094a14_data,%eax
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0cd100_data
		mov    $0x000001,%ecx
		jmp    _05dfbd_jump

	_05dfb9_jump:
		add    $0x000014,%eax
		inc    %edx

	_05dfbd_jump:
		movswl %dx,%ebx
		cmp    $0x000018,%ebx
		jge    _05dfec_jump
		mov    0x000008(%eax),%bl
		shl    $0x000006,%bl
		shr    $0x000007,%bl
		and    $0x0000ff,%ebx
		jne    _05dfb9_jump
		mov    0x000008(%eax),%bl
		and    %cl,%bl
		and    $0x0000ff,%ebx
		cmp    $0x000001,%ebx
		jne    _05dfb9_jump
		orb    $0x000002,0x000008(%eax)
		jmp    _05dfb9_jump

	_05dfec_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05dff8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c261c_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		mov    $0x000030,%ecx
		add    %edx,%eax
		mov    $_0c3326_data,%edi
		mov    $0x0000c1,%ebx
		mov    _094a24_data(,%eax,4),%esi
		mov    $0x0001c2,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%ah
		mov    %dx,_0c33f6_data
		mov    %bx,_0c33f8_data
		xor    %dl,%dl
		mov    %ah,_0c33fa_data
		mov    %dl,_0c33fc_data
		mov    %edi,%eax
		mov    %dl,_0c33fb_data
		call   _01f100_func
		mov    _0c261c_data,%edx
		mov    _0c33f0_data,%cx
		mov    _0c33f2_data,%si
		mov    _0c33f4_data,%di
		sar    $0x000010,%edx
		sub    $0x000006,%ecx
		add    $0x00000a,%esi
		lea    0x000000(,%edx,4),%eax
		add    $0x000006,%edi
		add    %edx,%eax
		mov    %cx,_0c33f0_data
		mov    %si,_0c33f2_data
		mov    _094a20_data(,%eax,4),%al
		mov    %di,_0c33f4_data
		mov    %al,_0c33fd_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05e0bc_switch:
		.long   _05e12d_case
		.long   _05e157_case
		.long   _05e1e7_case
		.long   _05e277_case

_05e0cc_switch:
		.long   _05e32a_case
		.long   _05e356_case
		.long   _05e382_case
		.long   _05e3ae_case
		.long   _05e3d7_case
		.long   _05e400_case
		.long   _05e307_case




_05e0e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x00004b,%eax
		call   _0750ac_func
		mov    _0c261c_data,%esi
		mov    %eax,%edx
		sar    $0x000010,%esi
		mov    %eax,%ebp
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000002,%eax
		mov    _094a1e_data(%eax),%bh
		dec    %bh
		cmp    $0x000006,%bh
		ja     _05e427_jump
		movzbl %bh,%esi
		jmp    *%cs:_05e0cc_switch(,%esi,4)

	_05e12d_case:
		mov    $_0c34d6_data,%edi
		mov    _0cda04_data,%esi
		push   %edi

	_05e139_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e151_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e139_jump

	_05e151_jump:
		pop    %edi
		jmp    _05e427_jump

	_05e157_case:
		mov    $_0c0570_data,%esi
		mov    %edx,%edi
		push   %edi

	_05e15f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e177_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e15f_jump

	_05e177_jump:
		pop    %edi
		mov    $_0cd090_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_05e186_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e19e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e186_jump

	_05e19e_jump:
		pop    %edi
		mov    $_0c0572_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_05e1ad_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e1c5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e1ad_jump

	_05e1c5_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0c34d6_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _05e427_jump

	_05e1e7_case:
		mov    $_0c0574_data,%esi
		mov    %edx,%edi
		push   %edi

	_05e1ef_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e207_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e1ef_jump

	_05e207_jump:
		pop    %edi
		mov    $_0cd094_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_05e216_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e22e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e216_jump

	_05e22e_jump:
		pop    %edi
		mov    $_0c0576_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_05e23d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e255_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e23d_jump

	_05e255_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0c34d6_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _05e427_jump

	_05e277_case:
		mov    $_0c0578_data,%esi
		mov    %edx,%edi
		push   %edi

	_05e27f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e297_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e27f_jump

	_05e297_jump:
		pop    %edi
		mov    $_0cd098_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_05e2a6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e2be_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e2a6_jump

	_05e2be_jump:
		pop    %edi
		mov    $_0c057a_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_05e2cd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e2e5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e2cd_jump

	_05e2e5_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0c34d6_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _05e427_jump

	_05e307_case:
		mov    _094a20_data(%eax),%bl
		mov    _0cd0be_data,%ax
		cmp    $0x000003,%ax
		ja     _05e427_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_05e0bc_switch(,%eax,4)

	_05e32a_case:
		mov    $_0c34d6_data,%edi
		mov    _0cd7e0_data,%esi
		mov    $0x000005,%bl
		push   %edi

	_05e338_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e350_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e338_jump

	_05e350_jump:
		pop    %edi
		jmp    _05e427_jump

	_05e356_case:
		mov    $_0c34d6_data,%edi
		mov    _0cd7e4_data,%esi
		mov    $0x000003,%bl
		push   %edi

	_05e364_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e37c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e364_jump

	_05e37c_jump:
		pop    %edi
		jmp    _05e427_jump

	_05e382_case:
		mov    $_0c34d6_data,%edi
		mov    _0cd7e8_data,%esi
		push   %edi

	_05e38e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e3a6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e38e_jump

	_05e3a6_jump:
		pop    %edi
		xor    %bl,%bl
		jmp    _05e427_jump

	_05e3ae_case:
		mov    $_0c34d6_data,%edi
		mov    _0cd7ec_data,%esi
		mov    $0x000002,%bl
		push   %edi

	_05e3bc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e3d4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e3bc_jump

	_05e3d4_jump:
		pop    %edi
		jmp    _05e427_jump

	_05e3d7_case:
		mov    $_0c34d6_data,%edi
		mov    _0cd7f0_data,%esi
		mov    $0x000001,%bl
		push   %edi

	_05e3e5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e3fd_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e3e5_jump

	_05e3fd_jump:
		pop    %edi
		jmp    _05e427_jump

	_05e400_case:
		mov    $_0c34d6_data,%edi
		mov    _0cd7f4_data,%esi
		mov    $0x000001,%bl
		push   %edi

	_05e40e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e426_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e40e_jump

	_05e426_jump:
		pop    %edi

	_05e427_jump:
		mov    $0x000001,%ah
		mov    $0x0001c2,%edx
		mov    $0x00001e,%ecx
		mov    %bl,_0c35ad_data
		mov    %ah,_0c35aa_data
		mov    %dx,_0c35a6_data
		mov    %cx,_0c35a8_data
		xor    %dl,%dl
		mov    $_0c34d6_data,%eax
		mov    %dl,_0c35ac_data
		mov    %dl,_0c35ab_data
		call   _01f100_func
		mov    _0c35a2_data,%si
		mov    _0c35a4_data,%di
		mov    %ebp,%eax
		add    $0x00000a,%esi
		add    $0x000002,%edi
		mov    %si,_0c35a2_data
		mov    %di,_0c35a4_data
		call   _075258_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e498_func:
		push   %ebx
		push   %edx
		push   %esi
		call   _01efa0_func
		call   _05dff8_func
		call   _05e0e8_func
		mov    $0x0000a0,%edx
		mov    $0x0000fa,%ebx
		mov    $0xffffffce,%esi
		xor    %ah,%ah
		mov    %dx,_0c34ce_data
		mov    %bx,_0c34d0_data
		mov    %ah,_0c34d3_data
		mov    %ah,_0c34d4_data
		mov    %dx,_0c367e_data
		mov    %si,_0c3680_data
		mov    %ah,_0c3683_data
		mov    %ah,_0c3684_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_05e580_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		cmpb   $0x000000,_0cdf9d_data
		jne    _05e661_jump
		mov    _0c33f4_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000a0,%eax
		jle    _05e5c7_jump
		mov    _0c33f6_data,%dx
		mov    _0c33ee_data,%bx
		sub    $0x000006,%edx
		sub    $0x000006,%ebx
		mov    %dx,_0c33f6_data
		mov    %bx,_0c33ee_data

	_05e5c7_jump:
		mov    _0c35a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000a0,%eax
		jle    _05e5f8_jump
		mov    _0c35a6_data,%cx
		mov    _0c359e_data,%si
		sub    $0x000006,%ecx
		sub    $0x000006,%esi
		mov    %cx,_0c35a6_data
		mov    %si,_0c359e_data

	_05e5f8_jump:
		mov    _0c34ce_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000125,%eax
		jge    _05e629_jump
		mov    _0c34d0_data,%di
		mov    _0c34c8_data,%ax
		add    $0x000002,%edi
		add    $0x000002,%eax
		mov    %di,_0c34d0_data
		mov    %ax,_0c34c8_data

	_05e629_jump:
		mov    _0c367e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffba,%eax
		jle    _05ea47_jump
		mov    _0c3680_data,%dx
		mov    _0c3678_data,%bx
		sub    $0x000002,%edx
		sub    $0x000002,%ebx
		mov    %dx,_0c3680_data
		mov    %bx,_0c3678_data
		jmp    _05ea47_jump

	_05e661_jump:
		cmpb   $0x000000,_0ce4dc_data
		jne    _05ea47_jump
		mov    $_0c3326_data,%edx
		mov    $_0ce500_data,%edi
		mov    $0x000001,%ebx
		mov    %edx,%esi
		mov    %edx,0x00001c(%esp)
		push   %edi

	_05e684_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e69c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e684_jump

	_05e69c_jump:
		pop    %edi
		xor    %eax,%eax
		mov    %ebx,0x000008(%esp)
		mov    _0c33fd_data,%al
		mov    $0x000008,%esi
		mov    %eax,_0ce4d0_data
		xor    %eax,%eax
		mov    %edx,%edi
		mov    _0c33fa_data,%al
		mov    %esi,0x00000c(%esp)
		mov    %eax,_0ce4d8_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0c33f4_data,%eax
		mov    %ecx,_0cdfc8_data
		sar    $0x000010,%eax
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %ecx,%ecx
		jle    _05e810_jump
		mov    %edx,0x000014(%esp)
		xor    %esi,%esi

	_05e6ef_jump:
		mov    0x000014(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		call   _01eff4_func
		mov    (%edx),%bl
		cmp    $0x00002f,%bl
		jne    _05e734_jump
		mov    0x00001c(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    0x00000a(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %edi,%edx
		mov    $_0c3326_data,%eax
		call   _01f0a4_func
		cwtl   
		mov    (%esp),%ebp
		sar    %eax
		sub    %eax,%ebp
		jmp    _05e73c_jump

	_05e734_jump:
		cmp    $0x000020,%bl
		jne    _05e73e_jump
		add    $0x000008,%ebp

	_05e73c_jump:
		xor    %al,%al

	_05e73e_jump:
		test   %al,%al
		je     _05e7f5_jump
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0c248c_data,%edx
		add    %eax,%edx
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0ce15c_data(%esi)
		mov    0x00001c(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		mov    %esi,%ecx
		shl    $0x000004,%eax
		mov    %edx,0x000024(%esp)
		mov    %eax,_0ce224_data(%esi)
		xor    %edx,%edx
		mov    %edx,_0ce3dc_data(%esi)
		jne    _05e7c1_jump

	_05e787_jump:
		mov    _0cdfc8_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %edi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _061dd0_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %edx,%ebx
		mov    %ebx,_0ce3dc_data(%ecx)
		je     _05e787_jump

	_05e7c1_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _061dd0_func
		cwtl   
		sub    %eax,%edx
		mov    0x000024(%esp),%eax
		mov    %edx,_0ce454_data(%ecx)
		mov    0x000009(%eax),%al
		and    $0x00000f,%al
		mov    0x000024(%esp),%ebx
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebx),%dl
		add    %edx,%eax
		dec    %eax
		add    %eax,%ebp

	_05e7f5_jump:
		mov    0x000014(%esp),%eax
		mov    _0cdfc8_data,%edx
		add    $0x000004,%esi
		inc    %eax
		inc    %edi
		mov    %eax,0x000014(%esp)
		cmp    %edx,%edi
		jl     _05e6ef_jump

	_05e810_jump:
		mov    $_0c34d6_data,%ebx
		mov    $_0ce4e0_data,%edi
		mov    %ebx,%esi
		push   %edi

	_05e81d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e835_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e81d_jump

	_05e835_jump:
		pop    %edi
		xor    %eax,%eax
		mov    %ebx,0x000004(%esp)
		mov    _0c35ad_data,%al
		mov    $0x000003,%esi
		mov    %eax,_0ce4cc_data
		xor    %eax,%eax
		mov    %ebx,%edi
		mov    _0c35aa_data,%al
		mov    %esi,0x000008(%esp)
		mov    %eax,_0ce4d4_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x00000a,%edi
		mov    _0c35a4_data,%eax
		mov    %ecx,_0cdfc4_data
		sar    $0x000010,%eax
		mov    %edi,0x00000c(%esp)
		mov    %eax,0x000018(%esp)
		xor    %edi,%edi
		test   %ecx,%ecx
		jle    _05e9b9_jump
		mov    %ebx,0x000010(%esp)
		xor    %esi,%esi

	_05e892_jump:
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		call   _01eff4_func
		mov    (%edx),%ch
		cmp    $0x00002f,%ch
		jne    _05e8d8_jump
		mov    0x000004(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    0x00000a(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %edi,%edx
		mov    $_0c34d6_data,%eax
		call   _01f0a4_func
		cwtl   
		mov    0x000018(%esp),%ebp
		sar    %eax
		sub    %eax,%ebp
		jmp    _05e8e0_jump

	_05e8d8_jump:
		cmp    $0x000020,%ch
		jne    _05e8e2_jump
		add    $0x00000a,%ebp

	_05e8e0_jump:
		xor    %al,%al

	_05e8e2_jump:
		test   %al,%al
		je     _05e99e_jump
		and    $0x0000ff,%eax
		add    $0x000029,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0c2498_data,%edx
		add    %eax,%edx
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0cdfcc_data(%esi)
		mov    0x000004(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		mov    %esi,%ecx
		shl    $0x000004,%eax
		mov    %edx,0x000020(%esp)
		mov    %eax,_0ce094_data(%esi)
		xor    %eax,%eax
		mov    %eax,_0ce2ec_data(%esi)
		jne    _05e968_jump

	_05e92e_jump:
		mov    _0cdfc4_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %edi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _061dd0_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %ebx,%edx
		mov    %edx,_0ce2ec_data(%ecx)
		je     _05e92e_jump

	_05e968_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _061dd0_func
		cwtl   
		sub    %eax,%edx
		mov    0x000020(%esp),%eax
		mov    %edx,_0ce364_data(%ecx)
		mov    0x000009(%eax),%al
		and    $0x00000f,%al
		mov    0x000020(%esp),%ebx
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebx),%dl
		add    %edx,%eax
		sub    $0x000003,%eax
		add    %eax,%ebp

	_05e99e_jump:
		mov    0x000010(%esp),%edx
		mov    _0cdfc4_data,%ebx
		add    $0x000004,%esi
		inc    %edx
		inc    %edi
		mov    %edx,0x000010(%esp)
		cmp    %ebx,%edi
		jl     _05e892_jump

	_05e9b9_jump:
		mov    $0x000001,%cl
		mov    $_0c34d6_data,%esi
		mov    $_0c35ae_data,%edi
		mov    %cl,_0ce4dc_data
		push   %edi

	_05e9cc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05e9e4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05e9cc_jump

	_05e9e4_jump:
		pop    %edi
		mov    $0x0001c2,%ecx
		mov    $0x00001e,%esi
		mov    _0c35ad_data,%al
		mov    $_0c33fe_data,%edi
		mov    %al,_0c3685_data
		mov    %si,_0c35a8_data
		mov    $_0c3326_data,%esi
		mov    %cx,_0c35a6_data
		push   %edi

	_05ea12_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05ea2a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05ea12_jump

	_05ea2a_jump:
		pop    %edi
		mov    _0c33fd_data,%al
		mov    %al,_0c34d5_data
		mov    $0x0000c1,%eax
		mov    %cx,_0c33f6_data
		mov    %ax,_0c33f8_data

	_05ea47_jump:
		xor    %eax,%eax
		mov    _0ce4dc_data,%al
		cmp    $0x000001,%eax
		jne    _05ec59_jump
		mov    $0x000001,%cl
		mov    _0cdfc4_data,%edi
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _05eb52_jump
		xor    %edx,%edx

	_05ea6b_jump:
		mov    _0ce4e0_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _05eac6_jump
		cmp    $0x000020,%ah
		je     _05eac6_jump
		mov    _0ce364_data(%edx),%eax
		mov    _0ce094_data(%edx),%ebp
		add    %eax,%ebp
		mov    %ebp,_0ce094_data(%edx)
		cmp    $0x000c80,%ebp
		jl     _05eae8_jump
		movl   $0x000c80,_0ce094_data(%edx)
		test   %eax,%eax
		jge    _05eaa7_jump
		neg    %eax

	_05eaa7_jump:
		cmp    $0x000008,%eax
		jge    _05eada_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _061dd0_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0ce364_data(%edx)
		jmp    _05eae8_jump

	_05eac6_jump:
		mov    _0cdfc4_data,%esi
		inc    %ebx
		add    $0x000004,%edx
		cmp    %esi,%ebx
		jge    _05eb52_jump
		jmp    _05ea6b_jump

	_05eada_jump:
		mov    _0ce364_data(%edx),%eax
		neg    %eax
		mov    %eax,_0ce364_data(%edx)

	_05eae8_jump:
		mov    _0ce364_data(%edx),%edi
		mov    _0ce2ec_data(%edx),%eax
		mov    _0cdfcc_data(%edx),%ebp
		inc    %edi
		add    %eax,%ebp
		xor    %eax,%eax
		mov    %edi,_0ce364_data(%edx)
		mov    _0ce4dc_data,%al
		mov    %ebp,_0cdfcc_data(%edx)
		cmp    $0x000001,%eax
		jne    _05eb31_jump
		test   %ebp,%ebp
		jle    _05eb21_jump
		cmp    $0x001310,%ebp
		jl     _05eb31_jump

	_05eb21_jump:
		mov    _0ce2ec_data(%edx),%eax
		neg    %eax
		mov    %eax,_0ce2ec_data(%edx)
		jmp    _05eac6_jump

	_05eb31_jump:
		mov    _0cdfcc_data(%edx),%edi
		cmp    $0xfffffec0,%edi
		jle    _05eac6_jump
		cmp    $0x001400,%edi
		jge    _05eac6_jump
		xor    %cl,%cl
		jmp    _05eac6_jump

	_05eb52_jump:
		mov    _0cdfc8_data,%edi
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _05ec40_jump
		mov    $0x000c80,%ebp
		xor    %edx,%edx

	_05eb69_jump:
		mov    _0ce500_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _05ebc0_jump
		cmp    $0x000020,%ah
		je     _05ebc0_jump
		mov    _0ce454_data(%edx),%eax
		mov    _0ce224_data(%edx),%esi
		add    %eax,%esi
		mov    %esi,_0ce224_data(%edx)
		cmp    $0x000c80,%esi
		jl     _05ebe1_jump
		mov    %ebp,_0ce224_data(%edx)
		test   %eax,%eax
		jge    _05eba1_jump
		neg    %eax

	_05eba1_jump:
		cmp    $0x000008,%eax
		jge    _05ebd3_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _061dd0_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0ce454_data(%edx)
		jmp    _05ebe1_jump

	_05ebc0_jump:
		mov    _0cdfc8_data,%eax
		inc    %ebx
		add    $0x000004,%edx
		cmp    %eax,%ebx
		jge    _05ec40_jump
		jmp    _05eb69_jump

	_05ebd3_jump:
		mov    _0ce454_data(%edx),%eax
		neg    %eax
		mov    %eax,_0ce454_data(%edx)

	_05ebe1_jump:
		mov    _0ce454_data(%edx),%eax
		inc    %eax
		mov    _0ce15c_data(%edx),%esi
		mov    %eax,_0ce454_data(%edx)
		add    _0ce3dc_data(%edx),%esi
		xor    %eax,%eax
		mov    _0ce4dc_data,%al
		mov    %esi,_0ce15c_data(%edx)
		cmp    $0x000001,%eax
		jne    _05ec28_jump
		test   %esi,%esi
		jle    _05ec18_jump
		cmp    $0x001360,%esi
		jl     _05ec28_jump

	_05ec18_jump:
		mov    _0ce3dc_data(%edx),%eax
		neg    %eax
		mov    %eax,_0ce3dc_data(%edx)
		jmp    _05ebc0_jump

	_05ec28_jump:
		mov    _0ce15c_data(%edx),%eax
		cmp    $0xfffffec0,%eax
		jle    _05ebc0_jump
		cmp    $0x001400,%eax
		jge    _05ebc0_jump
		xor    %cl,%cl
		jmp    _05ebc0_jump

	_05ec40_jump:
		test   %cl,%cl
		je     _05eefe_jump
		xor    %al,%al
		mov    %al,_0ce4dc_data
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ec59_jump:
		cmp    $0x000002,%eax
		jne    _05edf8_jump
		mov    _0cdfc4_data,%esi
		xor    %ecx,%ecx
		test   %esi,%esi
		jle    _05ed24_jump
		xor    %ebx,%ebx

	_05ec74_jump:
		mov    _0ce4e0_data(%ecx),%al
		cmp    $0x00002f,%al
		je     _05ecb7_jump
		cmp    $0x000020,%al
		je     _05ecb7_jump
		mov    _0ce094_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _05ec93_jump
		neg    %eax

	_05ec93_jump:
		mov    %eax,%edx
		mov    _0cdfcc_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _05eca6_jump
		neg    %eax

	_05eca6_jump:
		cmp    %eax,%edx
		jle    _05ecc7_jump
		mov    _0ce094_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _05ecd2_jump

	_05ecb7_jump:
		mov    _0cdfc4_data,%ebp
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %ebp,%ecx
		jge    _05ed24_jump
		jmp    _05ec74_jump

	_05ecc7_jump:
		mov    _0cdfcc_data(%ebx),%eax
		sub    $0x000a00,%eax

	_05ecd2_jump:
		test   %eax,%eax
		jge    _05ecd8_jump
		neg    %eax

	_05ecd8_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _061dd0_func
		movswl %ax,%edi
		mov    _0cdfcc_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0ce094_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0ce2ec_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0ce364_data(%ebx)
		jmp    _05ecb7_jump

	_05ed24_jump:
		mov    _0cdfc8_data,%eax
		xor    %ecx,%ecx
		test   %eax,%eax
		jle    _05ede7_jump
		xor    %ebx,%ebx

	_05ed35_jump:
		mov    _0ce500_data(%ecx),%dh
		cmp    $0x00002f,%dh
		je     _05ed7a_jump
		cmp    $0x000020,%dh
		je     _05ed7a_jump
		mov    _0ce224_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _05ed56_jump
		neg    %eax

	_05ed56_jump:
		mov    %eax,%edx
		mov    _0ce15c_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _05ed69_jump
		neg    %eax

	_05ed69_jump:
		cmp    %eax,%edx
		jle    _05ed8a_jump
		mov    _0ce224_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _05ed95_jump

	_05ed7a_jump:
		mov    _0cdfc8_data,%edx
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %edx,%ecx
		jge    _05ede7_jump
		jmp    _05ed35_jump

	_05ed8a_jump:
		mov    _0ce15c_data(%ebx),%eax
		sub    $0x000a00,%eax

	_05ed95_jump:
		test   %eax,%eax
		jge    _05ed9b_jump
		neg    %eax

	_05ed9b_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _061dd0_func
		movswl %ax,%edi
		mov    _0ce15c_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0ce224_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0ce3dc_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0ce454_data(%ebx)
		jmp    _05ed7a_jump

	_05ede7_jump:
		movb   $0x000003,_0ce4dc_data
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05edf8_jump:
		cmp    $0x000003,%eax
		jne    _05eefe_jump
		mov    $0x000001,%al
		mov    _0cdfc4_data,%ecx
		xor    %ebx,%ebx
		test   %ecx,%ecx
		jle    _05ee7b_jump
		mov    _0cdfc4_data,%ebp
		xor    %edx,%edx

	_05ee1b_jump:
		mov    _0ce4e0_data(%ebx),%cl
		cmp    $0x00002f,%cl
		je     _05ee73_jump
		cmp    $0x000020,%cl
		je     _05ee73_jump
		mov    _0ce364_data(%edx),%ecx
		mov    _0ce094_data(%edx),%esi
		mov    _0cdfcc_data(%edx),%edi
		add    %ecx,%esi
		add    _0ce2ec_data(%edx),%edi
		mov    %esi,_0ce094_data(%edx)
		mov    %edi,_0cdfcc_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _05ee73_jump
		cmp    $0x001400,%edi
		jge    _05ee73_jump
		cmp    $0xfffffec0,%esi
		jle    _05ee73_jump
		cmp    $0x000c80,%esi
		jge    _05ee73_jump
		xor    %al,%al

	_05ee73_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _05ee1b_jump

	_05ee7b_jump:
		mov    _0cdfc8_data,%edx
		xor    %ebx,%ebx
		test   %edx,%edx
		jle    _05eef3_jump
		mov    _0cdfc8_data,%ebp
		xor    %edx,%edx

	_05ee93_jump:
		mov    _0ce500_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _05eeeb_jump
		cmp    $0x000020,%ah
		je     _05eeeb_jump
		mov    _0ce454_data(%edx),%ecx
		mov    _0ce224_data(%edx),%esi
		mov    _0ce15c_data(%edx),%edi
		add    %ecx,%esi
		add    _0ce3dc_data(%edx),%edi
		mov    %esi,_0ce224_data(%edx)
		mov    %edi,_0ce15c_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _05eeeb_jump
		cmp    $0x001400,%edi
		jge    _05eeeb_jump
		cmp    $0xfffffec0,%esi
		jle    _05eeeb_jump
		cmp    $0x000c80,%esi
		jge    _05eeeb_jump
		xor    %al,%al

	_05eeeb_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _05ee93_jump

	_05eef3_jump:
		test   %al,%al
		je     _05eefe_jump
		xor    %al,%al
		mov    %al,_0ce4dc_data

	_05eefe_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ef08_func:
		push   %ecx
		push   %edx
		xor    %edx,%edx
		jmp    _05ef1f_jump

	_05ef0e_jump:
		imul   $0x000014,%eax,%ecx
		mov    _0cd780_data(,%eax,4),%eax
		inc    %edx
		mov    %eax,_094a24_data(%ecx)

	_05ef1f_jump:
		movswl %dx,%eax
		cmp    $0x000018,%eax
		jl     _05ef0e_jump
		mov    $0x000001,%ecx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0c2522_data
		mov    %dx,_0c2520_data
		mov    %cx,_0c251e_data
		mov    %cx,_0c251c_data
		mov    %ah,_0c261c_data
		mov    %dx,_0c330c_data
		xor    %al,%al
		mov    $0x000001,%dl
		mov    %ax,_0c330e_data
		mov    %dl,_0c3310_data
		mov    %ah,_0cd10e_data
		mov    %ah,_0c2595_data
		xor    %dh,%dh
		call   _05f444_func
		mov    %dh,_0cd775_data
		pop    %edx
		pop    %ecx
		ret    



_05ef88_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000084,%ecx
		mov    $_0c1b4c_data,%esi
		mov    $_0c1c54_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0c1cd8_data,%eax
		mov    $0x000100,%edx
		mov    %eax,_0c1b4c_data
		mov    _0c1ce0_data,%eax
		mov    %dx,_0c1ba6_data
		mov    %eax,_0c1b54_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_05efd0_func:
		push   %edx
		mov    _0c1c54_data,%eax
		mov    %eax,_0c1b4c_data
		mov    _0c1c5c_data,%eax
		xor    %edx,%edx
		mov    %eax,_0c1b54_data
		mov    _0c1c98_data,%ax
		mov    %dx,_0c1ba6_data
		mov    %ax,_0c1b90_data
		pop    %edx
		ret    



_05effc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    $0x000001,%dl
		xor    %ah,%ah
		mov    _0cdb18_data,%bl
		mov    %ah,_0cd105_data
		mov    %dl,_0c51b5_data
		mov    %ah,_0c2612_data
		test   %bl,%bl
		jne    _05f035_jump
		xor    %edx,%edx
		mov    _0c261c_data,%al
		mov    %dx,_0c251e_data
		mov    %ax,_0c261e_data

	_05f035_jump:
		mov    _0c261e_data,%al
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,_0c261b_data
		call   _05ef88_func
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    _0c261c_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _094a12_data(,%eax,4),%ebx
		mov    _0c1bb4_data,%dl
		sar    $0x000010,%ebx
		xor    %ecx,%ecx
		sub    %edx,%ebx
		xor    %esi,%esi
		add    $0x000004,%ebx
		mov    _094a14_data(,%eax,4),%edx
		mov    %ebx,_0c1b74_data
		sar    $0x000010,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0c1bb5_data,%al
		mov    %bx,_0c1b8c_data
		sub    %eax,%edx
		mov    %bx,_0c1b8e_data
		add    $0x000008,%edx
		xor    %eax,%eax
		xor    %bh,%bh
		mov    %edx,_0c1b78_data
		call   _01d52c_func
		xor    %bl,%cl
		mov    %bh,_0cd100_data
		mov    %bh,_0c3311_data
		mov    $_0c2624_data,%ebx
		jmp    _05f16d_jump

	_05f0d2_jump:
		xor    %edx,%edx
		mov    _094a1d_data(%eax),%dl
		test   %edx,%edx
		je     _05f0f5_jump
		add    %dl,_0c3311_data
		cmp    $0x000006,%edx
		jne    _05f0ef_jump
		movb   $0x000034,0x00006e(%ebx)
		jmp    _05f108_jump

	_05f0ef_jump:
		movb   $0x00002f,0x00006e(%ebx)
		jmp    _05f108_jump

	_05f0f5_jump:
		cmp    $0x000011,%ebp
		jne    _05f104_jump
		movb   $0x00003b,0x00006c(%ebx)
		movb   $0x00003b,0x00006e(%ebx)
		jmp    _05f108_jump

	_05f104_jump:
		movb   $0x000027,0x00006e(%ebx)

	_05f108_jump:
		movw   $0x000000,0x00005a(%ebx)
		movb   $0x000050,0x000068(%ebx)
		mov    %ebx,%eax
		movb   $0x000040,0x000069(%ebx)
		call   _053c9c_func
		mov    %ebx,%eax
		call   _0407b0_func
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		mov    0x000002(%edx,%eax,8),%al
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%ebx),%edx
		movzwl 0x00000a(%edx,%eax,1),%ebp
		movswl %si,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		inc    %cl
		xor    %eax,%eax
		mov    %cl,%al
		mov    %dl,0x00006b(%ebx)
		cmp    $0x000018,%eax
		jle    _05f166_jump
		mov    $0x000018,%cl

	_05f166_jump:
		add    $0x000084,%ebx
		inc    %esi

	_05f16d_jump:
		movswl %si,%ebp
		cmp    $0x000018,%ebp
		jge    _05f1b8_jump
		xor    %eax,%eax
		mov    %cl,%al
		imul   $0x000014,%eax,%eax
		movw   $0x000036,0x000060(%ebx)
		mov    _094a14_data(%eax),%dx
		sub    $0x00004e,%edx
		mov    %dx,0x00003c(%ebx)
		mov    _094a16_data(%eax),%dx
		sub    $0x000040,%edx
		movb   $0x000005,0x00006f(%ebx)
		mov    %dx,0x00003e(%ebx)
		testb  $0x000004,_094a1c_data(%eax)
		je     _05f0d2_jump
		movb   $0x00002e,0x00006e(%ebx)
		jmp    _05f108_jump

	_05f1b8_jump:
		mov    _094b70_data,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _05f1d7_jump
		mov    _0c3311_data,%al
		cmp    $0x000066,%eax
		jl     _05f1d7_jump
		orb    $0x000004,_094b70_data

	_05f1d7_jump:
		mov    _0c24ac_data,%ax
		mov    %ax,_0c3308_data
		mov    _0c24ae_data,%ax
		mov    %ax,_0c330a_data
		mov    _0c330c_data,%ax
		mov    %ax,_0c24ac_data
		mov    _0c330e_data,%ax
		mov    %ax,_0c24ae_data
		call   _03f8cc_func
		mov    $0x00001e,%eax
		mov    %ax,_0c24be_data
		mov    %ax,_0c24c0_data
		mov    _0c3310_data,%al
		and    $0x000001,%al
		mov    _0c1bcd_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0c1bcd_data
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0xffffffff,%esi
		or     %al,%dl
		mov    %si,_0c1b28_data
		mov    %dl,_0c1bcd_data
		mov    _0cd101_data,%dh
		mov    %si,_0c1b2a_data
		test   %dh,%dh
		je     _05f27c_jump
		xor    %eax,%eax
		mov    _0cd102_data,%al
		test   %eax,%eax
		je     _05f274_jump
		xor    %eax,%eax
		mov    _0cd0be_data,%al
		call   _06a7e0_func

	_05f274_jump:
		xor    %bl,%bl
		mov    %bl,_0cd101_data

	_05f27c_jump:
		call   _05f444_func
		call   _05e498_func
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f3ac_func:
		ret    



_05f3b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _049e14_func
		call   _03fc90_func
		mov    _0c24f0_data,%edx
		mov    _0c24ee_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _040080_func
		call   _040800_func
		testb  $0x000008,_0c1bcd_data
		je     _05f407_jump
		xor    %eax,%eax
		mov    _0c1b84_data,%cx
		mov    _0c1bb5_data,%al
		add    %ecx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0c1b82_data,%si
		mov    _0c1bb4_data,%al
		add    %esi,%eax
		jmp    _05f42a_jump

	_05f407_jump:
		xor    %eax,%eax
		mov    _0c1b84_data,%dx
		mov    _0c1bb5_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0c1b82_data,%bx
		mov    _0c1bb4_data,%al
		add    %ebx,%eax

	_05f42a_jump:
		cwtl   
		call   _01d43c_func
		mov    $_0c1b4c_data,%eax
		call   _04b3f8_func
		call   _05db34_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f444_func:
		xor    %eax,%eax
		mov    _0cd102_data,%al
		test   %eax,%eax
		je     _05f456_jump
		mov    _0cd9d8_data,%eax
		jmp    _05f45b_jump

	_05f456_jump:
		mov    _0cd9e0_data,%eax

	_05f45b_jump:
		mov    %eax,_094b8c_data
		mov    %eax,_094ba0_data
		mov    %eax,_094bb4_data
		mov    %eax,_094bc8_data
		mov    %eax,_094bdc_data
		mov    %eax,_094bf0_data
		ret    



_05f4a0_func:
		push   %edx
		mov    _0c24ac_data,%ax
		mov    %ax,_0c330c_data
		mov    _0c24ae_data,%ax
		mov    %ax,_0c330e_data
		mov    _0c3308_data,%ax
		mov    %ax,_0c24ac_data
		mov    _0c330a_data,%ax
		mov    %ax,_0c24ae_data
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,_0c3310_data
		call   _05efd0_func
		call   _05f444_func
		xor    %ah,%ah
		mov    %ah,_0cd105_data
		xor    %eax,%eax
		mov    _0c1bc2_data,%al
		cmp    $0x0000ff,%eax
		jne    _05f509_jump
		xor    %dl,%dl
		mov    %dl,_0c1bc2_data

	_05f509_jump:
		pop    %edx
		ret    



_05f50c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c261e_data,%al
		mov    %al,_0c261c_data
		cmpb   $0x000000,_0cdb18_data
		jne    _05f558_jump
		mov    _0c261c_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _094a1f_data(,%eax,4),%dl
		mov    %dx,_0c2620_data
		mov    _094a1e_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0c261e_data
		call   _025b10_func

	_05f558_jump:
		mov    _0c3315_data,%dl
		mov    _0c261c_data,%eax
		and    $0x0000fb,%dl
		sar    $0x000010,%eax
		mov    %dl,_0c3315_data
		cmp    $0x000005,%eax
		jne    _05f5a8_jump
		mov    _0c261e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _05f5a8_jump
		testb  $0x000002,_0c331d_data
		je     _05f5a8_jump
		mov    %dl,%dh
		mov    _0c2620_data,%bx
		or     $0x000004,%dh
		inc    %ebx
		mov    %dh,_0c3315_data
		mov    %bx,_0c2620_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f5a8_jump:
		mov    _0c261c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _05f5df_jump
		mov    _0c261e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _05f5df_jump
		testb  $0x000002,_0c331d_data
		je     _05f5df_jump
		cmpb   $0x000000,_0cdb18_data
		je     _05f5df_jump
		orb    $0x000004,_0c3315_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f5df_jump:
		mov    _0c261c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _05f615_jump
		testb  $0x000080,_0c331c_data
		je     _05f615_jump
		mov    $0x000001,%ch
		mov    $0x000001,%edx
		mov    %ch,_0cd10e_data
		mov    %ch,_0c2595_data
		mov    %dx,_0c251e_data
		mov    %ch,_0cd119_data

	_05f615_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f834_func:
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    $0x000001,%esi
		mov    %dx,_0cd0d8_data
		mov    %dx,_0cd0da_data
		mov    %dx,_0cd0be_data
		mov    %dx,_0cd0c0_data
		mov    %dx,_0cd0b2_data
		mov    %dx,_0cd0ec_data
		mov    %dx,_0cd0f6_data
		mov    %dx,_0cd0e4_data
		mov    %dx,_0cd0e6_data
		mov    %si,_0cd0b4_data
		pop    %esi
		pop    %edx
		ret    



_05f888_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _03e0a4_func
		test   %ax,%ax
		je     _05f92f_jump
		call   _03e18c_func
		test   %ax,%ax
		jne    _05f92f_jump
		call   _03e118_func
		test   %ax,%ax
		jne    _05f92f_jump
		cmpw   $0x000000,_0cd0c0_data
		jne    _05f92f_jump
		cmpb   $0x000000,_0c2503_data
		jne    _05f8f9_jump
		mov    _0cd0c4_data,%ax
		cmp    _0cd0dc_data,%ax
		jle    _05f92f_jump
		mov    _0cd0c2_data,%edx
		mov    _0cd0e0_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _05f92f_jump

	_05f8f9_jump:
		mov    _0cd0b8_data,%ax
		cmp    _0cd0b0_data,%ax
		jne    _05f913_jump
		movw   $0x000001,_0cd0b8_data
		jmp    _05f91d_jump

	_05f913_jump:
		mov    %eax,%esi
		inc    %esi
		mov    %si,_0cd0b8_data

	_05f91d_jump:
		xor    %edx,%edx
		mov    $0x000044,%eax
		mov    %edx,_0cdb24_data
		call   _068d70_func

	_05f92f_jump:
		call   _03e030_func
		test   %ax,%ax
		je     _05f9cd_jump
		call   _03e18c_func
		test   %ax,%ax
		jne    _05f9cd_jump
		call   _03e118_func
		test   %ax,%ax
		jne    _05f9cd_jump
		cmpw   $0x000000,_0cd0c0_data
		jne    _05f9cd_jump
		cmpb   $0x000000,_0c2503_data
		jne    _05f998_jump
		mov    _0cd0c4_data,%ax
		cmp    _0cd0dc_data,%ax
		jle    _05f9cd_jump
		mov    _0cd0c2_data,%edx
		mov    _0cd0e0_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _05f9cd_jump

	_05f998_jump:
		mov    _0cd0b6_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jne    _05f9b4_jump
		mov    _0cd0b0_data,%ax
		mov    %ax,_0cd0b8_data
		jmp    _05f9bb_jump

	_05f9b4_jump:
		decw   _0cd0b8_data

	_05f9bb_jump:
		xor    %ebx,%ebx
		mov    $0x000044,%eax
		mov    %ebx,_0cdb24_data
		call   _068d70_func

	_05f9cd_jump:
		call   _03e18c_func
		test   %ax,%ax
		je     _05fa62_jump
		call   _03e030_func
		test   %ax,%ax
		jne    _05fa62_jump
		call   _03e0a4_func
		test   %ax,%ax
		jne    _05fa62_jump
		cmpb   $0x000000,_0c2503_data
		jne    _05fa2c_jump
		mov    _0cd0c4_data,%ax
		cmp    _0cd0dc_data,%ax
		jle    _05fa62_jump
		mov    _0cd0c2_data,%edx
		mov    _0cd0e0_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _05fa62_jump

	_05fa2c_jump:
		mov    _0cd0b4_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jg     _05fa49_jump
		xor    %eax,%eax
		mov    _0cd102_data,%al
		mov    %ax,_0cd0b6_data
		jmp    _05fa50_jump

	_05fa49_jump:
		decw   _0cd0b6_data

	_05fa50_jump:
		xor    %ecx,%ecx
		mov    $0x000044,%eax
		mov    %ecx,_0cdb24_data
		call   _068d70_func

	_05fa62_jump:
		call   _03e118_func
		test   %ax,%ax
		je     _05fafa_jump
		call   _03e030_func
		test   %ax,%ax
		jne    _05fafa_jump
		call   _03e0a4_func
		test   %ax,%ax
		jne    _05fafa_jump
		cmpb   $0x000000,_0c2503_data
		jne    _05fac1_jump
		mov    _0cd0c4_data,%ax
		cmp    _0cd0dc_data,%ax
		jle    _05fafa_jump
		mov    _0cd0c2_data,%edx
		mov    _0cd0e0_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _05fafa_jump

	_05fac1_jump:
		xor    %edx,%edx
		mov    _0cd0b4_data,%ebx
		mov    _0cd102_data,%dl
		sar    $0x000010,%ebx
		cmp    %edx,%ebx
		jne    _05fae1_jump
		movw   $0x000001,_0cd0b6_data
		jmp    _05fae8_jump

	_05fae1_jump:
		incw   _0cd0b6_data

	_05fae8_jump:
		xor    %esi,%esi
		mov    $0x000044,%eax
		mov    %esi,_0cdb24_data
		call   _068d70_func

	_05fafa_jump:
		call   _03e0a4_func
		test   %ax,%ax
		jne    _05fb32_jump
		call   _03e030_func
		test   %ax,%ax
		jne    _05fb32_jump
		call   _03e118_func
		test   %ax,%ax
		jne    _05fb32_jump
		call   _03e18c_func
		test   %ax,%ax
		jne    _05fb32_jump
		mov    $0x000001,%bh
		mov    %ax,_0cd0c4_data
		mov    %bh,_0c2503_data
		jmp    _05fb3a_jump

	_05fb32_jump:
		xor    %cl,%cl
		mov    %cl,_0c2503_data

	_05fb3a_jump:
		call   _0357d4_func
		test   %al,%al
		je     _05fb5d_jump
		cmpb   $0x000000,_0c2503_data
		je     _05fb5d_jump
		movb   $0x000001,_0cd775_data
		mov    $0x00004d,%eax
		call   _068d70_func

	_05fb5d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_05fb61_jump:
		ret    



_05fb64_func:
		mov    _0cd0b6_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _05fb9d_jump
		call   _0356d0_func
		test   %al,%al
		je     _05fb9d_jump
		movw   $0x000001,_0cd0b2_data

	_05fb83_jump:
		call   _0356d0_func
		test   %al,%al
		je     _05fb93_jump
		call   _03e3d0_func
		jmp    _05fb83_jump

	_05fb93_jump:
		mov    $0x000045,%eax
		call   _068d70_func

	_05fb9d_jump:
		mov    _0cd0b6_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _05fbd6_jump
		call   _0356d0_func
		test   %al,%al
		je     _05fbd6_jump
		movw   $0x000002,_0cd0b2_data

	_05fbbc_jump:
		call   _0356d0_func
		test   %al,%al
		je     _05fbcc_jump
		call   _03e3d0_func
		jmp    _05fbbc_jump

	_05fbcc_jump:
		mov    $0x000045,%eax
		call   _068d70_func

	_05fbd6_jump:
		mov    _0cd0b6_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _05fb61_jump
		call   _0356d0_func
		test   %al,%al
		je     _05fb61_jump
		movw   $0x000003,_0cd0b2_data

	_05fbfd_jump:
		call   _0356d0_func
		test   %al,%al
		je     _05fb61_jump
		call   _03e3d0_func
		jmp    _05fbfd_jump



_05fc14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		movw   $0x00001a,_0cd0a0_data
		xor    %ebx,%ebx
		mov    _0cd102_data,%bl
		lea    0x000000(,%ebx,4),%eax
		mov    $0x000032,%edx
		sub    %ebx,%eax
		mov    %dx,_0cd0d6_data
		shl    $0x000003,%eax
		mov    $0x00005a,%edx
		sub    %ebx,%eax
		sub    %eax,%edx
		inc    %ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000015,%ecx
		mov    $0x00008d,%esi
		mov    %eax,%edx
		mov    %ax,_0cd0ae_data
		cwtl   
		mov    %cx,_0cd0ac_data
		add    $0x000035,%eax
		mov    %si,_0cd0a4_data
		mov    %ax,_0cd0a2_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05fc84_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0cd0c2_data
		jne    _05fcdf_jump
		mov    _0cd0b0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _05fcdf_jump
		mov    _0cd0b4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		lea    -0x000004(%eax),%edi
		mov    $_0c057c_data,%esi
		add    $_0cd090_data,%edi
		mov    $0x000001,%ebx
		push   %edi

	_05fcbf_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _05fcd7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _05fcbf_jump

	_05fcd7_jump:
		pop    %edi
		mov    %bx,_0cd0c2_data

	_05fcdf_jump:
		cmpw   $0x000000,_0cd0f6_data
		je     _05fcf2_jump
		movw   $0x000001,_0cd0ec_data

	_05fcf2_jump:
		call   _0356d0_func
		test   %al,%al
		je     _05fdab_jump
		mov    _0cd0b4_data,%edx
		mov    _0cd0b2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		cmpb   $0x00007e,_0cd08b_data(%edx)
		jne    _05fd45_jump
		cmp    $0x000001,%eax
		je     _05fd73_jump
		movb   $0x000061,_0cd08b_data(%edx)
		mov    _0cd0b4_data,%dx
		dec    %edx
		mov    $0x000044,%eax
		mov    %dx,_0cd0b4_data
		call   _068d70_func
		jmp    _05fd73_jump

	_05fd45_jump:
		cmp    $0x000003,%eax
		jge    _05fd5d_jump
		incw   _0cd0b4_data
		mov    $0x000044,%eax
		call   _068d70_func
		jmp    _05fd73_jump

	_05fd5d_jump:
		mov    $0x000045,%eax
		mov    $0x000001,%edi
		call   _068d70_func
		mov    %di,_0cd0f6_data

	_05fd73_jump:
		mov    $0x001000,%ecx
		xor    %ebx,%ebx
		mov    $0x000001,%edi
		mov    %bx,_0cd004_data
		mov    %cx,_0cd006_data
		mov    %cx,_0cd008_data
		mov    %di,_0cd00a_data

	_05fd9b_jump:
		call   _0356d0_func
		test   %al,%al
		je     _05fdab_jump
		call   _03e3d0_func
		jmp    _05fd9b_jump

	_05fdab_jump:
		call   _03e18c_func
		test   %ax,%ax
		je     _05fe90_jump
		call   _03e0a4_func
		test   %ax,%ax
		jne    _05fe90_jump
		call   _03e030_func
		test   %ax,%ax
		jne    _05fe90_jump
		cmpb   $0x000000,_0c2503_data
		jne    _05fe0e_jump
		mov    _0cd0c4_data,%ax
		cmp    _0cd0dc_data,%ax
		jle    _05fe90_jump
		mov    _0cd0c2_data,%edx
		sar    $0x000010,%edx
		mov    $0x000003,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		test   %edx,%edx
		jne    _05fe90_jump

	_05fe0e_jump:
		mov    _0cd0b4_data,%eax
		mov    _0cd0b2_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0cd08b_data(%eax),%ch
		cmp    $0x00007a,%ch
		jne    _05fe38_jump
		movb   $0x000020,_0cd08b_data(%eax)
		jmp    _05fe5e_jump

	_05fe38_jump:
		cmp    $0x000020,%ch
		jne    _05fe46_jump
		movb   $0x00007e,_0cd08b_data(%eax)
		jmp    _05fe5e_jump

	_05fe46_jump:
		cmp    $0x00007e,%ch
		jne    _05fe54_jump
		movb   $0x000061,_0cd08b_data(%eax)
		jmp    _05fe5e_jump

	_05fe54_jump:
		mov    %ch,%bl
		inc    %bl
		mov    %bl,_0cd08b_data(%eax)

	_05fe5e_jump:
		mov    $0x001000,%ecx
		mov    $0x000001,%edi
		xor    %ebx,%ebx
		mov    $0x000044,%eax
		mov    %bx,_0cd004_data
		mov    %cx,_0cd006_data
		mov    %cx,_0cd008_data
		mov    %di,_0cd00a_data
		call   _068d70_func

	_05fe90_jump:
		call   _03e118_func
		test   %ax,%ax
		je     _05ff75_jump
		call   _03e0a4_func
		test   %ax,%ax
		jne    _05ff75_jump
		call   _03e030_func
		test   %ax,%ax
		jne    _05ff75_jump
		cmpb   $0x000000,_0c2503_data
		jne    _05fef3_jump
		mov    _0cd0c4_data,%ax
		cmp    _0cd0dc_data,%ax
		jle    _05ff75_jump
		mov    _0cd0c2_data,%edx
		sar    $0x000010,%edx
		mov    $0x000003,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		test   %edx,%edx
		jne    _05ff75_jump

	_05fef3_jump:
		mov    _0cd0b4_data,%eax
		mov    _0cd0b2_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0cd08b_data(%eax),%dl
		cmp    $0x000061,%dl
		jne    _05ff1d_jump
		movb   $0x00007e,_0cd08b_data(%eax)
		jmp    _05ff43_jump

	_05ff1d_jump:
		cmp    $0x00007e,%dl
		jne    _05ff2b_jump
		movb   $0x000020,_0cd08b_data(%eax)
		jmp    _05ff43_jump

	_05ff2b_jump:
		cmp    $0x000020,%dl
		jne    _05ff39_jump
		movb   $0x00007a,_0cd08b_data(%eax)
		jmp    _05ff43_jump

	_05ff39_jump:
		mov    %dl,%bh
		dec    %bh
		mov    %bh,_0cd08b_data(%eax)

	_05ff43_jump:
		mov    $0x001000,%ecx
		mov    $0x000001,%edi
		xor    %ebx,%ebx
		mov    $0x000044,%eax
		mov    %bx,_0cd004_data
		mov    %cx,_0cd006_data
		mov    %cx,_0cd008_data
		mov    %di,_0cd00a_data
		call   _068d70_func

	_05ff75_jump:
		call   _03e18c_func
		test   %ax,%ax
		jne    _05ffce_jump
		call   _03e118_func
		test   %ax,%ax
		jne    _05ffce_jump
		call   _03e0a4_func
		test   %ax,%ax
		jne    _05ffce_jump
		call   _03e030_func
		test   %ax,%ax
		jne    _05ffce_jump
		mov    _0cd0f6_data,%ax
		test   %ax,%ax
		jne    _05ffce_jump
		cmpw   $0x000000,_0cd0ec_data
		jne    _05ffce_jump
		mov    $0x000001,%dh
		mov    $0x000001,%ebx
		mov    %ax,_0cd0c4_data
		mov    %dh,_0c2503_data
		mov    %bx,_0cd0e4_data
		jmp    _05ffd6_jump

	_05ffce_jump:
		xor    %bl,%bl
		mov    %bl,_0c2503_data

	_05ffd6_jump:
		call   _0357d4_func
		test   %al,%al
		je     _05fff1_jump
		mov    $0x000001,%bh
		mov    $0x00004d,%eax
		mov    %bh,_0cd775_data
		call   _068d70_func

	_05fff1_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		mov    %eax,%eax



_05fff8_func:
		ret    

_060064_switch:
		.long   _0600a6_case
		.long   _0600cd_case
		.long   _0600d9_case
		.long   _0600e5_case

_060074_switch:
		.long   _0600f1_case
		.long   _060118_case
		.long   _060124_case
		.long   _060130_case

_060084_switch:
		.long   _06013c_case
		.long   _06015f_case
		.long   _06016b_case
		.long   _060177_case

_060094_switch:
		.long   _060183_case
		.long   _06018e_case
		.long   _060199_case
		.long   _0601a4_case


	_0600a6_case:
		movl   $_03e200_func,_0cd03c_data

	_0600b0_jump:
		mov    _0cd04e_data,%ax
		cmp    $0x000003,%ax
		ja     _0600fb_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_060074_switch(,%eax,4)

	_0600cd_case:
		movl   $_03e268_func,_0cd03c_data
		jmp    _0600b0_jump

	_0600d9_case:
		movl   $_03e2d0_func,_0cd03c_data
		jmp    _0600b0_jump

	_0600e5_case:
		movl   $_03e338_func,_0cd03c_data
		jmp    _0600b0_jump

	_0600f1_case:
		movl   $_03e200_func,_0cd040_data

	_0600fb_jump:
		mov    _0cd050_data,%ax
		cmp    $0x000003,%ax
		ja     _060146_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_060084_switch(,%eax,4)

	_060118_case:
		movl   $_03e268_func,_0cd040_data
		jmp    _0600fb_jump

	_060124_case:
		movl   $_03e2d0_func,_0cd040_data
		jmp    _0600fb_jump

	_060130_case:
		movl   $_03e338_func,_0cd040_data
		jmp    _0600fb_jump

	_06013c_case:
		movl   $_03e200_func,_0cd044_data

	_060146_jump:
		mov    _0cd052_data,%ax
		cmp    $0x000003,%ax
		ja     _06018d_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_060094_switch(,%eax,4)

	_06015f_case:
		movl   $_03e268_func,_0cd044_data
		jmp    _060146_jump

	_06016b_case:
		movl   $_03e2d0_func,_0cd044_data
		jmp    _060146_jump

	_060177_case:
		movl   $_03e338_func,_0cd044_data
		jmp    _060146_jump

	_060183_case:
		movl   $_03e200_func,_0cd048_data

	_06018d_jump:
		ret    

	_06018e_case:
		movl   $_03e268_func,_0cd048_data
		ret    

	_060199_case:
		movl   $_03e2d0_func,_0cd048_data
		ret    

	_0601a4_case:
		movl   $_03e338_func,_0cd048_data
		ret    

_0601b0_switch:
		.long   _0601d3_case
		.long   _0601ee_case
		.long   _060209_case
		.long   _060224_case


	_0601d3_case:
		push   $0x000002
		mov    $_0c0580_data,%eax
		and    $0x0000ff,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a3ec_func
		ret    $0x000004

	_0601ee_case:
		push   $0x000001
		mov    $_0c0582_data,%eax
		and    $0x0000ff,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a3ec_func
		ret    $0x000004

	_060209_case:
		push   $0x000005
		mov    $_0c0584_data,%eax
		and    $0x0000ff,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a3ec_func
		ret    $0x000004

	_060224_case:
		push   $0x000001
		mov    $_0c0586_data,%eax
		and    $0x0000ff,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a3ec_func
		ret    $0x000004



_060240_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0c45b8_data
		mov    %ah,_0c45ba_data
		mov    %ah,_0c24f6_data
		mov    %ah,_0cd107_data
		mov    _0c25ae_data,%eax
		mov    %bx,_0c45b6_data
		sar    $0x000010,%eax
		mov    %dx,_0cd0c4_data
		cmp    $0x000004,%eax
		je     _06028b_jump
		testb  $0x000002,_0c3315_data
		je     _0602bf_jump

	_06028b_jump:
		mov    $0x000021,%ecx
		mov    $_0c1b4c_data,%edi
		mov    $_0c1bd0_data,%esi
		mov    $0x000001,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,_0c1b2c_data
		mov    _0c3315_data,%cl
		mov    $0x000001,%esi
		and    $0x0000fd,%cl
		mov    %si,_0c25b0_data
		mov    %cl,_0c3315_data

	_0602bf_jump:
		xor    %eax,%eax
		mov    $0x000087,%edx
		mov    _0c1bb5_data,%al
		xor    %ch,%ch
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %ch,_0c1bb7_data
		mov    _0cd104_data,%al
		mov    %edx,_0c1b78_data
		test   %eax,%eax
		je     _060310_jump
		mov    $0x000018,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		xor    %eax,%eax
		mov    $0x0000e1,%edx
		mov    _0c1bb4_data,%al
		sub    %eax,%edx
		mov    %edx,_0c1b74_data
		jmp    _06035f_jump

	_060310_jump:
		mov    $0x000050,%edx
		mov    _0c1bb4_data,%al
		sub    %eax,%edx
		mov    $_0c1b4c_data,%eax
		mov    %edx,_0c1b74_data
		mov    $0x000003,%edx
		call   _01d6f0_func
		xor    %eax,%eax
		mov    $0x0000ff,%edi
		mov    _0c24dc_data,%al
		mov    %di,_0c45b6_data
		cmp    $0x00000a,%eax
		jle    _060350_jump
		mov    $0x000035,%edx
		jmp    _060355_jump

	_060350_jump:
		mov    $0x000034,%edx

	_060355_jump:
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func

	_06035f_jump:
		mov    _0c1bcd_data,%al
		and    $0x0000f7,%al
		mov    $0x000050,%edx
		mov    %al,_0c1bcd_data
		xor    %eax,%eax
		mov    $0x000082,%ebx
		mov    %ax,_0c1b8c_data
		mov    %ax,_0c1b8e_data
		xor    %eax,%eax
		mov    $0x00006e,%ecx
		call   _01d52c_func
		mov    $_0c1d5c_data,%eax
		mov    %edx,_0c1d84_data
		mov    %ebx,_0c1d88_data
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %esi,%esi
		call   _01d6f8_func
		mov    $0x000078,%ebx
		mov    $0x000050,%ah
		mov    $0x000040,%dl
		mov    %bx,_0c265a_data
		mov    %ah,_0c268c_data
		mov    %dl,_0c268d_data
		mov    $_0c2624_data,%eax
		mov    _0c26a5_data,%dh
		xor    %bl,%bl
		and    $0x0000fb,%dh
		mov    %bl,_0c26a3_data
		mov    $0x000014,%ebx
		mov    %dh,_0c26a5_data
		mov    $0x000005,%edx
		mov    %cx,_0c265c_data
		call   _01d6f8_func
		mov    _0c24ac_data,%ax
		xor    %bh,%bh
		mov    %ax,_0c3308_data
		mov    %si,_0c24ac_data
		mov    _0c24ae_data,%ax
		mov    %bh,_0cd105_data
		mov    %ax,_0c330a_data
		mov    %si,_0c24ae_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_060430_switch:
		.long   _0604ff_case
		.long   _060541_case
		.long   _06057b_case
		.long   _0605b1_case




_060440_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c24f6_data,%dl
		movw   $0x000001,_0cd0c4_data
		call   _03e18c_func
		test   %ax,%ax
		je     _060472_jump
		mov    _0c24f6_data,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000001,%ebx
		je     _060472_jump
		inc    %dl
		jmp    _0604e4_jump

	_060472_jump:
		call   _03e118_func
		test   %ax,%ax
		je     _060493_jump
		mov    _0c24f6_data,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000003,%ebx
		je     _060493_jump
		add    $0x000002,%dl
		jmp    _0604e4_jump

	_060493_jump:
		call   _03e0a4_func
		test   %ax,%ax
		je     _0604b4_jump
		mov    _0c24f6_data,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000007,%ebx
		je     _0604b4_jump
		add    $0x000004,%dl
		jmp    _0604e4_jump

	_0604b4_jump:
		call   _03e030_func
		test   %ax,%ax
		je     _0604d5_jump
		mov    _0c24f6_data,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x00000f,%ebx
		je     _0604d5_jump
		add    $0x000008,%dl
		jmp    _0604e4_jump

	_0604d5_jump:
		xor    %ecx,%ecx
		mov    _0c24f6_data,%dl
		mov    %cx,_0cd0c4_data

	_0604e4_jump:
		mov    _0cd107_data,%al
		cmp    $0x000003,%al
		ja     _0605f1_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		inc    %al
		jmp    *%cs:_060430_switch(,%ebx,4)

	_0604ff_case:
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000001,%ebx
		jne    _06051f_jump
		xor    %ebx,%ebx
		mov    _0cd104_data,%bl
		cmp    $0x000003,%ebx
		jg     _06051f_jump
		mov    %al,_0cd107_data
		jmp    _0605f1_jump

	_06051f_jump:
		cmpw   $0x000000,_0cd0c4_data
		je     _0605f1_jump
		xor    %ch,%ch
		xor    %dl,%dl
		mov    %ch,_0cd107_data
		mov    %dl,_0c24f6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060541_case:
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000003,%ebx
		jne    _060559_jump
		mov    %al,_0cd107_data
		mov    %dl,_0c24f6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060559_jump:
		cmpw   $0x000000,_0cd0c4_data
		je     _0605f1_jump
		xor    %cl,%cl
		xor    %dl,%dl
		mov    %cl,_0cd107_data
		mov    %dl,_0c24f6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06057b_case:
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000007,%ebx
		jne    _060593_jump
		mov    %al,_0cd107_data
		mov    %dl,_0c24f6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060593_jump:
		cmpw   $0x000000,_0cd0c4_data
		je     _0605f1_jump
		xor    %bh,%bh
		xor    %dl,%dl
		mov    %bh,_0cd107_data
		mov    %dl,_0c24f6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0605b1_case:
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x00000f,%ebx
		jne    _0605dd_jump
		orb    $0x000004,_0c26a5_data
		xor    %dl,%dl
		mov    $0x00000a,%bl
		mov    $0x000080,%dh
		mov    %bl,_0cd104_data
		mov    %dh,_0c26a3_data
		mov    %dl,_0c24f6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0605dd_jump:
		cmpw   $0x000000,_0cd0c4_data
		je     _0605f1_jump
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,_0cd107_data

	_0605f1_jump:
		mov    %dl,_0c24f6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0605fc_switch:
		.long   _060711_case
		.long   _06074a_case
		.long   _060767_case
		.long   _060a12_case
		.long   _060841_case
		.long   _060940_case
		.long   _06079c_case




_060618_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _049e14_func
		call   _0356d0_func
		test   %al,%al
		jne    _060641_jump
		call   _0356fc_func
		test   %al,%al
		jne    _060641_jump
		call   _0357d4_func
		test   %al,%al
		je     _0606d5_jump

	_060641_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000019,%eax
		je     _06065b_jump
		cmp    $0x00001a,%eax
		je     _06065b_jump
		cmp    $0x00001b,%eax
		jne    _0606d5_jump

	_06065b_jump:
		xor    %eax,%eax
		mov    _0c26a3_data,%al
		cmp    $0x000080,%eax
		je     _060670_jump
		orb    $0x000004,_0c26a5_data

	_060670_jump:
		call   _01cf4c_func
		mov    $0x0000d8,%eax
		call   _068d70_func
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00001b,%eax
		je     _0606a1_jump
		mov    $0x00001f,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		jmp    _0606bc_jump

	_0606a1_jump:
		mov    $0x00001d,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		orb    $0x000008,_0c1bcd_data

	_0606bc_jump:
		mov    $0x000001,%ebx
		xor    %dh,%dh
		mov    $_0c1d5c_data,%eax
		mov    %dh,_0c1bb7_data
		xor    %edx,%edx
		call   _01d6f8_func

	_0606d5_jump:
		mov    $_0c1b4c_data,%eax
		call   _04aad8_func
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		call   _04aa54_func
		mov    %ax,_0c1b8c_data
		mov    _0c1bb8_data,%al
		mov    %al,%ah
		sub    $0x000019,%ah
		cmp    $0x000006,%ah
		ja     _060a3a_jump
		xor    %edx,%edx
		mov    %ah,%dl
		jmp    *%cs:_0605fc_switch(,%edx,4)

	_060711_case:
		xor    %eax,%eax
		mov    _0c1b74_data,%esi
		mov    _0c1bb4_data,%al
		add    %esi,%eax
		cmp    $0x000046,%eax
		jge    _060a3a_jump
		mov    $0x00001a,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		xor    %ch,%ch
		call   _01d6f8_func
		mov    %ch,_0c1bb7_data
		jmp    _060a3a_jump

	_06074a_case:
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		cmp    $0x000006,%eax
		jle    _060a3a_jump
		xor    %eax,%eax
		mov    %ax,_0c1b8c_data
		jmp    _060a3a_jump

	_060767_case:
		incw   _0c45b8_data
		mov    _0c45b6_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00003c,%eax
		jne    _060a3a_jump
		mov    _0c45b6_data,%di
		xor    %esi,%esi
		dec    %edi
		mov    %si,_0c45b8_data
		mov    %di,_0c45b6_data
		jmp    _060a3a_jump

	_06079c_case:
		xor    %edx,%edx
		mov    _0c1b58_data,%ebx
		mov    _0c1bb9_data,%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _0607c4_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jmp    _0607f0_jump

	_0607c4_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b50_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_0607f0_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _060a3a_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _060a3a_jump
		orb    $0x000008,_0c1bcd_data
		jmp    _060a3a_jump

	_060841_case:
		mov    _0c1bcd_data,%ah
		xor    %edx,%edx
		mov    _0c1b74_data,%ecx
		mov    _0c1bb4_data,%dl
		or     $0x000008,%ah
		add    %ecx,%edx
		mov    %ah,_0c1bcd_data
		cmp    $0x0000b4,%edx
		jle    _060922_jump
		xor    %edx,%edx
		mov    _0c1b58_data,%ebx
		mov    _0c1bb9_data,%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _060894_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jmp    _0608c6_jump

	_060894_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b50_data,%eax
		mov    0x00000a(%edx,%eax,1),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_0608c6_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _060922_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b58_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _060922_jump
		mov    $0x00001c,%edx
		mov    $_0c1b4c_data,%eax
		xor    %bh,%bh
		call   _01d6e8_func
		mov    %bh,_0c1bb7_data
		jmp    _060a3a_jump

	_060922_jump:
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		cmp    $0x000040,%eax
		jge    _060a3a_jump
		xor    %edx,%edx
		mov    %dx,_0c1b8c_data
		jmp    _060a3a_jump

	_060940_case:
		xor    %edx,%edx
		mov    _0c1b74_data,%ebx
		mov    _0c1bb4_data,%dl
		add    %ebx,%edx
		cmp    $0x0000af,%edx
		jle    _060a3a_jump
		xor    %edx,%edx
		mov    _0c1b58_data,%ebx
		mov    _0c1bb9_data,%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _060984_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jmp    _0609b0_jump

	_060984_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b50_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_0609b0_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _060a3a_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		lea    (%edx,%eax,1),%ebx
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		lea    0x000000(,%eax,8),%edx
		mov    (%ebx),%eax
		mov    0x000005(%edx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _060a3a_jump
		mov    $0x00001c,%edx
		mov    $_0c1b4c_data,%eax
		xor    %ch,%ch
		call   _01d6e8_func
		mov    %ch,_0c1bb7_data
		jmp    _060a3a_jump

	_060a12_case:
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		cmp    $0x000028,%eax
		jle    _060a25_jump
		movb   $0x000001,_0c45ba_data

	_060a25_jump:
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		cmp    $0x000010,%eax
		jle    _060a3a_jump
		xor    %ebx,%ebx
		mov    %bx,_0c1b8c_data

	_060a3a_jump:
		cmpb   $0x000000,_0c24ca_data
		jne    _060a4f_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000019,%eax
		je     _060a79_jump

	_060a4f_jump:
		mov    _0c1b8a_data,%eax
		mov    _0c1b74_data,%edi
		sar    $0x000010,%eax
		add    %eax,%edi
		mov    $_0c1b4c_data,%eax
		mov    %edi,_0c1b74_data
		call   _01df3c_func
		mov    $_0c1b4c_data,%eax
		call   _04b3f8_func

	_060a79_jump:
		mov    $_0c1d5c_data,%eax
		call   _01df3c_func
		mov    $_0c1d5c_data,%eax
		call   _04b3f8_func
		testb  $0x000004,_0c26a5_data
		je     _060b61_jump
		mov    $_0c2624_data,%eax
		call   _04b3f8_func
		xor    %eax,%eax
		mov    _0c2691_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c2630_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c2690_data,%dl
		testb  $0x000010,0x000007(%eax,%edx,8)
		je     _060ad5_jump
		xor    %eax,%eax
		mov    _0c268f_data,%al
		test   %eax,%eax
		jmp    _060b07_jump

	_060ad5_jump:
		xor    %edx,%edx
		mov    _0c268e_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c2628_data,%eax
		mov    0x00000a(%edx,%eax,1),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c268f_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_060b07_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _060b61_jump
		xor    %eax,%eax
		mov    _0c2691_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c2630_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c2690_data,%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _060b61_jump
		mov    _0c26a3_data,%al
		cmp    $0x000080,%eax
		je     _060b5a_jump
		decb   _0cd104_data

	_060b5a_jump:
		andb   $0x0000fb,_0c26a5_data

	_060b61_jump:
		mov    _0c45b4_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000ff,%eax
		je     _060b77_jump
		call   _060440_func
		jmp    _060b7c_jump

	_060b77_jump:
		call   _060c78_func

	_060b7c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060c78_func:
		push   %ebx
		push   %edx
		call   _0357d4_func
		and    $0x0000ff,%eax
		setne  %al
		mov    %al,_0cd105_data
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _060cb9_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jmp    _060ce5_jump

	_060cb9_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b50_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_060ce5_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _060d31_jump
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		mov    _0c1b58_data,%eax
		shl    $0x000002,%edx
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		lea    0x000000(,%eax,8),%edx
		mov    (%ebx),%eax
		mov    0x000005(%edx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _060d31_jump
		movb   $0x000001,_0cd105_data

	_060d31_jump:
		cmpb   $0x000000,_0cd105_data
		je     _060d41_jump
		movb   $0x000001,_0c45ba_data

	_060d41_jump:
		pop    %edx
		pop    %ebx
		ret    

_060d44_switch:
		.long   _060d97_case
		.long   _060e70_case
		.long   _060e88_case
		.long   _060f4e_case
		.long   _060f7d_case




_060d58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000005,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0c45b8_data
		mov    %bx,_0c45b6_data
		mov    %ah,_0c3320_data
		call   _01efa0_func
		cmpb   $0x000000,_0cd10e_data
		je     _06105d_jump
		call   _0610d4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060d97_case:
		mov    $_0c3326_data,%edi
		mov    _0cd7f8_data,%esi
		push   %edi

	_060da3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060dbb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060da3_jump

	_060dbb_jump:
		pop    %edi
		mov    $_0c33fe_data,%edi
		mov    _0cd7fc_data,%esi
		push   %edi

	_060dc8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060de0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060dc8_jump

	_060de0_jump:
		pop    %edi
		mov    $_0c34d6_data,%edi
		mov    _0cd800_data,%esi
		push   %edi

	_060ded_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060e05_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060ded_jump

	_060e05_jump:
		pop    %edi
		mov    $_0c35ae_data,%edi
		mov    _0cd804_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_060e17_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060e2f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060e17_jump

	_060e2f_jump:
		pop    %edi
		mov    _0cd050_data,%edx
		mov    $_0c33fe_data,%eax
		sar    $0x000010,%edx
		call   _01f380_func
		mov    $0x0000ff,%ebx
		mov    _0cd050_data,%edx
		mov    $_0c34d6_data,%eax
		sar    $0x000010,%edx
		call   _01f380_func
		mov    $0x0000ff,%ebx
		mov    _0cd050_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01f380_func

	_060e70_case:
		mov    $0x0000d8,%edx
		xor    %eax,%eax
		mov    $0x0000a0,%esi
		mov    $0x0000bc,%edi
		mov    $0x000002,%bh
		jmp    _061091_jump

	_060e88_case:
		mov    $_0c3326_data,%edi
		mov    _0cd808_data,%esi
		push   %edi

	_060e94_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060eac_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060e94_jump

	_060eac_jump:
		pop    %edi
		mov    $_0c33fe_data,%edi
		mov    _0cd80c_data,%esi
		push   %edi

	_060eb9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060ed1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060eb9_jump

	_060ed1_jump:
		pop    %edi
		mov    $_0c34d6_data,%edi
		mov    _0cd810_data,%esi
		push   %edi

	_060ede_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060ef6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060ede_jump

	_060ef6_jump:
		pop    %edi
		mov    $_0c35ae_data,%edi
		mov    _0cd814_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_060f08_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060f20_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060f08_jump

	_060f20_jump:
		pop    %edi
		mov    _0cd04a_data,%edx
		mov    $_0c34d6_data,%eax
		sar    $0x000010,%edx
		call   _01f380_func
		mov    $0x0000ff,%ebx
		mov    _0cd04a_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01f380_func
		jmp    _060e70_case

	_060f4e_case:
		call   _01cf4c_func
		mov    $_0c3326_data,%edi
		mov    _0cd818_data,%esi
		push   %edi

	_060f5f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060f77_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060f5f_jump

	_060f77_jump:
		pop    %edi
		jmp    _060e70_case

	_060f7d_case:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _061022_jump
		mov    $_0c3326_data,%edi
		mov    _0cd81c_data,%esi
		push   %edi

	_060f9a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060fb2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060f9a_jump

	_060fb2_jump:
		pop    %edi
		mov    $_0c33fe_data,%edi
		mov    _0cd820_data,%esi
		push   %edi

	_060fbf_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060fd7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060fbf_jump

	_060fd7_jump:
		pop    %edi
		mov    $_0c34d6_data,%edi
		mov    _0cd824_data,%esi
		push   %edi

	_060fe4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060ffc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060fe4_jump

	_060ffc_jump:
		pop    %edi
		mov    $_0c35ae_data,%edi
		mov    _0cd828_data,%esi
		push   %edi

	_061009_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _061021_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _061009_jump

	_061021_jump:
		pop    %edi

	_061022_jump:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000b,%eax
		jne    _060e70_case
		mov    $_0c3326_data,%edi
		mov    _0cd82c_data,%esi
		push   %edi

	_06103f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _061057_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06103f_jump

	_061057_jump:
		pop    %edi
		jmp    _060e70_case

	_06105d_jump:
		mov    _0c2522_data,%ax
		dec    %eax
		cmp    $0x000004,%ax
		ja     _060e70_case
		and    $0x00ffff,%eax
		jmp    *%cs:_060d44_switch(,%eax,4)

	_06107b_jump:
		add    $0x0001b0,%eax
		add    $0x0001b0,%edx
		cmp    $0x000870,%eax
		je     _060b7c_jump

	_061091_jump:
		cmpb   $0x000000,_0c3326_data(%eax)
		je     _0610b3_jump
		mov    %si,_0c33f6_data(%eax)
		mov    $0x0000ad,%ecx
		mov    %bh,_0c33fa_data(%eax)
		mov    %cx,_0c33f8_data(%eax)

	_0610b3_jump:
		cmpb   $0x000000,_0c3326_data(%edx)
		je     _06107b_jump
		mov    %si,_0c33f6_data(%edx)
		mov    $0x000002,%ch
		mov    %di,_0c33f8_data(%edx)
		mov    %ch,_0c33fa_data(%edx)
		jmp    _06107b_jump



_0610d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %ah,%ah
		mov    %ah,_0c51b5_data
		xor    %eax,%eax
		mov    _0cd0be_data,%al
		xor    %dl,%dl
		call   _06a7e0_func
		mov    %dl,_0cd777_data
		xor    %dh,%dh
		mov    $0xffffffff,%ebx
		mov    %dl,_0cd778_data
		mov    %dx,_0cd77a_data
		mov    %dl,_0cd105_data
		mov    %dl,_0cd110_data
		mov    %dl,_0cd776_data

	_06111b_jump:
		inc    %ebx
		movswl %bx,%edx
		imul   $0x00000c,%edx,%edx
		mov    $_094ea8_data,%esi
		mov    $_0cd120_data,%edi
		mov    $0x00000c,%ecx
		add    %edx,%esi
		add    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cd124_data(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _06115f_jump
		mov    _0cd780_data(,%eax,4),%eax
		mov    %eax,_0cd120_data(%edx)

	_06115f_jump:
		movswl %bx,%edx
		imul   $0x00000c,%edx,%edx
		xor    %eax,%eax
		mov    $0x0000dc,%ecx
		mov    _0cd129_data(%edx),%al
		mov    %cx,_0cd126_data(%edx)
		cmp    $0x0000ff,%eax
		jne    _06111b_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061188_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cd778_data,%cl
		cmpb   $0x000000,_0cd10e_data
		je     _0612cb_jump
		call   _049e14_func
		xor    %eax,%eax
		mov    _0c24ca_data,%al
		test   %eax,%eax
		jne    _0612cb_jump
		mov    _0cd777_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cd778_data,%cl
		shl    $0x000002,%edx
		jmp    _0611e0_jump

	_0611cd_jump:
		mov    _0cd126_data(%edx),%di
		add    $0x00000c,%edx
		dec    %edi
		inc    %eax
		mov    %di,_0cd11a_data(%edx)

	_0611e0_jump:
		xor    %ebx,%ebx
		mov    %cl,%bl
		cmp    %ebx,%eax
		jle    _0611cd_jump
		lea    0x000000(,%ebx,4),%eax
		mov    _0cd77a_data,%di
		sub    %ebx,%eax
		xor    %edx,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    _0cd129_data(%eax),%dl
		inc    %edi
		mov    %dl,%bl
		mov    %di,_0cd77a_data
		test   %ebx,%ebx
		je     _06122a_jump
		jmp    _061242_jump

	_061215_jump:
		mov    $0x000024,%esi
		jmp    _061262_jump

	_06121c_jump:
		mov    $0x000017,%esi
		jmp    _061262_jump

	_061223_jump:
		mov    $0x00000f,%esi
		jmp    _061262_jump

	_06122a_jump:
		mov    _0cd128_data(%eax),%al
		cmp    $0x000001,%al
		jb     _06123c_jump
		jbe    _06121c_jump
		cmp    $0x000002,%al
		je     _061223_jump
		jmp    _061262_jump

	_06123c_jump:
		test   %al,%al
		je     _061215_jump
		jmp    _061262_jump

	_061242_jump:
		movswl %dx,%eax
		cmp    $0x0000ff,%eax
		jne    _061253_jump
		mov    $0x0000a0,%esi
		jmp    _061262_jump

	_061253_jump:
		cmp    $0x000064,%eax
		jle    _06125f_jump
		mov    %edx,%esi
		sub    $0x000055,%esi
		jmp    _061262_jump

	_06125f_jump:
		imul   $0x00000f,%edx,%esi

	_061262_jump:
		cmp    _0cd77a_data,%si
		jg     _06129b_jump
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    %bx,_0cd77a_data
		cmp    $0x0000ff,%eax
		je     _061294_jump
		inc    %cl
		xor    %edx,%edx
		mov    %cl,%dl
		mov    $0x00000f,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _06129b_jump

	_061294_jump:
		movb   $0x000001,_0cd105_data

	_06129b_jump:
		xor    %edx,%edx
		mov    _0cd777_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cd124_data(,%eax,4),%eax
		sar    $0x000010,%eax
		mov    %cl,_0cd778_data
		cmp    $0xfffffffc,%eax
		jge    _0612cb_jump
		mov    %dl,%bl
		inc    %bl
		mov    %bl,_0cd777_data

	_0612cb_jump:
		mov    _0cd778_data,%cl
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061318_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0c1b84_data,%dx
		mov    _0c1bc0_data,%bl
		mov    $0x000002,%ecx
		add    %edx,%ebx
		mov    $_0c0588_data,%eax
		sub    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		movswl %bx,%ebx
		call   _01a3ec_func
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0c1b84_data,%cx
		mov    _0c1bc0_data,%bl
		mov    $0x0000a0,%edx
		add    %ecx,%ebx
		mov    $_0c059d_data,%eax
		sub    $0x00001e,%ebx
		mov    $0x000002,%ecx
		movswl %bx,%ebx
		call   _01a3ec_func
		xor    %ebx,%ebx
		mov    _0c1bb7_data,%bl
		cmp    $0x000080,%ebx
		jle    _06138c_jump
		movb   $0x000001,_0cd105_data

	_06138c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061390_func:
		push   %ebx
		push   %edx
		mov    $0x0000c8,%ah
		mov    $0x0000f0,%dl
		mov    $0xffffffb8,%ebx
		mov    %ah,_0c1ecc_data
		mov    %dl,_0c1ecd_data
		mov    %bx,_0c1e9c_data
		mov    $0x000078,%edx
		mov    $0x000001,%bl
		mov    %dx,_0c1e9a_data
		mov    %bl,_0c1ed1_data
		mov    _0c1ee5_data,%dh
		xor    %bh,%bh
		and    $0x0000f7,%dh
		mov    %bh,_0c1ed0_data
		mov    %bh,_0c1ed4_data
		mov    %dh,_0c1ee5_data
		pop    %edx
		pop    %ebx
		ret    

_0613e4_switch:
		.long   _0614db_case
		.long   _061534_case
		.long   _0615a2_case
		.long   _0615d3_case
		.long   _0616c6_case
		.long   _061731_case




_0613fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0c1ed1_data,%al
		mov    _0c1e70_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1ed0_data,%al
		mov    0x000005(%edx,%eax,8),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %dx,_0c1ea4_data
		test   %al,%al
		je     _061449_jump
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _061449_jump
		mov    $_0c1e64_data,%eax
		call   _04aad8_func

	_061449_jump:
		mov    _0c1ea4_data,%ax
		mov    _0c1e9a_data,%bx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cd105_data,%al
		mov    %bx,_0c1e9a_data
		cmp    $0x000001,%eax
		jne    _0614c0_jump
		mov    $0x000005,%ah
		mov    $0x000002,%ebx
		xor    %edx,%edx
		mov    %ah,_0c1ed4_data
		mov    $_0c1e64_data,%eax
		call   _01d6f8_func
		xor    %eax,%eax
		mov    $0x000002,%dl
		mov    _0c1ecc_data,%al
		mov    %dl,_0c1ee3_data
		mov    $0x0000a0,%edx
		xor    %bl,%bl
		sub    %eax,%edx
		mov    %bl,_0cd105_data
		mov    %edx,%eax
		mov    _0c1ee5_data,%dh
		sub    $0x000010,%eax
		and    $0x0000f7,%dh
		mov    %ax,_0c1e9a_data
		mov    %dh,_0c1ee5_data

	_0614c0_jump:
		mov    _0c1ed4_data,%al
		cmp    $0x000005,%al
		ja     _061770_jump
		xor    %edx,%edx
		mov    %al,%dl
		inc    %al
		jmp    *%cs:_0613e4_switch(,%edx,4)

	_0614db_case:
		xor    %edx,%edx
		mov    _0c1e98_data,%ebx
		mov    _0c1ecc_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0xffffff9c,%edx
		jge    _061770_jump
		mov    $0x000001,%ebx
		mov    %al,_0c1ed4_data
		mov    $_0c1e64_data,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		xor    %eax,%eax
		mov    _0c1ecc_data,%al
		neg    %eax
		sub    $0x00003c,%eax
		mov    %ax,_0c1e9a_data
		orb    $0x000008,_0c1ee5_data
		mov    $_0c1e64_data,%eax
		call   _04b3f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061534_case:
		xor    %edx,%edx
		mov    _0c1e98_data,%ebx
		mov    _0c1ecc_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _061770_jump
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %al,_0c1ed4_data
		mov    $_0c1e64_data,%eax
		call   _01d6f8_func
		xor    %eax,%eax
		mov    _0c1ecc_data,%al
		neg    %eax
		add    $0x00015e,%eax
		mov    %ax,_0c1e9a_data
		mov    _0c1ee5_data,%al
		xor    %ch,%ch
		and    $0x0000f7,%al
		mov    %ch,_0c1ecf_data
		mov    %al,_0c1ee5_data
		mov    $_0c1e64_data,%eax
		call   _04b3f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0615a2_case:
		xor    %edx,%edx
		mov    _0c1ed1_data,%dl
		test   %edx,%edx
		jne    _061770_jump
		mov    _0c1ed0_data,%dl
		test   %edx,%edx
		jne    _061770_jump
		mov    %al,_0c1ed4_data
		mov    $_0c1e64_data,%eax
		call   _04b3f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0615d3_case:
		xor    %eax,%eax
		mov    _0c1ed1_data,%al
		mov    _0c1e70_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1ed0_data,%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _061600_jump
		xor    %eax,%eax
		mov    _0c1ecf_data,%al
		test   %eax,%eax
		jmp    _06162c_jump

	_061600_jump:
		xor    %edx,%edx
		mov    _0c1ece_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1e68_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1ecf_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_06162c_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _061770_jump
		xor    %eax,%eax
		mov    _0c1ed1_data,%al
		mov    _0c1e70_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1ed0_data,%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _061770_jump
		mov    _0c1ed4_data,%bh
		mov    $0x000001,%edx
		inc    %bh
		mov    $_0c1e64_data,%eax
		mov    %bh,_0c1ed4_data
		mov    $0x000003,%ebx
		call   _01d6f8_func
		mov    $0xffffffc4,%edx
		xor    %eax,%eax
		mov    _0c1ee5_data,%cl
		mov    _0c1ecc_data,%al
		or     $0x000008,%cl
		sub    %eax,%edx
		mov    %cl,_0c1ee5_data
		mov    %dx,_0c1e9a_data
		mov    $_0c1e64_data,%eax
		call   _04b3f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0616c6_case:
		xor    %edx,%edx
		mov    _0c1e98_data,%ebx
		mov    _0c1ecc_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _061770_jump
		mov    $0x000001,%ebx
		mov    %al,_0c1ed4_data
		xor    %edx,%edx
		mov    $_0c1e64_data,%eax
		call   _01d6f8_func
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0c1ecc_data,%al
		sub    %eax,%edx
		mov    _0c1ee5_data,%ch
		mov    %edx,%eax
		and    $0x0000f7,%ch
		sub    $0x000010,%eax
		mov    %ch,_0c1ee5_data
		mov    %ax,_0c1e9a_data
		mov    $_0c1e64_data,%eax
		call   _04b3f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061731_case:
		xor    %eax,%eax
		mov    _0c1ed1_data,%al
		test   %eax,%eax
		jne    _061770_jump
		mov    _0c1ed0_data,%al
		cmp    $0x000002,%eax
		jne    _061770_jump
		xor    %eax,%eax
		mov    _0c1ee3_data,%al
		test   %eax,%eax
		jne    _061766_jump
		movb   $0x000001,_0cd105_data
		mov    $_0c1e64_data,%eax
		call   _04b3f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061766_jump:
		mov    %al,%bh
		dec    %bh
		mov    %bh,_0c1ee3_data

	_061770_jump:
		mov    $_0c1e64_data,%eax
		call   _04b3f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061780_func:
		push   %edx
		push   %esi
		push   %edi
		xor    %ah,%ah
		mov    %ah,_0c1b0a_data
		xor    %eax,%eax
		mov    _0c51b4_data,%al
		cmp    $0x000001,%eax
		jne    _0617ac_jump
		mov    $_0c3314_data,%edi
		xor    %dl,%dl
		mov    $_0c3318_data,%esi
		mov    %dl,_0c51b4_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

	_0617ac_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		ret    

_0617b0_switch:
		.long   _0617f0_case
		.long   _061882_case
		.long   _0618a9_case
		.long   _0618c9_case
		.long   _0618f2_case




_0617c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c2520_data,%bx
		mov    _0c2522_data,%ax
		dec    %eax
		xor    %edx,%edx
		cmp    $0x000004,%ax
		ja     _061919_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0617b0_switch(,%eax,4)

	_0617f0_case:
		movswl %bx,%eax
		cmp    $0x000010,%eax
		jne    _061817_jump
		mov    _0c251a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _061812_jump
		mov    _0c251c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _061817_jump

	_061812_jump:
		mov    $_09693c_data,%edx

	_061817_jump:
		movswl %bx,%eax
		cmp    $0x000007,%eax
		jne    _06184a_jump
		mov    _0c251a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _061839_jump
		mov    _0c251c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _06184a_jump

	_061839_jump:
		xor    %al,%al
		mov    $_0968f8_data,%edx
		mov    %al,_0cd118_data
		jmp    _061919_jump

	_06184a_jump:
		movswl %bx,%eax
		cmp    $0x000007,%eax
		jne    _061919_jump
		cmpb   $0x000000,_0cd118_data
		jne    _061919_jump
		mov    _0c2595_data,%cl
		mov    $_0968e6_data,%edx
		test   %cl,%cl
		jne    _061919_jump
		movb   $0x000001,_0cd118_data
		jmp    _061919_jump

	_061882_case:
		movswl %bx,%eax
		cmp    $0x000010,%eax
		jne    _061919_jump
		mov    _0c251c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _061919_jump
		mov    $_09690a_data,%edx
		jmp    _061919_jump

	_0618a9_case:
		movswl %bx,%eax
		cmp    $0x00000a,%eax
		jne    _061919_jump
		mov    _0c251a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _061919_jump
		mov    $_09690a_data,%edx
		jmp    _061919_jump

	_0618c9_case:
		movswl %bx,%eax
		cmp    $0x00000b,%eax
		jne    _061919_jump
		mov    _0c251a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _0618eb_jump
		mov    _0c251c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _061919_jump

	_0618eb_jump:
		mov    $_0968cc_data,%edx
		jmp    _061919_jump

	_0618f2_case:
		movswl %bx,%eax
		cmp    $0x00000b,%eax
		jne    _061919_jump
		mov    _0c251a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _061914_jump
		mov    _0c251c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _061919_jump

	_061914_jump:
		mov    $_096924_data,%edx

	_061919_jump:
		mov    %edx,_0db340_data
		xor    %ah,%ah
		mov    %bx,_0c2520_data
		mov    %ah,_0cd105_data
		test   %edx,%edx
		je     _06193b_jump
		cmpb   $0x000000,_0c2595_data
		je     _061944_jump

	_06193b_jump:
		movb   $0x000001,_0cd105_data
		jmp    _061993_jump

	_061944_jump:
		mov    $0x000084,%ecx
		mov    $_0c1b4c_data,%esi
		mov    $_0c1c54_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %ch,%ch
		xor    %eax,%eax
		mov    %ch,_0c1bbc_data
		xor    %cl,%cl
		mov    _0c1bb5_data,%al
		mov    %cx,_0c1b8c_data
		mov    $0x0000a8,%ecx
		sub    %eax,%ecx
		mov    %cx,_0c1b84_data
		movl   $_0619a0_func,_0cd114_data

	_061993_jump:
		mov    _0db340_data,%edx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0619a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_0c1b4c_data,%ebp
		mov    _0c1b58_data,%ecx
		xor    %edi,%edi

	_0619b3_jump:
		xor    %eax,%eax
		mov    _0c1bbc_data,%al
		mov    _0db340_data,%edx
		add    %eax,%eax
		lea    (%edx,%eax,1),%ebx
		mov    (%ebx),%ax
		movzbw _0c1bbc_data,%si
		cmp    $0x000011,%ax
		jb     _061c97_jump
		jbe    _061bde_jump
		cmp    $0x000013,%ax
		jb     _061bff_jump
		jbe    _061b17_jump
		cmp    $0x000014,%ax
		jbe    _061c5f_jump
		cmp    $0x000015,%ax
		je     _061aed_jump
		jmp    _061cc0_jump

	_061a09_jump:
		mov    _0c1bcd_data,%dh
		mov    _0c1bbc_data,%bl
		or     $0x000008,%dh
		inc    %bl
		mov    %dh,_0c1bcd_data
		mov    %bl,_0c1bbc_data
		jmp    _061cc0_jump

	_061a2b_jump:
		mov    _0c1bcd_data,%bh
		mov    _0c1bbc_data,%al
		and    $0x0000f7,%bh
		inc    %al
		mov    %bh,_0c1bcd_data
		mov    %al,_0c1bbc_data
		jmp    _061cc0_jump

	_061a4b_jump:
		incb   _0c1bbc_data
		xor    %ebx,%ebx
		mov    _0c1bbc_data,%bl
		mov    (%edx,%ebx,2),%dl
		and    $0x0000ff,%edx
		mov    %ebp,%eax
		call   _01d6f0_func
		mov    _0c1bbc_data,%al
		xor    %edx,%edx
		inc    %al
		mov    _0db340_data,%ebx
		mov    %al,%dl
		mov    %al,_0c1bbc_data
		mov    (%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		mov    %ebp,%eax
		call   _01d6e8_func
		testb  $0x000008,_0c1bcd_data
		je     _061abe_jump
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		shl    $0x000002,%edx
		lea    (%ecx,%edx,1),%ebx
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		lea    0x000000(,%edx,8),%eax
		mov    (%ebx),%edx
		movsbw (%edx,%eax,1),%ax
		jmp    _061adc_jump

	_061abe_jump:
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		shl    $0x000002,%edx
		lea    (%ecx,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0c1bb8_data,%dl
		movsbw 0x000001(%ebx,%edx,8),%ax

	_061adc_jump:
		mov    %ax,_0c1b8c_data
		incb   _0c1bbc_data
		jmp    _061cc0_jump

	_061aed_jump:
		incb   _0c1bbc_data
		xor    %eax,%eax
		mov    _0c1bbc_data,%al
		mov    (%edx,%eax,2),%ax
		mov    _0c1bbc_data,%dl
		inc    %dl
		mov    %ax,_0c1b82_data
		mov    %dl,_0c1bbc_data
		jmp    _061cc0_jump

	_061b17_jump:
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		lea    0x000000(,%edx,4),%ebx
		mov    _0c1b58_data,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    _0c1bb8_data,%bl
		testb  $0x000010,0x000007(%edx,%ebx,8)
		je     _061b55_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		sete   %al
		mov    %eax,%edx
		and    $0x0000ff,%edx
		jmp    _061b82_jump

	_061b55_jump:
		xor    %eax,%eax
		mov    _0c1bb6_data,%al
		imul   $0x00000c,%eax,%eax
		mov    _0c1b50_data,%edx
		mov    0x00000a(%edx,%eax,1),%dx
		xor    %ebx,%ebx
		and    $0x00ffff,%edx
		mov    _0c1bb7_data,%bl
		dec    %edx
		cmp    %edx,%ebx
		sete   %al
		xor    %edx,%edx
		mov    %al,%dl

	_061b82_jump:
		test   %edx,%edx
		je     _061cc0_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    0x000005(%edx),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _061cc0_jump
		mov    _0c1bb6_data,%al
		cmp    0x000002(%edx),%al
		jne    _061cc0_jump
		incb   _0c1bbc_data
		jmp    _061cc0_jump

	_061bde_jump:
		mov    (%ebx),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    _0c1bb7_data,%bl
		cmp    %edx,%ebx
		jne    _061cc0_jump
		addb   $0x000002,_0c1bbc_data
		jmp    _061cc0_jump

	_061bff_jump:
		mov    _0c1b82_data,%ax
		cmp    0x000002(%ebx),%ax
		jl     _061c20_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _061c56_jump

	_061c20_jump:
		xor    %edx,%edx
		mov    _0db340_data,%ebx
		mov    _0c1bbc_data,%dl
		mov    _0c1b82_data,%ax
		cmp    0x000002(%ebx,%edx,2),%ax
		jg     _061cc0_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		test   %edx,%edx
		jne    _061cc0_jump

	_061c56_jump:
		addb   $0x000002,_0c1bbc_data
		jmp    _061cc0_jump

	_061c5f_jump:
		incb   _0c1bbc_data
		xor    %ebx,%ebx
		mov    _0c1bbc_data,%bl
		mov    (%edx,%ebx,2),%ax
		mov    %bl,%bh
		inc    %bh
		mov    %ax,_0c1b8c_data
		mov    %bh,_0c1bbc_data
		jmp    _061cc0_jump

	_061c83_jump:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _01d6f0_func
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _01d6e8_func
		jmp    _061cc0_jump

	_061c97_jump:
		cmp    $0x000001,%ax
		jb     _061cb7_jump
		jbe    _061a09_jump
		cmp    $0x000008,%ax
		jb     _061cc0_jump
		jbe    _061a4b_jump
		cmp    $0x00000e,%ax
		je     _061c83_jump
		jmp    _061cc0_jump

	_061cb7_jump:
		test   %ax,%ax
		je     _061a2b_jump

	_061cc0_jump:
		xor    %edx,%edx
		movswl %si,%ebx
		mov    _0c1bbc_data,%dl
		cmp    %edx,%ebx
		jne    _0619b3_jump
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b50_data,%edx
		mov    0x000008(%edx,%eax,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		inc    %eax
		mov    %al,%dl
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		call   _04aa54_func
		and    $0x0000ff,%edx
		mov    _0c24c8_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _061d27_jump
		add    %ax,_0c1b82_data

	_061d27_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _061d42_jump
		mov    _0c1bb8_data,%al
		test   %eax,%eax
		jne    _061d42_jump
		movb   $0x000001,_0cd105_data

	_061d42_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061d4c_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000084,%ecx
		mov    $_0c1c54_data,%esi
		xor    %ah,%ah
		mov    $_0c1b4c_data,%edi
		mov    %ah,_0cd105_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_061dd0_func:
		push   $0x000024
		call   _07a29e_func
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		incl   _0db344_data
		cmpl   $0x000100,_0db344_data
		jl     _061e07_jump
		movl   $0x000000,_0db344_data

	_061e07_jump:
		mov    _0db344_data,%edx
		add    %edx,%edx
		mov    _09697e_data(%edx),%edx
		sar    $0x000010,%edx
		movswl -0x000004(%ebp),%eax
		lea    0x000001(%eax),%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edx,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061e38_func:
		push   $0x000020
		call   _07a29e_func
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		xor    %eax,%eax
		call   _07b561_func
		call   _07aba6_func
		movl   $0x000000,-0x000004(%ebp)
		jmp    _061e6b_jump

	_061e65_jump:
		mov    -0x000004(%ebp),%eax
		incl   -0x000004(%ebp)

	_061e6b_jump:
		cmpl   $0x000100,-0x000004(%ebp)
		jge    _061e87_jump
		call   _07ab82_func
		mov    -0x000004(%ebp),%edx
		add    %edx,%edx
		mov    %ax,_096980_data(%edx)
		jmp    _061e65_jump

	_061e87_jump:
		movl   $0x000000,_0db344_data
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061ea0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0c25a3_data
		jne    _061ecf_jump
		mov    $_0c1b4c_data,%eax
		call   _0706e8_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _061ecf_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		mov    %ecx,%eax
		call   _01df3c_func

	_061ecf_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061ed4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0c2506_data,%dl
		cmp    $0x00000c,%edx
		jne    _061ef8_jump
		xor    %eax,%eax
		mov    _0c1b74_data,%cx
		mov    _0c1bb4_data,%al
		add    %ecx,%eax
		and    $0x0000f0,%al
		jmp    _061f52_jump

	_061ef8_jump:
		xor    %edx,%edx
		mov    _0c2507_data,%dl
		cmp    $0x00000c,%edx
		jne    _061f22_jump
		xor    %eax,%eax
		mov    _0c1b74_data,%bx
		mov    _0c1bb4_data,%al
		add    %ebx,%eax
		sub    $0x00000f,%eax
		mov    %dl,_0c2506_data
		and    $0x0000f0,%al
		jmp    _061f52_jump

	_061f22_jump:
		xor    %edx,%edx
		mov    _0c2508_data,%dl
		cmp    $0x00000c,%edx
		jne    _061f52_jump
		xor    %eax,%eax
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%al
		add    %edx,%eax
		add    $0x00000f,%eax
		mov    _0c2508_data,%dl
		and    $0x0000f0,%al
		mov    %dl,_0c2506_data

	_061f52_jump:
		xor    %edx,%edx
		cwtl   
		mov    _0c1bb4_data,%dl
		add    $0x000008,%eax
		sub    %edx,%eax
		mov    %eax,_0c1b74_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061f6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0c1b74_data,%cx
		mov    _0c1bb4_data,%al
		add    %eax,%ecx
		mov    _0c1bc0_data,%al
		add    $0x000016,%al
		mov    _0c1b8e_data,%ah
		mov    _0c3315_data,%dl
		add    %ah,%al
		test   $0x000002,%dl
		je     _061fb2_jump
		mov    $0x000050,%ebx
		and    $0x0000ff,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x000050,%ebx
		sar    %eax
		sub    %eax,%ebx
		mov    %ebx,%eax

	_061fb2_jump:
		mov    _0c1b78_data,%dx
		xor    %ah,%ah
		add    %edx,%eax
		cwtl   
		sar    $0x000004,%eax
		movswl %cx,%ecx
		movswl %ax,%ebx
		mov    %ecx,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e4d8_func
		mov    %al,_0c2506_data
		and    $0x0000ff,%eax
		cmp    $0x00000c,%eax
		je     _06200d_jump
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e4d8_func
		mov    %al,_0c2507_data
		lea    0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e4d8_func
		mov    %al,_0c2508_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06200d_jump:
		mov    $0x00000f,%dh
		mov    %dh,_0c2508_data
		mov    %dh,_0c2507_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062020_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _06203e_jump
		mov    _0c1bcb_data,%ah
		test   %ah,%ah
		jne    _062114_jump

	_06203e_jump:
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jle    _062120_jump
		xor    %ebx,%ebx
		mov    _0c1b8e_data,%dx
		mov    %bx,_0c1b8e_data
		call   _061f6c_func
		xor    %eax,%eax
		mov    _0c2506_data,%al
		mov    %dx,_0c1b8e_data
		cmp    $0x00000c,%eax
		je     _062093_jump
		xor    %eax,%eax
		mov    _0c2507_data,%al
		cmp    $0x00000c,%eax
		je     _062093_jump
		xor    %eax,%eax
		mov    _0c2508_data,%al
		cmp    $0x00000c,%eax
		jne    _062108_jump

	_062093_jump:
		testb  $0x000018,_0c3315_data
		jne    _062108_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _0620bd_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		jne    _0620bd_jump
		movw   $0x00005a,_0c1ba2_data

	_0620bd_jump:
		call   _061ed4_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		xor    %esi,%esi
		mov    $0xffffffff,%edx
		mov    $0x000009,%eax
		mov    %si,_0c1b8c_data
		mov    %si,_0c1b8e_data
		mov    %si,_0c1b9e_data
		mov    %si,_0c25b4_data
		call   _068654_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062108_jump:
		mov    %dx,_0c1b8e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062114_jump:
		je     _062120_jump
		mov    %ah,%cl
		dec    %cl
		mov    %cl,_0c1bcb_data

	_062120_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062128_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    %dx,0x000014(%esp)
		testb  $0x000002,_0c3315_data
		je     _062148_jump
		mov    $0x000008,%esi
		jmp    _06214d_jump

	_062148_jump:
		mov    $0x000004,%esi

	_06214d_jump:
		movw   $0x00ffff,_0c1b96_data
		mov    _0c23c0_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b34_data,%ebp
		add    %edx,%eax
		mov    _0c248a_data,%bx
		shl    $0x000002,%eax
		xor    %ecx,%ecx
		add    %eax,%ebp
		test   %bx,%bx
		jg     _0621af_jump
		jmp    _062a04_jump

	_062184_jump:
		inc    %ecx
		movswl %cx,%ebp
		mov    _0c23c0_data(,%ebp,2),%ebp
		sar    $0x000010,%ebp
		imul   $0x000084,%ebp,%ebp
		mov    _0c1b34_data,%eax
		mov    _0c248a_data,%di
		add    %eax,%ebp
		cmp    %di,%cx
		jge    _062a04_jump

	_0621af_jump:
		testb  $0x000020,0x000081(%ebp)
		je     _062184_jump
		mov    0x000014(%esp),%edx
		cmp    0x000034(%ebp),%dx
		je     _062184_jump
		xor    %eax,%eax
		mov    0x000060(%ebp),%ax
		testb  $0x000020,_092239_data(,%eax,4)
		je     _0621e1_jump
		mov    0x000040(%ebp),%eax
		sar    $0x000010,%eax
		call   _04aa54_func
		mov    %eax,%ebx
		jmp    _0621e5_jump

	_0621e1_jump:
		mov    0x000042(%ebp),%bx

	_0621e5_jump:
		mov    _0c1b8e_data,%di
		mov    0x00004c(%ebp),%ax
		sub    %edi,%eax
		add    %eax,%ebx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0621fd_jump
		neg    %eax

	_0621fd_jump:
		mov    %eax,%ebx
		add    $0x000002,%ebx
		movswl %si,%edx
		movswl %bx,%eax
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _062210_jump
		mov    %ebx,%eax

	_062210_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x000060(%ebp),%ax
		cmp    $0x00006d,%eax
		je     _06222b_jump
		cmp    $0x0000f1,%eax
		je     _06222b_jump
		cmp    $0x0000b3,%eax
		jne    _06222e_jump

	_06222b_jump:
		add    $0x000008,%ebx

	_06222e_jump:
		mov    0x000052(%ebp),%eax
		sar    $0x000010,%eax
		movswl %bx,%edx
		test   %eax,%eax
		jge    _06223d_jump
		neg    %eax

	_06223d_jump:
		cmp    %edx,%eax
		jge    _062184_jump
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _023f98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		jne    _062184_jump
		movswl %cx,%eax
		mov    _0c23c2_data(,%eax,2),%ax
		mov    _0c4768_data,%edx
		mov    %ax,_0c1b96_data
		cmp    $0xfffffffe,%edx
		jne    _06229d_jump
		mov    _0c4764_data,%eax
		mov    %eax,%edx
		mov    $0x000002,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _06229d_jump
		incl   _0c4764_data

	_06229d_jump:
		movw   $0x00ffff,_0c1b9c_data
		xor    %eax,%eax
		mov    $0x000001,%bh
		mov    _0c1bb9_data,%al
		mov    %bh,_0c259c_data
		cmp    $0x000002,%eax
		je     _0623ad_jump

	_0622be_jump:
		mov    0x000060(%ebp),%ax
		mov    %eax,%edx
		cmp    $0x000057,%ax
		jb     _06283b_jump
		jbe    _062566_jump
		cmp    $0x00009a,%ax
		jb     _062801_jump
		jbe    _062655_jump
		cmp    $0x0000a7,%ax
		jb     _0627e8_jump
		jbe    _0624e5_jump
		cmp    $0x0000a9,%ax
		jb     _0628a9_jump
		jbe    _062604_jump
		cmp    $0x0000cf,%ax
		je     _062719_jump
		jmp    _0628a9_jump

	_062313_jump:
		mov    0x000032(%ebp),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		call   _068654_func
		jmp    _0622be_jump

	_062325_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _06234b_jump
		cmp    $0x000004,%eax
		je     _06234b_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		call   _068654_func
		jmp    _0622be_jump

	_06234b_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		call   _068654_func
		jmp    _0622be_jump

	_06235f_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		je     _06234b_jump
		cmp    $0x000005,%eax
		je     _06234b_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		call   _068654_func
		jmp    _0622be_jump

	_062385_jump:
		mov    $0xffffffff,%edx
		mov    $0x0000f8,%eax
		call   _068654_func
		jmp    _0622be_jump

	_062399_jump:
		mov    $0xffffffff,%edx
		mov    $0x000034,%eax
		call   _068654_func
		jmp    _0622be_jump

	_0623ad_jump:
		mov    0x000060(%ebp),%ax
		cmp    $0x000054,%ax
		jb     _062449_jump
		jbe    _0622be_jump
		cmp    $0x0000a0,%ax
		jb     _062417_jump
		jbe    _062313_jump
		cmp    $0x0000ed,%ax
		jb     _0623ef_jump
		jbe    _062385_jump
		cmp    $0x0000f3,%ax
		je     _062399_jump
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		call   _068654_func
		jmp    _0622be_jump

	_0623ef_jump:
		cmp    $0x0000b2,%ax
		jb     _06234b_jump
		cmp    $0x0000b3,%ax
		jbe    _0622be_jump
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		call   _068654_func
		jmp    _0622be_jump

	_062417_jump:
		cmp    $0x000056,%ax
		jb     _06234b_jump
		cmp    $0x000058,%ax
		jbe    _0622be_jump
		cmp    $0x00009f,%ax
		je     _0622be_jump
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		call   _068654_func
		jmp    _0622be_jump

	_062449_jump:
		cmp    $0x000016,%ax
		jb     _0624a2_jump
		jbe    _06247d_jump
		cmp    $0x00001c,%ax
		jb     _062473_jump
		jbe    _06247d_jump
		cmp    $0x00003f,%ax
		je     _06247d_jump
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		call   _068654_func
		jmp    _0622be_jump

	_062473_jump:
		cmp    $0x00001a,%ax
		jb     _06234b_jump

	_06247d_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		je     _06234b_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		call   _068654_func
		jmp    _0622be_jump

	_0624a2_jump:
		cmp    $0x000001,%ax
		jb     _06234b_jump
		jbe    _062325_jump
		cmp    $0x000010,%ax
		jb     _06234b_jump
		cmp    $0x000011,%ax
		jbe    _06235f_jump
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		call   _068654_func
		jmp    _0622be_jump

	_0624da_jump:
		movw   $0x000000,0x000052(%ebp)
		jmp    _0628a9_jump

	_0624e5_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _0628a9_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x00000d,%eax
		jne    _0628a9_jump
		mov    $0x00000f,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _0628a9_jump

	_062511_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebp),%al
		cmp    $0x000003,%eax
		jne    _0628a9_jump

	_06251f_jump:
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _056614_func
		jmp    _0628a9_jump

	_062532_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebp),%al
		cmp    $0x000004,%eax
		jne    _0628a9_jump
		xor    %eax,%eax
		mov    0x000076(%ebp),%al
		test   %eax,%eax
		jne    _06255a_jump
		mov    $0x000005,%edx
		mov    %ebp,%eax
		call   _01d6e8_func
		jmp    _0628a9_jump

	_06255a_jump:
		mov    %ebp,%eax
		call   _0707d0_func
		jmp    _0628a9_jump

	_062566_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		movb   $0x000010,0x00007d(%ebp)
		test   %eax,%eax
		jne    _06259e_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x000007,%eax
		jne    _06259e_jump
		mov    $0x000002,%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		mov    0x000032(%ebp),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		call   _068654_func
		jmp    _0628a9_jump

	_06259e_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _0628a9_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x000009,%eax
		jne    _0628a9_jump
		mov    $0x000002,%ebx
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _01d6f8_func
		mov    0x000032(%ebp),%edx
		mov    $0x000070,%eax
		sar    $0x000010,%edx
		call   _068654_func
		jmp    _0628a9_jump

	_0625da_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ebp,%eax
		movb   $0x000010,0x00007d(%ebp)
		call   _01d6f8_func
		mov    0x000032(%ebp),%edx
		mov    $0x00006f,%eax
		sar    $0x000010,%edx
		call   _068654_func
		jmp    _0628a9_jump

	_062604_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _0628a9_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x00000d,%eax
		jne    _0628a9_jump
		mov    %ebp,%eax
		call   _07135c_func
		jmp    _0628a9_jump

	_062629_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _0628a9_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x00000a,%eax
		jne    _0628a9_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _056614_func
		jmp    _0628a9_jump

	_062655_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _0628a9_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x00000d,%eax
		jne    _0628a9_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _056614_func
		jmp    _0628a9_jump

	_062681_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _0628a9_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x00000f,%eax
		jne    _0628a9_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _056614_func
		jmp    _0628a9_jump

	_0626ad_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _0628a9_jump
		mov    0x00006c(%ebp),%al
		test   %eax,%eax
		jne    _0628a9_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _056614_func
		jmp    _0628a9_jump

	_0626d8_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _0626ed_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x00000a,%eax
		je     _0628a9_jump

	_0626ed_jump:
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _056614_func
		jmp    _0628a9_jump

	_062700_jump:
		testb  $0x000004,_0c331d_data
		je     _0628a9_jump
		mov    %ebp,%eax
		call   _074464_func
		jmp    _0628a9_jump

	_062719_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _06272e_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x000001,%eax
		je     _0628a9_jump

	_06272e_jump:
		mov    $0x000001,%ebx
		mov    $_0c3318_data,%edi
		mov    %ebp,%eax
		xor    %edx,%edx
		mov    $_0c3314_data,%esi
		call   _01d6f8_func
		mov    $0xffffffff,%edx
		mov    0x000081(%ebp),%cl
		mov    $0x000001,%ebx
		and    $0x0000df,%cl
		mov    _0c3314_data,%al
		mov    %cl,0x000081(%ebp)
		mov    $0x000001,%ch
		mov    %dx,_0c1b96_data
		mov    %bx,_0c1b8c_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _0c3315_data,%dl
		or     %ch,%al
		mov    %ch,_0c51b4_data
		mov    %al,_0c3314_data
		mov    %al,%ah
		and    $0x000000,%dl
		and    $0x000001,%ah
		mov    %dl,_0c3315_data
		mov    %ah,_0c3314_data
		jmp    _0628a9_jump

	_0627a3_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _0628a9_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x000002,%eax
		jne    _0628a9_jump
		mov    $0x000009,%edx
		mov    %ebp,%eax
		call   _01d6e8_func
		jmp    _0628a9_jump

	_0627cd_jump:
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jg     _0627df_jump
		mov    $0x000002,%eax

	_0627df_jump:
		mov    %ax,0x00004a(%ebp)
		jmp    _0628a9_jump

	_0627e8_jump:
		cmp    $0x00009b,%ax
		jbe    _062681_jump
		cmp    $0x0000a2,%ax
		je     _062700_jump
		jmp    _0628a9_jump

	_062801_jump:
		cmp    $0x000083,%ax
		jb     _06282c_jump
		jbe    _062511_jump
		cmp    $0x000086,%ax
		jb     _0628a9_jump
		jbe    _0624e5_jump
		cmp    $0x00008a,%ax
		je     _062629_jump
		jmp    _0628a9_jump

	_06282c_jump:
		cmp    $0x000058,%ax
		je     _0625da_jump
		jmp    _0628a9_jump

	_06283b_jump:
		cmp    $0x00003f,%ax
		jb     _062877_jump
		jbe    _0626d8_jump
		cmp    $0x000044,%ax
		jb     _06286b_jump
		jbe    _0627cd_jump
		cmp    $0x000051,%ax
		jb     _0628a9_jump
		jbe    _0624da_jump
		cmp    $0x000056,%ax
		je     _062532_jump
		jmp    _0628a9_jump

	_06286b_jump:
		cmp    $0x000043,%ax
		je     _0627a3_jump
		jmp    _0628a9_jump

	_062877_jump:
		cmp    $0x000010,%ax
		jb     _06289f_jump
		cmp    $0x000011,%ax
		jbe    _06251f_jump
		cmp    $0x00001b,%ax
		jb     _0628a9_jump
		jbe    _0627cd_jump
		cmp    $0x000031,%ax
		je     _0626ad_jump
		jmp    _0628a9_jump

	_06289f_jump:
		cmp    $0x000008,%ax
		je     _0624e5_jump

	_0628a9_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _062943_jump
		mov    _0c1b58_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _0628d2_jump
		sar    %cl,%ax
		jmp    _0628db_jump

	_0628d2_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0628db_jump:
		movswl %ax,%edx
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0628ec_jump
		neg    %eax

	_0628ec_jump:
		cmp    %edx,%eax
		jl     _062914_jump
		mov    _0c3315_data,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _062914_jump
		mov    $0x000003,%ebx
		mov    %eax,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		jmp    _062943_jump

	_062914_jump:
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6f0_func
		mov    $0x000008,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		mov    _0c1b9c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000c8,%eax
		jle    _062943_jump
		call   _061ea0_func

	_062943_jump:
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%ebp),%dl
		mov    %ebp,%eax
		call   _01da90_func
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%ebp),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb5_data,%al
		sub    %eax,%edx
		mov    _0c1b78_data,%ax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%ebp),%ax
		mov    %dx,_0c1b8e_data
		cmp    $0x0000fe,%eax
		jne    _0629eb_jump
		xor    %eax,%eax
		mov    _0c1b74_data,%ebx
		mov    _0c1bb4_data,%al
		mov    0x00000e(%esp),%edx
		add    %eax,%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		add    %edx,%eax
		sub    %eax,%ebx
		mov    %ebx,0x00000c(%esp)
		movsbw 0x000076(%ebp),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _0629ca_jump
		sar    %cl,%ax
		jmp    _0629d3_jump

	_0629ca_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0629d3_jump:
		mov    _0c1b8e_data,%si
		xor    %bl,%bl
		sub    %eax,%esi
		mov    %bl,_0c259c_data
		mov    %si,_0c1b8e_data

	_0629eb_jump:
		mov    (%esp),%eax
		mov    $0xffffffff,%edi
		movb   $0x000000,(%eax)
		mov    %di,_0c2504_data
		mov    %di,_0c1b9e_data

	_062a04_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _062a29_jump
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _062a29_jump
		mov    0x000014(%esp),%eax
		mov    %ax,_0c1b96_data
		jmp    _062a4b_jump

	_062a29_jump:
		mov    _0c1b94_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _062a4b_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		movw   $0x000000,0x000054(%edx,%eax,4)

	_062a4b_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_062a54_func:
		push   %esi
		and    $0x0000ff,%eax
		mov    _0c1b58_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    %dl,%al
		shl    $0x000003,%eax
		mov    (%esi),%edx
		add    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _062a79_jump
		neg    %eax

	_062a79_jump:
		sar    $0x000004,%eax
		mov    $0x000070,%ebx
		movsbl %al,%eax
		lea    0x000001(%edx),%esi
		cmp    %ebx,%eax
		jle    _062a8d_jump
		mov    %ebx,%eax

	_062a8d_jump:
		mov    _0c1b8a_data,%ebx
		mov    %al,%ch
		sar    $0x000010,%ebx
		neg    %ch
		test   %ebx,%ebx
		jle    _062ab2_jump
		movsbl %al,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		movb   $0x0000f0,(%esi)
		cmp    %ebx,%eax
		jge    _062aae_jump
		mov    %ebx,%eax

	_062aae_jump:
		mov    %al,(%edx)
		pop    %esi
		ret    

	_062ab2_jump:
		jge    _062aca_jump
		xor    %eax,%eax
		mov    %cl,%al
		movsbl %ch,%ebx
		neg    %eax
		cmp    %ebx,%eax
		jle    _062ac3_jump
		mov    %ebx,%eax

	_062ac3_jump:
		mov    %al,(%esi)
		movb   $0x000010,(%edx)
		pop    %esi
		ret    

	_062aca_jump:
		mov    %cl,%al
		neg    %al
		mov    %al,(%esi)
		mov    %cl,(%edx)
		pop    %esi
		ret    



_062ad4_func:
		push   %ebx
		push   %ecx
		push   %edx
		test   %al,%al
		je     _062b9c_jump
		mov    $0x000030,%ecx
		mov    $0x000011,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000030,%ecx
		mov    $0x000012,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000030,%ecx
		mov    $0x000013,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000030,%ecx
		mov    $0x000003,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000030,%ecx
		mov    $0x000005,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000030,%ecx
		mov    $0x000004,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000030,%ecx
		mov    $0x000020,%edx
		jmp    _062ca5_jump

	_062b9c_jump:
		mov    $0x000020,%ecx
		mov    $0x000002,%eax
		mov    _0c25b2_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000020,%ecx
		mov    $0x000001,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000020,%ecx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		call   _062a54_func
		mov    $0x000020,%ecx
		mov    $0x000018,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000020,%ecx
		mov    $0x00000b,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000020,%ecx
		mov    $0x00000c,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000020,%ecx
		mov    $0x00000d,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000020,%ecx
		mov    $0x000003,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000020,%ecx
		mov    $0x000005,%edx
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		mov    $0x000020,%ecx
		mov    $0x000004,%edx

	_062ca5_jump:
		mov    _0c25b2_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _062a54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062cbc_func:
		push   %edx
		mov    _0c2598_data,%dx
		test   %dx,%dx
		je     _062cd4_jump
		movw   $0x000001,_0c1b94_data
		pop    %edx
		ret    

	_062cd4_jump:
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _062d0a_jump

	_062ce1_jump:
		mov    %dx,_0c1b94_data
		pop    %edx
		ret    

	_062cea_jump:
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _062cf8_jump
		neg    %eax

	_062cf8_jump:
		cmp    $0x000100,%eax
		jle    _062ce1_jump
		movw   $0x000001,_0c1b94_data
		pop    %edx
		ret    

	_062d0a_jump:
		mov    _0c259c_data,%al
		test   %al,%al
		jbe    _062cea_jump
		cmp    $0x000001,%al
		je     _062ce1_jump
		pop    %edx
		ret    



_062d1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %ebx,%ebx
		mov    _0c1bb9_data,%bl
		mov    _0c1b58_data,%edx
		lea    0x000000(,%ebx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1bb8_data,%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _063005_jump
		xor    %edx,%edx
		mov    _0c2503_data,%dl
		mov    $0x000002,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		cmp    $0x000001,%edx
		jne    _063005_jump
		cmp    $0x000007,%ebx
		jne    _062d93_jump
		mov    $0x000007,%cl
		mov    _0c1b8c_data,%ax
		cwtl   
		shl    %cl,%eax
		mov    _0c1b8e_data,%cx
		sub    $0x000002,%ecx
		mov    %ax,_0c25b4_data
		mov    %cx,_0c1b8e_data
		jmp    _062dac_jump

	_062d93_jump:
		cmp    $0x000004,%ebx
		jne    _062da3_jump
		movw   $0x00fffd,_0c1b8e_data
		jmp    _062dac_jump

	_062da3_jump:
		movw   $0x00fffb,_0c1b8e_data

	_062dac_jump:
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		mov    _0c1b8e_data,%cx
		cmp    $0xffffffff,%eax
		je     _062e80_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		mov    0x00004a(%edx,%eax,4),%ebx
		sar    $0x000010,%ebx
		movswl %cx,%eax
		cmp    %ebx,%eax
		jle    _062de1_jump
		mov    %ebx,%eax

	_062de1_jump:
		mov    %eax,%ecx

	_062de3_jump:
		mov    %cx,_0c1b8e_data
		call   _062cbc_func
		testb  $0x000002,_0c3315_data
		je     _062ef1_jump
		mov    $0x000100,%edx
		jmp    _062ef6_jump

	_062e06_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jle    _062de3_jump
		mov    _0c1b8c_data,%cx
		neg    %ecx
		dec    %ecx
		jmp    _062de3_jump

	_062e1f_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jle    _062de3_jump
		mov    $0x000001,%cl
		mov    _0c1b8c_data,%ax
		test   %ax,%ax
		js     _062e3e_jump
		sar    %cl,%ax
		jmp    _062e47_jump

	_062e3e_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_062e47_jump:
		mov    %eax,%ecx
		neg    %ecx
		dec    %ecx
		jmp    _062de3_jump

	_062e4e_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _062de3_jump
		mov    $0x000001,%cl
		mov    _0c1b8c_data,%ax
		test   %ax,%ax
		js     _062e6d_jump
		sar    %cl,%ax
		jmp    _062e76_jump

	_062e6d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_062e76_jump:
		mov    %eax,%ecx
		neg    %ecx
		dec    %ecx
		jmp    _062de3_jump

	_062e80_jump:
		mov    _0c1bae_data,%al
		cmp    $0x00000c,%al
		jb     _062eb0_jump
		jbe    _062de3_jump
		cmp    $0x000014,%al
		jb     _062ea0_jump
		cmp    $0x000015,%al
		jbe    _062e1f_jump
		cmp    $0x000018,%al
		jb     _062e4e_jump
		jmp    _062de3_jump

	_062ea0_jump:
		cmp    $0x000012,%al
		jb     _062de3_jump
		jbe    _062e06_jump
		jmp    _062ed3_jump

	_062eb0_jump:
		cmp    $0x000004,%al
		jb     _062ec5_jump
		cmp    $0x000005,%al
		jbe    _062e1f_jump
		cmp    $0x000008,%al
		jb     _062e4e_jump
		jmp    _062de3_jump

	_062ec5_jump:
		cmp    $0x000002,%al
		jb     _062de3_jump
		jbe    _062e06_jump

	_062ed3_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffb,%eax
		jge    _062de3_jump
		mov    _0c1b8c_data,%cx
		dec    %ecx
		jmp    _062de3_jump

	_062ef1_jump:
		mov    $0x000200,%edx

	_062ef6_jump:
		cmpb   $0x000000,_0c51b4_data
		je     _062f3d_jump
		xor    %eax,%eax
		call   _062ad4_func
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _062f2c_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000028,%eax
		jne    _062f2c_jump
		mov    $0x000019,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		jmp    _062f7f_jump

	_062f2c_jump:
		mov    $0x00001b,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		jmp    _062f7f_jump

	_062f3d_jump:
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _062f4e_jump
		neg    %eax

	_062f4e_jump:
		cmp    %edx,%eax
		setg   %al
		mov    %al,%dl
		xor    %eax,%eax
		mov    %dl,%al
		call   _062ad4_func
		test   %dl,%dl
		je     _062f73_jump
		mov    $0x000011,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		jmp    _062f7f_jump

	_062f73_jump:
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx

	_062f7f_jump:
		call   _01d6f8_func
		mov    $0xffffffff,%edi
		mov    _0c3315_data,%cl
		xor    %ah,%ah
		xor    %esi,%esi
		mov    %ah,_0c1b1e_data
		mov    %si,_0c24f4_data
		mov    %ah,_0c1bbd_data
		mov    %ah,_0c1bbe_data
		mov    %ah,_0c2503_data
		mov    %ah,_0c1f04_data
		mov    _0c1b74_data,%ax
		mov    %di,_0c2504_data
		mov    %ax,_0c24c2_data
		mov    _0c1b78_data,%ax
		mov    %di,_0c1b96_data
		mov    %ax,_0c24c4_data
		test   $0x000002,%cl
		je     _063005_jump
		mov    $0x000001,%cl
		mov    _0c1b8e_data,%ax
		test   %ax,%ax
		js     _062ff5_jump
		sar    %cl,%ax
		jmp    _062ffe_jump

	_062ff5_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_062ffe_jump:
		dec    %eax
		mov    %ax,_0c1b8e_data

	_063005_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06300c_switch:
		.long   _0630cf_case
		.long   _0630cf_case
		.long   _0630d9_case
		.long   _0630cf_case
		.long   _0630e1_case
		.long   _0630cf_case




_063024_func:
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %al,0x000014(%esp)
		mov    %ebx,%edi
		mov    %ecx,%esi
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		test   %eax,%eax
		jne    _063049_jump
		mov    %bx,_0c25b4_data
		xor    %ebx,%ebx
		jmp    _0631ee_jump

	_063049_jump:
		movswl %bx,%ebx
		imul   %ebx,%eax
		mov    $0x000008,%cl
		test   %eax,%eax
		je     _063059_jump
		sar    %cl,%eax
		jmp    _06305f_jump

	_063059_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_06305f_jump:
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		mov    $0x000003,%cl
		mov    0x000014(%esp),%al
		test   %ax,%ax
		js     _063076_jump
		sar    %cl,%ax
		jmp    _06307f_jump

	_063076_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06307f_jump:
		test   %ax,%ax
		je     _063089_jump
		movswl %ax,%ebx
		jmp    _06308e_jump

	_063089_jump:
		mov    $0x000001,%ebx

	_06308e_jump:
		mov    $0x000002,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    $0x000003,%cl
		mov    %ax,0x000004(%esp)
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    0x000008(%esp),%ecx
		add    (%esp),%ecx
		add    %eax,%ecx
		mov    _0c2522_data,%ax
		dec    %eax
		mov    %cx,0x00000c(%esp)
		cmp    $0x000005,%ax
		ja     _0630e1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_06300c_switch(,%eax,4)

	_0630cf_case:
		movl   $0x000006,0x000010(%esp)
		jmp    _0630e1_case

	_0630d9_case:
		movl   $0x000003,0x000010(%esp)

	_0630e1_case:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06313d_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06310e_jump
		mov    0x000010(%esp),%eax
		mov    $0x000008,%cl
		add    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _063110_jump

	_06310e_jump:
		xor    %eax,%eax

	_063110_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _063120_jump
		movswl %di,%edx
		jmp    _063122_jump

	_063120_jump:
		xor    %edx,%edx

	_063122_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    _0c25b4_data,%di
		add    %edx,%eax
		cmp    %di,%ax
		jge    _063198_jump
		mov    %edi,%eax
		jmp    _063198_jump

	_06313d_jump:
		jge    _063192_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _063163_jump
		mov    0x000010(%esp),%ecx
		mov    %edx,%eax
		sub    %ecx,%eax
		mov    $0x000008,%cl
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _063165_jump

	_063163_jump:
		xor    %eax,%eax

	_063165_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _063175_jump
		movswl %di,%edx
		jmp    _063177_jump

	_063175_jump:
		xor    %edx,%edx

	_063177_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    _0c25b4_data,%si
		add    %edx,%eax
		cmp    %si,%ax
		jle    _063198_jump
		mov    %esi,%eax
		jmp    _063198_jump

	_063192_jump:
		mov    _0c25b4_data,%ax

	_063198_jump:
		cmpw   $0x000000,0x00000c(%esp)
		je     _0631ee_jump
		mov    0x00000c(%esp),%esi
		mov    _0c25b4_data,%dx
		movswl %ax,%ecx
		add    %esi,%edx
		test   %ecx,%ecx
		jle    _0631cf_jump
		cmp    _0c25b4_data,%ax
		jle    _0631c4_jump
		mov    %dx,_0c25b4_data

	_0631c4_jump:
		cmp    _0c25b4_data,%ax
		jge    _0631ee_jump
		jmp    _0631e8_jump

	_0631cf_jump:
		cmp    _0c25b4_data,%ax
		jge    _0631df_jump
		mov    %dx,_0c25b4_data

	_0631df_jump:
		cmp    _0c25b4_data,%ax
		jle    _0631ee_jump

	_0631e8_jump:
		mov    %ax,_0c25b4_data

	_0631ee_jump:
		mov    _0c25b4_data,%di
		test   %di,%di
		je     _06325c_jump
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %ax,%ax
		js     _063208_jump
		sar    %cl,%ax
		jmp    _063211_jump

	_063208_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_063211_jump:
		cwtl   
		xor    %edx,%edx
		call   _04aa54_func
		mov    %ax,_0c1b8c_data
		mov    $_0c1b4c_data,%eax
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		je     _063263_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _063263_jump
		xor    %edx,%edx
		mov    %dx,_0c1b8c_data
		mov    %dx,_0c25b4_data
		mov    %dx,_0c1b94_data
		jmp    _063263_jump

	_06325c_jump:
		mov    %di,_0c1b8c_data

	_063263_jump:
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		test   %edx,%edx
		je     _063279_jump
		cmp    $0x000001,%edx
		je     _063279_jump
		cmp    $0x000003,%edx
		jne    _063290_jump

	_063279_jump:
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _063290_jump
		mov    $_0c1b4c_data,%eax
		call   _0248b8_func

	_063290_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _0632ab_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000f,%eax
		jne    _0632ab_jump
		add    $0x000002,%ebx

	_0632ab_jump:
		mov    _0c25b4_data,%di
		cmp    %di,%bx
		jg     _0632c4_jump
		mov    %edi,%ecx
		sub    %ebx,%ecx
		mov    %cx,_0c25b4_data
		jmp    _0632ef_jump

	_0632c4_jump:
		movswl %bx,%eax
		mov    _0c25b2_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _0632e7_jump
		mov    %edi,%edx
		add    %ebx,%edx
		mov    %dx,_0c25b4_data
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		ret    

	_0632e7_jump:
		xor    %eax,%eax
		mov    %ax,_0c25b4_data

	_0632ef_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		ret    

_0632f8_switch:
		.long   _063664_case
		.long   _0636b6_case
		.long   _063652_case
		.long   _063652_case
		.long   _06365b_case
		.long   _06365b_case




_063310_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c2522_data,%ax
		xor    %esi,%esi
		cmp    $0x000003,%ax
		jne    _06332a_jump
		mov    $0x000020,%bh
		jmp    _06332c_jump

	_06332a_jump:
		mov    $0x000010,%bh

	_06332c_jump:
		mov    _0c1b94_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _0634ac_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		testb  $0x000020,0x000081(%ecx)
		jne    _063362_jump
		movw   $0x00ffff,_0c1b96_data

	_063362_jump:
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06336e_jump
		neg    %eax

	_06336e_jump:
		cmp    $0x000008,%eax
		jg     _06338e_jump
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _06338e_jump
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0634ac_jump

	_06338e_jump:
		mov    _0c1b94_data,%edx
		mov    %esp,%eax
		sar    $0x000010,%edx
		call   _062128_func
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0634ac_jump
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0633bb_jump
		neg    %eax

	_0633bb_jump:
		cmp    $0x000008,%eax
		jle    _0634ac_jump
		xor    %eax,%eax
		mov    $0xffffffff,%edi
		mov    0x000060(%ecx),%ax
		mov    %di,_0c1b96_data
		cmp    $0x0000fe,%eax
		jne    _0633e6_jump
		movw   $0x000001,_0c1b94_data

	_0633e6_jump:
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		mov    _0c1bb9_data,%cl
		call   _01d6f0_func
		cmpb   $0x000000,_0c51b4_data
		je     _06342a_jump
		xor    %eax,%eax
		mov    %cl,%al
		test   %eax,%eax
		jne    _063420_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000028,%eax
		jne    _063420_jump
		mov    $0x00001a,%edx
		jmp    _063492_jump

	_063420_jump:
		mov    $0x00001c,%edx
		jmp    _063492_jump

	_06342a_jump:
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000001,%eax
		jne    _06346a_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000009,%eax
		je     _063444_jump
		cmp    $0x00000b,%eax
		jne    _06346a_jump

	_063444_jump:
		mov    _0c1bcd_data,%dh
		test   $0x000008,%dh
		sete   %al
		mov    %dh,%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		mov    %ch,%ah
		mov    %ch,_0c1bcd_data
		or     %al,%ah
		mov    %ah,_0c1bcd_data

	_06346a_jump:
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000001,%eax
		jne    _06348d_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000003,%eax
		jne    _063486_jump
		mov    $0x000020,%edx
		jmp    _063492_jump

	_063486_jump:
		mov    $0x000018,%edx
		jmp    _063492_jump

	_06348d_jump:
		mov    $0x000001,%edx

	_063492_jump:
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		xor    %edx,%edx
		mov    %dx,_0c1b9e_data
		mov    %dx,_0c24f4_data

	_0634ac_jump:
		cmpb   $0x000000,_0c259e_data
		jne    _0634bf_jump
		mov    $_0c1b4c_data,%eax
		call   _04aad8_func

	_0634bf_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		jne    _0634e8_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000009,%eax
		je     _0634e1_jump
		cmp    $0x000030,%eax
		je     _0634e1_jump
		cmp    $0x00000b,%eax
		jne    _0634e8_jump

	_0634e1_jump:
		negw   _0c1b8c_data

	_0634e8_jump:
		mov    $0x000004,%cl
		mov    _0c1b8c_data,%ax
		cwtl   
		shl    %cl,%eax
		mov    _0c1b8c_data,%dx
		mov    %eax,%edi
		test   %dx,%dx
		je     _063538_jump
		cwtl   
		test   %eax,%eax
		jge    _063508_jump
		neg    %eax

	_063508_jump:
		cmp    $0x000100,%eax
		jg     _063513_jump
		mov    $0x0000ff,%al
		jmp    _063515_jump

	_063513_jump:
		xor    %al,%al

	_063515_jump:
		mov    _0c2596_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _06352c_jump
		addw   $0x00000a,_0c1b8c_data
		jmp    _06353a_jump

	_06352c_jump:
		jge    _06353a_jump
		subw   $0x00000a,_0c1b8c_data
		jmp    _06353a_jump

	_063538_jump:
		xor    %al,%al

	_06353a_jump:
		xor    %ecx,%ecx
		mov    _0c1bb9_data,%cl
		cmp    $0x000002,%ecx
		jne    _063599_jump
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		cmp    $0x00000f,%edx
		je     _06355e_jump
		cmpw   $0x000000,_0c1b94_data
		je     _063590_jump

	_06355e_jump:
		testb  $0x000008,_0c1bcd_data
		je     _063573_jump
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _063588_jump

	_063573_jump:
		testb  $0x000008,_0c1bcd_data
		jne    _06358c_jump
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06358c_jump

	_063588_jump:
		mov    $0x00000c,%bl
		jmp    _063592_jump

	_06358c_jump:
		mov    $0x000008,%bl
		jmp    _063592_jump

	_063590_jump:
		mov    %al,%bl

	_063592_jump:
		xor    %esi,%esi
		jmp    _063620_jump

	_063599_jump:
		test   %ecx,%ecx
		je     _0635ab_jump
		cmp    $0x000001,%ecx
		je     _0635ab_jump
		cmp    $0x000003,%ecx
		jne    _063620_jump

	_0635ab_jump:
		mov    _0c1b94_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		je     _063691_jump
		mov    %esi,%eax
		shl    $0x000005,%eax
		add    %esi,%eax
		mov    _0c1b34_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x0000fe,%eax
		jne    _06361c_jump
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _0635e8_jump
		neg    %eax

	_0635e8_jump:
		lea    0x000001(%eax),%ecx
		mov    $0x0000ff,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000001,%cl
		mov    %al,%bl
		movsbw 0x000076(%esi),%ax
		test   %ax,%ax
		js     _06360a_jump
		sar    %cl,%ax
		jmp    _063613_jump

	_06360a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_063613_jump:
		mov    %eax,%esi
		neg    %esi
		jmp    _063620_jump

	_06361c_jump:
		xor    %bl,%bl
		xor    %esi,%esi

	_063620_jump:
		xor    %eax,%eax
		mov    _0c51b4_data,%al
		cmp    $0x000001,%eax
		jne    _06362e_jump
		shr    %bl

	_06362e_jump:
		mov    _0c2596_data,%ecx
		movswl %di,%eax
		movswl %si,%edx
		sar    $0x000010,%ecx
		movzbl %bl,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _063024_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063652_case:
		mov    $0xfffffffc,%esi
		mov    %bh,%bl
		jmp    _063620_jump

	_06365b_case:
		mov    $0x000004,%esi
		mov    %bh,%bl
		jmp    _063620_jump

	_063664_case:
		mov    $0xfffffffa,%esi
		mov    %bh,%bl
		jmp    _063620_jump

	_06366d_jump:
		mov    _0c1bb1_data,%ah
		sub    $0x000012,%ah
		cmp    $0x000005,%ah
		ja     _063590_jump
		xor    %edx,%edx
		mov    %ah,%dl
		jmp    *%cs:_0632f8_switch(,%edx,4)

	_06368b_jump:
		mov    %al,%bl
		xor    %esi,%esi
		jmp    _063620_jump

	_063691_jump:
		mov    _0c1bae_data,%bl
		cmp    $0x00000f,%bl
		jb     _0636c2_jump
		jbe    _06366d_jump
		cmp    $0x000014,%bl
		jb     _0636af_jump
		cmp    $0x000015,%bl
		jbe    _063652_case
		cmp    $0x000018,%bl
		jb     _06365b_case
		jmp    _0636e4_jump

	_0636af_jump:
		cmp    $0x000012,%bl
		jb     _0636e4_jump
		jbe    _063664_case

	_0636b6_case:
		mov    $0x000006,%esi
		mov    %bh,%bl
		jmp    _063620_jump

	_0636c2_jump:
		cmp    $0x000002,%bl
		jb     _0636e4_jump
		cmp    $0x000007,%bl
		jbe    _063590_jump
		cmp    $0x00000c,%bl
		jb     _0636e4_jump
		jbe    _063590_jump
		cmp    $0x00000e,%bl
		je     _063590_jump

	_0636e4_jump:
		xor    %edx,%edx
		mov    _0c1bae_data,%dl
		testb  $0x000001,_0921f8_data(%edx)
		jne    _063711_jump
		xor    %edx,%edx
		mov    _0c1bb2_data,%dl
		mov    _0921f8_data(%edx),%cl
		test   $0x000008,%cl
		jne    _063711_jump
		test   $0x000002,%cl
		jne    _06368b_jump

	_063711_jump:
		cmpw   $0x000000,_0c1b8c_data
		jne    _063733_jump
		cmpw   $0x000000,_0c25b4_data
		jne    _063733_jump
		cmpw   $0x000000,_0c2598_data
		je     _06368b_jump

	_063733_jump:
		mov    %bh,%bl
		xor    %esi,%esi
		jmp    _063620_jump

_06373c_switch:
		.long   _0637b3_case
		.long   _0637ea_case
		.long   _0637ea_case
		.long   _0637b3_case
		.long   _0637b3_case
		.long   _0637b3_case
		.long   _0637ea_case
		.long   _0637b3_case
		.long   _06378d_case
		.long   _0637a0_case
		.long   _06378d_case
		.long   _0637a0_case




_06376c_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		je     _0637c3_jump
		mov    _0c1b94_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _0637c3_jump
		jmp    _063807_jump

	_06378d_case:
		mov    $0x00002f,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _0637ea_case

	_0637a0_case:
		mov    $0x000030,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _0637ea_case

	_0637b3_case:
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _0637ea_case

	_0637c3_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0c1bb8_data,%al
		add    %edx,%eax
		sub    $0x000100,%eax
		cmp    $0x00000b,%eax
		ja     _0637ea_case
		jmp    *%cs:_06373c_switch(,%eax,4)

	_0637ea_case:
		mov    _0c25b4_data,%bx
		test   %bx,%bx
		jne    _063821_jump
		mov    %bx,_0c1b8e_data
		mov    %bx,_0c1b8c_data
		pop    %edx
		pop    %ebx
		ret    

	_063807_jump:
		cmp    $0x000004,%eax
		jne    _063821_jump
		xor    %edx,%edx
		mov    $_0c1b4c_data,%eax
		mov    %dx,_0c1b8e_data
		xor    %edx,%edx
		call   _01d6e8_func

	_063821_jump:
		pop    %edx
		pop    %ebx
		ret    



_063824_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _063956_jump
		xor    %eax,%eax
		mov    _0c2503_data,%al
		cmp    $0x000001,%eax
		jne    _063956_jump
		call   *_0cd03c_data
		cwtl   
		test   %eax,%eax
		je     _063956_jump
		testb  $0x000008,_0c3314_data
		je     _06390e_jump
		testb  $0x000018,_0c3315_data
		jne    _06390e_jump
		mov    $0x000002,%ah
		mov    $0x00000e,%edx
		mov    %ah,_0c2503_data
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		mov    0x000005(%edx,%eax,8),%cl
		and    $0x00000f,%cl
		mov    %cl,%ch
		or     $0x000030,%ch
		mov    %ch,0x000005(%edx,%eax,8)
		mov    0x000008(%ebx),%eax
		mov    0x00007d(%eax),%dl
		xor    %esi,%esi
		and    $0x00000f,%dl
		mov    %si,_0c2604_data
		mov    %dl,%dh
		xor    %cl,%cl
		or     $0x000020,%dh
		mov    %cl,_0c25a2_data
		mov    %dh,0x00007d(%eax)
		mov    $0xffffffff,%edx
		xor    %al,%al
		mov    %dx,_0c2504_data
		mov    %edx,%ecx
		mov    %dx,_0c1b9e_data
		xor    %dh,%ch
		mov    %al,_0c2606_data
		mov    %ch,_0c1bcb_data
		jmp    _063956_jump

	_06390e_jump:
		testb  $0x000004,_0c3314_data
		je     _063956_jump
		testb  $0x000018,_0c3315_data
		jne    _063956_jump
		mov    $0x000002,%dh
		mov    $_0c1b4c_data,%eax
		mov    $0x000032,%edi
		mov    %dh,_0c2503_data
		mov    $0x000003,%edx
		xor    %cl,%cl
		call   _01d6e8_func
		mov    $0xffffffff,%eax
		mov    %cl,_0c1bb7_data
		mov    %di,_0c2504_data
		mov    %ax,_0c1b9e_data

	_063956_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000f,%eax
		jne    _0639a0_jump
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		lea    0x000000(,%eax,8),%ecx
		mov    (%ebx,%edx,4),%eax
		add    %ecx,%eax
		mov    0x000005(%eax),%dl
		mov    %dl,%dh
		xor    %ecx,%ecx
		shr    $0x000004,%dh
		mov    %dh,%cl
		cmp    $0x000002,%ecx
		jne    _0639a0_jump
		and    $0x00000f,%dl
		mov    %dl,%ch
		or     $0x0000a0,%ch
		mov    %ch,0x000005(%eax)
		xor    %al,%al
		mov    %al,_0c1bbd_data
		movb   $0x000014,_0c1bbe_data

	_0639a0_jump:
		xor    %eax,%eax
		mov    _0c2503_data,%al
		cmp    $0x000003,%eax
		jne    _0639b7_jump
		call   *_0cd03c_data
		cwtl   
		test   %eax,%eax
		jne    _0639c7_jump

	_0639b7_jump:
		mov    _0c2502_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _063b87_jump

	_0639c7_jump:
		testb  $0x000008,_0c3314_data
		je     _063b5b_jump
		testb  $0x000018,_0c3315_data
		jne    _063b5b_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000f,%eax
		jne    _063b87_jump
		mov    _0c2502_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		je     _063b87_jump
		xor    %cl,%cl
		mov    $0x000001,%dl
		mov    %cl,_0c1bbd_data
		mov    %dl,_0c25a2_data
		xor    %edx,%edx
		mov    $0x000002,%ch
		mov    _0c1bb9_data,%dl
		mov    %ch,_0c2503_data
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,%bh
		or     $0x0000a0,%bh
		mov    $0x000014,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    $0xffffffff,%edx
		mov    %cl,_0c1bbe_data
		mov    _0c2606_data,%ch
		xor    %eax,%eax
		inc    %ch
		mov    %dx,_0c1b8e_data
		mov    %ch,%al
		mov    %ch,_0c2606_data
		cmp    $0x000002,%eax
		jl     _063b4c_jump
		mov    _0c2606_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _063b33_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _063aa8_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jg     _063aa8_jump
		call   _03e030_func
		test   %ax,%ax
		je     _063aa8_jump
		movw   $0x00ffd0,_0c1b8c_data
		jmp    _063af4_jump

	_063aa8_jump:
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _063adf_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jl     _063adf_jump
		call   _03e0a4_func
		test   %ax,%ax
		je     _063adf_jump
		movw   $0x000030,_0c1b8c_data
		jmp    _063af4_jump

	_063adf_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _063af4_jump
		movw   $0x00fffe,_0c1b8e_data

	_063af4_jump:
		mov    $0x000046,%edx
		mov    $0x000004,%cl
		mov    _0c2596_data,%ebx
		xor    %ah,%ah
		mov    %dx,_0c2504_data
		mov    %ah,_0c2606_data
		mov    _0c1b8c_data,%ax
		sar    $0x000010,%ebx
		cwtl   
		shl    %cl,%eax
		xor    %edx,%edx
		cwtl   
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x0000ff,%eax
		call   _063024_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063b33_jump:
		mov    $0x000001,%al
		mov    $0x000014,%ecx
		mov    %al,_0c2606_data
		mov    %cx,_0c2608_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063b4c_jump:
		movw   $0x000014,_0c2608_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063b5b_jump:
		mov    $0x000004,%dl
		mov    $_0c1b4c_data,%eax
		mov    $0xffffffff,%ebx
		mov    %dl,_0c2503_data
		mov    $0x000005,%edx
		xor    %ecx,%ecx
		call   _01d6e8_func
		mov    %bx,_0c2504_data
		mov    %cx,_0c1b9e_data

	_063b87_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063b90_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%ecx
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _063bb9_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		jne    _063bb9_jump
		movw   $0x00005a,_0c1ba2_data

	_063bb9_jump:
		mov    $0x000005,%edx
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		mov    _0c1ba4_data,%eax
		mov    $0x000020,%edx
		sar    $0x000010,%eax
		call   _01d48c_func
		testb  $0x000002,_0c3315_data
		je     _063bec_jump
		mov    $0x000003,%edx
		jmp    _063bf1_jump

	_063bec_jump:
		mov    $0x000007,%edx

	_063bf1_jump:
		testb  $0x000008,_0c1bcd_data
		je     _063c09_jump
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    $0x000010,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		jmp    _063c0d_jump

	_063c09_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl

	_063c0d_jump:
		testb  $0x000002,_0c3315_data
		je     _063c1b_jump
		add    $0x000025,%eax

	_063c1b_jump:
		movswl %cx,%edx
		sar    $0x000004,%edx
		cwtl   
		shl    $0x000004,%edx
		mov    $0xffffffff,%edi
		sub    %eax,%edx
		mov    %di,_0c1b96_data
		mov    %edx,_0c1b78_data
		movswl %si,%eax
		xor    %edx,%edx
		sar    $0x000004,%eax
		mov    _0c1bb4_data,%dl
		shl    $0x000004,%eax
		xor    %ecx,%ecx
		sub    %edx,%eax
		movswl %bx,%edx
		dec    %eax
		mov    %cx,_0c25b4_data
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    %eax,_0c1b74_data
		mov    %bx,_0c1b8e_data
		mov    %bx,_0c1b8c_data
		xor    %dh,%dh
		mov    %bx,_0c1b9e_data
		mov    %dh,_0c1bbd_data
		xor    %bl,%bl
		xor    %dl,%dl
		mov    %bl,_0c1bbe_data
		mov    %dx,_0c24f4_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_063c98_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24ec_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    



_063cc0_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24ec_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    _0921f8_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		xor    %ah,%ah

	_063ce7_case:
		pop    %edx
		ret    



_063cec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		testb  $0x000002,_0c3314_data
		je     _063fa4_jump
		testb  $0x000018,_0c3315_data
		jne    _063fa4_jump
		xor    %eax,%eax
		mov    _0c1b74_data,%dx
		mov    _0c1bb4_data,%al
		add    %eax,%edx
		mov    %dx,0x000010(%esp)
		mov    0x00000e(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		mov    $0x000001,%ebx
		sar    $0x000004,%eax
		mov    _0c24e2_data,%ecx
		mov    %ax,0x000018(%esp)
		sar    $0x000010,%ecx
		mov    0x000016(%esp),%eax
		sub    $0x000002,%ecx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _063d5c_jump
		cmp    %ecx,%eax
		jg     _063d5c_jump
		mov    $0x000001,%eax
		jmp    _063d5e_jump

	_063d5c_jump:
		xor    %eax,%eax

	_063d5e_jump:
		test   %eax,%eax
		je     _063fa4_jump
		xor    %eax,%eax
		mov    _0c1bc0_data,%al
		mov    _0c1b78_data,%dx
		mov    %eax,%edi
		add    %edx,%edi
		mov    _0c1ba6_data,%bx
		add    $0x000020,%edi
		test   %bx,%bx
		je     _063dac_jump
		xor    %eax,%eax
		mov    _0c1bb5_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01d43c_func
		mov    _0c1ba4_data,%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d4f0_func
		mov    %eax,%edi

	_063dac_jump:
		testb  $0x000008,_0c1bcd_data
		je     _063dbc_jump
		mov    $0x000001,%eax
		jmp    _063dc1_jump

	_063dbc_jump:
		mov    $0xffffffff,%eax

	_063dc1_jump:
		mov    _0c24e2_data,%edx
		mov    %ax,0x000014(%esp)
		movswl %di,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%ecx
		add    %eax,%ecx
		mov    0x000012(%esp),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		sub    %edx,%ebx
		add    %eax,%ebx
		mov    %ebx,(%esp)
		test   %ebx,%ebx
		jl     _063fa4_jump
		lea    (%ecx,%edx,1),%esi
		lea    (%esi,%edx,1),%ebx
		lea    (%ebx,%edx,1),%ebp
		lea    (%ebx,%eax,1),%edx
		mov    %ebp,0x000008(%esp)
		mov    %edx,0x00000c(%esp)
		lea    (%ecx,%eax,1),%ebp
		lea    (%esi,%eax,1),%edx
		mov    _0c1ba6_data,%ax
		mov    %edx,0x000004(%esp)
		test   %ax,%ax
		je     _063e26_jump
		mov    %ebx,0x000008(%esp)

	_063e26_jump:
		mov    %ebp,%eax
		call   _063cc0_func
		test   %ax,%ax
		jne    _063e52_jump
		mov    0x000004(%esp),%eax
		call   _063cc0_func
		test   %ax,%ax
		jne    _063e52_jump
		mov    0x00000c(%esp),%eax
		call   _063cc0_func
		test   %ax,%ax
		je     _063fa4_jump

	_063e52_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _063fa4_jump
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jle    _063fa4_jump
		mov    %ecx,%eax
		call   _063c98_func
		test   %ax,%ax
		je     _063ecd_jump
		mov    %ebx,%eax
		call   _063c98_func
		test   %ax,%ax
		je     _063ecd_jump
		mov    %esi,%eax
		call   _063c98_func
		test   %ax,%ax
		je     _063ecd_jump
		mov    (%esp),%eax
		call   _063c98_func
		test   %ax,%ax
		je     _063ecd_jump
		mov    0x000008(%esp),%eax
		call   _063c98_func
		test   %ax,%ax
		je     _063ecd_jump
		mov    %ebp,%eax
		call   _063cc0_func
		test   %ax,%ax
		je     _063ecd_jump
		mov    0x00000e(%esp),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		jmp    _063f9f_jump

	_063ecd_jump:
		mov    _0c1ba4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _063fa4_jump
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jge    _063f02_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _063fa4_jump

	_063f02_jump:
		mov    _0c24e2_data,%eax
		mov    0x000016(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000003,%eax
		cmp    %edx,%eax
		jge    _063f2e_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		je     _063fa4_jump

	_063f2e_jump:
		mov    0x000012(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		call   _063c98_func
		test   %ax,%ax
		je     _063fa4_jump
		mov    %ebx,%eax
		sub    %edx,%eax
		call   _063c98_func
		test   %ax,%ax
		je     _063fa4_jump
		mov    %esi,%eax
		sub    %edx,%eax
		call   _063c98_func
		test   %ax,%ax
		je     _063fa4_jump
		mov    (%esp),%eax
		sub    %edx,%eax
		call   _063c98_func
		test   %ax,%ax
		je     _063fa4_jump
		mov    0x000008(%esp),%eax
		sub    %edx,%eax
		call   _063c98_func
		test   %ax,%ax
		je     _063fa4_jump
		mov    %ebp,%eax
		sub    %edx,%eax
		call   _063cc0_func
		test   %ax,%ax
		je     _063fa4_jump
		mov    0x000014(%esp),%eax
		mov    0x000010(%esp),%ebx
		shl    $0x000004,%eax
		sub    %eax,%ebx
		movswl %di,%edx
		movswl %bx,%eax

	_063f9f_jump:
		call   _063b90_func

	_063fa4_jump:
		add    $0x00001c,%esp
		pop    %ebp

	_063fa8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063fb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0c51b4_data
		je     _063fe5_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _063fdb_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000028,%eax
		jne    _063fdb_jump
		mov    $0x00001a,%ebx
		jmp    _064055_jump

	_063fdb_jump:
		mov    $0x00001c,%ebx
		jmp    _064055_jump

	_063fe5_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		jne    _064023_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000b,%eax
		jne    _064023_jump
		mov    _0c1bcd_data,%dl
		test   $0x000008,%dl
		sete   %al
		mov    %dl,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0c1bcd_data
		or     %al,%bl
		mov    %bl,_0c1bcd_data

	_064023_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000005,%eax
		jne    _064036_jump
		mov    $0x000001,%ebx
		jmp    _064055_jump

	_064036_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _064044_jump
		neg    %eax

	_064044_jump:
		cmp    $0x000002,%eax
		jg     _064050_jump
		mov    $0x000018,%ebx
		jmp    _064055_jump

	_064050_jump:
		mov    $0x000020,%ebx

	_064055_jump:
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    $0xffffffff,%ebx
		xor    %edx,%edx
		mov    $0xffffffff,%ecx
		mov    %dx,_0c24f4_data
		mov    %bx,_0c2504_data
		xor    %bh,%bh
		mov    %cx,_0c1b96_data
		mov    %bh,_0c1bbd_data
		mov    %bh,_0c1bbe_data
		mov    %bh,_0c2503_data
		mov    %bh,_0c1f04_data
		call   _062cbc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0640a8_switch:
		.long   _064173_case
		.long   _0643cb_case
		.long   _063fa8_jump
		.long   _063fa8_jump
		.long   _0640e3_case
		.long   _064469_case
		.long   _06447b_case




_0640c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1bb9_data,%al
		cmp    $0x000006,%al
		ja     _063fa8_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0640a8_switch(,%eax,4)

	_0640e3_case:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000b,%eax
		je     _064164_jump
		cmp    $0x00000c,%eax
		je     _064164_jump
		mov    _0c1ba4_data,%eax
		mov    $0x000001,%ecx
		sar    $0x000010,%eax
		mov    %cx,_0c1b8e_data
		test   %eax,%eax
		je     _064123_jump
		cmpb   $0x000000,_0c24ca_data
		je     _064123_jump
		mov    $_0c1b4c_data,%eax
		call   _04b3f8_func

	_064123_jump:
		call   _061f6c_func
		xor    %eax,%eax
		mov    _0c2506_data,%al
		cmp    $0x00000c,%eax
		je     _06413f_jump
		call   _063fb0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06413f_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000003,%eax
		je     _063fa8_jump
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064164_jump:
		xor    %esi,%esi
		mov    %si,_0c1b8e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064173_case:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		test   %eax,%eax
		je     _064224_jump
		cmp    $0x000001,%eax
		je     _064224_jump
		cmp    $0x000002,%eax
		je     _064224_jump
		cmp    $0x000003,%eax
		je     _064224_jump
		cmp    $0x000031,%eax
		je     _064224_jump
		cmp    $0x000008,%eax
		je     _064224_jump
		cmp    $0x00002b,%eax
		je     _064224_jump
		cmp    $0x000024,%eax
		je     _064224_jump
		cmp    $0x000025,%eax
		je     _064224_jump
		cmp    $0x000026,%eax
		je     _064224_jump
		cmp    $0x000027,%eax
		je     _064224_jump
		cmp    $0x000028,%eax
		je     _064224_jump
		cmp    $0x000029,%eax
		je     _064224_jump
		cmp    $0x00002a,%eax
		je     _064224_jump
		cmp    $0x00000d,%eax
		je     _064224_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00003b,%eax
		je     _064224_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00003e,%eax
		je     _064224_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00003f,%eax
		je     _064224_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000040,%eax
		je     _064224_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000041,%eax
		jne    _064233_jump

	_064224_jump:
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		jmp    _0643b6_jump

	_064233_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000014,%eax
		jne    _06435c_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b58_data,%eax
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		lea    0x000000(,%eax,8),%edx
		mov    (%ebx),%eax
		testb  $0x000010,0x000007(%edx,%eax,1)
		je     _06427b_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jmp    _0642ad_jump

	_06427b_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b50_data,%eax
		mov    0x00000a(%edx,%eax,1),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_0642ad_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _06435c_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    0x000005(%edx),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06435c_jump
		lea    0x000007(%edx),%eax
		testb  $0x000010,0x000007(%edx)
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000ef,%bh
		shl    $0x000004,%dl
		mov    %bh,%cl
		or     %dl,%cl
		mov    $0x000001,%edx
		mov    %cl,(%eax)
		mov    $_0c1b4c_data,%eax
		call   _04b380_func
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b58_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		lea    0x000007(%edx),%eax
		testb  $0x000010,0x000007(%edx)
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		shl    $0x000004,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)
		jmp    _0643c0_jump

	_06435c_jump:
		call   *_0cd03c_data
		test   %ax,%ax
		je     _0643c0_jump
		cmpb   $0x000000,_0c51b4_data
		jne    _0643c0_jump
		cmpb   $0x000000,_0c1f02_data
		jne    _0643ac_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000b,%eax
		je     _06438a_jump
		cmp    $0x00000c,%eax
		jne    _0643ac_jump

	_06438a_jump:
		mov    $0x000006,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %dl,%dl
		xor    %edi,%edi
		mov    %dl,_0c1f04_data
		mov    $0x000003,%edx
		mov    %di,_0c1efc_data
		jmp    _0643bb_jump

	_0643ac_jump:
		mov    $0x000008,%ebx
		mov    $0x000001,%edx

	_0643b6_jump:
		mov    $_0c1b4c_data,%eax

	_0643bb_jump:
		call   _01d6f8_func

	_0643c0_jump:
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0643cb_case:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		test   %eax,%eax
		jne    _064403_jump
		call   *_0cd03c_data
		test   %ax,%ax
		je     _064403_jump
		cmpb   $0x000000,_0c51b4_data
		jne    _064403_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		jmp    _06445e_jump

	_064403_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		je     _06441e_jump
		cmp    $0x00000a,%eax
		je     _06441e_jump
		cmp    $0x000009,%eax
		je     _06441e_jump
		cmp    $0x00000b,%eax
		jne    _064450_jump

	_06441e_jump:
		call   *_0cd03c_data
		test   %ax,%ax
		je     _064432_jump
		cmpb   $0x000000,_0c51b4_data
		je     _06445e_jump

	_064432_jump:
		call   _03e030_func
		test   %ax,%ax
		je     _064450_jump
		call   *_0cd03c_data
		test   %ax,%ax
		je     _064450_jump
		cmpb   $0x000000,_0c51b4_data
		je     _06445e_jump

	_064450_jump:
		testb  $0x000018,_0c3315_data
		jne    _06445e_jump
		call   _06376c_func

	_06445e_jump:
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064469_case:
		addl   $0x00000e,_0c1b78_data
		call   _063fb0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06447b_case:
		orb    $0x000008,_0c1bcd_data
		mov    _0c1b8c_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %dx,_0c25b4_data
		cmp    $0x000003,%eax
		jge    _063fa8_jump
		xor    %eax,%eax
		mov    _0c1bbd_data,%al
		test   %eax,%eax
		jne    _063fa8_jump
		incw   _0c1b8e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0644b8_switch:
		.long   _0645c7_case
		.long   _0645a2_case
		.long   _064689_case
		.long   _064689_case
		.long   _0644f2_case
		.long   _0645b9_case
		.long   _06465a_case




_0644d4_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1bb9_data,%al
		cmp    $0x000006,%al
		ja     _064689_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0644b8_switch(,%eax,4)

	_0644f2_case:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000b,%eax
		je     _064594_jump
		cmp    $0x00000c,%eax
		je     _064594_jump
		call   _061f6c_func
		xor    %eax,%eax
		mov    _0c2506_data,%al
		test   %eax,%eax
		jne    _064535_jump
		call   _063fb0_func
		mov    $0x00000a,%dh
		mov    $0x000001,%eax
		mov    %dh,_0c1bcb_data
		mov    %ax,_0c1b8e_data
		jmp    _064570_jump

	_064535_jump:
		cmp    $0x00000c,%eax
		je     _064545_jump
		xor    %edi,%edi
		mov    %di,_0c1b8e_data
		jmp    _064570_jump

	_064545_jump:
		mov    _0c1ba4_data,%eax
		mov    $0xffffffff,%esi
		sar    $0x000010,%eax
		mov    %si,_0c1b8e_data
		test   %eax,%eax
		je     _064570_jump
		cmpb   $0x000000,_0c24ca_data
		je     _064570_jump
		mov    $_0c1b4c_data,%eax
		call   _04b3f8_func

	_064570_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000002,%eax
		je     _064689_case
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_064594_jump:
		xor    %edx,%edx
		mov    %dx,_0c1b8e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0645a2_case:
		testb  $0x000018,_0c3315_data
		jne    _064689_case
		call   _06376c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0645b9_case:
		movw   $0x0000ff,_0c24f2_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0645c7_case:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000025,%eax
		jne    _0645f7_jump
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0645e1_jump
		neg    %eax

	_0645e1_jump:
		cmp    $0x000080,%eax
		jg     _0645f7_jump
		mov    $0x000026,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func

	_0645f7_jump:
		call   _063310_func
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _064612_jump
		movw   $0x0000ff,_0c24f2_data

	_064612_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _064689_case
		mov    _0c1bb8_data,%al
		cmp    $0x00000f,%eax
		jne    _064689_case
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _023f98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		jne    _064689_case
		mov    $0x00003c,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06465a_case:
		orb    $0x000008,_0c1bcd_data
		mov    _0c1b8c_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %dx,_0c25b4_data
		cmp    $0xfffffffd,%eax
		jle    _064689_case
		xor    %eax,%eax
		mov    _0c1bbd_data,%al
		test   %eax,%eax
		jne    _064689_case
		decw   _0c1b8e_data

	_064689_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		lea    0x000000(%eax),%eax
		ret    

_064694_switch:
		.long   _064855_case
		.long   _0646de_case
		.long   _064a3a_case
		.long   _063fa8_jump
		.long   _064a96_case
		.long   _064be3_case
		.long   _064c0e_case




_0646b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0c1bb9_data,%al
		cmp    $0x000006,%al
		ja     _063fa8_jump
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24f6_data,%al
		inc    %al
		jmp    *%cs:_064694_switch(%edx)

	_0646de_case:
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		mov    %al,_0c24f6_data
		cmp    $0x000008,%edx
		je     _0646f5_jump
		cmp    $0x00000a,%edx
		jne    _064724_jump

	_0646f5_jump:
		call   *_0cd03c_data
		test   %ax,%ax
		je     _064713_jump
		cmpb   $0x000000,_0c51b4_data
		jne    _064713_jump
		call   _03e118_func
		test   %ax,%ax
		jne    _064724_jump

	_064713_jump:
		mov    $0x00002f,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		jmp    _064799_jump

	_064724_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000009,%eax
		je     _064735_jump
		cmp    $0x00000b,%eax
		jne    _064761_jump

	_064735_jump:
		call   _03e118_func
		test   %ax,%ax
		je     _064753_jump
		call   *_0cd03c_data
		test   %ax,%ax
		je     _064753_jump
		cmpb   $0x000000,_0c51b4_data
		je     _064761_jump

	_064753_jump:
		mov    $0x000030,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		jmp    _064799_jump

	_064761_jump:
		call   _03e118_func
		test   %ax,%ax
		je     _06479e_jump
		call   *_0cd03c_data
		test   %ax,%ax
		je     _06479e_jump
		cmpb   $0x000000,_0c51b4_data
		jne    _06479e_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		test   %eax,%eax
		jne    _06479e_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax

	_064799_jump:
		call   _01d6f8_func

	_06479e_jump:
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		movswl %cx,%edx
		cmp    %edx,%eax
		je     _06480a_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		je     _0647c6_jump
		cmp    $0x00000a,%eax
		jne    _0647d9_jump

	_0647c6_jump:
		mov    $0x000032,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _06482a_jump

	_0647d9_jump:
		cmp    $0x00000b,%eax
		je     _06482a_jump
		cmp    $0x000032,%eax
		je     _06482a_jump
		cmp    $0x000033,%eax
		je     _06482a_jump
		xor    %eax,%eax
		mov    _0c259c_data,%al
		cmp    $0x000001,%eax
		je     _06482a_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		jmp    _06482a_jump

	_06480a_jump:
		xor    %edx,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000009,%eax
		je     _06481b_jump
		cmp    $0x00000b,%eax
		jne    _06482a_jump

	_06481b_jump:
		mov    $0x00000a,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func

	_06482a_jump:
		mov    %cl,%al
		mov    _0c1bcd_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0c1bcd_data
		or     %al,%bl
		mov    %bl,_0c1bcd_data
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064855_case:
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		mov    %al,_0c24f6_data
		cmp    $0x00000f,%edx
		je     _064875_jump
		cmp    $0x00002f,%edx
		je     _064875_jump
		cmp    $0x000030,%edx
		jne    _0648fd_jump

	_064875_jump:
		call   *_0cd03c_data
		test   %ax,%ax
		je     _0648fd_jump
		cmpb   $0x000000,_0c51b4_data
		jne    _0648fd_jump
		call   _03e118_func
		test   %ax,%ax
		je     _0648fd_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		movswl %cx,%edx
		cmp    %edx,%eax
		jne    _0648c7_jump
		mov    $0x000008,%ebx
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		jmp    _064a2f_jump

	_0648c7_jump:
		mov    $0x000033,%ebx
		mov    %cl,%al
		mov    _0c1bcd_data,%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,_0c1bcd_data
		mov    %cl,%ch
		xor    %edx,%edx
		or     %al,%ch
		mov    $_0c1b4c_data,%eax
		mov    %ch,_0c1bcd_data
		call   _01d6f8_func
		jmp    _064a2f_jump

	_0648fd_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000f,%eax
		jne    _06494c_jump
		call   _03e118_func
		test   %ax,%ax
		jne    _06494c_jump
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _023f98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		jne    _06494c_jump
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06494c_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000c,%eax
		je     _064a2f_jump
		cmp    $0x00000b,%eax
		je     _064a2f_jump
		cmp    $0x000012,%eax
		je     _064a2f_jump
		cmp    $0x000014,%eax
		je     _064a2f_jump
		cmp    $0x00000f,%eax
		je     _064a2f_jump
		cmp    $0x00002f,%eax
		je     _064a2f_jump
		cmp    $0x000030,%eax
		je     _064a2f_jump
		cmp    $0x000032,%eax
		je     _064a2f_jump
		cmp    $0x000033,%eax
		je     _064a2f_jump
		cmp    $0x00003d,%eax
		je     _064a2f_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		movswl %cx,%eax
		cmp    %eax,%edx
		je     _064a14_jump
		xor    %eax,%eax
		mov    _0c259c_data,%al
		cmp    $0x000001,%eax
		je     _0649db_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		jmp    _0649df_jump

	_0649db_jump:
		mov    %eax,%edx
		xor    %ebx,%ebx

	_0649df_jump:
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    %cl,%al
		mov    _0c1bcd_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0c1bcd_data
		or     %al,%bl
		mov    %bl,_0c1bcd_data
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064a14_jump:
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f0_func
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6e8_func

	_064a2f_jump:
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064a3a_case:
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		mov    %al,_0c24f6_data
		cmp    $0x00000f,%edx
		je     _064a5d_jump
		mov    _0c1b94_data,%ax
		test   %ax,%ax
		jne    _064a5d_jump
		mov    %ax,_0c25b4_data

	_064a5d_jump:
		call   _063310_func
		cmpb   $0x000000,_0c51b4_data
		jne    _064a8b_jump
		mov    %cl,%al
		mov    _0c1bcd_data,%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,_0c1bcd_data
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,_0c1bcd_data

	_064a8b_jump:
		call   _063cec_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064a96_case:
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		mov    %al,_0c24f6_data
		cmp    $0x000002,%edx
		jne    _064ab2_jump
		call   _03e18c_func
		test   %ax,%ax
		jne    _064ac8_jump

	_064ab2_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000003,%eax
		jne    _064b0b_jump
		call   _03e118_func
		test   %ax,%ax
		je     _064b0b_jump

	_064ac8_jump:
		call   _061f6c_func
		xor    %eax,%eax
		mov    _0c2506_data,%al
		test   %eax,%eax
		jne    _064b04_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000002,%eax
		jne    _064afd_jump
		call   _063fb0_func
		mov    $0x00000a,%dl
		mov    $0x000001,%esi
		mov    %dl,_0c1bcb_data
		mov    %si,_0c1b8e_data
		jmp    _064b21_jump

	_064afd_jump:
		call   _063fb0_func
		jmp    _064b21_jump

	_064b04_jump:
		cmp    $0x00000c,%eax
		je     _064b21_jump
		jmp    _064b1c_jump

	_064b0b_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000002,%eax
		je     _064b1c_jump
		cmp    $0x000003,%eax
		jne    _064b21_jump

	_064b1c_jump:
		call   _06376c_func

	_064b21_jump:
		call   *_0cd03c_data
		cwtl   
		test   %eax,%eax
		je     _064b72_jump
		xor    %edx,%edx
		mov    _0c2503_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _064b72_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000b,%eax
		je     _064b72_jump
		cmp    $0x00000c,%eax
		je     _064b72_jump
		cmp    $0x00000d,%eax
		je     _064b72_jump
		mov    $0x000100,%edi
		call   _062d1c_func
		mov    %di,_0c25b4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064b72_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000d,%eax
		jne    _064ba4_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		movswl %cx,%edx
		cmp    %edx,%eax
		je     _064ba4_jump
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func

	_064ba4_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000b,%eax
		je     _063fa8_jump
		cmp    $0x00000c,%eax
		je     _063fa8_jump
		mov    %cl,%al
		mov    _0c1bcd_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0c1bcd_data
		or     %al,%bl
		mov    %bl,_0c1bcd_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064be3_case:
		mov    _0c1bcd_data,%ah
		shl    $0x000004,%ah
		xor    %ebx,%ebx
		shr    $0x000007,%ah
		movswl %cx,%edx
		mov    %ah,%bl
		mov    %al,_0c24f6_data
		cmp    %edx,%ebx
		je     _063fa8_jump
		call   _063fb0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064c0e_case:
		mov    _0c1bcd_data,%ah
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    %dx,_0c25b4_data
		mov    %ah,_0c1bcd_data
		mov    %al,_0c24f6_data
		test   %cx,%cx
		je     _064c35_jump
		movswl %cx,%eax
		jmp    _064c3a_jump

	_064c35_jump:
		mov    $0xffffffff,%eax

	_064c3a_jump:
		mov    _0c1b8a_data,%edx
		mov    %eax,%ecx
		sar    $0x000010,%edx
		cwtl   
		imul   %edx,%eax
		cmp    $0x000003,%eax
		jge    _063fa8_jump
		xor    %eax,%eax
		mov    _0c1bbd_data,%al
		test   %eax,%eax
		jne    _063fa8_jump
		add    %cx,_0c1b8c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_064c70_switch:
		.long   _064d59_case
		.long   _064cab_case
		.long   _065223_case
		.long   _063fa8_jump
		.long   _0651f4_case
		.long   _063fa8_jump
		.long   _065293_case




_064c8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1bb9_data,%al
		cmp    $0x000006,%al
		ja     _063fa8_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_064c70_switch(,%eax,4)

	_064cab_case:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000004,%eax
		je     _064d4e_jump
		cmp    $0x000005,%eax
		je     _064d4e_jump
		testb  $0x000018,_0c3315_data
		jne    _064d4e_jump
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6f0_func
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		je     _064cee_jump
		cmp    $0x00000a,%eax
		jne    _064cfa_jump

	_064cee_jump:
		mov    $0x00002f,%edx
		mov    $_0c1b4c_data,%eax
		jmp    _064d49_jump

	_064cfa_jump:
		cmp    $0x000009,%eax
		je     _064d04_jump
		cmp    $0x00000b,%eax
		jne    _064d1e_jump

	_064d04_jump:
		mov    $0x000030,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064d1e_jump:
		cmp    $0x000003,%eax
		je     _064d28_jump
		cmp    $0x000007,%eax
		jne    _064d42_jump

	_064d28_jump:
		mov    $0x000024,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064d42_jump:
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx

	_064d49_jump:
		call   _01d6e8_func

	_064d4e_jump:
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064d59_case:
		mov    _0c1b9a_data,%eax
		xor    %edi,%edi
		sar    $0x000010,%eax
		mov    %di,_0c1b8c_data
		cmp    $0xffffffff,%eax
		je     _064d96_jump
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		test   %edx,%edx
		jne    _064d96_jump
		cmp    $0x000001,%eax
		jne    _064d87_jump
		mov    $0x000031,%edx
		jmp    _064d8c_jump

	_064d87_jump:
		mov    $0x000003,%edx

	_064d8c_jump:
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func

	_064d96_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _064e7c_jump
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _023f98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		jne    _064e08_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _064df2_jump
		mov    _0c1bb8_data,%al
		cmp    $0x00003c,%eax
		je     _0651e9_jump

	_064df2_jump:
		mov    $0x00003c,%ebx
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _0651e9_jump

	_064e08_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _064e21_jump
		mov    _0c1bb8_data,%al
		cmp    $0x00000f,%eax
		je     _0651e9_jump

	_064e21_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _064e3a_jump
		mov    _0c1bb8_data,%al
		cmp    $0x00003d,%eax
		je     _0651e9_jump

	_064e3a_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $0x00000f,%ebx
		sub    %edx,%eax
		mov    _0c1b50_data,%ecx
		shl    $0x000002,%eax
		xor    %edx,%edx
		add    %eax,%ecx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    0x00000a(%ecx),%al
		dec    %al
		mov    %al,_0c1bb7_data
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064e7c_jump:
		cmp    $0x000025,%eax
		jne    _064eb0_jump
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _064e8f_jump
		neg    %eax

	_064e8f_jump:
		cmp    $0x000080,%eax
		jg     _064eb0_jump
		mov    $0x000026,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064eb0_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000014,%eax
		jne    _065009_jump
		xor    %edx,%edx
		mov    _0c1b58_data,%ecx
		mov    _0c1bb9_data,%dl
		mov    (%ecx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _064ee3_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jmp    _064f0f_jump

	_064ee3_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b50_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_064f0f_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _065009_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _065009_jump
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _023f98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		je     _0651e9_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b58_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		mov    (%eax),%eax
		shl    $0x000003,%edx
		add    %eax,%edx
		lea    0x000007(%edx),%eax
		testb  $0x000010,0x000007(%edx)
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000ef,%bh
		shl    $0x000004,%dl
		mov    %bh,%cl
		or     %dl,%cl
		mov    $0x000001,%edx
		mov    %cl,(%eax)
		mov    $_0c1b4c_data,%eax
		call   _04b380_func
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		lea    0x000007(%edx),%eax
		testb  $0x000010,0x000007(%edx)
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		shl    $0x000004,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065009_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00003b,%eax
		je     _06502d_jump
		cmp    $0x00003e,%eax
		je     _06502d_jump
		cmp    $0x00003f,%eax
		je     _06502d_jump
		cmp    $0x000040,%eax
		je     _06502d_jump
		cmp    $0x000041,%eax
		jne    _0650ed_jump

	_06502d_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b58_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _06505d_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jmp    _065089_jump

	_06505d_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b50_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_065089_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _0651e9_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0651e9_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,_0cd0f4_data
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0650ed_jump:
		test   %eax,%eax
		je     _0650ff_jump
		cmp    $0x000001,%eax
		je     _0650ff_jump
		cmp    $0x000002,%eax
		jne    _0651e9_jump

	_0650ff_jump:
		incw   _0cd0f4_data
		mov    _0cd0f2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0001f4,%eax
		jl     _0651e9_jump
		mov    _0cd0fc_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _06514b_jump
		mov    $0x00003b,%edx
		mov    $_0c1b4c_data,%eax
		mov    $0x000001,%edi
		call   _01d6e8_func
		mov    %di,_0cd0fe_data
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06514b_jump:
		cmp    $0x000001,%eax
		jne    _065176_jump
		mov    $0x000040,%edx
		mov    $_0c1b4c_data,%eax
		mov    $0x000002,%esi
		call   _01d6e8_func
		mov    %si,_0cd0fe_data
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065176_jump:
		cmp    $0x000002,%eax
		jne    _0651a1_jump
		mov    $0x00003e,%edx
		mov    $_0c1b4c_data,%eax
		mov    $0x000003,%ecx
		call   _01d6e8_func
		mov    %cx,_0cd0fe_data
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0651a1_jump:
		cmp    $0x000003,%eax
		jne    _0651cc_jump
		mov    $0x00003f,%edx
		mov    $_0c1b4c_data,%eax
		mov    $0x000004,%ebx
		call   _01d6e8_func
		mov    %bx,_0cd0fe_data
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0651cc_jump:
		cmp    $0x000004,%eax
		jne    _0651e9_jump
		mov    $0x000041,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		xor    %edx,%edx
		mov    %dx,_0cd0fe_data

	_0651e9_jump:
		call   _063310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0651f4_case:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000002,%eax
		je     _065209_jump
		cmp    $0x000003,%eax
		jne    _063fa8_jump

	_065209_jump:
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6e8_func
		xor    %eax,%eax
		mov    %ax,_0c1b8e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065223_case:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c1bb8_data,%al
		mov    %dx,_0cd0f4_data
		mov    %dx,_0cd0fe_data
		cmp    $0x000008,%eax
		je     _065246_jump
		mov    %dx,_0c1b8c_data

	_065246_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000f,%eax
		je     _06525c_jump
		cmpw   $0x000000,_0c1b94_data
		je     _065279_jump

	_06525c_jump:
		mov    $0x000008,%eax
		mov    _0c2596_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		call   _063024_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065279_jump:
		mov    _0c2596_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		call   _063024_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065293_case:
		mov    _0c1bcd_data,%ah
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    %dx,_0c25b4_data
		mov    _0c24f6_data,%dl
		mov    %ah,_0c1bcd_data
		xor    %eax,%eax
		inc    %dl
		mov    _0c1bbd_data,%al
		mov    %dl,_0c24f6_data
		test   %eax,%eax
		jne    _063fa8_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0652dd_jump
		decw   _0c1b8c_data
		jmp    _0652e6_jump

	_0652dd_jump:
		jge    _0652e6_jump
		incw   _0c1b8c_data

	_0652e6_jump:
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0652ff_jump
		decw   _0c1b8e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0652ff_jump:
		jge    _063fa8_jump
		incw   _0c1b8e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065314_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _065422_jump
		cmp    $0x000001,%eax
		je     _0653f4_jump
		call   _06376c_func
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _065422_jump
		mov    _0c1bb8_data,%al
		test   %eax,%eax
		je     _065374_jump
		cmp    $0x000001,%eax
		je     _065374_jump
		cmp    $0x000002,%eax
		je     _065374_jump
		cmp    $0x00003f,%eax
		je     _065374_jump
		cmp    $0x00003e,%eax
		je     _065374_jump
		cmp    $0x00003b,%eax
		je     _065374_jump
		cmp    $0x000003,%eax
		je     _065374_jump
		cmp    $0x000008,%eax
		jne    _065422_jump

	_065374_jump:
		testb  $0x000040,_0c3314_data
		je     _0653b6_jump
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _065422_jump
		mov    $0x000010,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		xor    %edx,%edx
		mov    %dx,_0c1b8c_data
		mov    %dx,_0c1b8e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0653b6_jump:
		cmpb   $0x000000,_0c51b4_data
		jne    _065422_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000012,%eax
		je     _065422_jump
		mov    _0c3315_data,%dh
		test   $0x000018,%dh
		jne    _065422_jump
		test   $0x000001,%dh
		jne    _065422_jump
		cmp    $0x000008,%eax
		je     _065422_jump
		testb  $0x000001,_0c3316_data
		jne    _065422_jump
		mov    $0x000012,%edx
		jmp    _065418_jump

	_0653f4_jump:
		cmp    %eax,%eax
		jne    _065422_jump
		mov    _0c3315_data,%cl
		test   $0x000018,%cl
		jne    _065422_jump
		test   $0x000001,%cl
		je     _065422_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		test   %eax,%eax
		jne    _065422_jump
		mov    $0x000003,%edx

	_065418_jump:
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func

	_065422_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx

	_065425_jump:
		ret    



_065428_func:
		xor    %eax,%eax
		mov    _0c1f02_data,%al
		test   %eax,%eax
		jne    _065425_jump
		testb  $0x000001,_0c3314_data
		je     _065425_jump
		testb  $0x000018,_0c3315_data
		jne    _065425_jump
		jmp    _05c9d0_jump

_06544c_switch:
		.long   _06549e_case
		.long   _065494_case
		.long   _06549e_case
		.long   _063ce7_case
		.long   _063ce7_case
		.long   _06549e_case
		.long   _063ce7_case
		.long   _06549e_case




_06546c_func:
		push   %edx
		cmpb   $0x000000,_0c25a0_data
		jne    _063ce7_case
		mov    _0c1bb9_data,%al
		cmp    $0x000007,%al
		ja     _063ce7_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06544c_switch(,%eax,4)

	_065494_case:
		call   _03e118_func
		test   %ax,%ax
		jne    _0654a5_jump

	_06549e_case:
		call   _062d1c_func
		pop    %edx
		ret    

	_0654a5_jump:
		xor    %dl,%dl
		mov    %dl,_0c2503_data
		pop    %edx
		ret    



_0654b0_func:
		push   %ebx
		push   %edx
		movswl %ax,%edx
		test   %edx,%edx
		jne    _0654ba_jump
		inc    %eax

	_0654ba_jump:
		cwtl   
		dec    %eax
		mov    _0c1bcd_data,%bl
		sar    $0x000003,%eax
		shl    $0x000004,%bl
		movswl %ax,%edx
		shr    $0x000007,%bl
		cmp    $0x00001f,%edx
		jg     _0654ea_jump
		and    $0x0000ff,%ebx
		jne    _0654e3_jump
		add    $0x00001f,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0654e3_jump:
		mov    $0x000020,%eax
		jmp    _0654fd_jump

	_0654ea_jump:
		and    $0x0000ff,%ebx
		jne    _0654f8_jump
		sub    $0x00001f,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0654f8_jump:
		mov    $0x00005f,%eax

	_0654fd_jump:
		sub    %edx,%eax
		test   %eax,%eax
		jge    _065505_jump
		neg    %eax

	_065505_jump:
		pop    %edx
		pop    %ebx
		ret    



_065508_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _06552c_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		jne    _06552c_jump
		movw   $0x00005a,_0c1ba2_data

	_06552c_jump:
		mov    $0x000007,%edx
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		mov    $0xffffffff,%ecx
		call   _01d6f8_func
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		call   _068654_func
		mov    %bx,_0c1b9e_data
		mov    %cx,_0c1b96_data
		mov    %bx,_0c25b4_data
		mov    %bx,_0c1b8e_data
		xor    %dl,%dl
		xor    %ah,%ah
		mov    %dl,_0c1bbe_data
		mov    $0x000001,%dh
		mov    %ah,_0c1bbd_data
		mov    %dh,_0c2503_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065588_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0c1b74_data,%dx
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    _0c1bb4_data,%al
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    0x000068(%esi),%cl
		sub    %ebx,%eax
		sub    %ecx,%eax
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0c1b78_data,%di
		mov    _0c1bb5_data,%al
		mov    0x00002c(%esi),%dx
		add    %edi,%eax
		sub    %edx,%eax
		movswl %cx,%edx
		imul   %edx,%edx
		movzbw 0x000069(%esi),%di
		sub    %edi,%eax
		mov    %eax,%edi
		cwtl   
		imul   %eax,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		test   %edx,%edx
		jne    _06577a_jump
		cmp    $0x0011a0,%eax
		jbe    _0656ea_jump
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		movb   $0x000000,0x00007f(%esi)
		xor    %eax,%eax
		mov    %ax,_0c1b8e_data
		mov    %ax,_0c1b8c_data
		mov    %ax,_0c25b4_data
		mov    %esi,%eax
		call   _0708ac_func
		mov    %eax,%edx
		mov    %ax,0x00004e(%esi)
		cwtl   
		cmp    $0x000100,%eax
		jg     _065647_jump
		jne    _06564f_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06564f_jump

	_065647_jump:
		movw   $0x00ffff,0x000052(%esi)
		jmp    _065655_jump

	_06564f_jump:
		movw   $0x000001,0x000052(%esi)

	_065655_jump:
		movswl %cx,%eax
		test   %eax,%eax
		jge    _06565e_jump
		neg    %ecx

	_06565e_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _065667_jump
		neg    %edi

	_065667_jump:
		mov    %edx,%eax
		mov    %esp,%ebx
		add    $0x000080,%eax
		lea    0x000004(%esp),%edx
		cwtl   
		call   _0533ec_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jle    _0656c4_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jle    _0656c4_jump
		movswl %cx,%eax
		mov    $0x000009,%cl
		shl    %cl,%eax
		mov    -0x000002(%esp),%ebx
		mov    %eax,%edx
		sar    $0x000010,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000009,%cl
		mov    %eax,%ebx
		movswl %di,%eax
		shl    %cl,%eax
		mov    0x000002(%esp),%ecx
		mov    %eax,%edx
		sar    $0x000010,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		sar    %eax
		jmp    _0656dd_jump

	_0656c4_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jg     _0656db_jump
		mov    %ecx,%eax
		mov    %ax,0x00004c(%esi)
		jmp    _06577a_jump

	_0656db_jump:
		mov    %edi,%eax

	_0656dd_jump:
		mov    %ax,0x00004c(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0656ea_jump:
		ja     _065742_jump
		mov    _0c1bbd_data,%dl
		xor    %eax,%eax
		inc    %dl
		mov    %ax,_0c1b8c_data
		mov    %dl,_0c1bbd_data
		mov    0x000042(%esi),%ax
		mov    _0c1b8e_data,%dx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bbd_data,%al
		mov    %dx,_0c1b8e_data
		cmp    $0x000003,%eax
		jl     _06577a_jump
		mov    _0c1b8e_data,%bx
		xor    %dh,%dh
		inc    %ebx
		mov    %dh,_0c1bbd_data
		mov    %bx,_0c1b8e_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065742_jump:
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		xor    %ebx,%ebx
		mov    $0x000001,%ah
		mov    %bx,_0c1b8e_data
		mov    %bx,_0c1b8c_data
		mov    %bx,_0c25b4_data
		movb   $0x000000,0x00007f(%esi)
		mov    %ah,_0c2503_data
		movw   $0x00005f,0x00004c(%esi)

	_06577a_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065784_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0c1b58_data,%eax
		mov    %eax,(%esp)
		mov    _0c2608_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		mov    $0x000080,%edi
		add    %eax,%ecx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%ecx
		mov    $0x000180,%edx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    %edx,0x00000c(%esp)
		mov    _0c1bb8_data,%al
		mov    0x00004e(%ecx),%si
		test   %eax,%eax
		jne    _0657d7_jump
		mov    %ecx,%eax
		call   _065588_func
		jmp    _065903_jump

	_0657d7_jump:
		cmp    $0x000001,%eax
		jne    _065903_jump
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		test   %eax,%eax
		jne    _0658e5_jump
		mov    0x00004a(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000064,%eax
		jle    _0657ff_jump
		subw   $0x000002,0x00004c(%ecx)
		jmp    _065808_jump

	_0657ff_jump:
		cmp    $0x00005f,%eax
		jge    _065808_jump
		incw   0x00004c(%ecx)

	_065808_jump:
		mov    %esi,%eax
		lea    0x000010(%esp),%ebx
		add    $0x000080,%eax
		lea    0x000008(%esp),%edx
		cwtl   
		call   _053308_func
		cmp    0x00000c(%esp),%si
		jl     _06583a_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _065832_jump
		movb   $0x000005,0x00007f(%ecx)

	_065832_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _065853_jump

	_06583a_jump:
		cmp    %di,%si
		jg     _065853_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06584d_jump
		movb   $0x000005,0x00007f(%ecx)

	_06584d_jump:
		movw   $0x000001,0x000052(%ecx)

	_065853_jump:
		movswl %si,%eax
		call   _0533c8_func
		cwtl   
		mov    0x000050(%ecx),%edx
		sar    $0x000007,%eax
		sar    $0x000010,%edx
		inc    %eax
		test   %edx,%edx
		jge    _06586c_jump
		neg    %eax

	_06586c_jump:
		add    %ax,0x00004e(%ecx)
		mov    _0c1b78_data,%ax
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		mov    0x00000e(%esp),%edx
		add    %eax,%ebx
		mov    0x00004a(%ecx),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000009,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0c1bb4_data,%dl
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebp
		mov    0x000069(%ecx),%dl
		add    %ebp,%edx
		mov    0x000006(%esp),%ebp
		sar    $0x000010,%ebp
		imul   %ebp,%eax
		sar    $0x000009,%eax
		mov    _0c1b74_data,%di
		sub    %eax,%edx
		xor    %eax,%eax
		sub    %edi,%ebx
		mov    _0c1bb5_data,%al
		mov    %bx,_0c1b8c_data
		sub    %eax,%edx
		mov    0x000004(%esp),%ebx
		mov    %edx,%eax
		sub    %ebx,%eax
		mov    %ax,_0c1b8e_data
		jmp    _065903_jump

	_0658e5_jump:
		mov    %al,%ah
		dec    %ah
		xor    %ebx,%ebx
		mov    %ah,0x00007f(%ecx)
		mov    %bx,_0c25b4_data
		mov    %bx,_0c1b8c_data
		mov    %bx,_0c1b8e_data

	_065903_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000002(%ebx,%eax,1),%al
		mov    %al,_0c1bb6_data
		movswl %si,%eax
		call   _0654b0_func
		mov    _0c1b8c_data,%si
		mov    %al,_0c1bb7_data
		mov    0x000040(%ecx),%ax
		mov    _0c1b8e_data,%di
		add    %eax,%esi
		add    0x000042(%ecx),%di
		xor    %eax,%eax
		mov    _0c1bae_data,%al
		mov    %si,_0c1b8c_data
		mov    _0921f8_data(%eax),%dl
		mov    %di,_0c1b8e_data
		test   $0x000002,%dl
		je     _065a41_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _065994_jump
		mov    _0c1baf_data,%al
		testb  $0x000002,_0921f8_data(%eax)
		jne    _0659c1_jump

	_065994_jump:
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _065a41_jump
		xor    %eax,%eax
		mov    _0c1bb0_data,%al
		testb  $0x000002,_0921f8_data(%eax)
		je     _065a41_jump

	_0659c1_jump:
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _0659d7_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _065a41_jump

	_0659d7_jump:
		mov    $_0c1b4c_data,%eax
		call   _024bd4_func
		mov    _0c1b8c_data,%eax
		mov    _0c1b78_data,%edx
		sar    $0x000010,%eax
		mov    $0x000008,%ebx
		add    %eax,%edx
		xor    %ch,%ch
		mov    %edx,_0c1b78_data
		xor    %eax,%eax
		mov    $0xffffffff,%edx
		mov    %ax,_0c1b8e_data
		mov    $_0c1b4c_data,%eax
		mov    %dx,_0c2504_data
		xor    %edx,%edx
		mov    %ch,_0c1bcb_data
		call   _01d6f8_func
		mov    $0xffffffff,%ebx
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		mov    %bx,_0c1b9e_data
		call   _068654_func
		jmp    _065a66_jump

	_065a41_jump:
		xor    %eax,%eax
		mov    _0c1bb0_data,%al
		testb  $0x000010,_0921f8_data(%eax)
		jne    _065a61_jump
		xor    %eax,%eax
		mov    _0c1baf_data,%al
		testb  $0x000010,_0921f8_data(%eax)
		je     _065a66_jump

	_065a61_jump:
		call   _065a70_func

	_065a66_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065a70_func:
		push   %ebx
		push   %edx
		mov    _0c2608_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		mov    0x00004c(%edx,%eax,4),%eax
		sar    $0x000010,%eax
		cmp    $0x000100,%eax
		setl   %al
		and    $0x0000ff,%eax
		and    $0x000001,%al
		mov    _0c1bcd_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0c1bcd_data
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0x000002,%ebx
		or     %al,%dl
		mov    $_0c1b4c_data,%eax
		mov    %dl,_0c1bcd_data
		mov    %ebx,%edx
		call   _01d6f8_func
		mov    $0xffffffff,%ebx
		xor    %edx,%edx
		mov    _0c1b8a_data,%eax
		mov    %dx,_0c1b8e_data
		xor    %dh,%dh
		sar    $0x000010,%eax
		mov    %dh,_0c1bbd_data
		mov    %dh,_0c1bbe_data
		mov    _0c1b74_data,%edx
		mov    %bx,_0c2504_data
		sub    %eax,%edx
		mov    %bx,_0c1b9e_data
		mov    %edx,_0c1b74_data
		pop    %edx
		pop    %ebx
		ret    



_065b10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1b74_data,%dx
		mov    _0c1b78_data,%bx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0c1bb4_data,%al
		mov    _0c1bc0_data,%cl
		add    %edx,%eax
		add    %ebx,%ecx
		mov    _0c25b2_data,%edx
		mov    %eax,%esi
		mov    %al,%bl
		sar    $0x000010,%edx
		and    $0x00000f,%bl
		test   %edx,%edx
		jg     _065b63_jump
		jne    _065b77_jump
		mov    _0c1bcd_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		jne    _065b77_jump

	_065b63_jump:
		mov    $0x000010,%edx
		and    $0x0000ff,%ebx
		cmp    $0x00000d,%ebx
		jle    _065b8a_jump
		add    %edx,%eax
		jmp    _065b8a_jump

	_065b77_jump:
		mov    $0xfffffff0,%edx
		and    $0x0000ff,%ebx
		cmp    $0x000004,%ebx
		jge    _065b8a_jump
		sub    $0x000010,%eax

	_065b8a_jump:
		mov    _0c25b4_data,%di
		add    %edx,%eax
		test   %di,%di
		je     _065be9_jump
		mov    %ecx,%edx
		movswl %ax,%ebx
		add    $0x000010,%edx
		mov    %ebx,%eax
		movswl %dx,%edx
		call   _023ec0_func
		test   %ax,%ax
		jne    _065bdb_jump
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _023ec0_func
		test   %ax,%ax
		jne    _065bdb_jump
		mov    %ecx,%eax
		add    $0x000030,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _023ec0_func
		test   %ax,%ax
		je     _065be9_jump

	_065bdb_jump:
		xor    %eax,%eax
		mov    %ax,_0c1b8c_data
		mov    %ax,_0c25b4_data

	_065be9_jump:
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _065c11_jump
		add    $0x000010,%ecx
		movswl %si,%eax
		movswl %cx,%edx
		call   _023ec0_func
		test   %ax,%ax
		je     _065c11_jump
		xor    %ebx,%ebx
		mov    %bx,_0c1b8e_data

	_065c11_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065c18_func:
		push   %ebx
		push   %edx
		mov    _0c1b74_data,%ax
		sub    _0c25ac_data,%ax
		cwtl   
		cmp    $0x000001,%eax
		jle    _065c4e_jump
		mov    _0c1bcd_data,%dl
		and    $0x0000f7,%dl
		mov    $_0c1b4c_data,%eax
		mov    %dl,_0c1bcd_data
		mov    $0x000015,%edx
		call   _01d6e8_func
		pop    %edx
		pop    %ebx
		ret    

	_065c4e_jump:
		cmp    $0xffffffff,%eax
		jge    _065c74_jump
		mov    _0c1bcd_data,%ah
		or     $0x000008,%ah
		mov    $0x000015,%edx
		mov    %ah,_0c1bcd_data
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		pop    %edx
		pop    %ebx
		ret    

	_065c74_jump:
		mov    $0x000014,%edx
		xor    %ebx,%ebx
		mov    $_0c1b4c_data,%eax
		mov    %bx,_0c1b8c_data
		call   _01d6e8_func
		mov    _0c1b74_data,%ax
		mov    %ax,_0c25ac_data
		pop    %edx
		pop    %ebx
		ret    



_065c9c_func:
		push   %edx
		mov    _0c25ae_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000003,%edx
		je     _065d03_jump
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		je     _065d03_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000007,%eax
		je     _065d03_jump
		cmp    $0x000009,%eax
		je     _065d03_jump
		mov    _0c1b8c_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jg     _065d03_jump
		cmp    $0x000008,%eax
		je     _065cf3_jump
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		xor    %dh,%dh
		mov    %dh,_0c2503_data

	_065cf3_jump:
		xor    %edx,%edx
		mov    %dx,_0c1b9e_data
		mov    %dx,_0c1b8e_data

	_065d03_jump:
		pop    %edx
		ret    



_065d08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c2598_data,%dx
		mov    _0c1b58_data,%esi
		test   %dx,%dx
		je     _065d2b_jump
		movw   $0x000001,_0c1b94_data

	_065d2b_jump:
		mov    $0x000012,%ebx
		mov    $_0c25b6_data,%edx
		mov    $_0c25b8_data,%eax
		call   _07b58e_func
		mov    _0c1b74_data,%ax
		mov    %ax,_0c25b6_data
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000007,%eax
		jne    _065d60_jump
		movw   $0x00ffff,_0c1b96_data

	_065d60_jump:
		movb   $0x000001,(%esp)
		mov    _0c2502_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _065d78_jump
		decw   _0c2504_data

	_065d78_jump:
		mov    _0c2606_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _065d8c_jump
		decw   _0c2608_data

	_065d8c_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		mov    _0c24f4_data,%bx
		add    %eax,%edx
		inc    %ebx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		mov    %bx,_0c24f4_data
		mov    0x000005(%edx,%eax,8),%al
		xor    %ebx,%ebx
		shr    $0x000004,%al
		mov    %al,%bl
		and    $0x0000ff,%eax
		cmp    $0x00000b,%eax
		je     _065e11_jump
		movswl %bx,%eax
		cmp    $0x00000a,%eax
		je     _065e11_jump
		mov    _0c1bbd_data,%dl
		xor    %eax,%eax
		inc    %dl
		mov    %dl,%al
		mov    %dl,_0c1bbd_data
		cmp    $0x000003,%eax
		jl     _065df2_jump
		xor    %dh,%dh
		mov    %dh,_0c1bbd_data

	_065df2_jump:
		mov    _0c1bbe_data,%cl
		xor    %eax,%eax
		inc    %cl
		mov    %cl,%al
		mov    %cl,_0c1bbe_data
		cmp    $0x000004,%eax
		jl     _065e11_jump
		xor    %ch,%ch
		mov    %ch,_0c1bbe_data

	_065e11_jump:
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000017,%eax
		jne    _065e25_jump
		incw   _0c1b8e_data

	_065e25_jump:
		call   *_0cd03c_data
		cwtl   
		test   %eax,%eax
		je     _065e5b_jump
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000c,%eax
		jg     _065e5b_jump
		cmpb   $0x000000,_0c1b1e_data
		jne    _065e5b_jump
		xor    %eax,%eax
		mov    _0c1bcb_data,%al
		test   %eax,%eax
		jne    _065e5b_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000002,%eax
		jne    _065e8e_jump

	_065e5b_jump:
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _04b1f4_func
		mov    _0c2503_data,%dl
		mov    $0x000002,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    _065e8e_jump
		call   *_0cd03c_data
		cwtl   
		test   %eax,%eax
		jne    _065e8e_jump
		incb   _0c2503_data

	_065e8e_jump:
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _065ec8_jump
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		cmp    $0x000018,%edx
		je     _065ead_jump
		cmp    $0x000021,%edx
		jne    _065eb4_jump

	_065ead_jump:
		mov    $0x000002,%edx
		jmp    _065ebe_jump

	_065eb4_jump:
		cmp    $0x000020,%edx
		jne    _065ec8_jump
		mov    $0x000011,%edx

	_065ebe_jump:
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func

	_065ec8_jump:
		mov    _0c1b9c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _065ee2_jump
		mov    _0c1b8e_data,%ax
		add    %ax,_0c1b9e_data

	_065ee2_jump:
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _023f98_func
		mov    %al,%dl
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		je     _065f1a_jump
		cmp    $0x00001f,%eax
		je     _065f1a_jump
		call   _063824_func
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000f,%eax
		jne    _065f1a_jump
		call   _065b10_func

	_065f1a_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _065c9c_func
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _065f6d_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000f,%eax
		jne    _065f6d_jump
		movswl %bx,%edx
		cmp    $0x00000b,%edx
		jne    _065f6d_jump
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		mov    (%esi,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,%bh
		or     $0x000010,%bh
		xor    %cl,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %cl,_0c1bbd_data
		mov    %cl,_0c1bbe_data

	_065f6d_jump:
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _065fc0_jump
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		test   %edx,%edx
		jne    _065f9f_jump
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		xor    %edx,%edx
		mov    %dx,_0c1b9e_data
		jmp    _065fc0_jump

	_065f9f_jump:
		cmp    $0x000011,%edx
		je     _065fa9_jump
		cmp    $0x000012,%edx
		jne    _065fc0_jump

	_065fa9_jump:
		mov    $0x000013,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func
		xor    %eax,%eax
		mov    %ax,_0c1b9e_data

	_065fc0_jump:
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		cmp    $0x000011,%edx
		je     _0662c8_jump
		test   %edx,%edx
		je     _0662c8_jump
		cmp    $0x000009,%edx
		je     _0662c8_jump
		cmp    $0x00001f,%edx
		je     _0662c8_jump
		cmp    $0x00000d,%edx
		jne    _066000_jump
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _0662c8_jump

	_066000_jump:
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jl     _0662c8_jump
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _0662c8_jump
		xor    %eax,%eax
		mov    _0c1bae_data,%al
		mov    _0921f8_data(%eax),%dl
		test   $0x000002,%dl
		je     _066270_jump
		test   $0x000040,%dl
		je     _066062_jump
		mov    _0c1b8e_data,%dx
		mov    _0921f8_data(%eax),%bl
		shl    $0x000004,%edx
		test   $0x000080,%bl
		je     _06605b_jump
		add    %dx,_0c25b4_data
		jmp    _066062_jump

	_06605b_jump:
		sub    %dx,_0c25b4_data

	_066062_jump:
		mov    $_0c1b4c_data,%eax
		call   _024bd4_func
		xor    %edi,%edi
		xor    %bh,%bh
		mov    _0c1b8c_data,%eax
		mov    _0c1b78_data,%edx
		mov    %bh,_0c1bcb_data
		mov    %bh,_0c1b1e_data
		sar    $0x000010,%eax
		mov    %di,_0c1b8e_data
		add    %eax,%edx
		mov    $_0c1b4c_data,%eax
		mov    %edx,_0c1b78_data
		call   _024770_func
		test   %al,%al
		jne    _0660dc_jump
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _0660cd_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _0660cd_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _0660d7_jump

	_0660cd_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax

	_0660d7_jump:
		call   _068654_func

	_0660dc_jump:
		cmpw   $0x000000,_0c1b94_data
		jne    _066168_jump
		mov    $0x000001,%al
		jmp    _0660f0_jump

	_0660ee_jump:
		inc    %al

	_0660f0_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00000a,%edx
		jge    _06610b_jump
		mov    _0c25b4_data(,%edx,2),%bx
		cmp    _0c25b6_data(,%edx,2),%bx
		je     _0660ee_jump

	_06610b_jump:
		and    $0x0000ff,%eax
		cmp    $0x00000a,%eax
		je     _06615f_jump
		mov    _0c25b4_data(,%eax,2),%dx
		cmp    _0c25b6_data(,%eax,2),%dx
		jge    _066143_jump
		mov    _0c25b2_data,%ebx
		mov    $0xffffff00,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _06613b_jump
		mov    %ebx,%eax

	_06613b_jump:
		mov    %ax,_0c25b4_data
		jmp    _066168_jump

	_066143_jump:
		mov    _0c25b2_data,%ebx
		mov    $0x000100,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _066157_jump
		mov    %ebx,%eax

	_066157_jump:
		mov    %ax,_0c25b4_data
		jmp    _066168_jump

	_06615f_jump:
		xor    %esi,%esi
		mov    %si,_0c25b4_data

	_066168_jump:
		movw   $0x00ffff,_0c2504_data
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000003,%eax
		jne    _066191_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jne    _0661af_jump
		movb   $0x000001,_0c2503_data
		jmp    _0661af_jump

	_066191_jump:
		cmp    $0x000008,%eax
		jne    _0661af_jump
		mov    _0c1ba0_data,%eax
		mov    $0x00005a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0661a9_jump
		mov    %ebx,%eax

	_0661a9_jump:
		mov    %ax,_0c1ba2_data

	_0661af_jump:
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		cmp    $0x000011,%edx
		je     _0661c6_jump
		cmp    $0x000012,%edx
		je     _0661c6_jump
		cmp    $0x000013,%edx
		jne    _06621e_jump

	_0661c6_jump:
		testb  $0x000001,_0c3315_data
		je     _066217_jump
		mov    _0c1b58_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _0661e8_jump
		sar    %cl,%ax
		jmp    _0661f1_jump

	_0661e8_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0661f1_jump:
		movswl %ax,%edx
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _066202_jump
		neg    %eax

	_066202_jump:
		cmp    %edx,%eax
		jl     _066217_jump
		mov    $0x000007,%ebx
		mov    $0x000001,%edx
		mov    $_0c1b4c_data,%eax
		jmp    _06624c_jump

	_066217_jump:
		mov    $0x00002b,%ebx
		jmp    _066245_jump

	_06621e_jump:
		cmp    $0x000019,%edx
		je     _066228_jump
		cmp    $0x00001a,%edx
		jne    _06622f_jump

	_066228_jump:
		mov    $0x000034,%ebx
		jmp    _066245_jump

	_06622f_jump:
		cmp    $0x00001b,%edx
		je     _066239_jump
		cmp    $0x00001c,%edx
		jne    _066240_jump

	_066239_jump:
		mov    $0x000035,%ebx
		jmp    _066245_jump

	_066240_jump:
		mov    $0x000008,%ebx

	_066245_jump:
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx

	_06624c_jump:
		call   _01d6f8_func
		mov    _0c1b9c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000c8,%eax
		jl     _066265_jump
		call   _061ea0_func

	_066265_jump:
		movw   $0x00ffff,_0c1b9e_data
		jmp    _0662c8_jump

	_066270_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000007,%eax
		je     _0662c8_jump
		cmp    $0x000008,%eax
		jne    _0662bc_jump
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _066299_jump
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _062128_func

	_066299_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _0662b1_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		je     _0662c8_jump

	_0662b1_jump:
		movw   $0x00005a,_0c1ba2_data
		jmp    _0662c8_jump

	_0662bc_jump:
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _062128_func

	_0662c8_jump:
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _0662f7_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _0662f7_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00001f,%eax
		je     _0662f7_jump
		call   _062020_func
		call   _063cec_func

	_0662f7_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000001,%eax
		jne    _06632d_jump
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jle    _066317_jump
		movw   $0x000004,_0c1b8e_data

	_066317_jump:
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _06632d_jump
		movw   $0x00fff6,_0c1b8e_data

	_06632d_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _066389_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000f,%eax
		jne    _066389_jump
		mov    _0c1b74_data,%eax
		mov    _0c2524_data,%edx
		add    $0x000096,%eax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jle    _066389_jump
		mov    _0c24e4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    _0c1b78_data,%ebx
		sub    $0x000064,%eax
		cmp    %ebx,%eax
		jge    _066389_jump
		xor    %eax,%eax
		mov    _0c1bc2_data,%al
		cmp    $0x0000ff,%eax
		je     _066389_jump
		call   _0713cc_func

	_066389_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_066391_jump:
		ret    



_066394_func:
		cmpb   $0x000000,_0c1f02_data
		je     _066391_jump
		mov    _0c1ef0_data,%eax
		call   _070a70_func
		jmp    _05cc28_func



_0663ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %dl,%dl
		mov    %dl,_0c24fe_data
		andb   $0x0000f7,_0c3314_data
		mov    _0c24f8_data,%dx
		dec    %edx
		mov    _0c259d_data,%bl
		mov    %dx,_0c24f8_data
		test   %bl,%bl
		jne    _06640e_jump
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		cmp    $0x000003,%edx
		jne    _0663f1_jump
		xor    %edx,%edx
		mov    _0c1bb8_data,%dl
		cmp    $0x000020,%edx
		je     _06640e_jump

	_0663f1_jump:
		testb  $0x000080,_0c3315_data
		jne    _06640e_jump
		movb   $0x000005,_0c25fa_data
		mov    $0x000001,%ch
		mov    %eax,_0c25fc_data
		mov    %ch,_0c2594_data

	_06640e_jump:
		call   _066394_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066418_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000016,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		xor    %ecx,%ecx
		call   _01d6f8_func
		mov    %cx,_0c25b4_data
		xor    %ah,%ah
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ah,_0c1bb7_data
		mov    %dx,_0c1b8e_data
		mov    _0c51b4_data,%dl
		mov    %bx,_0c1b8c_data
		test   %dl,%dl
		je     _066474_jump
		mov    _0c24ee_data,%eax
		mov    _0c1b74_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,_0c1b74_data

	_066474_jump:
		mov    $0x000001,%dh
		mov    $0x000078,%edi
		xor    %esi,%esi
		mov    $_0c1b4c_data,%eax
		mov    %si,_0c24f0_data
		mov    %dh,_0c2502_data
		mov    %di,_0c1ba2_data
		mov    %dh,_0c259d_data
		call   _070160_func
		call   _066394_func
		call   _01cf50_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0664b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce5a0_data,%eax
		sar    $0x000010,%eax
		mov    _0c1b74_data,%edx
		sub    $0x00000a,%eax
		cmp    %edx,%eax
		jg     _066505_jump
		xor    %eax,%eax
		mov    _0c1b82_data,%edx
		mov    _0c1bb5_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0xffffffec,%eax
		jge    _0664f0_jump
		mov    _0c1b28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _066505_jump

	_0664f0_jump:
		mov    _0ce59e_data,%eax
		sar    $0x000010,%eax
		mov    _0c1b74_data,%ebx
		add    $0x00000a,%eax
		cmp    %ebx,%eax
		jge    _06651e_jump

	_066505_jump:
		xor    %dh,%dh
		mov    $0x000001,%eax
		mov    %dh,_0c1bc2_data
		xor    %edx,%edx
		call   _02baec_func
		jmp    _06678b_jump

	_06651e_jump:
		mov    _0c1b82_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000b4,%eax
		jle    _066546_jump
		xor    %dl,%dl
		mov    $0x000001,%eax
		mov    %dl,_0c1bc2_data
		xor    %edx,%edx
		call   _02baec_func
		jmp    _06678b_jump

	_066546_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _066562_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000009,%eax
		je     _066601_jump

	_066562_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _06657e_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000016,%eax
		je     _066601_jump

	_06657e_jump:
		testb  $0x000004,_0c1bcd_data
		je     _066601_jump
		xor    %eax,%eax
		mov    _0c1bae_data,%al
		cmp    $0x00000a,%eax
		jne    _0665b7_jump
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0665b7_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000006,%eax
		je     _0665b7_jump
		call   _066418_func
		jmp    _066601_jump

	_0665b7_jump:
		xor    %eax,%eax
		mov    _0c1b78_data,%edx
		mov    _0c1bb5_data,%al
		add    %eax,%edx
		mov    _0c24e4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		add    $0x000010,%eax
		cmp    %eax,%edx
		jle    _066601_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _066601_jump
		xor    %edx,%edx
		mov    %dx,_0c1b8e_data

	_066601_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _06661d_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000009,%eax
		je     _0666ec_jump

	_06661d_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _06678b_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000016,%eax
		je     _066647_jump
		cmp    $0x000020,%eax
		je     _066647_jump
		cmp    $0x000026,%eax
		jne    _06678b_jump

	_066647_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000010,0x000007(%ebx,%eax,1)
		je     _06667b_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jmp    _0666a7_jump

	_06667b_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b50_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_0666a7_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _06678b_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06678b_jump

	_0666ec_jump:
		mov    _0c2502_data,%dh
		xor    %eax,%eax
		dec    %dh
		mov    %dh,%al
		mov    %dh,_0c2502_data
		test   %eax,%eax
		jne    _066782_jump
		mov    _0c2595_data,%bl
		test   %bl,%bl
		jne    _066782_jump
		mov    $0x000002,%bh
		mov    _0c1b70_data,%ecx
		mov    %bh,_0c1bc2_data
		test   %ecx,%ecx
		je     _06676a_jump
		mov    _0c1bcd_data,%cl
		and    $0x0000fb,%cl
		mov    %eax,_0c1b70_data
		mov    %cl,_0c1bcd_data
		mov    $0x000040,%ch
		mov    $_0c1b4c_data,%eax
		mov    %ch,_0c2502_data
		call   _0663ac_func
		mov    _0c24f6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06676a_jump
		mov    $0x000001,%al
		xor    %bh,%bh
		mov    %al,_0c2595_data
		mov    %bx,_0c24f8_data
		mov    %bl,_0c1bc2_data

	_06676a_jump:
		mov    _0c1bc2_data,%al
		mov    $0x00005a,%ecx
		mov    %al,_0c2501_data
		mov    %cx,_0c1ba2_data
		jmp    _06678b_jump

	_066782_jump:
		movw   $0x00ffff,_0c1b96_data

	_06678b_jump:
		cmpl   $0x000000,_0c1b70_data
		je     _0667b5_jump
		testb  $0x000004,_0c1bcd_data
		je     _0667b5_jump
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _0667b5_jump
		cmp    $0x000004,%eax
		je     _0667b5_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0667b5_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0667bc_func:
		push   %ecx
		push   %edx
		call   _071760_func
		mov    _0c1bc2_data,%dl
		mov    _0c1ba0_data,%eax
		dec    %dl
		sar    $0x000010,%eax
		mov    %dl,_0c1bc2_data
		cmp    $0xffffffff,%eax
		jne    _066831_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _066828_jump
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _023f98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_0921f8_data(%eax)
		je     _066828_jump
		movw   $0x00003c,_0c1ba2_data
		jmp    _066831_jump

	_066828_jump:
		movw   $0x000078,_0c1ba2_data

	_066831_jump:
		xor    %eax,%eax
		mov    _0c1bc2_data,%al
		cmp    $0x0000ff,%eax
		jne    _066868_jump
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		sete   %al
		xor    %ah,%ah
		add    $0x000003,%eax
		xor    %ecx,%ecx
		mov    %ax,_0c25b0_data
		call   _01cf50_func
		mov    %cx,_0c24f4_data

	_066868_jump:
		pop    %edx
		pop    %ecx
		ret    



_06686c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		mov    _0c250e_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		je     _06694e_jump
		mov    0x000028(%ecx),%eax
		mov    _0c1b74_data,%ebx
		sub    $0x000052,%eax
		cmp    %ebx,%eax
		jge    _066933_jump
		mov    0x000028(%ecx),%eax
		add    $0x000096,%eax
		cmp    %ebx,%eax
		jle    _066933_jump
		mov    0x00002c(%ecx),%eax
		mov    _0c1b78_data,%edi
		add    $0x000060,%eax
		cmp    %edi,%eax
		jle    _066933_jump
		mov    %eax,_0c1b78_data
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _066929_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		mov    0x000040(%ecx),%eax
		mov    $0xffffffff,%ebx
		sar    $0x000010,%eax
		xor    %edx,%edx
		call   _04aa54_func
		mov    %ax,_0c1b8e_data
		mov    %dx,_0c24f4_data
		xor    %ah,%ah
		mov    %bx,_0c2504_data
		mov    %ah,_0c1bbd_data
		mov    %ah,_0c1bbe_data
		mov    %ah,_0c2503_data
		jmp    _066933_jump

	_066929_jump:
		mov    0x000042(%ecx),%ax
		mov    %ax,_0c1b8e_data

	_066933_jump:
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%ebp
		add    $0x0000a8,%eax
		cmp    %ebp,%eax
		jge    _06694e_jump
		andb   $0x0000fb,0x000081(%ecx)

	_06694e_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066954_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		xor    %edx,%edx
		mov    _0c1b8c_data,%bx
		mov    %edx,0x000024(%esp)
		test   %bx,%bx
		je     _066c44_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _066988_jump
		mov    _0c25a6_data,%eax
		sar    $0x000010,%eax
		jmp    _06698a_jump

	_066988_jump:
		xor    %eax,%eax

	_06698a_jump:
		mov    _0c25a2_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    _0c25a8_data,%eax
		mov    _0c23c0_data,%edx
		sar    $0x000012,%eax
		sar    $0x000010,%edx
		mov    %eax,0x000020(%esp)
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b34_data,%esi
		add    %edx,%eax
		mov    _0c248a_data,%cx
		shl    $0x000002,%eax
		xor    %edi,%edi
		add    %eax,%esi
		test   %cx,%cx
		jg     _0669fc_jump
		jmp    _066c44_jump

	_0669d4_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0c23c0_data(,%eax,2),%esi
		sar    $0x000010,%esi
		imul   $0x000084,%esi,%esi
		mov    _0c1b34_data,%eax
		add    %eax,%esi
		cmp    _0c248a_data,%di
		jge    _066c44_jump

	_0669fc_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000004,_09223a_data(,%eax,4)
		je     _0669d4_jump
		lea    0x000008(%esp),%eax
		lea    0x000014(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		mov    0x000012(%esp),%ecx
		sar    $0x000010,%ecx
		mov    0x000002(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%edx
		sar    $0x000003,%eax
		add    %eax,%edx
		mov    %ecx,%eax
		sar    $0x000002,%eax
		sub    %eax,%ecx
		mov    %dx,0x000004(%esp)
		mov    %cx,0x000014(%esp)
		testb  $0x000020,0x000081(%esi)
		je     _066a9a_jump
		lea    0x00001c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000028(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01da90_func
		mov    _0c1b96_data,%ax
		mov    0x000034(%esi),%dx
		xor    %ebx,%ebx
		cmp    %dx,%ax
		sete   %al
		mov    -0x000002(%esp),%edx
		mov    %al,%bl
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		add    %ebx,%eax
		mov    %ax,0x000010(%esp)
		jmp    _066aaa_jump

	_066a9a_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000010(%esp)

	_066aaa_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		mov    0x000010(%esp),%ecx
		add    %ebx,%eax
		sub    %ecx,%eax
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000010,_09223b_data(,%eax,4)
		je     _066af3_jump
		mov    0x000004(%esp),%eax
		mov    %ecx,%esi
		mov    0x000014(%esp),%edx
		add    $0x000002,%esi
		add    $0x000006,%eax
		sub    $0x00000c,%edx
		mov    %si,0x000010(%esp)
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000014(%esp)

	_066af3_jump:
		mov    0x000004(%esp),%edx
		add    0x000014(%esp),%edx
		mov    _0c1b8a_data,%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jle    _066b31_jump
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _066b2b_jump
		cmp    %ecx,%eax
		jg     _066b2b_jump
		mov    $0x000001,%eax
		jmp    _066b2d_jump

	_066b2b_jump:
		xor    %eax,%eax

	_066b2d_jump:
		test   %eax,%eax
		jne    _066b5f_jump

	_066b31_jump:
		mov    0x00000a(%esp),%eax
		mov    _0c1b8a_data,%ebx
		movswl %dx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _066b55_jump
		cmp    %ecx,%eax
		jg     _066b55_jump
		mov    $0x000001,%eax
		jmp    _066b57_jump

	_066b55_jump:
		xor    %eax,%eax

	_066b57_jump:
		test   %eax,%eax
		je     _0669d4_jump

	_066b5f_jump:
		mov    0x000010(%esp),%eax
		mov    0x000008(%esp),%ecx
		mov    0x00000e(%esp),%ebx
		mov    _0c25a6_data,%si
		add    %ecx,%eax
		sar    $0x000010,%ebx
		movswl %ax,%edx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _066b8e_jump
		cmp    %ecx,%eax
		jg     _066b8e_jump
		mov    $0x000001,%eax
		jmp    _066b90_jump

	_066b8e_jump:
		xor    %eax,%eax

	_066b90_jump:
		test   %eax,%eax
		jne    _066c3c_jump
		mov    0x000020(%esp),%eax
		mov    0x00000e(%esp),%ebx
		mov    %edx,%ecx
		add    %eax,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		cmp    %ebx,%eax
		jl     _066bb9_jump
		cmp    %ecx,%eax
		jg     _066bb9_jump
		mov    $0x000001,%eax
		jmp    _066bbb_jump

	_066bb9_jump:
		xor    %eax,%eax

	_066bbb_jump:
		test   %eax,%eax
		jne    _066c3c_jump
		mov    0x000020(%esp),%ebx
		mov    %edx,%ecx
		add    %ebx,%esi
		mov    0x00000e(%esp),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jl     _066be4_jump
		cmp    %ecx,%eax
		jg     _066be4_jump
		mov    $0x000001,%eax
		jmp    _066be6_jump

	_066be4_jump:
		xor    %eax,%eax

	_066be6_jump:
		test   %eax,%eax
		jne    _066c3c_jump
		mov    0x000020(%esp),%ecx
		mov    0x00000e(%esp),%ebx
		add    %ecx,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _066c0b_jump
		cmp    %ecx,%eax
		jg     _066c0b_jump
		mov    $0x000001,%eax
		jmp    _066c0d_jump

	_066c0b_jump:
		xor    %eax,%eax

	_066c0d_jump:
		test   %eax,%eax
		jne    _066c3c_jump
		mov    0x000020(%esp),%eax
		mov    0x00000e(%esp),%ebx
		mov    %edx,%ecx
		add    %eax,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		cmp    %ebx,%eax
		jl     _066c32_jump
		cmp    %ecx,%eax
		jg     _066c32_jump
		mov    $0x000001,%eax
		jmp    _066c34_jump

	_066c32_jump:
		xor    %eax,%eax

	_066c34_jump:
		test   %eax,%eax
		je     _0669d4_jump

	_066c3c_jump:
		movl   $0x000001,0x000024(%esp)

	_066c44_jump:
		mov    0x000024(%esp),%eax
		add    $0x00002c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066c54_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1afe_data,%bl
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0c13e4_data,%eax
		mov    _0c1b74_data,%dx
		mov    %dx,(%eax)
		mov    _0c1b78_data,%dx
		mov    %dx,0x000002(%eax)
		mov    _0c1bb9_data,%dl
		mov    %dl,0x000008(%eax)
		mov    _0c1bb8_data,%dl
		mov    %dl,0x000009(%eax)
		mov    _0c1bb6_data,%dl
		mov    %dl,0x00000a(%eax)
		mov    _0c1bb7_data,%dl
		mov    %dl,0x00000b(%eax)
		mov    _0c1bcd_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000c(%eax)
		mov    _0c1ba6_data,%dl
		mov    %dl,0x000011(%eax)
		mov    _0c1f02_data,%dl
		mov    %dl,0x000010(%eax)
		xor    %edx,%edx
		mov    0x000010(%eax),%dl
		test   %edx,%edx
		je     _066d05_jump
		mov    _0c1ef0_data,%edx
		mov    0x000028(%edx),%cx
		mov    %cx,0x000004(%eax)
		mov    0x00002c(%edx),%cx
		mov    %cx,0x000006(%eax)
		mov    0x00006a(%edx),%cl
		mov    %cl,0x00000d(%eax)
		mov    0x00006b(%edx),%cl
		mov    %cl,0x00000e(%eax)
		mov    0x000081(%edx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000f(%eax)

	_066d05_jump:
		inc    %bl
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000064,%eax
		jle    _066d1a_jump
		mov    $0x000001,%ah
		xor    %bl,%bl
		mov    %ah,_0c1b00_data

	_066d1a_jump:
		mov    %bl,_0c1afe_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066d24_func:
		push   %ebx
		push   %edx
		mov    _0c1b94_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _066d63_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		mov    0x000060(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		cmp    $0x0000a0,%eax
		je     _066e27_jump
		cmp    $0x00009f,%eax
		je     _066e27_jump

	_066d63_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _066e27_jump
		mov    _0c1bb8_data,%al
		cmp    $0x00000d,%eax
		je     _066e27_jump
		cmp    $0x00000b,%eax
		je     _066e27_jump
		cmp    $0x00000c,%eax
		je     _066e27_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _066da0_jump
		neg    %eax

	_066da0_jump:
		cmp    $0x000003,%eax
		jle    _066ddf_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000028,%eax
		je     _066ddf_jump
		xor    %edx,%edx
		mov    _0c1b58_data,%ebx
		mov    _0c1bb9_data,%dl
		mov    (%ebx,%edx,4),%edx
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _066e27_jump
		cmp    $0x000008,%eax
		je     _066e27_jump
		cmp    $0x000034,%eax
		je     _066e27_jump
		cmp    $0x000035,%eax
		je     _066e27_jump
		mov    $0x000029,%ebx
		jmp    _066e1b_jump

	_066ddf_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _066ded_jump
		neg    %eax

	_066ded_jump:
		cmp    $0x000002,%eax
		jg     _066e27_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000028,%eax
		jne    _066e27_jump
		xor    %edx,%edx
		mov    _0c1b58_data,%ebx
		mov    _0c1bb9_data,%dl
		mov    (%ebx,%edx,4),%edx
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _066e27_jump
		mov    $0x00002a,%ebx

	_066e1b_jump:
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_066e27_jump:
		pop    %edx
		pop    %ebx
		ret    



_066e2c_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		test   %eax,%eax
		jne    _066e8b_jump
		mov    _0c1bb8_data,%al
		cmp    $0x000028,%eax
		jne    _066e8b_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _066e5c_jump
		mov    $0xffffffff,%eax

	_066e5c_jump:
		mov    %eax,%edx
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		cmp    $0x000000,%eax
		je     _066e77_jump
		mov    $0x000001,%eax
		jg     _066e77_jump
		neg    %eax

	_066e77_jump:
		cmp    %edx,%eax
		jne    _066e84_jump
		movb   $0x00004f,_0c1bb6_data
		pop    %edx
		ret    

	_066e84_jump:
		movb   $0x000050,_0c1bb6_data

	_066e8b_jump:
		pop    %edx
		ret    



_066e90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%edx
		mov    $_0c1b4c_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0c1ba2_data
		mov    %bx,_0c24f2_data
		mov    %bx,_0c24f0_data
		call   _01df3c_func
		mov    $_0c1b4c_data,%eax
		call   _01e6e4_func
		call   _065d08_func
		call   _063310_func
		call   _04edbc_func
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _066ee7_jump
		call   _04df34_func
		jmp    _066eee_jump

	_066ee7_jump:
		jge    _066eee_jump
		call   _04de58_func

	_066eee_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _066f01_jump
		call   _04e53c_func
		jmp    _066f08_jump

	_066f01_jump:
		jle    _066f08_jump
		call   _04e4b8_func

	_066f08_jump:
		xor    %eax,%eax
		call   _05cabc_func
		xor    %eax,%eax
		mov    _0c51b4_data,%al
		cmp    $0x000001,%eax
		jne    _066f30_jump
		mov    $_0c3314_data,%edi
		xor    %ah,%ah
		mov    $_0c3318_data,%esi
		mov    %ah,_0c51b4_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

	_066f30_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _066f5d_jump
		xor    %eax,%eax
		mov    _0c1bb7_data,%al
		test   %eax,%eax
		jmp    _066f89_jump

	_066f5d_jump:
		xor    %edx,%edx
		mov    _0c1bb6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b50_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_066f89_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _066fc7_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1bb8_data,%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		je     _066fdf_jump

	_066fc7_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _066fdf_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		je     _06703a_jump

	_066fdf_jump:
		mov    $_0c1b4c_data,%eax
		mov    $0x000080,%cl
		call   _0663ac_func
		mov    _0c1bcd_data,%bh
		mov    _0c24f6_data,%eax
		mov    %cl,_0c2502_data
		mov    $0x000001,%ch
		and    $0x0000fb,%bh
		sar    $0x000010,%eax
		mov    %bh,_0c1bcd_data
		mov    %ch,_0c2594_data
		test   %eax,%eax
		jl     _067024_jump
		mov    $0x000002,%dl
		mov    %dl,_0c1bc2_data
		mov    %dl,_0c2501_data
		jmp    _06703a_jump

	_067024_jump:
		mov    %ch,_0c2595_data
		xor    %al,%al
		xor    %esi,%esi
		mov    %al,_0c1bc2_data
		mov    %si,_0c24f8_data

	_06703a_jump:
		mov    $_0c1b4c_data,%eax
		call   _04b3f8_func
		call   _066c54_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067050_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_0c1b4c_data,%eax
		xor    %edx,%edx
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _067079_jump
		xor    %edx,%edx
		mov    %dx,_0c1b8c_data

	_067079_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1bb8_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _0670a0_jump
		xor    %dl,%dl
		jmp    _0670a2_jump

	_0670a0_jump:
		mov    $0x000002,%dl

	_0670a2_jump:
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0670fe_jump
		mov    _0c1b78_data,%edx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb5_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		mov    %edx,_0c1b78_data
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0c1b74_data,%ecx
		mov    _0c1bb4_data,%al
		add    %ecx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e4d8_func
		mov    _0c1b8c_data,%edx
		mov    _0c1b78_data,%esi
		sar    $0x000010,%edx
		add    %edx,%esi
		xor    %ah,%ah
		mov    %esi,_0c1b78_data
		jmp    _067110_jump

	_0670fe_jump:
		mov    $_0c1b4c_data,%eax
		and    $0x0000ff,%edx
		call   _023f98_func
		xor    %ah,%ah

	_067110_jump:
		cwtl   
		testb  $0x000002,_0921f8_data(%eax)
		je     _06717a_jump
		mov    _0c1b8c_data,%eax
		mov    _0c1b78_data,%edi
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0c1bb2_data,%dl
		sub    %eax,%edi
		mov    _0921f8_data(%edx),%cl
		mov    %edi,_0c1b78_data
		test   $0x000002,%cl
		jne    _06715b_jump
		test   %eax,%eax
		jge    _06715b_jump
		xor    %ebx,%ebx
		lea    0x000004(%edi),%ebp
		mov    %bx,_0c1b8e_data
		mov    %ebp,_0c1b78_data
		jmp    _067165_jump

	_06715b_jump:
		mov    $_0c1b4c_data,%eax
		call   _024bd4_func

	_067165_jump:
		xor    %ecx,%ecx
		mov    $0xffffffff,%esi
		mov    %cx,_0c1b8c_data
		mov    %si,_0c1b96_data

	_06717a_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067184_func:
		push   %ebx
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _0671db_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000004,%eax
		je     _0671cc_jump
		pop    %ebx
		ret    

	_0671a0_jump:
		xor    %eax,%eax
		mov    _0c24d0_data,%al
		test   %eax,%eax
		jne    _0671b6_jump

	_0671ab_jump:
		movw   $0x000001,_0c1b8e_data
		pop    %ebx
		ret    

	_0671b6_jump:
		xor    %ebx,%ebx
		mov    %bx,_0c1b8e_data
		pop    %ebx
		ret    

	_0671c1_jump:
		movw   $0x000002,_0c1b8e_data
		pop    %ebx
		ret    

	_0671cc_jump:
		mov    _0c1bb8_data,%al
		cmp    $0x000002,%al
		jb     _0671ab_jump
		jbe    _0671a0_jump
		cmp    $0x000003,%al
		je     _0671c1_jump

	_0671db_jump:
		pop    %ebx
		ret    



_0671e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000010,_092239_data(,%eax,4)
		je     _06721e_jump
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		call   _04aa54_func
		mov    %eax,%ebx
		jmp    _067222_jump

	_06721e_jump:
		mov    0x000040(%edx),%bx

	_067222_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000020,_092239_data(,%eax,4)
		je     _06723f_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _04aa54_func
		jmp    _067243_jump

	_06723f_jump:
		mov    0x000042(%edx),%ax

	_067243_jump:
		mov    _0c1b8c_data,%cx
		add    %ebx,%ecx
		mov    %ecx,%esi
		mov    0x00004e(%edx),%bx
		mov    _0c1b8e_data,%di
		add    %ebx,%esi
		add    0x00004c(%edx),%di
		mov    %cx,_0c1b8c_data
		mov    %edi,%ebx
		mov    %di,_0c1b8e_data
		add    %eax,%ebx
		mov    %si,_0c1b8c_data
		mov    %bx,_0c1b8e_data
		call   _067050_func
		cmpl   $0x000000,0x000024(%edx)
		jne    _067293_jump
		movw   $0x00ffff,_0c1b96_data

	_067293_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06729c_func:
		push   %ecx
		push   %edx
		push   %edi
		xor    %eax,%eax
		mov    _0c51b4_data,%al
		cmp    $0x000001,%eax
		jne    _067385_jump
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _067312_jump
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _067312_jump
		call   _03e0a4_func
		test   %ax,%ax
		je     _0672ed_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _0672ed_jump
		mov    $0x000001,%eax
		jmp    _06735a_jump

	_0672ed_jump:
		call   _03e030_func
		test   %ax,%ax
		je     _06735f_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06735f_jump
		jmp    _067358_jump

	_067312_jump:
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _067337_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _067337_jump
		mov    $0x000001,%eax
		jmp    _06735a_jump

	_067337_jump:
		mov    _0c25b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06735f_jump
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06735f_jump

	_067358_jump:
		xor    %eax,%eax

	_06735a_jump:
		call   _0646b0_func

	_06735f_jump:
		cmpb   $0x000000,_0c24f6_data
		jne    _067371_jump
		call   _064c8c_func
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_067371_jump:
		xor    %edi,%edi
		mov    %di,_0cd0f4_data
		mov    %di,_0cd0fe_data
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_067385_jump:
		testb  $0x000060,_0c3315_data
		jne    _06744a_jump
		call   _03e0a4_func
		test   %ax,%ax
		jne    _0673a5_jump
		testb  $0x000018,_0c3315_data
		je     _0673af_jump

	_0673a5_jump:
		mov    $0x000001,%eax
		call   _0646b0_func

	_0673af_jump:
		call   _03e030_func
		test   %ax,%ax
		je     _0673c9_jump
		testb  $0x000018,_0c3315_data
		jne    _0673c9_jump
		xor    %eax,%eax
		call   _0646b0_func

	_0673c9_jump:
		call   _03e118_func
		test   %ax,%ax
		je     _0673f2_jump
		xor    %eax,%eax
		mov    _0c24f6_data,%al
		test   %eax,%eax
		jne    _0673f2_jump
		testb  $0x000018,_0c3315_data
		jne    _0673f2_jump
		call   _0640c4_func
		incb   _0c24f6_data

	_0673f2_jump:
		call   _03e18c_func
		test   %ax,%ax
		je     _06741b_jump
		xor    %eax,%eax
		mov    _0c24f6_data,%al
		test   %eax,%eax
		jne    _06741b_jump
		testb  $0x000018,_0c3315_data
		jne    _06741b_jump
		call   _0644d4_func
		incb   _0c24f6_data

	_06741b_jump:
		cmpb   $0x000000,_0c24f6_data
		jne    _067436_jump
		testb  $0x000018,_0c3315_data
		jne    _067436_jump
		call   _064c8c_func
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_067436_jump:
		xor    %edx,%edx
		mov    %dx,_0cd0f4_data
		mov    %dx,_0cd0fe_data
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_06744a_jump:
		call   _03e0a4_func
		test   %ax,%ax
		je     _06745b_jump
		xor    %eax,%eax
		call   _0646b0_func

	_06745b_jump:
		call   _03e030_func
		test   %ax,%ax
		je     _06746f_jump
		mov    $0x000001,%eax
		call   _0646b0_func

	_06746f_jump:
		call   _03e118_func
		test   %ax,%ax
		je     _06748f_jump
		xor    %eax,%eax
		mov    _0c24f6_data,%al
		test   %eax,%eax
		jne    _06748f_jump
		call   _0640c4_func
		incb   _0c24f6_data

	_06748f_jump:
		call   _03e18c_func
		test   %ax,%ax
		je     _0674af_jump
		xor    %eax,%eax
		mov    _0c24f6_data,%al
		test   %eax,%eax
		jne    _0674af_jump
		call   _0644d4_func
		incb   _0c24f6_data

	_0674af_jump:
		cmpb   $0x000000,_0c24f6_data
		jne    _0674c1_jump
		call   _064c8c_func
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_0674c1_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cd0f4_data
		mov    %cx,_0cd0fe_data
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    



_0674d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    %dx,_0c24f2_data
		mov    %dx,_0c24f0_data
		call   _0664b4_func
		test   %al,%al
		je     _067819_jump
		incb   _0c1bbd_data
		xor    %eax,%eax
		mov    _0c1bbd_data,%al
		cmp    $0x000003,%eax
		jle    _067514_jump
		xor    %dl,%dl
		mov    %dl,_0c1bbd_data

	_067514_jump:
		xor    %eax,%eax
		mov    _0c1b74_data,%bx
		mov    _0c1bb4_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b78_data,%cx
		mov    _0c1bb5_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0c24e2_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    %ax,_0c1ba0_data
		xor    %edx,%edx
		mov    _0c1b80_data,%eax
		mov    _0c1bb4_data,%dl
		sar    $0x000010,%eax
		add    %eax,%edx
		add    $0x00001e,%edx
		test   %edx,%edx
		jl     _067595_jump
		xor    %ebx,%ebx
		mov    _0c1b82_data,%edx
		mov    _0c1bb5_data,%bl
		sar    $0x000010,%edx
		add    %edx,%ebx
		add    $0x000014,%ebx
		test   %ebx,%ebx
		jl     _067595_jump
		cmp    $0x000122,%eax
		jg     _067595_jump
		cmp    $0x0000c8,%edx
		jle    _0675a2_jump

	_067595_jump:
		xor    %dh,%dh
		mov    %dh,_0c1bc2_data
		call   _0667bc_func

	_0675a2_jump:
		mov    _0c1ba0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0675e8_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1bb8_data,%dl
		testb  $0x000008,0x000007(%eax,%edx,8)
		je     _0675e8_jump
		call   _02b7a8_func
		test   %ax,%ax
		je     _0675e8_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02baec_func

	_0675e8_jump:
		xor    %bh,%bh
		mov    $_0c1b4c_data,%eax
		mov    %bh,_0c24f6_data
		call   _01df3c_func
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _067611_jump
		mov    $_0c1b4c_data,%eax
		call   _01e6e4_func

	_067611_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		je     _06779b_jump
		cmp    $0x000006,%eax
		jne    _067636_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000e,%eax
		je     _06779b_jump

	_067636_jump:
		call   *_0cd040_data
		cwtl   
		test   %eax,%eax
		je     _067666_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000004,%eax
		je     _067666_jump
		cmp    $0x000002,%eax
		je     _067666_jump
		cmp    $0x000008,%eax
		je     _067666_jump
		cmp    $0x000005,%eax
		je     _067666_jump
		cmp    $0x000003,%eax
		je     _067666_jump
		call   _065428_func

	_067666_jump:
		call   *_0cd048_data
		cwtl   
		test   %eax,%eax
		je     _067676_jump
		call   _065314_func

	_067676_jump:
		call   *_0cd044_data
		cwtl   
		test   %eax,%eax
		cmpb   $0x000000,_0c1f04_data
		je     _0676a9_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000c,%eax
		jne    _067699_jump
		call   _05ca9c_func

	_067699_jump:
		call   *_0cd040_data
		cwtl   
		test   %eax,%eax
		jne    _0676a9_jump
		call   _05c634_func

	_0676a9_jump:
		call   _03e0a4_func
		test   %ax,%ax
		je     _0676bd_jump
		mov    $0x000001,%eax
		call   _0646b0_func

	_0676bd_jump:
		call   _03e030_func
		test   %ax,%ax
		je     _0676ce_jump
		xor    %eax,%eax
		call   _0646b0_func

	_0676ce_jump:
		call   _03e118_func
		test   %ax,%ax
		je     _0676e3_jump
		call   _0640c4_func
		incb   _0c24f6_data

	_0676e3_jump:
		call   _03e18c_func
		test   %ax,%ax
		je     _0676f8_jump
		call   _0644d4_func
		incb   _0c24f6_data

	_0676f8_jump:
		cmpb   $0x000000,_0c24f6_data
		jne    _067706_jump
		call   _064c8c_func

	_067706_jump:
		mov    _0c1b80_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _067728_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _067728_jump
		xor    %esi,%esi
		mov    %si,_0c1b8c_data

	_067728_jump:
		mov    _0c1b80_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000d2,%eax
		jle    _06774c_jump
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06774c_jump
		xor    %edi,%edi
		mov    %di,_0c1b8c_data

	_06774c_jump:
		mov    _0c1b82_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jge    _06776d_jump
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06776d_jump
		xor    %eax,%eax
		mov    %ax,_0c1b8e_data

	_06776d_jump:
		xor    %eax,%eax
		mov    _0c1b82_data,%edx
		mov    _0c1bb5_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x0000be,%eax
		jle    _06779b_jump
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06779b_jump
		xor    %edx,%edx
		mov    %dx,_0c1b8e_data

	_06779b_jump:
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0677ae_jump
		call   _04df34_func
		jmp    _0677b5_jump

	_0677ae_jump:
		jge    _0677b5_jump
		call   _04de58_func

	_0677b5_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0677c8_jump
		call   _04e53c_func
		jmp    _0677cf_jump

	_0677c8_jump:
		jle    _0677cf_jump
		call   _04e4b8_func

	_0677cf_jump:
		testb  $0x000004,_0c1bcd_data
		je     _0677e2_jump
		mov    $_0c1b4c_data,%eax
		call   _04b3f8_func

	_0677e2_jump:
		cmpw   $0x000000,_0c251e_data
		jne    _067819_jump
		cmpw   $0x000000,_0c251c_data
		jne    _067819_jump
		push   $_0c25aa_data
		mov    $_0c25a8_data,%ecx
		mov    $_0c25a6_data,%ebx
		mov    $_0c25a4_data,%edx
		mov    $_0c1b4c_data,%eax
		call   _01dbd8_func
		call   _02cb30_func

	_067819_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067820_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		xor    %edx,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0c24f2_data
		mov    %dx,_0c24f0_data
		xor    %edx,%edx
		call   _068e2c_func
		call   _0664b4_func
		test   %al,%al
		je     _067dff_jump
		xor    %eax,%eax
		mov    _0c1b74_data,%bx
		mov    _0c1bb4_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b78_data,%cx
		mov    _0c1bb5_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0c24e2_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    %ax,_0c1ba0_data
		call   _02b958_func
		mov    _0c1b28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0678c1_jump
		xor    %eax,%eax
		mov    _0c1b82_data,%edx
		mov    _0c1bb5_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		test   %eax,%eax
		jge    _0678c1_jump
		xor    %esi,%esi
		mov    %si,_0c1b8e_data

	_0678c1_jump:
		mov    _0c1ba0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _067906_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    _0c1b58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1bb8_data,%al
		testb  $0x000008,0x000007(%edx,%eax,8)
		je     _067906_jump
		call   _02b7a8_func
		test   %ax,%ax
		je     _067906_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02baec_func

	_067906_jump:
		testb  $0x000001,_0c3316_data
		je     _06792d_jump
		mov    _0c1ba0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06792d_jump
		mov    _0c1ba4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _06792d_jump
		call   _0506c0_jump

	_06792d_jump:
		xor    %cl,%cl
		mov    $_0c1b4c_data,%eax
		mov    %cl,_0c24f6_data
		call   _01df3c_func
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _067958_jump
		mov    $_0c1b4c_data,%eax
		call   _01e6e4_func
		jmp    _067968_jump

	_067958_jump:
		xor    %edi,%edi
		mov    %di,_0c1b8e_data
		mov    %di,_0c1b8c_data

	_067968_jump:
		mov    _0c25aa_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _067a2b_jump
		xor    %edx,%edx
		mov    _0c1bb9_data,%dl
		mov    _0c1b58_data,%eax
		lea    0x000000(,%edx,4),%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    _0c1bb8_data,%al
		testb  $0x000040,0x000007(%ebx,%eax,8)
		jne    _067a2b_jump
		test   %edx,%edx
		jne    _0679c7_jump
		cmp    $0x000004,%eax
		je     _0679c7_jump
		cmp    $0x000005,%eax
		je     _0679c7_jump
		cmp    $0x000006,%eax
		je     _0679c7_jump
		cmp    $0x000007,%eax
		je     _0679c7_jump
		cmp    $0x000009,%eax
		je     _0679c7_jump
		cmp    $0x00000a,%eax
		jne    _067a06_jump

	_0679c7_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		jne    _0679df_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000001,%eax
		jne    _067a06_jump

	_0679df_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _067a2b_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000001,%eax
		je     _067a2b_jump
		cmp    $0x000003,%eax
		je     _067a2b_jump
		cmp    $0x000002,%eax
		je     _067a2b_jump
		cmp    $0x000004,%eax
		je     _067a2b_jump

	_067a06_jump:
		cmpw   $0x000000,_0c25ac_data
		je     _067a17_jump
		mov    $0x000015,%ebx
		jmp    _067a1c_jump

	_067a17_jump:
		mov    $0x000014,%ebx

	_067a1c_jump:
		mov    $0x000003,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func

	_067a2b_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _067a43_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000008,%eax
		je     _067a5b_jump

	_067a43_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _067a65_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00001f,%eax
		jne    _067a65_jump

	_067a5b_jump:
		call   _065d08_func
		jmp    _067bb3_jump

	_067a65_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _067af8_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000010,%eax
		jne    _067abd_jump
		call   _0705ec_func
		mov    _0c2590_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _067acc_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		mov    _0cd11c_data,%bx
		movw   $0x000001,0x000056(%edx,%eax,1)
		test   %bx,%bx
		jne    _067acc_jump
		call   _01cf4c_func
		jmp    _067acc_jump

	_067abd_jump:
		cmp    $0x000015,%eax
		je     _067ac7_jump
		cmp    $0x000014,%eax
		jne    _067acc_jump

	_067ac7_jump:
		call   _065c18_func

	_067acc_jump:
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000016,%eax
		je     _067bb3_jump
		cmp    $0x000017,%eax
		je     _067bb3_jump
		cmp    $0x000020,%eax
		je     _067bb3_jump
		call   _063310_func
		jmp    _067bb3_jump

	_067af8_jump:
		call   *_0cd03c_data
		cwtl   
		test   %eax,%eax
		je     _067b08_jump
		call   _06546c_func

	_067b08_jump:
		call   *_0cd040_data
		cwtl   
		test   %eax,%eax
		je     _067b18_jump
		call   _065428_func

	_067b18_jump:
		call   *_0cd048_data
		cwtl   
		test   %eax,%eax
		je     _067b28_jump
		call   _065314_func

	_067b28_jump:
		call   *_0cd044_data
		cwtl   
		test   %eax,%eax
		cmpb   $0x000000,_0c6971_data
		je     _067b53_jump
		call   _03e3a4_func
		test   %ax,%ax
		je     _067b53_jump
		call   _03e364_func
		test   %ax,%ax
		je     _067b53_jump
		call   _0713cc_func

	_067b53_jump:
		cmpb   $0x000000,_0c1f04_data
		je     _067b7d_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x00000c,%eax
		jne    _067b6d_jump
		call   _05ca9c_func

	_067b6d_jump:
		call   *_0cd040_data
		cwtl   
		test   %eax,%eax
		jne    _067b7d_jump
		call   _05c634_func

	_067b7d_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000007,%eax
		jne    _067b90_jump
		call   _065784_func
		jmp    _067bae_jump

	_067b90_jump:
		cmp    $0x000002,%eax
		jne    _067b9c_jump
		call   _065d08_func
		jmp    _067bae_jump

	_067b9c_jump:
		call   *_0cd03c_data
		cwtl   
		test   %eax,%eax
		jne    _067bae_jump
		movb   $0x000001,_0c2503_data

	_067bae_jump:
		call   _06729c_func

	_067bb3_jump:
		mov    _0c3315_data,%dh
		test   $0x000060,%dh
		je     _067c49_jump
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0c1b4c_data,%eax
		call   _01da90_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    _0c1ee8_data,%eax
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%eax)
		mov    _0c1eec_data,%edx
		mov    0x000028(%eax),%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x000002(%esp),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000074(%eax),%bl
		sub    %ebx,%ecx
		mov    %ecx,0x00002c(%eax)
		mov    0x000024(%edx),%ebx
		mov    %ecx,0x00002c(%edx)
		test   %ebx,%ebx
		jne    _067c30_jump
		mov    %edx,%eax
		call   _01f7d4_func

	_067c30_jump:
		mov    _0c1ee8_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _067d11_jump
		call   _01f7d4_func
		jmp    _067d11_jump

	_067c49_jump:
		test   $0x000018,%dh
		je     _067d11_jump
		mov    %dh,%al
		shl    $0x000003,%al
		shr    $0x000006,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _067c9b_jump
		mov    %dh,%ch
		and    $0x0000e6,%ch
		mov    %ch,%al
		mov    %ch,_0c3315_data
		or     $0x000011,%al
		mov    $0x000003,%ebx
		mov    %al,_0c3315_data
		mov    $_0c1b4c_data,%eax
		mov    $0x000001,%edx
		call   _070a70_func
		mov    $_0c1b4c_data,%eax
		call   _01d6f8_func
		jmp    _067d11_jump

	_067c9b_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000001,%eax
		jne    _067cb8_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000003,%eax
		je     _067ce9_jump
		cmp    $0x000007,%eax
		je     _067ce9_jump

	_067cb8_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _067ce9_jump
		mov    _0c3315_data,%bh
		mov    $0x000001,%edx
		or     $0x000001,%bh
		mov    $_0c1b4c_data,%eax
		mov    %bh,_0c3315_data
		mov    $0x000003,%ebx
		call   _01d6f8_func
		jmp    _067d11_jump

	_067ce9_jump:
		mov    _0c3315_data,%al
		shl    $0x000003,%al
		shr    $0x000006,%al
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _067d11_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		je     _067d11_jump
		andb   $0x0000e7,_0c3315_data

	_067d11_jump:
		mov    _0c1b94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _067d23_jump
		call   _0671e0_func

	_067d23_jump:
		call   _067184_func
		call   _066954_func
		test   %ax,%ax
		je     _067d5a_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000007,%eax
		jne    _067d43_jump
		call   _065a70_func

	_067d43_jump:
		xor    %ecx,%ecx
		mov    %cx,_0c1b8c_data
		mov    %cx,_0c25b4_data
		mov    %cx,_0c1b94_data

	_067d5a_jump:
		mov    _0c250e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _067d6c_jump
		call   _06686c_func

	_067d6c_jump:
		call   _066d24_func
		call   _04edbc_func
		mov    _0c1b8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _067d89_jump
		call   _04df34_func
		jmp    _067d90_jump

	_067d89_jump:
		jge    _067d90_jump
		call   _04de58_func

	_067d90_jump:
		mov    _0c1b8a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _067da3_jump
		call   _04e53c_func
		jmp    _067daa_jump

	_067da3_jump:
		jle    _067daa_jump
		call   _04e4b8_func

	_067daa_jump:
		testb  $0x000004,_0c1bcd_data
		je     _067dce_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000007,%eax
		je     _067dce_jump
		mov    $_0c1b4c_data,%eax
		call   _04b3f8_func
		call   _066e2c_func

	_067dce_jump:
		push   $_0c25aa_data
		mov    $_0c25a8_data,%ecx
		mov    $_0c25a6_data,%ebx
		mov    $_0c25a4_data,%edx
		mov    $_0c1b4c_data,%eax
		call   _01dbd8_func
		call   _02cb30_func
		cmpb   $0x000000,_0c25a0_data
		je     _067dff_jump
		call   _05759c_func

	_067dff_jump:
		call   _066c54_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067e10_func:
		push   %edx
		mov    $0x01f400,%edx
		mov    $_0c6b20_data,%eax
		call   _074fa0_func
		pop    %edx
		ret    



_067e24_func:
		mov    $_0c6b20_data,%eax
		jmp    _0752ac_func



_067e30_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000008(%esp)
		mov    %dx,0x000004(%esp)
		mov    %bx,(%esp)
		xor    %eax,%eax
		mov    _0c7998_data,%al
		mov    $_0c859c_data,%edx
		call   _03a364_func
		call   _037f10_func
		mov    $0x000002,%eax
		mov    $0x00fa00,%ecx
		call   _039018_func
		call   _0172fe_func
		mov    _0c94f0_data,%esi
		mov    _0cdf2c_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0ccffc_data,%edi
		mov    _0cdf2c_data,%esi
		xor    %ebx,%ebx
		call   _0150c3_func
		mov    $_0c799c_data,%esi
		mov    $_0c859c_data,%edi

	_067ea6_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _067edd_jump
		call   _01730e_func
		call   _0172fe_func
		mov    %esi,%edx
		mov    %edi,%eax
		call   _039098_func
		inc    %ebx
		mov    0x000008(%esp),%edx
		cmp    %dx,%bx
		jne    _067ea6_jump
		mov    0x000004(%esp),%ecx
		dec    %ecx
		xor    %edx,%ebx
		mov    %cx,0x000004(%esp)
		jmp    _067ea6_jump

	_067edd_jump:
		call   _03e3d0_func
		xor    %ebx,%ebx
		mov    $_0c859c_data,%edi
		xor    %esi,%esi

	_067eeb_jump:
		call   _03e200_func
		test   %ax,%ax
		jne    _067f3a_jump
		call   _03e268_func
		test   %ax,%ax
		jne    _067f3a_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _067f3a_jump
		call   _01730e_func
		call   _0172fe_func
		mov    $_0c799c_data,%edx
		mov    %edi,%eax
		call   _039098_func
		call   _03e3d0_func
		inc    %ebx
		cmp    0x000008(%esp),%bx
		jne    _067eeb_jump
		mov    (%esp),%edx
		dec    %edx
		mov    %esi,%ebx
		mov    %dx,(%esp)
		jmp    _067eeb_jump

	_067f3a_jump:
		mov    $_0c859c_data,%edx
		mov    $0x000002,%eax
		call   _0391a0_func
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_067f50_func:
		push   %edx
		mov    $0x000005,%edx
		mov    $_0c6b20_data,%eax
		call   _043690_func
		pop    %edx
		ret    



_067f64_func:
		push   %ebx
		push   %edx
		call   _067e10_func
		mov    $0x000008,%ebx
		xor    %ah,%ah
		mov    $0xffffffff,%edx
		mov    %ah,_0c24aa_data
		call   _067f50_func
		call   _01cf24_func
		call   _039478_func
		mov    $0x00003c,%eax
		call   _067e30_func
		call   _067e24_func
		call   _01cf64_func
		pop    %edx
		pop    %ebx
		ret    

	_067fb0_jump:
		ret    



_067fb4_func:
		mov    %ax,_097580_data
		mov    %eax,%eax
		ret    



_067fc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0ce86d_data
		je     _067fe9_jump
		xor    %esi,%esi
		xor    %edi,%edi
		jmp    _067fe1_jump

	_067fd4_jump:
		push   %edi
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		call   _079160_func
		inc    %esi

	_067fe1_jump:
		movswl %si,%eax
		cmp    $0x000020,%eax
		jle    _067fd4_jump

	_067fe9_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068058_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000036(%eax),%ax
		add    %edx,%eax
		cwtl   
		cmp    $0xffffffa0,%eax
		jge    _06806e_jump
		xor    %eax,%eax
		jmp    _06808f_jump

	_06806e_jump:
		cmp    $0x0001a0,%eax
		jle    _068089_jump
		mov    $0x00007f,%eax
		movswl %ax,%edx
		cmp    $0x00007f,%edx
		jle    _06809c_jump
		mov    $0x00007f,%eax
		pop    %edx
		ret    

	_068089_jump:
		add    $0x000060,%eax
		sar    $0x000002,%eax

	_06808f_jump:
		movswl %ax,%edx
		cmp    $0x00007f,%edx
		jle    _06809c_jump
		mov    $0x00007f,%eax

	_06809c_jump:
		pop    %edx
		ret    



_0680a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x00000c(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x00000c(%esp),%ebx
		lea    0x000008(%esp),%edx
		call   _01d610_func
		mov    -0x000002(%esp),%ebx
		xor    %eax,%eax
		mov    _0c1b74_data,%edx
		mov    _0c1bb4_data,%al
		sar    $0x000011,%ebx
		add    %edx,%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b78_data,%edx
		mov    _0c1bb5_data,%al
		mov    0x000006(%esp),%ecx
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000011,%eax
		add    %eax,%ecx
		lea    -0x000028(%edx),%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		movswl %bx,%edx
		cwtl   
		add    %edx,%eax
		mov    $0x00007f,%edx
		sar    $0x000002,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %dx,%edx
		test   %edx,%edx
		jge    _06812a_jump
		xor    %eax,%eax

	_06812a_jump:
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068134_func:
		push   %ebx
		push   %edx
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _067fb4_func
		pop    %edx
		pop    %ebx
		ret    



_068158_func:
		test   %ax,%ax
		ret    



_06815c_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0ce86d_data
		je     _0681f1_jump
		mov    $0xfffffffe,%ebx
		xor    %eax,%eax

	_068172_jump:
		add    $0x000002,%eax
		xor    %edx,%edx
		mov    %bx,_0db484_data(%eax)
		mov    %dx,_0db4ac_data(%eax)
		cmp    $0x000028,%eax
		jne    _068172_jump
		mov    $0x000002,%eax
		mov    %dx,_0db5d4_data
		mov    %dx,_0db4da_data
		mov    %dx,_0db4dc_data
		mov    $0xfffffffe,%edx
		mov    %ax,_0db4de_data
		xor    %eax,%eax

	_0681b1_jump:
		add    $0x00000c,%eax
		mov    %dx,_0db33c_data(%eax)
		cmp    $0x000120,%eax
		jne    _0681b1_jump
		xor    %edx,%edx
		mov    _0cd056_data,%dx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _067fb4_func
		mov    _0cd056_data,%eax
		sar    $0x000010,%eax
		call   _068158_func

	_0681f1_jump:
		pop    %edx
		pop    %ebx
		nop
		ret    



_0681f8_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %eax,%eax

	_0681fe_jump:
		movswl %ax,%edx
		cmp    $0x000014,%edx
		je     _068213_jump
		cmp    _0db486_data(,%edx,2),%bx
		je     _068213_jump
		inc    %eax
		jmp    _0681fe_jump

	_068213_jump:
		movswl %ax,%edx
		cmp    $0x000014,%edx
		jne    _06823c_jump

	_06821b_jump:
		dec    %eax
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _068232_jump
		mov    _0db4ac_data(,%edx,2),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _06821b_jump

	_068232_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _06823c_jump
		xor    %eax,%eax

	_06823c_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _06824c_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_06824c_jump:
		mov    _0db4ae_data(,%edx,2),%ax
		pop    %edx
		pop    %ebx
		ret    



_068258_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0db5d4_data,%cx
		mov    %eax,%ebx
		movswl %cx,%edx
		mov    $0xffffffff,%eax
		test   %edx,%edx
		je     _0682a1_jump
		mov    $_0db4e4_data,%edx
		mov    _0db4e4_data,%si
		xor    %eax,%eax
		cmp    %si,%bx
		je     _068297_jump

	_068285_jump:
		cmp    %cx,%ax
		jge    _068297_jump
		inc    %eax
		mov    0x000018(%edx),%di
		add    $0x000018,%edx
		cmp    %di,%bx
		jne    _068285_jump

	_068297_jump:
		cmp    %cx,%ax
		jne    _0682a1_jump
		mov    $0xffffffff,%eax

	_0682a1_jump:
		mov    %cx,_0db5d4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0682b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    $_0db348_data,%edx
		mov    _0db348_data,%bx
		xor    %eax,%eax
		cmp    %bx,%cx
		je     _0682de_jump

	_0682c9_jump:
		movswl %ax,%ebx
		cmp    $0x000018,%ebx
		jge    _0682de_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%cx
		jne    _0682c9_jump

	_0682de_jump:
		movswl %ax,%edx
		cmp    $0x000018,%edx
		jne    _0682eb_jump
		mov    $0xffffffff,%eax

	_0682eb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068330_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		mov    $_0db34e_data,%edx
		mov    $_0db348_data,%ebx
		mov    _0db34e_data,%cx
		xor    %eax,%eax
		cmp    %cx,%si
		je     _06836d_jump

	_068350_jump:
		cmp    (%ebx),%di
		je     _06836d_jump
		movswl %ax,%ecx
		cmp    $0x000018,%ecx
		jge    _06836d_jump
		inc    %eax
		mov    0x00000c(%edx),%cx
		add    $0x00000c,%edx
		add    $0x00000c,%ebx
		cmp    %cx,%si
		jne    _068350_jump

	_06836d_jump:
		movswl %ax,%edx
		cmp    $0x000018,%edx
		jne    _06837a_jump
		mov    $0xffffffff,%eax

	_06837a_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_068380_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0db5d4_data,%si
		cwtl   
		call   _068258_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _068465_jump
		mov    _0db5d4_data,%si
		mov    %eax,%ebx
		cmp    %si,%ax
		jge    _06844f_jump

	_0683af_jump:
		movswl %bx,%edx
		lea    0x000001(%edx),%eax
		imul   $0x000018,%eax,%eax
		imul   $0x000018,%edx,%edx
		mov    _0db4e4_data(%eax),%cx
		mov    %cx,_0db4e4_data(%edx)
		mov    _0db4e6_data(%eax),%cx
		mov    %cx,_0db4e6_data(%edx)
		mov    _0db4e8_data(%eax),%cx
		mov    %cx,_0db4e8_data(%edx)
		mov    _0db4ea_data(%eax),%cx
		mov    %cx,_0db4ea_data(%edx)
		mov    _0db4ec_data(%eax),%cx
		mov    %cx,_0db4ec_data(%edx)
		mov    _0db4ee_data(%eax),%cx
		mov    %cx,_0db4ee_data(%edx)
		mov    _0db4f0_data(%eax),%cx
		mov    %cx,_0db4f0_data(%edx)
		mov    _0db4f2_data(%eax),%cx
		mov    %cx,_0db4f2_data(%edx)
		mov    _0db4f4_data(%eax),%ecx
		mov    %ecx,_0db4f4_data(%edx)
		mov    _0db4f8_data(%eax),%ax
		inc    %ebx
		mov    %ax,_0db4f8_data(%edx)
		cmp    %si,%bx
		jl     _0683af_jump

	_06844f_jump:
		movswl %si,%eax
		mov    %si,_0db5d4_data
		test   %eax,%eax
		jle    _068465_jump
		dec    %esi
		mov    %si,_0db5d4_data

	_068465_jump:
		mov    _0db5d4_data,%si
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068474_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0db5d4_data,%si
		mov    _0c4764_data,%ebp
		xor    %ebx,%ebx
		test   %si,%si
		jle    _06856d_jump

	_068492_jump:
		movswl %bx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0db4f4_data(%eax),%edx
		cmp    %ebp,%edx
		jae    _068563_jump
		test   %edx,%edx
		je     _068563_jump
		mov    %ebx,%ecx
		cmp    %si,%bx
		jge    _068559_jump

	_0684b9_jump:
		movswl %cx,%edx
		lea    0x000001(%edx),%eax
		imul   $0x000018,%eax,%eax
		imul   $0x000018,%edx,%edx
		mov    _0db4e4_data(%eax),%di
		mov    %di,_0db4e4_data(%edx)
		mov    _0db4e6_data(%eax),%di
		mov    %di,_0db4e6_data(%edx)
		mov    _0db4e8_data(%eax),%di
		mov    %di,_0db4e8_data(%edx)
		mov    _0db4ea_data(%eax),%di
		mov    %di,_0db4ea_data(%edx)
		mov    _0db4ec_data(%eax),%di
		mov    %di,_0db4ec_data(%edx)
		mov    _0db4ee_data(%eax),%di
		mov    %di,_0db4ee_data(%edx)
		mov    _0db4f0_data(%eax),%di
		mov    %di,_0db4f0_data(%edx)
		mov    _0db4f2_data(%eax),%di
		mov    %di,_0db4f2_data(%edx)
		mov    _0db4f4_data(%eax),%edi
		mov    %edi,_0db4f4_data(%edx)
		mov    _0db4f8_data(%eax),%ax
		inc    %ecx
		mov    %ax,_0db4f8_data(%edx)
		cmp    %si,%cx
		jl     _0684b9_jump

	_068559_jump:
		movswl %si,%eax
		test   %eax,%eax
		jle    _068564_jump
		dec    %esi
		jmp    _068564_jump

	_068563_jump:
		inc    %ebx

	_068564_jump:
		cmp    %si,%bx
		jl     _068492_jump

	_06856d_jump:
		mov    %ebp,_0c4764_data
		mov    %si,_0db5d4_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068584_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    $_0db348_data,%edx
		mov    _0db348_data,%bx
		xor    %eax,%eax
		cmp    %bx,%cx
		je     _0685b2_jump

	_06859d_jump:
		movswl %ax,%ebx
		cmp    $0x000018,%ebx
		jge    _0685b2_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%cx
		jne    _06859d_jump

	_0685b2_jump:
		movswl %ax,%ebx
		cmp    $0x000018,%ebx
		je     _0685bf_jump
		movw   $0x00fffe,(%edx)

	_0685bf_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06861c_func:
		movswl %dx,%edx
		mov    _09758c_data(%edx),%dl
		and    $0x0000ff,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		ret    



_068634_func:
		push   %ebx
		mov    $0x00007f,%ebx
		movswl %dx,%edx
		sub    %edx,%ebx
		mov    _09758c_data(%ebx),%dl
		and    $0x0000ff,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		pop    %ebx
		ret    



_068654_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmpb   $0x000000,_0ce86d_data
		je     _068d65_jump
		cmpw   $0x000000,_0c1ba6_data
		je     _068680_jump
		cmp    _0c250e_data,%si
		je     _068689_jump

	_068680_jump:
		cmp    _0c250c_data,%si
		jne    _06868e_jump

	_068689_jump:
		mov    $0xffffffff,%esi

	_06868e_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		jne    _0686a6_jump
		movswl %di,%eax
		cmp    $0x00000f,%eax
		je     _0686a6_jump
		xor    %eax,%eax
		mov    %ax,_0db4dc_data

	_0686a6_jump:
		movswl %si,%ebx
		mov    %ebx,%eax
		call   _0681f8_func
		mov    %eax,0x000018(%esp)
		cmp    %ax,%di
		je     _068756_jump
		movswl %ax,%edx
		testb  $0x000008,_096b80_data(%edx)
		je     _068756_jump
		mov    %ebx,%eax
		call   _068380_func
		mov    %ebx,%eax
		call   _068330_func
		movswl %ax,%ebp
		test   %ebp,%ebp
		jl     _068756_jump
		lea    0x000000(,%ebp,4),%edx
		sub    %ebp,%edx
		shl    $0x000002,%edx
		xor    %ebx,%ebx
		mov    _0db34c_data(%edx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    %edx,0x00000c(%esp)
		mov    _097080_data(,%eax,4),%bl
		mov    _097082_data(,%eax,4),%cl
		mov    _097081_data(,%eax,4),%dl
		push   %ebx
		mov    %edx,%ebx
		mov    _097480_data(%eax),%al
		and    $0x0000ff,%ebx
		mov    %eax,%edx
		and    $0x0000ff,%edx
		mov    %ebp,%eax
		call   _079160_func
		mov    0x00000c(%esp),%eax
		mov    $0xfffffffe,%edx
		mov    $0xffffffff,%ebx
		mov    %dx,_0db348_data(%eax)
		xor    %ch,%ch
		mov    %bx,_0db34e_data(%eax)
		mov    %ch,_0db468_data(%ebp)

	_068756_jump:
		cmpb   $0x000000,_0c51b5_data
		jne    _068cdd_jump
		movswl %di,%eax
		test   %eax,%eax
		je     _068cdd_jump
		cmp    0x000018(%esp),%di
		jne    _068782_jump
		testb  $0x000004,_096b80_data(%eax)
		je     _068cdd_jump

	_068782_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _0687a0_jump
		cmp    _0c250c_data,%si
		jne    _0687b9_jump
		mov    _0c250a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0687b9_jump

	_0687a0_jump:
		mov    $_0c1b4c_data,%eax
		mov    $0x00007f,%cl
		call   _068058_func
		mov    %al,0x000020(%esp)
		mov    %cl,0x000024(%esp)
		jmp    _0687fc_jump

	_0687b9_jump:
		movswl %si,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		call   _068058_func
		mov    %al,0x000020(%esp)
		movswl %di,%eax
		testb  $0x000001,_096b80_data(%eax)
		jne    _0687ec_jump
		movb   $0x00007f,0x000024(%esp)
		jmp    _0687fc_jump

	_0687ec_jump:
		mov    _0c1b34_data,%eax
		add    %edx,%eax
		call   _0680a0_func
		mov    %al,0x000024(%esp)

	_0687fc_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _097081_data,%bl
		mov    _097082_data,%cl
		cmp    $0x000035,%di
		jb     _068b84_jump
		jbe    _068848_jump
		cmp    $0x000050,%di
		jb     _068b74_jump
		jbe    _068aa1_jump
		cmp    $0x000067,%di
		jb     _068bae_jump
		jbe    _068b6a_jump
		cmp    $0x0000f5,%di
		je     _068b49_jump
		jmp    _068bae_jump

	_068848_jump:
		movswl %si,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		mov    0x000060(%eax,%edx,4),%ax
		and    $0x00ffff,%eax
		cmp    $0x0000ee,%eax
		je     _068889_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097155_data,%bl
		mov    _097154_data,%al
		mov    _097156_data,%cl
		mov    %ax,0x00001c(%esp)
		jmp    _068895_jump

	_068889_jump:
		xor    %eax,%eax
		mov    _097080_data,%al
		mov    %ax,0x00001c(%esp)

	_068895_jump:
		movswl %bx,%eax
		mov    %eax,0x000010(%esp)
		cmp    $0xffffffff,%eax
		je     _068c9a_jump
		cmp    $0x0000ff,%eax
		je     _068c9a_jump
		movswl %si,%ebp
		mov    %ebp,%eax
		call   _068380_func
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		mov    %eax,0x000004(%esp)
		movswl %di,%eax
		mov    %eax,0x000008(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x000014(%esp)
		mov    0x000014(%esp),%edx
		xor    %eax,%eax
		mov    _097083_data(%edx),%al
		mov    %eax,0x00000c(%esp)
		xor    %edx,%edx
		mov    _09757e_data,%eax
		mov    0x000024(%esp),%dl
		sar    $0x000010,%eax
		imul   %edx,%eax
		mov    %edx,(%esp)
		imul   0x00000c(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000004(%esp),%edx
		cwtl   
		call   _068634_func
		mov    0x000014(%esp),%edx
		xor    %eax,%eax
		mov    _097083_data(%edx),%al
		mov    %eax,0x00000c(%esp)
		mov    _09757e_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		imul   0x00000c(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000004(%esp),%edx
		cwtl   
		call   _06861c_func
		mov    0x000008(%esp),%edx
		xor    %eax,%eax
		mov    _096c80_data(%edx),%al
		test   %eax,%eax
		jne    _068bd6_jump
		mov    0x000004(%esp),%eax
		push   %eax
		mov    0x000018(%esp),%eax
		xor    %edx,%edx
		mov    _097083_data(%eax),%dl
		mov    _09757e_data,%eax
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%eax
		imul   %ebx,%eax
		imul   %eax,%edx
		movswl %cx,%ebx
		sar    $0x00000e,%edx
		mov    0x00000c(%esp),%ecx
		movswl %dx,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _097480_data(%ecx),%al
		mov    %edx,%ecx
		mov    0x000018(%esp),%edx
		call   _079010_func
		movswl %ax,%ebx
		cmp    $0xffffffff,%ebx
		je     _068c9a_jump
		mov    %ebp,%eax
		call   _068584_func
		mov    %ebx,%eax
		lea    0x000000(,%ebx,4),%edx
		xor    %ebx,%eax
		sub    %ebx,%edx
		mov    0x000024(%esp),%al
		mov    %ax,_0db34a_data(,%edx,4)
		xor    %eax,%eax
		mov    %si,_0db348_data(,%edx,4)
		mov    0x000020(%esp),%al
		mov    %ax,_0db34c_data(,%edx,4)
		mov    0x000008(%esp),%eax
		mov    %di,_0db34e_data(,%edx,4)
		testb  $0x000010,_096b80_data(%eax)
		je     _068c9a_jump
		movb   $0x000001,_0db468_data(%ebx)
		jmp    _068c9a_jump

	_0689fe_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		je     _068a32_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _09713c_data,%al
		mov    _09713d_data,%bl
		mov    %ax,0x00001c(%esp)
		mov    $0x00007f,%ah
		mov    _09713e_data,%cl
		mov    %ah,0x000024(%esp)
		jmp    _068895_jump

	_068a32_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _097328_data,%al
		mov    _097329_data,%bl
		mov    %ax,0x00001c(%esp)
		mov    $0x00007f,%al
		mov    _09732a_data,%cl
		mov    %al,0x000024(%esp)
		jmp    _068895_jump

	_068a59_jump:
		mov    _0db4dc_data,%ax
		movswl %ax,%ebp
		inc    %eax
		mov    %ax,_0db4dc_data
		cmp    $0x000002,%ebp
		jle    _068a92_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0970bc_data,%al
		mov    _0970bd_data,%bl
		mov    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    _0970be_data,%cl
		mov    %ax,_0db4dc_data

	_068a92_jump:
		mov    $0xffffffff,%eax
		call   _068380_func
		jmp    _068895_jump

	_068aa1_jump:
		mov    _0db4de_data,%ax
		movswl %ax,%ebp
		inc    %eax
		mov    %ax,_0db4de_data
		cmp    $0x000001,%ebp
		jle    _068895_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0971c1_data,%bl
		mov    _0971c2_data,%cl
		mov    _0971c0_data,%al
		mov    %dx,_0db4de_data
		mov    %ax,0x00001c(%esp)
		jmp    _068895_jump

	_068ae4_jump:
		movswl %si,%eax
		mov    %eax,%edx
		xor    %ebx,%ebx
		shl    $0x000005,%edx
		xor    %ecx,%ecx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		mov    _0970b9_data,%bl
		mov    _0970ba_data,%cl
		mov    0x00006c(%eax,%edx,4),%al
		and    $0x0000ff,%eax
		mov    _09756c_data(%eax),%al
		xor    %edx,%edx
		mov    _0970b8_data,%dl
		xor    %ah,%ah
		add    %eax,%edx
		mov    %dx,0x00001c(%esp)
		jmp    _068895_jump

	_068b28_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _0970cd_data,%bl
		mov    _0970cc_data,%al
		mov    _0970ce_data,%cl
		mov    %ax,0x00001c(%esp)
		jmp    _068895_jump

	_068b49_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097455_data,%bl
		mov    _097454_data,%al
		mov    _097456_data,%cl
		mov    %ax,0x00001c(%esp)
		jmp    _068895_jump

	_068b6a_jump:
		mov    $0xffffffff,%ebx
		jmp    _068895_jump

	_068b74_jump:
		cmp    $0x000037,%di
		jb     _068bae_jump
		jbe    _068b6a_jump
		cmp    $0x000039,%di
		je     _068b6a_jump
		jmp    _068bae_jump

	_068b84_jump:
		cmp    $0x00000f,%di
		jb     _068ba4_jump
		jbe    _068a59_jump
		cmp    $0x000013,%di
		jb     _068bae_jump
		jbe    _068b28_jump
		cmp    $0x00002f,%di
		je     _0689fe_jump
		jmp    _068bae_jump

	_068ba4_jump:
		cmp    $0x00000e,%di
		je     _068ae4_jump

	_068bae_jump:
		movswl %di,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097081_data(,%edx,4),%bl
		mov    _097080_data(,%edx,4),%al
		mov    _097082_data(,%edx,4),%cl
		mov    %ax,0x00001c(%esp)
		jmp    _068895_jump

	_068bd6_jump:
		call   _068474_func
		mov    %ebp,%eax
		call   _068380_func
		mov    _0db5d2_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x00001c(%esp),%eax
		mov    %bx,_0db4e8_data(,%edx,8)
		mov    0x000014(%esp),%ebx
		mov    %ax,_0db4ec_data(,%edx,8)
		xor    %eax,%eax
		mov    _097083_data(%ebx),%al
		mov    %ax,_0db4ee_data(,%edx,8)
		xor    %eax,%eax
		mov    0x000024(%esp),%al
		mov    %ax,_0db4f0_data(,%edx,8)
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		mov    0x000008(%esp),%ebx
		mov    %ax,_0db4f2_data(,%edx,8)
		xor    %eax,%eax
		mov    _096c80_data(%ebx),%al
		mov    _0c4764_data,%ebx
		mov    %si,_0db4e4_data(,%edx,8)
		add    %ebx,%eax
		mov    %eax,_0db4f4_data(,%edx,8)
		mov    0x000008(%esp),%eax
		mov    %di,_0db4e6_data(,%edx,8)
		mov    _096e80_data(,%eax,2),%bx
		mov    %cx,_0db4ea_data(,%edx,8)
		test   %bx,%bx
		setne  %al
		xor    %ah,%ah
		mov    %ax,_0db4f8_data(,%edx,8)
		mov    _0db5d2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jge    _068c9a_jump
		incw   _0db5d4_data

	_068c9a_jump:
		movswl %di,%edx
		cmp    $0x0000cb,%edx
		je     _068cc5_jump
		cmp    $0x0000ed,%edx
		je     _068cc5_jump
		cmp    $0x0000d1,%edx
		je     _068cc5_jump
		cmp    $0x0000e1,%edx
		je     _068cc5_jump
		cmp    $0x0000ec,%edx
		jne    _068cdd_jump

	_068cc5_jump:
		xor    %eax,%eax
		mov    _0c2502_data,%al
		cmp    $0x000040,%eax
		je     _068cd8_jump
		cmp    $0x000080,%eax
		jne    _068cdd_jump

	_068cd8_jump:
		call   _01cf4c_func

	_068cdd_jump:
		xor    %eax,%eax

	_068cdf_jump:
		movswl %ax,%edx
		cmp    $0x000014,%edx
		je     _068d03_jump
		add    %edx,%edx
		cmp    _0db486_data(%edx),%si
		je     _068d03_jump
		mov    _0db484_data(%edx),%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffe,%edx
		je     _068d03_jump
		inc    %eax
		jmp    _068cdf_jump

	_068d03_jump:
		movswl %ax,%edx
		cmp    $0x000014,%edx
		jne    _068d55_jump
		movswl %di,%edx
		test   %edx,%edx
		je     _068d65_jump

	_068d12_jump:
		dec    %eax
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _068d38_jump
		mov    _0db484_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%ebx
		mov    _0c1b34_data,%edx
		cmpl   $0x000000,0x000024(%edx,%ebx,1)
		jne    _068d12_jump

	_068d38_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _068d42_jump
		xor    %eax,%eax

	_068d42_jump:
		cwtl   
		mov    %si,_0db486_data(,%eax,2)
		mov    %di,_0db4ae_data(,%eax,2)
		jmp    _068d65_jump

	_068d55_jump:
		mov    %si,_0db486_data(,%edx,2)
		mov    %di,_0db4ae_data(,%edx,2)

	_068d65_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_068d70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0ce86d_data
		je     _068e27_jump
		movswl %ax,%esi
		lea    0x000000(,%esi,4),%eax
		xor    %edx,%edx
		mov    _097081_data(%eax),%dl
		cmp    $0xffffffff,%edx
		je     _068e27_jump
		cmp    $0x0000ff,%edx
		je     _068e27_jump
		mov    _09757e_data,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    _097083_data(%eax),%bl
		imul   %ecx,%ebx
		sar    $0x000007,%ebx
		push   $0x000040
		movswl %bx,%ebx
		xor    %ecx,%ecx
		push   %ebx
		xor    %ebx,%ebx
		mov    _097080_data(%eax),%cl
		mov    _097082_data(%eax),%bl
		xor    %eax,%eax
		mov    _097480_data(%esi),%al
		call   _079010_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _068e27_jump
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $0xfffffffe,%ebx
		mov    $0x000040,%ecx
		mov    %bx,_0db348_data(,%eax,4)
		mov    %cx,_0db34a_data(,%eax,4)
		mov    _096b80_data(%esi),%bl
		mov    %cx,_0db34c_data(,%eax,4)
		test   $0x000010,%bl
		je     _068e27_jump
		movb   $0x000001,_0db468_data(%edx)

	_068e27_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068e2c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0ce86d_data
		je     _069265_jump
		cmpw   $0x000000,_0c1ba6_data
		je     _068e56_jump
		cmp    _0c250e_data,%si
		je     _068e5f_jump

	_068e56_jump:
		cmp    _0c250c_data,%si
		jne    _068e64_jump

	_068e5f_jump:
		mov    $0xffffffff,%esi

	_068e64_jump:
		movswl %si,%edx
		mov    %edx,%eax
		call   _068258_func
		mov    %ax,0x000004(%esp)
		cwtl   
		cmp    $0xffffffff,%eax
		je     _069191_jump
		cmp    $0xffffffff,%edx
		je     _068e98_jump
		cmp    _0c250c_data,%si
		jne    _068e9c_jump
		mov    _0c250a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _068e9c_jump

	_068e98_jump:
		mov    $0x00007f,%al
		jmp    _068ee4_jump

	_068e9c_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0db4e4_data(,%eax,8),%eax
		sar    $0x000010,%eax
		mov    _096b80_data(%eax),%dl
		test   $0x000001,%dl
		je     _068ec6_jump
		test   $0x000002,%dl
		jne    _068eca_jump

	_068ec6_jump:
		mov    $0x00007f,%al
		jmp    _068ee4_jump

	_068eca_jump:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _0680a0_func

	_068ee4_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,0x000008(%esp)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000003,%edi
		mov    0x000008(%esp),%edx
		mov    %dx,_0db4f0_data(%edi)
		mov    _0c4764_data,%ebp
		cmp    _0db4f4_data(%edi),%ebp
		jne    _069191_jump
		mov    _0db4f0_data(%edi),%edx
		sar    $0x000010,%edx
		mov    _0db4ec_data(%edi),%ebx
		push   %edx
		mov    _09757e_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		imul   %eax,%edx
		imul   %ebx,%edx
		sar    $0x00000e,%edx
		movswl %dx,%eax
		push   %eax
		mov    _0db4e6_data(%edi),%eax
		mov    _0db4ea_data(%edi),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    %eax,0x000008(%esp)
		mov    _0db4e4_data(%edi),%eax
		mov    _0db4e8_data(%edi),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    _097480_data(%eax),%al
		and    $0x0000ff,%eax
		mov    0x000008(%esp),%edx
		call   _079010_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _068fea_jump
		movswl %si,%eax
		call   _068584_func
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%ebx
		mov    %si,_0db348_data(,%eax,4)
		mov    %bx,_0db34a_data(,%eax,4)
		mov    _0db4f2_data(%edi),%bx
		mov    %bx,_0db34c_data(,%eax,4)
		mov    _0db4e6_data(%edi),%bx
		mov    %bx,_0db34e_data(,%eax,4)
		mov    _0db4e4_data(%edi),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_096b80_data(%eax)
		je     _068fea_jump
		movb   $0x000001,_0db468_data(%edx)

	_068fea_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		shl    $0x000003,%ebx
		cmpw   $0x000000,_0db4f8_data(%ebx)
		je     _0690c6_jump
		mov    _0db4e4_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _096d80_data(%eax),%al
		and    $0x0000ff,%eax
		add    %ebp,%eax
		mov    %eax,_0db4f4_data(%ebx)
		mov    _0db4e4_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _096e80_data(,%eax,2),%ax
		mov    %ax,_0db4e6_data(%ebx)
		mov    _0db4e4_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _097081_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0db4e8_data(%ebx)
		mov    _0db5d2_data,%edx
		mov    _0db4e4_data(%ebx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    _097082_data(,%eax,4),%cl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %cx,_0db4ea_data(,%eax,8)
		mov    _0db4e4_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _097080_data(,%edx,4),%dl
		xor    %dh,%dh
		mov    %dx,_0db4ec_data(,%eax,8)
		mov    _0db4e4_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _097083_data(,%edx,4),%dl
		xor    %dh,%dh
		xor    %ecx,%ecx
		mov    %dx,_0db4ee_data(,%eax,8)
		mov    %cx,_0db4f8_data(%ebx)
		jmp    _069191_jump

	_0690c6_jump:
		mov    0x000004(%esp),%ebx
		cmp    _0db5d4_data,%bx
		jge    _06917e_jump
		mov    _0db5d4_data,%di

	_0690de_jump:
		movswl %bx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0db4e4_data(%edx),%cx
		mov    %cx,_0db4e4_data(%eax)
		mov    _0db4e6_data(%edx),%cx
		mov    %cx,_0db4e6_data(%eax)
		mov    _0db4e8_data(%edx),%cx
		mov    %cx,_0db4e8_data(%eax)
		mov    _0db4ea_data(%edx),%cx
		mov    %cx,_0db4ea_data(%eax)
		mov    _0db4ec_data(%edx),%cx
		mov    %cx,_0db4ec_data(%eax)
		mov    _0db4ee_data(%edx),%cx
		mov    %cx,_0db4ee_data(%eax)
		mov    _0db4f0_data(%edx),%cx
		mov    %cx,_0db4f0_data(%eax)
		mov    _0db4f2_data(%edx),%cx
		mov    %cx,_0db4f2_data(%eax)
		mov    _0db4f4_data(%edx),%ecx
		mov    %ecx,_0db4f4_data(%eax)
		mov    _0db4f8_data(%edx),%dx
		inc    %ebx
		mov    %dx,_0db4f8_data(%eax)
		cmp    %di,%bx
		jl     _0690de_jump

	_06917e_jump:
		mov    _0db5d2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069191_jump
		decw   _0db5d4_data

	_069191_jump:
		movswl %si,%edx
		mov    %edx,%eax
		call   _0682b0_func
		mov    %eax,%ebx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _069265_jump
		cmp    $0xffffffff,%edx
		je     _0691c2_jump
		cmp    _0c250c_data,%si
		jne    _0691c6_jump
		mov    _0c250a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0691c6_jump

	_0691c2_jump:
		mov    $0x00007f,%dl
		jmp    _069203_jump

	_0691c6_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0db34c_data(,%eax,4),%eax
		sar    $0x000010,%eax
		cmp    $0x0000cc,%eax
		jne    _0691e7_jump
		mov    $0x00007f,%dl
		jmp    _069203_jump

	_0691e7_jump:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _0680a0_func
		mov    %al,%dl

	_069203_jump:
		movswl %bx,%ecx
		mov    %ecx,%ebx
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		xor    %ecx,%ebx
		shl    $0x000002,%eax
		mov    %dl,%bl
		mov    _0db34c_data(%eax),%si
		mov    _0db468_data(%ecx),%dh
		mov    %bx,_0db34a_data(%eax)
		test   %dh,%dh
		je     _069265_jump
		mov    _0db34c_data(%eax),%eax
		sar    $0x000010,%eax
		movzbl _097083_data(,%eax,4),%edi
		mov    _09757e_data,%eax
		movswl %si,%ebx
		sar    $0x000010,%eax
		and    $0x0000ff,%edx
		imul   %edx,%eax
		imul   %edi,%eax
		sar    $0x00000e,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _079170_func

	_069265_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_069270_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0ce86d_data
		je     _06932e_jump
		cmpw   $0x000000,_0c1ba6_data
		je     _06929b_jump
		cmp    _0c250e_data,%bx
		jne    _06929b_jump
		mov    $0xffffffff,%ebx

	_06929b_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		call   _0682b0_func
		mov    %eax,%esi
		movswl %ax,%edi
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmp    $0xffffffff,%edi
		je     _0692ef_jump
		cmp    $0xffffffff,%edx
		jne    _0692c5_jump
		mov    $_0c1b4c_data,%eax
		jmp    _0692cd_jump

	_0692c5_jump:
		mov    _0c1b34_data,%edx
		add    %edx,%eax

	_0692cd_jump:
		call   _068058_func
		xor    %ebx,%ebx
		movswl %si,%edx
		mov    %al,%bl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bx,_0db34c_data(,%eax,4)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0692ef_jump:
		cmp    %edi,%edx
		jne    _0692fa_jump
		mov    $_0c1b4c_data,%eax
		jmp    _069302_jump

	_0692fa_jump:
		mov    _0c1b34_data,%edx
		add    %edx,%eax

	_069302_jump:
		call   _068058_func
		mov    %al,%cl
		movswl %bx,%eax
		call   _068258_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06932e_jump
		lea    0x000000(,%edx,4),%eax
		xor    %ebx,%ebx
		sub    %edx,%eax
		mov    %cl,%bl
		mov    %bx,_0db4f2_data(,%eax,8)

	_06932e_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_069334_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		cmpb   $0x000000,_0ce86d_data
		je     _0694c6_jump
		mov    $_0db34e_data,%ebp
		xor    %edi,%edi
		mov    $_0db348_data,%esi
		mov    %edi,(%esp)
		jmp    _069374_jump

	_06935b_jump:
		mov    (%esp),%eax
		inc    %edi
		add    $0x00000c,%ebp
		add    $0x00000c,%eax
		add    $0x00000c,%esi
		mov    %eax,(%esp)
		cmp    $0x000018,%edi
		jg     _06946a_jump

	_069374_jump:
		movswl (%esi),%eax
		test   %eax,%eax
		jl     _06938d_jump
		imul   $0x000084,%eax,%edx
		mov    _0c1b34_data,%eax
		cmpl   $0x000000,0x000024(%edx,%eax,1)
		je     _0693ae_jump

	_06938d_jump:
		movswl (%esi),%eax
		cmp    $0xfffffffe,%eax
		jne    _06939e_jump
		movswl 0x000000(%ebp),%eax
		cmp    $0xffffffff,%eax
		jne    _0693ae_jump

	_06939e_jump:
		mov    _0c1b38_data,%dx
		cmp    (%esi),%dx
		jg     _069432_jump

	_0693ae_jump:
		mov    (%esp),%eax
		mov    _0db34c_data(%eax),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_096b80_data(%eax)
		je     _069427_jump
		movswl 0x000000(%ebp),%edx
		xor    %ebx,%ebx
		mov    _097080_data(,%edx,4),%bl
		xor    %ecx,%ecx
		push   %ebx
		xor    %ebx,%ebx
		mov    _097082_data(,%edx,4),%cl
		mov    _097081_data(,%edx,4),%bl
		mov    _097480_data(%edx),%dl
		and    $0x0000ff,%edx
		movswl %di,%eax
		call   _079160_func
		xor    %dh,%dh
		xor    %eax,%eax
		mov    %dh,_0db468_data(%edi)
		xor    %edx,%edx

	_069403_jump:
		mov    _0db486_data(%eax),%bx
		cmp    (%esi),%bx
		je     _069418_jump
		add    $0x000002,%eax
		inc    %edx
		cmp    $0x000028,%eax
		jne    _069403_jump

	_069418_jump:
		cmp    $0x000014,%edx
		jge    _069427_jump
		movw   $0x00ffff,_0db4ae_data(,%edx,2)

	_069427_jump:
		movw   $0x00fffe,(%esi)
		movw   $0x00ffff,0x000000(%ebp)

	_069432_jump:
		movswl (%esi),%eax
		test   %eax,%eax
		jl     _06935b_jump
		imul   $0x000084,%eax,%edx
		mov    _0c1b34_data,%ebx
		cmpl   $0x000000,0x000024(%edx,%ebx,1)
		je     _06935b_jump
		xor    %edx,%edx
		call   _068e2c_func
		movswl (%esi),%eax
		xor    %edx,%edx
		call   _069270_func
		jmp    _06935b_jump

	_06946a_jump:
		xor    %edi,%edi
		xor    %esi,%esi
		xor    %ecx,%ecx
		jmp    _069476_jump

	_069472_jump:
		add    $0x000018,%esi
		inc    %edi

	_069476_jump:
		mov    _0db5d2_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jge    _0694c6_jump
		mov    _0c1b38_data,%dx
		cmp    _0db4e4_data(%esi),%dx
		jle    _069472_jump
		mov    _0db4e2_data(%esi),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0c1b34_data,%ebx
		cmp    0x000024(%edx,%ebx,1),%ecx
		je     _069472_jump
		mov    %ecx,%edx
		call   _068e2c_func
		mov    _0db4e2_data(%esi),%eax
		mov    %ecx,%edx
		sar    $0x000010,%eax
		call   _069270_func
		jmp    _069472_jump

	_0694c6_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi

	_0694cb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0694d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0ce86d_data
		je     _0694cb_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _0694e4_jump

	_0694e3_jump:
		inc    %ecx

	_0694e4_jump:
		movswl %cx,%eax
		cmp    $0x000018,%eax
		jge    _0694cb_jump
		imul   $0x00000c,%eax,%eax
		mov    _0db34c_data(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		je     _069512_jump
		cmp    $0x0000f5,%eax
		je     _069512_jump
		cmp    $0x000002,%eax
		je     _069512_jump
		testb  $0x000010,_096b80_data(%eax)
		je     _0694e3_jump

	_069512_jump:
		movswl %cx,%eax
		mov    %esi,%ebx
		mov    %esi,%edx
		call   _079170_func
		jmp    _0694e3_jump



_069520_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0ce86d_data
		je     _069545_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _06953d_jump

	_069533_jump:
		mov    %esi,%ebx
		mov    %esi,%edx
		call   _079170_func
		inc    %ecx

	_06953d_jump:
		movswl %cx,%eax
		cmp    $0x000018,%eax
		jl     _069533_jump

	_069545_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06956c_switch:
		.long   _069594_case
		.long   _0695d3_case
		.long   _06959b_case
		.long   _0695a2_case
		.long   _0695a9_case
		.long   _0695b0_case


	_069584_jump:
		push   %edx
		cmpb   $0x000000,_0ce86d_data
		je     _0695e1_jump
		test   %eax,%eax
		je     _0695b7_jump
		jmp    _0695d3_case

	_069594_case:
		mov    $0x000001,%eax
		jmp    _0695d3_case

	_06959b_case:
		mov    $0x000002,%eax
		jmp    _0695d3_case

	_0695a2_case:
		mov    $0x000004,%eax
		jmp    _0695d3_case

	_0695a9_case:
		mov    $0x000003,%eax
		jmp    _0695d3_case

	_0695b0_case:
		mov    $0x000007,%eax
		jmp    _0695d3_case

	_0695b7_jump:
		mov    _0c261e_data,%dx
		dec    %edx
		cmp    $0x000005,%dx
		ja     _0695d3_case
		and    $0x00ffff,%edx
		jmp    *%cs:_06956c_switch(,%edx,4)

	_0695d3_case:
		mov    _09757e_data,%edx
		sar    $0x000010,%edx
		call   _079238_func

	_0695e1_jump:
		pop    %edx
		ret    



_0695e4_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c6980_data,%edx
		test   %edx,%edx
		jne    _069649_jump
		mov    $_0c6984_data,%esi
		call   _012748_func
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		mov    _094bf3_data(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _0772fc_func
		xor    %dh,%dh
		mov    $0x000001,%eax
		mov    %dh,_0db5d9_data
		mov    %eax,_0c6980_data
		jmp    _06975a_jump

	_069649_jump:
		cmp    $0xffffffff,%edx
		je     _06975a_jump
		mov    $_0c6988_data,%esi
		call   _012748_func
		mov    _0c6988_data,%edx
		sub    _0c6984_data,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x0000b6,%ebx
		add    %eax,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %eax,_0c6980_data
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,8),%edx
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    _0c6980_data,%esi
		add    %eax,%edx
		add    $0x000002,%esi
		mov    _094c74_data(%edx),%edi
		mov    %esi,_0c6980_data
		cmp    %edi,%esi
		jb     _06975a_jump
		xor    %edx,%edx
		mov    _0db5d8_data,%dl
		mov    %dl,%al
		inc    %al
		test   %edx,%edx
		jne    _0696eb_jump
		mov    %al,_0db5d8_data
		call   _0771d0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0696eb_jump:
		cmp    $0x000004,%edx
		jge    _0696fb_jump
		mov    %al,_0db5d8_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0696fb_jump:
		mov    $_0c6984_data,%esi
		call   _012748_func
		mov    _0c2520_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c251e_data,%edx
		sar    $0x000010,%edx
		mov    _094bf3_data(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		mov    $0x000001,%ebp
		call   _077230_func
		xor    %dl,%dl
		mov    _0db5d9_data,%ah
		mov    %dl,_0db5d8_data
		test   %ah,%ah
		sete   %al
		mov    %ebp,_0c6980_data
		mov    %al,_0db5d9_data

	_06975a_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_069760_func:
		call   _0759f8_func
		test   %al,%al
		je     _069790_jump
		call   _0753b0_func
		and    $0x0000ff,%eax
		call   _076ac4_func
		test   %al,%al
		je     _069790_jump
		call   _0772dc_func
		call   _0753b0_func
		and    $0x0000ff,%eax
		jmp    _076b64_jump

	_069790_jump:
		mov    %al,_0c697c_data
		ret    



_069798_func:
		call   _0772dc_func
		call   _0753b0_func
		and    $0x0000ff,%eax
		call   _076b18_func
		jmp    _075d34_jump



_0697c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0db5dc_data,%ebp
		movswl %ax,%ebx
		movw   $0x000000,0x000000(%ebp)
		test   %ebx,%ebx
		jl     _0697eb_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0697e7_jump
		mov    %ebx,%eax

	_0697e7_jump:
		neg    %eax
		jmp    _0697f8_jump

	_0697eb_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0697f8_jump
		mov    %ebx,%eax

	_0697f8_jump:
		mov    %ax,0x000002(%ebp)
		mov    0x000000(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06980a_jump
		xor    %eax,%eax
		jmp    _06980f_jump

	_06980a_jump:
		mov    $0x000003,%eax

	_06980f_jump:
		mov    %al,0x000018(%ebp)
		mov    0x00001c(%ebp),%ax
		neg    %eax
		movb   $0x000000,0x000019(%ebp)
		mov    %ax,0x000004(%esp)
		jmp    _069877_jump

	_069823_jump:
		xor    %eax,%eax
		mov    0x00001c(%ebp),%ax
		call   _07956f_func
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x000002(%esp),%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    %edi,%ecx
		call   _079562_func
		call   _079d5a_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07b5ec_func
		call   _07975f_func
		call   _07a21c_func
		xor    %edx,%edx
		mov    (%esp),%ebx
		mov    0x00001c(%ebp),%dx
		add    %ebx,%edx
		lea    0x000000(,%edx,4),%esi
		mov    0x000024(%ebp),%edx
		mov    %eax,(%edx,%esi,1)
		incw   0x000004(%esp)

	_069877_jump:
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00001c(%ebp),%ax
		mov    %edx,(%esp)
		cmp    %edx,%eax
		jg     _069823_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069898_case:
		push   %ebx
		push   %edx
		mov    _0db5dc_data,%eax
		test   %eax,%eax
		je     _0698c2_jump
		mov    0x000024(%eax),%edx
		test   %edx,%edx
		je     _0698b1_jump
		mov    %edx,%eax
		call   _07539c_func

	_0698b1_jump:
		mov    _0db5dc_data,%ebx
		test   %ebx,%ebx
		je     _0698c2_jump
		mov    %ebx,%eax
		call   _07539c_func

	_0698c2_jump:
		pop    %edx
		pop    %ebx
		ret    



_0698c8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x000008(%esp)
		test   %ebx,%ebx
		je     _0699c6_jump
		test   %ecx,%ecx
		je     _0699c6_jump
		mov    $0x000030,%eax
		call   _075384_func
		mov    %eax,%ebp
		mov    %eax,_0db5dc_data
		test   %eax,%eax
		je     _0699c6_jump
		xor    %eax,%eax
		mov    $0x000028,%ebx
		mov    %di,%ax
		cmp    %ebx,%eax
		jle    _069919_jump
		mov    %ebx,%eax

	_069919_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _069926_jump
		mov    %ebx,%eax

	_069926_jump:
		mov    %ax,0x00001c(%ebp)
		add    %eax,%eax
		mov    %ax,0x00001e(%ebp)
		xor    %eax,%eax
		mov    $0x400921fb,%ecx
		mov    0x00001c(%ebp),%ax
		mov    $0x54442eea,%ebx
		call   _07956f_func
		call   _07975f_func
		call   _07a220_func
		mov    %ax,0x000020(%ebp)
		xor    %eax,%eax
		mov    $0x54442eea,%ebx
		mov    0x00001c(%ebp),%ax
		mov    $0x400921fb,%ecx
		call   _07956f_func
		call   _07975f_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _07975f_func
		call   _07a220_func
		mov    $0x00fa00,%ecx
		mov    _0cdf30_data,%edi
		mov    %ax,0x000022(%ebp)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _069997_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_069997_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cdf30_data,%eax
		mov    %eax,0x000028(%ebp)
		mov    (%esp),%eax
		mov    %eax,0x00002c(%ebp)
		xor    %eax,%eax
		mov    0x00001e(%ebp),%ax
		shl    $0x000002,%eax
		call   _075384_func
		mov    %eax,0x000024(%ebp)
		test   %eax,%eax
		je     _0699c6_jump
		movb   $0x000001,0x000008(%esp)

	_0699c6_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _0699db_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _0697c0_func
		jmp    _0699e0_jump

	_0699db_jump:
		call   _069898_case

	_0699e0_jump:
		mov    0x000008(%esp),%al
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0699ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0db5dc_data,%esi
		mov    0x000018(%esi),%al
		cmp    $0x000001,%al
		jb     _069bc4_jump
		jbe    _069aaf_jump
		cmp    $0x000002,%al
		je     _069b6e_jump
		jmp    _069bcc_jump

	_069a19_jump:
		xor    %eax,%eax
		mov    0x000019(%esi),%al
		test   %eax,%eax
		jne    _069a5b_jump
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069a4a_jump
		movl   $0x00013f,0x000004(%esi)
		mov    0x000004(%esi),%eax
		mov    %eax,0x000014(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000008(%esi)
		jmp    _069a57_jump

	_069a4a_jump:
		mov    0x000014(%esi),%eax
		movl   $0x00013f,0x000004(%esi)
		mov    %eax,0x000008(%esi)

	_069a57_jump:
		movb   $0x000001,0x000019(%esi)

	_069a5b_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _079562_func
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %edx,%ecx
		call   _07956f_func
		mov    %eax,%ebp
		mov    %edx,%edi
		mov    %ebx,%eax
		mov    %ecx,%edx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _079d5a_func
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _07a199_func
		call   _07975f_func
		call   _07a21c_func
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		sub    %edx,%eax
		mov    %eax,0x000010(%esi)
		jmp    _069bcc_jump

	_069aaf_jump:
		xor    %eax,%eax
		mov    0x000019(%esi),%al
		test   %eax,%eax
		jne    _069aec_jump
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069ad2_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,0x000008(%esi)
		jmp    _069ae8_jump

	_069ad2_jump:
		mov    0x000014(%esi),%eax
		mov    %eax,0x000008(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000004(%esi)

	_069ae8_jump:
		movb   $0x000001,0x000019(%esi)

	_069aec_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _079562_func
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    0x000020(%esi),%ax
		mov    %edx,0x000004(%esp)
		call   _07956f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		call   _07b674_func
		jg     _069b4f_jump
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		call   _07956f_func
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _079d5a_func
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _07a1c0_func
		call   _07975f_func
		call   _07a21c_func
		jmp    _069b57_jump

	_069b4f_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		neg    %eax

	_069b57_jump:
		mov    %eax,0x00000c(%esi)
		mov    0x000004(%esi),%eax
		mov    0x000014(%esi),%ebx
		mov    $0x00013f,%edx
		sub    %ebx,%eax
		sub    %eax,%edx
		mov    %edx,0x000010(%esi)
		jmp    _069bcc_jump

	_069b6e_jump:
		xor    %eax,%eax
		mov    0x000019(%esi),%al
		test   %eax,%eax
		jne    _069bac_jump
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069b90_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		neg    %eax
		jmp    _069ba5_jump

	_069b90_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		dec    %eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		neg    %eax
		mov    %eax,0x000014(%esi)

	_069ba5_jump:
		mov    %eax,0x000008(%esi)
		movb   $0x000001,0x000019(%esi)

	_069bac_jump:
		mov    0x000014(%esi),%eax
		neg    %eax
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		add    %edx,%eax
		mov    %eax,0x000010(%esi)
		jmp    _069bcc_jump

	_069bc4_jump:
		test   %al,%al
		je     _069a19_jump

	_069bcc_jump:
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069bd7_jump
		neg    %eax

	_069bd7_jump:
		add    %ax,(%esi)
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069bf0_jump
		mov    0x000015(%esi),%eax
		sar    $0x000018,%eax
		cmp    $0x000004,%eax
		jne    _069c00_jump
		jmp    _069bfb_jump

	_069bf0_jump:
		mov    0x000015(%esi),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _069c00_jump

	_069bfb_jump:
		movw   $0x000000,(%esi)

	_069c00_jump:
		mov    (%esi),%ax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069c10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0db5dc_data,%edx
		mov    0x000015(%edx),%eax
		sar    $0x000018,%eax
		cmp    $0x000003,%eax
		jne    _069f36_jump
		mov    $0x003e80,%ecx
		mov    0x00002c(%edx),%edi
		cld    
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069c4b_jump
		mov    0x000018(%edx),%al
		inc    %al
		jmp    _069c50_jump

	_069c4b_jump:
		mov    0x000018(%edx),%al
		dec    %al

	_069c50_jump:
		movb   $0x000000,0x000019(%edx)
		mov    %al,0x000018(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069c61_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069c85_jump
		xor    %eax,%eax
		mov    0x000019(%edx),%al
		cmp    $0x000001,%eax
		jne    _069c85_jump
		mov    $0x003e80,%ecx
		mov    (%esp),%esi
		mov    %ebp,%edi
		cld    
		rep movsl %ds:(%esi),%es:(%edi)
		movb   $0x000002,0x000019(%edx)

	_069c85_jump:
		xor    %edi,%edi
		mov    %edi,0x000010(%esp)
		mov    $0x000140,%edi
		jmp    _069cb5_jump

	_069c92_jump:
		mov    (%esp),%ecx
		mov    0x000010(%esp),%esi
		add    $0x000140,%ebp
		add    %edi,%ecx
		inc    %esi
		mov    %ecx,(%esp)
		mov    %esi,0x000010(%esp)
		cmp    $0x0000c8,%esi
		jge    _069f5e_jump

	_069cb5_jump:
		mov    0x00000c(%edx),%ebx
		xor    %ecx,%ecx
		test   %ebx,%ebx
		jle    _069ce8_jump

	_069cbe_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		sub    %ecx,%eax
		mov    0x000024(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x000010(%edx),%eax
		add    (%esi),%eax
		mov    (%esp),%esi
		mov    0x000014(%edx),%ebx
		add    %esi,%eax
		add    %ecx,%ebx
		mov    (%eax),%al
		mov    %al,(%ebx,%ebp,1)
		inc    %ecx
		cmp    0x00000c(%edx),%ecx
		jl     _069cbe_jump

	_069ce8_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069d1b_jump
		mov    0x00000c(%edx),%ebx
		jmp    _069cf7_jump

	_069cf6_jump:
		inc    %ebx

	_069cf7_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069d02_jump
		neg    %eax

	_069d02_jump:
		add    0x00000c(%edx),%eax
		cmp    %eax,%ebx
		jge    _069c92_jump
		mov    0x000014(%edx),%eax
		add    %ebx,%eax
		cmp    $0x000140,%eax
		jge    _069cf6_jump
		movb   $0x000000,(%eax,%ebp,1)
		jmp    _069cf6_jump

	_069d1b_jump:
		mov    $0xffffffff,%ebx
		mov    (%esp),%ecx
		jmp    _069d33_jump

	_069d25_jump:
		mov    0x000014(%edx),%eax
		sub    %ebx,%eax
		lea    (%eax,%ebp,1),%esi
		mov    (%ecx,%eax,1),%al
		inc    %ebx
		mov    %al,(%esi)

	_069d33_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069d3e_jump
		neg    %eax

	_069d3e_jump:
		dec    %eax
		cmp    %eax,%ebx
		jge    _069c92_jump
		jmp    _069d25_jump

	_069d49_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069e03_jump
		xor    %esi,%esi
		mov    $0x00013f,%edi
		mov    %esi,0x00000c(%esp)
		mov    0x00000c(%edx),%ecx
		xor    %ebx,%ebx
		mov    0x00001c(%edx),%bx
		cmp    %ebx,%ecx
		jl     _069da8_jump
		jmp    _069de6_jump

	_069d73_jump:
		mov    (%esp),%esi
		mov    0x00000c(%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%esi
		inc    %eax
		mov    %esi,(%esp)
		mov    %eax,0x00000c(%esp)
		cmp    $0x0000c8,%eax
		jge    _069f5e_jump
		mov    0x00000c(%edx),%ecx
		xor    %ebx,%ebx
		mov    0x00001c(%edx),%bx
		cmp    %ebx,%ecx
		jl     _069da8_jump
		jmp    _069de6_jump

	_069da8_jump:
		lea    (%ebx,%ecx,1),%eax
		shl    $0x000002,%eax
		mov    0x000024(%edx),%ebx
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		add    (%ebx),%eax
		mov    %eax,%ebx
		mov    %edi,%eax
		mov    0x000014(%edx),%esi
		cmp    %ebx,%eax
		jle    _069dc5_jump
		mov    %ebx,%eax

	_069dc5_jump:
		add    (%esp),%eax
		add    %ecx,%esi
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%esi,%ebp,1)
		xor    %ebx,%ebx
		mov    0x00001c(%edx),%bx
		cmp    %ebx,%ecx
		jl     _069da8_jump
		jmp    _069de6_jump

	_069ddc_jump:
		mov    0x000014(%edx),%eax
		add    %ebx,%eax
		inc    %ebx
		movb   $0x000000,(%eax,%ebp,1)

	_069de6_jump:
		mov    (%edx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%cx
		test   %eax,%eax
		jge    _069df7_jump
		neg    %eax

	_069df7_jump:
		add    %ecx,%eax
		cmp    %eax,%ebx
		jge    _069d73_jump
		jmp    _069ddc_jump

	_069e03_jump:
		xor    %ecx,%ecx
		mov    $0x00013f,%edi
		mov    %ecx,0x000008(%esp)
		mov    0x00000c(%edx),%ecx
		jmp    _069e69_jump

	_069e13_jump:
		mov    (%esp),%esi
		mov    0x000008(%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%esi
		inc    %eax
		mov    %esi,(%esp)
		mov    %eax,0x000008(%esp)
		cmp    $0x0000c8,%eax
		jge    _069f5e_jump
		mov    0x00000c(%edx),%ecx
		jmp    _069e69_jump

	_069e3e_jump:
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    0x000024(%edx),%eax
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		add    (%ebx),%eax
		mov    %eax,%ebx
		mov    %edi,%eax
		mov    0x000014(%edx),%esi
		cmp    %ebx,%eax
		jle    _069e5e_jump
		mov    %ebx,%eax

	_069e5e_jump:
		add    (%esp),%eax
		add    %ecx,%esi
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%esi,%ebp,1)

	_069e69_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		cmp    %eax,%ecx
		jl     _069e3e_jump
		cmp    0x000014(%edx),%eax
		jge    _069e13_jump
		mov    %eax,%ebx
		mov    (%edx),%eax
		sar    $0x000010,%eax
		neg    %ebx
		test   %eax,%eax
		jge    _069e87_jump
		neg    %eax

	_069e87_jump:
		sub    %eax,%ebx
		mov    0x00000c(%edx),%esi
		mov    %ebx,%eax
		cmp    %esi,%ebx

	_069e90_jump:
		jge    _069e13_jump
		mov    0x000014(%edx),%ebx
		add    %eax,%ebx
		mov    (%esp),%ecx
		lea    (%ebx,%ebp,1),%esi
		mov    (%ecx,%ebx,1),%bl
		mov    %bl,(%esi)
		inc    %eax
		cmp    0x00000c(%edx),%eax
		jmp    _069e90_jump

	_069ea8_jump:
		xor    %ebx,%ebx
		mov    $0x000140,%edi
		mov    %ebx,0x000004(%esp)
		mov    0x00000c(%edx),%ecx
		jmp    _069efe_jump

	_069eb8_jump:
		mov    (%esp),%eax
		mov    0x000004(%esp),%ebx
		add    $0x000140,%ebp
		add    %edi,%eax
		inc    %ebx
		mov    %eax,(%esp)
		mov    %ebx,0x000004(%esp)
		cmp    $0x0000c8,%ebx
		jge    _069f5e_jump
		mov    0x00000c(%edx),%ecx
		jmp    _069efe_jump

	_069ee0_jump:
		add    %ecx,%ebx
		mov    0x000024(%edx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		mov    0x000014(%edx),%esi
		add    (%ebx),%eax
		mov    (%esp),%ebx
		add    %ecx,%esi
		mov    (%ebx,%eax,1),%bl
		inc    %ecx
		mov    %bl,(%esi,%ebp,1)

	_069efe_jump:
		xor    %ebx,%ebx
		mov    0x00001c(%edx),%bx
		cmp    %ebx,%ecx
		jl     _069ee0_jump
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069eb8_jump
		jmp    _069f1d_jump

	_069f13_jump:
		mov    0x000014(%edx),%eax
		add    %ebx,%eax
		inc    %ebx
		movb   $0x000000,(%eax,%ebp,1)

	_069f1d_jump:
		mov    (%edx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%cx
		test   %eax,%eax
		jge    _069f2e_jump
		neg    %eax

	_069f2e_jump:
		add    %ecx,%eax
		cmp    %eax,%ebx
		jge    _069eb8_jump
		jmp    _069f13_jump

	_069f36_jump:
		mov    0x000028(%edx),%eax
		mov    %eax,(%esp)
		mov    0x000018(%edx),%al
		mov    0x00002c(%edx),%ebp
		cmp    $0x000001,%al
		jb     _069f56_jump
		jbe    _069d49_jump
		cmp    $0x000002,%al
		je     _069ea8_jump
		jmp    _069f5e_jump

	_069f56_jump:
		test   %al,%al
		je     _069c61_jump

	_069f5e_jump:
		mov    (%edx),%eax
		mov    0x000014(%edx),%esi
		sar    $0x000010,%eax
		sub    %eax,%esi
		mov    (%edx),%eax
		sar    $0x000010,%eax
		mov    %esi,0x000014(%edx)
		test   %eax,%eax
		jle    _069f8f_jump
		cmp    0x000008(%edx),%esi
		jge    _069fa0_jump
		mov    0x000018(%edx),%bl
		movb   $0x000000,0x000019(%edx)
		inc    %bl
		mov    %bl,0x000018(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069f8f_jump:
		cmp    0x000004(%edx),%esi
		jle    _069fa0_jump
		mov    0x000018(%edx),%ah
		movb   $0x000000,0x000019(%edx)
		dec    %ah
		mov    %ah,0x000018(%edx)

	_069fa0_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069fb0_func:
		xor    %ah,%ah
		mov    %ah,_0c2161_data
		ret    



_069fbc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    _0c24fe_data,%al
		mov    %al,0x00025a(%edx)
		mov    _0c24ac_data,%ax
		mov    %ax,0x000034(%edx)
		mov    _0c24ae_data,%ax
		mov    %ax,0x000036(%edx)
		mov    _0c1b74_data,%ax
		mov    %ax,0x000038(%edx)
		mov    _0c1b78_data,%ax
		mov    %ax,0x00003a(%edx)
		mov    _0c1b82_data,%ax
		mov    %ax,0x00003c(%edx)
		mov    _0c1b84_data,%ax
		mov    %ax,0x00003e(%edx)
		mov    _0c1bcd_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000040(%edx)
		mov    _0c3315_data,%al
		add    %al,%al
		shr    $0x000006,%al
		mov    %al,0x000254(%edx)
		mov    _0c3314_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,0x000255(%edx)
		mov    _0c3314_data,%al
		and    $0x000001,%al
		mov    %al,0x000256(%edx)
		test   %ebx,%ebx
		je     _06a080_jump
		mov    0x000034(%ebx),%ax
		mov    %ax,0x000046(%edx)
		mov    0x000028(%ebx),%ax
		mov    %ax,0x000042(%edx)
		mov    0x00002c(%ebx),%ax
		mov    %ax,0x000044(%edx)
		mov    0x00007b(%ebx),%al
		mov    %al,0x000248(%edx)
		mov    0x000081(%ebx),%al
		and    $0x000001,%al
		mov    %al,0x000249(%edx)
		jmp    _06a086_jump

	_06a080_jump:
		movw   $0x00ffff,0x000046(%edx)

	_06a086_jump:
		mov    _0c1b36_data,%ecx
		mov    _0c1b30_data,%esi
		sar    $0x000010,%ecx
		lea    0x000048(%edx),%edi
		add    %ecx,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %al,%al
		jmp    _06a0c1_jump

	_06a0ae_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    _0c1bae_data(%ebx),%ah
		mov    %ah,0x00024a(%edx,%ebx,1)
		inc    %al

	_06a0c1_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000005,%ebx
		jb     _06a0ae_jump
		mov    _0c1bb6_data,%al
		mov    %al,0x00024f(%edx)
		mov    _0c1bb7_data,%al
		mov    %al,0x000250(%edx)
		mov    _0c1bb9_data,%al
		mov    %al,0x000251(%edx)
		mov    _0c1bb8_data,%al
		mov    %al,0x000252(%edx)
		xor    %al,%al
		jmp    _06a10c_jump

	_06a0fa_jump:
		add    %ebx,%ebx
		lea    (%edx,%ebx,1),%ecx
		mov    _0c51e8_data(%ebx),%bx
		inc    %al
		mov    %bx,0x000020(%ecx)

	_06a10c_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000008,%ebx
		jl     _06a0fa_jump
		mov    _0c45bc_data,%ax
		mov    _0c1b34_data,%ebx
		mov    %ax,0x000030(%edx)
		mov    _0c45be_data,%ax
		mov    _0c1b38_data,%cx
		mov    %ax,0x000032(%edx)
		mov    _0c1f00_data,%al
		mov    %ecx,(%esp)
		mov    %al,0x000253(%edx)
		xor    %eax,%eax
		test   %cx,%cx
		jle    _06a1a4_jump
		jmp    _06a164_jump

	_06a14d_jump:
		movswl %si,%ecx
		not    %edi
		and    %edi,(%edx,%ecx,4)

	_06a155_jump:
		mov    (%esp),%esi
		inc    %eax
		add    $0x000084,%ebx
		cmp    %si,%ax
		jge    _06a1a4_jump

	_06a164_jump:
		xor    %ecx,%ecx
		mov    0x000060(%ebx),%cx
		cmp    $0x00008d,%ecx
		je     _06a17a_jump
		cmp    $0x0000a4,%ecx
		jne    _06a155_jump

	_06a17a_jump:
		mov    %eax,%ecx
		xor    %ah,%ch
		and    $0x00001f,%cl
		mov    $0x000001,%edi
		movswl %cx,%ecx
		movswl %ax,%esi
		shl    %cl,%edi
		mov    0x000081(%ebx),%cl
		sar    $0x000005,%esi
		test   $0x000004,%cl
		je     _06a14d_jump
		movswl %si,%ecx
		or     %edi,(%edx,%ecx,4)
		jmp    _06a155_jump

	_06a1a4_jump:
		mov    _0c2502_data,%al
		movb   $0x000001,0x000259(%edx)
		mov    %al,0x000258(%edx)
		mov    _0c24aa_data,%al
		mov    %al,0x000257(%edx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_06a1cc_switch:
		.long   _06a439_case
		.long   _06a45b_case
		.long   _06a439_case
		.long   _06a45b_case
		.long   _06a430_case
		.long   _06a45b_case
		.long   _06a45b_case
		.long   _06a439_case
		.long   _06a45b_case
		.long   _06a439_case
		.long   _06a45b_case
		.long   _06a430_case




_06a1fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		cmpb   $0x000000,0x000259(%eax)
		je     _06a5ac_jump
		mov    _0c3315_data,%dl
		test   $0x000002,%dl
		je     _06a238_jump
		mov    $0x000021,%ecx
		mov    $_0c1b4c_data,%edi
		mov    %dl,%dh
		mov    $_0c1bd0_data,%esi
		and    $0x0000fd,%dh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %dh,_0c3315_data

	_06a238_jump:
		mov    0x00025a(%ebx),%al
		mov    %al,_0c24fe_data
		mov    0x000034(%ebx),%ax
		mov    %ax,_0c24ac_data
		mov    0x000036(%ebx),%ax
		mov    %ax,_0c24ae_data
		mov    0x000036(%ebx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0c1b74_data
		mov    0x000038(%ebx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0c1b78_data
		mov    0x00003c(%ebx),%ax
		mov    _0c1bcd_data,%cl
		mov    %ax,_0c1b82_data
		mov    0x00003e(%ebx),%ax
		and    $0x0000f7,%cl
		mov    %ax,_0c1b84_data
		mov    0x000040(%ebx),%al
		mov    %cl,_0c1bcd_data
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000003,%al
		or     %al,%ch
		mov    0x000255(%ebx),%al
		and    $0x000001,%al
		mov    _0c3314_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0c3314_data
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    _0c2520_data,%eax
		mov    %ch,_0c1bcd_data
		sar    $0x000010,%eax
		mov    %dl,_0c3314_data
		cmp    $0x000006,%eax
		jne    _06a321_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _06a321_jump
		mov    %dl,%dh
		mov    0x000256(%ebx),%al
		and    $0x0000fe,%dh
		and    $0x000001,%al
		mov    %dh,%cl
		mov    %dh,_0c3314_data
		or     %al,%cl
		mov    %cl,_0c3314_data
		mov    0x000254(%ebx),%al
		mov    _0c3315_data,%ch
		and    $0x000003,%al
		and    $0x00009f,%ch
		shl    $0x000005,%al
		mov    %ch,%ah
		mov    %ch,_0c3315_data
		or     %al,%ah
		mov    %ah,_0c3315_data

	_06a321_jump:
		mov    0x000044(%ebx),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _06a375_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000040(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%eax)
		mov    0x000042(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%eax)
		mov    0x000248(%ebx),%dl
		mov    %dl,0x00007b(%eax)
		mov    0x000249(%ebx),%dl
		and    $0x000001,%dl
		mov    0x000081(%eax),%dh
		and    $0x0000fe,%dh
		mov    %dh,%cl
		or     %dl,%cl
		mov    %cl,0x000081(%eax)

	_06a375_jump:
		cmp    $_0c1f08_data,%ebx
		jne    _06a3dd_jump
		mov    _0c1b38_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _06a3dd_jump
		jmp    _06a3a8_jump

	_06a38d_jump:
		mov    _0c1b34_data,%ecx
		movl   $0x000000,0x000020(%ecx,%edx,1)

	_06a39b_jump:
		mov    _0c1b38_data,%cx
		inc    %eax
		cmp    %cx,%ax
		jge    _06a3dd_jump

	_06a3a8_jump:
		movswl %ax,%ecx
		mov    _0c1b30_data,%esi
		lea    0x000000(,%ecx,2),%edx
		add    %edx,%esi
		mov    0x000048(%edx,%ebx,1),%dx
		mov    %dx,(%esi)
		imul   $0x000084,%ecx,%edx
		cmp    (%esi),%ax
		je     _06a38d_jump
		mov    _0c1b34_data,%ecx
		movl   $0x000001,0x000020(%ecx,%edx,1)
		jmp    _06a39b_jump

	_06a3dd_jump:
		xor    %eax,%eax
		jmp    _06a3f2_jump

	_06a3e1_jump:
		movswl %ax,%edx
		mov    0x00024a(%edx,%ebx,1),%cl
		inc    %eax
		mov    %cl,_0c1bae_data(%edx)

	_06a3f2_jump:
		movswl %ax,%edx
		cmp    $0x000005,%edx
		jb     _06a3e1_jump
		mov    0x00024f(%ebx),%al
		mov    %al,_0c1bb6_data
		mov    0x000250(%ebx),%al
		mov    %al,_0c1bb7_data
		mov    0x000251(%ebx),%al
		mov    %al,_0c1bb9_data
		mov    0x000252(%ebx),%al
		mov    %al,_0c1bb8_data
		cmp    $_0c1f08_data,%ebx
		je     _06a442_jump
		jmp    _06a45b_case

	_06a430_case:
		movb   $0x000003,0x000253(%ebx)
		jmp    _06a45b_case

	_06a439_case:
		movb   $0x000001,0x000253(%ebx)
		jmp    _06a45b_case

	_06a442_jump:
		mov    0x000253(%ebx),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _06a45b_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06a1cc_switch(,%eax,4)

	_06a45b_case:
		mov    _0c1ef0_data,%edx
		mov    0x000253(%ebx),%al
		mov    %al,0x00006e(%edx)
		mov    %al,_0c1f00_data
		mov    0x000258(%ebx),%al
		mov    %al,_0c2502_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,_0c25b4_data
		mov    %ax,_0c2598_data
		jmp    _06a49a_jump

	_06a48c_jump:
		mov    0x000020(%ebx,%eax,2),%cx
		inc    %edx
		mov    %cx,_0c51e8_data(,%eax,2)

	_06a49a_jump:
		movswl %dx,%eax
		cmp    $0x000008,%eax
		jl     _06a48c_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%edx
		mov    0x000030(%ebx),%ax
		xor    %ecx,%ecx
		xor    %esi,%esi
		mov    %ax,_0c45bc_data
		mov    %cx,_0c1b8c_data
		mov    %cx,_0c1b8e_data
		mov    %di,_0c1ba2_data
		mov    %edx,_0c1b70_data
		mov    _0c1bcd_data,%ch
		mov    _0c1b34_data,%edx
		mov    0x000032(%ebx),%ax
		mov    _0c1b38_data,%di
		mov    %ax,_0c45be_data
		or     $0x000004,%ch
		xor    %eax,%eax
		mov    %ch,_0c1bcd_data
		mov    %ax,_0c24f0_data
		mov    %ax,_0c24f2_data
		test   %di,%di
		jle    _06a58b_jump
		jmp    _06a554_jump

	_06a514_jump:
		cmp    $0x00008d,%eax
		je     _06a522_jump
		cmp    $0x0000a4,%eax
		jne    _06a548_jump

	_06a522_jump:
		mov    %esi,%ecx
		xor    %ch,%ch
		mov    $0x000001,%ebp
		and    $0x00001f,%cl
		movswl %si,%eax
		movswl %cx,%ecx
		sar    $0x000005,%eax
		shl    %cl,%ebp
		cwtl   
		mov    %ebp,%ecx
		test   %ecx,(%ebx,%eax,4)
		je     _06a582_jump
		orb    $0x000004,0x000081(%edx)

	_06a548_jump:
		inc    %esi
		add    $0x000084,%edx
		cmp    %di,%si
		jge    _06a58b_jump

	_06a554_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000003,%eax
		je     _06a582_jump
		cmp    $0x00000d,%eax
		je     _06a582_jump
		cmp    $0x00000f,%eax
		je     _06a582_jump
		cmp    $0x00003b,%eax
		je     _06a582_jump
		cmp    $0x000024,%eax
		je     _06a582_jump
		cmp    $0x000042,%eax
		je     _06a582_jump
		cmp    $0x00003e,%eax
		je     _06a582_jump
		cmp    $0x000063,%eax
		jne    _06a514_jump

	_06a582_jump:
		andb   $0x0000fb,0x000081(%edx)
		jmp    _06a548_jump

	_06a58b_jump:
		xor    %al,%al
		mov    %al,_0c2594_data
		mov    0x000257(%ebx),%al
		inc    %al
		mov    %al,_0c24aa_data
		xor    %eax,%eax
		mov    0x000257(%ebx),%al
		call   _0391dc_func

	_06a5ac_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a5b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c2522_data,%si
		mov    _0c2520_data,%di
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		xor    %edx,%edx
		cmp    %ax,%si
		jle    _06a5ef_jump

	_06a5d9_jump:
		movswl %ax,%ebx
		mov    _09472c_data(%ebx),%bl
		xor    %bh,%bh
		shl    $0x000005,%ebx
		inc    %eax
		add    %ebx,%edx
		cmp    %si,%ax
		jl     _06a5d9_jump

	_06a5ef_jump:
		mov    $0x000001,%eax
		cmp    %ax,%di
		jle    _06a602_jump

	_06a5f9_jump:
		inc    %eax
		add    $0x000020,%edx
		cmp    %di,%ax
		jl     _06a5f9_jump

	_06a602_jump:
		mov    $0x000003,%cl
		mov    (%esp),%eax
		mov    %si,_0c2522_data
		mov    %di,_0c2520_data
		test   %ax,%ax
		js     _06a61f_jump
		sar    %cl,%ax
		jmp    _06a628_jump

	_06a61f_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a628_jump:
		mov    _0c2522_data,%si
		add    %edx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a65c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _06a5b4_func
		mov    %dl,%cl
		movswl %ax,%ebx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _06a67e_jump
		sar    %cl,%ax
		jmp    _06a687_jump

	_06a67e_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a687_jump:
		or     %al,_0c4770_data(%ebx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a694_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _06a5b4_func
		mov    %dl,%cl
		movswl %ax,%ebx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _06a6b6_jump
		sar    %cl,%ax
		jmp    _06a6bf_jump

	_06a6b6_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a6bf_jump:
		and    _0c4770_data(%ebx),%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a7e0_func:
		xor    %al,%al
		ret    



_06a7f0_func:
		push   %edx
		xor    %edx,%edx
		mov    %dx,_0c25d2_data
		mov    %dx,_0c25d4_data
		call   _0189c4_func
		mov    %eax,%edx
		mov    %ax,_0c45c8_data
		sub    $0x0000d8,%edx
		sub    $0x000088,%eax
		mov    %dx,_0c25d6_data
		mov    %ax,_0c25d8_data
		call   _018a40_func
		pop    %edx
		ret    



_06a830_func:
		push   %ebx
		push   %ecx
		cmpb   $0x000000,_0c25e1_data
		jne    _06a8f8_jump
		mov    _0c25d2_data,%ecx
		mov    _0c24ee_data,%ebx
		mov    _0c25d0_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    _0c24aa_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06a876_jump
		cmp    %ecx,%eax
		jg     _06a876_jump
		mov    $0x000001,%eax
		jmp    _06a878_jump

	_06a876_jump:
		xor    %eax,%eax

	_06a878_jump:
		test   %eax,%eax
		je     _06a8bd_jump
		mov    _0c25d6_data,%ecx
		mov    _0c24f0_data,%ebx
		mov    _0c25d4_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06a8b3_jump
		cmp    %ecx,%eax
		jg     _06a8b3_jump
		mov    $0x000001,%eax
		jmp    _06a8b5_jump

	_06a8b3_jump:
		xor    %eax,%eax

	_06a8b5_jump:
		test   %eax,%eax
		je     _06a8bd_jump
		mov    $0x000001,%al
		jmp    _06a8bf_jump

	_06a8bd_jump:
		xor    %al,%al

	_06a8bf_jump:
		mov    %al,_0c25e1_data
		test   %al,%al
		je     _06a8f8_jump
		mov    _0c25d2_data,%ax
		mov    %ax,_0c25ca_data
		mov    _0c25d4_data,%ax
		mov    %ax,_0c25cc_data
		mov    _0c25d6_data,%ax
		mov    %ax,_0c25ce_data
		mov    _0c25d8_data,%ax
		mov    %ax,_0c25d0_data

	_06a8f8_jump:
		mov    _0c25e1_data,%al
		pop    %ecx
		pop    %ebx
		ret    



_06a900_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%bl
		call   _0189c4_func
		cwtl   
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01df3c_func
		movl   $0x000000,0x000024(%edx)
		xor    %bl,%bl
		movw   $0x000000,0x000040(%edx)
		mov    %bl,_0c13df_data
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		xor    %bh,%bh
		mov    %ah,0x000081(%edx)
		xor    %eax,%eax
		mov    %bl,_0c13e2_data
		mov    0x000060(%edx),%ax
		mov    %bx,_0db5e4_data
		cmp    $0x00004a,%eax
		jne    _06a970_jump
		mov    _0db5f7_data,%al
		mov    %al,0x000076(%edx)
		mov    %edx,%eax
		call   _06a7f0_func

	_06a970_jump:
		xor    %cl,%cl
		xor    %esi,%esi
		mov    %cl,_0db5f6_data
		xor    %ch,%ch
		mov    %si,_0db5fa_data
		mov    %cx,_0db5e8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a990_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		mov    0x000054(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _06aa99_jump
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _06a9d3_jump
		jmp    _06aa99_jump

	_06a9c3_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _06aa99_jump

	_06a9d3_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00005c,%edx
		jne    _06a9c3_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _06a9c3_jump
		movw   $0x000000,0x000042(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    (%esp),%edx
		sar    %eax
		test   %dx,%dx
		je     _06aa10_jump
		neg    %eax

	_06aa10_jump:
		cwtl   
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    (%esp),%al
		mov    $0x000001,%ebx
		add    $0x000002,%al
		mov    %ebx,%edx
		mov    %al,0x00006c(%ecx)
		mov    %ecx,%eax
		movb   $0x000000,0x00006d(%ecx)
		call   _056614_func
		mov    %ecx,%eax
		call   _01df3c_func
		mov    0x000081(%ecx),%dl
		or     $0x000004,%dl
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movl   $0x000001,0x000024(%ecx)
		and    $0x0000bf,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f7d4_func
		movb   $0x000000,0x000071(%ecx)
		mov    0x000056(%esi),%ax
		dec    %eax
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		call   _01df3c_func
		mov    %ecx,%eax
		movw   $0x00000a,0x000050(%ecx)
		call   _0706e8_func

	_06aa99_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06aaa0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movw   $0x000000,0x000040(%eax)
		mov    $0x000001,%ebx
		movw   $0x000000,0x000042(%eax)
		call   _01df3c_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		mov    0x000032(%ecx),%edx
		mov    $0x0000f6,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    %ecx,%eax
		call   _0706e8_func
		movw   $0x00000a,0x000050(%ecx)
		movw   $0x000003,0x000056(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06aaec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x000060(%eax),%ax
		cmp    $0x00005d,%ax
		jb     _06ace6_jump
		jbe    _06ac5b_jump
		cmp    $0x0000b6,%ax
		jne    _06acf0_jump
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _06acf0_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		mov    _0db5ee_data,%bx
		add    %eax,%edx
		sub    %ebx,%edx
		movswl %dx,%eax
		cmp    $0x000014,%eax
		jge    _06ab63_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		mov    0x000081(%esi),%ah
		movw   $0x000003,0x000040(%esi)
		or     $0x000008,%ah
		mov    %ah,0x000081(%esi)
		jmp    _06acf0_jump

	_06ab63_jump:
		cmp    $0x0000c8,%eax
		jge    _06acf0_jump
		sar    $0x000003,%eax
		xor    %ebx,%ebx
		sub    $0x000002,%eax
		mov    %al,%bl
		cmp    $0x000002,%ebx
		jge    _06ab7f_jump
		mov    $0x000002,%al

	_06ab7f_jump:
		movswl %dx,%edx
		cmp    $0x000032,%edx
		setl   %ah
		xor    %edx,%edx
		mov    %ah,%dl
		inc    %edx
		and    $0x0000ff,%eax
		xor    %ebx,%ebx
		mov    _0c24c8_data(%eax),%bl
		sar    %eax
		cmp    %eax,%ebx
		jge    _06abb5_jump
		mov    0x00003a(%esi),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    %dl,%al
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06abb5_jump:
		mov    0x00003a(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06abc4_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06acf0_jump
		decw   0x000050(%esi)
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _06ac3e_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06abe5_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _06a990_func

	_06abf1_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _06a990_func
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ac16_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _06a990_func
		mov    0x000081(%esi),%bl
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ac3e_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%al
		jb     _06ac51_jump
		jbe    _06abf1_jump
		cmp    $0x000003,%al
		je     _06ac16_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ac51_jump:
		cmp    $0x000001,%al
		je     _06abe5_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ac5b_jump:
		push   $0x00008c
		mov    _0db5ee_data,%eax
		push   $0x000014
		sar    $0x000010,%eax
		push   %eax
		mov    _0db5ec_data,%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    $0x000018,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%di
		mov    0x000068(%esi),%al
		add    %edi,%eax
		mov    $0x000010,%ecx
		sub    $0x000008,%eax
		mov    %ecx,%ebx
		cwtl   
		call   _0291bc_func
		test   %ax,%ax
		je     _06acf0_jump
		xor    %eax,%eax
		mov    _0db5f6_data,%al
		test   %eax,%eax
		jne    _06acb7_jump
		movb   $0x000001,_0db5f6_data

	_06acb7_jump:
		andb   $0x0000fb,0x000081(%esi)
		addl   $0x00001e,0x00002c(%esi)
		mov    0x000032(%esi),%edx
		mov    $0x0000f3,%eax
		sar    $0x000010,%edx
		movl   $0x000000,0x000024(%esi)
		call   _068654_func
		mov    %esi,%eax
		call   _0706e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ace6_jump:
		cmp    $0x00005c,%ax
		je     _06abc4_jump

	_06acf0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06acf8_switch:
		.long   _06adef_case
		.long   _06adfd_case
		.long   _06ae0b_case
		.long   _06ae19_case




_06ad08_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    %ebx,%edi

	_06ad12_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000066,%eax
		jne    _06ad2b_jump
		cmpl   $0x000000,0x000024(%ecx)
		je     _06ad2b_jump
		add    $0x000084,%ecx
		jmp    _06ad12_jump

	_06ad2b_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000066,%eax
		jne    _06adea_jump
		movswl %di,%ebx
		mov    $0x000002,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		cmp    $0x000004,%ebx
		jge    _06ae2a_jump
		mov    %dl,%al
		mov    0x000081(%ecx),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%ah
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		cmp    %ebp,%ebx
		jge    _06ad79_jump
		mov    $0xffffffff,%eax
		jmp    _06ad7e_jump

	_06ad79_jump:
		mov    $0x000001,%eax

	_06ad7e_jump:
		mov    0x000081(%ecx),%dl
		mov    %ax,0x000042(%ecx)
		test   $0x000008,%dl
		je     _06ad94_jump
		mov    $0x000001,%eax
		jmp    _06ad99_jump

	_06ad94_jump:
		mov    $0xffffffff,%eax

	_06ad99_jump:
		mov    %ax,0x000040(%ecx)

	_06ad9d_jump:
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%eax
		movb   $0x000002,0x00006d(%ecx)
		mov    %ebx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		movb   $0x000005,0x00006c(%ecx)
		call   _056614_func
		mov    %ecx,%eax
		call   _01df3c_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f7d4_func
		mov    %ecx,%eax
		call   _01df3c_func

	_06adea_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_06adef_case:
		movw   $0x000000,0x000042(%ecx)
		movw   $0x00fffe,0x000040(%ecx)
		jmp    _06ad9d_jump

	_06adfd_case:
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _06ad9d_jump

	_06ae0b_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fffe,0x000042(%ecx)
		jmp    _06ad9d_jump

	_06ae19_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000002,0x000042(%ecx)
		jmp    _06ad9d_jump

	_06ae2a_jump:
		mov    %dl,%al
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		sub    $0x000004,%edi
		mov    %dl,0x000081(%ecx)
		cmp    $0x000003,%di
		ja     _06ad9d_jump
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *%cs:_06acf8_switch(,%eax,4)



_06ae60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _06ae8f_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ae7f_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _06af62_jump

	_06ae8f_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000066,%edx
		jne    _06ae7f_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _06ae7f_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000f4,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _0706e8_func
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06ad08_func
		mov    $0x000001,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06ad08_func
		mov    $0x000002,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06ad08_func
		mov    $0x000003,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06ad08_func
		mov    $0x000004,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06ad08_func
		mov    $0x000005,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06ad08_func
		mov    $0x000006,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06ad08_func
		mov    $0x000007,%ebx
		lea    0x000084(%ecx),%eax
		mov    %esi,%edx
		call   _06ad08_func
		mov    0x000081(%esi),%ah
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%esi)

	_06af62_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06af68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _06af97_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06af87_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _06b098_jump

	_06af97_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00005d,%edx
		jne    _06af87_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _06af87_jump
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _06afd9_jump
		movw   $0x00ffff,0x000040(%ecx)
		movw   $0x00fffc,0x000042(%ecx)
		movb   $0x00000a,0x000072(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000002,0x000050(%ecx)
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _06b023_jump

	_06afd9_jump:
		mov    _0c1ef0_data,%edx
		mov    0x00003e(%edx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _06aff0_jump
		mov    $0xfffffffc,%edx
		jmp    _06aff5_jump

	_06aff0_jump:
		mov    $0x000004,%edx

	_06aff5_jump:
		mov    %dx,0x000040(%ecx)
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _06b00c_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _06b013_jump

	_06b00c_jump:
		orb    $0x000008,0x000081(%ecx)

	_06b013_jump:
		movb   $0x0000ff,0x000072(%ecx)
		movw   $0x000001,0x000050(%ecx)
		movw   $0x00ffff,0x000042(%ecx)

	_06b023_jump:
		mov    0x000028(%esi),%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%edx
		movb   $0x000002,0x00006d(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000001,%ebx
		mov    %ax,0x00003c(%ecx)
		mov    %ebx,%edx
		mov    %ecx,%eax
		movb   $0x000003,0x00006c(%ecx)
		call   _056614_func
		mov    %ecx,%eax
		call   _01df3c_func
		mov    0x000081(%ecx),%bl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f7d4_func
		movb   $0x000000,0x000071(%ecx)
		movw   $0x0000c8,0x000056(%ecx)
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%esi)
		call   _01df3c_func

	_06b098_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b0a0_func:
		push   %ebx
		mov    0x000060(%eax),%dx
		cmp    $0x00005b,%dx
		jb     _06b0f0_jump
		jbe    _06b0c3_jump
		cmp    $0x00005d,%dx
		jb     _06b0f6_jump
		jbe    _06b0ca_jump
		cmp    $0x0000b6,%dx
		jmp    _06b0f4_jump

	_06b0bc_jump:
		call   _06af68_func
		pop    %ebx
		ret    

	_06b0c3_jump:
		call   _06ae60_func
		pop    %ebx
		ret    

	_06b0ca_jump:
		mov    _0c1ef0_data,%edx
		mov    0x000040(%edx),%dx
		movw   $0x00ffff,0x000042(%eax)
		movb   $0x0000ff,0x000072(%eax)
		mov    0x000040(%eax),%bx
		movw   $0x000001,0x000050(%eax)
		add    %edx,%ebx
		mov    %bx,0x000040(%eax)
		pop    %ebx
		ret    

	_06b0f0_jump:
		cmp    $0x00005a,%dx

	_06b0f4_jump:
		je     _06b0bc_jump

	_06b0f6_jump:
		pop    %ebx
		ret    



_06b0f8_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00005c,%ax
		jb     _06b150_jump
		jbe    _06b113_jump
		cmp    $0x00005d,%ax
		jbe    _06b11c_jump
		cmp    $0x0000b6,%ax
		jmp    _06b154_jump

	_06b113_jump:
		mov    %edx,%eax
		call   _06aaa0_func
		pop    %edx
		ret    

	_06b11c_jump:
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06b128_jump
		neg    %eax

	_06b128_jump:
		neg    %eax
		mov    %ax,0x000042(%edx)
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jle    _06b13d_jump
		decw   0x000042(%edx)

	_06b13d_jump:
		mov    $0x00000a,%al
		mov    0x000071(%edx),%ah
		sub    %ah,%al
		mov    %al,0x000071(%edx)
		mov    %edx,%eax
		call   _01df3c_func
		pop    %edx
		ret    

	_06b150_jump:
		cmp    $0x00005a,%ax

	_06b154_jump:
		je     _06b11c_jump
		pop    %edx
		ret    



_06b158_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%di
		xor    %eax,%eax
		test   %di,%di
		jg     _06b189_jump
		jmp    _06b2b4_jump

	_06b179_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %di,%ax
		jge    _06b2b4_jump

	_06b189_jump:
		xor    %edx,%edx
		mov    _0db5fc_data,%dl
		imul   $0x00000a,%edx,%edx
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    _09760c_data(%edx),%bl
		mov    0x000060(%ecx),%si
		add    $0x00005a,%ebx
		cmp    %ebx,%esi
		jne    _06b179_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _06b179_jump
		mov    0x000081(%ebp),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%bl
		or     %al,%bl
		mov    %bl,0x000081(%ecx)
		mov    _097610_data(%edx),%ax
		mov    0x000081(%ecx),%bh
		mov    %ax,0x000042(%ecx)
		test   $0x000008,%bh
		je     _06b1fa_jump
		mov    _09760e_data(%edx),%ax
		mov    _0db5f0_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%bl
		add    $0x000017,%edx
		jmp    _06b214_jump

	_06b1fa_jump:
		mov    _09760e_data(%edx),%ax
		xor    %ebx,%ebx
		mov    _0db5f0_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%bl
		add    $0x000009,%edx

	_06b214_jump:
		mov    %ax,0x000040(%ecx)
		sub    %ebx,%edx
		mov    %edx,0x000028(%ecx)
		mov    _0db5f2_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000069(%ecx),%dl
		sub    %edx,%ebx
		add    $0x000019,%ebx
		mov    %ebx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    _0db5fc_data,%bl
		lea    0x000000(,%ebx,4),%edx
		add    %ebx,%edx
		movb   $0x000002,0x00006d(%ecx)
		mov    $0x000001,%ebx
		mov    _09760c_data(,%edx,2),%al
		mov    %ebx,%edx
		mov    %al,0x00006c(%ecx)
		mov    %ecx,%eax
		call   _056614_func
		mov    %ecx,%eax
		call   _01df3c_func
		mov    0x000081(%ecx),%al
		or     $0x000004,%al
		mov    %al,%ah
		and    $0x0000bf,%ah
		xor    %ebx,%ebx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f7d4_func
		mov    _0db5fc_data,%bl
		lea    0x000000(,%ebx,4),%edx
		movb   $0x000000,0x000071(%ecx)
		add    %ebx,%edx
		movb   $0x00000a,0x000072(%ecx)
		mov    _097612_data(,%edx,2),%ax
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		call   _01df3c_func

	_06b2b4_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b2bc_func:
		push   %ebx
		push   %edx
		mov    _0db5e6_data,%bx
		mov    _0db5e2_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		movswl %bx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _097652_data(%eax),%dl
		mov    %dl,_0db5e0_data
		mov    _097653_data(%eax),%dl
		mov    _097654_data(%eax),%ax
		mov    %dl,_0db5e1_data
		mov    %ax,_0db5e2_data
		test   %ax,%ax
		je     _06b319_jump
		xor    %ebx,%ebx
		jmp    _06b31a_jump

	_06b319_jump:
		inc    %ebx

	_06b31a_jump:
		mov    _0db5e0_data,%al
		mov    %bx,_0db5e6_data
		pop    %edx
		pop    %ebx
		ret    



_06b32c_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		cmp    $0x00004a,%edx
		jne    _06b36c_jump
		xor    %edx,%edx
		mov    _0db5fc_data,%dl
		cmp    $0x000006,%edx
		jle    _06b34f_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0db5fc_data

	_06b34f_jump:
		call   _06b158_func
		mov    _0db5e1_data,%al
		inc    %al
		mov    %al,_0c13e1_data
		call   _06b2bc_func
		mov    %al,_0db5fc_data
		pop    %edx
		ret    

	_06b36c_jump:
		xor    %dl,%dl
		mov    %dl,_0db5fc_data
		call   _06b158_func
		pop    %edx
		ret    



_06b37c_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0c13df_data,%dl
		cmp    $0x000064,%edx
		je     _06b40e_jump
		decb   0x000076(%eax)
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		test   %edx,%edx
		jle    _06b406_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000002,%edx
		je     _06b3c9_jump
		mov    %dl,_0db5f8_data
		mov    0x00006c(%eax),%dl
		mov    $0x000003,%ebx
		mov    %dl,_0db5f9_data
		xor    %edx,%edx
		call   _01d6f8_func
		movb   $0x000002,_0db5f6_data
		jmp    _06b3d1_jump

	_06b3c9_jump:
		xor    %bh,%bh
		mov    %bh,_0db5f6_data

	_06b3d1_jump:
		incw   _0db5e4_data
		mov    _0db5e2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jle    _06b3f0_jump
		movw   $0x000003,_0db5e4_data
		jmp    _06b3f9_jump

	_06b3f0_jump:
		xor    %ebx,%ebx
		mov    %bx,_0db5e6_data

	_06b3f9_jump:
		call   _06b2bc_func
		mov    %al,_0db5fc_data
		pop    %edx
		pop    %ebx
		ret    

	_06b406_jump:
		xor    %dh,%dh
		mov    %dh,_0db5f6_data

	_06b40e_jump:
		pop    %edx
		pop    %ebx
		ret    



_06b414_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0c13df_data,%al
		cmp    $0x000002,%al
		jb     _06b4ae_jump
		jbe    _06b46f_jump
		cmp    $0x000003,%al
		je     _06b47e_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b430_jump:
		mov    0x000076(%ecx),%al
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000076(%ecx)
		xor    %eax,%eax
		mov    0x000076(%ecx),%dl
		mov    0x000077(%ecx),%al
		sub    %edx,%eax
		cmp    $0x000003,%eax
		jl     _06b450_jump
		movb   $0x000002,_0c13df_data

	_06b450_jump:
		xor    %dl,%dl
		mov    %ecx,%eax
		mov    %dl,_0c13dd_data
		mov    $0x000003,%edx
		call   _01d6e8_func
		movb   $0x000002,_0db5f6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b46f_jump:
		xor    %bl,%bl
		mov    %bl,_0db5f6_data
		decb   0x000076(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b47e_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x000076(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		dec    %dl
		xor    %ah,%ah
		mov    %dl,0x000076(%ecx)
		mov    $0x000002,%dh
		mov    %ah,_0c13dd_data
		mov    %dh,_0db5f6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b4ae_jump:
		cmp    $0x000001,%al
		je     _06b430_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b4bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		lea    0x000004(%esp),%eax
		mov    $_0db5f4_data,%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		mov    $_0db5f2_data,%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01da90_func
		testb  $0x000008,0x000081(%esi)
		je     _06b504_jump
		mov    (%esp),%esi
		mov    _0db5f2_data,%dx
		sub    $0x000020,%esi
		add    %esi,%edx
		mov    %dx,_0db5f2_data

	_06b504_jump:
		mov    _0db5f2_data,%bx
		mov    _0db5f4_data,%cx
		add    $0x00000c,%ebx
		add    $0x00000c,%ecx
		mov    %bx,_0db5f2_data
		mov    %cx,_0db5f4_data
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b530_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    %esp,%ebx
		push   %ebx
		lea    0x00000c(%esp),%ebx
		lea    0x000018(%esp),%ecx
		push   %ebx
		mov    $0x000002,%edx
		lea    0x00000c(%esp),%ebx
		call   _01da90_func
		lea    0x000010(%esp),%ebx
		lea    0x00001c(%esp),%ecx
		push   %ebx
		lea    0x000010(%esp),%ebx
		mov    $0x000005,%edx
		push   %ebx
		mov    %esi,%eax
		lea    0x000020(%esp),%ebx
		call   _01da90_func
		mov    0x000006(%esp),%ebx
		mov    0x00001c(%esp),%eax
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%ecx
		sub    $0x000014,%ebx
		sar    $0x000010,%ecx
		sar    %ebx
		add    $0x000014,%eax
		add    %ecx,%ebx
		mov    %ax,_0db5f0_data
		mov    %bx,_0db5ee_data
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06b5a4_switch:
		.long   _06b8f3_case
		.long   _06b8f3_case
		.long   _06b8f3_case
		.long   _06b8f3_case
		.long   _06b8f3_case
		.long   _06b8f3_case
		.long   _06b8f3_case
		.long   _06b904_case
		.long   _06b92a_case
		.long   _06b951_case

_06b5cc_switch:
		.long   _06b991_case
		.long   _06b844_case
		.long   _06b8d5_case
		.long   _06b8bb_case




_06b5dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		call   _06a830_func
		mov    %esi,%eax
		call   _06b4bc_func
		mov    %esi,%eax
		call   _06b530_func
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000001,%eax
		jge    _06b6ae_jump
		xor    %eax,%eax
		mov    _0c13df_data,%al
		cmp    $0x000064,%eax
		je     _06b6ae_jump
		xor    %ah,%ah
		mov    %ah,_0db5f6_data
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		mov    _0c24e2_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		cwtl   
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0c24ec_data,%eax
		mov    0x000002(%eax,%edx,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		je     _06b6ae_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movb   $0x0000ff,0x00006b(%esi)
		call   _01d6f8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _056614_func
		mov    $0x000064,%dh
		movw   $0x000000,0x000040(%esi)
		mov    $0x000001,%bl
		movw   $0x000000,0x000042(%esi)
		mov    %dh,_0c13df_data
		mov    $0x0001a4,%edx
		mov    %bl,_0c25a1_data
		mov    %dx,_0db5fa_data

	_06b6ae_jump:
		xor    %eax,%eax
		mov    _0db5f6_data,%al
		cmp    $0x000001,%eax
		jne    _06b6cd_jump
		mov    %esi,%eax
		call   _06b37c_func
		xor    %al,%al
		mov    %al,_0c13dd_data
		jmp    _06b73a_jump

	_06b6cd_jump:
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x000004(%esi),%eax
		mov    0x00000a(%eax,%edx,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _06b732_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06b732_jump
		movb   $0x000001,_0c13dd_data
		xor    %ch,%ch
		mov    %ch,_0c13de_data
		jmp    _06b73a_jump

	_06b732_jump:
		xor    %bh,%bh
		mov    %bh,_0c13dd_data

	_06b73a_jump:
		mov    _0c13df_data,%dl
		mov    0x000028(%esi),%bx
		cmp    $0x000002,%dl
		jb     _06c194_jump
		jbe    _06b9b9_jump
		cmp    $0x000004,%dl
		jb     _06bbc6_jump
		jbe    _06bdf3_jump
		cmp    $0x000064,%dl
		je     _06c154_jump

	_06b76b_jump:
		mov    _0c2524_data,%ecx
		mov    0x000028(%esi),%ebp
		mov    0x00003e(%esi),%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		add    %ebp,%eax
		add    $0x00012f,%ecx
		add    %edx,%eax
		cmp    %ebx,%eax
		jl     _06b79d_jump
		cmp    %ecx,%eax
		jg     _06b79d_jump
		mov    $0x000001,%eax
		jmp    _06b79f_jump

	_06b79d_jump:
		xor    %eax,%eax

	_06b79f_jump:
		test   %eax,%eax
		jne    _06b7a9_jump
		movw   $0x000000,0x000040(%esi)

	_06b7a9_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b7b0_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06b7c0_jump
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		je     _06b76b_jump

	_06b7c0_jump:
		movswl %bx,%eax
		mov    _0c1b74_data,%edi
		lea    0x0000dc(%eax),%edx
		cmp    %edi,%edx
		jle    _06b7e3_jump
		lea    0x00006e(%edi),%edx
		cmp    %eax,%edx
		jle    _06b7e3_jump
		movb   $0x000001,_0c13de_data
		jmp    _06b7f1_jump

	_06b7e3_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func

	_06b7f1_jump:
		cmpb   $0x000000,_0c13de_data
		je     _06b76b_jump
		cmpb   $0x000000,_0c13dd_data
		je     _06b76b_jump
		mov    $0x000001,%al
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %al,_0c13df_data
		mov    %al,_0c13e0_data
		mov    %dx,_0db5e6_data
		mov    %dx,_0db5e4_data
		call   _06b2bc_func
		mov    %al,_0db5fc_data
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		jmp    _06b76b_jump

	_06b844_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %dl,%al
		lea    0x000000(,%eax,8),%edx
		mov    (%ebx),%eax
		mov    0x000005(%edx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06b76b_jump
		mov    0x00006b(%esi),%al
		cmp    $0x000018,%eax
		je     _06b8af_jump
		cmp    $0x00001c,%eax
		jne    _06b892_jump
		xor    %eax,%eax
		mov    _0c13e1_data,%al
		test   %eax,%eax
		je     _06b8af_jump

	_06b892_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000020,%eax
		jne    _06b76b_jump
		xor    %eax,%eax
		mov    _0c13e1_data,%al
		test   %eax,%eax
		jne    _06b76b_jump

	_06b8af_jump:
		mov    %esi,%eax
		call   _06b32c_func
		jmp    _06b76b_jump

	_06b8bb_case:
		cmpb   $0x000000,_0c13dd_data
		je     _06b76b_jump
		xor    %cl,%cl
		mov    %cl,_0db5f6_data
		jmp    _06b76b_jump

	_06b8d5_case:
		cmpb   $0x000000,_0c13dd_data
		je     _06b76b_jump
		xor    %eax,%eax
		mov    _0c13e1_data,%al
		cmp    $0x000001,%eax
		jle    _06b96b_jump
		jmp    _06b985_jump

	_06b8f3_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		jmp    _06b76b_jump

	_06b904_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    $0x000002,%dh
		mov    $0x000003,%eax
		mov    %dh,_0c13df_data
		mov    %ax,_0db5fa_data
		jmp    _06b76b_jump

	_06b92a_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000002,%edi
		call   _01d6f8_func
		mov    $0x000003,%dl
		mov    %di,_0db5fa_data
		mov    %dl,_0c13df_data
		jmp    _06b76b_jump

	_06b951_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movb   $0x000004,_0c13df_data
		jmp    _06b76b_jump

	_06b96b_jump:
		mov    _0db5e0_data,%al
		cmp    $0x000009,%al
		ja     _06b76b_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_06b5a4_switch(,%eax,4)

	_06b985_jump:
		dec    %al
		mov    %al,_0c13e1_data
		jmp    _06b76b_jump

	_06b991_case:
		cmpb   $0x000000,_0c13dd_data
		je     _06b76b_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		call   _06b2bc_func
		mov    %al,_0db5fc_data
		jmp    _06b76b_jump

	_06b9b9_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _06b9f8_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06b9f8_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _06b9f8_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0db5f9_data,%bl
		mov    _0db5f8_data,%dl
		call   _01d6f8_func
		xor    %bl,%bl
		mov    %bl,_0db5f6_data
		mov    %bl,_0c13dd_data

	_06b9f8_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06bb18_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06ba22_jump
		mov    0x000068(%esi),%al
		add    0x000028(%esi),%eax
		test   %eax,%eax
		jl     _06ba55_jump

	_06ba22_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06ba5b_jump
		mov    _0c2524_data,%edx
		mov    0x000028(%esi),%ebx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		add    $0x000140,%edx
		add    %ebx,%eax
		cmp    %edx,%eax
		jle    _06ba5b_jump

	_06ba55_jump:
		movw   $0x000000,0x000040(%esi)

	_06ba5b_jump:
		cmpb   $0x000000,_0c13dd_data
		jne    _06bafc_jump
		jmp    _06b76b_jump

	_06ba6d_jump:
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ecx
		movw   $0x00fffa,0x000042(%esi)
		sub    $0x000006,%ecx
		mov    0x000081(%esi),%dh
		mov    %ecx,0x00002c(%esi)
		test   $0x000008,%dh
		je     _06ba96_jump
		mov    $0x000001,%eax
		jmp    _06ba9b_jump

	_06ba96_jump:
		mov    $0xffffffff,%eax

	_06ba9b_jump:
		mov    %ax,0x000040(%esi)
		jmp    _06b76b_jump

	_06baa4_jump:
		decw   _0db5fa_data
		mov    _0db5f8_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06bad0_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000040(%esi)
		jmp    _06b76b_jump

	_06bad0_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		testb  $0x000008,0x000081(%esi)
		je     _06baee_jump
		mov    $0x000002,%eax
		jmp    _06baf3_jump

	_06baee_jump:
		mov    $0xfffffffe,%eax

	_06baf3_jump:
		mov    %ax,0x000040(%esi)
		jmp    _06b76b_jump

	_06bafc_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x00000a,%dl
		jb     _06b76b_jump
		jbe    _06ba6d_jump
		cmp    $0x00000b,%dl
		je     _06baa4_jump
		jmp    _06b76b_jump

	_06bb18_jump:
		cmp    $0x000001,%eax
		jne    _06b76b_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06bb3e_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _06bb77_jump

	_06bb3e_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06b76b_jump
		mov    _0c2524_data,%edx
		mov    0x000028(%esi),%eax
		sar    $0x000010,%edx
		add    $0x0000c0,%eax
		add    $0x000140,%edx
		cmp    %edx,%eax
		jle    _06b76b_jump

	_06bb77_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%cl
		xor    %ebx,%ebx
		sub    %eax,%edx
		and    $0x0000f7,%cl
		mov    %edx,%eax
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,0x000081(%esi)
		call   _01d6f8_func
		mov    $0x000001,%al
		movw   $0x000000,0x000040(%esi)
		mov    %al,_0c13df_data
		jmp    _06b76b_jump

	_06bbc6_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _06bc05_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06bc05_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _06bc05_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0db5f9_data,%bl
		mov    _0db5f8_data,%dl
		call   _01d6f8_func
		xor    %dh,%dh
		mov    %dh,_0db5f6_data
		mov    %dh,_0c13dd_data

	_06bc05_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06bd0c_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06bc2f_jump
		mov    0x000068(%esi),%al
		add    0x000028(%esi),%eax
		test   %eax,%eax
		jl     _06bc60_jump

	_06bc2f_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06bc66_jump
		mov    _0c2524_data,%eax
		mov    0x000028(%esi),%edi
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		add    $0x000140,%eax
		add    %edi,%edx
		cmp    %eax,%edx
		jle    _06bc66_jump

	_06bc60_jump:
		movw   $0x000000,0x000040(%esi)

	_06bc66_jump:
		cmpb   $0x000000,_0c13dd_data
		jne    _06bcf0_jump
		jmp    _06b76b_jump

	_06bc78_jump:
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebp
		movw   $0x00fffa,0x000042(%esi)
		sub    $0x000006,%ebp
		mov    0x000081(%esi),%dl
		mov    %ebp,0x00002c(%esi)
		test   $0x000008,%dl
		je     _06bca1_jump
		mov    $0x000001,%eax
		jmp    _06bca6_jump

	_06bca1_jump:
		mov    $0xffffffff,%eax

	_06bca6_jump:
		mov    %ax,0x000040(%esi)
		jmp    _06b76b_jump

	_06bcaf_jump:
		mov    _0db5fa_data,%bx
		mov    $0x000001,%edx
		dec    %ebx
		mov    %esi,%eax
		mov    %bx,_0db5fa_data
		xor    %ebx,%ebx
		call   _01d6f8_func
		testb  $0x000008,0x000081(%esi)
		je     _06bcdc_jump
		mov    $0x000002,%eax
		jmp    _06bce1_jump

	_06bcdc_jump:
		mov    $0xfffffffe,%eax

	_06bce1_jump:
		movw   $0x00001e,0x000056(%esi)
		mov    %ax,0x000040(%esi)
		jmp    _06b76b_jump

	_06bcf0_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x00000a,%dl
		jb     _06b76b_jump
		jbe    _06bc78_jump
		cmp    $0x00000b,%dl
		je     _06bcaf_jump
		jmp    _06b76b_jump

	_06bd0c_jump:
		cmp    $0x000001,%eax
		jne    _06b76b_jump
		mov    _0db5f8_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _06bd4e_jump
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jge    _06b76b_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000040(%esi)
		jmp    _06b76b_jump

	_06bd4e_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06bd6b_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _06bda3_jump

	_06bd6b_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06b76b_jump
		mov    _0c2524_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _06b76b_jump

	_06bda3_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,%cl
		and    $0x000001,%al
		xor    %ebx,%ebx
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%cl
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		call   _01d6f8_func
		mov    $0x000001,%ch
		movw   $0x000000,0x000040(%esi)
		mov    %ch,_0c13df_data
		jmp    _06b76b_jump

	_06bdf3_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _06be32_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06be32_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _06be32_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0db5f9_data,%bl
		mov    _0db5f8_data,%dl
		call   _01d6f8_func
		xor    %bl,%bl
		mov    %bl,_0db5f6_data
		mov    %bl,_0c13dd_data

	_06be32_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06c0a7_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06be5c_jump
		mov    0x000068(%esi),%al
		add    0x000028(%esi),%eax
		test   %eax,%eax
		jl     _06be8f_jump

	_06be5c_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06be95_jump
		mov    _0c2524_data,%edx
		mov    0x000028(%esi),%edi
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		add    $0x000140,%edx
		add    %edi,%eax
		cmp    %edx,%eax
		jle    _06be95_jump

	_06be8f_jump:
		movw   $0x000000,0x000040(%esi)

	_06be95_jump:
		cmpb   $0x000000,_0c13dd_data
		jne    _06c087_jump
		jmp    _06b76b_jump

	_06bea7_jump:
		mov    0x000028(%esi),%dx
		mov    _0c1b74_data,%di
		add    $0x000030,%edx
		sub    %edi,%edx
		movb   $0x000005,0x000072(%esi)
		movswl %dx,%eax
		movb   $0x000000,0x000071(%esi)
		test   %eax,%eax
		jge    _06bec8_jump
		neg    %edx

	_06bec8_jump:
		movswl %dx,%edx
		cmp    $0x000064,%edx
		jle    _06bf15_jump
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jle    _06bef3_jump
		movw   $0x000009,0x000042(%esi)
		jmp    _06befe_jump

	_06bef3_jump:
		cmp    $0x000004,%eax
		jge    _06befe_jump
		movw   $0x000004,0x000042(%esi)

	_06befe_jump:
		testb  $0x000008,0x000081(%esi)
		je     _06bf0e_jump
		mov    $0x000002,%eax
		jmp    _06bf58_jump

	_06bf0e_jump:
		mov    $0xfffffffe,%eax
		jmp    _06bf58_jump

	_06bf15_jump:
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jle    _06bf38_jump
		movw   $0x000009,0x000042(%esi)
		jmp    _06bf43_jump

	_06bf38_jump:
		cmp    $0x000004,%eax
		jge    _06bf43_jump
		movw   $0x000004,0x000042(%esi)

	_06bf43_jump:
		testb  $0x000008,0x000081(%esi)
		je     _06bf53_jump
		mov    $0x000001,%eax
		jmp    _06bf58_jump

	_06bf53_jump:
		mov    $0xffffffff,%eax

	_06bf58_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		mov    0x00002c(%esi),%ebx
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    0x000042(%esi),%ax
		mov    %ebx,0x00002c(%esi)
		neg    %eax
		mov    %ax,0x000042(%esi)
		jmp    _06b76b_jump

	_06bf79_jump:
		testb  $0x000008,0x000081(%esi)
		je     _06bf92_jump
		mov    0x000028(%esi),%eax
		mov    _0c1b74_data,%ebp
		add    $0x000030,%eax
		cmp    %ebp,%eax
		jl     _06bfab_jump

	_06bf92_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _06bfbe_jump
		mov    0x000028(%esi),%eax
		mov    _0c1b74_data,%edx
		add    $0x000030,%eax
		cmp    %edx,%eax
		jle    _06bfbe_jump

	_06bfab_jump:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _06b76b_jump

	_06bfbe_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06bfdb_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _06c00b_jump

	_06bfdb_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06c05b_jump
		mov    _0c2524_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _06c05b_jump

	_06c00b_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,%cl
		and    $0x000001,%al
		xor    %ebx,%ebx
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%cl
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		call   _01d6f8_func
		mov    $0x000001,%ch
		movw   $0x000000,0x000040(%esi)
		mov    %ch,_0c13df_data
		jmp    _06b76b_jump

	_06c05b_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		testb  $0x000008,0x000081(%esi)
		je     _06c079_jump
		mov    $0x000002,%eax
		jmp    _06c07e_jump

	_06c079_jump:
		mov    $0xfffffffe,%eax

	_06c07e_jump:
		mov    %ax,0x000040(%esi)
		jmp    _06b76b_jump

	_06c087_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x00000a,%dl
		jb     _06b76b_jump
		jbe    _06bea7_jump
		cmp    $0x00000b,%dl
		je     _06bf79_jump
		jmp    _06b76b_jump

	_06c0a7_jump:
		cmp    $0x000001,%eax
		jne    _06b76b_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06c0cd_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _06c105_jump

	_06c0cd_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06b76b_jump
		mov    _0c2524_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _06b76b_jump

	_06c105_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%cl
		xor    %ebx,%ebx
		sub    %eax,%edx
		and    $0x0000f7,%cl
		mov    %edx,%eax
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,0x000081(%esi)
		call   _01d6f8_func
		mov    $0x000001,%al
		movw   $0x000000,0x000040(%esi)
		mov    %al,_0c13df_data
		jmp    _06b76b_jump

	_06c154_jump:
		decw   _0db5fa_data
		mov    _0db5f8_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jge    _06b76b_jump
		mov    $0x0003e7,%ecx
		mov    $0x000001,%ah
		mov    _0c331c_data,%dl
		mov    %cx,_0db5fa_data
		or     $0x000004,%dl
		mov    %ah,_0c25a0_data
		mov    %dl,_0c331c_data
		jmp    _06b76b_jump

	_06c194_jump:
		test   %dl,%dl
		jbe    _06b7b0_jump
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _01dea4_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _06c1d8_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d6f8_func
		xor    %bl,%bl
		movw   $0x000000,0x000040(%esi)
		mov    %bl,_0c13dd_data

	_06c1d8_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x000003,%dl
		ja     _06b76b_jump
		xor    %eax,%eax
		mov    %dl,%al
		jmp    *%cs:_06b5cc_switch(,%eax,4)



_06c1f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000040(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06c233_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x00000b,%ebx
		call   _0248b8_func
		mov    %dx,_0c25f4_data
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _04a984_func

	_06c233_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06c238_switch:
		.long   _06c5f2_case
		.long   _06c748_case
		.long   _06c5f2_case
		.long   _06c5f2_case
		.long   _06c748_case
		.long   _06c748_case
		.long   _06c748_case
		.long   _06c748_case
		.long   _06c748_case
		.long   _06c748_case
		.long   _06c617_case
		.long   _06c5f2_case

_06c268_switch:
		.long   _06c385_case
		.long   _06c4c4_case
		.long   _06c5bd_case
		.long   _06c731_case




_06c278_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		movb   $0x000001,_0c25e1_data
		mov    %esi,%eax
		call   _06b4bc_func
		mov    0x000028(%esi),%ax
		mov    %ax,_0db5ea_data
		mov    0x00002c(%esi),%ax
		mov    %ax,_0db5ec_data
		mov    %esi,%eax
		call   _06b530_func
		xor    %eax,%eax
		mov    _0db5f6_data,%al
		cmp    $0x000001,%eax
		jne    _06c2bc_jump
		mov    %esi,%eax
		call   _06b414_func

	_06c2bc_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _06c31f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06c31f_jump
		mov    $0x000001,%dh
		xor    %bl,%bl
		mov    %dh,_0c13dd_data
		mov    %bl,_0c13de_data
		jmp    _06c327_jump

	_06c31f_jump:
		xor    %dl,%dl
		mov    %dl,_0c13dd_data

	_06c327_jump:
		mov    _0c1b74_data,%ebx
		mov    _0c2524_data,%eax
		add    $0x000096,%ebx
		sar    $0x000010,%eax
		mov    0x000028(%esi),%dx
		cmp    %eax,%ebx
		jle    _06c36b_jump
		mov    _0c24e4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    _0c1b78_data,%ebx
		sub    $0x00006e,%eax
		cmp    %ebx,%eax
		jge    _06c36b_jump
		mov    0x000076(%esi),%al
		mov    %al,_0db5f7_data

	_06c36b_jump:
		mov    _0c13df_data,%al
		cmp    $0x000003,%al
		ja     _06c748_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06c268_switch(,%eax,4)

	_06c385_case:
		mov    %esi,%eax
		call   _0248b8_func
		movswl %dx,%eax
		mov    _0c1b74_data,%ebx
		add    $0x0000dc,%eax
		cmp    %ebx,%eax
		jle    _06c3b2_jump
		add    $0x0000dc,%ebx
		movswl %dx,%eax
		cmp    %eax,%ebx
		jle    _06c3b2_jump
		movb   $0x000001,_0c13de_data

	_06c3b2_jump:
		cmpb   $0x000000,_0c13de_data
		je     _06c748_case
		cmpb   $0x000000,_0c13dd_data
		je     _06c748_case
		mov    $0x000001,%dh
		mov    $0x000002,%bl
		mov    %esi,%eax
		mov    %dh,_0c13df_data
		mov    %bl,_0c13e1_data
		xor    %bh,%bh
		xor    %edx,%edx
		mov    %bh,_0c13e0_data
		mov    $0x000001,%ebx
		call   _01d6f8_func
		jmp    _06c748_case

	_06c3f7_jump:
		xor    %edx,%edx
		mov    0x00000c(%esi),%ebx
		mov    0x00006d(%esi),%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06c748_case
		mov    0x00006b(%esi),%al
		cmp    $0x000018,%eax
		je     _06c45f_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00001c,%eax
		jne    _06c441_jump
		xor    %eax,%eax
		mov    _0c13e0_data,%al
		cmp    $0x000001,%eax
		jg     _06c45f_jump

	_06c441_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000020,%eax
		jne    _06c748_case
		xor    %eax,%eax
		mov    _0c13e0_data,%al
		cmp    $0x000003,%eax
		jle    _06c748_case

	_06c45f_jump:
		mov    %esi,%eax
		call   _06b32c_func
		incb   _0c13e0_data
		jmp    _06c748_case

	_06c471_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _06c748_case
		xor    %eax,%eax
		mov    _0c13e1_data,%al
		cmp    $0x000001,%eax
		jg     _06c49b_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		jmp    _06c748_case

	_06c49b_jump:
		mov    %al,%cl
		dec    %cl
		mov    %cl,_0c13e1_data
		jmp    _06c748_case

	_06c4aa_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _06c748_case
		xor    %bl,%bl
		mov    %bl,_0db5f6_data
		jmp    _06c748_case

	_06c4c4_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%al
		jb     _06c4d6_jump
		jbe    _06c471_jump
		cmp    $0x000003,%al
		je     _06c4aa_jump
		jmp    _06c748_case

	_06c4d6_jump:
		cmp    $0x000001,%al
		je     _06c3f7_jump
		jmp    _06c748_case

	_06c4e3_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _06c748_case
		mov    $0x00000a,%ebx
		xor    %dl,%dl
		mov    %esi,%eax
		mov    %dl,_0db5f6_data
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _06c748_case

	_06c50b_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _06c748_case
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fffa,0x000042(%esi)
		mov    $0x000002,%edx
		mov    0x00002c(%esi),%eax
		movw   $0x00ffff,0x000040(%esi)
		sub    $0x000006,%eax
		mov    %dx,_0db5fa_data
		mov    %eax,0x00002c(%esi)
		jmp    _06c748_case

	_06c546_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _06c748_case
		mov    _0c1b74_data,%eax
		mov    0x000028(%esi),%ebp
		sub    $0x000032,%eax
		cmp    %ebp,%eax
		jle    _06c5aa_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,%cl
		and    $0x000001,%al
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%cl
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		mov    $0x000003,%ch
		call   _01d6e8_func
		mov    %ch,_0c13df_data
		jmp    _06c748_case

	_06c5aa_jump:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		jmp    _06c748_case

	_06c5bd_case:
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _06c5d7_jump
		jbe    _06c50b_jump
		cmp    $0x00000b,%al
		je     _06c546_jump
		jmp    _06c748_case

	_06c5d7_jump:
		cmp    $0x000003,%al
		je     _06c4e3_jump
		jmp    _06c748_case

	_06c5e4_jump:
		cmpb   $0x000000,_0c13dd_data
		jne    _06c650_jump
		jmp    _06c748_case

	_06c5f2_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		xor    %dh,%dh
		mov    _0db5fa_data,%ax
		mov    %dh,_0db5f6_data
		mov    %ax,0x000040(%esi)
		jmp    _06c748_case

	_06c617_case:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d6f8_func
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fff9,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		mov    0x000072(%esi),%al
		mov    0x00002c(%esi),%edi
		movb   $0x000005,0x000072(%esi)
		sub    $0x000007,%edi
		mov    %al,0x00006b(%esi)
		mov    %edi,0x00002c(%esi)
		jmp    _06c748_case

	_06c650_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x00000b,%al
		ja     _06c748_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06c238_switch(,%eax,4)

	_06c668_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    _0c24e2_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		add    $0x000032,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %eax,%ebx
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_0921f8_data(%eax)
		jne    _06c6d3_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000040(%esi)
		jmp    _06c748_case

	_06c6d3_jump:
		mov    0x000028(%esi),%eax
		mov    _0c24aa_data,%edx
		add    $0x000096,%eax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jle    _06c715_jump
		mov    _0db5f8_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _06c71d_jump
		cmpb   $0x000000,_0c24ca_data
		je     _06c715_jump
		movw   $0x000001,0x000040(%esi)
		xor    %eax,%eax
		mov    _0c24cc_data,%al
		cmp    $0x000002,%eax
		jge    _06c748_case
		decb   0x00006b(%esi)
		jmp    _06c748_case

	_06c715_jump:
		movw   $0x000002,0x000040(%esi)
		jmp    _06c748_case

	_06c71d_jump:
		movw   $0x000001,0x000040(%esi)
		cmpb   $0x000000,_0c24ca_data
		je     _06c748_case
		decb   0x00006b(%esi)
		jmp    _06c748_case

	_06c731_case:
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%al
		jb     _06c740_jump
		jbe    _06c668_jump
		jmp    _06c748_case

	_06c740_jump:
		test   %al,%al
		je     _06c5e4_jump

	_06c748_case:
		mov    _0c2524_data,%ecx
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		xor    %ebx,%ebx
		add    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		add    $0x00012f,%ecx
		add    %edx,%eax
		cmp    %ebx,%eax
		jl     _06c77a_jump
		cmp    %ecx,%eax
		jg     _06c77a_jump
		mov    $0x000001,%eax
		jmp    _06c77c_jump

	_06c77a_jump:
		xor    %eax,%eax

	_06c77c_jump:
		test   %eax,%eax
		jne    _06c786_jump
		movw   $0x000000,0x000040(%esi)

	_06c786_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c790_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0c13df_data,%al
		cmp    $0x000002,%al
		jb     _06c7a2_jump
		cmp    $0x000003,%al
		jbe    _06c7a6_jump

	_06c7a2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c7a6_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06c7a2_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x00000b,%ebx
		call   _0248b8_func
		mov    %dx,_0c25f8_data
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _04a984_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c7e8_func:
		mov    0x000076(%eax),%al
		xor    %ah,%ah
		inc    %eax
		mov    %ax,_0db5fa_data
		ret    



_06c7f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _06b4bc_func
		mov    0x000028(%ecx),%ax
		mov    %ax,_0db5ea_data
		mov    0x00002c(%ecx),%ax
		mov    %ax,_0db5ec_data
		mov    %ecx,%eax
		call   _06b530_func
		xor    %eax,%eax
		mov    _0c13df_data,%al
		cmp    $0x000002,%eax
		jne    _06c841_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _06c841_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _06c841_jump
		xor    %ah,%ah
		mov    %ah,_0c13df_data

	_06c841_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jne    _06c8ab_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06c8ab_jump
		mov    $0x000001,%dh
		xor    %bl,%bl
		mov    %dh,_0c13dd_data
		mov    %bl,_0c13de_data
		jmp    _06c8b3_jump

	_06c8ab_jump:
		xor    %dl,%dl
		mov    %dl,_0c13dd_data

	_06c8b3_jump:
		mov    _0c13df_data,%al
		cmp    $0x000001,%al
		jb     _06c8ca_jump
		jbe    _06c975_jump
		cmp    $0x000002,%al
		je     _06c98e_jump

	_06c8ca_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c8ce_jump:
		xor    %edx,%edx
		mov    0x00006b(%ecx),%dl
		cmp    $0x000018,%edx
		jne    _06c90e_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%ecx),%edx
		and    $0x0000ff,%eax
		mov    (%edx,%ebx,1),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06c90e_jump
		mov    %ecx,%eax
		call   _06b32c_func

	_06c90e_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _06c8ca_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		xor    %edx,%edx
		call   _01d6e8_func
		incb   _0c13df_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c95c_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _06c8ca_jump
		xor    %ch,%ch
		mov    %ch,_0db5f6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c975_jump:
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%al
		jb     _06c8ca_jump
		jbe    _06c8ce_jump
		cmp    $0x000003,%al
		je     _06c95c_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c98e_jump:
		cmpb   $0x000000,_0c13dd_data
		je     _06c8ca_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _06c8ca_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movw   $0x000002,0x000040(%ecx)
		call   _01d6f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c9c0_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0c13df_data,%dl
		test   %edx,%edx
		jne    _06c9e8_jump
		mov    $0x000001,%dl
		mov    $0x000001,%ebx
		mov    %dl,_0c13df_data
		mov    %dl,_0c13e1_data
		xor    %edx,%edx
		call   _01d6f8_func

	_06c9e8_jump:
		pop    %edx
		pop    %ebx
		ret    



_06c9ec_func:
		xor    %eax,%eax
		mov    _0c13df_data,%al
		cmp    $0x000002,%eax
		jge    _06c9fe_jump
		mov    $0xffffffff,%eax
		ret    

	_06c9fe_jump:
		mov    $0x000001,%eax
		ret    



_06ca10_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %edx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		mov    _0c24e4_data,%edx
		xor    %ah,%ah
		xor    %esi,%esi
		sar    $0x000010,%edx
		mov    %ax,_0dd2c8_data
		shl    $0x000004,%edx
		mov    %bx,%si
		sub    $0x0000c8,%edx
		sub    $0x0000c8,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ax,_0dd2ca_data
		xor    %eax,%eax
		mov    _0dd2ca_data,%ax
		test   %eax,%eax
		jne    _06ca67_jump
		movw   $0x000002,_0dd2ca_data
		jmp    _06ca71_jump

	_06ca67_jump:
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0dd2ca_data

	_06ca71_jump:
		mov    _0c24e4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		xor    %esi,%esi
		lea    -0x0000c8(%eax),%edx
		mov    _0dd2ca_data,%si
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    %bx,%ax
		lea    -0x0000c8(%eax),%esi
		sub    %edx,%esi
		mov    _0c2520_data,%edx
		sar    $0x000010,%edx
		mov    %si,_0dd2cc_data
		cmp    $0x000005,%edx
		jne    _06cae1_jump
		mov    _0c251e_data,%edx
		sar    $0x000010,%edx
		cmp    $0x00000a,%edx
		jne    _06cae1_jump
		mov    0x000020(%esp),%ecx
		xor    %esi,%esi
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%si
		mov    %eax,%edx
		mov    %esi,%eax
		call   _06de30_func
		jmp    _06ccae_jump

	_06cae1_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0dd2c8_data,%dx
		mov    _097750_data(%edx,%eax,2),%al
		xor    %ah,%ah
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ax,_0dd2c4_data
		jmp    _06cb3e_jump

	_06cb13_jump:
		mov    0x000008(%esp),%edi
		movswl %dx,%esi
		add    %esi,%edi
		mov    %edi,_0db610_data(%eax)
		mov    0x000020(%esp),%edi
		add    %edi,%esi
		mov    %esi,_0db614_data(%eax)

	_06cb2e_jump:
		movswl %bx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0db604_data(%eax),%si
		inc    %ebx
		add    %esi,%edx

	_06cb3e_jump:
		xor    %eax,%eax
		movswl %bx,%esi
		mov    _0dd2c4_data,%ax
		cmp    %eax,%esi
		jge    _06cc1b_jump
		imul   $0x000018,%esi,%eax
		mov    _0c2520_data,%ebp
		sar    $0x000010,%ebp
		dec    %ebp
		imul   $0x005dc0,%ebp,%edi
		imul   $0x00000a,%ebp,%ebp
		mov    %edi,(%esp)
		xor    %edi,%edi
		mov    _0dd2c8_data,%di
		imul   $0x000960,%edi,%ecx
		mov    %ecx,0x000004(%esp)
		mov    (%esp),%ecx
		shl    $0x000003,%esi
		add    0x000004(%esp),%ecx
		add    %ecx,%esi
		mov    %dx,_0db606_data(%eax)
		mov    _09778c_data(%esi),%cx
		mov    %cx,_0db604_data(%eax)
		mov    _09778e_data(%esi),%cl
		mov    %cl,_0db60c_data(%eax)
		mov    _097790_data(%esi),%cl
		mov    %cl,_0db60d_data(%eax)
		mov    _097792_data(%esi),%cl
		xor    %esi,%esi
		mov    %si,_0db60a_data(%eax)
		mov    %si,_0db618_data(%eax)
		movzbl _097714_data(%edi,%ebp,1),%esi
		mov    %cl,_0db608_data(%eax)
		test   %esi,%esi
		je     _06cbe7_jump
		cmp    $0x000002,%esi
		jne    _06cb13_jump

	_06cbe7_jump:
		xor    %eax,%eax
		movswl %dx,%esi
		mov    0x00000c(%esp),%ax
		imul   %esi,%eax
		imul   $0x000140,%esi,%esi
		mov    0x000008(%esp),%edi
		add    %eax,%edi
		movswl %bx,%eax
		imul   $0x000018,%eax,%eax
		add    0x000020(%esp),%esi
		mov    %edi,_0db610_data(%eax)
		mov    %esi,_0db614_data(%eax)
		jmp    _06cb2e_jump

	_06cc1b_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0dd2c8_data,%ax
		mov    _0baa0c_data(%edx,%eax,1),%al
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0dd2c6_data
		jmp    _06cc9e_jump

	_06cc4c_jump:
		xor    %edi,%edi
		mov    _0dd2c8_data,%di
		imul   $0x0000a0,%edi,%edi
		mov    _0c2520_data,%esi
		sar    $0x000010,%esi
		dec    %esi
		imul   $0x000640,%esi,%esi
		add    %edi,%esi
		mov    _0baa48_data(%esi,%eax,8),%bx
		mov    %bx,_0dd224_data(,%eax,8)
		mov    _0baa4a_data(%esi,%eax,8),%bx
		mov    %bx,_0dd226_data(,%eax,8)
		mov    _0baa4c_data(%esi,%eax,8),%bx
		inc    %edx
		mov    %bx,_0dd228_data(,%eax,8)

	_06cc9e_jump:
		xor    %esi,%esi
		movswl %dx,%eax
		mov    _0dd2c6_data,%si
		cmp    %esi,%eax
		jl     _06cc4c_jump

	_06ccae_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_06ccb8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    %eax,0x00002c(%esp)
		mov    %edx,0x000054(%esp)
		mov    %ebx,0x000060(%esp)
		mov    %ecx,0x000040(%esp)
		mov    _0c2520_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0dd2c8_data,%ax
		mov    _097714_data(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		je     _06cd02_jump
		cmp    $0x000002,%eax
		jne    _06d1a2_jump

	_06cd02_jump:
		mov    0x000078(%esp),%eax
		mov    0x000060(%esp),%ecx
		sub    %ecx,%eax
		mov    %ax,0x00003c(%esp)
		mov    _0c2520_data,%eax
		mov    0x000054(%esp),%ebx
		sar    $0x000010,%eax
		sub    $0x0000c8,%ebx
		cmp    $0x000004,%eax
		jne    _06cdc1_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		je     _06cd42_jump
		cmp    $0x00000b,%eax
		jne    _06cdc1_jump

	_06cd42_jump:
		mov    _0c1b06_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _06cdc1_jump
		xor    %edx,%edx
		mov    $0x0000c8,%esi
		mov    0x00007c(%esp),%dx
		sub    %edx,%esi
		mov    0x00002c(%eax),%ecx
		mov    %esi,%edx
		sub    $0x00006e,%ecx
		xor    %esi,%edx
		sub    %esi,%ecx
		mov    0x000040(%esp),%dx
		cmp    %ecx,%edx
		jge    _06cdad_jump
		mov    0x00007c(%esp),%esi
		mov    0x00002c(%eax),%dx
		mov    $0x0000c8,%eax
		sub    $0x00006e,%edx
		sub    %esi,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,%ax
		mov    %edx,0x000040(%esp)
		test   %eax,%eax
		jge    _06cdad_jump
		xor    %edi,%edi
		mov    %edi,0x000040(%esp)

	_06cdad_jump:
		mov    0x000040(%esp),%eax
		mov    0x00007c(%esp),%edx
		cmp    %dx,%ax
		jb     _06cdc1_jump
		mov    %edx,%eax
		dec    %eax
		mov    %eax,0x000040(%esp)

	_06cdc1_jump:
		mov    _0c2520_data,%edx
		sar    $0x000010,%edx
		lea    -0x000001(%edx),%ecx
		lea    0x000000(,%ecx,4),%eax
		add    %eax,%ecx
		xor    %eax,%eax
		add    %ecx,%ecx
		mov    _0dd2c8_data,%ax
		mov    _097714_data(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		jne    _06ce3d_jump
		cmp    $0x000003,%edx
		jne    _06ce12_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jne    _06ce12_jump
		mov    _0c24ac_data,%eax
		sar    $0x000011,%eax
		add    $0x00000b,%eax
		mov    %ax,0x000028(%esp)
		jmp    _06ce51_jump

	_06ce12_jump:
		mov    _0c24ac_data,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		mov    _0dd2ca_data,%cx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    _0dd2cc_data,%dx
		add    %edx,%eax
		mov    %ax,0x000028(%esp)
		jmp    _06ce51_jump

	_06ce3d_jump:
		mov    $0x0000c8,%eax
		mov    0x00007c(%esp),%ecx
		mov    %ebx,%edx
		sub    %ecx,%eax
		add    %eax,%edx
		mov    %dx,0x000028(%esp)

	_06ce51_jump:
		xor    %eax,%eax
		mov    $0x0000c8,%edx
		mov    0x00007c(%esp),%ax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %bx,%edx
		add    %eax,%edx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _06ce81_jump
		mov    $0x0000c8,%eax
		sub    0x00007c(%esp),%eax
		add    %eax,%ebx
		mov    %bx,0x000028(%esp)

	_06ce81_jump:
		xor    %edi,%edi
		mov    _0dd2c4_data,%ax
		mov    %edi,0x000050(%esp)
		test   %ax,%ax
		jbe    _06d00d_jump
		mov    0x00007c(%esp),%eax
		mov    0x000040(%esp),%edx
		sub    %edx,%eax
		mov    %eax,0x000038(%esp)

	_06cea4_jump:
		movzwl 0x000050(%esp),%ebp
		imul   $0x000018,%ebp,%ebp
		xor    %eax,%eax
		mov    _0db60a_data(%ebp),%ax
		mov    _0db610_data(%ebp),%esi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esp),%ax
		mov    _0db614_data(%ebp),%edi
		add    %eax,%esi
		add    %eax,%edi
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		add    %eax,%edx
		mov    0x000028(%esp),%ebx
		sub    %edx,%edi
		mov    _0db606_data(%ebp),%dx
		sub    %ebx,%edx
		mov    _0db604_data(%ebp),%ax
		mov    %edx,%ebx
		movswl %dx,%ecx
		add    %eax,%ebx
		test   %ecx,%ecx
		jge    _06cf2e_jump
		movswl %bx,%ebp
		test   %ebp,%ebp
		jle    _06cf2e_jump
		movswl %ax,%ebp
		test   %ebp,%ebp
		je     _06cf2e_jump
		neg    %ecx
		mov    %ecx,%eax
		mov    %eax,%edx
		shl    $0x000008,%ecx
		shl    $0x000006,%edx
		add    %ecx,%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    0x00002c(%esp),%dx
		imul   %edx,%eax
		add    %eax,%esi
		xor    %edx,%edx
		mov    %ebx,%eax

	_06cf2e_jump:
		movswl %bx,%ecx
		mov    %ecx,0x000014(%esp)
		xor    %ecx,%ecx
		mov    0x000040(%esp),%cx
		mov    %ecx,0x000010(%esp)
		mov    0x000014(%esp),%ecx
		cmp    0x000010(%esp),%ecx
		jle    _06cf90_jump
		xor    %ecx,%ecx
		mov    0x00007c(%esp),%cx
		movswl %dx,%ebp
		mov    %ecx,0x00000c(%esp)
		cmp    %ecx,%ebp
		jge    _06cf90_jump
		cmp    0x000010(%esp),%ebp
		jge    _06cfaa_jump
		mov    0x000014(%esp),%ecx
		cmp    0x00000c(%esp),%ecx
		jle    _06cfaa_jump
		xor    %edx,%edx
		mov    0x000010(%esp),%eax
		mov    0x00002c(%esp),%dx
		sub    %ebp,%eax
		imul   %eax,%edx
		add    %edx,%esi
		mov    %eax,%edx
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		add    %edx,%eax
		add    %eax,%edi
		mov    0x000038(%esp),%eax
		jmp    _06cfee_jump

	_06cf90_jump:
		mov    0x000050(%esp),%edi
		inc    %edi
		mov    _0dd2c4_data,%dx
		mov    %edi,0x000050(%esp)
		cmp    %dx,%di
		jae    _06d00d_jump
		jmp    _06cea4_jump

	_06cfaa_jump:
		movzwl 0x000040(%esp),%ebp
		movswl %dx,%ecx
		cmp    %ebp,%ecx
		jge    _06cfdc_jump
		mov    %ebp,%ebx
		sub    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x00002c(%esp),%cx
		imul   %ebx,%ecx
		add    %ecx,%esi
		mov    %ebx,%ecx
		shl    $0x000008,%ecx
		shl    $0x000006,%ebx
		add    %ecx,%ebx
		add    %ebx,%edi
		mov    0x000040(%esp),%ebx
		sub    %edx,%ebx
		sub    %ebx,%eax
		jmp    _06cfee_jump

	_06cfdc_jump:
		movswl %bx,%ecx
		xor    %ebx,%ebx
		mov    0x00007c(%esp),%bx
		cmp    %ebx,%ecx
		jle    _06cfee_jump
		mov    %ebx,%eax
		sub    %edx,%eax

	_06cfee_jump:
		mov    0x00003a(%esp),%ecx
		xor    %edx,%edx
		movswl %ax,%ebx
		mov    0x00002c(%esp),%dx
		mov    _0cdf38_data,%eax
		sar    $0x000010,%ecx
		sub    %eax,%esi
		call   _015306_func
		jmp    _06cf90_jump

	_06d00d_jump:
		mov    0x00002c(%esp),%ebx
		mov    $0x000001,%esi
		mov    _0dd2c6_data,%di
		xor    %ecx,%ecx
		shr    %bx
		mov    %ecx,0x00005c(%esp)
		mov    %esi,0x00004c(%esp)
		mov    %ebx,0x00002c(%esp)
		test   %di,%di
		jbe    _06d5ce_jump
		jmp    _06d05b_jump

	_06d039_jump:
		mov    0x00005c(%esp),%ecx
		mov    0x00004c(%esp),%esi
		mov    _0dd2c6_data,%di
		inc    %ecx
		inc    %esi
		mov    %ecx,0x00005c(%esp)
		mov    %esi,0x00004c(%esp)
		cmp    %di,%cx
		jae    _06d5ce_jump

	_06d05b_jump:
		xor    %eax,%eax
		mov    0x00005c(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0dd228_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0db604_data(%edx),%bx
		test   %ebx,%ebx
		je     _06d039_jump
		movzwl 0x00004c(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0c24a4_data,%ebx
		mov    (%ebx),%ebx
		mov    _0dd224_data(%eax),%ax
		add    %ebx,%ebp
		mov    _0db60a_data(%edx),%bx
		sub    %ebx,%eax
		mov    %ax,0x000064(%esp)
		mov    0x000062(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000140,%eax
		jle    _06d0bc_jump
		mov    0x00002c(%esp),%eax
		sub    %ax,0x000064(%esp)

	_06d0bc_jump:
		mov    0x000062(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    0x000060(%esp),%dx
		cmp    %edx,%ebx
		jle    _06d128_jump
		xor    %edx,%edx
		mov    0x00005c(%esp),%dx
		mov    0x000028(%esp),%esi
		mov    %edx,(%esp)
		mov    _0dd226_data(,%edx,8),%dx
		sub    %esi,%edx
		movswl %dx,%ebx
		xor    %dh,%dh
		xor    %ch,%ch
		mov    0x000006(%ebp),%dl
		mov    0x000005(%ebp),%cl
		shl    $0x000008,%edx
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0c24a4_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		mov    (%esp),%edx
		shl    $0x000002,%edx
		mov    _0cd000_data,%edi
		mov    _0ce5b0_data(%edx),%edx
		call   _017281_func

	_06d128_jump:
		mov    0x00002c(%esp),%eax
		add    %ax,0x000064(%esp)
		xor    %edx,%edx
		mov    0x000062(%esp),%eax
		mov    0x000078(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _06d039_jump
		xor    %ebx,%ebx
		mov    0x00005c(%esp),%bx
		mov    0x000028(%esp),%ecx
		mov    _0dd226_data(,%ebx,8),%dx
		sub    %ecx,%edx
		movswl %dx,%esi
		xor    %dh,%dh
		xor    %ch,%ch
		mov    0x000006(%ebp),%dl
		mov    0x000005(%ebp),%cl
		shl    $0x000008,%edx
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0cd000_data,%edx
		mov    %edx,(%esp)
		mov    _0c24a4_data,%edx
		mov    0x000000(%ebp),%ebp
		mov    0x000008(%edx),%edx
		mov    (%esp),%edi
		add    %edx,%ebp
		mov    _0ce5b0_data(,%ebx,4),%edx
		mov    %esi,%ebx
		mov    %ebp,%esi
		call   _017281_func
		jmp    _06d039_jump

	_06d1a2_jump:
		xor    %edx,%edx
		mov    _0dd2c4_data,%bx
		mov    %edx,0x000020(%esp)
		test   %bx,%bx
		jbe    _06d446_jump
		mov    0x00007c(%esp),%eax
		sub    %ecx,%eax
		mov    0x000060(%esp),%ebx
		mov    %eax,0x000058(%esp)
		mov    0x000078(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,0x000024(%esp)

	_06d1d0_jump:
		xor    %edi,%edi
		mov    0x000020(%esp),%di
		imul   $0x000018,%edi,%edi
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00002c(%esp),%ax
		mov    _0db60a_data(%edi),%dx
		imul   %eax,%edx
		mov    _0db610_data(%edi),%esi
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000040(%esp),%dx
		imul   %edx,%eax
		add    %eax,%esi
		imul   $0x000140,%edx,%eax
		mov    _0db614_data(%edi),%ebx
		mov    _0db60a_data(%edi),%cx
		mov    _0db604_data(%edi),%dx
		add    %ebx,%eax
		mov    %dx,0x000018(%esp)
		mov    0x000054(%esp),%edx
		mov    0x000040(%esp),%ebx
		sub    %ecx,%edx
		sub    %ebx,%edx
		mov    %dx,0x000044(%esp)
		mov    _0db606_data(%edi),%dx
		mov    0x000018(%esp),%ecx
		mov    %dx,0x000030(%esp)
		add    %ecx,%edx
		movswl %dx,%ebx
		mov    %ebx,0x000008(%esp)
		xor    %ebx,%ebx
		mov    0x000008(%esp),%ecx
		mov    0x000060(%esp),%bx
		cmp    %ecx,%ebx
		jge    _06d293_jump
		xor    %ecx,%ecx
		mov    0x00002e(%esp),%edi
		mov    0x000078(%esp),%cx
		sar    $0x000010,%edi
		cmp    %ecx,%edi
		jge    _06d293_jump
		mov    0x000016(%esp),%ebp
		sar    $0x000010,%ebp
		test   %ebp,%ebp
		je     _06d293_jump
		cmp    %ebx,%edi
		jge    _06d2b1_jump
		cmp    0x000008(%esp),%ecx
		jge    _06d2b1_jump
		mov    0x000024(%esp),%edx
		sub    %edi,%ebx
		mov    %dx,0x000018(%esp)
		add    %ebx,%esi
		add    %ebx,%eax
		jmp    _06d2f5_jump

	_06d293_jump:
		mov    0x000020(%esp),%edx
		inc    %edx
		mov    _0dd2c4_data,%bx
		mov    %edx,0x000020(%esp)
		cmp    %bx,%dx
		jae    _06d446_jump
		jmp    _06d1d0_jump

	_06d2b1_jump:
		xor    %ecx,%ecx
		mov    0x00002e(%esp),%ebx
		mov    0x000060(%esp),%cx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jge    _06d2e0_jump
		sub    %ebx,%ecx
		mov    0x000060(%esp),%edx
		add    %ecx,%esi
		add    %ecx,%eax
		mov    0x000030(%esp),%ecx
		mov    0x000018(%esp),%edi
		sub    %ecx,%edx
		sub    %edx,%edi
		mov    %di,0x000018(%esp)
		jmp    _06d2f5_jump

	_06d2e0_jump:
		xor    %ebx,%ebx
		movswl %dx,%ecx
		mov    0x000078(%esp),%bx
		cmp    %ebx,%ecx
		jle    _06d2f5_jump
		sub    %ebx,%edx
		sub    %dx,0x000018(%esp)

	_06d2f5_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x00007c(%esp),%dx
		mov    0x000040(%esp),%bx
		sub    %ebx,%edx
		mov    0x000042(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %edx,%ebx
		jle    _06d319_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000044(%esp)

	_06d319_jump:
		mov    0x000042(%esp),%ebp
		sar    $0x000010,%ebp
		test   %ebp,%ebp
		jle    _06d384_jump
		mov    0x000016(%esp),%ecx
		mov    0x000042(%esp),%ebx
		xor    %edx,%edx
		mov    _0cdf38_data,%edi
		mov    0x00002c(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   _015306_func
		xor    %eax,%eax
		mov    0x000020(%esp),%ax
		imul   $0x000018,%eax,%eax
		imul   $0x000140,%ebp,%ebp
		mov    _0db610_data(%eax),%esi
		mov    _0db614_data(%eax),%edx
		xor    %eax,%eax
		mov    0x000040(%esp),%ax
		imul   $0x000140,%eax,%eax
		mov    0x000044(%esp),%ebx
		add    %edx,%ebp
		mov    0x000058(%esp),%edx
		sub    %ebx,%edx
		mov    %dx,0x000044(%esp)
		add    %ebp,%eax
		jmp    _06d3d4_jump

	_06d384_jump:
		xor    %eax,%eax
		mov    0x000020(%esp),%ax
		imul   $0x000018,%eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000054(%esp),%bx
		mov    _0db60a_data(%eax),%dx
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    0x000040(%esp),%dx
		mov    %edx,%ecx
		imul   $0x000140,%edx,%edx
		sub    %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x00002c(%esp),%bx
		imul   %ecx,%ebx
		mov    _0db610_data(%eax),%esi
		mov    _0db614_data(%eax),%eax
		add    %edx,%eax
		mov    0x000058(%esp),%edx
		mov    %dx,0x000044(%esp)
		add    %ebx,%esi

	_06d3d4_jump:
		xor    %ebx,%ebx
		mov    0x00002e(%esp),%edx
		mov    0x000060(%esp),%bx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jge    _06d3ec_jump
		sub    %edx,%ebx
		add    %ebx,%esi
		add    %ebx,%eax

	_06d3ec_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00007c(%esp),%bx
		mov    0x000040(%esp),%dx
		sub    %edx,%ebx
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jle    _06d410_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000044(%esp)

	_06d410_jump:
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _06d293_jump
		mov    0x000016(%esp),%ecx
		mov    0x000042(%esp),%ebx
		xor    %edx,%edx
		mov    _0cdf38_data,%edi
		mov    0x00002c(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   _015306_func
		jmp    _06d293_jump

	_06d446_jump:
		mov    $0x000001,%esi
		xor    %ecx,%ecx
		mov    _0dd2c6_data,%di
		mov    %ecx,0x000034(%esp)
		mov    %esi,0x000048(%esp)
		test   %di,%di
		jbe    _06d5ce_jump
		jmp    _06d489_jump

	_06d467_jump:
		mov    0x000034(%esp),%ecx
		mov    0x000048(%esp),%esi
		mov    _0dd2c6_data,%di
		inc    %ecx
		inc    %esi
		mov    %ecx,0x000034(%esp)
		mov    %esi,0x000048(%esp)
		cmp    %di,%cx
		jae    _06d5ce_jump

	_06d489_jump:
		xor    %eax,%eax
		mov    0x000034(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0dd228_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0db604_data(%edx),%bx
		test   %ebx,%ebx
		je     _06d467_jump
		xor    %ebx,%ebx
		mov    0x000048(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0c24a4_data,%ebx
		mov    (%ebx),%ebx
		mov    _0dd226_data(%eax),%ax
		add    %ebx,%ebp
		mov    _0db60a_data(%edx),%bx
		sub    %ebx,%eax
		mov    %ax,0x00001c(%esp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x0000c8,%eax
		jle    _06d4ec_jump
		mov    0x000054(%esp),%eax
		sub    %ax,0x00001c(%esp)

	_06d4ec_jump:
		mov    0x00001a(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%al
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    0x000040(%esp),%ax
		cmp    %eax,%edx
		jle    _06d55c_jump
		xor    %ch,%ch
		xor    %eax,%eax
		mov    0x000006(%ebp),%cl
		mov    0x000034(%esp),%ax
		mov    %ecx,%esi
		mov    _0dd222_data(,%eax,8),%edx
		shl    $0x000008,%esi
		mov    0x000005(%ebp),%cl
		sar    $0x000010,%edx
		add    %esi,%ecx
		mov    _0cd000_data,%esi
		and    $0x00ffff,%ecx
		mov    0x000000(%ebp),%edi
		mov    _0ce5b0_data(,%eax,4),%eax
		mov    %esi,(%esp)
		mov    _0c24a4_data,%esi
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		mov    0x000008(%esi),%esi
		mov    0x000004(%esp),%edx
		add    %edi,%esi
		mov    (%esp),%edi
		call   _017281_func

	_06d55c_jump:
		mov    0x000054(%esp),%eax
		add    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x00001a(%esp),%ebx
		mov    0x00007c(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _06d467_jump
		xor    %dh,%dh
		xor    %eax,%eax
		mov    0x000006(%ebp),%dl
		mov    0x000034(%esp),%ax
		mov    %edx,%esi
		mov    _0dd222_data(,%eax,8),%ecx
		shl    $0x000008,%esi
		mov    0x000005(%ebp),%dl
		sar    $0x000010,%ecx
		add    %esi,%edx
		and    $0x00ffff,%edx
		mov    %edx,(%esp)
		mov    _0c24a4_data,%edx
		mov    0x000008(%edx),%esi
		mov    0x000000(%ebp),%edx
		mov    _0cd000_data,%edi
		add    %edx,%esi
		mov    _0ce5b0_data(,%eax,4),%edx
		mov    %ecx,%eax
		mov    (%esp),%ecx
		call   _017281_func
		jmp    _06d467_jump

	_06d5ce_jump:
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_06d5d8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,0x000014(%esp)
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %ecx,0x000018(%esp)
		mov    _0c2520_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0dd2c8_data,%dx
		mov    _097714_data(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		je     _06d621_jump
		cmp    $0x000002,%eax
		jne    _06d7b7_jump

	_06d621_jump:
		mov    0x000014(%esp),%esi
		mov    _0c2524_data,%dx
		mov    _0c24ae_data,%ax
		xor    %edi,%edi
		shr    %si
		add    %edx,%edx
		add    %eax,%eax
		mov    %edi,0x00001c(%esp)
		sub    %eax,%edx
		mov    %esi,0x000014(%esp)
		add    $0x0000c8,%edx
		mov    $0x000001,%eax
		mov    %edx,0x000008(%esp)
		mov    _0dd2c6_data,%dx
		mov    %eax,0x000024(%esp)
		test   %dx,%dx
		jbe    _06d92e_jump
		jmp    _06d68c_jump

	_06d66a_jump:
		mov    0x00001c(%esp),%ecx
		mov    0x000024(%esp),%esi
		mov    _0dd2c6_data,%di
		inc    %ecx
		inc    %esi
		mov    %ecx,0x00001c(%esp)
		mov    %esi,0x000024(%esp)
		cmp    %di,%cx
		jae    _06d92e_jump

	_06d68c_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0dd228_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0db604_data(%edx),%bx
		test   %ebx,%ebx
		jne    _06d66a_jump
		mov    0x000024(%esp),%bx
		imul   $0x00000c,%ebx,%ebx
		mov    _0c24a4_data,%ebp
		mov    0x000000(%ebp),%ebp
		mov    _0dd224_data(%eax),%ax
		add    %ebx,%ebp
		mov    _0db60a_data(%edx),%bx
		sub    %ebx,%eax
		mov    %ax,0x000020(%esp)
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000140,%eax
		jle    _06d6ee_jump
		mov    0x000014(%esp),%eax
		sub    %ax,0x000020(%esp)

	_06d6ee_jump:
		mov    0x00001e(%esp),%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		mov    0x00000c(%esp),%bx
		add    %eax,%edx
		cmp    %ebx,%edx
		jle    _06d74f_jump
		xor    %edx,%edx
		xor    %ch,%ch
		mov    0x000006(%ebp),%dl
		mov    0x000008(%esp),%ebx
		mov    %dl,%cl
		sub    %edx,%ebx
		xor    %dh,%dh
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0c24a4_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    0x00001c(%esp),%dx
		mov    _0cd000_data,%edi
		shl    $0x000002,%edx
		movswl %bx,%ebx
		mov    _0ce5b0_data(%edx),%edx
		call   _017281_func

	_06d74f_jump:
		mov    0x000014(%esp),%eax
		add    %ax,0x000020(%esp)
		xor    %edx,%edx
		mov    0x00001e(%esp),%eax
		mov    0x000040(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _06d66a_jump
		xor    %edx,%edx
		mov    0x000008(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0c24a4_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    _0cd000_data,%edi
		mov    0x00001c(%esp),%dx
		movswl %bx,%ebx
		mov    _0ce5b0_data(,%edx,4),%edx
		call   _017281_func
		jmp    _06d66a_jump

	_06d7b7_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    _0dd2c6_data,%cx
		mov    %edx,0x000028(%esp)
		mov    %ebx,0x000010(%esp)
		test   %cx,%cx
		jbe    _06d92e_jump
		jmp    _06d7fa_jump

	_06d7d8_jump:
		mov    0x000028(%esp),%ebx
		mov    0x000010(%esp),%ecx
		mov    _0dd2c6_data,%si
		inc    %ebx
		inc    %ecx
		mov    %ebx,0x000028(%esp)
		mov    %ecx,0x000010(%esp)
		cmp    %si,%bx
		jae    _06d92e_jump

	_06d7fa_jump:
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0dd228_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0db604_data(%edx),%bx
		test   %ebx,%ebx
		jne    _06d7d8_jump
		mov    0x000010(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0dd226_data(%eax),%ax
		mov    _0db60a_data(%edx),%di
		sub    %edi,%eax
		mov    %ax,0x00002c(%esp)
		mov    _0c24a4_data,%ebx
		mov    0x00002a(%esp),%eax
		mov    (%ebx),%ebx
		sar    $0x000010,%eax
		add    %ebx,%ebp
		cmp    $0x0000c8,%eax
		jle    _06d85b_jump
		mov    0x000004(%esp),%eax
		sub    %ax,0x00002c(%esp)

	_06d85b_jump:
		mov    0x00002a(%esp),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%dl
		mov    0x000018(%esp),%ax
		add    %ebx,%edx
		cmp    %eax,%edx
		jle    _06d8bf_jump
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		mov    _0cd000_data,%edi
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		xor    %eax,%eax
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000028(%esp),%ax
		mov    %dx,%cx
		mov    _0c24a4_data,%edx
		mov    0x000000(%ebp),%esi
		mov    %eax,(%esp)
		mov    0x000008(%edx),%edx
		mov    _0dd222_data(,%eax,8),%eax
		add    %edx,%esi
		mov    (%esp),%edx
		sar    $0x000010,%eax
		mov    _0ce5b0_data(,%edx,4),%edx
		call   _017281_func

	_06d8bf_jump:
		mov    0x000004(%esp),%eax
		add    %ax,0x00002c(%esp)
		xor    %eax,%eax
		mov    0x00002a(%esp),%ebx
		mov    0x000044(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _06d7d8_jump
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		mov    _0dd222_data(,%eax,8),%edx
		sar    $0x000010,%edx
		mov    %edx,(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		mov    _0c24a4_data,%esi
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %dx,%cx
		mov    0x000000(%ebp),%edx
		mov    _0cd000_data,%edi
		add    %edx,%esi
		mov    _0ce5b0_data(,%eax,4),%edx
		mov    (%esp),%eax
		call   _017281_func
		jmp    _06d7d8_jump

	_06d92e_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_06d938_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x00000c(%esp)
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    _0c2520_data,%ebx
		sar    $0x000010,%ebx
		dec    %ebx
		lea    0x000000(,%ebx,4),%edx
		xor    %eax,%eax
		add    %ebx,%edx
		mov    _0dd2c8_data,%ax
		add    %edx,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    _097714_data(%eax),%dl
		test   %edx,%edx
		jne    _06dbee_jump
		mov    _0dd2c4_data,%bx
		shr    %si
		xor    %ecx,%ecx
		test   %bx,%bx
		jbe    _06dbb5_jump
		mov    %esi,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000004(%esp)

	_06d995_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0db604_data(%ebx),%dx
		test   %edx,%edx
		jne    _06d9d6_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		movzwl %si,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0db60a_data(%ebx)

	_06d9c4_jump:
		mov    _0dd2c4_data,%ax
		inc    %ecx
		cmp    %ax,%cx
		jae    _06dbb5_jump
		jmp    _06d995_jump

	_06d9d6_jump:
		xor    %edx,%edx
		mov    _0db608_data(%ebx),%dl
		test   %edx,%edx
		jne    _06da14_jump
		xor    %eax,%eax
		mov    _0db60c_data(%ebx),%al
		movzwl %si,%ebp
		mov    %eax,(%esp)
		imul   %ebp,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0db60a_data(%ebx)
		jmp    _06d9c4_jump

	_06da14_jump:
		cmp    $0x000001,%edx
		je     _06da22_jump
		cmp    $0x000004,%edx
		jne    _06dadc_jump

	_06da22_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0db618_data(%ebx),%dx
		movzbl _0db60d_data(%ebx),%ebp
		add    %ebp,%edx
		movzwl %si,%ebp
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %dx,_0db618_data(%ebx)
		xor    %edx,%edx
		mov    _0db608_data(%ebx),%dl
		cmp    $0x000001,%edx
		jne    _06da7b_jump
		xor    %edx,%edx
		mov    _0db618_data(%ebx),%dx
		sar    $0x000004,%edx
		mov    %dx,_0db60a_data(%ebx)
		jmp    _06d9c4_jump

	_06da7b_jump:
		xor    %eax,%eax
		mov    _0db60c_data(%ebx),%al
		mov    %eax,(%esp)
		imul   %ebp,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		movzwl _0db618_data(%ebx),%ebp
		mov    %dx,_0db60a_data(%ebx)
		xor    %edx,%edx
		sar    $0x000004,%ebp
		mov    _0db60a_data(%ebx),%dx
		add    %ebp,%edx
		mov    %dx,_0db60a_data(%ebx)
		mov    _0db60a_data(%ebx),%ax
		xor    %edx,%edx
		div    %si
		mov    %dx,_0db60a_data(%ebx)
		jmp    _06d9c4_jump

	_06dadc_jump:
		cmp    $0x000002,%edx
		je     _06daea_jump
		cmp    $0x000005,%edx
		jne    _06d9c4_jump

	_06daea_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0db60d_data(%edx),%bl
		movzwl _0db618_data(%edx),%ebp
		cmp    %ebp,%ebx
		jle    _06db10_jump
		mov    0x000004(%esp),%eax
		add    %ax,_0db618_data(%edx)

	_06db10_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0db60d_data(%ebx),%dl
		mov    _0db618_data(%ebx),%ax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    _0db608_data(%ebx),%dl
		mov    %ax,_0db618_data(%ebx)
		cmp    $0x000002,%edx
		jne    _06db51_jump
		xor    %edx,%edx
		mov    %ax,%dx
		sar    $0x000004,%edx
		mov    %dx,_0db60a_data(%ebx)
		jmp    _06d9c4_jump

	_06db51_jump:
		xor    %eax,%eax
		mov    _0db60c_data(%ebx),%al
		movzwl %si,%ebp
		mov    %eax,(%esp)
		imul   %ebp,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		movzwl _0db618_data(%ebx),%ebp
		mov    %dx,_0db60a_data(%ebx)
		xor    %edx,%edx
		sar    $0x000004,%ebp
		mov    _0db60a_data(%ebx),%dx
		add    %ebp,%edx
		mov    %dx,_0db60a_data(%ebx)
		mov    _0db60a_data(%ebx),%ax
		xor    %edx,%edx
		div    %si
		mov    %dx,_0db60a_data(%ebx)
		jmp    _06d9c4_jump

	_06dbb5_jump:
		mov    _0c2520_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _06dbe6_jump
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jne    _06dbe6_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %di,%dx
		mov    %si,%ax
		call   _06dec4_func

	_06dbe6_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_06dbee_jump:
		cmp    $0x000001,%edx
		jne    _06dbe6_jump
		mov    _0dd2c4_data,%dx
		xor    %ecx,%ecx
		test   %dx,%dx
		jbe    _06dbe6_jump
		mov    %edi,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000008(%esp)

	_06dc0a_jump:
		xor    %esi,%esi
		mov    %cx,%si
		imul   $0x000018,%esi,%esi
		xor    %edx,%edx
		mov    _0db604_data(%esi),%dx
		test   %edx,%edx
		jne    _06dc4c_jump
		mov    _0c24ac_data,%edx
		sar    $0x000010,%edx
		xor    %ebx,%ebx
		add    %edx,%edx
		mov    %di,%bx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %dx,_0db60a_data(%esi)

	_06dc3d_jump:
		mov    _0dd2c4_data,%si
		inc    %ecx
		cmp    %si,%cx
		jae    _06dbe6_jump
		jmp    _06dc0a_jump

	_06dc4c_jump:
		xor    %ebx,%ebx
		mov    _0db608_data(%esi),%bl
		test   %ebx,%ebx
		jne    _06dc87_jump
		movzwl %di,%ebp
		mov    _0db60c_data(%esi),%bl
		mov    %ebp,%edx
		imul   %ebx,%edx
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0db60a_data(%esi)
		jmp    _06dc3d_jump

	_06dc87_jump:
		cmp    $0x000001,%ebx
		je     _06dc95_jump
		cmp    $0x000004,%ebx
		jne    _06dd51_jump

	_06dc95_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %esi,%esi
		xor    %edx,%edx
		mov    _0db618_data(%ebx),%si
		mov    _0db60d_data(%ebx),%dl
		add    %esi,%edx
		xor    %esi,%esi
		mov    %di,%si
		mov    %edx,%eax
		mov    %esi,%ebp
		sar    $0x00001f,%edx
		shl    $0x000004,%ebp
		idiv   %ebp
		mov    %dx,_0db618_data(%ebx)
		xor    %edx,%edx
		mov    _0db608_data(%ebx),%dl
		cmp    $0x000001,%edx
		jne    _06dced_jump
		xor    %edx,%edx
		mov    _0db618_data(%ebx),%dx
		sar    $0x000004,%edx
		mov    %dx,_0db60a_data(%ebx)
		jmp    _06dc3d_jump

	_06dced_jump:
		mov    %esi,%eax
		movzbl _0db60c_data(%ebx),%ebp
		imul   %ebp,%eax
		mov    _0c24ac_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dx,_0db60a_data(%ebx)
		xor    %edx,%edx
		mov    _0db618_data(%ebx),%dx
		mov    %edx,%esi
		xor    %edx,%edx
		sar    $0x000004,%esi
		mov    _0db60a_data(%ebx),%dx
		add    %esi,%edx
		mov    %dx,_0db60a_data(%ebx)
		mov    _0db60a_data(%ebx),%ax
		xor    %edx,%edx
		div    %di
		mov    %dx,_0db60a_data(%ebx)
		jmp    _06dc3d_jump

	_06dd51_jump:
		cmp    $0x000002,%ebx
		je     _06dd5f_jump
		cmp    $0x000005,%ebx
		jne    _06dc3d_jump

	_06dd5f_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		movzbl _0db60d_data(%edx),%esi
		mov    _0db618_data(%edx),%bx
		cmp    %ebx,%esi
		jle    _06dd88_jump
		mov    0x000008(%esp),%eax
		add    %eax,%ebx
		mov    %bx,_0db618_data(%edx)

	_06dd88_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0db60d_data(%ebx),%dl
		mov    _0db618_data(%ebx),%si
		sub    %edx,%esi
		xor    %edx,%edx
		mov    _0db608_data(%ebx),%dl
		mov    %si,_0db618_data(%ebx)
		cmp    $0x000002,%edx
		jne    _06ddc9_jump
		xor    %edx,%edx
		mov    %si,%dx
		sar    $0x000004,%edx
		mov    %dx,_0db60a_data(%ebx)
		jmp    _06dc3d_jump

	_06ddc9_jump:
		movzwl %di,%ebp
		movzbl _0db60c_data(%ebx),%esi
		mov    %ebp,%eax
		imul   %esi,%eax
		mov    _0c24ac_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0db60a_data(%ebx)
		xor    %edx,%edx
		mov    _0db618_data(%ebx),%dx
		mov    %edx,%esi
		xor    %edx,%edx
		sar    $0x000004,%esi
		mov    _0db60a_data(%ebx),%dx
		add    %esi,%edx
		mov    %dx,_0db60a_data(%ebx)
		mov    _0db60a_data(%ebx),%ax
		xor    %edx,%edx
		div    %di
		mov    %dx,_0db60a_data(%ebx)
		jmp    _06dc3d_jump



_06de30_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		mov    (%esp),%ebp
		mov    %dx,_0dd2c4_data
		xor    %ebx,%ebx
		jmp    _06dea2_jump

	_06de4b_jump:
		imul   $0x000018,%edx,%eax
		movw   $0x000001,_0db604_data(%eax)
		movb   $0x000002,_0db60c_data(%eax)
		xor    %ch,%ch
		mov    %ch,_0db60d_data(%eax)
		xor    %cl,%cl
		mov    %ch,_0db608_data(%eax)
		mov    %cx,_0db60a_data(%eax)
		mov    %cx,_0db618_data(%eax)
		xor    %ecx,%ecx
		mov    %si,%cx
		imul   %edx,%ecx
		imul   $0x000140,%edx,%edx
		mov    %bx,_0db606_data(%eax)
		add    %ebp,%ecx
		mov    %ecx,_0db610_data(%eax)
		add    %edi,%edx
		inc    %ebx
		mov    %edx,_0db614_data(%eax)

	_06dea2_jump:
		xor    %eax,%eax
		movswl %bx,%edx
		mov    _0dd2c4_data,%ax
		cmp    %eax,%edx
		jl     _06de4b_jump
		xor    %esi,%esi
		mov    %si,_0dd2c6_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_06dec4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,0x00000c(%esp)
		mov    %edx,(%esp)
		mov    %edx,%eax
		mov    _0c24ac_data,%edx
		sub    $0x0000c9,%eax
		sar    $0x000012,%edx
		cmp    %ax,%dx
		jle    _06deeb_jump
		mov    %eax,%edx

	_06deeb_jump:
		call   _06f654_func
		sub    _0c24ae_data,%ax
		add    %edx,%eax
		sub    $0x000014,%eax
		mov    %ax,0x000004(%esp)
		cmpb   $0x000000,_0c2612_data
		jne    _06df10_jump
		incb   _0db600_data

	_06df10_jump:
		xor    %eax,%eax
		mov    _0db600_data,%al
		cmp    $0x000010,%eax
		jne    _06df24_jump
		xor    %dh,%dh
		mov    %dh,_0db600_data

	_06df24_jump:
		mov    0x000004(%esp),%esi
		mov    $0x00005a,%ecx
		mov    _0db600_data,%bl
		jmp    _06df36_jump

	_06df35_jump:
		inc    %esi

	_06df36_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		movswl %si,%eax
		add    $0x00005a,%edx
		cmp    %edx,%eax
		jge    _06dfd2_jump
		xor    %edx,%edx
		mov    (%esp),%dx
		cmp    %edx,%eax
		jge    _06dfd2_jump
		dec    %ecx
		movswl %cx,%eax
		cmp    $0x000010,%eax
		jge    _06df67_jump
		mov    $0x000010,%ecx

	_06df67_jump:
		movswl %si,%ebp
		test   %ebp,%ebp
		jle    _06dfbc_jump
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0bcfc8_data(%edx),%dl
		and    $0x0000ff,%edx
		shl    $0x000004,%edx
		movswl %cx,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		imul   $0x000018,%ebp,%ebp
		xor    %edi,%edi
		mov    %ax,0x000008(%esp)
		mov    0x00000c(%esp),%di
		xor    %eax,%eax
		mov    0x000006(%esp),%edx
		mov    _0db60a_data(%ebp),%ax
		sar    $0x000010,%edx
		add    %edi,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %dx,_0db60a_data(%ebp)

	_06dfbc_jump:
		inc    %bl
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000010,%eax
		jne    _06df35_jump
		xor    %bl,%bl
		jmp    _06df35_jump

	_06dfd2_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06dfe0_func:
		push   %ebx
		push   %ecx
		mov    _0c13b8_data(%edx),%bl
		mov    _0c13b8_data(%eax),%cl
		mov    %bl,_0c13b8_data(%eax)
		mov    %cl,_0c13b8_data(%edx)
		pop    %ecx
		pop    %ebx
		ret    



_06e000_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x000001,%edx
		mov    _0c1b36_data,%esi
		xor    %ecx,%ecx
		xor    %ah,%ah
		mov    %dx,_0c13a2_data
		mov    %ah,_0c13c4_data
		sar    $0x000010,%esi
		mov    _0c1b34_data,%edx
		xor    %eax,%eax
		test   %esi,%esi
		jle    _06e086_jump
		jmp    _06e06c_jump

	_06e033_jump:
		cmp    $0x0000f8,%ebx
		jne    _06e043_jump
		mov    %ax,_0c13c2_data
		jmp    _06e061_jump

	_06e043_jump:
		cmp    $0x0000ea,%ebx
		jne    _06e061_jump
		xor    %ebx,%ebx
		mov    _0c13c4_data,%bl
		mov    %al,_0c13c8_data(%ebx)
		inc    %bl
		mov    %bl,_0c13c4_data

	_06e061_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %esi,%eax
		jge    _06e086_jump

	_06e06c_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000bc,%ebx
		jne    _06e033_jump
		inc    %ecx
		mov    0x000034(%edx),%bl
		mov    %bl,_0c13b7_data(%ecx)
		jmp    _06e061_jump

	_06e086_jump:
		mov    $0x000001,%edi

	_06e08b_jump:
		xor    %esi,%esi
		xor    %ebx,%ebx
		jmp    _06e097_jump

	_06e091_jump:
		inc    %ebx
		cmp    $0x000007,%ebx
		jge    _06e0d2_jump

	_06e097_jump:
		xor    %edx,%edx
		mov    _0c13b9_data(%ebx),%dl
		imul   $0x000084,%edx,%edx
		mov    _0c1b34_data,%eax
		lea    (%eax,%edx,1),%ecx
		xor    %edx,%edx
		mov    _0c13b8_data(%ebx),%dl
		imul   $0x000084,%edx,%edx
		mov    0x000028(%ecx),%ebp
		cmp    0x000028(%edx,%eax,1),%ebp
		jge    _06e091_jump
		lea    0x000001(%ebx),%edx
		mov    %ebx,%eax
		mov    %edi,%esi
		call   _06dfe0_func
		jmp    _06e091_jump

	_06e0d2_jump:
		test   %esi,%esi
		jne    _06e08b_jump
		cmpb   $0x000000,_0cdb18_data
		jne    _06e0e8_jump
		cmpb   $0x000000,_0c6970_data
		je     _06e0f1_jump

	_06e0e8_jump:
		movb   $0x000008,_0c13c0_data
		jmp    _06e113_jump

	_06e0f1_jump:
		mov    $0x0000b1,%eax
		call   _061dd0_func
		movswl %ax,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		shl    $0x000003,%edx
		mov    %dl,_0c13c0_data

	_06e113_jump:
		xor    %eax,%eax
		mov    _0c13c0_data,%al
		mov    _0921e0_data(%eax),%al
		and    $0x0000ff,%eax
		mov    _0c13b8_data(%eax),%al
		mov    $0x000020,%ebx
		mov    $0x000138,%ecx
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0c51c2_data
		mov    %ah,_0c13a6_data
		mov    %bx,_0c24e6_data
		mov    %cx,_0c25d0_data
		mov    %cx,_0c2524_data
		mov    %edx,_0dd2d4_data
		xor    %eax,%eax
		jmp    _06e1be_jump

	_06e164_jump:
		xor    %ecx,%ecx
		mov    _0c13c8_data(%eax),%cl
		imul   $0x000084,%ecx,%ecx
		mov    _0c24e6_data,%bx
		shl    $0x000004,%ebx
		mov    _0c1b34_data,%edx
		sub    $0x00003c,%ebx
		mov    %bx,0x00003e(%ecx,%edx,1)
		xor    %ebx,%ebx
		mov    _0c13c8_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    0x00003c(%edx,%ebx,1),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x00002c(%edx,%ebx,1)
		xor    %ebx,%ebx
		mov    _0c13c8_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    0x00003e(%edx,%ebx,1),%dx
		inc    %eax
		mov    %dx,_0dd2d0_data

	_06e1be_jump:
		xor    %edx,%edx
		mov    _0c13c4_data,%dl
		cmp    %edx,%eax
		jl     _06e164_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06e1d4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %dx,(%esp)
		mov    _0c1b34_data,%ebx
		mov    _0c1b38_data,%si
		xor    %edx,%edx
		xor    %eax,%eax

	_06e1f2_jump:
		xor    %ecx,%ecx
		mov    0x000060(%ebx),%cx
		cmp    $0x0000aa,%ecx
		jne    _06e20b_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _06e20b_jump
		mov    $0x000001,%edx

	_06e20b_jump:
		movswl %dx,%ecx
		add    $0x000084,%ebx
		inc    %eax
		test   %ecx,%ecx
		jne    _06e21e_jump
		cmp    %si,%ax
		jl     _06e1f2_jump

	_06e21e_jump:
		sub    $0x000084,%ebx
		test   %dx,%dx
		je     _06e27e_jump
		orb    $0x000004,0x000081(%ebx)
		mov    %ebx,%eax
		movl   $0x000001,0x000024(%ebx)
		call   _01f7d4_func
		movswl %di,%eax
		mov    0x000081(%ebx),%dl
		movw   $0x000000,0x000040(%ebx)
		and    $0x0000bf,%dl
		mov    %eax,0x000028(%ebx)
		mov    -0x000002(%esp),%eax
		mov    %dl,0x000081(%ebx)
		sar    $0x000010,%eax
		mov    $0x000003,%edx
		mov    %eax,0x00002c(%ebx)
		mov    %ebx,%eax
		movw   $0x000000,0x000042(%ebx)
		call   _01d6f0_func
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _01d6e8_func

	_06e27e_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06e288_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%ecx
		call   _0709ac_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _06e2cc_jump
		movswl %di,%eax
		add    $0x000040,%eax
		mov    %eax,0x000028(%edx)
		movswl %cx,%eax
		add    $0x000040,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f7d4_func
		movb   $0x000001,0x00007e(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000050(%edx)
		call   _01df3c_func

	_06e2cc_jump:
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %ax,%edx
		mov    %edi,%eax
		add    $0x00008c,%eax
		cwtl   
		call   _071164_func
		mov    $0x0000aa,%eax
		xor    %ebx,%ebx
		call   _01d398_func
		lea    0x000528(%eax),%edx

	_06e2f5_jump:
		cmpl   $0x000000,0x000024(%edx)
		jne    _06e302_jump
		mov    %edx,%eax
		call   _01f7d4_func

	_06e302_jump:
		mov    0x000081(%edx),%ah
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		movswl %di,%eax
		movb   $0x000003,0x00006d(%edx)
		add    $0x000008,%eax
		mov    %eax,0x000028(%edx)
		movswl %cx,%eax
		mov    %eax,0x00002c(%edx)
		movswl %bx,%eax
		movb   $0x000002,0x00006c(%edx)
		mov    _0bcfd8_data(,%eax,2),%si
		mov    %si,0x000040(%edx)
		add    $0x000084,%edx
		mov    _0bcfe8_data(,%eax,2),%ax
		inc    %ebx
		mov    %ax,-0x000042(%edx)
		movswl %bx,%eax
		movb   $0x000002,-0x000019(%edx)
		cmp    $0x000008,%eax
		jl     _06e2f5_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06e364_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpw   $0x000000,_0c13a0_data
		je     _06e4fd_jump
		mov    $0x000003,%ebx
		mov    _0c51c0_data,%edx
		mov    _0c1b34_data,%ecx
		sar    $0x000010,%edx
		mov    _0c13a0_data,%si
		mov    %edx,%eax
		mov    _0c13ae_data,%di
		shl    $0x000005,%eax
		dec    %esi
		add    %edx,%eax
		mov    %si,_0c13a0_data
		shl    $0x000002,%eax
		mov    _0c13b4_data,%si
		add    %eax,%ecx
		mov    _0c13ac_data,%ax
		mov    %bx,_0c13aa_data
		sub    %eax,%esi
		mov    _0c13b6_data,%bx
		movswl %si,%eax
		sub    %edi,%ebx
		test   %eax,%eax
		jge    _06e3d6_jump
		neg    %eax

	_06e3d6_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _06e3e3_jump
		neg    %eax

	_06e3e3_jump:
		add    %eax,%edi
		movswl %di,%eax
		cmp    $0x000008,%eax
		jge    _06e405_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6f0_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6e8_func

	_06e405_jump:
		movswl %di,%ebp
		test   %ebp,%ebp
		jle    _06e434_jump
		mov    _0c13aa_data,%cl
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    _0c13aa_data,%cl
		mov    %eax,%esi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_06e434_jump:
		xor    %eax,%eax
		mov    _0c24cc_data,%al
		test   %eax,%eax
		jne    _06e453_jump
		mov    _0c139e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000032,%eax
		jge    _06e453_jump
		mov    $0x000001,%eax
		jmp    _06e455_jump

	_06e453_jump:
		xor    %eax,%eax

	_06e455_jump:
		test   %ax,%ax
		je     _06e4aa_jump
		mov    _0c13ae_data,%edx
		movswl %si,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _06e476_jump
		mov    $0x000001,%eax
		jg     _06e476_jump
		neg    %eax

	_06e476_jump:
		mov    _0c13b0_data,%dx
		add    %eax,%edx
		mov    _0c13b0_data,%eax
		mov    %dx,_0c13b0_data
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _06e4a3_jump
		mov    $0x000001,%eax
		jg     _06e4a3_jump
		neg    %eax

	_06e4a3_jump:
		add    %ax,_0c13b2_data

	_06e4aa_jump:
		mov    _0c13b0_data,%ax
		mov    _0c13ac_data,%cx
		mov    _0c13ae_data,%si
		add    %eax,%ecx
		add    _0c13b2_data,%si
		xor    %eax,%eax
		mov    %cx,_0c13ac_data
		mov    _0c24cb_data,%al
		mov    %si,_0c13ae_data
		test   %eax,%eax
		jne    _06e4fd_jump
		movswl %di,%eax
		test   %eax,%eax
		je     _06e4fd_jump
		mov    _0c13ac_data,%edx
		mov    _0c13aa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _06e1d4_func

	_06e4fd_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06e504_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0c13a0_data,%dx
		test   %dx,%dx
		je     _06e729_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    _0c1f02_data,%ah
		mov    %bx,_0c13a0_data
		test   %ah,%ah
		je     _06e572_jump
		mov    $0x000003,%eax
		mov    _0c1ef0_data,%edx
		mov    %ax,_0c13aa_data
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x000068,%eax
		mov    %ax,_0c13b4_data
		xor    %eax,%eax
		mov    0x00002c(%edx),%cx
		mov    0x000074(%edx),%al
		add    %ecx,%eax
		sub    $0x000078,%eax
		mov    %ax,_0c13b6_data
		xor    %eax,%eax
		mov    _0c24ca_data,%al
		jmp    _06e5b6_jump

	_06e572_jump:
		mov    _0c1bb4_data,%al
		add    _0c1b74_data,%ax
		sub    $0x000078,%eax
		mov    %ax,_0c13b4_data
		xor    %eax,%eax
		mov    _0c1b78_data,%di
		mov    _0c1bb5_data,%al
		add    %edi,%eax
		sub    $0x00008c,%eax
		mov    %ax,_0c13b6_data
		xor    %eax,%eax
		mov    $0x000003,%ecx
		mov    _0c24d0_data,%al
		mov    %cx,_0c13aa_data

	_06e5b6_jump:
		test   %eax,%eax
		sete   %al
		xor    %ah,%ah
		mov    %eax,0x000004(%esp)
		mov    _0c13b6_data,%bx
		mov    _0c13ae_data,%si
		mov    _0c13ac_data,%di
		sub    %esi,%ebx
		mov    _0c13b4_data,%si
		sub    %edi,%esi
		movswl %si,%eax
		test   %eax,%eax
		jge    _06e5ea_jump
		neg    %eax

	_06e5ea_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _06e5f5_jump
		neg    %eax

	_06e5f5_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		mov    -0x000002(%esp),%edi
		sar    $0x000010,%edi
		test   %edi,%edi
		jle    _06e62e_jump
		mov    _0c13aa_data,%cl
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    _0c13aa_data,%cl
		mov    %eax,%esi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx

	_06e62e_jump:
		cmpw   $0x000000,0x000004(%esp)
		je     _06e67d_jump
		mov    _0c13ae_data,%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _06e653_jump
		mov    $0x000001,%eax
		jg     _06e653_jump
		neg    %eax

	_06e653_jump:
		add    %ax,_0c13b0_data
		mov    _0c13b0_data,%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _06e676_jump
		mov    $0x000001,%eax
		jg     _06e676_jump
		neg    %eax

	_06e676_jump:
		add    %ax,_0c13b2_data

	_06e67d_jump:
		mov    _0c13b0_data,%ax
		mov    _0c13ac_data,%cx
		mov    _0c13ae_data,%si
		add    %eax,%ecx
		mov    _0c13b2_data,%ax
		mov    %cx,_0c13ac_data
		add    %eax,%esi
		mov    _0c13aa_data,%eax
		sar    $0x000010,%eax
		mov    %si,_0c13ae_data
		cmp    $0xffffff6a,%eax
		jge    _06e6de_jump
		mov    _0c13b0_data,%di
		mov    %ecx,%edx
		neg    %edi
		add    %edi,%edx
		mov    %edx,%ebx
		mov    %dx,_0c13ac_data
		add    %edi,%ebx
		mov    %di,_0c13b0_data
		mov    %bx,_0c13ac_data

	_06e6de_jump:
		xor    %eax,%eax
		mov    _0c24cb_data,%al
		test   %eax,%eax
		jne    _06e70a_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _06e70a_jump
		mov    _0c13ac_data,%edx
		mov    _0c13aa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _06e1d4_func

	_06e70a_jump:
		mov    _0c139e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _06e729_jump
		mov    $0xffff8300,%ecx
		mov    %cx,_0c13ac_data
		mov    %cx,_0c13ae_data

	_06e729_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06e734_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%ebx
		incb   _0c13c0_data
		xor    %eax,%eax
		mov    _0c13c0_data,%al
		mov    _0921e0_data(%eax),%al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		mov    _0c13b8_data(%eax),%dl
		mov    %dx,_0c51c2_data
		xor    %edx,%edx
		mov    _0c13b8_data(%eax),%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0c139e_data,%edx
		sar    $0x000010,%edx
		cmp    $0x0000ff,%edx
		je     _06e797_jump
		movw   $0x00003c,_0c13a0_data

	_06e797_jump:
		mov    $0x000004,%esi
		xor    %edx,%edx
		mov    0x000028(%eax),%di
		mov    0x000068(%eax),%dl
		sub    $0x000050,%ecx
		add    %edi,%edx
		sub    $0x00000a,%ebx
		sub    $0x000078,%edx
		mov    %cx,_0c13ac_data
		mov    %dx,_0c13b4_data
		xor    %edx,%edx
		mov    %bx,_0c13ae_data
		mov    0x000074(%eax),%dl
		mov    0x00002c(%eax),%ax
		mov    %si,_0c13b2_data
		add    %edx,%eax
		mov    $0xfffffffc,%ecx
		sub    $0x000078,%eax
		mov    _0c13ac_data,%edx
		mov    %ax,_0c13b6_data
		mov    _0c13aa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %cx,_0c13b0_data
		call   _06e1d4_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06e808_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0c1f02_data
		je     _06e81e_jump
		mov    _0c1ef0_data,%eax
		jmp    _06e823_jump

	_06e81e_jump:
		mov    $_0c1b4c_data,%eax

	_06e823_jump:
		sub    $0x000050,%ebx
		sub    $0x00000a,%edx
		mov    %bx,_0c13ac_data
		mov    %dx,_0c13ae_data
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		mov    $0x000078,%ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    $0xfffffffc,%esi
		mov    %dx,_0c13b4_data
		xor    %edx,%edx
		mov    $0x000002,%edi
		mov    0x000074(%eax),%dl
		mov    0x00002c(%eax),%ax
		mov    %cx,_0c13a0_data
		add    %edx,%eax
		mov    %si,_0c13b0_data
		sub    %ecx,%eax
		mov    _0c13ac_data,%edx
		mov    %ax,_0c13b6_data
		mov    _0c13aa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0c13b2_data
		call   _06e1d4_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06e8a0_func:
		push   %ebx
		push   %edx
		mov    _0c13c0_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		orb    $0x000004,0x000081(%edx)
		mov    0x000028(%eax),%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%eax),%eax
		movw   $0x00ff80,0x000040(%edx)
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000042(%edx)
		call   _01df3c_func
		mov    %edx,%eax
		call   _01f7d4_func
		pop    %edx
		pop    %ebx
		ret    



_06e8f0_func:
		push   %edx
		mov    $0x000028,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0c1ba2_data
		pop    %edx
		ret    



_06e904_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c2524_data,%di
		mov    _0dd2d4_data,%ebp
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _06e959_jump
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _06e93c_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000009,%eax
		je     _06e959_jump

	_06e93c_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000003,%eax
		jne    _06e969_jump
		xor    %eax,%eax
		mov    _0c1bb8_data,%al
		cmp    $0x000017,%eax
		je     _06e959_jump
		cmp    $0x000036,%eax
		jne    _06e969_jump

	_06e959_jump:
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,_0c13a6_data
		mov    %edx,_0c139c_data

	_06e969_jump:
		test   %ebp,%ebp
		je     _06e98c_jump
		xor    %eax,%eax
		mov    _0c24cc_data,%al
		dec    %ebp
		cmp    $0x000002,%eax
		jl     _06e984_jump
		addw   $0x000002,_0c24ac_data
		jmp    _06e98c_jump

	_06e984_jump:
		subw   $0x000002,_0c24ac_data

	_06e98c_jump:
		cmpl   $0x000060,_0c139c_data
		jge    _06e9a1_jump
		xor    %eax,%eax
		mov    _0c13a6_data,%al
		cmp    $0x000001,%eax
		je     _06e9c1_jump

	_06e9a1_jump:
		cmpl   $0x0000c4,_0c139c_data
		jge    _06eb1f_jump
		xor    %eax,%eax
		mov    _0c13a6_data,%al
		cmp    $0x000002,%eax
		jne    _06eb1f_jump

	_06e9c1_jump:
		xor    %eax,%eax
		mov    _0c13a6_data,%al
		cmp    $0x000001,%eax
		jne    _06e9d8_jump
		xor    %eax,%eax
		mov    _0c24ca_data,%al
		test   %eax,%eax
		je     _06e9f7_jump

	_06e9d8_jump:
		xor    %eax,%eax
		mov    _0c13a6_data,%al
		cmp    $0x000002,%eax
		jne    _06eb1f_jump
		xor    %eax,%eax
		mov    _0c24cc_data,%al
		test   %eax,%eax
		jne    _06eb1f_jump

	_06e9f7_jump:
		xor    %eax,%eax
		mov    _0c24cc_data,%al
		cmp    $0x000002,%eax
		jl     _06ea0d_jump
		addw   $0x000003,_0c24ac_data
		jmp    _06ea15_jump

	_06ea0d_jump:
		subw   $0x000003,_0c24ac_data

	_06ea15_jump:
		mov    _0c25d0_data,%ax
		mov    _0c25ce_data,%dx
		dec    %edi
		cmp    %dx,%ax
		jle    _06ea32_jump
		mov    %eax,%ebx
		dec    %ebx
		mov    %bx,_0c25d0_data

	_06ea32_jump:
		incl   _0c139c_data
		testb  $0x00000f,_0c139c_data
		jne    _06ea48_jump
		decw   _0c24e6_data

	_06ea48_jump:
		xor    %edx,%edx
		jmp    _06ea6e_jump

	_06ea4c_jump:
		movswl %dx,%eax
		xor    %ebx,%ebx
		mov    _0c13c8_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    _0c1b34_data,%eax
		mov    0x00002c(%ebx,%eax,1),%ax
		inc    %edx
		mov    %ax,_0dd2d0_data

	_06ea6e_jump:
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    _0c13c4_data,%bl
		cmp    %ebx,%eax
		jge    _06eb1f_jump
		xor    %ecx,%ecx
		mov    _0c13c8_data(%eax),%cl
		imul   $0x000084,%ecx,%ecx
		mov    _0c1b34_data,%ebx
		decl   0x00002c(%ecx,%ebx,1)
		xor    %ecx,%ecx
		mov    _0c13c8_data(%eax),%cl
		imul   $0x000084,%ecx,%ecx
		movzbl _0c13a6_data,%esi
		decw   0x00003e(%ecx,%ebx,1)
		cmp    $0x000001,%esi
		jne    _06eaea_jump
		xor    %ecx,%ecx
		mov    _0c24d2_data,%cl
		test   %ecx,%ecx
		jne    _06eaea_jump
		mov    _0c13c8_data(%eax),%cl
		imul   $0x000084,%ecx,%ecx
		decl   0x00002c(%ecx,%ebx,1)
		mov    _0c13c8_data(%eax),%al
		and    $0x0000ff,%eax
		imul   $0x000084,%eax,%eax
		decw   0x00003e(%ebx,%eax,1)

	_06eaea_jump:
		movswl %dx,%eax
		mov    _0c13c8_data(%eax),%al
		and    $0x0000ff,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b34_data,%ebx
		add    %eax,%ebx
		movswl %di,%eax
		mov    0x00002c(%ebx),%ecx
		add    $0x000078,%eax
		cmp    %ecx,%eax
		jle    _06ea4c_jump
		mov    %eax,0x00002c(%ebx)
		jmp    _06ea4c_jump

	_06eb1f_jump:
		cmpl   $0x000060,_0c139c_data
		jne    _06eb49_jump
		xor    %eax,%eax
		mov    _0c13a6_data,%al
		cmp    $0x000001,%eax
		jne    _06eb49_jump
		xor    %ebp,%ebp
		xor    %dh,%dh
		mov    %ebp,_0c139c_data
		mov    %dh,_0c13a6_data
		mov    $0x00003c,%ebp

	_06eb49_jump:
		cmpl   $0x0000c4,_0c139c_data
		jne    _06eb76_jump
		xor    %eax,%eax
		mov    _0c13a6_data,%al
		cmp    $0x000002,%eax
		jne    _06eb76_jump
		mov    $0x00003c,%ebp
		xor    %edx,%edx
		xor    %bl,%bl
		mov    %edx,_0c139c_data
		mov    %bl,_0c13a6_data

	_06eb76_jump:
		mov    %ebp,_0dd2d4_data
		mov    %di,_0c2524_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06eb8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0c51c0_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006c(%eax),%dl
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		je     _06ed00_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ebc6_jump:
		mov    0x00006b(%ecx),%al
		cmp    $0x00001b,%eax
		jne    _06ed16_jump
		mov    _0c25f2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _06ed16_jump
		mov    $0x000001,%edx
		mov    _0c51c4_data,%si
		mov    0x00006c(%ebx),%al
		add    %edx,%esi
		mov    %dx,_0c25f4_data
		mov    %si,_0c51c4_data
		cmp    $0x000007,%eax
		jne    _06ec44_jump
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d6f0_func
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		incb   _0c13c0_data
		xor    %eax,%eax
		mov    _0c13c0_data,%al
		mov    _0921e0_data(%eax),%al
		and    $0x0000ff,%eax
		mov    _0c13b8_data(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0c51c2_data

	_06ec44_jump:
		mov    _0c51c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _06ec5f_jump
		mov    $0x000001,%ebx
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _056614_func

	_06ec5f_jump:
		mov    _0c51c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _06ed16_jump
		mov    $0x000001,%ebx
		mov    _0c51c6_data,%dx
		xor    %edi,%edi
		inc    %edx
		mov    %di,_0c51c4_data
		mov    %dx,_0c51c6_data
		mov    %eax,%edx
		mov    %ecx,%eax
		mov    %di,_0c51c8_data
		call   _056614_func
		decb   _0c13c0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06eca9_jump:
		mov    _0c13a2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _06ecd4_jump
		mov    $0x000008,%edx
		mov    %ecx,%eax
		mov    $0x000008,%ecx
		call   _01d6e8_func
		mov    %cx,_0c13a4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ecd4_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d6e8_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _056614_func
		movw   $0x000004,_0c13a4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ed00_jump:
		cmp    $0x000002,%dx
		jb     _06ed16_jump
		cmp    $0x000003,%dx
		jbe    _06eca9_jump
		cmp    $0x000004,%dx
		je     _06ebc6_jump

	_06ed16_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ed1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%dl
		mov    0x00006c(%ecx),%al
		test   %edx,%edx
		je     _06ede4_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ed3b_jump:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x00001b,%eax
		jne    _06edf0_jump
		mov    _0c25f2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _06edf0_jump
		mov    $0x000001,%edx
		mov    _0c51c4_data,%bx
		mov    _0c1bb9_data,%al
		add    %edx,%ebx
		mov    %dx,_0c25f4_data
		mov    %bx,_0c51c4_data
		cmp    $0x000005,%eax
		jne    _06ed9d_jump
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6f0_func
		mov    $0x000002,%edx
		mov    $_0c1b4c_data,%eax
		call   _01d6e8_func

	_06ed9d_jump:
		mov    _0c51c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _06edf0_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    _0c51c6_data,%di
		mov    %ecx,%eax
		xor    %esi,%esi
		inc    %edi
		mov    %si,_0c13a0_data
		mov    %di,_0c51c6_data
		call   _056614_func
		mov    %si,_0c51c4_data
		movb   $0x000000,0x00006b(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ede4_jump:
		cmp    $0x000004,%ax
		jb     _06edf0_jump
		jbe    _06ed3b_jump

	_06edf0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06edf8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%bl
		mov    0x00006c(%eax),%dl
		call   _06e364_func
		movswl %bx,%eax
		test   %eax,%eax
		je     _06ef06_jump
		cmp    $0x000001,%eax
		jne    _06ee39_jump
		movswl %dx,%eax
		cmp    $0x00000f,%eax
		jne    _06ee39_jump
		mov    _0c51c8_data,%dx
		cmp    0x000048(%ecx),%dx
		jne    _06ee39_jump
		movw   $0x000000,0x000048(%ecx)

	_06ee39_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ee3f_jump:
		xor    %edx,%edx
		mov    0x00006b(%ecx),%dl
		cmp    $0x00001b,%edx
		jne    _06ee39_jump
		mov    $0x000001,%dl
		mov    %ax,_0c51c4_data
		mov    %dl,_0c13a6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ee5d_jump:
		xor    %edx,%edx
		mov    0x00006b(%ecx),%dl
		cmp    $0x00001b,%edx
		jne    _06ee39_jump
		mov    $0x000001,%edi
		mov    %ax,_0c51c4_data
		mov    %di,_0c25f4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ee7f_jump:
		mov    _0c51c4_data,%dx
		mov    %edx,%eax
		inc    %eax
		test   %dx,%dx
		jbe    _06ee3f_jump
		cmp    $0x000001,%dx
		je     _06ee5d_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ee9a_jump:
		mov    0x00006b(%ecx),%al
		cmp    $0x000009,%eax
		jne    _06ee39_jump
		mov    _0c139e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _06ee39_jump
		mov    0x00002a(%ecx),%edx
		mov    0x000026(%ecx),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _06e734_func
		incw   _0c51c4_data
		mov    _0c51c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _06ee39_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _056614_func
		mov    _0c51c6_data,%si
		xor    %ecx,%ecx
		inc    %esi
		mov    %cx,_0c51c4_data
		mov    %si,_0c51c6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ef06_jump:
		cmp    $0x000004,%dx
		jb     _06ef1e_jump
		jbe    _06ee7f_jump
		cmp    $0x000007,%dx
		je     _06ee9a_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ef1e_jump:
		cmp    $0x000002,%dx
		jb     _06ee39_jump
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ef3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%bl
		mov    0x00006c(%eax),%dl
		call   _06e364_func
		movswl %bx,%eax
		test   %eax,%eax
		je     _06efe0_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ef5f_jump:
		xor    %edx,%edx
		mov    0x00006b(%ecx),%dl
		cmp    $0x00001b,%edx
		jne    _06effd_jump
		mov    _0c51c2_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jne    _06effd_jump
		mov    $0x000002,%dl
		mov    %ax,_0c51c4_data
		mov    %dl,_0c13a6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ef91_jump:
		mov    _0c51c2_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _06efb9_jump
		mov    $0x000001,%ebx
		mov    $0x00000b,%edx
		mov    %ax,_0c51c4_data
		mov    %ecx,%eax
		call   _056614_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06efb9_jump:
		cmp    $0x000002,%edx
		jne    _06effd_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d6f0_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		movw   $0x000003,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06efe0_jump:
		cmp    $0x000002,%dx
		jb     _06effd_jump
		mov    _0c51c4_data,%ax
		inc    %eax
		cmp    $0x000002,%dx
		jbe    _06ef91_jump
		cmp    $0x000004,%dx
		je     _06ef5f_jump

	_06effd_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f004_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _06f0d9_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000008,%eax
		jne    _06f054_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000041,%eax
		jne    _06f0d9_jump
		mov    %ecx,%eax
		mov    $0x000009,%edx
		call   _06e8a0_func
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d6e8_func
		mov    $0x000009,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f054_jump:
		cmp    $0x000009,%eax
		jne    _06f095_jump
		mov    _0c13c0_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		addw   $0x000002,0x000040(%edx,%eax,1)
		mov    0x00003e(%edx,%eax,1),%eax
		sar    $0x000010,%eax
		neg    %eax
		cmp    $0xffffff92,%eax
		jne    _06f0d9_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f095_jump:
		cmp    $0x00000a,%eax
		jne    _06f0d9_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000007,%eax
		jne    _06f0d9_jump
		mov    _0c13c0_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0c1b34_data,%eax
		movl   $0xffff8300,0x000028(%eax,%ecx,4)
		mov    0x000081(%eax,%ecx,4),%dl
		movl   $0xffff8300,0x00002c(%eax,%ecx,4)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax,%ecx,4)

	_06f0d9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f0e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    $0x000010,%ecx
		mov    $0xffffffff,%eax
		mov    _0c13ac_data,%di
		mov    _0c13ae_data,%bx
		xor    %edx,%edx
		add    $0x000078,%edi
		add    $0x000078,%ebx
		mov    0x00006d(%esi),%dl
		mov    %cx,(%esp)
		test   %edx,%edx
		jne    _06f11d_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x00000b,%edx
		je     _06f14a_jump

	_06f11d_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _06f12e_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x00000c,%edx
		je     _06f14a_jump

	_06f12e_jump:
		mov    -0x000002(%esp),%eax
		push   %esi
		movswl %cx,%ecx
		sar    $0x000010,%eax
		movswl %bx,%ebx
		push   %eax
		movswl %di,%edx
		mov    $0x000096,%eax
		call   _02a4bc_func

	_06f14a_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _06f1ce_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		mov    _0c13ac_data,%edx
		mov    _0c13aa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    $0xffff8300,%ebx
		call   _06e288_func
		mov    0x000076(%esi),%ah
		xor    %edi,%edi
		dec    %ah
		mov    %bx,_0c13ac_data
		mov    %ah,0x000076(%esi)
		xor    %eax,%eax
		mov    %bx,_0c13ae_data
		mov    0x000076(%esi),%al
		mov    %di,_0c13a0_data
		cmp    $0x000001,%eax
		jne    _06f1b2_jump
		mov    $0x00000d,%edx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _056614_func

	_06f1b2_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		jne    _06f1ce_jump
		mov    $0x00000c,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		movb   $0x000001,_0c25a1_data

	_06f1ce_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f1d8_func:
		push   %edx
		orb    $0x000040,_0c331c_data
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _06f20c_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00000c,%edx
		jne    _06f20c_jump
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		cmp    $0x00007f,%edx
		jl     _06f20c_jump
		mov    $0x000001,%dh
		movb   $0x000081,0x00006b(%eax)
		mov    %dh,_0c25a0_data
		call   _05759c_func

	_06f20c_jump:
		pop    %edx
		ret    

_06f210_switch:
		.long   _06f314_case
		.long   _06f324_case
		.long   _06f334_case
		.long   _06f344_case




_06f220_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		movzbw 0x00006c(%ecx),%di
		test   %eax,%eax
		jne    _06f296_jump
		movswl %di,%eax
		cmp    $0x000001,%eax
		jne    _06f296_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jne    _06f262_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000ac,%eax
		sar    $0x000010,%edx
		call   _068654_func

	_06f262_jump:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000032,%eax
		jne    _06f27c_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000ad,%eax
		sar    $0x000010,%edx
		call   _068654_func

	_06f27c_jump:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000064,%eax
		jne    _06f296_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000b1,%eax
		sar    $0x000010,%edx
		call   _068654_func

	_06f296_jump:
		mov    _0c251e_data,%edx
		sar    $0x000010,%edx
		cmp    $0x00000a,%edx
		jne    _06f354_jump
		mov    %ecx,%eax
		call   _02d750_func
		cmpw   $0x000000,_0c13a2_data
		jne    _06f2be_jump
		call   _06e000_func

	_06f2be_jump:
		mov    %ecx,%eax
		call   _06f004_func
		call   _06e904_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		mov    _0c1b74_data,%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jge    _06f2f7_jump
		mov    _0c25ae_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _06f2f7_jump
		mov    $0x000001,%eax
		mov    %ecx,%edx
		call   _02baec_func

	_06f2f7_jump:
		mov    _0c51c6_data,%ax
		cmp    $0x000003,%ax
		ja     _06f4cc_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_06f210_switch(,%eax,4)

	_06f314_case:
		mov    %ecx,%eax
		call   _06eb8c_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f324_case:
		mov    %ecx,%eax
		call   _06ed1c_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f334_case:
		mov    %ecx,%eax
		call   _06edf8_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f344_case:
		mov    %ecx,%eax
		call   _06ef3c_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f354_jump:
		cmp    $0x00000b,%edx
		jne    _06f4cc_jump
		cmpw   $0x000000,_0c13a2_data
		jne    _06f3ec_jump
		mov    $0x000001,%ah
		mov    _0c1b34_data,%edx
		mov    %ah,_0c25e1_data
		mov    0x000077(%ecx),%al
		mov    _0c1b38_data,%si
		mov    %al,0x000076(%ecx)
		xor    %eax,%eax
		test   %si,%si
		jg     _06f39b_jump
		jmp    _06f3af_jump

	_06f38f_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %si,%ax
		jge    _06f3af_jump

	_06f39b_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000f8,%ebx
		jne    _06f38f_jump
		mov    %ax,_0c13c2_data

	_06f3af_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _056614_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f0_func
		mov    $0x000005,%edx
		mov    %ecx,%eax
		mov    $0x000001,%esi
		call   _01d6e8_func
		mov    $0x000004,%eax
		mov    %si,_0c13a2_data
		mov    %ax,_0c51c6_data

	_06f3ec_jump:
		mov    %ecx,%eax
		call   _02d750_func
		call   _06e504_func
		mov    %ecx,%eax
		call   _06f004_func
		mov    %ecx,%eax
		call   _06f0e0_func
		mov    %ecx,%eax
		call   _06f1d8_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _06f4b6_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f425_jump:
		mov    0x00006b(%ecx),%al
		cmp    $0x000009,%eax
		jne    _06f4cc_jump
		mov    _0c139e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _06f4cc_jump
		mov    $0x0000ff,%edx
		mov    0x000026(%ecx),%eax
		mov    %dx,_0c13a0_data
		mov    0x00002a(%ecx),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		call   _06e808_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f467_jump:
		mov    _0c13a2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _06f495_jump
		mov    $0x000008,%edx
		mov    %ecx,%eax
		mov    $0x000008,%ecx
		call   _01d6e8_func
		mov    %cx,_0c13a4_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f495_jump:
		mov    $0x000005,%edx
		mov    %ecx,%eax
		mov    $0x000005,%ebx
		call   _01d6e8_func
		mov    %bx,_0c13a4_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f4b6_jump:
		cmp    $0x000002,%di
		jb     _06f4cc_jump
		cmp    $0x000003,%di
		jbe    _06f467_jump
		cmp    $0x000007,%di
		je     _06f425_jump

	_06f4cc_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f4d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %eax,%eax
		mov    _0c51c6_data,%dx
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%dx
		jae    _06f4f9_jump
		test   %dx,%dx
		je     _06f4fd_jump

	_06f4f9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f4fd_jump:
		movswl %bx,%edx
		test   %edx,%edx
		je     _06f553_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f508_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d6e8_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _056614_func
		xor    %edx,%edx
		mov    %dx,_0c51c4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f532_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d6e8_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f553_jump:
		test   %ax,%ax
		jbe    _06f508_jump
		cmp    $0x000002,%ax
		jb     _06f4f9_jump
		cmp    $0x000003,%ax
		jbe    _06f532_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f568_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %eax,%eax
		mov    _0c51c6_data,%dx
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%dx
		jb     _06f646_jump
		jbe    _06f619_jump
		pop    %ecx
		pop    %ebx
		ret    

	_06f590_jump:
		movswl %bx,%edx
		test   %edx,%edx
		je     _06f600_jump
		pop    %ecx
		pop    %ebx
		ret    

	_06f59a_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d6e8_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _056614_func
		movb   $0x000000,0x000073(%ecx)
		xor    %ebx,%ebx
		movb   $0x000051,0x00006b(%ecx)
		mov    %bx,_0c51c4_data
		pop    %ecx
		pop    %ebx
		ret    

	_06f5cb_jump:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000051,%eax
		jge    _06f64f_jump
		movb   $0x000051,0x00006b(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_06f5e0_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d6e8_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %ecx
		pop    %ebx
		ret    

	_06f600_jump:
		cmp    $0x000001,%ax
		jb     _06f611_jump
		jbe    _06f5cb_jump
		cmp    $0x000003,%ax
		jbe    _06f5e0_jump
		pop    %ecx
		pop    %ebx
		ret    

	_06f611_jump:
		test   %ax,%ax
		je     _06f59a_jump
		pop    %ecx
		pop    %ebx
		ret    

	_06f619_jump:
		movswl %bx,%edx
		test   %edx,%edx
		je     _06f62c_jump
		pop    %ecx
		pop    %ebx
		ret    

	_06f623_jump:
		movw   $0x000000,0x000048(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_06f62c_jump:
		addl   $0x000002,0x000028(%ecx)
		incw   _0c51c8_data
		cmp    $0x000002,%ax
		jb     _06f64f_jump
		cmp    $0x000003,%ax
		jbe    _06f623_jump
		pop    %ecx
		pop    %ebx
		ret    

	_06f646_jump:
		test   %dx,%dx
		je     _06f590_jump

	_06f64f_jump:
		pop    %ecx
		pop    %ebx
		ret    



_06f654_func:
		mov    _0dd2d0_data,%ax
		ret    



_06f660_func:
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0c474c_data,%eax
		jmp    _053248_jump



_06f678_func:
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0c474c_data,%eax
		jmp    _053208_jump



_06f690_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c51be_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06f72f_jump
		mov    _0c51c0_data,%dx
		inc    %edx
		mov    %dx,_0c51c0_data
		mov    _0c51be_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06f72f_jump
		mov    %edx,%ecx
		xor    %ebx,%ebx
		inc    %ecx
		mov    %bx,_0c24b8_data
		mov    %cx,_0c51c0_data
		call   _01cf4c_func
		cmpb   $0x000000,_0ce86d_data
		je     _06f6ea_jump
		mov    $0x000006,%eax
		call   _069584_jump

	_06f6ea_jump:
		mov    $_04f2a8_func,%eax
		call   _039544_func
		cmpb   $0x000000,_0ce86d_data
		je     _06f702_jump
		call   _0793e8_func

	_06f702_jump:
		call   _0394c8_func
		mov    _0c51b8_data,%al
		xor    %edx,%edx
		mov    %al,_0c24fe_data
		mov    %edx,_0c51b8_data
		mov    _0c251e_data,%edx
		mov    _0c2520_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _06f678_func

	_06f72f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f734_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax
		mov    _0c51bc_data,%al
		test   %eax,%eax
		jle    _06f796_jump
		cmpw   $0x000000,_0c51be_data
		jne    _06f796_jump
		cmpb   $0x000000,_0c24cc_data
		jne    _06f796_jump
		mov    %al,%dl
		dec    %dl
		mov    %dl,_0c51bc_data
		mov    _0c24fe_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    %dh,%al
		mov    %dh,_0c24fe_data
		cmp    $0x000063,%eax
		jle    _06f796_jump
		mov    %dh,%bl
		sub    $0x000064,%bl
		mov    %bl,_0c24fe_data
		call   _070c7c_func
		mov    %ax,_0c260c_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _06f796_jump
		call   _04d5a4_func

	_06f796_jump:
		pop    %edx
		pop    %ebx
		ret    



_06f79c_func:
		push   %edx
		xor    %eax,%eax

	_06f79f_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0c474b_data(%eax)
		cmp    $0x000018,%eax
		jl     _06f79f_jump
		pop    %edx
		ret    



_06f7b0_func:
		push   %edx
		mov    _0c1b74_data,%ax
		mov    %ax,_0c24ba_data
		mov    _0c1b78_data,%ax
		mov    %ax,_0c24bc_data
		mov    _0c24ac_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0c24b4_data
		mov    _0c24ae_data,%ax
		mov    %dx,_0c24b8_data
		mov    %ax,_0c24b6_data
		pop    %edx
		ret    

_06f7f0_switch:
		.long   _06f95c_case
		.long   _06fa14_case
		.long   _06faa2_case
		.long   _06fb15_case
		.long   _06fb6d_case
		.long   _06fb9c_case

_06f808_switch:
		.long   _06fda6_case
		.long   _070111_case
		.long   _06fdc4_case
		.long   _070111_case
		.long   _070111_case
		.long   _06fdee_case
		.long   _070111_case
		.long   _06fe0c_case
		.long   _070111_case
		.long   _06fe44_case
		.long   _070111_case
		.long   _070111_case
		.long   _06fcfc_case
		.long   _06fd06_case
		.long   _06fe6e_case

_06f844_switch:
		.long   _06fe9d_case
		.long   _070111_case
		.long   _06fec0_case
		.long   _06fede_case
		.long   _070111_case
		.long   _070111_case
		.long   _070111_case
		.long   _06ff08_case
		.long   _070111_case
		.long   _06ff26_case
		.long   _06fd06_case
		.long   _06fe6e_case

_06f874_switch:
		.long   _06ff69_case
		.long   _06ff87_case
		.long   _070111_case
		.long   _070111_case
		.long   _06ffaa_case
		.long   _070111_case
		.long   _06ffcd_case
		.long   _070111_case
		.long   _06ffeb_case
		.long   _07001c_case
		.long   _06fe6e_case

_06f8a0_switch:
		.long   _070052_case
		.long   _070111_case
		.long   _070111_case
		.long   _070111_case
		.long   _070111_case
		.long   _070111_case
		.long   _07009a_case
		.long   _070111_case
		.long   _070111_case
		.long   _0700bd_case
		.long   _06fd15_case

_06f8cc_switch:
		.long   _06fd24_case
		.long   _06fe7d_case
		.long   _06ff49_case
		.long   _07002b_case
		.long   _0700cc_case
		.long   _070105_case




_06f8e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0c2620_data,%bx
		mov    _0c251e_data,%cx
		mov    %eax,%esi
		mov    _0c24b6_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		test   %eax,%eax
		je     _06f922_jump
		call   _06f7b0_func
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _06fbcb_jump

	_06f922_jump:
		mov    _0c2522_data,%di
		mov    _0c251e_data,%cx
		dec    %edi
		mov    _0c2620_data,%bx
		cmp    $0x000005,%di
		ja     _070111_case
		xor    %eax,%eax
		mov    %di,%ax
		lea    0x000000(,%eax,4),%edi
		mov    _094bd4_data,%al
		or     $0x000004,%al
		jmp    *%cs:_06f8cc_switch(%edi)

	_06f95c_case:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _06f973_jump
		testb  $0x000001,_0c3314_data
		je     _06f973_jump
		inc    %ebx

	_06f973_jump:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _06f98a_jump
		testb  $0x000001,_0c331c_data
		je     _06f98a_jump
		inc    %ebx

	_06f98a_jump:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000007,%eax
		jne    _06f9a5_jump
		testb  $0x000002,_0c3314_data
		je     _06f9a5_jump
		mov    $0x000001,%ecx

	_06f9a5_jump:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000d,%eax
		jne    _06f9bc_jump
		testb  $0x000002,_0c331c_data
		je     _06f9bc_jump
		inc    %ebx

	_06f9bc_jump:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000f,%eax
		jne    _06f9d7_jump
		testb  $0x000002,_0c331c_data
		je     _06f9d7_jump
		mov    $0x000001,%ecx

	_06f9d7_jump:
		mov    _0c251e_data,%eax
		mov    %bx,_0c2620_data
		sar    $0x000010,%eax
		mov    %cx,_0c251e_data
		cmp    $0x000010,%eax
		jne    _06f922_jump
		testb  $0x000080,_0c3314_data
		je     _06f922_jump
		mov    $0x000001,%ecx
		mov    %cx,_0c251e_data
		jmp    _06f922_jump

	_06fa14_case:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _06fa2f_jump
		testb  $0x000001,_0c331d_data
		je     _06fa2f_jump
		mov    $0x000001,%ecx

	_06fa2f_jump:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _06fa4a_jump
		testb  $0x000004,_0c331c_data
		je     _06fa4a_jump
		mov    $0x000001,%ecx

	_06fa4a_jump:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jne    _06fa65_jump
		testb  $0x000004,_0c3314_data
		je     _06fa65_jump
		mov    $0x000001,%ecx

	_06fa65_jump:
		mov    _0c251e_data,%eax
		mov    %bx,_0c2620_data
		sar    $0x000010,%eax
		mov    %cx,_0c251e_data
		cmp    $0x00000e,%eax
		jne    _06f922_jump
		testb  $0x000004,_0c331c_data
		je     _06f922_jump
		mov    $0x000001,%ecx
		mov    %cx,_0c251e_data
		jmp    _06f922_jump

	_06faa2_case:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _06fabd_jump
		testb  $0x000008,_0c331c_data
		je     _06fabd_jump
		mov    $0x000001,%ecx

	_06fabd_jump:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _06fad8_jump
		testb  $0x000008,_0c331c_data
		je     _06fad8_jump
		mov    $0x000001,%ecx

	_06fad8_jump:
		mov    _0c251e_data,%eax
		mov    %bx,_0c2620_data
		sar    $0x000010,%eax
		mov    %cx,_0c251e_data
		cmp    $0x00000a,%eax
		jne    _06f922_jump
		testb  $0x000001,_0c3315_data
		je     _06f922_jump
		mov    $0x000001,%ecx
		mov    %cx,_0c251e_data
		jmp    _06f922_jump

	_06fb15_case:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _06fb30_jump
		testb  $0x000010,_0c331c_data
		je     _06fb30_jump
		mov    $0x000001,%ecx

	_06fb30_jump:
		mov    _0c251e_data,%eax
		mov    %bx,_0c2620_data
		sar    $0x000010,%eax
		mov    %cx,_0c251e_data
		cmp    $0x00000a,%eax
		jne    _06f922_jump
		testb  $0x000020,_0c331c_data
		je     _06f922_jump
		mov    $0x000001,%ecx
		mov    %cx,_0c251e_data
		jmp    _06f922_jump

	_06fb6d_case:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _06f922_jump
		testb  $0x000040,_0c331c_data
		je     _06f922_jump
		mov    $0x000001,%ecx
		mov    %cx,_0c251e_data
		jmp    _06f922_jump

	_06fb9c_case:
		mov    _0c251e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _06f922_jump
		testb  $0x000080,_0c331c_data
		je     _06f922_jump
		mov    $0x000001,%ecx
		mov    %cx,_0c251e_data
		jmp    _06f922_jump

	_06fbcb_jump:
		mov    _0c2522_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _06f922_jump
		mov    _0c251e_data,%cx
		mov    _0c2620_data,%bx
		and    $0x00ffff,%eax
		jmp    *%cs:_06f7f0_switch(,%eax,4)

	_06fbf7_jump:
		mov    0x000060(%esi),%si
		and    $0x00ffff,%esi
		cmp    $0x000005,%esi
		jne    _070111_case
		mov    $0x000015,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06fc19_jump:
		mov    0x000060(%esi),%si
		and    $0x00ffff,%esi
		cmp    $0x000005,%esi
		jne    _06fc37_jump
		mov    $0x000014,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06fc37_jump:
		mov    _094a30_data,%al
		and    $0x000001,%al
		movzbl %al,%esi
		mov    $0x000001,%ecx
		test   %esi,%esi
		jne    _070111_case
		orb    $0x000004,_094a30_data
		orb    $0x000004,_094b84_data
		jmp    _070111_case

	_06fc61_jump:
		mov    _094a44_data,%al
		and    $0x000001,%al
		movzbl %al,%esi
		mov    $0x000001,%ecx
		test   %esi,%esi
		jne    _06fc7b_jump
		orb    $0x000004,_094a44_data

	_06fc7b_jump:
		mov    _094a6c_data,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _070111_case
		orb    $0x000004,_094a6c_data
		jmp    _070111_case

	_06fc99_jump:
		mov    0x000060(%esi),%si
		and    $0x00ffff,%esi
		cmp    $0x000005,%esi
		jne    _06fcb7_jump
		mov    $0x000012,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06fcb7_jump:
		mov    _094a58_data,%al
		and    $0x000001,%al
		movzbl %al,%esi
		mov    $0x000001,%ecx
		test   %esi,%esi
		jne    _070111_case
		orb    $0x000004,_094a58_data
		jmp    _070111_case

	_06fcda_jump:
		mov    0x000060(%esi),%si
		and    $0x00ffff,%esi
		cmp    $0x000005,%esi
		jne    _070111_case
		mov    $0x000013,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06fcfc_case:
		mov    $0x000001,%ecx
		jmp    _070111_case

	_06fd06_case:
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06fd15_case:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06fd24_case:
		mov    _0c2520_data,%ax
		mov    %eax,%edi
		cmp    $0x00000c,%ax
		jb     _06fd6c_jump
		jbe    _06fcda_jump
		cmp    $0x000013,%ax
		jb     _06fd51_jump
		jbe    _070061_jump
		cmp    $0x000014,%ax
		jbe    _06fd06_case
		cmp    $0x000015,%ax
		je     _06fd15_case
		jmp    _070111_case

	_06fd51_jump:
		cmp    $0x000011,%ax
		jb     _070111_case
		jbe    _06fcfc_case
		mov    $0x00000b,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06fd6c_jump:
		cmp    $0x000004,%ax
		jb     _06fd97_jump
		jbe    _06fc19_jump
		cmp    $0x000008,%ax
		jb     _070111_case
		jbe    _06fc61_jump
		cmp    $0x00000b,%ax
		je     _06fc99_jump
		jmp    _070111_case

	_06fd97_jump:
		cmp    $0x000002,%ax
		je     _06fbf7_jump
		jmp    _070111_case

	_06fda6_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _070111_case
		mov    $0x000011,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06fdc4_case:
		mov    _094a80_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _070111_case
		orb    $0x000004,_094a80_data
		orb    $0x000004,_094b98_data
		jmp    _070111_case

	_06fdee_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _070111_case
		mov    $0x000012,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06fe0c_case:
		mov    _094a94_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _06fe26_jump
		orb    $0x000004,_094a94_data

	_06fe26_jump:
		mov    _094abc_data,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _070111_case
		orb    $0x000004,_094abc_data
		jmp    _070111_case

	_06fe44_case:
		mov    _094aa8_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _070111_case
		orb    $0x000004,_094aa8_data
		orb    $0x000004,_094bac_data
		jmp    _070111_case

	_06fe6e_case:
		mov    $0x000009,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06fe7d_case:
		mov    _0c2520_data,%ax
		sub    $0x000004,%eax
		cmp    $0x00000e,%ax
		ja     _070111_case
		and    $0x00ffff,%eax
		jmp    *%cs:_06f808_switch(,%eax,4)

	_06fe9d_case:
		mov    _094ad0_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _070111_case
		orb    $0x000004,_094ad0_data
		jmp    _070111_case

	_06fec0_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _070111_case
		mov    $0x00000c,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06fede_case:
		mov    _094ae4_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _070111_case
		orb    $0x000004,_094ae4_data
		orb    $0x000004,_094bc0_data
		jmp    _070111_case

	_06ff08_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _070111_case
		mov    $0x00000d,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06ff26_case:
		mov    _094af8_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _070111_case
		orb    $0x000004,_094af8_data
		jmp    _070111_case

	_06ff49_case:
		mov    _0c2520_data,%ax
		sub    $0x000002,%eax
		cmp    $0x00000b,%ax
		ja     _070111_case
		and    $0x00ffff,%eax
		jmp    *%cs:_06f844_switch(,%eax,4)

	_06ff69_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _070111_case
		mov    $0x00000c,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06ff87_case:
		mov    _094b0c_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _070111_case
		orb    $0x000004,_094b0c_data
		jmp    _070111_case

	_06ffaa_case:
		mov    _094b20_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _070111_case
		orb    $0x000004,_094b20_data
		jmp    _070111_case

	_06ffcd_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _070111_case
		mov    $0x00000d,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_06ffeb_case:
		mov    _094b34_data,%ah
		and    $0x000001,%ah
		mov    $0x000001,%ecx
		movzbl %ah,%esi
		test   %esi,%esi
		jne    _070111_case
		movb   $0x000001,_0cd10f_data
		orb    $0x000004,_094b34_data
		mov    %al,_094bd4_data
		jmp    _070111_case

	_07001c_case:
		mov    $0x000003,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_07002b_case:
		mov    _0c2520_data,%di
		sub    $0x000003,%edi
		mov    %edi,0x000004(%esp)
		cmp    $0x00000a,%di
		ja     _070111_case
		xor    %edi,%edi
		mov    0x000004(%esp),%di
		jmp    *%cs:_06f874_switch(,%edi,4)

	_070052_case:
		mov    0x000060(%esi),%si
		and    $0x00ffff,%esi
		cmp    $0x000005,%esi
		jne    _070070_jump

	_070061_jump:
		mov    $0x00000c,%ebx
		mov    $0x000001,%edx
		jmp    _070111_case

	_070070_jump:
		mov    _094b48_data,%ah
		and    $0x000001,%ah
		mov    $0x000001,%ecx
		movzbl %ah,%esi
		test   %esi,%esi
		jne    _070111_case
		orb    $0x000004,_094b48_data
		mov    %al,_094bd4_data
		jmp    _070111_case

	_07009a_case:
		mov    _094b5c_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _070111_case
		orb    $0x000004,_094b5c_data
		orb    $0x000004,_094be8_data
		jmp    _070111_case

	_0700bd_case:
		mov    $0x000001,%ah
		mov    $0x000001,%ecx
		mov    %ah,_0cd10f_data
		jmp    _070111_case

	_0700cc_case:
		mov    _0c2520_data,%di
		sub    $0x000002,%edi
		mov    %edi,(%esp)
		cmp    $0x00000a,%di
		ja     _070111_case
		xor    %edi,%edi
		mov    (%esp),%di
		jmp    *%cs:_06f8a0_switch(,%edi,4)

	_0700ed_jump:
		mov    $0x000001,%al
		mov    $0x000001,%ecx
		mov    %al,_0cd10e_data
		mov    %al,_0cd119_data
		mov    %al,_0c2595_data
		jmp    _070111_case

	_070105_case:
		mov    _0c2520_data,%ax
		cmp    $0x000004,%ax
		je     _0700ed_jump

	_070111_case:
		mov    _094b70_data,%al
		and    $0x000001,%al
		movzbl %al,%esi
		test   %esi,%esi
		jne    _070132_jump
		movzbl _0c3311_data,%esi
		cmp    $0x000066,%esi
		jl     _070132_jump
		orb    $0x000004,_094b70_data

	_070132_jump:
		test   %cx,%cx
		jne    _07013d_jump
		test   %dx,%dx
		jne    _07013d_jump
		inc    %ebx

	_07013d_jump:
		movw   $0x000001,_0c251c_data
		mov    %cx,_0c251e_data
		mov    %bx,_0c2620_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070160_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _070190_jump
		jmp    _07023f_jump

	_070180_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _07023f_jump

	_070190_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000013,%edx
		jne    _070180_jump
		mov    0x000024(%ecx),%edx
		test   %edx,%edx
		jne    _070180_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		call   _04abbc_func
		cmpl   $0x000000,0x000024(%ecx)
		je     _0701bd_jump
		mov    %ecx,%eax
		call   _01f7d4_func

	_0701bd_jump:
		mov    0x000028(%esi),%edi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    0x000068(%ecx),%al
		add    %edi,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		xor    %edx,%edx
		mov    0x000062(%esi),%dl
		cmp    $0x00000a,%edx
		jne    _0701ec_jump
		xor    %edx,%edx
		mov    0x00002c(%esi),%eax
		mov    0x000069(%esi),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%ecx),%dl
		jmp    _07021d_jump

	_0701ec_jump:
		testb  $0x000002,_0921f8_data(%edx)
		jne    _07020a_jump
		mov    _0c24e4_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		shl    $0x000004,%eax
		mov    0x000069(%ecx),%dl
		sub    $0x000010,%eax
		jmp    _07021d_jump

	_07020a_jump:
		mov    _0c24e4_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		shl    $0x000004,%eax
		mov    0x000069(%ecx),%dl
		sub    $0x000006,%eax

	_07021d_jump:
		sub    %edx,%eax
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01df3c_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		movb   $0x000000,0x00006b(%ecx)
		orb    $0x000040,0x000081(%esi)

	_07023f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070248_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		mov    (%ebx),%ebx
		shl    $0x000003,%eax
		mov    0x000060(%edx),%dx
		add    %ebx,%eax
		and    $0x00ffff,%edx
		cmp    $0x00000f,%edx
		jne    _07028c_jump
		mov    0x000005(%eax),%dh
		movb   $0x0000ff,0x000001(%eax)
		and    $0x00000f,%dh
		movb   $0x000001,(%eax)
		mov    %dh,%bl
		or     $0x0000a0,%bl
		mov    %bl,0x000005(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_07028c_jump:
		cmp    $0x00000d,%edx
		jne    _0702a1_jump
		movb   $0x0000fe,0x000001(%eax)
		mov    0x000005(%eax),%dl
		movb   $0x000002,(%eax)
		and    $0x00000f,%dl
		mov    %dl,0x000005(%eax)

	_0702a1_jump:
		pop    %edx
		pop    %ebx
		ret    



_0702a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _07046e_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000b,%eax
		jne    _07046e_jump
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _070485_jump
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _0702fc_jump
		jmp    _070461_jump

	_0702ec_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _070461_jump

	_0702fc_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00000d,%edx
		je     _07030c_jump
		cmp    $0x00000f,%edx
		jne    _0702ec_jump

	_07030c_jump:
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0702ec_jump
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    $0x000002,%ebx
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f7d4_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000012(%eax),%al
		mov    %al,0x00006a(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    0x000081(%ecx),%bl
		sub    %eax,%edx
		test   $0x000008,%bl
		je     _070387_jump
		mov    $0x000040,%eax
		jmp    _07038c_jump

	_070387_jump:
		mov    $0xffffffc0,%eax

	_07038c_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		call   _01df3c_func
		mov    0x000032(%ecx),%edx
		mov    $0x000018,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _0703df_jump
		mov    $0x000003,%edx
		mov    %eax,%ebx
		mov    %ecx,%eax
		jmp    _0703e8_jump

	_0703df_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_0703e8_jump:
		call   _056614_func
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00000e,%eax
		jne    _07044e_jump
		mov    _0c1b74_data,%ebx
		mov    0x000028(%esi),%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jge    _070409_jump
		neg    %eax

	_070409_jump:
		sar    $0x000005,%eax
		movw   $0x00000f,0x000060(%ecx)
		mov    %eax,%edi
		mov    0x00002c(%esi),%ebp
		mov    _0c1b78_data,%eax
		sub    %ebp,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0c1b74_data,%ebx
		mov    0x000028(%esi),%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jge    _070436_jump
		neg    %eax

	_070436_jump:
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %di,%edx
		movb   $0x00000a,0x000072(%ecx)
		sub    %edx,%eax
		mov    %ax,0x000042(%ecx)
		jmp    _07045a_jump

	_07044e_jump:
		movw   $0x00000d,0x000060(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_07045a_jump:
		mov    %ecx,%eax
		call   _01df3c_func

	_070461_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07046e_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _070485_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _070485_jump
		movw   $0x000000,0x000052(%esi)

	_070485_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07048c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    0x000032(%eax),%eax
		mov    _0c1b30_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%ebx),%ax
		je     _07050b_jump
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x000081(%edx),%ah
		movw   $0x000018,0x000060(%edx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%edx)
		xor    %eax,%eax
		mov    0x00002c(%edx),%cx
		mov    0x000069(%edx),%al
		mov    0x00002c(%ebx),%si
		add    %eax,%ecx
		xor    %eax,%eax
		sub    %esi,%ecx
		mov    0x000069(%ebx),%al
		sub    %eax,%ecx
		movswl %cx,%ebx
		test   %ebx,%ebx
		setle  %bl
		and    $0x0000ff,%ebx
		add    $0x000003,%ebx
		movswl %cx,%eax
		mov    %bl,0x000070(%edx)
		test   %eax,%eax
		jge    _070507_jump
		neg    %eax

	_070507_jump:
		mov    %ax,0x000048(%edx)

	_07050b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070510_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0c1b34_data,%eax
		mov    _0c1b38_data,%si
		xor    %dl,%dl
		xor    %ebx,%ebx
		test   %si,%si
		jg     _07053b_jump
		jmp    _070577_jump

	_070530_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jge    _070577_jump

	_07053b_jump:
		xor    %ecx,%ecx
		mov    0x000060(%eax),%cx
		cmp    $0x000027,%ecx
		jne    _070530_jump
		xor    %ecx,%ecx
		mov    %dl,%cl
		lea    0x000000(,%ecx,2),%edi
		mov    0x000034(%eax),%cx
		mov    %cx,(%esp,%edi,1)
		mov    0x000024(%eax),%ecx
		inc    %dl
		test   %ecx,%ecx
		jne    _07056a_jump
		movw   $0x00000a,0x000056(%eax)
		jmp    _07056e_jump

	_07056a_jump:
		incw   0x000056(%eax)

	_07056e_jump:
		xor    %ecx,%ecx
		mov    %dl,%cl
		cmp    $0x000002,%ecx
		jl     _070530_jump

	_070577_jump:
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%ebx
		mov    (%esp),%esi
		lea    (%eax,%ebx,1),%ebp
		mov    %esi,%edx
		xor    %al,%al
		jmp    _0705a3_jump

	_070599_jump:
		inc    %al
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    (%esp,%ebx,2),%dx

	_0705a3_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000002,%ebx
		jge    _0705d8_jump
		movswl %dx,%ecx
		imul   $0x000084,%ecx,%ecx
		movswl %si,%edi
		imul   $0x000084,%edi,%edi
		mov    _0c1b34_data,%ebx
		add    %ebx,%ecx
		add    %ebx,%edi
		mov    0x000056(%ecx),%bx
		cmp    0x000056(%edi),%bx
		jle    _070599_jump
		mov    %edx,%esi
		mov    %ecx,%ebp
		jmp    _070599_jump

	_0705d8_jump:
		mov    %ebp,%eax
		movw   $0x000001,0x000056(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0705ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		cmpl   $0x000001,_0dd2d8_data
		je     _070602_jump
		xor    %ebx,%ebx
		mov    %ebx,_0dd2d8_data

	_070602_jump:
		xor    %eax,%eax
		mov    _0c1bb6_data,%al
		lea    0x000000(,%eax,4),%ecx
		sub    %eax,%ecx
		mov    _0c1b50_data,%eax
		mov    0x00000a(%eax,%ecx,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1bb7_data,%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _0706d8_jump
		cmpl   $0x000000,_0dd2d8_data
		jne    _0706e0_jump
		call   _070510_func
		mov    0x000024(%eax),%edi
		mov    %eax,%ecx
		test   %edi,%edi
		je     _070654_jump
		call   _070a70_func
		jmp    _070659_jump

	_070654_jump:
		call   _01f7d4_func

	_070659_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000026,%ebx
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01d6f8_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    (%eax),%eax
		mov    0x000132(%eax),%al
		mov    _0c1b74_data,%ebp
		mov    %al,0x00006a(%ecx)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c1bb4_data,%al
		mov    0x000068(%ecx),%dl
		add    %ebp,%eax
		sub    %edx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		mov    _0c1b78_data,%edx
		mov    _0c1bb5_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01df3c_func
		movl   $0x000001,_0dd2d8_data
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0706d8_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0dd2d8_data

	_0706e0_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0706e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %edi,%edi
		xor    %eax,%eax
		test   %bx,%bx
		jg     _07071a_jump
		jmp    _0707a7_jump

	_07070a_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _0707a7_jump

	_07071a_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000053,%edx
		jne    _07070a_jump
		mov    0x000024(%ecx),%edx
		test   %edx,%edx
		jne    _07070a_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		mov    0x000081(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01f7d4_func
		mov    0x000068(%esi),%dl
		mov    0x000028(%esi),%edi
		add    %edx,%edi
		xor    %edx,%edx
		mov    0x000068(%ecx),%dl
		sub    %edx,%edi
		xor    %edx,%edx
		mov    %edi,0x000028(%ecx)
		mov    0x000069(%esi),%dl
		mov    0x00002c(%esi),%ebx
		movzbl 0x000069(%ecx),%esi
		add    %ebx,%edx
		sub    %esi,%edx
		add    $0x00000a,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01df3c_func
		movzbl 0x00006d(%ecx),%esi
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%esi
		add    %edx,%esi
		xor    %edx,%edx
		mov    (%esi),%esi
		mov    0x00006c(%ecx),%dl
		mov    0x000002(%esi,%edx,8),%al
		movb   $0x000000,0x00006b(%ecx)
		movb   $0x000002,0x000073(%ecx)
		mov    %ecx,%edi
		mov    %al,0x00006a(%ecx)

	_0707a7_jump:
		mov    %edi,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0707b0_func:
		push   %edx
		mov    %eax,%edx
		call   _0706e8_func
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%edx)
		pop    %edx
		ret    



_0707d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _0707fb_jump
		jmp    _07086e_jump

	_0707ef_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _07086e_jump

	_0707fb_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00008b,%edx
		jne    _0707ef_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0707ef_jump
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000042(%ecx)
		and    $0x0000f7,%ah
		movw   $0x000000,0x000040(%ecx)
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000028(%esi),%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01df3c_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f7d4_func
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000007,0x000072(%ecx)

	_07086e_jump:
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _056614_func
		xor    %edx,%edx
		mov    0x000070(%esi),%dl
		cmp    $0x000014,%edx
		jne    _070899_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%esi)

	_070899_jump:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0708ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0c1b74_data,%ax
		mov    0x000028(%edx),%bx
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		mov    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0c1bb4_data,%bl
		mov    0x00002c(%edx),%cx
		add    %ebx,%eax
		mov    _0c1b78_data,%bx
		mov    0x000069(%edx),%dl
		sub    %ecx,%ebx
		xor    %dh,%dh
		sub    %edx,%ebx
		mov    _0c1bb5_data,%dl
		movswl %ax,%ecx
		add    %ebx,%edx
		test   %ecx,%ecx
		setg   %bl
		movswl %dx,%ecx
		test   %ecx,%ecx
		setg   %bh
		test   %bl,%bl
		jne    _070904_jump
		neg    %eax

	_070904_jump:
		test   %bh,%bh
		jne    _07090a_jump
		neg    %edx

	_07090a_jump:
		movswl %ax,%ecx
		cmp    $0x0000c8,%ecx
		jle    _07091e_jump
		mov    %ecx,%eax
		movswl %dx,%edx
		sar    %eax
		sar    %edx

	_07091e_jump:
		movswl %dx,%ecx
		test   %ecx,%ecx
		jne    _07093b_jump
		test   %bl,%bl
		je     _070932_jump
		mov    $0x000180,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_070932_jump:
		mov    $0x000080,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07093b_jump:
		cmp    %ax,%dx
		jle    _070956_jump
		movswl %ax,%edx
		shl    $0x000006,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		cwtl   
		mov    _0949d0_data(%eax),%al
		jmp    _070972_jump

	_070956_jump:
		mov    %ecx,%edx
		shl    $0x000006,%edx
		movswl %ax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		cwtl   
		mov    $0x000080,%dl
		mov    _0949d0_data(%eax),%dh
		mov    %dl,%al
		sub    %dh,%al

	_070972_jump:
		test   %bl,%bl
		je     _07098c_jump
		test   %bh,%bh
		je     _070981_jump
		mov    $0x000180,%edx
		jmp    _0709a0_jump

	_070981_jump:
		xor    %ah,%ah
		add    $0x000180,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07098c_jump:
		test   %bh,%bh
		je     _07099b_jump
		xor    %ah,%ah
		add    $0x000080,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07099b_jump:
		mov    $0x000080,%edx

	_0709a0_jump:
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0709ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c1b44_data,%edx
		movswl (%edx),%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%edx
		xor    %ebx,%ebx
		add    %edx,%ecx
		mov    _0c1b48_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jg     _070a03_jump
		jmp    _070a66_jump

	_0709e0_jump:
		inc    %eax
		mov    _0c1b44_data,%edx
		movswl %ax,%ecx
		movswl (%edx,%ecx,2),%ecx
		imul   $0x000084,%ecx,%edx
		mov    _0c1b34_data,%ecx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _070a0a_jump
		jmp    _070a66_jump

	_070a03_jump:
		mov    _0c1b48_data,%si

	_070a0a_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00008f,%edx
		jne    _0709e0_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0709e0_jump
		mov    $0x000014,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01f7d4_func
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		lea    (%ebx,%edx,1),%eax
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		lea    0x000000(,%edx,8),%ebx
		mov    (%eax),%edx
		mov    0x000002(%edx,%ebx,1),%al
		movb   $0x000000,0x00006b(%ecx)
		mov    %ecx,%ebx
		mov    %al,0x00006a(%ecx)

	_070a66_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070a70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _0709ac_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _070b29_jump
		mov    0x000028(%edi),%edx
		mov    %edx,0x000028(%eax)
		mov    0x00002c(%edi),%edx
		mov    %edx,0x00002c(%eax)
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000008(%esp),%ebx
		lea    0x00001c(%esp),%edx
		call   _01d610_func
		lea    0x000014(%esp),%edx
		lea    0x000010(%esp),%ecx
		mov    %esp,%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000020(%esp),%edx
		call   _01d610_func
		movl   $0x000001,0x000024(%esi)
		mov    0x00000e(%esp),%edx
		mov    0x00001a(%esp),%ebx
		mov    0x000006(%esp),%ecx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		sar    $0x000011,%ecx
		add    %edx,%ebx
		mov    0x000016(%esp),%edx
		sar    $0x000010,%edx
		add    %ecx,%edx
		sub    %edx,%ebx
		add    %ebx,0x000028(%esi)
		mov    0x000012(%esp),%edx
		mov    -0x000002(%esp),%ebx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		lea    (%ebx,%edx,1),%ecx
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ebx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		movb   $0x000001,0x00007e(%esi)
		add    %ebx,%edx
		mov    0x00002c(%esi),%ebx
		sub    %edx,%ecx
		movw   $0x000000,0x000050(%esi)
		add    %ecx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01df3c_func

	_070b29_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_070b34_switch:
		.long   _070b61_case
		.long   _070b5f_case
		.long   _070bad_case
		.long   _070baf_case
		.long   _070bb3_case




_070b48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    %dx,0x000018(%esp)
		jmp    _070b8e_jump

	_070b5f_case:
		mov    %ebx,%eax

	_070b61_case:
		cwtl   
		mov    0x000028(%edi),%ebx
		mov    0x00002c(%edi),%ecx
		add    %eax,%ebx
		movswl %dx,%eax
		add    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		imul   $0x000005,0x000018(%esp),%eax
		movb   $0x000000,0x00007e(%edi)
		mov    %ax,0x000050(%edi)
		mov    %edi,%eax
		mov    %ebx,0x000028(%edi)
		call   _01df3c_func

	_070b89_jump:
		incw   0x000018(%esp)

	_070b8e_jump:
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jg     _070c6f_jump
		call   _0709ac_func
		mov    %eax,%esi
		mov    %eax,%edi
		test   %eax,%eax
		jne    _070bcb_jump
		jmp    _070b89_jump

	_070bad_case:
		mov    %ebx,%eax

	_070baf_case:
		mov    %ecx,%edx
		jmp    _070b61_case

	_070bb3_case:
		mov    0x00001e(%esp),%ebx
		cwtl   
		sar    $0x000011,%ebx
		add    %ebx,%eax
		mov    0x00000e(%esp),%ebx
		movswl %dx,%edx
		sar    $0x000011,%ebx
		add    %ebx,%edx
		jmp    _070b61_case

	_070bcb_jump:
		mov    0x000028(%ebp),%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%ebp),%eax
		lea    0x000014(%esp),%ecx
		mov    %eax,0x00002c(%esi)
		mov    %esp,%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		lea    0x000010(%esp),%eax
		lea    0x000020(%esp),%ecx
		lea    0x00001c(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %ebp,%eax
		call   _01d610_func
		mov    0x000012(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000011,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000002(%esp),%ebx
		mov    %edx,%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000011,%edx
		add    %edx,%ebx
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		sub    %ebx,%edx
		mov    0x000018(%esp),%ebx
		movl   $0x000001,0x000024(%esi)
		cmp    $0x000004,%bx
		ja     _070b61_case
		xor    %ebx,%ebx
		mov    0x000018(%esp),%bx
		lea    0x000000(,%ebx,4),%esi
		mov    0x000010(%esp),%ecx
		mov    0x000020(%esp),%ebx
		add    %edx,%ecx
		add    %eax,%ebx
		jmp    *%cs:_070b34_switch(%esi)

	_070c6f_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070c7c_func:
		push   %ebx
		push   %edx
		call   _0709ac_func
		test   %eax,%eax
		je     _070cc9_jump
		movb   $0x000000,0x00007e(%eax)
		mov    _0c24aa_data,%edx
		movb   $0x00000a,0x00007f(%eax)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%eax),%bl
		movw   $0x0000ff,0x000050(%eax)
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%eax)
		mov    _0c24ac_data,%edx
		mov    0x000069(%eax),%bl
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%eax)
		add    %ebx,%edx
		mov    %edx,0x00002c(%eax)
		mov    0x000034(%eax),%ax
		pop    %edx
		pop    %ebx
		ret    

	_070cc9_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

_070cd4_switch:
		.long   _070dd7_case
		.long   _070de8_case
		.long   _070df9_case
		.long   _070e0a_case
		.long   _070e1b_case
		.long   _070e2c_case
		.long   _070e3d_case
		.long   _070e4e_case
		.long   _070e5f_case
		.long   _070e70_case
		.long   _070e81_case
		.long   _070e92_case
		.long   _070ea3_case
		.long   _070eb4_case
		.long   _070ec5_case
		.long   _070ed6_case
		.long   _070ee7_case
		.long   _070ef8_case
		.long   _070f09_case
		.long   _070f1a_case
		.long   _070f2b_case
		.long   _070f3c_case
		.long   _070f4d_case
		.long   _070f5e_case
		.long   _070f6f_case
		.long   _070f80_case
		.long   _070f91_case
		.long   _070fa2_case
		.long   _070fb3_case
		.long   _070fc1_case
		.long   _070fcf_case
		.long   _070fdd_case
		.long   _070feb_case
		.long   _070ff9_case
		.long   _071007_case
		.long   _071015_case




_070d64_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bx,(%esp)
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%cx
		xor    %ebx,%ebx
		test   %cx,%cx
		jg     _070d9b_jump
		jmp    _071080_jump

	_070d8b_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %cx,%bx
		jge    _071080_jump

	_070d9b_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000092,%eax
		jne    _070d8b_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _070d8b_jump
		mov    0x000081(%edx),%ah
		and    $0x0000f7,%ah
		mov    (%esp),%ecx
		mov    %ah,0x000081(%edx)
		cmp    $0x000023,%cx
		ja     _071021_jump
		xor    %eax,%eax
		mov    %cx,%ax
		jmp    *%cs:_070cd4_switch(,%eax,4)

	_070dd7_case:
		movw   $0x000100,0x000056(%edx)
		movw   $0x000000,0x00004a(%edx)
		jmp    _071021_jump

	_070de8_case:
		movw   $0x0000fc,0x000056(%edx)
		movw   $0x00ffd4,0x00004a(%edx)
		jmp    _071021_jump

	_070df9_case:
		movw   $0x0000f0,0x000056(%edx)
		movw   $0x00ffa9,0x00004a(%edx)
		jmp    _071021_jump

	_070e0a_case:
		movw   $0x0000dd,0x000056(%edx)
		movw   $0x00ff80,0x00004a(%edx)
		jmp    _071021_jump

	_070e1b_case:
		movw   $0x0000c4,0x000056(%edx)
		movw   $0x00ff5c,0x00004a(%edx)
		jmp    _071021_jump

	_070e2c_case:
		movw   $0x0000a4,0x000056(%edx)
		movw   $0x00ff3c,0x00004a(%edx)
		jmp    _071021_jump

	_070e3d_case:
		movw   $0x000080,0x000056(%edx)
		movw   $0x00ff23,0x00004a(%edx)
		jmp    _071021_jump

	_070e4e_case:
		movw   $0x000057,0x000056(%edx)
		movw   $0x00ff10,0x00004a(%edx)
		jmp    _071021_jump

	_070e5f_case:
		movw   $0x00002c,0x000056(%edx)
		movw   $0x00ff04,0x00004a(%edx)
		jmp    _071021_jump

	_070e70_case:
		movw   $0x00ff04,0x000056(%edx)
		movw   $0x00ffd4,0x00004a(%edx)
		jmp    _071021_jump

	_070e81_case:
		movw   $0x00ff10,0x000056(%edx)
		movw   $0x00ffa9,0x00004a(%edx)
		jmp    _071021_jump

	_070e92_case:
		movw   $0x00ff23,0x000056(%edx)
		movw   $0x00ff80,0x00004a(%edx)
		jmp    _071021_jump

	_070ea3_case:
		movw   $0x00ff3c,0x000056(%edx)
		movw   $0x00ff5c,0x00004a(%edx)
		jmp    _071021_jump

	_070eb4_case:
		movw   $0x00ff5c,0x000056(%edx)
		movw   $0x00ff3c,0x00004a(%edx)
		jmp    _071021_jump

	_070ec5_case:
		movw   $0x00ff80,0x000056(%edx)
		movw   $0x00ff23,0x00004a(%edx)
		jmp    _071021_jump

	_070ed6_case:
		movw   $0x00ffa9,0x000056(%edx)
		movw   $0x00ff10,0x00004a(%edx)
		jmp    _071021_jump

	_070ee7_case:
		movw   $0x00ffd4,0x000056(%edx)
		movw   $0x00ff04,0x00004a(%edx)
		jmp    _071021_jump

	_070ef8_case:
		movw   $0x000000,0x000056(%edx)
		movw   $0x00ff00,0x00004a(%edx)
		jmp    _071021_jump

	_070f09_case:
		movw   $0x00ff00,0x000056(%edx)
		movw   $0x000000,0x00004a(%edx)
		jmp    _071021_jump

	_070f1a_case:
		movw   $0x00ff04,0x000056(%edx)
		movw   $0x00002c,0x00004a(%edx)
		jmp    _071021_jump

	_070f2b_case:
		movw   $0x00ff10,0x000056(%edx)
		movw   $0x000057,0x00004a(%edx)
		jmp    _071021_jump

	_070f3c_case:
		movw   $0x00ff23,0x000056(%edx)
		movw   $0x000080,0x00004a(%edx)
		jmp    _071021_jump

	_070f4d_case:
		movw   $0x00ff3c,0x000056(%edx)
		movw   $0x0000a4,0x00004a(%edx)
		jmp    _071021_jump

	_070f5e_case:
		movw   $0x00ff5c,0x000056(%edx)
		movw   $0x0000c4,0x00004a(%edx)
		jmp    _071021_jump

	_070f6f_case:
		movw   $0x00ff80,0x000056(%edx)
		movw   $0x0000dd,0x00004a(%edx)
		jmp    _071021_jump

	_070f80_case:
		movw   $0x00ffa9,0x000056(%edx)
		movw   $0x0000f0,0x00004a(%edx)
		jmp    _071021_jump

	_070f91_case:
		movw   $0x00ffd4,0x000056(%edx)
		movw   $0x0000fc,0x00004a(%edx)
		jmp    _071021_jump

	_070fa2_case:
		movw   $0x0000fc,0x000056(%edx)
		movw   $0x00002c,0x00004a(%edx)
		jmp    _071021_jump

	_070fb3_case:
		movw   $0x0000f0,0x000056(%edx)
		movw   $0x000057,0x00004a(%edx)
		jmp    _071021_jump

	_070fc1_case:
		movw   $0x0000dd,0x000056(%edx)
		movw   $0x000080,0x00004a(%edx)
		jmp    _071021_jump

	_070fcf_case:
		movw   $0x0000c4,0x000056(%edx)
		movw   $0x0000a4,0x00004a(%edx)
		jmp    _071021_jump

	_070fdd_case:
		movw   $0x0000a4,0x000056(%edx)
		movw   $0x0000c4,0x00004a(%edx)
		jmp    _071021_jump

	_070feb_case:
		movw   $0x000080,0x000056(%edx)
		movw   $0x0000dd,0x00004a(%edx)
		jmp    _071021_jump

	_070ff9_case:
		movw   $0x000057,0x000056(%edx)
		movw   $0x0000f0,0x00004a(%edx)
		jmp    _071021_jump

	_071007_case:
		movw   $0x00002c,0x000056(%edx)
		movw   $0x0000fc,0x00004a(%edx)
		jmp    _071021_jump

	_071015_case:
		movw   $0x000000,0x000056(%edx)
		movw   $0x000100,0x00004a(%edx)

	_071021_jump:
		mov    (%esp),%al
		movw   $0x000000,0x000040(%edx)
		mov    %al,0x000076(%edx)
		movswl %di,%eax
		mov    %eax,0x000028(%edx)
		movswl %si,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000056(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000042(%edx)
		call   _01df3c_func
		mov    0x000081(%edx),%cl
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f7d4_func
		mov    $0x0000cd,%eax
		movswl %bx,%edx
		call   _068654_func

	_071080_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_071088_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    _0c1ef0_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _0710c5_jump
		mov    _0c25a6_data,%edx
		mov    _0c25a2_data,%eax
		sar    $0x000011,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    _0c25a4_data,%edi
		mov    %eax,%edx
		mov    _0c25a8_data,%eax
		sar    $0x000010,%edi
		sar    $0x000011,%eax
		jmp    _0710db_jump

	_0710c5_jump:
		xor    %edx,%edx
		mov    0x000028(%eax),%di
		mov    0x000068(%eax),%dl
		add    %edi,%edx
		movzbl 0x000069(%eax),%edi
		add    %edi,%edi
		mov    0x00002c(%eax),%eax
		sar    %edi

	_0710db_jump:
		add    %edi,%eax
		mov    0x000028(%esi),%di
		sub    %edi,%edx
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    (%esp),%edi
		mov    0x000068(%esi),%dl
		sub    %edx,%edi
		mov    %di,0x000000(%ebp)
		xor    %edx,%edx
		movzbl 0x000074(%esi),%edi
		mov    0x000069(%esi),%dl
		add    %edx,%edi
		mov    0x00002c(%esi),%ebp
		sar    %edi
		cwtl   
		add    %ebp,%edi
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _071111_jump
		neg    %eax

	_071111_jump:
		mov    %ax,(%ebx)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		shl    $0x000002,%eax
		mov    %ax,(%ecx)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_071128_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    $0xffffffff,%ebx
		xor    %eax,%eax
		jmp    _071135_jump

	_071134_jump:
		inc    %eax

	_071135_jump:
		movswl %ax,%edx
		cmp    $0x000008,%edx
		jge    _07115b_jump
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0c574e_data(%edx)
		jne    _071134_jump
		mov    $0x000001,%esi
		mov    %eax,%ebx
		mov    %si,_0c574e_data(%edx)

	_07115b_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_071164_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _071128_func
		movswl %ax,%edx
		mov    %ax,0x000004(%esp)
		cmp    $0xffffffff,%edx
		je     _071253_jump
		mov    $0x000100,%edi
		lea    0x000000(,%edx,4),%eax
		shl    $0x000006,%ebx
		xor    %esi,%esi
		shl    $0x000006,%ecx
		mov    %si,0x00000c(%esp)
		mov    %ebx,0x000014(%esp)
		mov    %ecx,0x000008(%esp)
		add    %edx,%eax
		mov    $0x000040,%esi
		shl    $0x000006,%eax
		mov    $0x000020,%ecx
		add    %edx,%eax
		mov    $_0c54ce_data,%edx
		add    %eax,%eax
		mov    $0x000080,%ebx
		add    %eax,%edx
		jmp    _071231_jump

	_0711c8_jump:
		mov    0x000014(%esp),%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    %ax,0x000002(%edx)
		movswl %bx,%eax
		add    $0x000008,%edx
		call   _061dd0_func
		sub    %edi,%eax
		mov    %eax,0x000010(%esp)
		movswl %si,%eax
		call   _061dd0_func
		sub    %ecx,%eax
		mov    %ax,-0x000004(%edx)
		mov    0x000010(%esp),%eax
		mov    %ax,-0x000002(%edx)
		mov    $0x000008,%eax
		add    $0x000002,%edx
		call   _061dd0_func
		mov    %ax,(%esp)
		add    $0x000004,%ebx
		mov    (%esp),%al
		add    $0x000002,%edi
		add    $0x000008,%al
		add    $0x000004,%esi
		mov    %al,-0x000002(%edx)
		mov    0x00000c(%esp),%eax
		add    $0x000002,%ecx
		inc    %eax
		movb   $0x000080,-0x000001(%edx)
		mov    %ax,0x00000c(%esp)

	_071231_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000040,%ebp
		shl    $0x000003,%eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		mov    0x00000a(%esp),%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%eax
		jg     _0711c8_jump

	_071253_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07125c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0ce55c_data,%ebp
		mov    _0c24f0_data,%di
		mov    _0c24f2_data,%ax
		xor    %edx,%edx
		shl    $0x000006,%edi
		shl    $0x000006,%eax
		mov    %dx,(%esp)
		mov    %eax,0x000004(%esp)
		jmp    _07131d_jump

	_07128d_jump:
		mov    $0x000001,%esi

	_071292_jump:
		xor    %ebx,%ebx
		mov    0x000006(%eax),%cx
		mov    0x000008(%eax),%bl
		add    %ebx,%ecx
		mov    %cx,0x000006(%eax)

	_0712a1_jump:
		add    $0x00000a,%eax
		inc    %edx

	_0712a5_jump:
		movswl %dx,%ebx
		cmp    $0x000040,%ebx
		jge    _071305_jump
		xor    %ebx,%ebx
		mov    0x000009(%eax),%bl
		cmp    $0x000080,%ebx
		jl     _0712a1_jump
		mov    0x000004(%eax),%bx
		mov    (%eax),%cx
		sub    %edi,%ebx
		add    %ebx,%ecx
		mov    0x000006(%eax),%bx
		mov    %cx,(%eax)
		sub    0x000004(%esp),%ebx
		add    %bx,0x000002(%eax)
		mov    _0ce560_data,%ecx
		movswl (%eax),%ebx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jg     _0712ff_jump
		mov    %ebp,%ecx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jl     _0712ff_jump
		mov    (%eax),%ecx
		mov    _0ce558_data,%ebx
		sar    $0x000010,%ecx
		shl    $0x000006,%ebx
		cmp    %ebx,%ecx
		jle    _07128d_jump

	_0712ff_jump:
		movb   $0x000000,0x000009(%eax)
		jmp    _071292_jump

	_071305_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000282,%eax,%eax
		mov    %si,_0c574e_data(%eax)

	_071319_jump:
		incw   (%esp)

	_07131d_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jge    _07134b_jump
		imul   $0x000282,%eax,%eax
		mov    _0c574c_data(%eax),%ebx
		sar    $0x000010,%ebx
		cmp    $0x000001,%ebx
		jne    _071319_jump
		add    $_0c54ce_data,%eax
		xor    %esi,%esi
		xor    %edx,%edx
		jmp    _0712a5_jump

	_07134b_jump:
		mov    %ebp,_0ce55c_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07135c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		call   _056614_func
		mov    0x000032(%ecx),%eax
		mov    _0c1b30_data,%edx
		sar    $0x000010,%eax
		movw   $0x000001,0x000052(%ecx)
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _0713c5_jump
		movswl %ax,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0c1b34_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x0000a8,%eax
		jne    _0713c5_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _056614_func
		movw   $0x000001,0x000052(%ecx)

	_0713c5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0713cc_func:
		push   %edx
		mov    $_0c1b4c_data,%eax
		mov    $0x000001,%edx
		call   _06f8e4_func
		mov    %dx,_0c251c_data
		pop    %edx
		ret    



_0713e8_func:
		push   %edx
		cmpb   $0x000000,_0c2595_data
		jne    _07140d_jump
		mov    _0c250a_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		setne  %al
		mov    %dl,_0c94a4_data
		mov    %al,_0c1b2c_data

	_07140d_jump:
		pop    %edx
		ret    



_071410_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    $0x000015,%edx
		call   _01d6e8_func
		mov    _0c250e_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		cmp    $0x00000a,%edx
		jne    _071449_jump
		movb   $0x000005,0x000076(%eax)
		jmp    _071459_jump

	_071449_jump:
		mov    $0x000017,%ebx
		xor    %edx,%edx
		movb   $0x000001,0x000076(%eax)
		call   _01d6f8_func

	_071459_jump:
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _07147e_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071472_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _0714c5_jump

	_07147e_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000de,%ebx
		jne    _071472_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _071472_jump
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000001,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f7d4_func
		movb   $0x000004,0x000072(%edx)

	_0714c5_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0714cc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0c1b34_data,%edx
		mov    _0c1b38_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _0714f9_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0714ed_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _07153a_jump

	_0714f9_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000dd,%ebx
		jne    _0714ed_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0714ed_jump
		movswl %di,%ebx
		sub    $0x00008e,%ebx
		mov    %ebx,0x000028(%edx)
		movswl %si,%ebx
		movl   $0x000001,0x000024(%edx)
		sub    $0x000080,%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _01f7d4_func
		orb    $0x000004,0x000081(%edx)

	_07153a_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_071540_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c2590_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		jne    _07155a_jump
		xor    %eax,%eax
		jmp    _0715f0_jump

	_07155a_jump:
		movswl %ax,%ecx
		lea    0x000032(%ecx),%edx
		mov    $0x000065,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000005,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		imul   $0x000065,%ebx,%eax
		add    %esi,%edx
		sub    %eax,%ecx
		movswl %dx,%edx
		mov    %ecx,%eax
		mov    $0x000033,%ecx
		test   %eax,%eax
		jge    _071594_jump
		neg    %eax

	_071594_jump:
		sub    %eax,%ecx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006a(%ebx),%al
		mov    _0949c6_data(,%eax,2),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00006b(%ebx),%al
		add    %eax,%edx
		mov    $0x00000e,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %dx,%eax
		mov    _0949aa_data(,%eax,2),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    $0x000032,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00002c(%ebx),%edx
		sub    %eax,%edx
		mov    %edx,%eax

	_0715f0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0715f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _071627_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071617_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _0716a2_jump

	_071627_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000085,%edx
		jne    _071617_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _071617_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f7d4_func
		mov    0x000028(%esi),%edx
		mov    %edx,0x000028(%ecx)
		mov    $0x000012,%ebx
		mov    0x00002c(%esi),%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000002,%edx
		call   _01d6f8_func
		mov    _0c24ac_data,%dx
		mov    0x000028(%ecx),%ax
		sub    %edx,%eax
		mov    %ax,0x000036(%ecx)
		mov    _0c24ae_data,%bx
		mov    0x00002c(%ecx),%ax
		movw   $0x00fffe,0x000042(%ecx)
		sub    %ebx,%eax
		mov    %ax,0x000038(%ecx)
		mov    %ecx,%eax
		movw   $0x000001,0x000040(%ecx)
		call   _01df3c_func

	_0716a2_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0716a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    _0c1b34_data,%eax
		mov    _0c1b38_data,%cx
		xor    %esi,%esi
		xor    %edx,%edx
		test   %cx,%cx
		jg     _0716d1_jump
		jmp    _0716e4_jump

	_0716c6_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %cx,%dx
		jge    _0716e4_jump

	_0716d1_jump:
		xor    %ebx,%ebx
		mov    0x000060(%eax),%bx
		cmp    $0x00004b,%ebx
		jne    _0716c6_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _0716c6_jump
		mov    %eax,%esi

	_0716e4_jump:
		test   %esi,%esi
		jne    _0716f6_jump
		mov    $0x00004b,%eax
		call   _01d398_func
		mov    %eax,%esi
		jmp    _0716fd_jump

	_0716f6_jump:
		mov    %esi,%eax
		call   _01f7d4_func

	_0716fd_jump:
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		mov    0x000081(%esi),%dl
		movw   $0x000000,0x00005e(%esi)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000028(%edi),%eax
		sub    $0x000028,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%edi),%eax
		movb   $0x000000,0x00006a(%esi)
		movb   $0x000001,0x00006b(%esi)
		movb   $0x000000,0x00006d(%esi)
		movb   $0x000000,0x00006f(%esi)
		sub    $0x000014,%eax
		movb   $0x000000,0x00006e(%esi)
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00006c(%esi)
		call   _01df3c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071760_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c260a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07179c_jump
		movw   $0x00ffff,_0c260c_data
		call   _04d5a4_func
		mov    _0c260a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)

	_07179c_jump:
		mov    _0c260c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0717d9_jump
		mov    $0xffffffff,%ebx
		mov    _0c1b34_data,%eax
		mov    %bx,_0c260e_data
		mov    -0x000003(%eax),%ch
		sub    $0x000084,%eax
		mov    $0x000004,%bh
		and    $0x0000fb,%ch
		mov    %bh,_0c1bc2_data
		mov    %bh,_0c2501_data
		mov    %ch,0x000081(%eax)

	_0717d9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0717e0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000050,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    _0dd2dc_data,%eax
		mov    %eax,(%esp)
		mov    0x000014(%eax),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000044(%esp)
		mov    (%esp),%eax
		mov    %cx,%bx
		movw   $0x000000,(%eax)
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _071811_jump
		mov    %ebx,%eax

	_071811_jump:
		mov    (%esp),%ebx
		mov    %ax,0x000002(%ebx)
		movswl %di,%ebx
		test   %ebx,%ebx
		jl     _07182c_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _07182a_jump
		mov    %ebx,%eax

	_07182a_jump:
		jmp    _07183b_jump

	_07182c_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _071839_jump
		mov    %ebx,%eax

	_071839_jump:
		neg    %eax

	_07183b_jump:
		mov    (%esp),%ebx
		mov    %ax,0x00000c(%ebx)
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _07184e_jump
		mov    %si,0x000004(%ebx)

	_07184e_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _07185d_jump
		mov    (%esp),%eax
		mov    %dx,0x000006(%eax)

	_07185d_jump:
		mov    (%esp),%eax
		xor    %ebx,%ebx
		mov    0x00000e(%eax),%bx
		mov    $0x00013f,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    (%esp),%eax
		mov    0x000002(%eax),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _07187e_jump
		mov    %ebx,%eax

	_07187e_jump:
		mov    (%esp),%ebx
		xor    %ecx,%ecx
		mov    0x00000e(%ebx),%cx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _071891_jump
		mov    %ebx,%eax

	_071891_jump:
		mov    (%esp),%ebx
		mov    %ax,0x000004(%ebx)
		mov    (%esp),%eax
		xor    %ebx,%ebx
		mov    0x00000e(%eax),%bx
		mov    $0x0000c7,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    (%esp),%eax
		mov    0x000004(%eax),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0718b9_jump
		mov    %ebx,%eax

	_0718b9_jump:
		mov    (%esp),%ebx
		xor    %ecx,%ecx
		mov    0x00000e(%ebx),%cx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _0718cc_jump
		mov    %ebx,%eax

	_0718cc_jump:
		mov    (%esp),%ebx
		mov    %ax,0x000006(%ebx)
		call   _07ab82_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _0718e6_jump
		mov    0x00000c(%ebx),%ax
		jmp    _0718ec_jump

	_0718e6_jump:
		mov    0x00000c(%ebx),%ax
		neg    %eax

	_0718ec_jump:
		mov    (%esp),%ebx
		mov    %ax,0x000008(%ebx)
		call   _07ab82_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _071906_jump
		mov    0x00000c(%ebx),%ax
		jmp    _07190c_jump

	_071906_jump:
		mov    0x00000c(%ebx),%ax
		neg    %eax

	_07190c_jump:
		mov    (%esp),%ebx
		mov    %ax,0x00000a(%ebx)
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _071bc4_jump
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _071bc4_jump
		xor    %esi,%esi
		mov    0x00000e(%ebx),%si
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		add    %eax,%eax
		call   _079562_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x40590000,%edx
		xor    %eax,%eax
		call   _079d5a_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07975f_func
		mov    %eax,0x000018(%esp)
		mov    %esi,%eax
		neg    %eax
		mov    %edx,0x00001c(%esp)
		call   _079562_func
		jmp    _071986_jump

	_071972_jump:
		mov    0x000048(%esp),%eax
		mov    0x00004c(%esp),%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		call   _0795a8_func

	_071986_jump:
		mov    %eax,0x000048(%esp)
		mov    %edx,0x00004c(%esp)
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _07956f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000048(%esp),%eax
		mov    0x00004c(%esp),%edx
		call   _07b674_func
		jg     _071bc4_jump
		mov    0x000048(%esp),%eax
		mov    0x00004c(%esp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07975f_func
		mov    %edx,0x000024(%esp)
		mov    (%esp),%edx
		mov    %eax,0x000020(%esp)
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		neg    %eax
		call   _079562_func
		jmp    _071af0_jump

	_0719e1_jump:
		mov    0x000048(%esp),%eax
		mov    0x00004c(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07b701_func
		mov    %eax,%ebx
		mov    %edx,%ebp
		call   _07a1c0_func
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000008(%esp)
		mov    %ebx,%eax
		mov    %ebp,%edx
		mov    0x000008(%esp),%ecx
		call   _07a199_func
		mov    0x000004(%esp),%ebx
		mov    %eax,0x00000c(%esp)
		mov    %edx,%ebp
		mov    0x000028(%esp),%eax
		mov    0x00002c(%esp),%edx
		call   _07975f_func
		mov    0x00000c(%esp),%ebx
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    %ebp,%ecx
		mov    0x000034(%esp),%eax
		mov    0x000040(%esp),%edx
		call   _07975f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000010(%esp),%eax
		mov    0x000014(%esp),%edx
		call   _0795a2_func
		mov    0x00000c(%esp),%ebx
		mov    %eax,0x000030(%esp)
		mov    %edx,0x00003c(%esp)
		mov    %ebp,%ecx
		mov    0x000028(%esp),%eax
		mov    0x00002c(%esp),%edx
		call   _07975f_func
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    %eax,%ebp
		mov    %edx,0x000014(%esp)
		mov    0x000034(%esp),%eax
		mov    0x000040(%esp),%edx
		call   _07975f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000014(%esp),%edx
		mov    %ebp,%eax
		call   _0795a8_func
		mov    %eax,%ebp
		mov    %edx,0x000038(%esp)

	_071a9e_jump:
		mov    0x000030(%esp),%eax
		mov    0x00003c(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _0795a2_func
		call   _07a21c_func
		mov    0x000044(%esp),%edx
		mov    0x000048(%esp),%ebx
		mov    0x00004c(%esp),%ecx
		mov    %eax,(%edx)
		mov    0x000038(%esp),%edx
		mov    %ebp,%eax
		call   _0795a2_func
		call   _07a21c_func
		mov    0x000044(%esp),%edx
		add    $0x000008,%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		mov    %eax,-0x000004(%edx)
		mov    %edx,0x000044(%esp)
		mov    %esi,%eax
		mov    %edi,%edx
		call   _0795a8_func

	_071af0_jump:
		mov    %eax,%esi
		mov    %edx,%edi
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _07956f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _07b674_func
		jg     _071972_jump
		mov    %esi,%eax
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07975f_func
		mov    0x000020(%esp),%ebx
		mov    0x000024(%esp),%ecx
		call   _0795a8_func
		call   _07b80c_func
		mov    %eax,0x000004(%esp)
		mov    %edx,%ebp
		mov    %eax,0x000028(%esp)
		mov    %edx,0x00002c(%esp)
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x000004(%esp),%ebx
		mov    %ebp,%ecx
		call   _07a208_func
		call   _07975f_func
		mov    0x000004(%esp),%ebx
		mov    %ebp,%ecx
		call   _07975f_func
		call   _07af88_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000004(%esp),%eax
		mov    %ebp,%edx
		call   _07975f_func
		mov    %eax,0x000034(%esp)
		mov    %edx,0x000040(%esp)
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _07b674_func
		jne    _0719e1_jump
		mov    0x000048(%esp),%eax
		mov    0x00004c(%esp),%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		call   _07b674_func
		jne    _0719e1_jump
		mov    0x000048(%esp),%ebp
		mov    0x00004c(%esp),%eax
		mov    %esi,0x000030(%esp)
		mov    %edi,0x00003c(%esp)
		mov    %eax,0x000038(%esp)
		jmp    _071a9e_jump

	_071bc4_jump:
		add    $0x000050,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_071bcc_case:
		push   %ebx
		push   %edx
		mov    _0dd2dc_data,%eax
		test   %eax,%eax
		je     _071bf6_jump
		mov    0x000014(%eax),%edx
		test   %edx,%edx
		je     _071be5_jump
		mov    %edx,%eax
		call   _07539c_func

	_071be5_jump:
		mov    _0dd2dc_data,%ebx
		test   %ebx,%ebx
		je     _071bf6_jump
		mov    %ebx,%eax
		call   _07539c_func

	_071bf6_jump:
		pop    %edx
		pop    %ebx
		ret    



_071bfc_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    0x000020(%esp),%esi
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		mov    %cx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x00000c(%esp)
		test   %esi,%esi
		je     _071cc8_jump
		cmpl   $0x000000,0x000024(%esp)
		je     _071cc8_jump
		mov    $0x000020,%eax
		call   _075384_func
		mov    %eax,%edx
		mov    %eax,_0dd2dc_data
		test   %eax,%eax
		je     _071cc8_jump
		xor    %eax,%eax
		mov    %bx,%ax
		mov    $0x000030,%ebx
		cmp    %ebx,%eax
		jle    _071c55_jump
		mov    %ebx,%eax

	_071c55_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _071c62_jump
		mov    %ebx,%eax

	_071c62_jump:
		mov    %ax,0x00000e(%edx)
		add    %eax,%eax
		inc    %eax
		mov    %ax,0x000010(%edx)
		mov    0x00000e(%edx),%ax
		add    %eax,%eax
		mov    $0x00fa00,%ecx
		inc    %eax
		mov    _0cdf30_data,%edi
		mov    %ax,0x000012(%edx)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _071c8d_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_071c8d_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _071c96_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_071c96_jump:
		mov    _0cdf30_data,%eax
		mov    %eax,0x000018(%edx)
		mov    0x000024(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%edx)
		xor    %eax,%eax
		mov    0x000010(%edx),%bx
		mov    0x000012(%edx),%ax
		imul   %ebx,%eax
		shl    $0x000003,%eax
		call   _075384_func
		mov    %eax,0x000014(%edx)
		test   %eax,%eax
		je     _071cc8_jump
		movb   $0x000001,0x00000c(%esp)

	_071cc8_jump:
		cmpb   $0x000000,0x00000c(%esp)
		je     _071cf2_jump
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%edx
		xor    %ecx,%ecx
		mov    0x000002(%esp),%eax
		mov    0x00001c(%esp),%cx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0717e0_func
		jmp    _071cf7_jump

	_071cf2_jump:
		call   _071bcc_case

	_071cf7_jump:
		mov    0x00000c(%esp),%al
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_071d04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0dd2dc_data,%edx
		mov    0x000008(%edx),%ax
		add    %ax,0x000004(%edx)
		mov    0x000006(%edx),%cx
		mov    0x00000a(%edx),%ax
		mov    0x000002(%edx),%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		mov    %cx,0x000006(%edx)
		cmp    $0x000140,%eax
		jl     _071d53_jump
		mov    $0x00013f,%ebx
		mov    0x00000e(%edx),%ax
		mov    0x000008(%edx),%si
		sub    %eax,%ebx
		neg    %esi
		mov    %bx,0x000004(%edx)
		mov    %si,0x000008(%edx)

	_071d53_jump:
		mov    0x000002(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _071d73_jump
		mov    0x000008(%edx),%di
		mov    %ax,0x000004(%edx)
		neg    %edi
		mov    %di,0x000008(%edx)

	_071d73_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		cmp    $0x0000c8,%eax
		jl     _071da1_jump
		mov    $0x0000c7,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		mov    0x00000a(%edx),%ax
		mov    %bx,0x000006(%edx)
		neg    %eax
		mov    %ax,0x00000a(%edx)

	_071da1_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _071dc1_jump
		mov    0x00000a(%edx),%bx
		mov    %ax,0x000006(%edx)
		neg    %ebx
		mov    %bx,0x00000a(%edx)

	_071dc1_jump:
		mov    0x00000a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _071dcd_jump
		neg    %eax

	_071dcd_jump:
		mov    (%edx),%cx
		add    %eax,%ecx
		mov    0x000002(%edx),%si
		mov    %cx,(%edx)
		cmp    %si,%cx
		jbe    _071de3_jump
		movw   $0x000000,(%edx)

	_071de3_jump:
		mov    (%edx),%ax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071dec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0dd2dc_data,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000008(%esp)
		mov    0x000014(%eax),%edx
		mov    0x000004(%eax),%ecx
		mov    0x00000e(%eax),%bx
		mov    0x000008(%esp),%ebp
		mov    0x000008(%esp),%esi
		mov    0x000008(%esp),%edi
		sar    $0x000010,%ecx
		mov    0x000002(%ebp),%ebp
		sub    %ebx,%ecx
		mov    0x000018(%esi),%esi
		lea    0x000000(,%ecx,4),%eax
		sar    $0x000010,%ebp
		add    %ecx,%eax
		sub    %ebx,%ebp
		shl    $0x000006,%eax
		mov    0x000008(%esp),%ecx
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x00001c(%edi),%edi
		mov    0x000010(%ecx),%ax
		lea    (%esi,%ebp,1),%ebx
		mov    %eax,(%esp)
		mov    $0x000140,%eax
		mov    (%esp),%ecx
		add    %edi,%ebp
		sub    %ecx,%eax
		mov    $0x00fa00,%ecx
		mov    %eax,0x000004(%esp)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _071e66_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_071e66_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _071e6f_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_071e6f_jump:
		xor    %esi,%esi
		jmp    _071e7c_jump

	_071e73_jump:
		mov    0x000004(%esp),%edi
		inc    %esi
		add    %edi,%ebx
		add    %edi,%ebp

	_071e7c_jump:
		mov    0x000008(%esp),%ecx
		xor    %eax,%eax
		mov    0x000012(%ecx),%ax
		cmp    %eax,%esi
		jge    _071eb6_jump
		xor    %eax,%eax
		jmp    _071ea6_jump

	_071e8e_jump:
		imul   $0x000140,0x000004(%edx),%ecx
		mov    (%edx),%edi
		inc    %ebx
		add    %edi,%ecx
		inc    %ebp
		add    $0x000008,%edx
		mov    -0x000001(%ecx,%ebx,1),%cl
		inc    %eax
		mov    %cl,-0x000001(%ebp)

	_071ea6_jump:
		mov    0x000008(%esp),%edi
		xor    %ecx,%ecx
		mov    0x000010(%edi),%cx
		cmp    %ecx,%eax
		jge    _071e73_jump
		jmp    _071e8e_jump

	_071eb6_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071ec0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000001,%al
		jbe    _071ed0_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071ed0_jump:
		and    $0x0000ff,%eax
		jne    _071ee0_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _071ee7_jump

	_071ee0_jump:
		orb    $0x000008,0x000081(%ecx)

	_071ee7_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _071f05_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func

	_071f05_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _071f6b_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _071f3d_jump
		mov    0x000081(%ecx),%bh
		mov    $0x000005,%edx
		or     $0x000008,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%ecx)
		jmp    _071f53_jump

	_071f3d_jump:
		mov    0x000081(%ecx),%bl
		mov    $0x000004,%edx
		and    $0x0000f7,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)

	_071f53_jump:
		mov    $0x000001,%ebx
		call   _056614_func
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_071f6b_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		mov    %ecx,%eax
		call   _0248b8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071f80_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		jne    _07213a_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%al
		mov    %al,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071fb1_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071fc5_jump:
		and    $0x0000ff,%eax
		jne    _071fd5_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _071fdc_jump

	_071fd5_jump:
		orb    $0x000008,0x000081(%ecx)

	_071fdc_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _071ffa_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func

	_071ffa_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		je     _072039_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _072023_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _07202a_jump

	_072023_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_07202a_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _0720b9_jump

	_072039_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _0720c8_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _02d280_func
		test   %ax,%ax
		je     _0720c8_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000028,%eax
		jne    _0720c8_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _072092_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _072099_jump

	_072092_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_072099_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _0720af_jump
		mov    $0x000001,%ebx
		mov    $0x000009,%edx
		jmp    _0720b9_jump

	_0720af_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_0720b9_jump:
		mov    %ecx,%eax
		call   _056614_func
		movb   $0x000005,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)

	_0720c8_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %edx,%eax
		test   %eax,%eax
		jl     _0720e4_jump
		xor    %eax,%eax
		mov    0x000065(%ecx),%al
		testb  $0x000010,_0921f8_data(%eax)
		je     _0720e8_jump

	_0720e4_jump:
		incw   0x000042(%ecx)

	_0720e8_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _072104_jump
		mov    %ecx,%eax
		call   _0248b8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072104_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _072113_jump
		cmp    $0x000003,%eax
		jne    _07214d_jump

	_072113_jump:
		mov    0x000081(%ecx),%dh
		lea    0x000081(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07213a_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%al
		jbe    _071fc5_jump
		cmp    $0x000014,%al
		je     _071fb1_jump

	_07214d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072154_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _07217e_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_07217e_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _056614_func
		movb   $0x000007,0x000072(%ecx)
		mov    _0c1ef0_data,%eax
		movb   $0x000002,0x000073(%ecx)
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0721b0_jump
		andb   $0x0000f7,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_0721b0_jump:
		jge    _0721b9_jump
		orb    $0x000008,0x000081(%ecx)

	_0721b9_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0721bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		xor    %al,%al
		cmp    $0x000024,%edx
		jne    _0721f7_jump
		mov    0x00007f(%esi),%ah
		test   %ah,%ah
		je     _0721e6_jump
		cmpb   $0x000000,_0c24cb_data
		jne    _0721e6_jump
		mov    %ah,%dh
		dec    %dh
		mov    %dh,0x00007f(%esi)

	_0721e6_jump:
		cmpb   $0x000000,0x00007f(%esi)
		jne    _0721f7_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _072960_func
		mov    $0x000001,%al

	_0721f7_jump:
		test   %al,%al
		jne    _07224a_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _024278_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000001,_0921f8_data(%edx)
		je     _072222_jump
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _072960_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072222_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		cmp    $0x000002,%edx
		jne    _07224a_jump
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		cmp    $0x000001,%edx
		jne    _07224a_jump
		lea    0x000042(%esi),%ebx
		push   $0x000003
		lea    0x000040(%esi),%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		call   _01eb9c_func

	_07224a_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072250_func:
		push   %ebx
		push   %edx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %dl,%dl
		test   %ebx,%ebx
		jne    _072273_jump
		mov    0x00006c(%eax),%al
		and    $0x0000ff,%eax
		je     _072271_jump
		cmp    $0x00000e,%eax
		je     _072271_jump
		cmp    $0x000008,%eax
		jne    _072273_jump

	_072271_jump:
		mov    $0x000001,%dl

	_072273_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ebx
		ret    



_072278_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		call   _072250_func
		test   %al,%al
		je     _0722c3_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01dea4_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _0722c3_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _056614_func

	_0722c3_jump:
		xor    %eax,%eax
		mov    _0c1b74_data,%edx
		mov    _0c1bb4_data,%al
		mov    0x000028(%ecx),%ebx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0722e6_jump
		neg    %eax

	_0722e6_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b78_data,%edi
		mov    _0c1bb5_data,%al
		lea    (%eax,%edi,1),%edx
		mov    0x00002c(%ecx),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _07230c_jump
		neg    %eax

	_07230c_jump:
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _07245c_jump
		cmp    $0x000001,%eax
		je     _07245c_jump
		test   %eax,%eax
		jne    _0723e1_jump
		movzbl 0x00006c(%ecx),%edi
		cmp    $0x00000b,%edi
		jne    _0723e1_jump
		shl    $0x000002,%eax
		mov    0x00000c(%ecx),%ebp
		add    %ebp,%eax
		mov    (%eax),%eax
		testb  $0x000010,0x000007(%eax,%edi,8)
		je     _072354_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _072375_jump

	_072354_jump:
		movzbl 0x00006a(%ecx),%edi
		lea    0x000000(,%edi,4),%eax
		sub    %edi,%eax
		mov    0x000004(%ecx),%edi
		mov    0x00000a(%edi,%eax,4),%ax
		and    $0x00ffff,%eax
		movzbl 0x00006b(%ecx),%edi
		dec    %eax
		cmp    %eax,%edi

	_072375_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _0723e1_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edi
		shl    $0x000002,%eax
		add    %eax,%edi
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%edi),%eax
		mov    (%esp),%edi
		mov    0x000005(%edi,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0723e1_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		movw   $0x00fff9,0x000042(%ecx)
		movb   $0x000000,0x000071(%ecx)
		mov    0x00002c(%ecx),%eax
		movb   $0x000004,0x000072(%ecx)
		sub    $0x00000e,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _07245c_jump

	_0723e1_jump:
		mov    0x00007b(%ecx),%ah
		xor    %esi,%esi
		test   %ah,%ah
		je     _07244b_jump
		movswl %bx,%eax
		cmp    $0x0000aa,%eax
		jge    _072404_jump
		movswl %dx,%eax
		cmp    $0x000026,%eax
		jge    _072404_jump
		movb   $0x000001,0x00007d(%ecx)

	_072404_jump:
		mov    %ecx,%eax
		call   _072250_func
		test   %al,%al
		je     _07244b_jump
		movswl %bx,%eax
		cmp    $0x00005f,%eax
		jge    _072433_jump
		movswl %dx,%eax
		cmp    $0x000032,%eax
		jge    _072433_jump
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		test   %eax,%eax
		jne    _072433_jump
		mov    $0x000001,%esi
		movb   $0x000064,0x00007f(%ecx)
		jmp    _07244b_jump

	_072433_jump:
		cmpb   $0x000000,0x00007d(%ecx)
		je     _07244b_jump
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		test   %eax,%eax
		jne    _07244b_jump
		mov    $0xffffffff,%esi
		movb   $0x000000,0x00007d(%ecx)

	_07244b_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _07245c_jump
		mov    %ecx,%eax
		call   _0732d8_func

	_07245c_jump:
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		test   %eax,%eax
		je     _07246c_jump
		mov    %al,%dh
		dec    %dh
		mov    %dh,0x00007f(%ecx)

	_07246c_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _072481_jump
		movswl %si,%eax
		test   %eax,%eax
		je     _072566_jump

	_072481_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d9a4_func
		test   %ax,%ax
		je     _0724ac_jump
		mov    $0x000001,%ebx
		mov    $0x00000e,%edx
		jmp    _07255f_jump

	_0724ac_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024278_func
		and    $0x0000ff,%eax
		testb  $0x000001,_0921f8_data(%eax)
		jne    _0724e5_jump
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		cmp    $0x000020,%eax
		jl     _0724e5_jump
		mov    _0c2524_data,%edx
		sar    $0x000010,%edx
		add    $0x00010c,%edx
		cmp    %edx,%eax
		jle    _072533_jump

	_0724e5_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _072533_jump
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%ebx
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    %ebx,0x000028(%ecx)
		cmpb   $0x000000,0x00007b(%ecx)
		je     _07251a_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _056614_func
		movb   $0x000000,0x00006b(%ecx)
		jmp    _07252b_jump

	_07251a_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _056614_func

	_07252b_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _072566_jump

	_072533_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		je     _072566_jump
		cmp    $0x000002,%eax
		je     _072566_jump
		movswl %si,%eax
		test   %eax,%eax
		jge    _072555_jump
		mov    $0x000001,%ebx
		mov    $0x00000d,%edx
		jmp    _07255f_jump

	_072555_jump:
		mov    $0x000001,%ebx
		mov    $0x000011,%edx

	_07255f_jump:
		mov    %ecx,%eax
		call   _056614_func

	_072566_jump:
		mov    %ecx,%eax
		call   _04aad8_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _07257e_jump
		mov    %ecx,%eax
		call   _0248b8_func

	_07257e_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072588_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _072250_func
		test   %al,%al
		je     _0725e8_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01dea4_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _0725cd_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _056614_func

	_0725cd_jump:
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		test   %eax,%eax
		jne    _0725df_jump
		mov    %ecx,%eax
		call   _0732d8_func
		jmp    _072604_jump

	_0725df_jump:
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x00007f(%ecx)
		jmp    _072604_jump

	_0725e8_jump:
		mov    %ecx,%eax
		call   _0732d8_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _072604_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000009,%eax
		jne    _072604_jump
		movb   $0x0000fa,0x00007f(%ecx)

	_072604_jump:
		mov    %ecx,%eax
		call   _0248b8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072610_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000070(%eax),%al
		test   %al,%al
		jbe    _07263c_jump
		cmp    $0x000001,%al
		je     _072669_jump
		jmp    _07269d_jump

	_072624_jump:
		mov    0x000040(%edx),%ax
		mov    %ax,0x000042(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_07262f_jump:
		mov    0x000040(%edx),%ax
		neg    %eax
		mov    %ax,0x000042(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_07263c_jump:
		mov    0x000081(%edx),%bh
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _04aad8_func
		mov    0x00006c(%edx),%al
		cmp    $0x00000b,%al
		jb     _072662_jump
		jbe    _0726a3_jump
		cmp    $0x00000d,%al
		je     _07262f_jump
		pop    %edx
		pop    %ebx
		ret    

	_072662_jump:
		cmp    $0x000009,%al
		je     _072624_jump
		pop    %edx
		pop    %ebx
		ret    

	_072669_jump:
		orb    $0x000008,0x000081(%edx)
		mov    %edx,%eax
		call   _04aad8_func
		mov    0x000081(%edx),%bl
		and    $0x0000f7,%bl
		mov    0x00006c(%edx),%al
		mov    %bl,0x000081(%edx)
		cmp    $0x00000c,%al
		jb     _072696_jump
		jbe    _0726a3_jump
		cmp    $0x00000e,%al
		je     _072624_jump
		pop    %edx
		pop    %ebx
		ret    

	_072696_jump:
		cmp    $0x00000a,%al
		je     _07262f_jump
		pop    %edx
		pop    %ebx
		ret    

	_07269d_jump:
		movw   $0x000000,0x000040(%edx)

	_0726a3_jump:
		movw   $0x000000,0x000042(%edx)
		pop    %edx
		pop    %ebx
		ret    

_0726ac_switch:
		.long   _072717_case
		.long   _072753_case
		.long   _07278a_case
		.long   _0727b6_case
		.long   _0727df_case
		.long   _072818_case




_0726c4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ecx
		mov    %ebx,%esi
		cmpb   $0x000000,(%ebx)
		jne    _072878_jump
		xor    %ebx,%ebx
		mov    0x000028(%eax),%edi
		mov    0x000068(%eax),%bl
		add    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%edi
		xor    %ebx,%ebx
		mov    %edi,0x000028(%ecx)
		mov    0x000069(%eax),%bl
		mov    0x00002c(%eax),%edx
		xor    %eax,%eax
		add    %edx,%ebx
		mov    0x000069(%ecx),%al
		sub    %eax,%ebx
		mov    0x00006c(%ecx),%al
		sub    $0x000009,%al
		mov    %ebx,0x00002c(%ecx)
		cmp    $0x000005,%al
		ja     _07284a_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0726ac_switch(,%eax,4)

	_072717_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x000069(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		add    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _07284a_jump

	_072753_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		add    %ebx,%eax
		sub    %eax,%edi
		mov    %edi,0x00002c(%ecx)
		jmp    _07284a_jump

	_07278a_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000028(%ecx),%ebp
		sub    %ebx,%eax
		sub    %eax,%ebp
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _07284a_jump

	_0727b6_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		mov    0x000028(%ecx),%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		mov    %ebx,0x000028(%ecx)
		sub    %eax,%edi
		mov    %edi,0x00002c(%ecx)
		jmp    _07284a_jump

	_0727df_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x000069(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		sub    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		add    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _07284a_jump

	_072818_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		sub    %ebx,%eax
		add    %eax,%edi
		mov    %edi,0x00002c(%ecx)

	_07284a_jump:
		mov    %ecx,%eax
		call   _01df3c_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f7d4_func
		andb   $0x0000bf,0x000081(%ecx)
		movb   $0x000001,(%esi)

	_072878_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_072880_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000018(%esp)
		mov    %ah,0x000014(%esp)
		mov    %ah,0x000004(%esp)
		mov    0x00003e(%esi),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		setg   %bl
		test   %bl,%bl
		jbe    _0728c9_jump
		cmp    $0x000001,%bl
		je     _0728dd_jump

	_0728ac_jump:
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %edi,%edi
		mov    %ebx,(%esp)
		test   %bx,%bx
		jle    _072955_jump
		jmp    _072900_jump

	_0728c9_jump:
		mov    $0x00000c,%al
		mov    $0x00000a,%ch
		mov    %al,0x00000c(%esp)
		mov    $0x00000e,%ah
		mov    %ch,0x000008(%esp)
		mov    %ah,0x000010(%esp)
		jmp    _0728ac_jump

	_0728dd_jump:
		mov    $0x000009,%bl
		mov    $0x00000d,%cl
		mov    %bl,0x000008(%esp)
		mov    $0x00000b,%bh
		mov    %cl,0x000010(%esp)
		mov    %bh,0x00000c(%esp)
		jmp    _0728ac_jump

	_0728f1_jump:
		mov    (%esp),%ebx
		inc    %edi
		add    $0x000084,%ecx
		cmp    %bx,%di
		jge    _072955_jump

	_072900_jump:
		xor    %ebx,%ebx
		mov    0x000060(%ecx),%bx
		cmp    $0x00004f,%ebx
		jne    _0728f1_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0728f1_jump
		mov    0x000008(%esp),%dl
		mov    0x00006c(%ecx),%bl
		cmp    %dl,%bl
		jne    _07292b_jump
		lea    0x000004(%esp),%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0726c4_func
		jmp    _0728f1_jump

	_07292b_jump:
		cmp    0x00000c(%esp),%bl
		jne    _072940_jump
		lea    0x000014(%esp),%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0726c4_func
		jmp    _0728f1_jump

	_072940_jump:
		cmp    0x000010(%esp),%bl
		jne    _0728f1_jump
		lea    0x000018(%esp),%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0726c4_func
		jmp    _0728f1_jump

	_072955_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072960_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _072979_jump
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _01d6e8_func

	_072979_jump:
		mov    $0x000054,%eax
		call   _068d70_func
		cmpl   $0x000000,0x000024(%ebx)
		je     _072a0c_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		cmp    $0x000002,%eax
		jne    _0729d3_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000001,%eax
		jne    _0729d3_jump
		mov    0x000028(%ebx),%ecx
		movw   $0x00ffff,0x000040(%ebx)
		add    $0x000014,%ecx
		mov    %ebx,%eax
		mov    %ecx,0x000028(%ebx)
		call   _072880_func
		mov    0x000028(%ebx),%esi
		movw   $0x000001,0x000040(%ebx)
		sub    $0x000014,%esi
		mov    %ebx,%eax
		mov    %esi,0x000028(%ebx)
		call   _072880_func
		addl   $0x00000a,0x000028(%ebx)
		jmp    _0729da_jump

	_0729d3_jump:
		mov    %ebx,%eax
		call   _072880_func

	_0729da_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		movl   $0x000000,0x000024(%ebx)
		cmp    $0x000024,%eax
		jne    _0729f5_jump
		andb   $0x0000fb,0x000081(%ebx)
		jmp    _072a05_jump

	_0729f5_jump:
		mov    _0c24ac_data,%eax
		sar    $0x000010,%eax
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%ebx)

	_072a05_jump:
		mov    %ebx,%eax
		call   _0706e8_func

	_072a0c_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_072a10_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    %bl,0x000010(%esp)
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		cmp    $0x000023,%eax
		jne    _072c05_jump
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _072a56_jump
		jmp    _072d7f_jump

	_072a46_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _072d7f_jump

	_072a56_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000024,%edx
		jne    _072a46_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _072a46_jump
		mov    0x000010(%esp),%bh
		movb   $0x0000c8,0x00007f(%esi)
		test   %bh,%bh
		je     _072a90_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _072ab2_jump

	_072a90_jump:
		mov    0x000081(%edi),%ah
		lea    0x000081(%esi),%edx
		test   $0x000008,%ah
		sete   %al
		mov    (%edx),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,(%edx)

	_072ab2_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		mov    %cx,0x000042(%esi)
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _072ae3_jump
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw 0x000001(%edx,%eax,8),%ax
		jmp    _072afc_jump

	_072ae3_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		movsbw (%eax,%edx,8),%ax

	_072afc_jump:
		mov    %ax,0x000040(%esi)
		mov    $0x00007a,%ecx
		xor    %eax,%eax
		mov    $0x000035,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _072b1e_jump
		cmp    %ecx,%eax
		jg     _072b1e_jump
		mov    $0x000001,%eax
		jmp    _072b20_jump

	_072b1e_jump:
		xor    %eax,%eax

	_072b20_jump:
		test   %eax,%eax
		je     _072b2b_jump
		mov    $0x000003,%eax
		jmp    _072b56_jump

	_072b2b_jump:
		mov    $0x000090,%ecx
		mov    $0x00007b,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _072b47_jump
		cmp    %ecx,%eax
		jg     _072b47_jump
		mov    $0x000001,%eax
		jmp    _072b49_jump

	_072b47_jump:
		xor    %eax,%eax

	_072b49_jump:
		test   %eax,%eax
		je     _072b51_jump
		xor    %eax,%eax
		jmp    _072b56_jump

	_072b51_jump:
		mov    $0xffffffff,%eax

	_072b56_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _072d7f_jump
		lea    0x000008(%esp),%eax
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000014(%esp),%ebx
		mov    %edi,%eax
		call   _01da90_func
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000011,%eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000074(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    $0x000002,%ebx
		mov    0x00002c(%esi),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		call   _01d6f8_func
		mov    %esi,%eax
		call   _04aad8_func
		mov    %esi,%eax
		call   _01df3c_func
		movb   $0x000000,0x000071(%esi)
		movb   $0x000007,0x000072(%esi)
		mov    0x000081(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dh
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		call   _01f7d4_func
		andb   $0x0000bf,0x000081(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_072c05_jump:
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _072c30_jump
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_072c20_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _072d7f_jump

	_072c30_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x00002c,%edx
		jne    _072c20_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _072c20_jump
		mov    0x000032(%esi),%edx
		mov    $0x00005a,%eax
		sar    $0x000010,%edx
		call   _068654_func
		cmpb   $0x000000,0x000010(%esp)
		je     _072c75_jump
		mov    0x000081(%esi),%dl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%dl
		and    $0x000008,%al
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,0x000081(%esi)
		jmp    _072c97_jump

	_072c75_jump:
		mov    0x000081(%edi),%bl
		lea    0x000081(%esi),%edx
		test   $0x000008,%bl
		sete   %al
		mov    (%edx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%ah
		or     %al,%ah
		mov    %ah,(%edx)

	_072c97_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		mov    %cx,0x000042(%esi)
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _072cc8_jump
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		movsbw 0x000001(%eax,%edx,8),%ax
		jmp    _072ce8_jump

	_072cc8_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		movsbw (%ebx,%eax,1),%ax

	_072ce8_jump:
		mov    %ax,0x000040(%esi)
		lea    0x000008(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000007,%edx
		mov    %edi,%eax
		call   _01da90_func
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000006,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _056614_func
		mov    %esi,%eax
		call   _01df3c_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f7d4_func

	_072d7f_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_072d88_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _071ec0_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _072ed0_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		jne    _072db3_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000090,%eax
		jge    _072db9_jump

	_072db3_jump:
		movw   $0x000000,0x000052(%ecx)

	_072db9_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _072dcc_jump
		cmp    $0x000002,%eax
		jne    _072e6c_jump

	_072dcc_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _072df0_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _072e13_jump

	_072df0_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_072e13_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _072e6c_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _072e6c_jump
		cmpb   $0x000000,0x00007b(%ecx)
		je     _072e5b_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _072e65_jump

	_072e5b_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_072e65_jump:
		mov    %ecx,%eax
		call   _056614_func

	_072e6c_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		jne    _072ed6_jump
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _072ed6_jump
		mov    0x00006b(%ecx),%dl
		cmp    $0x000090,%edx
		jne    _072ed6_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%ecx),%edx
		mov    (%edx,%ebx,1),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _072ed6_jump
		mov    $0x000001,%ebx
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		call   _072a10_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072ed0_jump:
		movw   $0x000000,0x000052(%ecx)

	_072ed6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072edc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _071ec0_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _07300c_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000006,%eax
		je     _072f01_jump
		movw   $0x000000,0x000052(%ecx)

	_072f01_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _072f14_jump
		cmp    $0x000006,%eax
		jne    _072fb4_jump

	_072f14_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _072f38_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _072f5b_jump

	_072f38_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_072f5b_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _072fb4_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _072fb4_jump
		cmpb   $0x000000,0x00007b(%ecx)
		je     _072fa3_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _072fad_jump

	_072fa3_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_072fad_jump:
		mov    %ecx,%eax
		call   _056614_func

	_072fb4_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000006,%eax
		jne    _073012_jump
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _073012_jump
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		dec    %eax
		xor    %edx,%edx
		mov    _0c24c9_data(%eax),%dl
		cmp    %eax,%edx
		jne    _073012_jump
		mov    $0x000001,%ebx
		xor    %eax,%edx
		mov    %ecx,%eax
		call   _072a10_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07300c_jump:
		movw   $0x000000,0x000052(%ecx)

	_073012_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073018_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%edi
		mov    %dx,0x00000c(%esp)
		mov    _0c1b34_data,%esi
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _07304f_jump
		jmp    _0732cf_jump

	_07303f_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _0732cf_jump

	_07304f_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000024,%edx
		jne    _07303f_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _07303f_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		movb   $0x0000c8,0x00007f(%esi)
		test   %eax,%eax
		je     _07308c_jump
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _0730ae_jump

	_07308c_jump:
		mov    0x000081(%edi),%ah
		lea    0x000081(%esi),%edx
		test   $0x000008,%ah
		sete   %al
		mov    (%edx),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,(%edx)

	_0730ae_jump:
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    $0xffffffff,%edx
		test   %eax,%eax
		jne    _0730ea_jump
		mov    0x00006c(%edi),%al
		cmp    $0x00000d,%eax
		jne    _0730ea_jump
		mov    $0x000065,%ecx
		xor    %eax,%eax
		mov    $0x000034,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _0730e2_jump
		cmp    %ecx,%eax
		jg     _0730e2_jump
		mov    $0x000001,%eax
		jmp    _0730e4_jump

	_0730e2_jump:
		xor    %eax,%eax

	_0730e4_jump:
		test   %eax,%eax
		je     _073124_jump
		jmp    _07311f_jump

	_0730ea_jump:
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		test   %eax,%eax
		jne    _073124_jump
		mov    0x00006c(%edi),%al
		cmp    $0x000009,%eax
		jne    _073124_jump
		mov    $0x000037,%ecx
		xor    %eax,%eax
		mov    $0x000010,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _073119_jump
		cmp    %ecx,%eax
		jg     _073119_jump
		mov    $0x000001,%eax
		jmp    _07311b_jump

	_073119_jump:
		xor    %eax,%eax

	_07311b_jump:
		test   %eax,%eax
		je     _073124_jump

	_07311f_jump:
		mov    $0x000003,%edx

	_073124_jump:
		movswl %dx,%edx
		cmp    $0xffffffff,%edx
		jne    _073191_jump
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_073134_jump:
		mov    $0xfffffffe,%edx
		mov    _0c1f03_data,%al
		mov    %edx,0x000008(%esp)
		dec    %al
		add    %al,0x000076(%edi)
		jmp    _0731c7_jump

	_07314c_jump:
		movl   $0x000001,0x000008(%esp)
		jmp    _0731c7_jump

	_073159_jump:
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		cmp    $0x000002,%eax
		jne    _07317b_jump
		mov    _0c24c2_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0c24c4_data,%ax
		mov    %ax,0x00004c(%esi)
		jmp    _0731c7_jump

	_07317b_jump:
		mov    _0c1b74_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0c1b78_data,%ax
		mov    %ax,0x00004c(%esi)
		jmp    _0731c7_jump

	_073191_jump:
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000020(%esp),%ebx
		mov    %edi,%eax
		call   _01da90_func
		mov    0x00000c(%esp),%edx
		cmp    $0x000001,%dx
		jb     _0731be_jump
		jbe    _07314c_jump
		cmp    $0x000002,%dx
		je     _073159_jump
		jmp    _0731c7_jump

	_0731be_jump:
		test   %dx,%dx
		je     _073134_jump

	_0731c7_jump:
		mov    0x000016(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    0x000002(%esp),%edx
		sar    $0x000011,%edx
		add    %edx,%eax
		mov    %eax,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		je     _07326a_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _07323b_jump
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		movsbw 0x000001(%eax,%edx,8),%ax
		jmp    _073254_jump

	_07323b_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw (%edx,%eax,8),%ax

	_073254_jump:
		mov    %eax,0x000014(%esp)
		mov    %esi,%eax
		call   _04aad8_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d6e8_func
		jmp    _07328c_jump

	_07326a_jump:
		mov    $0x000001,%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		lea    0x000008(%esp),%ebx
		call   _01d6e8_func
		push   $0x000003
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01eb9c_func

	_07328c_jump:
		mov    0x000014(%esp),%eax
		mov    %ax,0x000040(%esi)
		mov    0x000008(%esp),%eax
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01df3c_func
		movb   $0x000000,0x000071(%esi)
		movb   $0x000007,0x000072(%esi)
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f7d4_func
		andb   $0x0000bf,0x000081(%esi)

	_0732cf_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0732d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _073412_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000d,%eax
		jne    _0732fc_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000065,%eax
		jge    _073316_jump

	_0732fc_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000009,%eax
		jne    _073310_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000037,%eax
		jge    _073316_jump

	_073310_jump:
		movw   $0x000000,0x000052(%ecx)

	_073316_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _073329_jump
		cmp    $0x00000e,%eax
		je     _073329_jump
		cmp    $0x000008,%eax
		jne    _07335a_jump

	_073329_jump:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000001,%eax
		jge    _07335a_jump
		xor    %eax,%eax
		mov    0x00007b(%ecx),%al
		cmp    $0x000002,%eax
		jl     _073349_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _073353_jump

	_073349_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx

	_073353_jump:
		mov    %ecx,%eax
		call   _056614_func

	_07335a_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%edx
		cmp    $0x00000d,%eax
		jne    _0733c2_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _073418_jump
		mov    0x00006b(%ecx),%al
		cmp    $0x000065,%eax
		jne    _073418_jump
		xor    %eax,%eax
		mov    0x00000c(%ecx),%ebx
		mov    0x00006d(%ecx),%al
		mov    (%ebx,%eax,4),%eax
		mov    0x000005(%edx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _073418_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _073018_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0733c2_jump:
		cmp    $0x000009,%eax
		jne    _073418_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _073418_jump
		mov    0x00006b(%ecx),%al
		cmp    $0x000037,%eax
		jne    _073418_jump
		xor    %eax,%eax
		mov    0x00000c(%ecx),%ebx
		mov    0x00006d(%ecx),%al
		mov    (%ebx,%eax,4),%eax
		mov    0x000005(%edx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c24c8_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _073418_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _073018_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_073412_jump:
		movw   $0x000000,0x000052(%ecx)

	_073418_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07341c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		cmp    $0x000008,%dx
		jb     _07344e_jump
		jbe    _073440_jump
		cmp    $0x000009,%dx
		je     _073447_jump
		jmp    _073454_jump

	_073439_jump:
		mov    $0xfffffffd,%edi
		jmp    _073454_jump

	_073440_jump:
		mov    $0x000002,%edi
		jmp    _073454_jump

	_073447_jump:
		mov    $0xffffffff,%edi
		jmp    _073454_jump

	_07344e_jump:
		cmp    $0x000007,%dx
		je     _073439_jump

	_073454_jump:
		mov    _0c1b34_data,%ecx
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _07347d_jump
		jmp    _0734f6_jump

	_07346d_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _0734f6_jump

	_07347d_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00006e,%edx
		jne    _07346d_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07346d_jump
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    (%esp),%bl
		call   _01d6f8_func
		movw   $0x00fffa,0x000042(%ecx)
		mov    %di,0x000040(%ecx)
		mov    0x000028(%esi),%edx
		mov    %edx,0x000028(%ecx)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		call   _056614_func
		mov    %ecx,%eax
		call   _01df3c_func
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f7d4_func
		movb   $0x000000,0x000071(%ecx)
		mov    0x000081(%ecx),%dl
		movb   $0x000005,0x000072(%ecx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ecx)

	_0734f6_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_073500_switch:
		.long   _0735a1_case
		.long   _0735b2_case
		.long   _0735c0_case
		.long   _0735ce_case
		.long   _0735dc_case




_073514_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    $0x000054,%eax
		call   _068d70_func
		mov    _0c1b34_data,%ebp
		mov    _0c1b38_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _07354c_jump
		jmp    _07356d_jump

	_073540_jump:
		inc    %eax
		add    $0x000084,%ebp
		cmp    %bx,%ax
		jge    _07356d_jump

	_07354c_jump:
		xor    %edx,%edx
		mov    0x000060(%ebp),%dx
		cmp    $0x00006e,%edx
		jne    _073540_jump
		mov    %ebp,%edi

	_073559_jump:
		xor    %eax,%eax
		mov    0x0000e4(%edi),%ax
		add    $0x000084,%edi
		cmp    $0x00006e,%eax
		je     _073559_jump

	_07356d_jump:
		xor    %eax,%eax
		mov    0x000060(%ebp),%ax
		cmp    $0x00006e,%eax
		jne    _0736af_jump
		xor    %edx,%edx
		mov    %dx,0x000010(%esp)
		jmp    _07368f_jump

	_073588_jump:
		add    $0x000084,%esi
		cmp    %edi,%esi
		ja     _073598_jump

	_073592_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _073588_jump

	_073598_jump:
		cmp    %edi,%esi
		jbe    _0735ea_jump
		jmp    _07368a_jump

	_0735a1_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		jmp    _073622_jump

	_0735b2_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x00fffe,0x000040(%esi)
		jmp    _073622_jump

	_0735c0_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x00fffc,0x000040(%esi)
		jmp    _073622_jump

	_0735ce_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		jmp    _073622_jump

	_0735dc_case:
		movw   $0x00fffa,0x000042(%esi)
		movw   $0x00ffff,0x000040(%esi)
		jmp    _073622_jump

	_0735ea_jump:
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    0x000010(%esp),%bl
		call   _01d6f8_func
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    0x000010(%esp),%ebx
		mov    %ah,0x000081(%esi)
		cmp    $0x000004,%bx
		ja     _073622_jump
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    *%cs:_073500_switch(,%eax,4)

	_073622_jump:
		lea    0x000014(%esp),%eax
		mov    0x00000e(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    0x000008(%esp),%eax
		call   _01da90_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		mov    0x000006(%esp),%eax
		mov    $0x000001,%ebx
		sar    $0x000010,%eax
		mov    %ebx,%edx
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _056614_func
		mov    %esi,%eax
		call   _01df3c_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f7d4_func

	_07368a_jump:
		incw   0x000010(%esp)

	_07368f_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jge    _0736af_jump
		mov    %ebp,%esi
		cmp    %edi,%ebp
		jbe    _073592_jump
		cmp    %edi,%esi
		jbe    _0735ea_jump
		jmp    _07368a_jump

	_0736af_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx

	_0736b7_jump:
		pop    %ebx
		ret    

_0736bc_switch:
		.long   _07375d_case
		.long   _073743_case
		.long   _073729_case
		.long   _0736ea_case




_0736cc_func:
		push   %ebx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		test   %eax,%eax
		jne    _0736b7_jump
		mov    _0c2512_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0737c9_jump
		pop    %ebx
		ret    

	_0736ea_case:
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _07341c_func
		mov    _0c2512_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    $0x000006,%edx
		call   _01d6e8_func
		pop    %ebx
		ret    

	_073729_case:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _07341c_func
		pop    %ebx
		ret    

	_073743_case:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _07341c_func
		pop    %ebx
		ret    

	_07375d_case:
		mov    _0c2512_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		mov    0x00006c(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		cmp    $0x000006,%eax
		jne    _0736b7_jump
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01d6e8_func
		mov    _0c2512_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b34_data,%edx
		movb   $0x000003,0x00006c(%edx,%eax,4)
		movb   $0x000004,0x00006e(%edx,%eax,4)
		movb   $0x00000a,0x00006e(%ebx)
		pop    %ebx
		ret    

	_0737c9_jump:
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    0x000076(%ebx),%ah
		dec    %ah
		mov    %ah,0x000076(%ebx)
		mov    %ah,%al
		cmp    $0x000003,%ah
		ja     _0736b7_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0736bc_switch(,%eax,4)



_0737fc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _07386e_jump
		mov    %ecx,%eax
		call   _01eb7c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _07385e_jump
		mov    %ecx,%eax
		call   _073514_func
		movl   $0x000000,0x000024(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0c1b96_data,%dx
		jne    _073854_jump
		movw   $0x00ffff,_0c1b96_data
		mov    $0x000002,%ebx
		mov    $_0c1b4c_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d6f8_func

	_073854_jump:
		andb   $0x0000fb,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_07385e_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d6e8_func
		movb   $0x000000,0x00006b(%ecx)

	_07386e_jump:
		pop    %ecx
		pop    %ebx
		ret    



_073874_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _07388c_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _073893_jump

	_07388c_jump:
		mov    %ecx,%eax
		call   _01eb7c_func

	_073893_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,(%esp)
		mov    %ecx,%eax
		mov    $0x000008,%edx
		call   _01dea4_func
		mov    %ecx,%eax
		call   _056614_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    (%esp),%al
		je     _0738f2_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _056614_func
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000023,%eax
		jne    _0738f2_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _072a10_func

	_0738f2_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		cmp    $0x000003,%eax
		jge    _073946_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000023,%eax
		jne    _073915_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _072a10_func

	_073915_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _073934_jump
		mov    $0x000001,%ebx
		mov    0x000077(%ecx),%al
		xor    %edx,%edx
		mov    %al,0x000076(%ecx)
		mov    %ecx,%eax
		call   _056614_func
		jmp    _073946_jump

	_073934_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _056614_func
		movb   $0x000002,0x000073(%ecx)

	_073946_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_07394c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb7c_func
		movb   $0x000000,0x00007f(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%bl
		call   _01dea4_func
		mov    0x000032(%ecx),%edx
		mov    $0x000056,%eax
		sar    $0x000010,%edx
		call   _068654_func
		mov    0x000081(%ecx),%dl
		shl    $0x000004,%bl
		shl    $0x000004,%dl
		shr    $0x000007,%bl
		shr    $0x000007,%dl
		cmp    %bl,%dl
		je     _0739a6_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		call   _073018_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _056614_func
		pop    %ecx
		pop    %ebx
		ret    

	_0739a6_jump:
		xor    %edx,%edx
		mov    0x000076(%ecx),%dl
		cmp    $0x00000f,%edx
		jge    _0739f5_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _073018_func
		xor    %edx,%edx
		mov    0x000076(%ecx),%dl
		test   %edx,%edx
		jne    _0739d9_jump
		mov    $0x000001,%ebx
		mov    0x000077(%ecx),%dl
		mov    %ecx,%eax
		mov    %dl,0x000076(%ecx)
		xor    %edx,%edx
		call   _056614_func
		pop    %ecx
		pop    %ebx
		ret    

	_0739d9_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		cmp    $0x000001,%edx
		je     _0739f1_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _056614_func

	_0739f1_jump:
		movb   $0x000002,0x000073(%ecx)

	_0739f5_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0739f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _073a2c_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _073a3d_jump
		cmp    $0x000002,%eax
		je     _073a3d_jump
		cmp    $0x000005,%eax
		je     _073a3d_jump
		cmp    $0x000006,%eax
		je     _073a3d_jump
		cmp    $0x000003,%eax
		je     _073a3d_jump
		cmp    $0x000007,%eax
		je     _073a3d_jump
		cmp    $0x000004,%eax
		je     _073a3d_jump

	_073a2c_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _056614_func

	_073a3d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073a44_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _073a59_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _073a6c_jump

	_073a59_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _073a85_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _073a85_jump

	_073a6c_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _056614_func
		movb   $0x000007,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)

	_073a85_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073a90_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%ebp
		mov    %edx,%eax
		lea    0x00c800(%edx),%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_073aa8_jump:
		mov    %ebp,%ecx
		mov    %edx,%edi
		mov    %ebx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _073ab8_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_073ab8_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _073aa8_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_073adc_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ecx
		mov    %ebx,%ebp
		mov    %eax,%edx
		add    $0x00c800,%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_073af3_jump:
		mov    %ebp,%ecx
		mov    %ebx,%edi
		mov    %edx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _073b03_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_073b03_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _073af3_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_073b30_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _073be1_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _073be1_jump
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		mov    %ecx,%eax
		call   _073da8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_073b65_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		mov    %ecx,%eax
		call   _073da8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_073b80_jump:
		and    $0x0000ff,%eax
		jne    _073b90_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _073b97_jump

	_073b90_jump:
		orb    $0x000008,0x000081(%ecx)

	_073b97_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _073ba7_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _073bba_jump

	_073ba7_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _073bf4_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _073bf4_jump

	_073bba_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d6f8_func
		mov    %ecx,%eax
		call   _04aad8_func

	_073bcf_jump:
		mov    %ecx,%eax
		call   _0248b8_func
		mov    %ecx,%eax
		call   _073da8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_073be1_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000002,%al
		jb     _073b80_jump
		jbe    _073bcf_jump
		cmp    $0x000014,%al
		jb     _073bf4_jump
		jbe    _073b65_jump

	_073bf4_jump:
		mov    %ecx,%eax
		call   _073da8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073c00_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		lea    0x00000c(%esp),%ecx
		movb   $0x000064,0x00007f(%eax)
		lea    0x000008(%esp),%eax
		mov    %esp,%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d610_func
		testb  $0x000008,0x000081(%esi)
		je     _073c44_jump
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%ebx
		sub    $0x000010,%eax
		add    %eax,%ebx
		mov    %bx,0x000004(%esp)
		jmp    _073c58_jump

	_073c44_jump:
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%edx
		add    $0x00004c,%eax
		sub    %eax,%edx
		mov    %dx,0x000004(%esp)

	_073c58_jump:
		mov    0x00000c(%esp),%ecx
		add    $0x00005c,%ecx
		mov    0x000008(%esp),%eax
		mov    %cx,0x00000c(%esp)
		mov    $0x000001,%cl
		test   %ax,%ax
		js     _073c74_jump
		sar    %cl,%ax
		jmp    _073c7d_jump

	_073c74_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_073c7d_jump:
		add    $0x000002,%eax
		mov    $0x000002,%cl
		mov    %ax,0x000008(%esp)
		test   %ax,%ax
		js     _073c93_jump
		sar    %cl,%ax
		jmp    _073c9c_jump

	_073c93_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_073c9c_jump:
		mov    (%esp),%edi
		add    %eax,%edi
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    _0c25a8_data,%ecx
		sar    $0x000010,%eax
		mov    %di,0x000004(%esp)
		push   %eax
		mov    0x000006(%esp),%eax
		mov    _0c25a6_data,%ebx
		sar    $0x000010,%eax
		mov    _0c25a4_data,%edx
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    _0c25a2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0291bc_func
		test   %ax,%ax
		je     _073d72_jump
		mov    $0x000001,%cl
		mov    _0c25a8_data,%ax
		test   %ax,%ax
		js     _073d09_jump
		sar    %cl,%ax
		jmp    _073d12_jump

	_073d09_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_073d12_jump:
		mov    $0x000001,%cl
		mov    _0c25aa_data,%ax
		test   %ax,%ax
		js     _073d24_jump
		sar    %cl,%ax
		jmp    _073d2d_jump

	_073d24_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_073d2d_jump:
		mov    0x000081(%esi),%dl
		shl    $0x000004,%dl
		mov    $0x000007,%eax
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		jne    _073d4e_jump
		mov    0x000010(%esp),%dl
		test   %edx,%edx
		je     _073d70_jump

	_073d4e_jump:
		mov    0x000081(%esi),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		jne    _073d72_jump
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		cmp    $0x000001,%edx
		jne    _073d72_jump

	_073d70_jump:
		neg    %eax

	_073d72_jump:
		test   %ax,%ax
		je     _073da0_jump
		mov    _0c2598_data,%dx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1bb9_data,%al
		mov    %dx,_0c2598_data
		cmp    $0x000005,%eax
		je     _073da0_jump
		mov    $0x000008,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0c25b4_data

	_073da0_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_073da8_func:
		push   %edx
		mov    0x00007f(%eax),%dl
		test   %dl,%dl
		je     _073db7_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x00007f(%eax)

	_073db7_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _073e03_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000002,%edx
		jne    _073dd2_jump
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		cmp    $0x00000a,%edx
		jge    _073ddc_jump

	_073dd2_jump:
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000004,%edx
		jne    _073de0_jump

	_073ddc_jump:
		xor    %edx,%edx
		jmp    _073dfe_jump

	_073de0_jump:
		cmp    $0x000006,%edx
		jne    _073def_jump
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		cmp    $0x00000a,%edx
		jge    _073df9_jump

	_073def_jump:
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000007,%edx
		jne    _073e03_jump

	_073df9_jump:
		mov    $0x000001,%edx

	_073dfe_jump:
		call   _073c00_func

	_073e03_jump:
		pop    %edx
		ret    



_073e08_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		call   _056614_func
		mov    %ecx,%eax
		call   _024bd4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073e28_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb7c_func
		mov    _0c1ef0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _073e49_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _073e52_jump

	_073e49_jump:
		jge    _073e52_jump
		orb    $0x000008,0x000081(%ecx)

	_073e52_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _073e78_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _056614_func
		pop    %ecx
		pop    %ebx
		ret    

	_073e78_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		mov    0x000081(%ecx),%dh
		movb   $0x000002,0x000070(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_073e9c_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00007f(%eax),%dl
		test   %edx,%edx
		jne    _073ed7_jump
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _073eb5_jump
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		je     _073ec8_jump

	_073eb5_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _073ed7_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		jne    _073ed7_jump

	_073ec8_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _056614_func

	_073ed7_jump:
		pop    %edx
		pop    %ebx
		ret    



_073ee0_func:
		push   %esi
		push   %edi
		push   %ebp
		movswl %cx,%ecx
		mov    0x00002c(%eax),%ebp
		movswl %bx,%ebx
		add    %ebp,%ecx
		mov    0x000028(%eax),%edi
		sar    $0x000004,%ecx
		add    %edi,%ebx
		mov    %ecx,%edi
		mov    _0c24e4_data,%cx
		imul   %edi,%ecx
		sar    $0x000004,%ebx
		add    %ebx,%ecx
		xor    %esi,%esi
		mov    %cx,(%edx)
		cmp    0x000058(%eax),%cx
		je     _073f83_jump
		mov    %cx,0x000058(%eax)
		mov    _0c24e2_data,%ecx
		movswl %bx,%eax
		sar    $0x000010,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _073f34_jump
		cmp    %ecx,%eax
		jg     _073f34_jump
		mov    $0x000001,%eax
		jmp    _073f36_jump

	_073f34_jump:
		xor    %eax,%eax

	_073f36_jump:
		test   %eax,%eax
		je     _073f83_jump
		mov    _0c24e4_data,%ecx
		movswl %di,%eax
		sar    $0x000010,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _073f58_jump
		cmp    %ecx,%eax
		jg     _073f58_jump
		mov    $0x000001,%eax
		jmp    _073f5a_jump

	_073f58_jump:
		xor    %eax,%eax

	_073f5a_jump:
		test   %eax,%eax
		je     _073f83_jump
		movswl (%edx),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24ec_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		sete   %al
		xor    %ah,%ah
		mov    %eax,%esi

	_073f83_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

_073f8c_switch:
		.long   _074277_case
		.long   _07430d_case
		.long   _0742ef_case
		.long   _0742d3_case
		.long   _074237_case
		.long   _074273_case
		.long   _0742ad_case
		.long   _0742eb_case
		.long   _0740b0_case
		.long   _074121_case
		.long   _074121_case
		.long   _0741ac_case
		.long   _0741ac_case




_073fc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    0x000081(%eax),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edi)
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		test   %eax,%eax
		jne    _074372_jump
		mov    0x00006c(%edi),%al
		cmp    $0x00000e,%eax
		jne    _074372_jump
		lea    0x000004(%esp),%edx
		mov    %edi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x000069(%edi),%cl
		mov    0x000068(%edi),%bl
		call   _073ee0_func
		test   %ax,%ax
		je     _074372_jump
		mov    _0c23c0_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0c1b34_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		mov    _0c248a_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _07406b_jump
		jmp    _074372_jump

	_07403f_jump:
		inc    %eax
		movswl %ax,%edx
		mov    _0c23c0_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0c1b34_data,%ebx
		mov    _0c248a_data,%cx
		add    %ebx,%edx
		cmp    %cx,%ax
		jge    _074372_jump

	_07406b_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000a3,%ebx
		jne    _07403f_jump
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    _0c24e2_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x000028(%edx),%esi
		mov    0x000068(%edx),%bl
		add    %esi,%ebx
		sar    $0x000004,%ebx
		mov    0x000004(%esp),%esi
		add    %ecx,%ebx
		cmp    %si,%bx
		je     _074323_jump
		jmp    _07403f_jump

	_0740b0_case:
		test   %ebp,%ebp
		jne    _0740d1_jump
		mov    (%esp),%ebx
		test   %ebx,%ebx
		jle    _0740c4_jump
		mov    %eax,%ecx
		neg    %ecx
		jmp    _07436a_jump

	_0740c4_jump:
		jge    _07436a_jump
		mov    %eax,%ecx
		jmp    _07436a_jump

	_0740d1_jump:
		cmpl   $0x000000,(%esp)
		jne    _07410b_jump
		test   %ebp,%ebp
		jle    _0740f1_jump
		mov    %eax,%esi
		neg    %esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0740f1_jump:
		jge    _07436a_jump
		mov    %eax,%esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07410b_jump:
		neg    %esi
		neg    %ecx
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074121_case:
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000009,%eax
		jne    _074132_jump
		mov    $0x000001,%eax
		jmp    _074137_jump

	_074132_jump:
		mov    $0xffffffff,%eax

	_074137_jump:
		mov    %eax,%edx
		movswl %cx,%eax
		test   %eax,%eax
		jne    _07418d_jump
		movswl %si,%eax
		test   %eax,%eax
		jle    _074169_jump
		mov    0x000008(%esp),%esi
		add    %edx,%esi
		movswl %si,%eax
		cmp    $0x000004,%eax
		jle    _07415a_jump
		mov    $0x000004,%esi

	_07415a_jump:
		movswl %si,%eax
		cmp    $0x000002,%eax
		jge    _07418d_jump
		mov    $0x000002,%esi
		jmp    _07418d_jump

	_074169_jump:
		jge    _07418d_jump
		mov    0x000008(%esp),%ebx
		mov    %edx,%esi
		sub    %ebx,%esi
		movswl %si,%eax
		cmp    $0xfffffffe,%eax
		jle    _074180_jump
		mov    $0xfffffffe,%esi

	_074180_jump:
		movswl %si,%eax
		cmp    $0xfffffffc,%eax
		jge    _07418d_jump
		mov    $0xfffffffc,%esi

	_07418d_jump:
		movswl %si,%eax
		test   %eax,%eax
		je     _07436a_jump
		xor    %ecx,%ecx
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0741ac_case:
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x00000b,%eax
		jne    _0741bd_jump
		mov    $0x000001,%eax
		jmp    _0741c2_jump

	_0741bd_jump:
		mov    $0xffffffff,%eax

	_0741c2_jump:
		mov    %eax,%edx
		movswl %si,%eax
		test   %eax,%eax
		jne    _074218_jump
		movswl %cx,%eax
		test   %eax,%eax
		jle    _0741f4_jump
		mov    0x000008(%esp),%ecx
		add    %edx,%ecx
		movswl %cx,%eax
		cmp    $0x000004,%eax
		jle    _0741e5_jump
		mov    $0x000004,%ecx

	_0741e5_jump:
		movswl %cx,%eax
		cmp    $0x000002,%eax
		jge    _074218_jump
		mov    $0x000002,%ecx
		jmp    _074218_jump

	_0741f4_jump:
		jge    _074218_jump
		mov    0x000008(%esp),%eax
		mov    %edx,%ecx
		sub    %eax,%ecx
		movswl %cx,%eax
		cmp    $0xfffffffe,%eax
		jle    _07420b_jump
		mov    $0xfffffffe,%ecx

	_07420b_jump:
		movswl %cx,%eax
		cmp    $0xfffffffc,%eax
		jge    _074218_jump
		mov    $0xfffffffc,%ecx

	_074218_jump:
		movswl %cx,%eax
		test   %eax,%eax
		je     _07436a_jump
		xor    %esi,%esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074237_case:
		test   %ebp,%ebp
		jne    _074251_jump
		mov    %eax,%esi
		xor    %ecx,%ecx
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074251_jump:
		cmpl   $0x000000,(%esp)
		jne    _07436a_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074273_case:
		test   %ebp,%ebp
		jne    _07428d_jump

	_074277_case:
		mov    %eax,%esi
		xor    %ecx,%ecx
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07428d_jump:
		cmpl   $0x000000,(%esp)
		jne    _07436a_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0742ad_case:
		test   %ebp,%ebp
		jne    _0742c9_jump
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0742c9_jump:
		cmpl   $0x000000,(%esp)
		jne    _07436a_jump

	_0742d3_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0742eb_case:
		test   %ebp,%ebp
		jne    _074307_jump

	_0742ef_case:
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074307_jump:
		cmpl   $0x000000,(%esp)
		jne    _07436a_jump

	_07430d_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074323_jump:
		mov    0x000042(%edi),%cx
		mov    0x000040(%edi),%si
		movswl %cx,%eax
		movswl %si,%ebp
		mov    %eax,(%esp)
		test   %eax,%eax
		jge    _07433a_jump
		neg    %eax

	_07433a_jump:
		mov    %eax,%ebx
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _074344_jump
		neg    %eax

	_074344_jump:
		cmp    %ebx,%eax
		jge    _07434a_jump
		mov    %ebx,%eax

	_07434a_jump:
		mov    0x00006c(%edx),%bl
		mov    %eax,0x000008(%esp)
		mov    %bl,0x00000c(%esp)
		cmp    $0x00000c,%bl
		ja     _07436a_jump
		xor    %ebx,%ebx
		mov    0x00000c(%esp),%bl
		shl    $0x000002,%ebx
		jmp    *%cs:_073f8c_switch(%ebx)

	_07436a_jump:
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)

	_074372_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx

	_074379_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07437c_func:
		push   %edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000003,%dl
		ja     _07439a_jump
		mov    0x000081(%eax),%dl
		movb   $0x000004,0x00007e(%eax)
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    

	_07439a_jump:
		movb   $0x000000,0x00007e(%eax)
		pop    %edx
		ret    

_0743a0_switch:
		.long   _07441a_case
		.long   _074427_case
		.long   _074434_case
		.long   _074441_case




_0743b0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000005,%eax
		jne    _074379_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000035,%eax
		jne    _074379_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000eb,%eax
		sar    $0x000010,%edx
		mov    $0x000036,%ebx
		call   _068654_func
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d6f8_func
		mov    0x000032(%ecx),%edx
		mov    _0c1b30_data,%eax
		sar    $0x000010,%edx
		movswl (%eax,%edx,2),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b34_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		cmp    $0x0000a3,%edx
		je     _07444b_jump
		pop    %ecx
		pop    %ebx
		ret    

	_07441a_case:
		mov    $0x000001,%edx
		call   _01d6e8_func
		pop    %ecx
		pop    %ebx
		ret    

	_074427_case:
		mov    $0x000002,%edx
		call   _01d6e8_func
		pop    %ecx
		pop    %ebx
		ret    

	_074434_case:
		mov    $0x000003,%edx
		call   _01d6e8_func
		pop    %ecx
		pop    %ebx
		ret    

	_074441_case:
		xor    %edx,%edx
		call   _01d6e8_func
		pop    %ecx
		pop    %ebx
		ret    

	_07444b_jump:
		mov    0x00006c(%eax),%cl
		cmp    $0x000003,%cl
		ja     _074379_jump
		xor    %edx,%edx
		mov    %cl,%dl
		jmp    *%cs:_0743a0_switch(,%edx,4)



_074464_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _074494_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000d,%eax
		jne    _074494_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d6f8_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_074494_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0744a0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0dd2e0_data,%esi
		mov    %eax,%edx
		movzbl (%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x00001c(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%esi),%ecx
		mov    %al,0x000014(%esp)
		call   _010010_func
		movw   $0x000000,0x000004(%esi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _0744f8_jump
		mov    %ebx,%eax

	_0744f8_jump:
		movswl %di,%ebx
		mov    %ax,0x000006(%esi)
		test   %ebx,%ebx
		jl     _074510_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _07450e_jump
		mov    %ebx,%eax

	_07450e_jump:
		jmp    _07451f_jump

	_074510_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _07451d_jump
		mov    %ebx,%eax

	_07451d_jump:
		neg    %eax

	_07451f_jump:
		mov    %ax,0x000008(%esi)
		xor    %ah,%ah
		mov    %ah,0x000010(%esp)
		mov    0x000014(%esp),%al
		mov    %al,(%esp)
		mul    %ah
		mov    %al,0x000004(%esp)
		xor    %dl,%dl

	_074538_jump:
		mov    0x000004(%esp),%al
		mov    %al,0x000018(%esp)

	_074540_jump:
		xor    %ah,%ah
		xor    %bh,%bh
		mov    0x00001c(%esp),%al
		mov    %dl,%bl
		imul   %ebx,%eax
		mov    %eax,%ebx
		mov    %ax,0x000004(%ecx)
		xor    %ah,%bh
		mov    %ax,(%ecx)
		mov    0x000018(%esp),%bl
		xor    %edi,%edi
		mov    %bl,0x000006(%ecx)
		mov    %ax,%di
		mov    %bl,0x000002(%ecx)
		cmp    $0x0000a0,%edi
		jge    _0745c5_jump
		mov    0x000014(%esi),%edi
		mov    %edi,0x000008(%ecx)

	_074575_jump:
		mov    %al,0x00002e(%ecx)
		mov    %al,0x00002c(%ecx)
		add    0x00001c(%esp),%al
		dec    %al
		mov    %al,0x000032(%ecx)
		mov    %al,0x000030(%ecx)
		mov    0x000014(%esp),%al
		mov    %bl,0x000033(%ecx)
		add    %bl,%al
		mov    %bl,0x00002d(%ecx)
		dec    %al
		mov    %al,0x000031(%ecx)
		inc    %dl
		mov    %al,0x00002f(%ecx)
		mov    (%esi),%dh
		add    $0x000034,%ecx
		cmp    %dh,%dl
		jbe    _074540_jump
		mov    (%esp),%al
		add    %al,0x000004(%esp)
		mov    0x000010(%esp),%dh
		inc    %dh
		mov    0x000001(%esi),%bl
		mov    %dh,0x000010(%esp)
		cmp    %bl,%dh
		ja     _0745d3_jump
		xor    %dl,%dl
		jmp    _074538_jump

	_0745c5_jump:
		mov    0x000018(%esi),%edi
		sub    $0x0000a0,%eax
		mov    %edi,0x000008(%ecx)
		jmp    _074575_jump

	_0745d3_jump:
		xor    %bh,%bh
		mov    %bh,0x00000c(%esp)
		mov    %bh,0x000008(%esp)
		jmp    _07462f_jump

	_0745df_jump:
		lea    (%esi,%eax,1),%edi
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		add    %eax,%eax
		mov    $0xc0440000,%ecx
		cwtl   
		movb   $0x000000,0x000020(%edi)
		call   _0532c0_func
		cwtl   
		xor    %ebx,%ebx
		call   _079562_func
		call   _07975f_func
		mov    $0x3f600000,%ecx
		xor    %ebx,%ebx
		call   _07975f_func
		call   _07a21c_func
		mov    0x00000c(%esp),%ch
		mov    %al,0x00006b(%edi)
		mov    0x000008(%esp),%al
		add    $0x00000a,%ch
		inc    %al
		mov    %ch,0x00000c(%esp)
		mov    %al,0x000008(%esp)

	_07462f_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		cmp    $0x00004b,%eax
		jl     _0745df_jump
		movw   $0x000000,0x0000b6(%esi)
		movb   $0x00004b,0x0000b8(%esi)
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_074654_case:
		push   %ebx
		push   %edx
		mov    _0dd2e0_data,%eax
		test   %eax,%eax
		je     _07467e_jump
		mov    0x00001c(%eax),%edx
		test   %edx,%edx
		je     _07466d_jump
		mov    %edx,%eax
		call   _07539c_func

	_07466d_jump:
		mov    _0dd2e0_data,%ebx
		test   %ebx,%ebx
		je     _07467e_jump
		mov    %ebx,%eax
		call   _07539c_func

	_07467e_jump:
		pop    %edx
		pop    %ebx
		ret    



_074684_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,%edi
		mov    %bx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _07473e_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _07473e_jump
		mov    $0x0000bc,%eax
		call   _075384_func
		mov    %eax,%edx
		mov    %eax,_0dd2e0_data
		test   %eax,%eax
		je     _07473e_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    0x000008(%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _0746d9_jump
		mov    %ebx,%eax

	_0746d9_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _0746eb_jump
		mov    %ebx,%eax

	_0746eb_jump:
		mov    %al,0x000001(%edx)
		mov    0x000008(%esp),%eax
		inc    %edi
		inc    %eax
		imul   %edi,%eax
		mov    %ax,0x000002(%edx)
		mov    0x000018(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		call   _075384_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _07473e_jump
		mov    _0cdf30_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_07473e_jump:
		test   %cl,%cl
		je     _07477b_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _073a90_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _073a90_func
		xor    %edx,%edx
		mov    0x000002(%esp),%eax
		mov    (%esp),%dx
		sar    $0x000010,%eax
		call   _0744a0_func
		jmp    _074780_jump

	_07477b_jump:
		call   _074654_case

	_074780_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_07478c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		xor    %ah,%ah
		mov    _0dd2e0_data,%ebp
		jmp    _0748ad_jump

	_0747a2_jump:
		mov    0x000008(%esp),%bl
		inc    %bl
		mov    %bl,0x000008(%esp)
		cmp    0x000001(%ebp),%bl
		jae    _074850_jump

	_0747b5_jump:
		xor    %ah,%ah
		xor    %dh,%dh
		mov    0x000000(%ebp),%al
		mov    0x000008(%esp),%dl
		inc    %eax
		imul   %edx,%eax
		xor    %ebx,%ebx
		inc    %eax
		mov    %ax,%bx
		imul   $0x000034,%ebx,%ebx
		mov    0x00001c(%ebp),%eax
		mov    $0x000001,%ch
		add    %eax,%ebx
		mov    0x000000(%ebp),%al
		mov    %ch,0x000004(%esp)
		cmp    %ch,%al
		jbe    _0747a2_jump

	_0747df_jump:
		xor    %esi,%esi
		mov    (%ebx),%si
		sub    $0x0000a0,%esi
		mov    %esi,%edx
		imul   %esi,%edx
		xor    %ecx,%ecx
		mov    0x000002(%ebx),%cl
		sub    $0x000064,%ecx
		mov    %ecx,%eax
		imul   %ecx,%eax
		add    %edx,%eax
		sar    $0x000009,%eax
		mov    %esi,%edx
		mov    0x00001d(%eax,%ebp,1),%edi
		shl    $0x000009,%edx
		sar    $0x000018,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %ecx,%edx
		lea    0x0000a0(%eax),%esi
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %si,0x000004(%ebx)
		mov    0x000004(%esp),%dl
		lea    0x000064(%eax),%ecx
		inc    %dl
		mov    %cl,0x000006(%ebx)
		mov    %dl,0x000004(%esp)
		mov    0x000000(%ebp),%dh
		add    $0x000034,%ebx
		cmp    %dh,%dl
		jae    _0747a2_jump
		jmp    _0747df_jump

	_074850_jump:
		xor    %eax,%eax
		mov    0x0000b8(%ebp),%al
		test   %eax,%eax
		je     _074870_jump
		mov    %al,%cl
		xor    %ebx,%ebx
		dec    %cl
		mov    %cl,%bl
		mov    %cl,0x0000b8(%ebp)
		mov    0x00006b(%ebx,%ebp,1),%bl
		jmp    _074873_jump

	_074870_jump:
		mov    0x00006a(%ebp),%bl

	_074873_jump:
		xor    %eax,%eax
		mov    0x0000b6(%ebp),%ax
		cmp    $0x000258,%eax
		jle    _07488f_jump
		mov    0x00001d(%ebp),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jne    _07488f_jump
		xor    %bl,%bl

	_07488f_jump:
		mov    $0x00004a,%al
		jmp    _07489d_jump

	_074893_jump:
		mov    0x00001f(%edx,%ebp,1),%ah
		mov    %ah,0x000020(%edx,%ebp,1)
		dec    %al

	_07489d_jump:
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		jg     _074893_jump
		mov    (%esp),%ah
		inc    %ah
		mov    %bl,0x000020(%ebp)

	_0748ad_jump:
		mov    %ah,(%esp)
		mov    0x000006(%ebp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    (%esp),%dl
		test   %eax,%eax
		jge    _0748c1_jump
		neg    %eax

	_0748c1_jump:
		cmp    %eax,%edx
		jge    _0748ec_jump
		mov    $0x000001,%dl
		mov    0x0000b6(%ebp),%cx
		mov    %dl,0x000008(%esp)
		add    $0x000002,%ecx
		mov    0x000001(%ebp),%dh
		mov    %cx,0x0000b6(%ebp)
		cmp    %dl,%dh
		jbe    _074850_jump
		jmp    _0747b5_jump

	_0748ec_jump:
		mov    0x000006(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0748f8_jump
		neg    %eax

	_0748f8_jump:
		mov    0x000004(%ebp),%dx
		add    %eax,%edx
		mov    0x000006(%ebp),%bx
		mov    %dx,0x000004(%ebp)
		cmp    %bx,%dx
		jbe    _074911_jump
		movw   $0x000000,0x000004(%ebp)

	_074911_jump:
		mov    0x000004(%ebp),%ax

	_074915_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074920_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0dd2e0_data,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,(%esp)
		mov    %ah,0x000004(%esp)
		mov    0x00001c(%ebx),%edx
		mov    0x000001(%ebx),%al
		mov    %edx,%ecx
		test   %al,%al
		jbe    _074915_jump
		jmp    _074965_jump

	_074948_jump:
		mov    0x000004(%esp),%ah
		mov    (%esp),%esi
		inc    %ah
		add    $0x000034,%edx
		mov    %ah,0x000004(%esp)
		mov    %ah,%al
		inc    %esi
		mov    0x000001(%ebx),%ah
		mov    %esi,(%esp)
		cmp    %ah,%al
		jae    _074915_jump

	_074965_jump:
		xor    %al,%al
		mov    %al,0x000008(%esp)
		cmpb   $0x000000,(%ebx)
		jbe    _074948_jump
		lea    0x000008(%edx),%edi

	_074973_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		imul   $0x000034,%eax,%esi
		movzwl 0x000004(%ecx,%esi,1),%ebp
		mov    %ebp,0x00000c(%edx)
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000010(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		mov    %esi,0x000014(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000018(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		dec    %esi
		mov    %esi,0x00001c(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		inc    %eax
		imul   $0x000034,%eax,%eax
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000020(%edx)
		xor    %esi,%esi
		mov    0x000004(%ecx,%eax,1),%si
		dec    %esi
		mov    %esi,0x000024(%edx)
		mov    0x000006(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %eax,0x000028(%edx)
		mov    %edi,%esi
		mov    0x000010(%ebx),%eax
		call   _010045_func
		incl   (%esp)
		mov    0x000008(%esp),%al
		inc    %al
		add    $0x000034,%edx
		mov    %al,0x000008(%esp)
		mov    (%ebx),%ah
		add    $0x000034,%edi
		cmp    %ah,%al
		jae    _074948_jump
		jmp    _074973_jump



_074a30_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000016,%ebx
		movb   $0x000000,(%eax)
		mov    %esp,%eax
		movb   $0x000000,(%edx)
		xor    %edx,%edx
		call   _079cd0_func
		mov    $0x001600,%edx
		mov    $0x00002f,%eax
		mov    %dx,(%esp)
		mov    %esp,%edx
		call   _05c338_func
		mov    (%esp),%ah
		cmp    $0x000001,%ah
		jb     _074b48_jump
		jbe    _074a85_jump
		cmp    $0x000080,%ah
		jb     _074b50_jump
		jbe    _074a92_jump
		cmp    $0x0000ff,%ah
		jne    _074b50_jump

	_074a85_jump:
		movb   $0x000002,(%esi)
		mov    $0x000001,%al
		movb   $0x000000,(%ecx)
		jmp    _074b64_jump

	_074a92_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _079cd0_func
		mov    $0x004680,%ebx
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %bx,(%esp)
		call   _05c338_func
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000080,%eax
		jne    _074aca_jump
		xor    %al,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_074aca_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x001605,%ecx
		call   _079cd0_func
		xor    %esi,%esi
		mov    $0x000001,%edx
		mov    $0x00002f,%eax
		mov    %cx,(%esp)
		mov    %si,0x000004(%esp)
		mov    %si,0x000008(%esp)
		mov    %dx,0x000006(%esp)
		mov    %esp,%edx
		mov    %si,0x000002(%esp)
		call   _05c338_func
		xor    %eax,%eax
		mov    0x000004(%esp),%ax
		test   %eax,%eax
		jne    _074b3f_jump
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _079cd0_func
		mov    $0x001606,%ebx
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %bx,(%esp)
		call   _05c338_func
		mov    $0x000081,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_074b3f_jump:
		mov    $0x000082,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_074b48_jump:
		test   %ah,%ah
		je     _074a92_jump

	_074b50_jump:
		mov    (%esp),%al
		mov    %al,(%esi)
		mov    0x000001(%esp),%al
		mov    %al,(%ecx)
		mov    $0x000083,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_074b64_jump:
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_074b70_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000028,%esp
		mov    $0x00001c,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _079cd0_func
		mov    $0x00000c,%ebx
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		lea    0x00001c(%esp),%ecx
		call   _079cd0_func
		mov    $0x000500,%edx
		mov    $_0ce8d8_data,%eax
		mov    %edx,(%esp)
		mov    %ds,%edx
		mov    $_0ce8d8_data,%ebx
		mov    $0x000031,%eax
		mov    %dx,0x00001c(%esp)
		mov    %ebx,0x000014(%esp)
		mov    %esp,%ebx
		mov    %esp,%edx
		call   _07b548_func
		mov    _0ce8d8_data,%eax
		add    $0x000028,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074d68_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074d70_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		je     _074d92_jump
		mov    (%ebx),%ecx
		mov    0x000008(%ebx),%esi
		add    %edx,%ecx
		cmp    %esi,%ecx
		jbe    _074e29_jump

	_074d92_jump:
		mov    $0x000064,%eax
		call   _0750ac_func
		mov    %eax,%ecx
		cmp    $_0c6b2c_data,%ebx
		jne    _074dad_jump
		mov    $_0c089a_data,%esi
		jmp    _074ddf_jump

	_074dad_jump:
		cmp    $_0c6b38_data,%ebx
		jne    _074dbc_jump
		mov    $_0c089e_data,%esi
		jmp    _074ddf_jump

	_074dbc_jump:
		cmp    $_0c6b44_data,%ebx
		jne    _074dcb_jump
		mov    $_0c08a4_data,%esi
		jmp    _074ddf_jump

	_074dcb_jump:
		cmp    $_0c6b50_data,%ebx
		jne    _074dda_jump
		mov    $_0c08aa_data,%esi
		jmp    _074ddf_jump

	_074dda_jump:
		mov    $_0c08b1_data,%esi

	_074ddf_jump:
		mov    %esp,%edi
		push   %edi

	_074de2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074dfa_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074de2_jump

	_074dfa_jump:
		pop    %edi
		push   %edx
		push   %ebx
		lea    0x000008(%esp),%eax
		push   %eax
		push   $_0c08bd_data
		push   %ecx
		call   _079cfb_func
		add    $0x000014,%esp
		mov    %ecx,%eax
		call   _01f878_func
		mov    %ecx,%eax
		call   _075258_func
		xor    %eax,%eax
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_074e29_jump:
		mov    (%ebx),%edi
		mov    %ecx,(%ebx)
		mov    _0dd2e8_data,%edx
		mov    0x000004(%ebx),%eax
		mov    _0c6b2c_data,%ebp
		add    %edi,%eax
		cmp    %ebp,%edx
		jae    _074e64_jump
		mov    _0c2522_data,%dx
		mov    %dx,_0dd2ec_data
		mov    _0c2520_data,%dx
		mov    %ebp,_0dd2e8_data
		mov    %dx,_0dd2ee_data

	_074e64_jump:
		mov    _0dd2f0_data,%edx
		mov    _0c6b38_data,%ebx
		cmp    %ebx,%edx
		jae    _074e96_jump
		mov    _0c2522_data,%dx
		mov    %dx,_0dd2f4_data
		mov    _0c2520_data,%dx
		mov    %ebx,_0dd2f0_data
		mov    %dx,_0dd2f6_data

	_074e96_jump:
		mov    _0dd2f8_data,%edx
		mov    _0c6b44_data,%ecx
		cmp    %ecx,%edx
		jae    _074ec8_jump
		mov    _0c2522_data,%dx
		mov    %dx,_0dd2fc_data
		mov    _0c2520_data,%dx
		mov    %ecx,_0dd2f8_data
		mov    %dx,_0dd2fe_data

	_074ec8_jump:
		mov    _0dd300_data,%edx
		mov    _0c6b50_data,%esi
		cmp    %esi,%edx
		jae    _074efa_jump
		mov    _0c2522_data,%dx
		mov    %dx,_0dd304_data
		mov    _0c2520_data,%dx
		mov    %esi,_0dd300_data
		mov    %dx,_0dd306_data

	_074efa_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_074f04_func:
		push   %ebx
		push   %edx
		mov    _0c69a4_data,%eax
		mov    $0x000168,%ebx
		call   _07539c_func
		xor    %edx,%edx
		mov    $_0c69ac_data,%eax
		mov    %edx,_0c69a4_data
		call   _079cd0_func
		pop    %edx
		pop    %ebx
		ret    



_074f2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx
		mov    $_0c69a0_data,%eax
		call   _074fa0_func
		mov    %eax,%ecx
		mov    %eax,_0dd2e4_data
		mov    _0c69a4_data,%eax
		mov    %eax,_0c69b0_data
		mov    _0c69a8_data,%eax
		mov    %eax,_0c69ac_data
		xor    %ah,%ah
		mov    $0x000001,%edx
		mov    %ah,_0c69b4_data
		movswl %dx,%eax
		cmp    $0x00001e,%eax
		jl     _074f71_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074f71_jump:
		imul   $0x00000c,%eax,%eax
		mov    _0c69a4_data,%ebx
		add    %ecx,%ebx
		mov    %ebx,_0c69b0_data(%eax)
		xor    %ebx,%ebx
		mov    %ebx,_0c69ac_data(%eax)
		xor    %bl,%bl
		inc    %edx
		mov    %bl,_0c69b4_data(%eax)
		movswl %dx,%eax
		cmp    $0x00001e,%eax
		jl     _074f71_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074fa0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		mov    %edx,%eax
		call   _07b866_func
		mov    %eax,0x000004(%ecx)
		test   %eax,%eax
		jne    _074fe2_jump
		mov    $0x000064,%eax
		call   _0750ac_func
		push   %edx
		push   $_0c08f2_data
		push   %eax
		mov    %eax,%ebx
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		call   _01f878_func
		mov    %ebx,%eax
		call   _075258_func

	_074fe2_jump:
		mov    0x000004(%ecx),%ebx
		mov    %edx,0x000008(%ecx)
		and    $0x000003,%ebx
		mov    %edx,%eax
		mov    %ebx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_074ff4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %esi,%esi
		xor    %ebp,%ebp
		jmp    _07507f_jump

	_075003_jump:
		inc    %eax

	_075004_jump:
		movswl %ax,%edx
		cmp    $0x00001e,%edx
		jge    _075039_jump
		movswl %si,%ebx
		imul   $0x00000c,%ebx,%ebx
		imul   $0x00000c,%edx,%edx
		mov    _0c69b0_data(%ebx),%ecx
		mov    _0c69ac_data(%ebx),%ebx
		add    %ecx,%ebx
		cmp    _0c69b0_data(%edx),%ebx
		jne    _075003_jump
		mov    _0c69b4_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _075003_jump

	_075039_jump:
		movswl %ax,%edx
		cmp    $0x00001e,%edx
		jge    _07507a_jump
		imul   $0x00000c,%edx,%edx
		movswl %si,%ebx
		imul   $0x00000c,%ebx,%ebx
		mov    _0c69ac_data(%edx),%edi
		mov    _0c69ac_data(%ebx),%eax
		add    %edi,%eax
		mov    _0c69a8_data,%ecx
		mov    %eax,_0c69ac_data(%ebx)
		mov    _0c69a4_data,%ebx
		xor    %eax,%eax
		add    %ecx,%ebx
		mov    %eax,_0c69ac_data(%edx)
		mov    %ebx,_0c69b0_data(%edx)

	_07507a_jump:
		test   %edi,%edi
		jne    _0750a2_jump

	_07507e_jump:
		inc    %esi

	_07507f_jump:
		movswl %si,%edx
		cmp    $0x00001e,%edx
		jge    _074d68_jump
		imul   $0x00000c,%edx,%edx
		xor    %ebx,%ebx
		mov    _0c69b4_data(%edx),%bl
		test   %ebx,%ebx
		jne    _07507e_jump
		cmp    _0c69ac_data(%edx),%ebp
		je     _07507e_jump

	_0750a2_jump:
		xor    %edi,%edi
		xor    %eax,%eax
		jmp    _075004_jump



_0750ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    %eax,%ebp
		mov    $0x00001e,%edx
		mov    _0c69a8_data,%edi
		and    $0x000003,%eax
		mov    %dx,0x000064(%esp)
		add    %eax,%ebp
		xor    %edx,%edx
		jmp    _0750d1_jump

	_0750d0_jump:
		inc    %edx

	_0750d1_jump:
		movswl %dx,%eax
		cmp    $0x00001e,%eax
		jge    _075114_jump
		imul   $0x00000c,%eax,%esi
		xor    %eax,%eax
		mov    _0c69b4_data(%esi),%al
		test   %eax,%eax
		jne    _0750d0_jump
		mov    %edi,%ecx
		mov    %ebp,%ebx
		mov    _0c69ac_data(%esi),%eax
		cmp    %ebx,%eax
		jl     _075101_jump
		cmp    %ecx,%eax
		jg     _075101_jump
		mov    $0x000001,%eax
		jmp    _075103_jump

	_075101_jump:
		xor    %eax,%eax

	_075103_jump:
		test   %eax,%eax
		je     _0750d0_jump
		mov    %dx,0x000064(%esp)
		mov    _0c69ac_data(%esi),%edi
		jmp    _0750d0_jump

	_075114_jump:
		mov    0x000062(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000064(%esp),%ebx
		cmp    $0x00001e,%eax
		jge    _07520c_jump
		xor    %eax,%eax
		jmp    _07512d_jump

	_07512c_jump:
		inc    %eax

	_07512d_jump:
		movswl %ax,%esi
		cmp    $0x00001e,%esi
		jge    _075156_jump
		movswl %bx,%edi
		imul   $0x00000c,%edi,%edi
		imul   $0x00000c,%esi,%esi
		mov    _0c69b0_data(%edi),%edx
		mov    _0c69ac_data(%edi),%ecx
		mov    _0c69b0_data(%esi),%edi
		add    %ecx,%edx
		cmp    %edi,%edx
		jne    _07512c_jump

	_075156_jump:
		movswl %ax,%esi
		lea    0x000000(,%esi,4),%edx
		sub    %esi,%edx
		cmpb   $0x000000,_0c69b4_data(,%edx,4)
		je     _075194_jump
		mov    _0c69a8_data,%ecx
		xor    %eax,%eax
		jmp    _075177_jump

	_075176_jump:
		inc    %eax

	_075177_jump:
		movswl %ax,%esi
		cmp    $0x00001e,%esi
		jge    _075194_jump
		imul   $0x00000c,%esi,%edx
		mov    _0c69a4_data,%esi
		mov    _0c69b0_data(%edx),%edi
		add    %ecx,%esi
		cmp    %edi,%esi
		jne    _075176_jump

	_075194_jump:
		movswl %bx,%esi
		lea    0x000000(,%esi,4),%edx
		sub    %esi,%edx
		mov    _0c69b0_data(,%edx,4),%esi
		lea    (%esi,%ebp,1),%edi
		movswl %ax,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		mov    %edi,_0c69b0_data(,%eax,4)
		mov    _0c69ac_data(,%edx,4),%esi
		mov    _0c69ac_data(,%eax,4),%ebx
		sub    %ebp,%esi
		add    %esi,%ebx
		mov    $0x000001,%ch
		mov    %ebx,_0c69ac_data(,%eax,4)
		mov    _0dd310_data,%eax
		mov    %ch,_0c69b4_data(,%edx,4)
		mov    _0c69a0_data,%ecx
		mov    %ebp,_0c69ac_data(,%edx,4)
		add    %ebp,%ecx
		mov    _0c69b0_data(,%edx,4),%edx
		mov    %ecx,_0c69a0_data
		cmp    %ecx,%eax
		jae    _075249_jump
		mov    %ecx,_0dd310_data
		jmp    _075249_jump

	_07520c_jump:
		mov    %ebp,%eax
		call   _07b866_func
		mov    %eax,%edx
		mov    _0dd2e4_data,%eax
		mov    _0dd310_data,%ebx
		add    %ebp,%eax
		cmp    %ebx,%eax
		jbe    _07522b_jump
		mov    %eax,_0dd310_data

	_07522b_jump:
		test   %edx,%edx
		jne    _075249_jump
		push   %ebp
		push   $_0c0918_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _079cfb_func
		add    $0x00000c,%esp
		mov    %esp,%eax
		call   _01f878_func

	_075249_jump:
		mov    %edx,%eax
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075258_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ebx
		xor    %cl,%cl
		xor    %eax,%eax
		jmp    _075265_jump

	_075264_jump:
		inc    %eax

	_075265_jump:
		movswl %ax,%edx
		cmp    $0x00001e,%edx
		jge    _075299_jump
		imul   $0x00000c,%edx,%edx
		cmp    _0c69b0_data(%edx),%ebx
		jne    _075264_jump
		xor    %ah,%ah
		mov    %ah,_0c69b4_data(%edx)
		mov    _0c69a0_data,%edi
		sub    _0c69ac_data(%edx),%edi
		mov    $0x000001,%cl
		mov    %edi,_0c69a0_data
		call   _074ff4_func

	_075299_jump:
		test   %cl,%cl
		jne    _0752a4_jump
		mov    %ebx,%eax
		call   _07539c_func

	_0752a4_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0752ac_func:
		push   %edx
		mov    %eax,%edx
		cmp    $_0c6b2c_data,%eax
		mov    0x000004(%edx),%eax
		call   _07539c_func
		movl   $0x000000,0x000004(%edx)
		movl   $0x000000,0x000008(%edx)
		movl   $0x000000,(%edx)
		pop    %edx
		ret    



_0752d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1345_data,%cl
		xor    %eax,%eax
		mov    _0c1344_data,%al
		jmp    _0752f0_jump

	_0752e6_jump:
		xor    %ebx,%ebx
		inc    %eax
		mov    %ebx,_0c11b4_data(,%edx,4)

	_0752f0_jump:
		xor    %ebx,%ebx
		movswl %ax,%edx
		mov    %cl,%bl
		cmp    %ebx,%edx
		jl     _0752e6_jump
		mov    _0c1344_data,%cl
		mov    _0c1348_data,%ax
		mov    %cl,_0c1345_data
		mov    %ax,_0c1346_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075318_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0dd308_data
		pop    %edx
		pop    %ebx
		ret    



_075330_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0dd30c_data
		pop    %edx
		pop    %ebx
		ret    



_075348_func:
		push   %edx
		mov    _0dd308_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_075354_func:
		push   %edx
		mov    _0dd30c_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_075360_func:
		push   %edx
		mov    %eax,%edx
		call   _0752d4_func
		mov    0x000004(%edx),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_075374_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000004(%eax),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_075384_func:
		jmp    _07b866_func



_07538c_func:
		push   %ebx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _07b949_func
		pop    %ebx

	_075399_jump:
		ret    



_07539c_func:
		test   %eax,%eax
		je     _075399_jump
		jmp    _07b961_func



_0753b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    _0dd867_data,%al
		mov    %al,-0x000004(%ebp)
		mov    -0x000004(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0754d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    %eax,-0x000004(%ebp)
		mov    -0x000004(%ebp),%edx
		mov    $0x00002f,%eax
		call   _05c338_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0754f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x000004(%ebp)
		testw  $0x008000,-0x000004(%ebp)
		je     _07551b_jump
		mov    -0x000004(%ebp),%eax
		xor    %ah,%ah
		mov    %eax,-0x000008(%ebp)
		jmp    _075522_jump

	_07551b_jump:
		movl   $0x000100,-0x000008(%ebp)

	_075522_jump:
		mov    -0x000008(%ebp),%eax
		mov    %eax,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075534_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000018,%esp
		mov    %al,-0x000004(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    %cx,-0x00000c(%ebp)
		mov    %ebx,-0x000010(%ebp)
		movb   $0x000000,-0x000014(%ebp)

	_075550_jump:
		movw   $0x001510,_0dd314_data
		xor    %ah,%ah
		mov    -0x000004(%ebp),%al
		mov    %ax,_0dd318_data
		mov    -0x000008(%ebp),%eax
		shr    $0x000010,%eax
		mov    %ax,_0dd326_data
		mov    -0x000008(%ebp),%eax
		mov    %ax,_0dd316_data
		mov    $_0dd314_data,%eax
		call   _0754d0_func
		mov    -0x000014(%ebp),%al
		incb   -0x000014(%ebp)
		xor    %eax,%eax
		mov    -0x000014(%ebp),%al
		cmp    $0x00000a,%eax
		je     _07559e_jump
		lgs    -0x000010(%ebp),%eax
		testb  $0x000080,%gs:0x000004(%eax)
		jne    _0755a0_jump

	_07559e_jump:
		jmp    _0755a2_jump

	_0755a0_jump:
		jmp    _075550_jump

	_0755a2_jump:
		lgs    -0x000010(%ebp),%eax
		mov    %gs:0x000003(%eax),%ax
		and    $0x00ffff,%eax
		call   _0754f8_func
		mov    %eax,-0x000018(%ebp)
		mov    -0x000018(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0755c4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %dx,-0x000008(%ebp)
		mov    %eax,-0x00000c(%ebp)
		mov    %bl,-0x000004(%ebp)
		lgs    -0x00000c(%ebp),%eax
		movb   $0x00000d,%gs:(%eax)
		lgs    -0x00000c(%ebp),%eax
		movb   $0x000000,%gs:0x000001(%eax)
		mov    -0x000004(%ebp),%al
		lgs    -0x00000c(%ebp),%edx
		mov    %al,%gs:0x000002(%edx)
		lgs    -0x00000c(%ebp),%eax
		movw   $0x000000,%gs:0x000003(%eax)
		movb   $0x000000,-0x000010(%ebp)
		jmp    _07560d_jump

	_075607_jump:
		mov    -0x000010(%ebp),%al
		incb   -0x000010(%ebp)

	_07560d_jump:
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		cmp    $0x000008,%eax
		jge    _075629_jump
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		mov    -0x000008(%ebp),%gs
		add    -0x00000c(%ebp),%eax
		movb   $0x000000,%gs:0x000005(%eax)
		jmp    _075607_jump

	_075629_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_075630_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %dx,-0x00000c(%ebp)
		mov    %eax,-0x000010(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    %cl,-0x000004(%ebp)
		xor    %ebx,%ebx
		mov    -0x000004(%ebp),%bl
		mov    -0x00000c(%ebp),%eax
		mov    -0x000010(%ebp),%ecx
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _0755c4_func
		lgs    -0x000010(%ebp),%ebx
		movb   $0x000000,%gs:0x00000d(%ebx)
		mov    -0x000008(%ebp),%eax
		lgs    -0x000010(%ebp),%ebx
		mov    %ax,%gs:0x00000e(%ebx)
		mov    -0x000008(%ebp),%ecx
		shr    $0x000010,%ecx
		lgs    -0x000010(%ebp),%ebx
		mov    %cx,%gs:0x000010(%ebx)
		mov    0x000010(%ebp),%eax
		lgs    -0x000010(%ebp),%ebx
		mov    %ax,%gs:0x000012(%ebx)
		lgs    -0x000010(%ebp),%ebx
		movw   $0x000000,%gs:0x000014(%ebx)
		lgs    -0x000010(%ebp),%ebx
		movl   $0x000000,%gs:0x000016(%ebx)
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_075908_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		movw   $0x001500,_0dd314_data
		movw   $0x000000,_0dd316_data
		movw   $0x000000,_0dd318_data
		mov    $_0dd314_data,%eax
		call   _0754d0_func
		mov    _0dd318_data,%al
		mov    %al,_0dd867_data
		mov    _0dd316_data,%al
		mov    %al,-0x000004(%ebp)
		mov    -0x000004(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07595c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		call   _075908_func
		mov    %al,-0x000008(%ebp)
		mov    -0x000008(%ebp),%al
		mov    %al,_0dd32c_data
		movb   $0x000000,-0x000004(%ebp)
		jmp    _075986_jump

	_075980_jump:
		mov    -0x000004(%ebp),%al
		incb   -0x000004(%ebp)

	_075986_jump:
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		cmp    $0x00001a,%eax
		jge    _0759ec_jump
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		movb   $0x000000,_0dd32d_data(%eax)
		xor    %eax,%eax
		mov    -0x000008(%ebp),%al
		test   %eax,%eax
		je     _0759ea_jump
		movw   $0x00150b,_0dd314_data
		movw   $0x000000,_0dd316_data
		xor    %ah,%ah
		mov    -0x000004(%ebp),%al
		mov    %ax,_0dd318_data
		mov    $_0dd314_data,%eax
		call   _0754d0_func
		xor    %eax,%eax
		mov    _0dd314_data,%ax
		test   %eax,%eax
		je     _0759ea_jump
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		movb   $0x000001,_0dd32d_data(%eax)
		mov    -0x000008(%ebp),%al
		decb   -0x000008(%ebp)

	_0759ea_jump:
		jmp    _075980_jump

	_0759ec_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0759f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		movw   $0x000100,_0dd32a_data
		movb   $0x000000,_0dd86e_data
		call   _075d80_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _075ca6_jump
		call   _075de4_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _075c9b_jump
		call   _075908_func
		and    $0x0000ff,%eax
		test   %eax,%eax
		je     _075c90_jump
		movw   $0x000100,_0dd32a_data
		call   _07595c_func
		mov    $_0dd97c_data,%edx
		mov    $0x00008a,%eax
		call   _05c240_func
		mov    %ax,_0dd980_data
		xor    %eax,%eax
		mov    _0dd980_data,%ax
		test   %eax,%eax
		jne    _075a83_jump
		movb   $0x000001,-0x00000c(%ebp)
		jmp    _075a87_jump

	_075a83_jump:
		movb   $0x000000,-0x00000c(%ebp)

	_075a87_jump:
		mov    -0x00000c(%ebp),%al
		mov    %al,-0x000004(%ebp)
		xor    %edx,%edx
		mov    _0dd980_data,%ax
		mov    %ax,_0dd978_data
		mov    %edx,_0dd974_data
		mov    _0dd978_data,%ax
		mov    _0dd974_data,%edx
		mov    %ax,_0dd988_data
		mov    %edx,_0dd984_data
		mov    _0dd978_data,%ax
		mov    _0dd974_data,%edx
		mov    %ax,_0dd998_data
		add    $0x000030,%edx
		mov    %edx,_0dd994_data
		mov    _0dd978_data,%ax
		mov    _0dd974_data,%edx
		mov    %ax,_0dd9a0_data
		add    $0x000035,%edx
		mov    %edx,_0dd99c_data
		mov    _0dd978_data,%ax
		mov    _0dd974_data,%edx
		mov    %ax,_0dd9a8_data
		add    $0x00003c,%edx
		mov    %edx,_0dd9a4_data
		mov    _0dd978_data,%ax
		mov    _0dd974_data,%edx
		mov    %ax,_0dd990_data
		add    $0x00001a,%edx
		mov    %edx,_0dd98c_data
		mov    _0dd978_data,%ax
		mov    _0dd974_data,%edx
		mov    %ax,_0dd9b0_data
		add    $0x000043,%edx
		mov    %edx,_0dd9ac_data
		mov    _0dd978_data,%ax
		mov    _0dd974_data,%edx
		mov    %ax,_0dd9b8_data
		add    $0x00004e,%edx
		mov    %edx,_0dd9b4_data
		mov    _0dd978_data,%ax
		mov    _0dd974_data,%edx
		mov    %ax,_0dd9c0_data
		add    $0x000059,%edx
		mov    %edx,_0dd9bc_data
		mov    _0dd978_data,%ax
		mov    _0dd974_data,%edx
		mov    %ax,_0dd9c8_data
		add    $0x00005b,%edx
		mov    %edx,_0dd9c4_data
		mov    _0dd978_data,%ax
		mov    _0dd974_data,%edx
		mov    %ax,_0dd9d0_data
		add    $0x000064,%edx
		mov    %edx,_0dd9cc_data
		mov    _0dd984_data,%edx
		mov    _0dd97c_data,%eax
		add    %edx,%eax
		mov    %eax,_0dd9d4_data
		mov    _0dd994_data,%edx
		mov    _0dd97c_data,%eax
		add    %edx,%eax
		mov    %eax,_0dd9dc_data
		mov    _0dd99c_data,%edx
		mov    _0dd97c_data,%eax
		add    %edx,%eax
		mov    %eax,_0dd9e0_data
		mov    _0dd9a4_data,%edx
		mov    _0dd97c_data,%eax
		add    %edx,%eax
		mov    %eax,_0dd9e4_data
		mov    _0dd98c_data,%edx
		mov    _0dd97c_data,%eax
		add    %edx,%eax
		mov    %eax,_0dd9d8_data
		mov    _0dd9ac_data,%edx
		mov    _0dd97c_data,%eax
		add    %edx,%eax
		mov    %eax,_0dd9e8_data
		mov    _0dd9b4_data,%edx
		mov    _0dd97c_data,%eax
		add    %edx,%eax
		mov    %eax,_0dd9ec_data
		mov    _0dd9bc_data,%edx
		mov    _0dd97c_data,%eax
		add    %edx,%eax
		mov    %eax,_0dd9f0_data
		mov    _0dd9c4_data,%edx
		mov    _0dd97c_data,%eax
		add    %edx,%eax
		mov    %eax,_0dd9f4_data
		mov    _0dd9cc_data,%edx
		mov    _0dd97c_data,%eax
		add    %edx,%eax
		mov    %eax,_0dd9f8_data
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		test   %eax,%eax
		je     _075c72_jump
		movw   $0x000101,_0dd32a_data

	_075c72_jump:
		call   _0753b0_func
		and    $0x0000ff,%eax
		call   _0769f8_func
		test   %al,%al
		jne    _075c8e_jump
		movb   $0x000000,-0x000008(%ebp)
		jmp    _075d27_jump

	_075c8e_jump:
		jmp    _075c99_jump

	_075c90_jump:
		movw   $0x000001,_0dd32a_data

	_075c99_jump:
		jmp    _075ca4_jump

	_075c9b_jump:
		movw   $0x00000c,_0dd32a_data

	_075ca4_jump:
		jmp    _075caf_jump

	_075ca6_jump:
		movw   $0x00000c,_0dd32a_data

	_075caf_jump:
		xor    %eax,%eax
		mov    _0dd32a_data,%ax
		cmp    $0x000100,%eax
		jne    _075d02_jump
		call   _0753b0_func
		and    $0x0000ff,%eax
		call   _076cac_func
		and    $0x0000ff,%eax
		test   %eax,%eax
		jne    _075ce1_jump
		movw   $0x000008,_0dd32a_data
		jmp    _075d02_jump

	_075ce1_jump:
		call   _0753b0_func
		and    $0x0000ff,%eax
		call   _076f10_func
		and    $0x0000ff,%eax
		test   %eax,%eax
		jne    _075d02_jump
		movw   $0x000001,_0dd32a_data

	_075d02_jump:
		xor    %eax,%eax
		mov    _0dd32a_data,%ax
		cmp    $0x000100,%eax
		jne    _075d1a_jump
		movl   $0x000001,-0x000010(%ebp)
		jmp    _075d21_jump

	_075d1a_jump:
		movl   $0x000000,-0x000010(%ebp)

	_075d21_jump:
		mov    -0x000010(%ebp),%al
		mov    %al,-0x000008(%ebp)

	_075d27_jump:
		mov    -0x000008(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075d34_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		movb   $0x000000,-0x000004(%ebp)
		xor    %eax,%eax
		mov    _0dd980_data,%ax
		test   %eax,%eax
		je     _075d62_jump
		xor    %eax,%eax
		mov    _0dd980_data,%ax
		call   _05c2d8_func
		or     %al,-0x000004(%ebp)

	_075d62_jump:
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		test   %eax,%eax
		je     _075d74_jump
		movw   $0x000102,_0dd32a_data

	_075d74_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075d80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		movw   $0x001500,_0dd314_data
		movw   $0x000000,_0dd316_data
		movw   $0x000000,_0dd318_data
		mov    $_0dd314_data,%eax
		call   _0754d0_func
		xor    %eax,%eax
		mov    _0dd316_data,%ax
		test   %eax,%eax
		je     _075dc8_jump
		movl   $0x000001,-0x000008(%ebp)
		jmp    _075dcf_jump

	_075dc8_jump:
		movl   $0x000000,-0x000008(%ebp)

	_075dcf_jump:
		mov    -0x000008(%ebp),%al
		mov    %al,-0x000004(%ebp)
		mov    -0x000004(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075de4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		movw   $0x00150c,_0dd314_data
		movw   $0x000000,_0dd316_data
		mov    $_0dd314_data,%eax
		call   _0754d0_func
		xor    %eax,%eax
		mov    _0dd316_data,%ax
		sar    $0x000004,%eax
		and    $0x0000ff,%eax
		imul   $0x000064,%eax,%edx
		mov    _0dd316_data,%ax
		xor    %ah,%ah
		and    $0x00ffff,%eax
		add    %edx,%eax
		mov    %ax,_0dd870_data
		mov    _0dd86e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000d2,%eax
		jl     _075e4e_jump
		movl   $0x000001,-0x000008(%ebp)
		jmp    _075e55_jump

	_075e4e_jump:
		movl   $0x000000,-0x000008(%ebp)

	_075e55_jump:
		mov    -0x000008(%ebp),%al
		mov    %al,-0x000004(%ebp)
		mov    -0x000004(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075e68_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %al,-0x00000c(%ebp)
		mov    %dl,-0x000008(%ebp)
		mov    %bl,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x00000c(%ebp),%al
		imul   $0x001194,%eax,%edx
		xor    %eax,%eax
		mov    -0x000008(%ebp),%al
		imul   $0x00004b,%eax,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		add    %edx,%eax
		sub    $0x000096,%eax
		mov    %eax,-0x000010(%ebp)
		mov    -0x000010(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_075eac_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %al,-0x00000c(%ebp)
		mov    %dl,-0x000008(%ebp)
		mov    %bl,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x00000c(%ebp),%al
		shl    $0x000010,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    -0x000008(%ebp),%al
		shl    $0x000008,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		add    %eax,%edx
		mov    %edx,-0x000010(%ebp)
		mov    -0x000010(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_075eec_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    %ecx,-0x000004(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		mov    -0x000010(%ebp),%edx
		add    -0x000014(%ebp),%edx
		mov    $0x001194,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    -0x00000c(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000010(%ebp),%edx
		add    -0x000014(%ebp),%edx
		mov    $0x001194,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00004b,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    -0x000008(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000010(%ebp),%edx
		add    -0x000014(%ebp),%edx
		mov    $0x001194,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00004b,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    -0x000004(%ebp),%eax
		mov    %dl,(%eax)
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_075f70_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    %ecx,-0x000004(%ebp)
		mov    -0x000010(%ebp),%edx
		sar    $0x000010,%edx
		and    $0x0000ff,%edx
		mov    %edx,%eax
		mov    -0x00000c(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000010(%ebp),%eax
		sar    $0x000008,%eax
		and    $0x0000ff,%eax
		mov    -0x000008(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000010(%ebp),%al
		mov    -0x000004(%ebp),%edx
		mov    %al,(%edx)
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_075fb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000004(%ebp)
		lea    -0x000010(%ebp),%ecx
		lea    -0x000008(%ebp),%ebx
		lea    -0x00000c(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _075eec_func
		xor    %ebx,%ebx
		mov    -0x000010(%ebp),%bl
		xor    %edx,%edx
		mov    -0x000008(%ebp),%dl
		xor    %eax,%eax
		mov    -0x00000c(%ebp),%al
		call   _075eac_func
		mov    %eax,-0x000014(%ebp)
		mov    -0x000014(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076000_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000004(%ebp)
		lea    -0x000010(%ebp),%ecx
		lea    -0x000008(%ebp),%ebx
		lea    -0x00000c(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _075f70_func
		xor    %ebx,%ebx
		mov    -0x000010(%ebp),%bl
		xor    %edx,%edx
		mov    -0x000008(%ebp),%dl
		xor    %eax,%eax
		mov    -0x00000c(%ebp),%al
		call   _075e68_func
		mov    %eax,-0x000014(%ebp)
		mov    -0x000014(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076048_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %al,-0x000004(%ebp)
		mov    $0x000085,%ebx
		mov    _0dd990_data,%ax
		mov    _0dd98c_data,%ecx
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _0755c4_func
		mov    _0dd990_data,%bx
		mov    _0dd98c_data,%eax
		mov    _0dd9d8_data,%edx
		movzbl -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _075534_func
		mov    %ax,_0dd32a_data
		mov    _0dd32a_data,%ax
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0760b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %al,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _076048_func
		mov    %ax,_0dd32a_data
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _076048_func
		mov    %ax,_0dd32a_data
		mov    _0dd32a_data,%ax
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0760f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %al,-0x000004(%ebp)
		mov    $0x000088,%ebx
		mov    _0dd990_data,%ax
		mov    _0dd98c_data,%ecx
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _0755c4_func
		mov    _0dd990_data,%bx
		mov    _0dd98c_data,%eax
		mov    _0dd9d8_data,%edx
		movzbl -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _075534_func
		mov    %ax,_0dd32a_data
		mov    _0dd32a_data,%ax
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076160_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %al,-0x000008(%ebp)
		mov    %dl,-0x000004(%ebp)
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		mov    $0x000084,%ebx
		mov    _0dd990_data,%ax
		mov    _0dd98c_data,%ecx
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _0755c4_func
		lgs    _0dd98c_data,%ecx
		mov    -0x000004(%ebp),%al
		mov    %al,%gs:0x00000d(%ecx)
		lgs    _0dd98c_data,%ecx
		mov    -0x000010(%ebp),%eax
		mov    %eax,%gs:0x00000e(%ecx)
		lgs    _0dd98c_data,%ecx
		mov    -0x00000c(%ebp),%eax
		mov    %eax,%gs:0x000012(%ecx)
		mov    _0dd990_data,%bx
		mov    _0dd98c_data,%eax
		mov    _0dd9d8_data,%edx
		movzbl -0x000008(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _075534_func
		mov    %ax,_0dd32a_data
		mov    _0dd32a_data,%ax
		mov    %eax,-0x000014(%ebp)
		mov    -0x000014(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0761f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %al,-0x000004(%ebp)
		mov    $0x000002,%eax
		push   %eax
		mov    $0x00000c,%ecx
		mov    _0dd9f0_data,%ebx
		mov    _0dd988_data,%ax
		mov    _0dd984_data,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _075630_func
		lgs    _0dd9bc_data,%esi
		movb   $0x000001,%gs:(%esi)
		lgs    _0dd9bc_data,%esi
		movb   $0x000000,%gs:0x000001(%esi)
		mov    _0dd988_data,%bx
		mov    _0dd984_data,%esi
		mov    _0dd9d4_data,%edx
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		mov    %ebx,%ecx
		mov    %esi,%ebx
		call   _075534_func
		mov    %ax,_0dd32a_data
		mov    _0dd32a_data,%ax
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076280_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %al,-0x000004(%ebp)
		mov    $0x000002,%eax
		push   %eax
		mov    $0x00000c,%ecx
		mov    _0dd9f0_data,%ebx
		mov    _0dd988_data,%ax
		mov    _0dd984_data,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _075630_func
		lgs    _0dd9bc_data,%esi
		movb   $0x000001,%gs:(%esi)
		lgs    _0dd9bc_data,%esi
		movb   $0x000001,%gs:0x000001(%esi)
		mov    _0dd988_data,%bx
		mov    _0dd984_data,%esi
		mov    _0dd9d4_data,%edx
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		mov    %ebx,%ecx
		mov    %esi,%ebx
		call   _075534_func
		mov    %ax,_0dd32a_data
		mov    _0dd32a_data,%ax
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07638c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %al,-0x000004(%ebp)
		mov    $0x000001,%eax
		push   %eax
		mov    $0x00000c,%ecx
		mov    _0dd9dc_data,%ebx
		mov    _0dd988_data,%ax
		mov    _0dd984_data,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _075630_func
		lgs    _0dd994_data,%esi
		movb   $0x000005,%gs:(%esi)
		mov    _0dd988_data,%bx
		mov    _0dd984_data,%esi
		mov    _0dd9d4_data,%edx
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		mov    %ebx,%ecx
		mov    %esi,%ebx
		call   _075534_func
		mov    %ax,_0dd32a_data
		mov    _0dd32a_data,%ax
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07640c_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %al,-0x000004(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x000008(%ebp)
		mov    $0x000007,%eax
		push   %eax
		mov    $0x000003,%ecx
		mov    _0dd9e0_data,%ebx
		mov    _0dd988_data,%ax
		mov    _0dd984_data,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _075630_func
		lgs    _0dd99c_data,%esi
		movb   $0x00000a,%gs:(%esi)
		lgs    _0dd99c_data,%esi
		movb   $0x000000,%gs:0x000001(%esi)
		lgs    _0dd99c_data,%esi
		movb   $0x000000,%gs:0x000002(%esi)
		lgs    _0dd99c_data,%esi
		movl   $0x000000,%gs:0x000003(%esi)
		mov    _0dd988_data,%bx
		mov    _0dd984_data,%esi
		mov    _0dd9d4_data,%edx
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		mov    %ebx,%ecx
		mov    %esi,%ebx
		call   _075534_func
		mov    %ax,_0dd32a_data
		lgs    _0dd99c_data,%esi
		mov    %gs:0x000001(%esi),%al
		mov    -0x00000c(%ebp),%edx
		mov    %al,(%edx)
		lgs    _0dd99c_data,%esi
		mov    %gs:0x000002(%esi),%al
		mov    -0x000010(%ebp),%edx
		mov    %al,(%edx)
		lgs    _0dd99c_data,%esi
		mov    %gs:0x000003(%esi),%eax
		mov    -0x000008(%ebp),%edx
		mov    %eax,(%edx)
		mov    _0dd32a_data,%ax
		mov    %eax,-0x000014(%ebp)
		mov    -0x000014(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0764e4_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %al,-0x000008(%ebp)
		mov    %dl,-0x000004(%ebp)
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		mov    $0x000007,%eax
		push   %eax
		mov    $0x000003,%ecx
		mov    _0dd9e4_data,%ebx
		mov    _0dd988_data,%ax
		mov    _0dd984_data,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _075630_func
		lgs    _0dd9a4_data,%esi
		movb   $0x00000b,%gs:(%esi)
		lgs    _0dd9a4_data,%esi
		mov    -0x000004(%ebp),%al
		mov    %al,%gs:0x000001(%esi)
		lgs    _0dd9a4_data,%esi
		movl   $0x000000,%gs:0x000002(%esi)
		lgs    _0dd9a4_data,%esi
		movb   $0x000000,%gs:0x000006(%esi)
		mov    _0dd988_data,%bx
		mov    _0dd984_data,%esi
		mov    _0dd9d4_data,%edx
		xor    %eax,%eax
		mov    -0x000008(%ebp),%al
		mov    %ebx,%ecx
		mov    %esi,%ebx
		call   _075534_func
		mov    %ax,_0dd32a_data
		lgs    _0dd9a4_data,%esi
		mov    %gs:0x000002(%esi),%edx
		mov    -0x000010(%ebp),%eax
		mov    %edx,(%eax)
		lgs    _0dd9a4_data,%esi
		mov    %gs:0x000006(%esi),%dl
		mov    -0x00000c(%ebp),%eax
		mov    %dl,(%eax)
		mov    _0dd32a_data,%ax
		mov    %eax,-0x000014(%ebp)
		mov    -0x000014(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_076684_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %al,-0x000004(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    $0x000005,%eax
		push   %eax
		mov    $0x000003,%ecx
		mov    _0dd9dc_data,%ebx
		mov    _0dd988_data,%ax
		mov    _0dd984_data,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _075630_func
		lgs    _0dd994_data,%eax
		movb   $0x000006,%gs:(%eax)
		lgs    _0dd994_data,%eax
		movl   $0x000000,%gs:0x000001(%eax)
		mov    _0dd988_data,%bx
		mov    _0dd984_data,%eax
		mov    _0dd9d4_data,%edx
		movzbl -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _075534_func
		mov    %ax,_0dd32a_data
		lgs    _0dd994_data,%eax
		mov    %gs:0x000001(%eax),%eax
		mov    -0x000008(%ebp),%edx
		mov    %eax,(%edx)
		mov    _0dd32a_data,%ax
		mov    %eax,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_076938_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %al,-0x000004(%ebp)
		lea    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _076684_func
		mov    %ax,_0dd32a_data
		mov    -0x000008(%ebp),%eax
		mov    %eax,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076970_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %al,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _076938_func
		test   $0x000001,%al
		jne    _076998_jump
		movl   $0x000001,-0x000008(%ebp)
		jmp    _07699f_jump

	_076998_jump:
		movl   $0x000000,-0x000008(%ebp)

	_07699f_jump:
		mov    -0x000008(%ebp),%al
		mov    %al,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0769b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %al,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _076938_func
		test   $0x000002,%al
		jne    _0769dc_jump
		movl   $0x000001,-0x000008(%ebp)
		jmp    _0769e3_jump

	_0769dc_jump:
		movl   $0x000000,-0x000008(%ebp)

	_0769e3_jump:
		mov    -0x000008(%ebp),%al
		mov    %al,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0769f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %al,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _076938_func
		test   $0x000010,%al
		je     _076a20_jump
		movl   $0x000001,-0x000008(%ebp)
		jmp    _076a27_jump

	_076a20_jump:
		movl   $0x000000,-0x000008(%ebp)

	_076a27_jump:
		mov    -0x000008(%ebp),%al
		mov    %al,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076a80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %al,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		testb  $0x000040,_0dd803_data(%eax)
		jne    _076aa8_jump
		movl   $0x000001,-0x00000c(%ebp)
		jmp    _076aaf_jump

	_076aa8_jump:
		movl   $0x000000,-0x00000c(%ebp)

	_076aaf_jump:
		mov    -0x00000c(%ebp),%al
		mov    %al,-0x000008(%ebp)
		mov    -0x000008(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076ac4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %al,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _076938_func
		test   $0x000008,%ah
		jne    _076af3_jump
		xor    %eax,%eax
		mov    _0dd32a_data,%ax
		cmp    $0x000100,%eax
		je     _076af5_jump

	_076af3_jump:
		jmp    _076afe_jump

	_076af5_jump:
		movl   $0x000001,-0x000008(%ebp)
		jmp    _076b05_jump

	_076afe_jump:
		movl   $0x000000,-0x000008(%ebp)

	_076b05_jump:
		mov    -0x000008(%ebp),%al
		mov    %al,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076b18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    %al,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _0769b4_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _076b4f_jump
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _0761f4_func
		mov    %ax,_0dd32a_data
		jmp    _076b58_jump

	_076b4f_jump:
		movw   $0x000100,_0dd32a_data

	_076b58_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076b64_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    %al,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _0769b4_func
		and    $0x0000ff,%eax
		test   %eax,%eax
		jne    _076bb9_jump
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _076970_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _076bae_jump
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _076280_func
		mov    %ax,_0dd32a_data
		jmp    _076bb7_jump

	_076bae_jump:
		movw   $0x000100,_0dd32a_data

	_076bb7_jump:
		jmp    _076bc2_jump

	_076bb9_jump:
		movw   $0x000100,_0dd32a_data

	_076bc2_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076cac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000028,%esp
		mov    %al,-0x000004(%ebp)
		movb   $0x000001,-0x00000c(%ebp)
		xor    %eax,%eax
		mov    _0dd86e_data,%al
		test   %eax,%eax
		jne    _076efc_jump
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _07638c_func
		mov    %ax,_0dd32a_data
		movb   $0x0000ff,-0x000010(%ebp)

	_076ce4_jump:
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		test   %eax,%eax
		je     _076d00_jump
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _076ac4_func
		and    $0x0000ff,%eax
		test   %eax,%eax
		je     _076d02_jump

	_076d00_jump:
		jmp    _076d0a_jump

	_076d02_jump:
		mov    -0x000010(%ebp),%al
		decb   -0x000010(%ebp)
		jmp    _076ce4_jump

	_076d0a_jump:
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _076ac4_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _076ef8_jump
		mov    $0x00051f,%ebx
		xor    %edx,%edx
		mov    $_0dd348_data,%eax
		call   _079cd0_func
		lea    -0x000020(%ebp),%ecx
		lea    -0x000008(%ebp),%ebx
		lea    -0x00001c(%ebp),%edx
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _07640c_func
		mov    %ax,_0dd32a_data
		mov    -0x00001c(%ebp),%al
		mov    %al,_0dd349_data
		mov    -0x000008(%ebp),%al
		mov    %al,_0dd34a_data
		mov    -0x000020(%ebp),%eax
		mov    %eax,_0dd34b_data
		mov    _0dd34a_data,%ah
		inc    %ah
		mov    _0dd349_data,%al
		sub    %al,%ah
		mov    %ah,_0dd348_data
		mov    _0dd349_data,%al
		mov    %al,-0x000010(%ebp)
		jmp    _076d89_jump

	_076d83_jump:
		mov    -0x000010(%ebp),%al
		incb   -0x000010(%ebp)

	_076d89_jump:
		mov    -0x000010(%ebp),%al
		cmp    _0dd34a_data,%al
		ja     _076dd4_jump
		lea    -0x000018(%ebp),%ecx
		lea    -0x000024(%ebp),%ebx
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _0764e4_func
		mov    %ax,_0dd32a_data
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		lea    0x000000(,%eax,4),%edx
		mov    -0x000024(%ebp),%eax
		mov    %eax,_0dd34f_data(%edx)
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		mov    -0x000018(%ebp),%al
		mov    %al,_0dd803_data(%edx)
		jmp    _076d83_jump

	_076dd4_jump:
		mov    _0dd34b_data,%eax
		mov    %eax,_0dd4df_data
		xor    %eax,%eax
		mov    _0dd34a_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0dd34b_data,%eax
		mov    %eax,_0dd353_data(%edx)
		mov    _0dd349_data,%al
		mov    %al,-0x000010(%ebp)
		jmp    _076e07_jump

	_076e01_jump:
		mov    -0x000010(%ebp),%al
		incb   -0x000010(%ebp)

	_076e07_jump:
		mov    -0x000010(%ebp),%al
		cmp    _0dd34a_data,%al
		ja     _076e87_jump
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		shl    $0x000002,%eax
		mov    _0dd353_data(%eax),%eax
		call   _076000_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		shl    $0x000002,%eax
		mov    _0dd34f_data(%eax),%eax
		call   _076000_func
		sub    %eax,%edx
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		shl    $0x000002,%eax
		mov    %edx,_0dd4e3_data(%eax)
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		shl    $0x000002,%eax
		mov    _0dd353_data(%eax),%eax
		call   _076000_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		shl    $0x000002,%eax
		mov    _0dd34f_data(%eax),%eax
		call   _076000_func
		sub    %eax,%edx
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		shl    $0x000002,%eax
		mov    %edx,_0dd673_data(%eax)
		jmp    _076e01_jump

	_076e87_jump:
		xor    %eax,%eax
		mov    _0dd34a_data,%al
		shl    $0x000002,%eax
		movl   $0x000000,_0dd353_data(%eax)
		mov    _0dd34b_data,%eax
		call   _076000_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0dd349_data,%al
		shl    $0x000002,%eax
		mov    _0dd34f_data(%eax),%eax
		call   _076000_func
		sub    %eax,%edx
		mov    %edx,%eax
		call   _075fb8_func
		mov    %eax,_0dd4df_data
		movb   $0x000001,_0dd86e_data
		xor    %eax,%eax
		mov    _0dd32a_data,%ax
		cmp    $0x000100,%eax
		jne    _076ee9_jump
		movl   $0x000001,-0x000028(%ebp)
		jmp    _076ef0_jump

	_076ee9_jump:
		movl   $0x000000,-0x000028(%ebp)

	_076ef0_jump:
		mov    -0x000028(%ebp),%al
		mov    %al,-0x00000c(%ebp)
		jmp    _076efc_jump

	_076ef8_jump:
		movb   $0x000000,-0x00000c(%ebp)

	_076efc_jump:
		mov    -0x00000c(%ebp),%al
		mov    %al,-0x000014(%ebp)
		mov    -0x000014(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076f10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %al,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		mov    _0dd32d_data(%eax),%al
		mov    %al,-0x000008(%ebp)
		mov    -0x000008(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076f3c_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00001c,%esp
		mov    %al,-0x000010(%ebp)
		mov    %dl,-0x00000c(%ebp)
		mov    %bl,-0x000008(%ebp)
		mov    %cl,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		call   _076cac_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _07707a_jump
		mov    _0dd349_data,%al
		cmp    -0x00000c(%ebp),%al
		ja     _076f80_jump
		mov    -0x00000c(%ebp),%al
		cmp    _0dd34a_data,%al
		jbe    _076f85_jump

	_076f80_jump:
		jmp    _07705c_jump

	_076f85_jump:
		xor    %eax,%eax
		mov    -0x00000c(%ebp),%al
		call   _076a80_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _077051_jump
		xor    %eax,%eax
		mov    -0x000008(%ebp),%al
		shl    $0x000008,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		add    %edx,%eax
		shl    $0x000008,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    -0x00000c(%ebp),%al
		shl    $0x000002,%eax
		mov    _0dd34f_data(%eax),%eax
		add    %edx,%eax
		mov    %eax,-0x000014(%ebp)
		mov    -0x00000c(%ebp),%al
		cmp    _0dd34a_data,%al
		jae    _076fe4_jump
		xor    %eax,%eax
		mov    -0x00000c(%ebp),%al
		shl    $0x000002,%eax
		mov    _0dd353_data(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		jmp    _076fec_jump

	_076fe4_jump:
		mov    _0dd34b_data,%eax
		mov    %eax,-0x000018(%ebp)

	_076fec_jump:
		mov    -0x000014(%ebp),%eax
		cmp    -0x000018(%ebp),%eax
		jge    _077046_jump
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		call   _076048_func
		mov    %ax,_0dd32a_data
		xor    %eax,%eax
		mov    -0x000008(%ebp),%al
		imul   $0x00003c,%eax,%edx
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		add    %edx,%eax
		imul   $0x00004b,%eax,%eax
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%dl
		shl    $0x000002,%edx
		mov    _0dd673_data(%edx),%edx
		sub    %eax,%edx
		mov    %edx,-0x00001c(%ebp)
		mov    -0x00001c(%ebp),%ecx
		mov    -0x000014(%ebp),%ebx
		mov    $0x000001,%edx
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		call   _076160_func
		mov    %ax,_0dd32a_data
		jmp    _07704f_jump

	_077046_jump:
		movw   $0x000008,_0dd32a_data

	_07704f_jump:
		jmp    _07705a_jump

	_077051_jump:
		movw   $0x000007,_0dd32a_data

	_07705a_jump:
		jmp    _07707a_jump

	_07705c_jump:
		xor    %eax,%eax
		mov    -0x00000c(%ebp),%al
		cmp    $0x000064,%eax
		jne    _077071_jump
		movw   $0x000007,_0dd32a_data
		jmp    _07707a_jump

	_077071_jump:
		movw   $0x000008,_0dd32a_data

	_07707a_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_077080_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    %al,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _076048_func
		mov    %ax,_0dd32a_data
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0770ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    %al,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _0760b0_func
		mov    %ax,_0dd32a_data
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0770d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    %al,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _0760f8_func
		mov    %ax,_0dd32a_data
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0771d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		call   _0753b0_func
		mov    %al,-0x000004(%ebp)
		mov    $0x000085,%ebx
		mov    _0dd990_data,%ax
		mov    _0dd98c_data,%ecx
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _0755c4_func
		mov    _0dd990_data,%bx
		mov    _0dd98c_data,%eax
		mov    _0dd9d8_data,%edx
		movzbl -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _075534_func
		mov    %ax,_0dd32a_data
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077230_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %al,-0x000004(%ebp)
		call   _0753b0_func
		mov    %al,-0x000008(%ebp)
		mov    $0x000084,%ebx
		mov    _0dd990_data,%ax
		mov    _0dd98c_data,%ecx
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _0755c4_func
		lgs    _0dd98c_data,%eax
		movb   $0x000001,%gs:0x00000d(%eax)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		lea    0x000000(,%eax,4),%edx
		lgs    _0dd98c_data,%eax
		mov    _0dd34f_data(%edx),%edx
		mov    %edx,%gs:0x00000e(%eax)
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		lea    0x000000(,%eax,4),%edx
		lgs    _0dd98c_data,%eax
		mov    _0dd4e3_data(%edx),%edx
		mov    %edx,%gs:0x000012(%eax)
		mov    _0dd990_data,%bx
		mov    _0dd98c_data,%eax
		mov    _0dd9d8_data,%edx
		movzbl -0x000008(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _075534_func
		mov    %ax,_0dd32a_data
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0772dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		call   _0771d0_func
		call   _0771d0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0772fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    %al,-0x000004(%ebp)
		call   _0771d0_func
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		call   _077230_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077360_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %al,-0x00000c(%ebp)
		mov    %dl,-0x000008(%ebp)
		mov    %bl,-0x000004(%ebp)
		cmpb   $0x000000,_0dd9fd_data
		je     _0773b7_jump
		xor    %edx,%edx
		mov    $0x0003c8,%eax
		call   _07b9bf_func
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%dl
		mov    $0x0003c9,%eax
		call   _07b9bf_func
		xor    %edx,%edx
		mov    -0x000008(%ebp),%dl
		mov    $0x0003c9,%eax
		call   _07b9bf_func
		xor    %edx,%edx
		mov    -0x000004(%ebp),%dl
		mov    $0x0003c9,%eax
		call   _07b9bf_func

	_0773b7_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0773c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    _0cdf2c_data,%edi
		mov    %edi,_0ddd08_data
		mov    _0ddd08_data,%edi
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077400_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		movl   $0x000000,_0ddd08_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077494_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		mov    $0x000011,%ebx
		xor    %edx,%edx
		mov    -0x000004(%ebp),%eax
		call   _079cd0_func
		mov    -0x000004(%ebp),%eax
		movl   $0x000140,0x000004(%eax)
		mov    -0x000004(%ebp),%eax
		movl   $0x0000c8,0x000008(%eax)
		mov    _0ddd08_data,%eax
		mov    -0x000004(%ebp),%edx
		mov    %eax,(%edx)
		mov    _0c7998_data,%al
		mov    %al,_0bd038_data
		xor    %eax,%eax
		mov    _0bd039_data,%al
		call   _038c58_func
		call   _0348e8_func
		mov    $0x000300,%ebx
		xor    %edx,%edx
		mov    $_0dda00_data,%eax
		call   _079cd0_func
		movl   $0x000000,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077514_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    %eax,-0x000004(%ebp)
		mov    _0bd038_data,%al
		mov    %al,_0c7998_data
		xor    %eax,%eax
		mov    _0c7998_data,%al
		call   _038c58_func
		call   _0348e8_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07754c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		mov    0x000004(%eax),%eax
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077574_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		mov    0x000008(%eax),%eax
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07759c_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    %cl,-0x000004(%ebp)
		mov    -0x000010(%ebp),%eax
		mov    -0x000008(%ebp),%edx
		imul   0x000004(%eax),%edx
		mov    %edx,%eax
		mov    -0x00000c(%ebp),%edx
		add    %eax,%edx
		mov    -0x000010(%ebp),%eax
		mov    (%eax),%eax
		add    %eax,%edx
		mov    -0x000004(%ebp),%al
		mov    %al,(%edx)
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0775d8_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    %ecx,-0x000004(%ebp)
		mov    -0x000010(%ebp),%ecx
		mov    -0x000008(%ebp),%esi
		imul   0x000004(%ecx),%esi
		mov    -0x000010(%ebp),%ecx
		mov    (%ecx),%ecx
		add    %esi,%ecx
		mov    -0x00000c(%ebp),%esi
		add    %ecx,%esi
		mov    %esi,-0x000014(%ebp)
		mov    0x000010(%ebp),%ecx
		mov    -0x000014(%ebp),%edi
		mov    -0x000004(%ebp),%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07761b_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07761b_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_07762c_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    %cl,-0x000004(%ebp)
		mov    -0x000010(%ebp),%eax
		mov    -0x000008(%ebp),%ebx
		imul   0x000004(%eax),%ebx
		mov    -0x000010(%ebp),%eax
		mov    (%eax),%eax
		add    %ebx,%eax
		mov    -0x00000c(%ebp),%ebx
		add    %eax,%ebx
		mov    %ebx,-0x000014(%ebp)
		mov    0x000010(%ebp),%ebx
		xor    %eax,%eax
		mov    -0x000004(%ebp),%al
		mov    -0x000014(%ebp),%edi
		cld    
		mov    %ebx,%ecx
		and    $0x000003,%ecx
		je     _077671_jump
		rep stos %al,%es:(%edi)

	_077671_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _077686_jump
		mov    %eax,%ebx
		mov    %al,%ah
		mov    %bl,%bh
		shl    $0x000010,%eax
		mov    %bx,%ax
		rep stos %eax,%es:(%edi)

	_077686_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_077690_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00001c,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    %ecx,-0x000004(%ebp)
		shll   0x000010(%ebp)
		mov    0x000010(%ebp),%eax
		and    $0x000001,%eax
		mov    %eax,-0x000014(%ebp)
		sarl   0x000010(%ebp)
		mov    -0x000010(%ebp),%eax
		mov    -0x000008(%ebp),%edx
		imul   0x000004(%eax),%edx
		mov    -0x000010(%ebp),%eax
		mov    (%eax),%eax
		add    %edx,%eax
		mov    -0x00000c(%ebp),%edx
		add    %eax,%edx
		mov    %edx,-0x000018(%ebp)

	_0776cf_jump:
		addl   $0xffffffff,0x000010(%ebp)
		cmpl   $0x000000,0x000010(%ebp)
		jl     _0776e8_jump
		mov    -0x000018(%ebp),%edx
		addl   $0x000002,-0x000018(%ebp)
		mov    -0x000004(%ebp),%eax
		mov    %ax,(%edx)
		jmp    _0776cf_jump

	_0776e8_jump:
		cmpl   $0x000000,-0x000014(%ebp)
		je     _0776fc_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    -0x000004(%ebp),%al
		mov    -0x00001c(%ebp),%edx
		mov    %al,(%edx)

	_0776fc_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_077704_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000018,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    %ecx,-0x000004(%ebp)
		mov    -0x00000c(%ebp),%eax
		add    -0x000004(%ebp),%eax
		mov    %eax,-0x000018(%ebp)
		mov    -0x00000c(%ebp),%eax
		mov    %eax,-0x000014(%ebp)
		jmp    _07772f_jump

	_07772c_jump:
		incl   -0x000014(%ebp)

	_07772f_jump:
		mov    -0x000014(%ebp),%eax
		cmp    -0x000018(%ebp),%eax
		jge    _07778a_jump
		mov    -0x000008(%ebp),%eax
		mov    (%eax),%al
		and    $0x0000ff,%eax
		sar    $0x000002,%eax
		mov    -0x000014(%ebp),%edx
		lea    (%edx,%edx,2),%edx
		mov    %al,_0dda00_data(%edx)
		mov    -0x000008(%ebp),%eax
		mov    0x000001(%eax),%al
		and    $0x0000ff,%eax
		sar    $0x000002,%eax
		mov    -0x000014(%ebp),%edx
		lea    (%edx,%edx,2),%edx
		mov    %al,_0dda01_data(%edx)
		mov    -0x000008(%ebp),%eax
		mov    0x000002(%eax),%al
		and    $0x0000ff,%eax
		sar    $0x000002,%eax
		mov    -0x000014(%ebp),%edx
		lea    (%edx,%edx,2),%edx
		mov    %al,_0dda02_data(%edx)
		addl   $0x000003,-0x000008(%ebp)
		jmp    _07772c_jump

	_07778a_jump:
		mov    -0x00000c(%ebp),%eax
		cmp    _0ddd04_data,%eax
		jge    _07779d_jump
		mov    -0x00000c(%ebp),%eax
		mov    %eax,_0ddd04_data

	_07779d_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0bd03c_data,%eax
		jle    _0777b0_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0bd03c_data

	_0777b0_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0777b8_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000018,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    %ecx,-0x000004(%ebp)
		mov    -0x00000c(%ebp),%eax
		add    -0x000004(%ebp),%eax
		mov    %eax,-0x000018(%ebp)
		mov    -0x00000c(%ebp),%eax
		mov    %eax,-0x000014(%ebp)
		jmp    _0777e3_jump

	_0777e0_jump:
		incl   -0x000014(%ebp)

	_0777e3_jump:
		mov    -0x000014(%ebp),%eax
		cmp    -0x000018(%ebp),%eax
		jge    _077826_jump
		mov    -0x000014(%ebp),%edx
		lea    (%edx,%edx,2),%edx
		mov    -0x000008(%ebp),%eax
		mov    (%eax),%al
		mov    %al,_0dda00_data(%edx)
		mov    -0x000014(%ebp),%edx
		lea    (%edx,%edx,2),%edx
		mov    -0x000008(%ebp),%eax
		mov    0x000001(%eax),%al
		mov    %al,_0dda01_data(%edx)
		mov    -0x000014(%ebp),%edx
		lea    (%edx,%edx,2),%edx
		mov    -0x000008(%ebp),%eax
		mov    0x000002(%eax),%al
		mov    %al,_0dda02_data(%edx)
		addl   $0x000003,-0x000008(%ebp)
		jmp    _0777e0_jump

	_077826_jump:
		mov    -0x00000c(%ebp),%eax
		cmp    _0ddd04_data,%eax
		jge    _077839_jump
		mov    -0x00000c(%ebp),%eax
		mov    %eax,_0ddd04_data

	_077839_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0bd03c_data,%eax
		jle    _07784c_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0bd03c_data

	_07784c_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_077854_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		xor    %edx,%edx
		mov    _0c6b70_data,%dx
		mov    -0x000008(%ebp),%eax
		dec    %eax
		imul   %eax,%edx
		call   _01735b_func
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c6b72_data,%ax
		add    %eax,%edx
		mov    %edx,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_077898_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		push   $0x000200
		mov    -0x000004(%ebp),%eax
		push   %eax
		call   _07abb6_func
		add    $0x000008,%esp
		mov    -0x000008(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000008(%ebp),%eax
		cmpl   $0x000000,(%eax)
		jge    _0778d2_jump
		movl   $0xfffffffb,-0x00000c(%ebp)
		jmp    _0778d9_jump

	_0778d2_jump:
		movl   $0x000000,-0x00000c(%ebp)

	_0778d9_jump:
		mov    -0x00000c(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0778e4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    %ebx,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000010(%ebp)
		lea    -0x000010(%ebp),%eax
		push   %eax
		mov    -0x000010(%ebp),%edx
		mov    %ds,%ebx
		mov    -0x000008(%ebp),%eax
		mov    -0x00000c(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _07b9ce_func
		test   %eax,%eax
		je     _077926_jump
		movl   $0xfffffffa,-0x000014(%ebp)
		jmp    _07792d_jump

	_077926_jump:
		movl   $0x000000,-0x000014(%ebp)

	_07792d_jump:
		mov    -0x000014(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_077938_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000020,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    %ebx,-0x000004(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    (%eax),%eax
		mov    %eax,-0x000018(%ebp)

	_077955_jump:
		cmpl   $0x000000,-0x000004(%ebp)
		je     _0779a6_jump
		cmpl   $0x00fff0,-0x000004(%ebp)
		jbe    _07796d_jump
		movl   $0x00fff0,-0x000020(%ebp)
		jmp    _077973_jump

	_07796d_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000020(%ebp)

	_077973_jump:
		mov    -0x000020(%ebp),%eax
		mov    %eax,-0x000014(%ebp)
		mov    -0x000014(%ebp),%ebx
		mov    -0x000018(%ebp),%edx
		mov    -0x00000c(%ebp),%eax
		call   _0778e4_func
		mov    %eax,-0x000010(%ebp)
		cmpl   $0x000000,-0x000010(%ebp)
		jge    _077998_jump
		mov    -0x000010(%ebp),%eax
		mov    %eax,-0x00001c(%ebp)
		jmp    _0779ad_jump

	_077998_jump:
		mov    -0x000014(%ebp),%eax
		add    %eax,-0x000018(%ebp)
		mov    -0x000014(%ebp),%eax
		sub    %eax,-0x000004(%ebp)
		jmp    _077955_jump

	_0779a6_jump:
		movl   $0x000000,-0x00001c(%ebp)

	_0779ad_jump:
		mov    -0x00001c(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0779b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x000004(%ebp)
		mov    $0x000018,%ebx
		xor    %edx,%edx
		mov    -0x000004(%ebp),%eax
		call   _079cd0_func
		call   _0773c0_func
		mov    %eax,-0x000008(%ebp)
		cmpl   $0x000000,-0x000008(%ebp)
		jl     _077a00_jump
		mov    -0x000004(%ebp),%eax
		call   _077494_func
		mov    %eax,-0x000008(%ebp)
		cmpl   $0x000000,-0x000008(%ebp)
		jl     _077a00_jump
		movl   $0x000000,-0x00000c(%ebp)
		jmp    _077a06_jump

	_077a00_jump:
		mov    -0x000008(%ebp),%eax
		mov    %eax,-0x00000c(%ebp)

	_077a06_jump:
		mov    -0x00000c(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077a14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    %eax,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		call   _077514_func
		call   _077400_func
		cmpb   $0x000000,_0c697c_data
		je     _077a4a_jump
		call   _0753b0_func
		and    $0x0000ff,%eax
		call   _0770ac_func

	_077a4a_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077a54_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000024,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    %ecx,-0x000004(%ebp)
		movl   $0x000000,-0x000024(%ebp)
		mov    -0x000010(%ebp),%eax
		mov    %eax,-0x000020(%ebp)
		mov    -0x000020(%ebp),%eax
		mov    %eax,-0x00001c(%ebp)
		movl   $0x000000,_0bd03c_data
		movl   $0x000100,_0ddd04_data
		mov    -0x00001c(%ebp),%eax
		mov    (%eax),%ax
		mov    %eax,-0x000014(%ebp)
		addl   $0x000002,-0x000020(%ebp)

	_077a9f_jump:
		addl   $0xffffffff,-0x000014(%ebp)
		movswl -0x000014(%ebp),%eax
		test   %eax,%eax
		jl     _077af5_jump
		mov    -0x000020(%ebp),%eax
		incl   -0x000020(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		add    %eax,-0x000024(%ebp)
		mov    -0x000020(%ebp),%edx
		incl   -0x000020(%ebp)
		xor    %eax,%eax
		mov    (%edx),%al
		mov    %eax,-0x000018(%ebp)
		cmpl   $0x000000,-0x000018(%ebp)
		jne    _077ad5_jump
		movl   $0x000100,-0x000018(%ebp)

	_077ad5_jump:
		mov    -0x000018(%ebp),%ecx
		mov    -0x000020(%ebp),%ebx
		mov    -0x000024(%ebp),%edx
		mov    -0x000008(%ebp),%eax
		call   *-0x000004(%ebp)
		mov    -0x000018(%ebp),%eax
		lea    (%eax,%eax,2),%eax
		add    %eax,-0x000020(%ebp)
		mov    -0x000018(%ebp),%eax
		add    %eax,-0x000024(%ebp)
		jmp    _077a9f_jump

	_077af5_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_077afc_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    %ebx,-0x000004(%ebp)
		mov    $_077704_func,%ecx
		mov    -0x000004(%ebp),%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x00000c(%ebp),%eax
		call   _077a54_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_077b2c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    %ebx,-0x000004(%ebp)
		mov    $_0777b8_func,%ecx
		mov    -0x000004(%ebp),%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x00000c(%ebp),%eax
		call   _077a54_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_077b5c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000028,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    %ebx,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000008(%ebp),%edx
		mov    0x000008(%edx),%ax
		mov    %eax,-0x000020(%ebp)
		xor    %eax,%eax
		mov    -0x000008(%ebp),%edx
		mov    0x00000a(%edx),%ax
		mov    %eax,-0x00001c(%ebp)
		mov    -0x00000c(%ebp),%eax
		mov    %eax,-0x000018(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    0x000090(%eax),%eax
		mov    %eax,-0x000024(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    0x00008c(%eax),%eax
		add    -0x000020(%ebp),%eax
		mov    %eax,-0x000014(%ebp)

	_077baa_jump:
		addl   $0xffffffff,-0x00001c(%ebp)
		cmpl   $0x000000,-0x00001c(%ebp)
		jl     _077c3d_jump
		mov    -0x000008(%ebp),%eax
		mov    0x00008c(%eax),%eax
		mov    %eax,-0x000028(%ebp)
		incl   -0x000018(%ebp)
		movb   $0x000000,-0x000010(%ebp)

	_077bcb_jump:
		movsbl -0x000010(%ebp),%eax
		add    %eax,-0x000028(%ebp)
		mov    -0x000028(%ebp),%eax
		cmp    -0x000014(%ebp),%eax
		jge    _077c32_jump
		mov    -0x000018(%ebp),%eax
		incl   -0x000018(%ebp)
		mov    (%eax),%al
		mov    %al,-0x000010(%ebp)
		movsbl -0x000010(%ebp),%eax
		test   %eax,%eax
		jl     _077c10_jump
		movsbl -0x000010(%ebp),%eax
		push   %eax
		mov    -0x000018(%ebp),%ecx
		incl   -0x000018(%ebp)
		mov    (%ecx),%cl
		and    $0x0000ff,%ecx
		mov    -0x000024(%ebp),%ebx
		mov    -0x000028(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _07762c_func
		jmp    _077c30_jump

	_077c10_jump:
		negb   -0x000010(%ebp)
		movsbl -0x000010(%ebp),%eax
		push   %eax
		mov    -0x000018(%ebp),%ecx
		mov    -0x000024(%ebp),%ebx
		mov    -0x000028(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _0775d8_func
		movsbl -0x000010(%ebp),%eax
		add    %eax,-0x000018(%ebp)

	_077c30_jump:
		jmp    _077bcb_jump

	_077c32_jump:
		mov    -0x000024(%ebp),%eax
		incl   -0x000024(%ebp)
		jmp    _077baa_jump

	_077c3d_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_077c44_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    %ebx,-0x000004(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    0x00008c(%eax),%eax
		mov    %eax,-0x000030(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    0x000090(%eax),%eax
		mov    %eax,-0x00002c(%ebp)
		mov    -0x00000c(%ebp),%eax
		mov    %eax,-0x000028(%ebp)
		mov    -0x000028(%ebp),%eax
		add    $0x000004,%eax
		mov    %eax,-0x000024(%ebp)
		mov    -0x000028(%ebp),%eax
		addl   $0x000002,-0x000028(%ebp)
		movswl (%eax),%eax
		mov    -0x00002c(%ebp),%edx
		add    %eax,%edx
		mov    %edx,-0x00001c(%ebp)
		mov    -0x000028(%ebp),%eax
		mov    (%eax),%ax
		mov    %eax,-0x000018(%ebp)

	_077c9b_jump:
		addl   $0xffffffff,-0x000018(%ebp)
		movswl -0x000018(%ebp),%eax
		test   %eax,%eax
		jl     _077d53_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000020(%ebp)
		mov    -0x000024(%ebp),%eax
		incl   -0x000024(%ebp)
		mov    (%eax),%al
		mov    %al,-0x000014(%ebp)

	_077cbc_jump:
		xor    %eax,%eax
		mov    -0x000014(%ebp),%al
		test   %eax,%eax
		jle    _077d48_jump
		mov    -0x000024(%ebp),%eax
		incl   -0x000024(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		add    %eax,-0x000020(%ebp)
		mov    -0x000024(%ebp),%eax
		incl   -0x000024(%ebp)
		mov    (%eax),%al
		mov    %al,-0x000010(%ebp)
		movsbl -0x000010(%ebp),%eax
		test   %eax,%eax
		jge    _077d1c_jump
		negb   -0x000010(%ebp)
		movsbl -0x000010(%ebp),%eax
		push   %eax
		mov    -0x000024(%ebp),%ecx
		incl   -0x000024(%ebp)
		mov    (%ecx),%cl
		and    $0x0000ff,%ecx
		mov    -0x00001c(%ebp),%ebx
		mov    -0x000020(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _07762c_func
		movsbl -0x000010(%ebp),%eax
		add    %eax,-0x000020(%ebp)
		decb   -0x000014(%ebp)
		jmp    _077d43_jump

	_077d1c_jump:
		movsbl -0x000010(%ebp),%eax
		push   %eax
		mov    -0x000024(%ebp),%ecx
		mov    -0x00001c(%ebp),%ebx
		mov    -0x000020(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _0775d8_func
		movsbl -0x000010(%ebp),%eax
		add    %eax,-0x000024(%ebp)
		movsbl -0x000010(%ebp),%eax
		add    %eax,-0x000020(%ebp)
		decb   -0x000014(%ebp)

	_077d43_jump:
		jmp    _077cbc_jump

	_077d48_jump:
		mov    -0x00001c(%ebp),%eax
		incl   -0x00001c(%ebp)
		jmp    _077c9b_jump

	_077d53_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_077d5c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000034,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    %ebx,-0x000004(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    0x00008c(%eax),%eax
		mov    %eax,-0x000034(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    0x000090(%eax),%eax
		mov    %eax,-0x000030(%ebp)
		xor    %eax,%eax
		mov    -0x000008(%ebp),%edx
		mov    0x000008(%edx),%ax
		mov    %eax,-0x00002c(%ebp)
		mov    -0x000034(%ebp),%eax
		add    -0x00002c(%ebp),%eax
		dec    %eax
		mov    %eax,-0x000018(%ebp)
		mov    -0x00000c(%ebp),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    -0x00001c(%ebp),%eax
		addl   $0x000002,-0x00001c(%ebp)
		mov    (%eax),%ax
		mov    %eax,-0x000010(%ebp)
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _077dc1_jump

	_077dba_jump:
		movswl -0x000014(%ebp),%eax
		sub    %eax,-0x000024(%ebp)

	_077dc1_jump:
		mov    -0x00001c(%ebp),%eax
		addl   $0x000002,-0x00001c(%ebp)
		mov    (%eax),%ax
		mov    %eax,-0x000014(%ebp)
		movswl -0x000014(%ebp),%eax
		test   %eax,%eax
		jge    _077e1d_jump
		testw  $0x004000,-0x000014(%ebp)
		jne    _077dba_jump
		xor    %ecx,%ecx
		mov    -0x000024(%ebp),%cl
		mov    -0x000018(%ebp),%ebx
		xor    %edx,%edx
		mov    -0x000014(%ebp),%dl
		mov    -0x000004(%ebp),%eax
		call   _07759c_func
		mov    -0x00001c(%ebp),%eax
		addl   $0x000002,-0x00001c(%ebp)
		mov    (%eax),%ax
		mov    %ax,-0x000014(%ebp)
		movswl -0x000014(%ebp),%eax
		test   %eax,%eax
		jne    _077e1d_jump
		incl   -0x000024(%ebp)
		addl   $0xffffffff,-0x000010(%ebp)
		movswl -0x000010(%ebp),%eax
		test   %eax,%eax
		jg     _077dc1_jump
		jmp    _077ed9_jump

	_077e1d_jump:
		mov    -0x000034(%ebp),%eax
		mov    %eax,-0x000028(%ebp)

	_077e23_jump:
		mov    -0x00001c(%ebp),%eax
		incl   -0x00001c(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		add    %eax,-0x000028(%ebp)
		mov    -0x00001c(%ebp),%eax
		incl   -0x00001c(%ebp)
		movsbl (%eax),%eax
		mov    %eax,-0x000020(%ebp)
		mov    -0x000020(%ebp),%eax
		add    %eax,-0x000020(%ebp)
		cmpl   $0x000000,-0x000020(%ebp)
		jl     _077e8e_jump
		mov    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%ecx
		mov    -0x000024(%ebp),%ebx
		mov    -0x000028(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _0775d8_func
		mov    -0x000020(%ebp),%eax
		add    %eax,-0x000028(%ebp)
		mov    -0x000020(%ebp),%eax
		add    %eax,-0x00001c(%ebp)
		addw   $0x00ffff,-0x000014(%ebp)
		movswl -0x000014(%ebp),%eax
		test   %eax,%eax
		jne    _077e23_jump
		incl   -0x000024(%ebp)
		addl   $0xffffffff,-0x000010(%ebp)
		movswl -0x000010(%ebp),%eax
		test   %eax,%eax
		jg     _077dc1_jump
		jmp    _077ed9_jump

	_077e8e_jump:
		negl   -0x000020(%ebp)
		mov    -0x000020(%ebp),%eax
		sar    %eax
		push   %eax
		mov    -0x00001c(%ebp),%ecx
		addl   $0x000002,-0x00001c(%ebp)
		mov    (%ecx),%cx
		mov    -0x000024(%ebp),%ebx
		mov    -0x000028(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _077690_func
		mov    -0x000020(%ebp),%eax
		add    %eax,-0x000028(%ebp)
		addw   $0x00ffff,-0x000014(%ebp)
		movswl -0x000014(%ebp),%eax
		test   %eax,%eax
		jne    _077e23_jump
		incl   -0x000024(%ebp)
		addl   $0xffffffff,-0x000010(%ebp)
		movswl -0x000010(%ebp),%eax
		test   %eax,%eax
		jg     _077dc1_jump

	_077ed9_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_077ee0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000024,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    %ebx,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000008(%ebp),%edx
		mov    0x00000a(%edx),%ax
		mov    %eax,-0x00001c(%ebp)
		xor    %eax,%eax
		mov    -0x000008(%ebp),%edx
		mov    0x000008(%edx),%ax
		mov    %eax,-0x000018(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    0x00008c(%eax),%eax
		mov    %eax,-0x000024(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    0x000090(%eax),%eax
		mov    %eax,-0x000014(%ebp)
		movb   $0x000000,-0x00000f(%ebp)
		mov    -0x00000f(%ebp),%al
		mov    %al,-0x000010(%ebp)
		movl   $0x000000,-0x000020(%ebp)
		jmp    _077f3b_jump

	_077f38_jump:
		incl   -0x000020(%ebp)

	_077f3b_jump:
		mov    -0x000020(%ebp),%eax
		cmp    -0x00001c(%ebp),%eax
		jge    _077f87_jump
		mov    -0x000018(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		push   %eax
		mov    -0x000010(%ebp),%ecx
		mov    -0x000014(%ebp),%ebx
		add    -0x000020(%ebp),%ebx
		mov    -0x000024(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _077690_func
		testl  $0x000001,-0x000018(%ebp)
		je     _077f85_jump
		xor    %ecx,%ecx
		mov    -0x000014(%ebp),%ebx
		add    -0x000020(%ebp),%ebx
		mov    -0x000024(%ebp),%edx
		add    -0x000018(%ebp),%edx
		dec    %edx
		mov    -0x000004(%ebp),%eax
		call   _07759c_func

	_077f85_jump:
		jmp    _077f38_jump

	_077f87_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_077f90_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000020,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    %ebx,-0x000004(%ebp)
		xor    %eax,%eax
		mov    -0x000008(%ebp),%edx
		mov    0x00000a(%edx),%ax
		mov    %eax,-0x00001c(%ebp)
		xor    %eax,%eax
		mov    -0x000008(%ebp),%edx
		mov    0x000008(%edx),%ax
		mov    %eax,-0x000018(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    0x00008c(%eax),%eax
		mov    %eax,-0x000014(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    0x000090(%eax),%eax
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000020(%ebp)
		jmp    _077fe1_jump

	_077fde_jump:
		incl   -0x000020(%ebp)

	_077fe1_jump:
		mov    -0x000020(%ebp),%eax
		cmp    -0x00001c(%ebp),%eax
		jge    _078009_jump
		mov    -0x000018(%ebp),%eax
		push   %eax
		mov    -0x00000c(%ebp),%ecx
		mov    -0x000010(%ebp),%ebx
		add    -0x000020(%ebp),%ebx
		mov    -0x000014(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _0775d8_func
		mov    -0x000018(%ebp),%eax
		add    %eax,-0x00000c(%ebp)
		jmp    _077fde_jump

	_078009_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_078010_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    %eax,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		mov    0x000080(%eax),%eax
		call   _07af54_func
		mov    $0x000095,%ebx
		xor    %edx,%edx
		mov    -0x000004(%ebp),%eax
		call   _079cd0_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078048_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		mov    $0x000095,%ebx
		xor    %edx,%edx
		mov    -0x000008(%ebp),%eax
		call   _079cd0_func
		mov    -0x000004(%ebp),%edx
		mov    -0x000008(%ebp),%eax
		add    $0x000080,%eax
		call   _077898_func
		mov    %eax,-0x00000c(%ebp)
		cmpl   $0x000000,-0x00000c(%ebp)
		jl     _0781db_jump
		mov    $0x000080,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000008(%ebp),%eax
		mov    0x000080(%eax),%eax
		call   _0778e4_func
		mov    %eax,-0x00000c(%ebp)
		cmpl   $0x000000,-0x00000c(%ebp)
		jl     _0781d3_jump
		mov    -0x000004(%ebp),%eax
		mov    -0x000008(%ebp),%edx
		mov    %eax,0x000088(%edx)
		mov    -0x000008(%ebp),%eax
		movl   $0x000000,0x000084(%eax)
		mov    -0x000008(%ebp),%eax
		mov    0x000008(%eax),%ax
		and    $0x00ffff,%eax
		cmp    $0x000140,%eax
		jg     _0780e9_jump
		mov    -0x000008(%ebp),%eax
		mov    0x00000a(%eax),%ax
		and    $0x00ffff,%eax
		cmp    $0x0000c8,%eax
		jle    _0780ee_jump

	_0780e9_jump:
		jmp    _0781cc_jump

	_0780ee_jump:
		mov    -0x000008(%ebp),%eax
		mov    0x000004(%eax),%ax
		and    $0x00ffff,%eax
		cmp    $0x00af12,%eax
		jne    _078146_jump
		mov    -0x000008(%ebp),%eax
		cmpl   $0x00000c,(%eax)
		jne    _078124_jump
		mov    -0x000008(%ebp),%eax
		movl   $0x00000c,0x000050(%eax)
		mov    -0x000008(%ebp),%eax
		movl   $0x00001e,0x000010(%eax)
		movb   $0x000001,_0dd9fe_data

	_078124_jump:
		xor    %ebx,%ebx
		mov    -0x000008(%ebp),%edx
		mov    0x000050(%edx),%edx
		mov    -0x000008(%ebp),%eax
		mov    0x000080(%eax),%eax
		call   _07b9ff_func
		movl   $0x000000,-0x000010(%ebp)
		jmp    _0781e1_jump

	_078146_jump:
		mov    -0x000008(%ebp),%eax
		mov    0x000004(%eax),%ax
		and    $0x00ffff,%eax
		cmp    $0x00af11,%eax
		jne    _0781c3_jump
		mov    -0x000008(%ebp),%eax
		cmpl   $0x00000c,(%eax)
		jne    _078194_jump
		mov    -0x000008(%ebp),%eax
		movl   $0x00000c,0x000050(%eax)
		mov    -0x000008(%ebp),%eax
		movl   $0x000005,0x000010(%eax)
		xor    %ebx,%ebx
		mov    -0x000008(%ebp),%edx
		mov    0x000050(%edx),%edx
		mov    -0x000008(%ebp),%eax
		mov    0x000080(%eax),%eax
		call   _07b9ff_func
		movb   $0x000001,_0dd9fe_data
		jmp    _07819e_jump

	_078194_jump:
		mov    -0x000008(%ebp),%eax
		movl   $0x000080,0x000050(%eax)

	_07819e_jump:
		mov    -0x000008(%ebp),%edx
		imul   $0x0003e8,0x000010(%edx),%edx
		mov    $0x000046,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    -0x000008(%ebp),%edx
		mov    %eax,0x000010(%edx)
		movl   $0x000000,-0x000010(%ebp)
		jmp    _0781e1_jump

	_0781c3_jump:
		movl   $0xfffffff5,-0x00000c(%ebp)
		jmp    _0781d3_jump

	_0781cc_jump:
		movl   $0xfffffffd,-0x00000c(%ebp)

	_0781d3_jump:
		mov    -0x000008(%ebp),%eax
		call   _078010_func

	_0781db_jump:
		mov    -0x00000c(%ebp),%eax
		mov    %eax,-0x000010(%ebp)

	_0781e1_jump:
		mov    -0x000010(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0781ec_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000024,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    %ecx,-0x000004(%ebp)
		movb   $0x000000,_0ddd00_data
		movl   $0x000000,-0x000018(%ebp)
		jmp    _078216_jump

	_078213_jump:
		incl   -0x000018(%ebp)

	_078216_jump:
		mov    -0x00000c(%ebp),%eax
		mov    0x000004(%eax),%eax
		sar    $0x000010,%eax
		cmp    -0x000018(%ebp),%eax
		jle    _078345_jump
		mov    -0x000008(%ebp),%eax
		mov    %eax,-0x000014(%ebp)
		mov    -0x000014(%ebp),%eax
		mov    (%eax),%eax
		add    %eax,-0x000008(%ebp)
		mov    -0x000014(%ebp),%eax
		mov    0x000004(%eax),%ax
		mov    %eax,-0x000020(%ebp)
		jmp    _078320_jump

	_078245_case:
		movb   $0x000001,_0ddd00_data
		mov    -0x000004(%ebp),%ebx
		mov    -0x000010(%ebp),%edx
		mov    -0x000014(%ebp),%eax
		add    $0x000006,%eax
		call   _077afc_func
		jmp    _078340_jump

	_078262_case:
		mov    -0x000004(%ebp),%ebx
		mov    -0x000010(%ebp),%edx
		mov    -0x000014(%ebp),%eax
		add    $0x000006,%eax
		call   _077d5c_func
		jmp    _078340_jump

	_078278_case:
		movb   $0x000001,_0ddd00_data
		mov    -0x000004(%ebp),%ebx
		mov    -0x000010(%ebp),%edx
		mov    -0x000014(%ebp),%eax
		add    $0x000006,%eax
		call   _077b2c_func
		jmp    _078340_jump

	_078295_case:
		mov    -0x000004(%ebp),%ebx
		mov    -0x000010(%ebp),%edx
		mov    -0x000014(%ebp),%eax
		add    $0x000006,%eax
		call   _077c44_func
		jmp    _078340_jump

	_0782ab_case:
		mov    -0x000004(%ebp),%ebx
		mov    -0x000010(%ebp),%edx
		mov    -0x000014(%ebp),%eax
		add    $0x000006,%eax
		call   _077ee0_func
		jmp    _078340_jump

	_0782c1_case:
		mov    -0x000004(%ebp),%ebx
		mov    -0x000010(%ebp),%edx
		mov    -0x000014(%ebp),%eax
		add    $0x000006,%eax
		call   _077b5c_func
		jmp    _078340_jump

	_0782d4_case:
		mov    -0x000004(%ebp),%ebx
		mov    -0x000010(%ebp),%edx
		mov    -0x000014(%ebp),%eax
		add    $0x000006,%eax
		call   _077f90_func
		jmp    _078340_jump

	_0782e7_case:
		jmp    _078340_jump

_0782ec_switch:
		.long   _078245_case
		.long   _0782e7_case
		.long   _0782e7_case
		.long   _078262_case
		.long   _0782e7_case
		.long   _0782e7_case
		.long   _0782e7_case
		.long   _078278_case
		.long   _078295_case
		.long   _0782ab_case
		.long   _0782e7_case
		.long   _0782c1_case
		.long   _0782d4_case


	_078320_jump:
		mov    -0x000020(%ebp),%eax
		sub    $0x000004,%eax
		mov    %eax,-0x000024(%ebp)
		cmpw   $0x00000c,-0x000024(%ebp)
		ja     _0782e7_case
		xor    %eax,%eax
		mov    -0x000024(%ebp),%ax
		shl    $0x000002,%eax
		jmp    *%cs:_0782ec_switch(%eax)

	_078340_jump:
		jmp    _078213_jump

	_078345_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _077360_func
		mov    -0x000010(%ebp),%eax
		cmpl   $0x000001,0x000084(%eax)
		je     _078369_jump

	_07835c_jump:
		call   _01735b_func
		cmp    _0ddd0c_data,%eax
		jbe    _07835c_jump

	_078369_jump:
		call   _0172fe_func
		mov    0x000010(%ebp),%edx
		mov    $0x000004,%eax
		call   _077854_func
		mov    %eax,_0ddd0c_data
		mov    -0x000010(%ebp),%eax
		mov    0x000094(%eax),%al
		and    $0x0000ff,%eax
		test   %eax,%eax
		jle    _07839b_jump
		cmpb   $0x000000,_0c697c_data
		jne    _07839d_jump

	_07839b_jump:
		jmp    _0783a6_jump

	_07839d_jump:
		cmpb   $0x000000,_0dd9fc_data
		jne    _0783a8_jump

	_0783a6_jump:
		jmp    _0783be_jump

	_0783a8_jump:
		movb   $0x000000,_0dd9fc_data
		call   _0753b0_func
		and    $0x0000ff,%eax
		call   _0770d8_func

	_0783be_jump:
		xor    %ebx,%ebx
		mov    $0x00003f,%edx
		xor    %eax,%eax
		call   _077360_func
		xor    %eax,%eax
		mov    _0ddd00_data,%al
		cmp    $0x000001,%eax
		jne    _0783f9_jump
		mov    $_0dda00_data,%esi
		pusha  
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		popa   

	_0783f9_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    $0x00003f,%eax
		call   _077360_func
		mov    -0x000004(%ebp),%eax
		mov    0x000004(%eax),%eax
		mov    -0x000004(%ebp),%edx
		imul   0x000008(%edx),%eax
		mov    _095afc_data,%edi
		mov    -0x000004(%ebp),%esi
		mov    (%esi),%esi
		mov    %eax,%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07842b_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07842b_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x00003f,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _077360_func
		movl   $0x000000,-0x00001c(%ebp)
		mov    -0x00001c(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_078454_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    %ebx,-0x000004(%ebp)
		mov    -0x00000c(%ebp),%ebx
		incl   0x000084(%ebx)
		mov    $0x000010,%ebx
		lea    -0x000020(%ebp),%edx
		mov    -0x00000c(%ebp),%eax
		mov    0x000080(%eax),%eax
		call   _0778e4_func
		mov    %eax,-0x000024(%ebp)
		cmpl   $0x000000,-0x000024(%ebp)
		jl     _078510_jump
		xor    %eax,%eax
		mov    -0x00001c(%ebp),%ax
		cmp    $0x00f1fa,%eax
		jne    _078509_jump
		mov    -0x000020(%ebp),%eax
		sub    $0x000010,%eax
		mov    %eax,-0x000010(%ebp)
		cmpl   $0x000000,-0x000010(%ebp)
		jle    _0784f0_jump
		mov    _0cdf30_data,%eax
		mov    %eax,-0x00002c(%ebp)
		mov    -0x000010(%ebp),%ebx
		lea    -0x00002c(%ebp),%edx
		mov    -0x00000c(%ebp),%eax
		mov    0x000080(%eax),%eax
		call   _077938_func
		mov    %eax,-0x000024(%ebp)
		cmpl   $0x000000,-0x000024(%ebp)
		jl     _0784ee_jump
		mov    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%ecx
		mov    -0x00002c(%ebp),%ebx
		lea    -0x000020(%ebp),%edx
		mov    -0x00000c(%ebp),%eax
		call   _0781ec_func
		mov    %eax,-0x000024(%ebp)

	_0784ee_jump:
		jmp    _078507_jump

	_0784f0_jump:
		mov    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%ecx
		xor    %ebx,%ebx
		lea    -0x000020(%ebp),%edx
		mov    -0x00000c(%ebp),%eax
		call   _0781ec_func
		mov    %eax,-0x000024(%ebp)

	_078507_jump:
		jmp    _078510_jump

	_078509_jump:
		movl   $0xfffffffc,-0x000024(%ebp)

	_078510_jump:
		mov    -0x000024(%ebp),%eax
		mov    %eax,-0x000030(%ebp)
		mov    -0x000030(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_078520_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		mov    -0x000008(%ebp),%eax
		xor    %edx,%edx
		mov    0x000008(%eax),%dx
		mov    -0x000004(%ebp),%eax
		call   _07754c_func
		sub    %edx,%eax
		mov    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    -0x000008(%ebp),%edx
		mov    %eax,0x00008c(%edx)
		mov    -0x000008(%ebp),%eax
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    -0x000004(%ebp),%eax
		call   _077574_func
		sub    %edx,%eax
		mov    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    -0x000008(%ebp),%edx
		mov    %eax,0x000090(%edx)
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07858c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		movb   $0x000000,_0dd9fc_data
		mov    -0x000008(%ebp),%eax
		mov    0x000094(%eax),%al
		and    $0x0000ff,%eax
		test   %eax,%eax
		jle    _0785c1_jump
		cmpb   $0x000000,_0c697c_data
		jne    _0785c3_jump

	_0785c1_jump:
		jmp    _07860a_jump

	_0785c3_jump:
		call   _0753b0_func
		and    $0x0000ff,%eax
		call   _0770ac_func
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    -0x000008(%ebp),%edx
		mov    0x000094(%edx),%dl
		and    $0x0000ff,%edx
		call   _0753b0_func
		and    $0x0000ff,%eax
		call   _076f3c_func
		call   _0753b0_func
		and    $0x0000ff,%eax
		call   _077080_func
		movb   $0x000001,_0dd9fc_data

	_07860a_jump:
		movl   $0x000000,-0x00000c(%ebp)
		jmp    _078616_jump

	_078613_jump:
		incl   -0x00000c(%ebp)

	_078616_jump:
		mov    -0x000008(%ebp),%eax
		mov    0x000006(%eax),%ax
		and    $0x00ffff,%eax
		cmp    -0x00000c(%ebp),%eax
		jle    _0786af_jump
		call   _03e3d0_func
		call   _03e200_func
		test   %ax,%ax
		jne    _078644_jump
		call   _03e268_func
		test   %ax,%ax
		je     _078646_jump

	_078644_jump:
		jmp    _078650_jump

	_078646_jump:
		call   _03e2d0_func
		test   %ax,%ax
		je     _078652_jump

	_078650_jump:
		jmp    _07865c_jump

	_078652_jump:
		call   _03e338_func
		test   %ax,%ax
		je     _078665_jump

	_07865c_jump:
		movl   $0x000000,-0x000014(%ebp)
		jmp    _0786b5_jump

	_078665_jump:
		mov    $0x000013,%eax
		call   _03dffc_func
		test   %al,%al
		je     _078691_jump
		xor    %eax,%eax
		mov    _0dd9fd_data,%al
		cmp    $0x000001,%eax
		jne    _07868a_jump
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _077360_func

	_07868a_jump:
		xorb   $0x000001,_0dd9fd_data

	_078691_jump:
		mov    -0x000004(%ebp),%ebx
		add    $0x000011,%ebx
		mov    -0x000004(%ebp),%edx
		mov    -0x000008(%ebp),%eax
		call   _078454_func
		mov    %eax,-0x000010(%ebp)
		cmpl   $0x000000,-0x000010(%ebp)
		jge    _078613_jump

	_0786af_jump:
		mov    -0x000010(%ebp),%eax
		mov    %eax,-0x000014(%ebp)

	_0786b5_jump:
		mov    -0x000014(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0788d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		cmpb   $0x000000,_0ce86d_data
		je     _0788f4_jump
		call   _078c0c_func

	_0788f4_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0788fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		cmpb   $0x000000,_0ce86d_data
		je     _078918_jump
		call   _078c50_func

	_078918_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078a18_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000128,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    %bl,-0x000004(%ebp)
		mov    -0x00000c(%ebp),%edx
		lea    -0x000070(%ebp),%eax
		call   _07ba40_func
		mov    -0x000008(%ebp),%edx
		lea    -0x000070(%ebp),%eax
		call   _07ba5f_func
		cmpb   $0x000000,_0c6b76_data
		jne    _078a50_jump
		movb   $0x000000,-0x000004(%ebp)

	_078a50_jump:
		cmpb   $0x000000,_0c697c_data
		je     _078a73_jump
		call   _01cf64_func
		call   _0753b0_func
		add    $0x000041,%al
		cmp    _0ce710_data,%al
		jne    _078a71_jump
		movb   $0x000000,-0x000004(%ebp)

	_078a71_jump:
		jmp    _078a77_jump

	_078a73_jump:
		movb   $0x000000,-0x000004(%ebp)

	_078a77_jump:
		lea    -0x000088(%ebp),%eax
		call   _0779b8_func
		mov    %eax,-0x00008c(%ebp)
		cmpl   $0x000000,-0x00008c(%ebp)
		jl     _078af4_jump
		lea    -0x000070(%ebp),%edx
		lea    -0x000124(%ebp),%eax
		call   _078048_func
		mov    %eax,-0x00008c(%ebp)
		cmpl   $0x000000,-0x00008c(%ebp)
		jl     _078af4_jump
		call   _0788d8_func
		mov    -0x000004(%ebp),%al
		mov    %al,-0x000090(%ebp)
		lea    -0x000088(%ebp),%edx
		lea    -0x000124(%ebp),%eax
		call   _078520_func
		lea    -0x000088(%ebp),%edx
		lea    -0x000124(%ebp),%eax
		call   _07858c_func
		mov    %eax,-0x00008c(%ebp)
		lea    -0x000124(%ebp),%eax
		call   _078010_func
		call   _0788fc_func

	_078af4_jump:
		lea    -0x000088(%ebp),%eax
		call   _077a14_func
		mov    -0x00008c(%ebp),%eax
		mov    %eax,-0x000128(%ebp)
		mov    -0x000128(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_078b20_switch:
		.long   0
		.long   0
		.long   0
		.long   0


_078b98_switch:
		.long   0
		.long   0
		.long   0
		.long   0




_078c0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_078c15_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _079160_func
		cmp    $0x000020,%si
		jle    _078c15_jump

	_078c2b_jump:
		mov    _0ded9c_data,%eax
		call   _07baab_func
		test   %eax,%eax
		jne    _078c2b_jump
		mov    _0deda0_data,%eax
		call   _07bfcf_func
		xor    %eax,%eax
		call   _07bc10_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078c50_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _07bb34_func
		push   %ds
		mov    $0x000028,%eax
		push   $_0deda0_data
		mov    _0bd064_data,%cx
		mov    _0bd060_data,%ebx
		call   _07bc4a_func
		test   %eax,%eax
		je     _078c87_jump
		xor    %eax,%eax
		call   _07bc10_func

	_078c87_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078c8c_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x000003,%eax
		int    $0x000010
		push   %edx
		push   $_0c0a60_data
		call   _0798fc_func
		add    $0x000008,%esp
		mov    $0xffffffff,%eax
		call   _079d2c_func
		pop    %edx
		ret    



_078cb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		xor    %edx,%edx
		xor    %eax,%eax
		call   _07c2eb_func
		test   %eax,%eax
		je     _078cca_jump
		mov    $0x000001,%eax
		jmp    _078d17_jump

	_078cca_jump:
		mov    %esp,%ebx
		mov    $_0ded30_data,%eax
		mov    %ds,%ecx
		mov    %ds,%edx
		call   _07c8d9_func
		test   %eax,%eax
		je     _078cef_jump
		call   _07c435_func
		mov    $0x000002,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078cef_jump:
		mov    $_0ded1c_data,%eax
		mov    %ds,%edx
		call   _07cd51_func
		test   %eax,%eax
		je     _078d10_jump
		call   _07c435_func
		mov    $0x000003,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078d10_jump:
		call   _07c435_func
		xor    %eax,%eax

	_078d17_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078d20_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _07d560_func
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _07bb34_func
		push   %ds
		push   $_0ded9c_data
		mov    %ds,%ecx
		push   %ds
		mov    $_0ded1c_data,%ebx
		mov    $0x002710,%edx
		push   $_0bd044_data
		mov    _0ded94_data,%eax
		mov    %edx,_0bd054_data
		call   _07d619_func
		test   %eax,%eax
		je     _078d7b_jump
		xor    %eax,%eax
		call   _07bc10_func
		call   _07d5d9_func
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078d7b_jump:
		push   %ds
		mov    $0x000028,%eax
		push   $_0deda0_data
		mov    _0bd064_data,%cx
		mov    _0bd060_data,%ebx
		call   _07bc4a_func
		test   %eax,%eax
		je     _078db9_jump
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _07bc10_func
		mov    _0ded9c_data,%eax
		mov    %ebx,%edx
		call   _07ded9_func
		mov    $0x000002,%eax

	_078db9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078dc0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000208,%esp
		mov    %eax,%esi
		mov    %edx,0x000200(%esp)
		mov    %ebx,%edi
		mov    %eax,%edx
		mov    %esp,%eax
		call   _07ba40_func
		mov    $_0c0a84_data,%edx
		mov    %esp,%eax
		call   _07ba5f_func
		lea    0x000100(%esp),%eax
		mov    %esi,%edx
		call   _07ba40_func
		mov    $_0c0a8c_data,%edx
		lea    0x000100(%esp),%eax
		call   _07ba5f_func
		mov    $_0c0a94_data,%edx
		mov    %esp,%eax
		call   _07b355_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _078e25_jump
		mov    $_0c0a98_data,%eax
		call   _078c8c_func

	_078e25_jump:
		mov    $0x000080,%ebx
		mov    $0x000010,%edx
		mov    0x000200(%esp),%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    %ebp,%eax
		mov    $_0c0a94_data,%edx
		call   _07b3eb_func
		lea    0x000100(%esp),%eax
		call   _07b355_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _078e65_jump
		mov    $_0c0ab8_data,%eax
		call   _078c8c_func

	_078e65_jump:
		mov    0x000010(%ebp),%eax
		call   _07ae04_func
		mov    (%edi),%edx
		mov    %eax,%esi
		test   %edx,%edx
		je     _078e7c_jump
		mov    %edx,%eax
		call   _07b961_func

	_078e7c_jump:
		mov    %esi,%eax
		call   _07b866_func
		mov    %eax,0x000204(%esp)
		test   %eax,%eax
		jne    _078e98_jump
		mov    $_0c0ad4_data,%eax
		call   _078c8c_func

	_078e98_jump:
		mov    0x000204(%esp),%eax
		mov    %eax,(%edi)
		xor    %edi,%edi
		cmp    $0x010000,%esi
		jbe    _078eda_jump

	_078eab_jump:
		mov    0x000204(%esp),%ebx
		mov    $0x000001,%edx
		movswl %di,%eax
		mov    %ebp,%ecx
		shl    $0x000010,%eax
		sub    $0x010000,%esi
		add    %ebx,%eax
		mov    $0x010000,%ebx
		inc    %edi
		call   _07a2de_func
		cmp    $0x010000,%esi
		ja     _078eab_jump

	_078eda_jump:
		mov    0x000204(%esp),%ecx
		movswl %di,%eax
		mov    $0x000001,%edx
		shl    $0x000010,%eax
		mov    %esi,%ebx
		add    %ecx,%eax
		mov    %ebp,%ecx
		call   _07a2de_func
		mov    %ebp,%eax
		call   _07b3eb_func
		xor    %eax,%eax

	_078f00_jump:
		movswl %ax,%esi
		mov    0x000200(%esp),%edi
		shl    $0x000004,%esi
		add    %edi,%esi
		mov    0x000204(%esp),%edi
		mov    (%esi),%ebp
		add    %edi,%ebp
		inc    %eax
		mov    %ebp,(%esi)
		cmp    $0x000080,%ax
		jl     _078f00_jump
		xor    %eax,%eax
		add    $0x000208,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_078f30_func:
		push   %ebx
		push   %edx
		mov    $_0bd090_data,%ebx
		mov    $_0ddd1c_data,%edx
		mov    $_0c0b04_data,%eax
		call   _078dc0_func
		pop    %edx
		pop    %ebx
		ret    

_078f4c_switch:
		.long   _078f7e_case
		.long   _078f95_case
		.long   _078fac_case
		.long   _078fc3_case
		.long   _078fda_case
		.long   _078ff1_case




_078f64_func:
		push   %ebx
		push   %edx
		dec    %eax
		cmp    $0x000005,%ax
		ja     _079008_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_078f4c_switch(,%eax,4)

	_078f7e_case:
		mov    $_0bd094_data,%ebx
		mov    $_0de51c_data,%edx
		mov    $_0c0b10_data,%eax
		call   _078dc0_func
		pop    %edx
		pop    %ebx
		ret    

	_078f95_case:
		mov    $_0bd094_data,%ebx
		mov    $_0de51c_data,%edx
		mov    $_0c0b1c_data,%eax
		call   _078dc0_func
		pop    %edx
		pop    %ebx
		ret    

	_078fac_case:
		mov    $_0bd094_data,%ebx
		mov    $_0de51c_data,%edx
		mov    $_0c0b28_data,%eax
		call   _078dc0_func
		pop    %edx
		pop    %ebx
		ret    

	_078fc3_case:
		mov    $_0bd094_data,%ebx
		mov    $_0de51c_data,%edx
		mov    $_0c0b34_data,%eax
		call   _078dc0_func
		pop    %edx
		pop    %ebx
		ret    

	_078fda_case:
		mov    $_0bd094_data,%ebx
		mov    $_0de51c_data,%edx
		mov    $_0c0b40_data,%eax
		call   _078dc0_func
		pop    %edx
		pop    %ebx
		ret    

	_078ff1_case:
		mov    $_0bd094_data,%ebx
		mov    $_0de51c_data,%edx
		mov    $_0c0b4c_data,%eax
		call   _078dc0_func
		pop    %edx
		pop    %ebx
		ret    

	_079008_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_079010_func:
		push   %esi
		push   %edi
		sub    $0x00007c,%esp
		mov    %eax,0x000074(%esp)
		mov    %edx,%ebx
		mov    %cx,0x000078(%esp)
		mov    0x000086(%esp),%eax
		mov    $0x00001d,%ecx
		sar    $0x000010,%eax
		mov    %esp,%edi
		mov    %eax,%edx
		mov    $_078b20_switch,%esi
		shl    $0x00000f,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		sub    %eax,%edx
		mov    $0x00007f,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,0x000014(%esp)
		mov    0x00008a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000010,%edx
		sub    %eax,%edx
		mov    $0x00007f,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x000028(%esp),%ecx
		mov    %eax,0x000040(%esp)
		mov    0x000076(%esp),%eax
		or     $0x004760,%cx
		sar    $0x000010,%eax
		mov    0x000028(%esp),%edx
		mov    _0bd096_data(,%eax,2),%eax
		mov    0x000074(%esp),%esi
		sar    $0x000010,%eax
		or     $0x000720,%edx
		shl    $0x000008,%eax
		mov    %dx,0x000028(%esp)
		mov    %eax,0x000038(%esp)
		test   %si,%si
		jne    _0790ed_jump
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0ddd1c_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0ddd20_data(%edx),%eax
		mov    _0ddd28_data(%edx),%esi
		mov    %eax,0x000008(%esp)
		test   %esi,%esi
		je     _07912f_jump
		mov    $0xffffffff,%edi
		mov    %ecx,0x000028(%esp)
		mov    _0ddd24_data(%edx),%eax
		mov    %esi,0x000034(%esp)
		mov    %eax,0x000030(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _07912f_jump

	_0790ed_jump:
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0de51c_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0de520_data(%edx),%eax
		mov    _0de528_data(%edx),%ebx
		mov    %eax,0x000008(%esp)
		test   %ebx,%ebx
		je     _07912f_jump
		mov    %ecx,0x000028(%esp)
		mov    %ebx,0x000034(%esp)
		mov    _0de524_data(%edx),%eax
		mov    $0xffffffff,%ecx
		mov    %eax,0x000030(%esp)
		mov    %ecx,0x00000c(%esp)

	_07912f_jump:
		cmpl   $0x000000,0x000008(%esp)
		je     _079153_jump
		mov    %esp,%ebx
		mov    _0ded9c_data,%eax
		mov    %ds,%ecx
		call   _07e393_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _079158_jump
		mov    $0xffffffff,%eax
		jmp    _079158_jump

	_079153_jump:
		mov    $0xffffffff,%eax

	_079158_jump:
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_079160_func:
		movswl %ax,%edx
		mov    _0ded9c_data,%eax
		call   _07e9ac_func
		ret    $0x000004



_079170_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%edi
		movswl %dx,%edx
		mov    %edx,%eax
		shl    $0x00000f,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %cx,%ecx
		mov    _0ded9c_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _07ee27_func
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0ded9c_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _07f0ca_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0791cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_0791d5_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _079160_func
		cmp    $0x000020,%si
		jle    _0791d5_jump
		mov    _0deda0_data,%eax
		call   _07bfcf_func
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _07bc10_func
		mov    %ebx,%edx
		mov    _0ded9c_data,%eax
		call   _07ded9_func
		call   _07d5d9_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_079218_switch:
		.long   _079282_case
		.long   _07929f_case
		.long   _0792ca_case
		.long   _0792ba_case
		.long   _0792e5_case
		.long   _07928f_case
		.long   _0792ad_case
		.long   _0792d9_case




_079238_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000178,%esp
		mov    %eax,%ebp
		mov    %edx,%eax
		shl    $0x00000f,%edx
		sub    %eax,%edx
		mov    $0x00007f,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00001d,%ecx
		lea    0x000100(%esp),%edi
		mov    $_078b98_switch,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,0x000114(%esp)
		lea    -0x000001(%ebp),%eax
		cmp    $0x000007,%eax
		ja     _0792e5_case
		jmp    *%cs:_079218_switch(,%eax,4)

	_079282_case:
		mov    %esp,%edi
		mov    $_0c0b58_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		jmp    _0792e5_case

	_07928f_case:
		mov    %esp,%edi
		mov    $_0c0b68_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		jmp    _0792e5_case

	_07929f_case:
		mov    %esp,%edi
		mov    $_0c0b7c_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		jmp    _0792e5_case

	_0792ad_case:
		mov    %esp,%edi
		mov    $_0c0b90_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		jmp    _0792e5_case

	_0792ba_case:
		mov    %esp,%edi
		mov    $_0c0ba0_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		jmp    _0792e5_case

	_0792ca_case:
		mov    %esp,%edi
		mov    $_0c0bb4_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		jmp    _0792e5_case

	_0792d9_case:
		mov    %esp,%edi
		mov    $_0c0bc4_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

	_0792e5_case:
		mov    $_0c0bd8_data,%edx
		mov    %esp,%eax
		call   _07b355_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _079301_jump
		mov    $_0c0bdc_data,%eax
		call   _078c8c_func

	_079301_jump:
		mov    0x000010(%ebp),%eax
		call   _07ae04_func
		mov    _0ded2c_data,%edx
		mov    %eax,%esi
		mov    %eax,0x000174(%esp)
		test   %edx,%edx
		je     _079323_jump
		mov    %edx,%eax
		call   _07b961_func

	_079323_jump:
		mov    %esi,%eax
		call   _07b866_func
		mov    %eax,_0ded2c_data
		test   %eax,%eax
		jne    _07933f_jump
		mov    %ebp,%eax
		call   _07b3eb_func
		jmp    _0793dc_jump

	_07933f_jump:
		xor    %edi,%edi
		cmp    $0x010000,%esi
		jbe    _079377_jump

	_079349_jump:
		mov    $0x010000,%ebx
		mov    _0ded2c_data,%edx
		movswl %di,%eax
		mov    %ebp,%ecx
		shl    $0x000010,%eax
		sub    $0x010000,%esi
		add    %edx,%eax
		mov    $0x000001,%edx
		inc    %edi
		call   _07a2de_func
		cmp    $0x010000,%esi
		ja     _079349_jump

	_079377_jump:
		mov    _0ded2c_data,%edx
		movswl %di,%eax
		mov    %ebp,%ecx
		shl    $0x000010,%eax
		mov    %esi,%ebx
		add    %edx,%eax
		mov    $0x000001,%edx
		call   _07a2de_func
		mov    %ebp,%eax
		call   _07b3eb_func
		orb    $0x000080,0x000128(%esp)
		mov    _0ded2c_data,%eax
		lea    0x000100(%esp),%ebx
		mov    %eax,0x000100(%esp)
		mov    0x000174(%esp),%eax
		mov    %ds,%ecx
		mov    %eax,0x000108(%esp)
		mov    _0ded9c_data,%eax
		mov    %ds,0x000104(%esp)
		call   _07e393_func
		mov    %ax,_0deda4_data

	_0793dc_jump:
		add    $0x000178,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0793e8_func:
		push   %edx

	_0793e9_jump:
		mov    _0deda2_data,%edx
		mov    _0ded9c_data,%eax
		sar    $0x000010,%edx
		call   _07f47f_func
		cmp    $0x000001,%eax
		jne    _0793e9_jump
		mov    _0ded2c_data,%eax
		call   _07b961_func
		pop    %edx
		ret    



_079410_func:
		and    $0x00ffff,%eax
		mov    %eax,_0ded1c_data
		ret    



_07941c_func:
		mov    %eax,_0ded20_data
		ret    



_079424_func:
		mov    %eax,_0ded24_data
		ret    



_07942c_func:
		mov    %eax,_0ded28_data
		ret    



_079434_func:
		mov    %eax,_0ded94_data
		ret    



_0794c0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    %edx,%eax
		je     _079534_jump

	_0794c8_jump:
		mov    (%ebx),%eax
		mov    (%edx),%ecx
		cmp    %eax,%ecx
		jne    _079539_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _079534_jump
		mov    0x000004(%ebx),%eax
		mov    0x000004(%edx),%ecx
		cmp    %eax,%ecx
		jne    _079539_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _079534_jump
		mov    0x000008(%ebx),%eax
		mov    0x000008(%edx),%ecx
		cmp    %eax,%ecx
		jne    _079539_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _079534_jump
		mov    0x00000c(%ebx),%eax
		mov    0x00000c(%edx),%ecx
		cmp    %eax,%ecx
		jne    _079539_jump
		add    $0x000010,%ebx
		add    $0x000010,%edx
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		je     _0794c8_jump

	_079534_jump:
		sub    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_079539_jump:
		cmp    %cl,%al
		jne    _07955a_jump
		cmp    $0x000000,%al
		je     _079534_jump
		cmp    %ch,%ah
		jne    _07955a_jump
		cmp    $0x000000,%ah
		je     _079534_jump
		shr    $0x000010,%eax
		shr    $0x000010,%ecx
		cmp    %cl,%al
		jne    _07955a_jump
		cmp    $0x000000,%al
		je     _079534_jump
		cmp    %ch,%ah

	_07955a_jump:
		sbb    %eax,%eax
		or     $0x000001,%al
		pop    %ecx
		pop    %ebx
		ret    



_079562_func:
		or     %eax,%eax
		jns    _07956f_func
		neg    %eax
		mov    $0x000bff,%edx
		jmp    _079574_jump



_07956f_func:
		mov    $0x0003ff,%edx

	_079574_jump:
		or     %eax,%eax
		je     _07959f_jump
		push   %ecx
		bsr    %eax,%ecx
		mov    %cl,%ch
		mov    $0x00001f,%cl
		sub    %ch,%cl
		shl    %cl,%eax
		add    %eax,%eax
		mov    %ch,%cl
		movzbl %ch,%ecx
		add    %edx,%ecx
		mov    %eax,%edx
		and    $0xfffff000,%edx
		or     %ecx,%edx
		ror    $0x00000c,%edx
		shl    $0x000014,%eax
		pop    %ecx
		ret    

	_07959f_jump:
		sub    %edx,%edx
		ret    



_0795a2_func:
		xor    $0x80000000,%ecx



_0795a8_func:
		or     %ebx,%ebx
		jne    _0795b2_jump
		add    %ecx,%ecx
		je     _0795be_jump
		rcr    %ecx

	_0795b2_jump:
		or     %eax,%eax
		jne    _0795c1_jump
		add    %edx,%edx
		jne    _0795bf_jump
		mov    %ecx,%edx
		mov    %ebx,%eax

	_0795be_jump:
		ret    

	_0795bf_jump:
		rcr    %edx

	_0795c1_jump:
		cmpb   $0x000000,_0bd1d9_data
		je     _0795eb_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		faddl  (%esp)

	_0795d4_jump:
		fstpl  0x000008(%esp)
		add    $0x000008,%esp
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _0795ea_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_0795ea_jump:
		ret    

	_0795eb_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		mov    %ecx,%ebp
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _07962c_jump
		or     $0x100000,%edx

	_07962c_jump:
		or     %cx,%cx
		je     _079637_jump
		or     $0x100000,%esi

	_079637_jump:
		add    %eax,%eax
		adc    %edx,%edx
		add    %ebx,%ebx
		adc    %esi,%esi
		sub    %di,%cx
		je     _079673_jump
		jae    _07964e_jump
		mov    %edi,%ebp
		neg    %cx
		xchg   %eax,%ebx
		xchg   %esi,%edx

	_07964e_jump:
		cmp    $0x000036,%cx
		jbe    _079673_jump
		mov    %esi,%edx
		mov    %ebx,%eax
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		and    $0x800fffff,%edx
		ror    $0x00000d,%ebp
		and    $0x7ff00000,%ebp
		or     %ebp,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_079673_jump:
		or     %ecx,%ecx
		jns    _079684_jump
		neg    %esi
		neg    %ebx
		sbb    $0x000000,%esi
		xor    $0x80000000,%ebp

	_079684_jump:
		sub    %edi,%edi
		cmp    $0x000000,%cl
		je     _0796ae_jump
		push   %ebx
		sub    %ebx,%ebx
		cmp    $0x000020,%cl
		jb     _0796a0_jump
		or     %eax,%eax
		setne  %bl
		mov    %ebx,%edi
		sub    %ebx,%ebx
		mov    %edx,%eax
		sub    %edx,%edx

	_0796a0_jump:
		shrd   %cl,%eax,%ebx
		or     %ebx,%edi
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ebx

	_0796ae_jump:
		add    %ebx,%eax
		adc    %esi,%edx
		jns    _0796d7_jump
		cmp    $0x000035,%cl
		jb     _0796ca_jump
		test   $0x7fffffff,%edi
		setne  %bl
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_0796ca_jump:
		neg    %edx
		neg    %eax
		sbb    $0x000000,%edx
		xor    $0x80000000,%ebp

	_0796d7_jump:
		mov    %eax,%ebx
		or     %edx,%ebx
		je     _079747_jump
		or     %bp,%bp
		je     _07974b_jump

	_0796e2_jump:
		test   $0x7fe00000,%edx
		jne    _0796f4_jump
		dec    %bp
		je     _07974b_jump
		add    %eax,%eax
		adc    %edx,%edx
		jmp    _0796e2_jump

	_0796f4_jump:
		test   $0x400000,%edx
		je     _07970c_jump
		shr    %edx
		rcr    %eax
		adc    $0x000000,%edi
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _079755_jump

	_07970c_jump:
		shr    %edx
		rcr    %eax
		jae    _079736_jump
		or     %edi,%edi
		setne  %bl
		or     %eax,%ebx
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _079736_jump
		shr    %edx
		rcr    %eax
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _079755_jump

	_079736_jump:
		and    $0x0fffff,%edx
		mov    %ebp,%ecx
		shl    $0x000015,%ebp
		add    %ecx,%ecx
		rcr    %ebp
		or     %ebp,%edx

	_079747_jump:
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07974b_jump:
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_079755_jump:
		mov    %ebp,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _07f57b_jump



_07975f_func:
		or     %eax,%eax
		jne    _07976a_jump
		add    %edx,%edx
		jne    _079768_jump
		ret    

	_079768_jump:
		rcr    %edx

	_07976a_jump:
		or     %ebx,%ebx
		jne    _079779_jump
		add    %ecx,%ecx
		jne    _079777_jump
		sub    %eax,%eax
		sub    %edx,%edx
		ret    

	_079777_jump:
		rcr    %ecx

	_079779_jump:
		cmpb   $0x000000,_0bd1d9_data
		je     _079791_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		fmull  (%esp)
		jmp    _0795d4_jump

	_079791_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		jne    _0797da_jump
		inc    %di

	_0797cc_jump:
		dec    %di
		add    %eax,%eax
		adc    %edx,%edx
		test   $0x100000,%edx
		je     _0797cc_jump

	_0797da_jump:
		or     $0x100000,%edx
		or     %cx,%cx
		jne    _0797f5_jump
		inc    %cx

	_0797e7_jump:
		dec    %cx
		add    %ebx,%ebx
		adc    %esi,%esi
		test   $0x100000,%esi
		je     _0797e7_jump

	_0797f5_jump:
		or     $0x100000,%esi
		add    %di,%cx
		sub    $0x0003ff,%cx
		js     _079816_jump
		cmp    $0x0007ff,%cx
		jb     _079816_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _07f57b_jump

	_079816_jump:
		cmp    $0x00ffcb,%cx
		jge    _079824_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _07f56a_jump

	_079824_jump:
		push   %ecx
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		sub    %ebp,%ebp
		push   %esi
		push   %edx
		push   %eax
		mul    %ebx
		xchg   %eax,%esi
		mov    %edx,%ecx
		pop    %edx
		mul    %edx
		mov    %edx,%edi
		add    %eax,%ecx
		adc    %ebp,%edi
		adc    %ebp,%ebp
		pop    %eax
		xchg   %eax,%ebx
		mul    %ebx
		add    %eax,%ecx
		adc    %edx,%edi
		adc    $0x000000,%ebp
		mov    %ebx,%eax
		pop    %edx
		mul    %edx
		add    %edi,%eax
		adc    %ebp,%edx
		sub    %ebx,%ebx
		mov    $0x00000a,%cl
		shrd   %cl,%eax,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ecx

	_079875_jump:
		test   $0x200000,%edx
		je     _07988e_jump
		shr    %edx
		rcr    %eax
		rcr    %ebx
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _0798f2_jump
		jmp    _079875_jump

	_07988e_jump:
		add    %ebx,%ebx
		jae    _0798bc_jump
		jne    _0798a1_jump
		or     %esi,%esi
		setne  %bl
		shr    %ebx
		jb     _0798a1_jump
		mov    %eax,%esi
		shr    %esi

	_0798a1_jump:
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _0798bc_jump
		shr    %edx
		rcr    %eax
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _0798f2_jump

	_0798bc_jump:
		or     %cx,%cx
		jg     _0798d7_jump
		jne    _0798c7_jump
		mov    $0x000001,%cl
		jmp    _0798cc_jump

	_0798c7_jump:
		neg    %cx
		dec    %cx

	_0798cc_jump:
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %cx,%cx

	_0798d7_jump:
		and    $0x0fffff,%edx
		mov    %ecx,%esi
		ror    $0x00000b,%ecx
		add    %esi,%esi
		rcr    %ecx
		and    $0xfff00000,%ecx
		or     %ecx,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_0798f2_jump:
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _07f57b_jump



_0798fc_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		lea    0x000014(%esp),%ebx
		mov    $_0bd1f6_data,%eax
		mov    0x000010(%esp),%edx
		mov    %ebx,(%esp)
		mov    %esp,%ebx
		call   _07f5d4_func
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    



_07991e_func:
		cmpl   $0x000000,_0bd414_data
		je     _07992d_jump
		mov    $0x000001,%eax
		ret    

	_07992d_jump:
		mov    $0x00000b,%ah
		int    $0x000021
		cbtw   
		cwtl   
		ret    



_079935_func:
		push   %edx
		xor    %edx,%edx
		mov    _0bd414_data,%eax
		mov    %edx,_0bd414_data
		test   %eax,%eax
		jne    _079950_jump
		mov    $0x000008,%ah
		int    $0x000021
		and    $0x0000ff,%eax

	_079950_jump:
		pop    %edx
		ret    



_079952_func:
		jmp    _07f68c_jump

	_079957_jump:
		push   %edx
		mov    %eax,%edx
		mov    $0x000041,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    _079972_jump
		and    $0x00ffff,%eax
		call   _07f6d0_func
		pop    %edx
		ret    

	_079972_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_079976_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		mov    $0x000020,%edx
		mov    _0dee28_data,%ebx
		mov    %edx,_0dee28_data
		mov    %ebx,%edx
		shl    $0x000002,%edx

	_079991_jump:
		test   %edx,%edx
		je     _0799a7_jump
		mov    _0deda4_data(%edx),%eax
		sub    $0x000004,%edx
		mov    %eax,(%esp)
		dec    %ebx
		call   *(%esp)
		jmp    _079991_jump

	_0799a7_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    



_0799ad_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_079976_func,%edx
		mov    _0dee28_data,%ecx
		mov    %edx,_0bd1a8_data
		cmp    $0x000020,%ecx
		jge    _0799e0_jump
		mov    %ecx,%eax
		lea    0x000001(%ecx),%edx
		mov    %ebx,_0deda8_data(,%ecx,4)
		mov    %edx,_0dee28_data
		xor    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0799e0_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0799ec_func:
		jmp    _079a66_jump

	_079a60_jump:
		add    %al,(%eax)

	_079a62_jump:
		arpl   %bp,0x00006e(%edi)
	_079a66_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %bh,%bl
		and    $0xfffffffc,%esp
		mov    %esp,%ebx
		mov    %ebx,_0bd408_data
		mov    %ebx,_0bd3f4_data
		mov    $0x000024,%ax
		mov    %ax,_0bd400_data
		mov    $0x50484152,%ebx
		sub    %eax,%eax
		mov    $0x000030,%ah
		int    $0x000021
		mov    %al,_0bd42b_data
		mov    %ah,_0bd42c_data
		mov    %eax,%ecx
		sub    %esi,%esi
		mov    $0x000081,%edi
		shr    $0x000010,%eax
		cmp    $0x004458,%ax
		jne    _079ae8_jump
		sub    $0x000030,%bl
		mov    %bl,%al
		mov    $0x000000,%ah
		push   %eax
		data16 mov _0bd400_data,%es
		mov    %es:0x00005c,%ebx
		add    $0x000fff,%ebx
		and    $0xfffff000,%ebx
		mov    %ebx,_0bd3f4_data
		shr    $0x00000c,%ebx
		mov    %ds,%ax
		mov    %eax,%es
		mov    $0x00004a,%ah
		int    $0x000021
		pop    %eax
		mov    %ds,%bx
		mov    $0x00002c,%cx
		jmp    _079b20_jump

	_079ae8_jump:
		cmp    $0x004243,%ax
		jne    _079b22_jump
		mov    %edx,_0bd198_data
		mov    %edx,%esi
		mov    0x00001c(%esi),%edx
		mov    %esp,%ebx
		sub    %edx,%ebx
		mov    $0x00004a,%ah
		int    $0x000021
		mov    %ds,%bx
		data16 mov %ds,_0bd400_data
		mov    0x000010(%esi),%eax
		add    %eax,%edi
		sub    %esi,%esi
		mov    0x00002c(%eax),%si
		shl    $0x000004,%esi
		mov    %ds,%cx
		mov    $0x000009,%al
		mov    $0x000000,%ah

	_079b20_jump:
		jmp    _079b7b_jump

	_079b22_jump:
		mov    $0x000078,%dx
		mov    $0x00ff00,%ax
		int    $0x000021
		cmp    $0x000000,%al
		je     _079b64_jump
		mov    %gs,%ax
		cmp    $0x000000,%ax
		je     _079b3f_jump
		mov    %ax,_0bd19c_data

	_079b3f_jump:
		mov    $0x000006,%ax
		mov    %ds,%bx
		int    $0x000031
		mov    $0x000001,%al
		mov    $0x000000,%ah
		or     %cx,%dx
		je     _079b53_jump
		mov    $0x000001,%ah

	_079b53_jump:
		data16 mov %es,_0bd400_data
		mov    %es:0x00002c,%cx
		jmp    _079b7b_jump

	_079b64_jump:
		mov    %ds,%dx
		mov    $0x000024,%cx
		mov    %ecx,%ds
		mov    $0x00002c,%cx
		mov    %edx,%ds
		mov    $0x000017,%bx
		mov    $0x000000,%al
		mov    $0x000000,%ah

	_079b7b_jump:
		mov    %al,_0bd422_data
		mov    %ah,_0bd423_data
		mov    %ebx,%es
		data16 mov %ds,%es:_079a60_jump
		mov    %esi,_0bd425_data
		mov    %cx,_0bd429_data
		push   %esi
		data16 mov _0bd400_data,%es
		ds mov $_0dee74_data,%edx
		add    $0x00000f,%edx
		and    $0x0000f0,%dl
		sub    %ecx,%ecx
		mov    %es:-0x000001(%edi),%cl
		cld    
		mov    $0x000020,%al
		repz scas %es:(%edi),%al
		lea    -0x000001(%edi),%esi
		mov    %edx,%edi
		mov    %es,%bx
		mov    %ds,%dx
		mov    %ebx,%ds
		mov    %edx,%es
		je     _079bd0_jump
		inc    %ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_079bd0_jump:
		sub    %al,%al
		stos   %al,%es:(%edi)
		stos   %al,%es:(%edi)
		pop    %esi
		dec    %edi
		push   %edi
		push   %edx
		data16 mov %es:_0bd429_data,%ds
		sub    %ebp,%ebp

	_079be2_jump:
		mov    (%esi),%eax
		or     $0x20202020,%eax
		cmp    $0x37386f6e,%eax
		jne    _079bf7_jump
		cmpb   $0x00003d,0x000004(%esi)
		jne    _079bf7_jump
		inc    %ebp

	_079bf7_jump:
		cmpb   $0x000000,(%esi)
		lods   %ds:(%esi),%al
		jne    _079bf7_jump
		cmpb   $0x000000,(%esi)
		jne    _079be2_jump
		lods   %ds:(%esi),%al
		inc    %esi
		inc    %esi

	_079c05_jump:
		cmpb   $0x000000,(%esi)
		movsb  %ds:(%esi),%es:(%edi)
		jne    _079c05_jump
		pop    %ds
		pop    %esi
		mov    %esp,%ebx
		mov    %bp,_0bd420_data
		mov    %edi,_0bd404_data
		mov    %ebx,_0bd3f0_data
		ds mov $_0dee74_data,%ecx
		ds mov $_0c11ac_data,%edi
		sub    %edi,%ecx
		cmpb   $0x000001,_0bd422_data
		jne    _079c46_jump
		cmp    $0x001000,%ecx
		jbe    _079c46_jump
		mov    $0x001000,%ecx

	_079c46_jump:
		mov    %cl,%dl
		shr    $0x000002,%ecx
		sub    %eax,%eax
		rep stos %eax,%es:(%edi)
		mov    %dl,%cl
		and    $0x000003,%cl
		rep stos %al,%es:(%edi)
		ds mov $_0dee74_data,%eax
		add    $0x00000f,%eax
		and    $0x0000f0,%al
		mov    %eax,_0bd3f8_data
		mov    %esi,_0bd3fc_data
		mov    $0x0000ff,%eax
		call   _07f786_func
		sub    %ebp,%ebp
		call   _07f736_func

	_079c7d_jump:
		jmp    _079ca2_jump



_079c7f_func:
		push   %edx
		push   %eax
		mov    $_079a62_jump,%edx
		mov    $0x003d01,%ax
		int    $0x000021
		mov    %ax,%bx
		pop    %edx
		mov    %edx,%esi
		cld    

	_079c93_jump:
		lods   %ds:(%esi),%al
		cmp    $0x000000,%al
		jne    _079c93_jump
		mov    %esi,%ecx
		sub    %edx,%ecx
		dec    %ecx
		mov    $0x000040,%ah
		int    $0x000021
		pop    %eax

	_079ca2_jump:
		push   %eax
		mov    $0x000000,%eax
		mov    $0x0000ff,%edx
		call   _07f7d1_func
		pop    %eax
		mov    $0x00004c,%ah
		int    $0x000021
		nop



_079cb8_func:
		data16 mov %cs:_079a60_jump,%ds
		ret    



_079cd0_func:
		push   %eax
		push   %ecx
		mov    %dl,%dh
		shl    $0x000008,%edx
		mov    %dh,%dl
		shl    $0x000008,%edx
		mov    %dh,%dl
		mov    %ebx,%ecx
		call   _07f9f0_func
		pop    %ecx
		pop    %eax
		ret    



_079ce8_func:
		push   %ebx
		push   %ecx
		mov    %dl,%bl
		mov    (%eax),%edx
		lea    0x000001(%edx),%ecx
		mov    %ecx,(%eax)
		mov    %bl,(%edx)
		incl   0x000010(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_079cfb_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		lea    0x00001c(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    %esp,%ebx
		mov    $_079ce8_func,%ecx
		mov    %eax,(%esp)
		mov    0x000014(%esp),%eax
		call   _07fa93_func
		mov    0x000014(%esp),%edx
		movb   $0x000000,(%edx,%eax,1)
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079d2b_jump:
		ret    



_079d2c_func:
		push   %edx
		mov    %eax,%edx
		call   *_0bd1a8_data
		call   *_0bd1ac_data
		mov    %edx,%eax
		call   _079d44_func
		pop    %edx
		ret    



_079d44_func:
		push   %edx
		mov    %eax,%edx
		call   *_0bd1ac_data
		call   *_0bd1b0_data
		mov    %edx,%eax
		jmp    _079c7d_jump



_079d5a_func:
		or     %ebx,%ebx
		jne    _079d69_jump
		add    %ecx,%ecx
		jne    _079d67_jump
		jmp    _07f56f_jump

	_079d67_jump:
		rcr    %ecx

	_079d69_jump:
		or     %eax,%eax
		jne    _079d74_jump
		add    %edx,%edx
		jne    _079d72_jump
		ret    

	_079d72_jump:
		rcr    %edx

	_079d74_jump:
		cmpb   $0x000000,_0bd1d9_data
		je     _079d9e_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		fdivl  (%esp)
		fstpl  0x000008(%esp)
		add    $0x000008,%esp
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _079d9d_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_079d9d_jump:
		ret    

	_079d9e_jump:
		push   %ebp
		mov    %esp,%ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %cx,%di
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _079de1_jump
		or     $0x100000,%edx
		jmp    _079def_jump

	_079de1_jump:
		add    %eax,%eax
		adc    %edx,%edx
		dec    %di
		test   $0x100000,%edx
		je     _079de1_jump

	_079def_jump:
		or     %cx,%cx
		je     _079dfc_jump
		or     $0x100000,%esi
		jmp    _079e0a_jump

	_079dfc_jump:
		add    %ebx,%ebx
		adc    %esi,%esi
		dec    %cx
		test   $0x100000,%esi
		je     _079dfc_jump

	_079e0a_jump:
		sub    %cx,%di
		add    $0x0003ff,%di
		js     _079e25_jump
		cmp    $0x0007ff,%di
		jb     _079e25_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _07f57b_jump

	_079e25_jump:
		cmp    $0x00ffcc,%di
		jge    _079e33_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _07f56a_jump

	_079e33_jump:
		push   %edi
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		push   %esi
		push   %ebx
		mov    %esi,%ecx
		mov    %edx,%edi
		mov    %eax,%esi
		sub    %eax,%eax
		cmp    %edx,%ecx
		ja     _079e5e_jump
		sub    %ecx,%edx
		inc    %eax

	_079e5e_jump:
		push   %eax
		mov    %esi,%eax
		div    %ecx
		push   %eax
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		mov    -0x000014(%ebp),%ebx
		testb  $0x000001,-0x000018(%ebp)
		je     _079e7f_jump
		add    %ebx,%eax
		adc    -0x000010(%ebp),%edx

	_079e7f_jump:
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _079e99_jump

	_079e87_jump:
		subl   $0x000001,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    %ebx,%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _079e87_jump

	_079e99_jump:
		mov    %esi,%edi
		mov    %ecx,%esi
		mov    -0x000010(%ebp),%ecx
		cmp    %edi,%ecx
		ja     _079eae_jump
		sub    %ecx,%edi
		addl   $0x000001,-0x00001c(%ebp)
		adcl   $0x000000,-0x000018(%ebp)

	_079eae_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		div    %ecx
		push   %eax
		or     %eax,%eax
		je     _079ee5_jump
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _079ee5_jump

	_079ece_jump:
		subl   $0x000001,-0x000020(%ebp)
		sbbl   $0x000000,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    -0x000014(%ebp),%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _079ece_jump

	_079ee5_jump:
		pop    %eax
		pop    %edx
		pop    %ebx
		add    $0x000008,%esp
		pop    %edi
		dec    %di
		shr    %ebx
		jae    _079ef7_jump
		rcr    %edx
		rcr    %eax
		inc    %edi

	_079ef7_jump:
		sub    %esi,%esi
		mov    $0x00000b,%cl
		shrd   %cl,%edx,%eax
		rcr    %esi
		shrd   %cl,%esi,%edx
		or     $0xfff00000,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		adc    $0x000000,%edi
		or     %di,%di
		jg     _079f36_jump
		jne    _079f1f_jump
		mov    $0x000001,%cl
		jmp    _079f25_jump

	_079f1f_jump:
		neg    %di
		mov    %di,%cx

	_079f25_jump:
		and    $0x1fffff,%edx
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %di,%di

	_079f36_jump:
		and    $0x0fffff,%edx
		mov    %edi,%esi
		ror    $0x00000b,%edi
		add    %esi,%esi
		rcr    %edi
		and    $0xfff00000,%edi
		or     %edi,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    



_079f51_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000038,%esp
		mov    %eax,-0x000044(%ebp)
		mov    %edx,-0x000040(%ebp)
		mov    %ebx,%esi
		lea    -0x00002c(%ebp),%ebx
		call   _08048d_func
		cmpl   $0x000020,-0x00002c(%ebp)
		jl     _079f87_jump
		mov    _0c1008_data(,%esi,4),%eax
		lea    -0x000044(%ebp),%edx
		or     $0x000024,%ah
		call   _0804e0_func
		jmp    _07a17f_jump

	_079f87_jump:
		lea    -0x00003c(%ebp),%eax
		push   %eax
		lea    -0x000020(%ebp),%eax
		push   %eax
		push   $0x3fe921fb
		push   $0x54442d18
		mov    -0x000040(%ebp),%ebx
		push   %ebx
		mov    -0x000044(%ebp),%ecx
		push   %ecx
		call   _0805d0_func
		mov    %esi,%eax
		mov    -0x000020(%ebp),%edx
		and    $0x000002,%eax
		add    %edx,%eax
		and    $0x000007,%eax
		mov    %eax,-0x000020(%ebp)
		testb  $0x000001,-0x000020(%ebp)
		je     _079fd7_jump
		mov    $0x54442d18,%eax
		mov    $0x3fe921fb,%edx
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000038(%ebp),%ecx
		call   _0795a2_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_079fd7_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		lea    -0x00001c(%ebp),%ebx
		call   _08048d_func
		mov    -0x00001c(%ebp),%ebx
		cmp    $0xffffffe6,%ebx
		jge    _07a008_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edi
		xor    %ecx,%ecx
		mov    %eax,-0x000024(%ebp)
		mov    $0x3ff00000,%eax
		mov    %ecx,-0x000028(%ebp)
		mov    %eax,-0x000010(%ebp)
		jmp    _07a0ab_jump

	_07a008_jump:
		test   %ebx,%ebx
		jle    _07a011_jump
		xor    %eax,%eax
		mov    %eax,-0x00001c(%ebp)

	_07a011_jump:
		mov    -0x00001c(%ebp),%edx
		neg    %edx
		mov    %edx,-0x00001c(%ebp)
		cmp    $0x000008,%edx
		jle    _07a025_jump
		movl   $0x000008,-0x00001c(%ebp)

	_07a025_jump:
		mov    -0x00001c(%ebp),%eax
		mov    _0c0fe4_data(,%eax,4),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    -0x000020(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		jne    _07a03f_jump
		cmp    $0x000001,%esi
		jne    _07a07b_jump

	_07a03f_jump:
		mov    $0x000008,%eax
		mov    -0x00001c(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,-0x000014(%ebp)
		mov    %edx,%eax
		mov    $_0c0f9c_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    -0x00003c(%ebp),%eax
		mov    %edx,-0x000018(%ebp)
		mov    -0x000038(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07975f_func
		mov    -0x000018(%ebp),%ebx
		mov    -0x000014(%ebp),%ecx
		call   _0806c9_func
		mov    %eax,-0x000028(%ebp)
		mov    %edx,-0x000010(%ebp)

	_07a07b_jump:
		mov    -0x000020(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _07a088_jump
		cmp    $0x000001,%esi
		jne    _07a0ab_jump

	_07a088_jump:
		mov    $0x000008,%ecx
		mov    -0x00001c(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		sub    %ebx,%ecx
		shl    $0x000003,%ebx
		mov    -0x000038(%ebp),%edx
		add    $_0c0f54_data,%ebx
		call   _0806fe_func
		mov    %eax,-0x000024(%ebp)
		mov    %edx,%edi

	_07a0ab_jump:
		mov    -0x000020(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _07a0c1_jump
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x000034(%ebp)
		mov    -0x000010(%ebp),%eax
		mov    %eax,-0x000030(%ebp)
		jmp    _07a0ca_jump

	_07a0c1_jump:
		mov    -0x000024(%ebp),%eax
		mov    %edi,-0x000030(%ebp)
		mov    %eax,-0x000034(%ebp)

	_07a0ca_jump:
		testb  $0x000004,-0x000020(%ebp)
		je     _07a0e1_jump
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _07a208_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07a0e1_jump:
		cmp    $0x000001,%esi
		jne    _07a15c_jump
		mov    -0x000020(%ebp),%edx
		mov    -0x000020(%ebp),%eax
		add    $0x000002,%edx
		add    $0x000003,%eax
		mov    %edx,-0x000020(%ebp)
		test   $0x000002,%al
		je     _07a105_jump
		mov    -0x000028(%ebp),%ebx
		mov    -0x000010(%ebp),%ecx
		jmp    _07a10a_jump

	_07a105_jump:
		mov    -0x000024(%ebp),%ebx
		mov    %edi,%ecx

	_07a10a_jump:
		testb  $0x000004,-0x000020(%ebp)
		je     _07a11d_jump
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _07a208_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_07a11d_jump:
		test   %ecx,%ecx
		jne    _07a14b_jump
		call   _080745_func
		cmpl   $0x000000,-0x000030(%ebp)
		jle    _07a139_jump
		mov    _0c1034_data,%eax
		mov    _0c1038_data,%edx
		jmp    _07a17f_jump

	_07a139_jump:
		mov    _0c1034_data,%eax
		mov    _0c1038_data,%edx
		call   _07a208_func
		jmp    _07a17f_jump

	_07a14b_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _079d5a_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07a15c_jump:
		cmpl   $0x00001c,-0x00002c(%ebp)
		jl     _07a179_jump
		lea    -0x000044(%ebp),%edx
		mov    _0c1008_data(,%esi,4),%eax
		lea    -0x000034(%ebp),%ebx
		or     $0x000002,%ah
		call   _0804ea_func
		jmp    _07a17f_jump

	_07a179_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx

	_07a17f_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_07a199_func:
		push   %ebx
		cmpb   $0x000000,_0bd1d9_data
		je     _07a1aa_jump
		call   _080825_func
		pop    %ebx
		ret    

	_07a1aa_jump:
		xor    %ebx,%ebx
		call   _079f51_func
		pop    %ebx
		ret    



_07a1c0_func:
		push   %ebx
		cmpb   $0x000000,_0bd1d9_data
		je     _07a1d1_jump
		call   _08081c_func
		pop    %ebx
		ret    

	_07a1d1_jump:
		mov    $0x000002,%ebx
		call   _079f51_func
		pop    %ebx
		ret    



_07a208_func:
		test   %edx,%edx
		je     _07a212_jump
		xor    $0x80000000,%edx

	_07a212_jump:
		ret    



_07a21c_func:
		mov    $0x00001f,%al
		jmp    _07a222_jump



_07a220_func:
		mov    $0x000020,%al

	_07a222_jump:
		add    %edx,%edx
		rcr    %ah
		shr    %ah
		or     %al,%ah
		shr    %edx
		push   %ecx
		mov    %edx,%ecx
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		sub    $0x0003fe,%cx
		jl     _07a291_jump
		cmp    $0x000020,%cx
		jg     _07a28a_jump
		and    $0x00003f,%al
		cmp    %al,%cl
		jg     _07a28a_jump
		mov    %ah,%ch
		and    $0x0fffff,%edx
		and    $0xfff00000,%eax
		or     %eax,%edx
		rol    $0x00000c,%edx
		stc    
		rcr    %edx
		rcr    %ch
		cmp    $0x000020,%cl
		jne    _07a26c_jump
		mov    %edx,%eax
		add    %ch,%ch
		jmp    _07a277_jump

	_07a26c_jump:
		sub    %eax,%eax
		shld   %cl,%edx,%eax
		shl    %cl,%edx
		add    %ch,%ch
		add    %edx,%edx

	_07a277_jump:
		mov    $0x0000ff,%cl
		rcr    %cl
		and    %cl,%ch
		add    %ch,%ch
		adc    $0x000000,%eax
		add    %ch,%ch
		jae    _07a288_jump
		neg    %eax

	_07a288_jump:
		pop    %ecx
		ret    

	_07a28a_jump:
		mov    $0x80000000,%eax
		pop    %ecx
		ret    

	_07a291_jump:
		sub    %eax,%eax
		pop    %ecx
		ret    



_07a296_func:
		data16 mov %ss,_0bd1b4_data
		ret    



_07a29e_func:
		xchg   %eax,0x000004(%esp)
		call   _07a2b1_func
		mov    0x000004(%esp),%eax
		ret    $0x000004



_07a2b1_func:
		cmp    %esp,%eax
		jae    _07a2c2_jump
		sub    %esp,%eax
		neg    %eax
		cmp    _0bd404_data,%eax
		jbe    _07a2c2_jump
		ret    

	_07a2c2_jump:
		mov    %ss,%ax
		cmp    _0bd1b4_data,%ax
		je     _07a2cf_jump
		ret    

	_07a2cf_jump:
		mov    $_0bd1b6_data,%eax
		mov    $0x000001,%edx
		call   _080929_func



_07a2de_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		push   %eax
		push   %edx
		mov    %ecx,%ebp
		testb  $0x000001,0x00000c(%ecx)
		jne    _07a308_jump
		mov    $0x000004,%eax
		call   _080739_func
		mov    0x00000c(%ecx),%dh
		or     $0x000020,%dh
		xor    %eax,%eax
		mov    %dh,0x00000c(%ecx)
		jmp    _07a4a1_jump

	_07a308_jump:
		imul   %edx,%ebx
		test   %ebx,%ebx
		jne    _07a316_jump
		mov    %ebx,%eax
		jmp    _07a4a1_jump

	_07a316_jump:
		cmpl   $0x000000,0x000008(%ecx)
		jne    _07a323_jump
		mov    %ebp,%eax
		call   _080946_func

	_07a323_jump:
		xor    %esi,%esi
		mov    0x00000c(%ebp),%dl
		mov    %esi,0x00000c(%esp)
		test   $0x000040,%dl
		je     _07a422_jump
		mov    %ebx,0x000008(%esp)

	_07a339_jump:
		mov    0x000004(%ebp),%edx
		test   %edx,%edx
		je     _07a394_jump
		mov    0x000008(%esp),%ebx
		cmp    %ebx,%edx
		jbe    _07a34a_jump
		mov    %ebx,%edx

	_07a34a_jump:
		mov    0x000004(%esp),%edi
		mov    %edx,%ecx
		mov    0x000000(%ebp),%esi
		mov    0x00000c(%esp),%ebx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x000008(%esp),%eax
		mov    0x000000(%ebp),%ecx
		lea    (%edi,%edx,1),%esi
		add    %edx,%ebx
		mov    %esi,0x000004(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    0x000004(%ebp),%edi
		add    %edx,%ecx
		sub    %edx,%eax
		sub    %edx,%edi
		mov    %ecx,0x000000(%ebp)
		mov    %eax,0x000008(%esp)
		mov    %edi,0x000004(%ebp)

	_07a394_jump:
		mov    0x000008(%esp),%ecx
		test   %ecx,%ecx
		je     _07a496_jump
		cmp    0x000014(%ebp),%ecx
		jae    _07a3ab_jump
		testb  $0x000004,0x00000d(%ebp)
		je     _07a40e_jump

	_07a3ab_jump:
		mov    0x00000d(%ebp),%cl
		mov    0x000008(%esp),%ebx
		test   $0x000004,%cl
		jne    _07a3c4_jump
		cmp    $0x000200,%ebx
		jbe    _07a3c4_jump
		and    $0x0000fe,%bh
		xor    %bl,%bl

	_07a3c4_jump:
		mov    0x000004(%esp),%edx
		mov    0x000010(%ebp),%eax
		call   _0809bd_func
		cmp    $0xffffffff,%eax
		jne    _07a3de_jump
		orb    $0x000020,0x00000c(%ebp)
		jmp    _07a496_jump

	_07a3de_jump:
		test   %eax,%eax
		jne    _07a3eb_jump

	_07a3e2_jump:
		orb    $0x000010,0x00000c(%ebp)
		jmp    _07a496_jump

	_07a3eb_jump:
		mov    0x000004(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		add    %eax,%edx
		sub    %eax,%ebx
		add    %eax,%ecx
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		mov    %ecx,0x00000c(%esp)
		jmp    _07a339_jump

	_07a40e_jump:
		mov    %ebp,%eax
		call   _07a885_func
		test   %eax,%eax
		je     _07a496_jump
		jmp    _07a339_jump

	_07a422_jump:
		mov    0x000004(%esp),%edx
		add    %edx,%ebx

	_07a428_jump:
		cmpl   $0x000000,0x000004(%ebp)
		jne    _07a439_jump
		mov    %ebp,%eax
		call   _07a885_func
		test   %eax,%eax
		je     _07a496_jump

	_07a439_jump:
		mov    0x000004(%ebp),%ecx
		mov    0x000000(%ebp),%eax
		dec    %ecx
		lea    0x000001(%eax),%esi
		mov    %ecx,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x00000d,%eax
		jne    _07a47d_jump
		cmpl   $0x000000,0x000004(%ebp)
		jne    _07a466_jump
		mov    %ebp,%eax
		call   _07a885_func
		test   %eax,%eax
		je     _07a496_jump

	_07a466_jump:
		mov    0x000004(%ebp),%edi
		mov    0x000000(%ebp),%eax
		dec    %edi
		lea    0x000001(%eax),%esi
		mov    %edi,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax

	_07a47d_jump:
		cmp    $0x00001a,%eax
		je     _07a3e2_jump
		mov    %al,(%edx)
		mov    0x00000c(%esp),%eax
		inc    %eax
		inc    %edx
		mov    %eax,0x00000c(%esp)
		cmp    %ebx,%edx
		jne    _07a428_jump

	_07a496_jump:
		mov    0x00000c(%esp),%eax
		mov    (%esp),%esi
		xor    %edx,%edx
		div    %esi

	_07a4a1_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_07a4a8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		andb   $0x0000ef,0x00000c(%edx)
		cmp    0x000004(%edx),%eax
		jg     _07a4d4_jump
		mov    0x000008(%edx),%ebx
		mov    (%edx),%ecx
		sub    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _07a4d4_jump
		mov    0x000004(%edx),%edi
		lea    (%ecx,%eax,1),%esi
		sub    %eax,%edi
		mov    %esi,(%edx)
		xor    %eax,%eax
		mov    %edi,0x000004(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07a4d4_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07a4ea_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%esi
		testb  $0x000006,0x00000c(%eax)
		je     _07a552_jump
		testb  $0x000010,0x00000d(%ecx)
		je     _07a523_jump
		mov    %ecx,%eax
		call   _0809dc_func
		test   %eax,%eax
		je     _07a537_jump
		test   %ebx,%ebx
		jne    _07a51a_jump
		test   %esi,%esi
		jge    _07a51a_jump

	_07a510_jump:
		mov    $0x000009,%eax
		call   _080739_func

	_07a51a_jump:
		mov    $0xffffffff,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07a523_jump:
		cmp    $0x000001,%ebx
		jne    _07a52b_jump
		sub    0x000004(%ecx),%esi

	_07a52b_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)

	_07a537_jump:
		andb   $0x0000eb,0x00000c(%ecx)
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _07b9ff_func
		cmp    $0xffffffff,%eax
		jne    _07a5e0_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07a552_jump:
		cmp    $0x000001,%ebx
		jb     _07a560_jump
		jbe    _07a566_jump
		cmp    $0x000002,%ebx
		je     _07a5bc_jump
		jmp    _07a510_jump

	_07a560_jump:
		test   %ebx,%ebx
		je     _07a58b_jump
		jmp    _07a510_jump

	_07a566_jump:
		mov    %edx,%eax
		mov    %ecx,%edx
		mov    0x000004(%ecx),%edi
		call   _07a4a8_func
		test   %eax,%eax
		je     _07a5e0_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		sub    %edi,%edx
		call   _07b9ff_func
		cmp    $0xffffffff,%eax
		jne    _07a5e0_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07a58b_jump:
		mov    0x000010(%ecx),%eax
		call   _080a9b_func
		mov    0x000004(%ecx),%edx
		mov    %esi,%edi
		sub    %edx,%eax
		sub    %eax,%edi
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _07a4a8_func
		test   %eax,%eax
		je     _07a5e0_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _07b9ff_func
		cmp    $0xffffffff,%eax
		jne    _07a5e0_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07a5bc_jump:
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%dl
		mov    %eax,(%ecx)
		and    $0x0000ef,%dl
		mov    0x000010(%ecx),%eax
		mov    %dl,0x00000c(%ecx)
		mov    %esi,%edx
		movl   $0x000000,0x000004(%ecx)
		call   _07b9ff_func
		cmp    $0xffffffff,%eax
		je     _07a5e2_jump

	_07a5e0_jump:
		xor    %eax,%eax

	_07a5e2_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07a885_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpl   $0x000000,0x000008(%eax)
		jne    _07a896_jump
		call   _080946_func

	_07a896_jump:
		mov    0x00000d(%ecx),%ah
		test   $0x000020,%ah
		je     _07a8ad_jump
		test   $0x000006,%ah
		je     _07a8ad_jump
		mov    $0x002000,%eax
		call   _080c82_func

	_07a8ad_jump:
		mov    0x00000c(%ecx),%edx
		mov    0x00000c(%ecx),%bl
		mov    0x000008(%ecx),%eax
		and    $0x0000fb,%bl
		mov    %eax,(%ecx)
		and    $0x002400,%edx
		mov    %bl,0x00000c(%ecx)
		cmp    $0x002400,%edx
		jne    _07a8ed_jump
		mov    0x000010(%ecx),%ebx
		test   %ebx,%ebx
		jne    _07a8ed_jump
		mov    %ebx,0x000004(%ecx)
		call   _07af59_func
		cmp    $0xffffffff,%eax
		je     _07a90a_jump
		mov    (%ecx),%ebx
		mov    %al,(%ebx)
		movl   $0x000001,0x000004(%ecx)
		jmp    _07a90a_jump

	_07a8ed_jump:
		testb  $0x000004,0x00000d(%ecx)
		je     _07a8fa_jump
		mov    $0x000001,%ebx
		jmp    _07a8fd_jump

	_07a8fa_jump:
		mov    0x000014(%ecx),%ebx

	_07a8fd_jump:
		mov    (%ecx),%edx
		mov    0x000010(%ecx),%eax
		call   _0809bd_func
		mov    %eax,0x000004(%ecx)

	_07a90a_jump:
		mov    0x000004(%ecx),%esi
		test   %esi,%esi
		jg     _07a928_jump
		jne    _07a919_jump
		orb    $0x000010,0x00000c(%ecx)
		jmp    _07a928_jump

	_07a919_jump:
		mov    0x00000c(%ecx),%al
		movl   $0x000000,0x000004(%ecx)
		or     $0x000020,%al
		mov    %al,0x00000c(%ecx)

	_07a928_jump:
		mov    0x000004(%ecx),%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a930_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		testb  $0x000002,0x00000c(%edx)
		jne    _07a955_jump
		mov    $0x000004,%eax
		call   _080739_func
		orb    $0x000020,0x00000c(%edx)

	_07a94b_jump:
		mov    $0xffffffff,%eax
		jmp    _07a9ce_jump

	_07a955_jump:
		cmpl   $0x000000,0x000008(%edx)
		jne    _07a962_jump
		mov    %edx,%eax
		call   _080946_func

	_07a962_jump:
		mov    $0x000400,%ecx
		cmp    $0x00000a,%ebx
		jne    _07a99f_jump
		mov    0x00000c(%edx),%al
		mov    $0x000600,%ecx
		test   $0x000040,%al
		jne    _07a99f_jump
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		movb   $0x00000d,(%eax)
		mov    (%edx),%esi
		inc    %esi
		mov    0x000004(%edx),%edi
		mov    %esi,(%edx)
		inc    %edi
		mov    0x000014(%edx),%ebp
		mov    %edi,0x000004(%edx)
		cmp    %ebp,%edi
		jne    _07a99f_jump
		mov    %edx,%eax
		call   _0809dc_func
		test   %eax,%eax
		jne    _07a94b_jump

	_07a99f_jump:
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		mov    %bl,(%eax)
		mov    (%edx),%eax
		inc    %eax
		mov    0x000004(%edx),%esi
		mov    %eax,(%edx)
		inc    %esi
		mov    0x00000c(%edx),%edi
		mov    %esi,0x000004(%edx)
		test   %edi,%ecx
		jne    _07a9bf_jump
		cmp    0x000014(%edx),%esi
		jne    _07a9ca_jump

	_07a9bf_jump:
		mov    %edx,%eax
		call   _0809dc_func
		test   %eax,%eax
		jne    _07a94b_jump

	_07a9ca_jump:
		xor    %eax,%eax
		mov    %bl,%al

	_07a9ce_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

.data

_07a9eb_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_07aa10_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000001(%esp),%ecx
		mov    %dl,(%esp)

	_07aa26_jump:
		lea    0x000024(%esp),%ebx
		mov    %edi,0x000024(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %eax,(%ebx)
		mov    %cs:_07a9eb_data(%edx),%al
		mov    %al,(%ecx)
		mov    0x000024(%esp),%eax
		inc    %ecx
		test   %eax,%eax
		jne    _07aa26_jump

	_07aa46_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _07aa46_jump
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07aa5a_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _07aa6c_jump
		test   %eax,%eax
		jge    _07aa6c_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_07aa6c_jump:
		call   _07aa10_func
		mov    %ecx,%eax
		pop    %ecx
		ret    

.data

_07aa75_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_07aa9a_func:
		push   %ecx
		push   %esi
		push   %ebp
		sub    $0x000028,%esp
		push   %edx
		mov    %ebx,%ebp
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000005(%esp),%ecx
		mov    %dl,0x000004(%esp)

	_07aaaf_jump:
		lea    0x000028(%esp),%ebx
		mov    %ebp,0x000028(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %edx,(%ebx)
		mov    0x000028(%esp),%edx
		mov    %cs:_07aa75_data(%edx),%dl
		mov    %dl,(%ecx)
		inc    %ecx
		test   %eax,%eax
		jne    _07aaaf_jump

	_07aacf_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _07aacf_jump
		mov    (%esp),%eax
		add    $0x00002c,%esp
		pop    %ebp
		pop    %esi
		pop    %ecx
		ret    



_07aae3_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _07aaf5_jump
		test   %eax,%eax
		jge    _07aaf5_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_07aaf5_jump:
		call   _07aa9a_func
		mov    %ecx,%eax
		pop    %ecx
		ret    



_07aafe_func:
		jmp    _079957_jump



_07ab04_func:
		mov    %eax,%ecx
		mov    %edx,%eax
		mov    %ebp,%esp
		xchg   %ecx,0x000028(%ebp)
		xchg   %eax,0x00002c(%ebp)
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		pop    %ebp
		pop    %ebx
		pop    %ebx
		pop    %edx
		lret   



_07ab1d_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    _0bd422_data,%ah
		cmp    $0x000002,%ah
		jb     _07ab3a_jump
		cmp    $0x000008,%ah
		ja     _07ab3a_jump
		mov    $0x002502,%eax
		mov    %bl,%cl
		jmp    _07ab46_jump

	_07ab3a_jump:
		mov    %ebx,%eax
		and    $0x0000ff,%eax
		xor    %cl,%cl
		or     $0x000035,%ah

	_07ab46_jump:
		push   %es
		int    $0x000021
		mov    %es,%edx
		pop    %es
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_07ab51_func:
		push   %edx
		mov    %ebx,%edx
		mov    _0bd422_data,%bl
		cmp    $0x000002,%bl
		jb     _07ab72_jump
		cmp    $0x000008,%bl
		ja     _07ab72_jump
		push   %ds
		mov    %ecx,%ds
		mov    %al,%cl
		mov    $0x000004,%al
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    

	_07ab72_jump:
		push   %ds
		mov    %ecx,%ds
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    



_07ab7c_func:
		mov    $_0bd1c8_data,%eax
		ret    



_07ab82_func:
		push   %edx
		call   _07ab7c_func
		test   %eax,%eax
		je     _07aba4_jump
		imul   $0x41c64e6d,(%eax),%edx
		add    $0x003039,%edx
		mov    %edx,(%eax)
		mov    %edx,%eax
		shr    $0x000010,%eax
		and    $0x007fff,%eax

	_07aba4_jump:
		pop    %edx
		ret    



_07aba6_func:
		push   %edx
		mov    %eax,%edx
		call   _07ab7c_func
		test   %eax,%eax
		je     _07abb4_jump
		mov    %edx,(%eax)

	_07abb4_jump:
		pop    %edx
		ret    



_07abb6_func:
		push   %ebx
		push   %edx
		lea    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		push   %eax
		push   $0x000000
		mov    0x000018(%esp),%edx
		push   %edx
		mov    0x000018(%esp),%ebx
		push   %ebx
		call   _07abda_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ebx
		ret    



_07abda_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    0x000024(%esp),%esi

	_07abe6_jump:
		cmpb   $0x000020,(%esi)
		jne    _07abee_jump
		inc    %esi
		jmp    _07abe6_jump

	_07abee_jump:
		mov    0x000028(%esp),%eax
		and    $0x000083,%eax
		mov    %eax,(%esp)
		mov    0x00002c(%esp),%dl
		mov    (%esp),%al
		or     %dl,%al
		mov    %esi,%edx
		mov    $0xffffffff,%edi
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jl     _07ac21_jump
		xor    %edi,%edi
		mov    0x000004(%esp),%di

	_07ac21_jump:
		mov    0x000028(%esp),%dh
		test   $0x000003,%dh
		je     _07ac9b_jump
		cmp    $0xffffffff,%edi
		je     _07ac9b_jump
		mov    %edi,%eax
		call   _080cb1_func
		test   %eax,%eax
		jne    _07ac9b_jump
		testb  $0x000004,0x000029(%esp)
		je     _07ac63_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    $0x000007,%eax
		call   _080739_func
		mov    $0xffffffff,%eax
		jmp    _07ad96_jump

	_07ac63_jump:
		test   $0x000040,%dh
		je     _07ac9b_jump
		lea    0x000008(%esp),%edx
		mov    %edi,%ebx
		xor    %ecx,%ecx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jge    _07ac9b_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax

	_07ac8a_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%ax
		call   _07f6d0_func
		jmp    _07ad96_jump

	_07ac9b_jump:
		cmp    $0xffffffff,%edi
		jne    _07ad29_jump
		testb  $0x000020,0x000028(%esp)
		je     _07ac8a_jump
		cmpw   $0x000002,0x000004(%esp)
		jne    _07ac8a_jump
		lea    0x000030(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		test   %eax,%eax
		jne    _07acc6_jump
		mov    $0x000180,%eax

	_07acc6_jump:
		xor    _0bd4a4_data,%eax
		xor    %ecx,%ecx
		test   $0x000080,%al
		jne    _07acd7_jump
		mov    $0x000001,%ecx

	_07acd7_jump:
		mov    %esi,%edx
		and    $0x0000ff,%ecx
		mov    $0x00003c,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jl     _07ac8a_jump
		mov    0x000004(%esp),%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jl     _07ac8a_jump
		mov    (%esp),%al
		mov    0x00002c(%esp),%ch
		mov    %esi,%edx
		or     %ch,%al
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jl     _07ac8a_jump
		xor    %edi,%edi
		mov    0x000004(%esp),%di

	_07ad29_jump:
		mov    %edi,%eax
		call   _080ccf_func
		and    $0x00003c,%al
		mov    %eax,%edx
		mov    %edi,%eax
		call   _080cb1_func
		test   %eax,%eax
		je     _07ad42_jump
		or     $0x000020,%dh

	_07ad42_jump:
		andb   $0x00007f,(%esp)
		cmpl   $0x000002,(%esp)
		jne    _07ad4f_jump
		or     $0x000003,%dl

	_07ad4f_jump:
		cmpl   $0x000000,(%esp)
		jne    _07ad58_jump
		or     $0x000001,%dl

	_07ad58_jump:
		cmpl   $0x000001,(%esp)
		jne    _07ad61_jump
		or     $0x000002,%dl

	_07ad61_jump:
		testb  $0x000010,0x000028(%esp)
		je     _07ad6b_jump
		or     $0x000080,%dl

	_07ad6b_jump:
		mov    %edx,%eax
		mov    0x000029(%esp),%bl
		or     $0x000040,%al
		test   $0x000003,%bl
		je     _07ad7f_jump
		test   $0x000002,%bl
		je     _07ad8d_jump
		jmp    _07ad8b_jump

	_07ad7f_jump:
		cmpl   $0x000200,_0bd3e5_data
		jne    _07ad8d_jump

	_07ad8b_jump:
		mov    %eax,%edx

	_07ad8d_jump:
		mov    %edi,%eax
		call   _080d24_func
		mov    %edi,%eax

	_07ad96_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ae04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _07b9ff_func
		mov    %eax,%esi
		cmp    $0xffffffff,%eax
		je     _07ae3b_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07b9ff_func
		mov    %eax,%edi
		mov    %esi,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   _07b9ff_func
		mov    %edi,%eax

	_07ae3b_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ae41_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,%ecx
		call   _080ccf_func
		mov    %eax,%edx
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jne    _07ae70_jump
		mov    $0x000004,%eax

	_07ae61_jump:
		call   _080739_func
		mov    $0xffffffff,%eax
		jmp    _07af4c_jump

	_07ae70_jump:
		test   $0x000001,%al
		jne    _07ae7b_jump
		mov    $0x000006,%eax
		jmp    _07ae61_jump

	_07ae7b_jump:
		test   $0x000040,%al
		je     _07aea9_jump
		mov    (%esp),%ebx
		mov    %ebp,%edx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,0x000008(%esp)
		test   %eax,%eax
		jge    _07af48_jump
		xor    %eax,%eax
		mov    %si,%ax

	_07ae9f_jump:
		call   _07f6d0_func
		jmp    _07af4c_jump

	_07aea9_jump:
		xor    %eax,%edx
		mov    %ebx,0x000004(%esp)
		mov    %edx,0x000008(%esp)

	_07aeb3_jump:
		mov    (%esp),%ebx
		mov    0x000004(%esp),%ecx
		mov    %ebp,%edx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%ebx
		mov    %eax,%esi
		mov    %eax,0x000010(%esp)
		test   %eax,%eax
		jge    _07aed7_jump
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    _07ae9f_jump

	_07aed7_jump:
		je     _07af48_jump
		mov    0x000008(%esp),%esi
		mov    %ebp,%eax
		xor    %edi,%edi
		lea    (%ebx,%ebp,1),%ecx
		xor    %edx,%edx
		mov    %ecx,0x000014(%esp)
		jmp    _07af21_jump

	_07aef0_jump:
		mov    (%eax),%bl
		cmp    $0x00001a,%bl
		jne    _07af11_jump
		mov    0x000010(%esp),%ebp
		mov    %edi,%edx
		mov    (%esp),%eax
		sub    %ebp,%edx
		mov    $0x000001,%ebx
		inc    %edx
		call   _07b9ff_func
		mov    %esi,%eax
		jmp    _07af4c_jump

	_07af11_jump:
		cmp    $0x00000d,%bl
		je     _07af1f_jump
		mov    %edx,%ebx
		inc    %esi
		mov    (%eax),%cl
		inc    %edx
		mov    %cl,(%ebx,%ebp,1)

	_07af1f_jump:
		inc    %eax
		inc    %edi

	_07af21_jump:
		cmp    0x000014(%esp),%eax
		jb     _07aef0_jump
		mov    0x000004(%esp),%ecx
		mov    0x00000d(%esp),%ah
		mov    %esi,0x000008(%esp)
		sub    %edx,%ecx
		add    %edx,%ebp
		mov    %ecx,0x000004(%esp)
		test   $0x000020,%ah
		jne    _07af48_jump
		test   %ecx,%ecx
		jne    _07aeb3_jump

	_07af48_jump:
		mov    0x000008(%esp),%eax

	_07af4c_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07af54_func:
		jmp    _080d39_func



_07af59_func:
		push   %edx
		xor    %edx,%edx
		mov    _0bd414_data,%eax
		mov    %edx,_0bd414_data
		test   %eax,%eax
		jne    _07af74_jump
		mov    $0x000001,%ah
		int    $0x000021
		and    $0x0000ff,%eax

	_07af74_jump:
		pop    %edx
		ret    



_07af88_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)
		call   _080d74_func
		mov    $0xf368cb40,%ebx
		mov    $0x3cc003c9,%ecx
		mov    %eax,%edi
		mov    %edx,%esi
		call   _07b674_func
		jge    _07afc4_jump
		xor    %esi,%esi
		mov    $0x3ff00000,%edi
		mov    %esi,-0x000034(%ebp)
		mov    %edi,-0x000030(%ebp)
		jmp    _07b1af_jump

	_07afc4_jump:
		mov    $0xfefa39ef,%ebx
		mov    $0x40862e42,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07b674_func
		jle    _07affe_jump
		cmpl   $0x000000,-0x000030(%ebp)
		jge    _07afec_jump
		xor    %ebx,%ebx
		mov    %ebx,-0x000034(%ebp)
		mov    %ebx,-0x000030(%ebp)
		jmp    _07b1af_jump

	_07afec_jump:
		mov    $0x008104,%eax
		lea    -0x000034(%ebp),%edx
		call   _0804e0_func
		jmp    _07b1a9_jump

	_07affe_jump:
		cmpb   $0x000000,_0bd1d9_data
		je     _07b017_jump
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _080d7e_func
		jmp    _07b1a9_jump

	_07b017_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		mov    $0x652b8301,%ebx
		mov    $0x3ff71547,%ecx
		call   _07975f_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)
		call   _080e27_func
		mov    -0x000030(%ebp),%edx
		mov    %eax,%esi
		mov    -0x000034(%ebp),%eax
		lea    -0x00003c(%ebp),%ebx
		call   _080d74_func
		call   _080e3c_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _07a21c_func
		mov    %eax,-0x000014(%ebp)
		test   %esi,%esi
		jge    _07b08b_jump
		mov    %eax,%edx
		neg    %edx
		mov    %edx,-0x000014(%ebp)
		test   %ecx,%ecx
		je     _07b08b_jump
		lea    -0x000001(%edx),%esi
		xor    %eax,%eax
		mov    $0x3ff00000,%edx
		mov    %esi,-0x000014(%ebp)
		call   _0795a2_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07b08b_jump:
		mov    -0x000030(%ebp),%eax
		xor    %edi,%edi
		test   %eax,%eax
		je     _07b0d7_jump
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		mov    $0x000004,%ebx
		call   _080e68_func
		lea    -0x00003c(%ebp),%ebx
		call   _080e3c_func
		mov    %eax,%ebx
		mov    %edx,%esi
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)
		test   %edx,%edx
		je     _07b0ca_jump
		mov    $0xfffffffc,%ebx
		call   _080e68_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07b0ca_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _07a21c_func
		mov    %eax,%edi

	_07b0d7_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07975f_func
		mov    $0x4f237e45,%ebx
		mov    $0x4034d053,%ecx
		mov    %eax,-0x000024(%ebp)
		mov    %edx,%esi
		call   _0795a8_func
		mov    $0x1ac13af9,%ebx
		mov    $0x3fad92de,%ecx
		mov    %eax,-0x00002c(%ebp)
		mov    %edx,-0x000028(%ebp)
		mov    -0x000024(%ebp),%eax
		mov    %esi,%edx
		call   _07975f_func
		mov    $0xa35ca6dc,%ebx
		mov    $0x401cdaa0,%ecx
		call   _0795a8_func
		mov    -0x000034(%ebp),%ebx
		mov    -0x000030(%ebp),%ecx
		call   _07975f_func
		mov    %eax,%esi
		mov    %edx,-0x00001c(%ebp)
		mov    -0x00002c(%ebp),%eax
		mov    -0x000028(%ebp),%edx
		mov    -0x00001c(%ebp),%ecx
		mov    %esi,%ebx
		call   _0795a8_func
		mov    -0x00001c(%ebp),%ecx
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %esi,%ebx
		mov    -0x00002c(%ebp),%eax
		mov    -0x000028(%ebp),%edx
		call   _0795a2_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000020(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    $_0c1014_data,%esi
		call   _079d5a_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07b173_jump:
		test   %edi,%edi
		je     _07b19b_jump
		test   $0x000001,%di
		je     _07b194_jump
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		call   _07975f_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07b194_jump:
		sar    %edi
		add    $0x000008,%esi
		jmp    _07b173_jump

	_07b19b_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		mov    -0x000014(%ebp),%ebx
		call   _080e68_func

	_07b1a9_jump:
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07b1af_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_07b1be_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%al
		xor    %ebx,%ebx
		call   _080f06_func
		mov    %al,(%esp)
		cmp    $0x000072,%al
		je     _07b1f1_jump
		cmp    $0x000077,%al
		je     _07b1f1_jump
		cmp    $0x000061,%al
		je     _07b1f1_jump
		mov    $0x000009,%eax
		call   _080739_func
		xor    %eax,%eax
		jmp    _07b26b_jump

	_07b1f1_jump:
		mov    %ebx,%eax
		mov    0x000001(%edx),%cl
		or     $0x000003,%al
		cmp    $0x00002b,%cl
		jne    _07b21e_jump
		mov    %eax,%ebx
		mov    0x000002(%edx),%cl
		or     $0x000040,%al
		cmp    $0x000062,%cl
		je     _07b21a_jump
		cmp    $0x000074,%cl
		je     _07b251_jump
		cmpl   $0x000200,_0bd3e5_data

	_07b218_jump:
		jne    _07b251_jump

	_07b21a_jump:
		mov    %eax,%ebx
		jmp    _07b251_jump

	_07b21e_jump:
		mov    %ebx,%ecx
		or     $0x000040,%cl
		cmpb   $0x000062,0x000001(%edx)
		jne    _07b237_jump
		mov    0x000002(%edx),%al
		mov    %ecx,%ebx
		cmp    $0x00002b,%al
		jne    _07b251_jump
		or     $0x000003,%cl
		jmp    _07b24f_jump

	_07b237_jump:
		cmpb   $0x000074,0x000001(%edx)
		jne    _07b243_jump
		cmpb   $0x00002b,0x000002(%edx)
		jmp    _07b218_jump

	_07b243_jump:
		cmpl   $0x000200,_0bd3e5_data
		jne    _07b251_jump

	_07b24f_jump:
		mov    %ecx,%ebx

	_07b251_jump:
		mov    (%esp),%al
		cmp    $0x000077,%al
		jne    _07b25d_jump
		or     $0x000002,%bl
		jmp    _07b269_jump

	_07b25d_jump:
		cmp    $0x000061,%al
		jne    _07b266_jump
		or     $0x000082,%bl
		jmp    _07b269_jump

	_07b266_jump:
		or     $0x000001,%bl

	_07b269_jump:
		mov    %ebx,%eax

	_07b26b_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b272_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		andb   $0x0000fc,0x00000c(%ecx)
		mov    %edx,%eax
		call   _07b1be_func
		mov    0x00000c(%ecx),%edi
		or     %eax,%edi
		xor    %eax,%eax
		mov    %edi,0x00000c(%ecx)
		mov    (%edx),%al
		call   _080f06_func
		mov    %al,%dl
		cmp    $0x000072,%al
		jne    _07b2b9_jump
		mov    0x00000c(%ecx),%dh
		xor    %eax,%eax
		test   $0x000002,%dh
		je     _07b2a7_jump
		mov    $0x000002,%eax

	_07b2a7_jump:
		testb  $0x000040,0x00000c(%ecx)
		je     _07b2b2_jump
		or     $0x000002,%ah
		jmp    _07b2b5_jump

	_07b2b2_jump:
		or     $0x000001,%ah

	_07b2b5_jump:
		push   $0x000000
		jmp    _07b2e6_jump

	_07b2b9_jump:
		testb  $0x000001,0x00000c(%ecx)
		setne  %al
		and    $0x0000ff,%eax
		add    $0x000021,%eax
		cmp    $0x000061,%dl
		jne    _07b2d1_jump
		or     $0x000010,%al
		jmp    _07b2d3_jump

	_07b2d1_jump:
		or     $0x000040,%al

	_07b2d3_jump:
		testb  $0x000040,0x00000c(%ecx)
		je     _07b2de_jump
		or     $0x000002,%ah
		jmp    _07b2e1_jump

	_07b2de_jump:
		or     $0x000001,%ah

	_07b2e1_jump:
		push   $0x000180

	_07b2e6_jump:
		push   %ebx
		push   %eax
		push   %esi
		call   _07abda_func
		add    $0x000010,%esp
		mov    %eax,0x000010(%ecx)
		cmpl   $0xffffffff,0x000010(%ecx)
		jne    _07b306_jump
		mov    %ecx,%eax
		call   _080fbc_func
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		ret    

	_07b306_jump:
		movl   $0x000000,0x000004(%ecx)
		movl   $0x000000,0x000008(%ecx)
		movl   $0x000000,0x000014(%ecx)
		cmp    $0x000061,%dl
		jne    _07b32e_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07a4ea_func

	_07b32e_jump:
		mov    %ecx,%eax
		call   _081013_func
		mov    %ecx,%eax
		pop    %edi
		pop    %esi
		ret    



_07b33a_func:
		push   %ecx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		call   _080f14_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _07b352_jump
		mov    %esi,%eax
		call   _07b272_func

	_07b352_jump:
		pop    %esi
		pop    %ecx
		ret    



_07b355_func:
		push   %ebx
		xor    %ebx,%ebx
		call   _07b33a_func
		pop    %ebx
		ret    



_07b3eb_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0dee34_data,%eax

	_07b3f4_jump:
		test   %eax,%eax
		jne    _07b400_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_07b400_jump:
		mov    0x000004(%eax),%ebx
		cmp    %ebx,%edx
		je     _07b40b_jump
		mov    (%eax),%eax
		jmp    _07b3f4_jump

	_07b40b_jump:
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _07b41a_func
		pop    %edx
		pop    %ebx
		ret    



_07b41a_func:
		push   %ebx
		mov    %eax,%ebx
		call   _07b4a4_func
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _080fbc_func
		mov    %edx,%eax
		pop    %ebx
		ret    



_07b42f_func:
		add    $0x000030,%eax
		cmp    $0x000039,%eax
		jle    _07b43a_jump
		add    $0x000027,%eax

	_07b43a_jump:
		ret    



_07b43b_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		call   _081044_func
		mov    $0x000004,%edx
		mov    %eax,%ebx
		mov    %ecx,%esi
		movb   $0x000074,(%ecx)
		add    %ecx,%edx

	_07b456_jump:
		mov    %ebx,%eax
		and    $0x00000f,%eax
		call   _07b42f_func
		mov    %al,(%edx)
		dec    %edx
		shr    $0x000004,%ebx
		cmp    %esi,%edx
		jne    _07b456_jump
		mov    %edi,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%eax
		movb   $0x00005f,0x000005(%ecx)
		call   _07b42f_func
		mov    %al,0x000006(%ecx)
		mov    %edi,%eax
		and    $0x00000f,%eax
		call   _07b42f_func
		movb   $0x00002e,0x000008(%ecx)
		movb   $0x000074,0x000009(%ecx)
		movb   $0x00006d,0x00000a(%ecx)
		movb   $0x000070,0x00000b(%ecx)
		movb   $0x000000,0x00000c(%ecx)
		mov    %al,0x000007(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07b4a4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		cmpl   $0x000000,0x00000c(%eax)
		jne    _07b4bc_jump
		mov    $0xffffffff,%esi
		jmp    _07b523_jump

	_07b4bc_jump:
		mov    0x00000d(%eax),%ah
		xor    %esi,%esi
		test   $0x000010,%ah
		je     _07b4cf_jump
		mov    %ecx,%eax
		call   _0809dc_func
		mov    %eax,%esi

	_07b4cf_jump:
		mov    %ecx,%eax
		call   _07b6ac_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _07b4e7_jump
		mov    0x000010(%ecx),%eax
		xor    %ebx,%ebx
		call   _07b9ff_func

	_07b4e7_jump:
		test   %edi,%edi
		je     _07b4f5_jump
		mov    0x000010(%ecx),%eax
		call   _080d39_func
		or     %eax,%esi

	_07b4f5_jump:
		testb  $0x000008,0x00000c(%ecx)
		je     _07b50a_jump
		mov    0x000008(%ecx),%eax
		call   _07b961_func
		movl   $0x000000,0x000008(%ecx)

	_07b50a_jump:
		testb  $0x000008,0x00000d(%ecx)
		je     _07b523_jump
		xor    %edx,%edx
		mov    %esp,%eax
		mov    0x000019(%ecx),%dl
		call   _07b43b_func
		mov    %esp,%eax
		call   _07aafe_func

	_07b523_jump:
		mov    %esi,%eax
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07b52d_func:
		push   %ecx
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    %esp,%eax
		call   _08104a_func
		mov    %ecx,%eax
		mov    %esp,%ecx
		call   _07b548_func
		add    $0x00000c,%esp
		pop    %ecx
		ret    



_07b548_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %ebx,%ebp
		mov    %ecx,%ebx
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebp,%edx
		call   _081072_func
		mov    0x000000(%ebp),%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_07b561_func:
		push   %ebx
		push   %edx
		sub    $0x000024,%esp
		mov    %eax,%edx
		mov    %esp,%eax
		call   _081450_func
		cmp    $0x0001f4,%eax
		jl     _07b579_jump
		incl   (%esp)

	_07b579_jump:
		mov    %esp,%eax
		call   _081513_func
		mov    %eax,%ebx
		test   %edx,%edx
		je     _07b588_jump
		mov    %eax,(%edx)

	_07b588_jump:
		add    $0x000024,%esp
		pop    %edx
		pop    %ebx
		ret    



_07b58e_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %ebx,%ecx
		cmp    %eax,%edx
		je     _07b5d6_jump
		jae    _07b5c2_jump
		add    %ebx,%edx
		cmp    %eax,%edx
		jbe    _07b5c2_jump
		lea    (%eax,%ebx,1),%edi
		lea    -0x000001(%edx),%esi
		dec    %edi
		mov    %ds,%edx
		push   %es
		mov    %edx,%es
		std    
		dec    %esi
		dec    %edi
		shr    %ecx
		rep movsw %ds:(%esi),%es:(%edi)
		adc    %ecx,%ecx
		inc    %esi
		inc    %edi
		data16 rep movsb %ds:(%esi),%es:(%edi)
		pop    %es
		cld    
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07b5c2_jump:
		mov    %ds,%edx
		mov    %eax,%edi
		push   %es
		mov    %edx,%es
		push   %ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		and    $0x000003,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %es

	_07b5d6_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07b5ec_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07975f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x3ff00000,%edx
		xor    %eax,%eax
		call   _0795a2_func
		test   %edx,%edx
		jge    _07b626_jump
		mov    $0x002041,%eax
		lea    -0x000010(%ebp),%edx
		call   _0804e0_func
		jmp    _07b66c_jump

	_07b626_jump:
		jne    _07b640_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jge    _07b63a_jump
		mov    $0x54442d18,%eax
		mov    $0x400921fb,%edx
		jmp    _07b66c_jump

	_07b63a_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _07b66c_jump

	_07b640_jump:
		call   _07b80c_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		call   _079d5a_func
		call   _081679_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54442d1a,%eax
		mov    $0x3ff921fb,%edx
		call   _0795a2_func

	_07b66c_jump:
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_07b674_func:
		push   %ebp
		test   $0x7ff00000,%edx
		jne    _07b67f_jump
		sub    %edx,%edx

	_07b67f_jump:
		test   $0x7ff00000,%ecx
		jne    _07b689_jump
		sub    %ecx,%ecx

	_07b689_jump:
		mov    %ecx,%ebp
		xor    %edx,%ebp
		mov    $0x000000,%ebp
		js     _07b6a0_jump
		cmp    %ecx,%edx
		jne    _07b69a_jump
		cmp    %ebx,%eax

	_07b69a_jump:
		je     _07b6a8_jump
		rcr    %ecx
		xor    %ecx,%edx

	_07b6a0_jump:
		add    %edx,%edx
		sbb    $0x000000,%ebp
		add    %ebp,%ebp
		inc    %ebp

	_07b6a8_jump:
		mov    %ebp,%eax
		pop    %ebp
		ret    



_07b6ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000010(%eax),%eax
		call   _080a9b_func
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		je     _07b6d8_jump
		mov    0x000004(%edx),%ecx
		test   %ecx,%ecx
		je     _07b6d8_jump
		testb  $0x000010,0x00000d(%edx)
		je     _07b6d4_jump
		lea    (%ecx,%ebx,1),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07b6d4_jump:
		mov    %ebx,%eax
		sub    %ecx,%eax

	_07b6d8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b701_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		call   _080e27_func
		mov    -0x00000c(%ebp),%edx
		mov    %eax,%esi
		mov    -0x000010(%ebp),%eax
		call   _080e27_func
		test   %esi,%esi
		jne    _07b768_jump
		test   %eax,%eax
		jne    _07b744_jump
		mov    $0x00204d,%eax
		lea    -0x000018(%ebp),%edx
		lea    -0x000010(%ebp),%ebx
		call   _0804ea_func
		jmp    _07b7e7_jump

	_07b744_jump:
		jge    _07b75b_jump
		mov    $0x54442d18,%edx
		mov    $0x400921fb,%ebx

	_07b750_jump:
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _07b7ed_jump

	_07b75b_jump:
		xor    %edi,%edi
		mov    %esi,-0x00000c(%ebp)
		mov    %edi,-0x000010(%ebp)
		jmp    _07b7ed_jump

	_07b768_jump:
		test   %eax,%eax
		jne    _07b78e_jump
		test   %esi,%esi
		jge    _07b782_jump
		mov    $0x54442d1a,%ecx
		mov    $0xbff921fb,%esi
		mov    %ecx,-0x000010(%ebp)
		mov    %esi,-0x00000c(%ebp)
		jmp    _07b7ed_jump

	_07b782_jump:
		mov    $0x54442d1a,%edx
		mov    $0x3ff921fb,%ebx
		jmp    _07b750_jump

	_07b78e_jump:
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		mov    -0x00000c(%ebp),%ecx
		call   _079d5a_func
		call   _081679_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		call   _080e27_func
		test   %esi,%esi
		jl     _07b7ce_jump
		test   %eax,%eax
		jge    _07b7ed_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0x400921fb,%ecx
		call   _0795a8_func
		jmp    _07b7e7_jump

	_07b7ce_jump:
		test   %eax,%eax
		jle    _07b7ed_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0xc00921fb,%ecx
		call   _0795a8_func

	_07b7e7_jump:
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_07b7ed_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_07b80c_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		test   %edx,%edx
		jge    _07b82b_jump
		mov    $0x002043,%eax
		lea    -0x000008(%ebp),%edx
		call   _0804e0_func
		jmp    _07b856_jump

	_07b82b_jump:
		cmpb   $0x000000,_0bd1d9_data
		je     _07b84a_jump
		mov    -0x000008(%ebp),%eax
		push   %ebp
		push   %edx
		push   %eax
		mov    %esp,%ebp
		fldl   0x000000(%ebp)
		fsqrt  
		fstpl  0x000000(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		jmp    _07b856_jump

	_07b84a_jump:
		test   %edx,%edx
		je     _07b85c_jump
		mov    -0x000008(%ebp),%eax
		call   _0817f0_func

	_07b856_jump:
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)

	_07b85c_jump:
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_07b866_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		push   %gs
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		test   %eax,%eax
		je     _07b87f_jump
		cmp    $0xffffffd4,%eax
		jbe    _07b886_jump

	_07b87f_jump:
		xor    %eax,%eax
		jmp    _07b93a_jump

	_07b886_jump:
		mov    $_0bd1cc_data,%ebp
		lea    0x000003(%esi),%edi
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,(%esp)
		and    $0x00fffc,%di

	_07b899_jump:
		mov    %edi,%eax
		cmp    $0x00000c,%edi
		jae    _07b8a5_jump
		mov    $0x00000c,%eax

	_07b8a5_jump:
		cmp    _0bd1d4_data,%eax
		jbe    _07b8c5_jump
		mov    _0bd1d0_data,%ecx
		test   %ecx,%ecx
		jne    _07b8fd_jump

	_07b8b7_jump:
		mov    %ecx,_0bd1d4_data
		mov    _0bd1cc_data,%ecx
		jmp    _07b8fd_jump

	_07b8c5_jump:
		xor    %ecx,%ecx
		jmp    _07b8b7_jump

	_07b8c9_jump:
		mov    %ds,%edx
		mov    %ebp,%eax
		mov    %ecx,_0bd1d0_data
		and    $0x00ffff,%edx
		mov    %esi,%eax
		mov    %ecx,%ebx
		call   _081a22_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _07b930_jump
		mov    _0bd1d4_data,%eax
		mov    0x000014(%ecx),%edx
		cmp    %eax,%edx
		jbe    _07b8fa_jump
		mov    %edx,_0bd1d4_data

	_07b8fa_jump:
		mov    0x000008(%ecx),%ecx

	_07b8fd_jump:
		test   %ecx,%ecx
		jne    _07b8c9_jump
		cmpb   $0x000000,(%esp)
		jne    _07b912_jump
		mov    %esi,%eax
		call   _081fa0_func
		test   %eax,%eax
		jne    _07b927_jump

	_07b912_jump:
		mov    %esi,%eax
		call   _08215b_func
		test   %eax,%eax
		je     _07b930_jump
		xor    %cl,%cl
		mov    %cl,(%esp)
		jmp    _07b899_jump

	_07b927_jump:
		movb   $0x000001,(%esp)
		jmp    _07b899_jump

	_07b930_jump:
		xor    %ch,%ch
		mov    %ebx,%eax
		mov    %ch,_0dee39_data

	_07b93a_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %gs
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b949_func:
		push   %ebx
		imul   %edx,%eax
		mov    %eax,%ebx
		call   _07b866_func
		test   %eax,%eax
		je     _07b95f_jump
		xor    %edx,%edx
		call   _079cd0_func

	_07b95f_jump:
		pop    %ebx
		ret    



_07b961_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		mov    %eax,%ebx
		mov    _0bd1cc_data,%ecx
		jmp    _07b97a_jump

	_07b96f_jump:
		cmp    %ebx,%ecx
		ja     _07b977_jump
		cmp    %edx,%ebx
		jb     _07b981_jump

	_07b977_jump:
		mov    0x000008(%ecx),%ecx

	_07b97a_jump:
		mov    0x000008(%ecx),%edx
		test   %edx,%edx
		jne    _07b96f_jump

	_07b981_jump:
		mov    $_0bd1cc_data,%eax
		mov    %ds,%edx
		and    $0x00ffff,%edx
		mov    %ebx,%eax
		mov    %ecx,%ebx
		call   _081aca_func
		cmp    _0bd1d0_data,%ecx
		je     _07b9b2_jump
		mov    _0bd1d4_data,%ebp
		mov    0x000014(%ecx),%edx
		cmp    %ebp,%edx
		jbe    _07b9b2_jump
		mov    %edx,_0bd1d4_data

	_07b9b2_jump:
		xor    %ah,%ah
		mov    %ah,_0dee39_data
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b9bf_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %eax,%edx
		mov    %cl,%al
		out    %al,(%dx)
		pop    %ecx
		pop    %ebx
		ret    



_07b9ce_func:
		push   $0x003f00
		push   %ds
		mov    %ecx,%ds
		mov    %edx,%ecx
		mov    %ebx,%edx
		mov    %eax,%ebx
		mov    0x000004(%esp),%eax
		int    $0x000021
		pop    %ds
		push   %ds
		jb     _07b9ec_jump
		mov    0x00000c(%esp),%ebx
		mov    %eax,(%ebx)

	_07b9ec_jump:
		call   _08215e_func
		pop    %ds
		add    $0x000004,%esp
		ret    $0x000004



_07b9ff_func:
		push   %ecx
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%eax
		mov    %esp,%edi
		mov    %ecx,%ebx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		mov    %ax,%ss:(%edi)
		mov    %dx,%ss:0x000002(%edi)
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    _07ba37_jump
		and    $0x00ffff,%eax
		call   _07f6d0_func
		mov    $0xffffffff,%eax
		jmp    _07ba3a_jump

	_07ba37_jump:
		mov    (%esp),%eax

	_07ba3a_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %ecx
		ret    



_07ba40_func:
		push   %ecx
		push   %eax

	_07ba42_jump:
		mov    (%edx),%cl
		mov    %cl,(%eax)
		cmp    $0x000000,%cl
		je     _07ba5c_jump
		mov    0x000001(%edx),%cl
		add    $0x000002,%edx
		mov    %cl,0x000001(%eax)
		add    $0x000002,%eax
		cmp    $0x000000,%cl
		jne    _07ba42_jump

	_07ba5c_jump:
		pop    %eax
		pop    %ecx
		ret    



_07ba5f_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		push   %es
		push   %ds
		pop    %es
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_07ba72_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07ba8e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07ba72_jump

	_07ba8e_jump:
		pop    %edi
		pop    %es
		mov    %edi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07ba96_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07baab_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_07baca_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _07bad7_jump
		jmp    _07bafa_jump

	_07bad2_jump:
		incl   -0x000004(%ebp)
		jmp    _07baca_jump

	_07bad7_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _07baf8_jump
		incl   -0x000008(%ebp)

	_07baf8_jump:
		jmp    _07bad2_jump

	_07bafa_jump:
		mov    -0x000008(%ebp),%eax
		mov    %eax,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bb0a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bb1f_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bb34_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		testb  $0x000002,-0x00000c(%ebp)
		je     _07bb56_jump
		movb   $0x000001,_0bf454_data
		jmp    _07bb5d_jump

	_07bb56_jump:
		movb   $0x000000,_0bf454_data

	_07bb5d_jump:
		testb  $0x000001,-0x00000c(%ebp)
		jne    _07bb8f_jump
		movb   $0x000001,_0bf450_data
		call   _0822f9_func
		mov    %cs,%eax
		mov    $_07c1dd_func,%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		push   $0x00ffff
		call   _082237_func
		add    $0x00000c,%esp
		call   _082325_func
		jmp    _07bb96_jump

	_07bb8f_jump:
		movb   $0x000000,_0bf450_data

	_07bb96_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		je     _07bba2_jump
		testb  $0x000001,-0x00000c(%ebp)
		je     _07bba4_jump

	_07bba2_jump:
		jmp    _07bbf6_jump

	_07bba4_jump:
		cmpl   $0x00ff00,-0x000010(%ebp)
		jne    _07bbc3_jump
		mov    $0x00ffff,%eax
		call   _07c1a8_func
		movl   $0x00ff00,_0bdf97_data
		jmp    _07bbda_jump

	_07bbc3_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000010(%ebp)
		call   _07c1a8_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0bdf97_data

	_07bbda_jump:
		mov    %cs,_0bdf59_data
		movl   $_07c2a7_func,_0bdf55_data
		movl   $0x010000,_0bdfd7_data
		jmp    _07bc00_jump

	_07bbf6_jump:
		movl   $0x00ffff,_0bdef7_data

	_07bc00_jump:
		movl   $0x000000,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07bc10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		cmpb   $0x000000,_0bf450_data
		je     _07bc39_jump
		call   _0822f9_func
		call   _082351_func
		call   _082325_func

	_07bc39_jump:
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bc4a_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000020,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_07bc6e_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07bc7b_jump
		jmp    _07bc94_jump

	_07bc76_jump:
		incl   -0x000004(%ebp)
		jmp    _07bc6e_jump

	_07bc7b_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0bdefb_data(%eax)
		jne    _07bc92_jump
		cmpw   $0x000000,_0bdeff_data(%eax)
		je     _07bc94_jump

	_07bc92_jump:
		jmp    _07bc76_jump

	_07bc94_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07bca6_jump
		movl   $0x00000b,-0x000014(%ebp)
		jmp    _07be4d_jump

	_07bca6_jump:
		cmpb   $0x000000,_0bf450_data
		je     _07bcb4_jump
		call   _0822f9_func

	_07bcb4_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		imul   $0x000006,-0x000004(%ebp),%edx
		mov    -0x00001c(%ebp),%eax
		mov    %ax,_0bdeff_data(%edx)
		mov    -0x000020(%ebp),%eax
		mov    %eax,_0bdefb_data(%edx)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0bdf5b_data(%edx)
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		cmp    _0bdef7_data,%eax
		jae    _07bd1f_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		call   _07c1a8_func
		mov    _0bdef7_data,%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,-0x00000c(%ebp)

	_07bd1f_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07bd26_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07bd36_jump
		jmp    _07be2e_jump

	_07bd31_jump:
		incl   -0x000004(%ebp)
		jmp    _07bd26_jump

	_07bd36_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0bdefb_data(%eax)
		jne    _07bd51_jump
		cmpw   $0x000000,_0bdeff_data(%eax)
		je     _07be29_jump

	_07bd51_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0bdf5b_data(%eax)
		jne    _07bda9_jump
		cmpl   $0x00ffff,_0bdef7_data
		jne    _07bd81_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0bdf9b_data(%eax)
		jmp    _07bda7_jump

	_07bd81_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0bdef7_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0bdf9b_data(%eax)

	_07bda7_jump:
		jmp    _07bddb_jump

	_07bda9_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bdf5b_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0bdef7_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0bdf9b_data(%eax)

	_07bddb_jump:
		cmpl   $0x000000,-0x00000c(%ebp)
		je     _07be29_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		and    $0x00ffff,%edx
		mov    _0bdfdb_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		mov    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		shr    $0x000010,%edx
		mov    _0bdfdb_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		add    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0bdfdb_data(%edx)

	_07be29_jump:
		jmp    _07bd31_jump

	_07be2e_jump:
		cmpb   $0x000000,_0bf450_data
		je     _07be3c_jump
		call   _082325_func

	_07be3c_jump:
		mov    -0x000008(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000014(%ebp)

	_07be4d_jump:
		mov    -0x000014(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000008



_07bfcf_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bdeff_data(%eax)
		movl   $0x000000,_0bdefb_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_07c005_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07c012_jump
		jmp    _07c05f_jump

	_07c00d_jump:
		incl   -0x000004(%ebp)
		jmp    _07c005_jump

	_07c012_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0bdefb_data(%eax)
		jne    _07c029_jump
		cmpw   $0x000000,_0bdeff_data(%eax)
		je     _07c05d_jump

	_07c029_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bdf5b_data(%eax),%eax
		cmp    -0x000008(%ebp),%eax
		jbe    _07c04c_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0bdf5b_data(%eax)
		jne    _07c04e_jump

	_07c04c_jump:
		jmp    _07c05d_jump

	_07c04e_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bdf5b_data(%eax),%eax
		mov    %eax,-0x000008(%ebp)

	_07c05d_jump:
		jmp    _07c00d_jump

	_07c05f_jump:
		cmpl   $0x000000,-0x000008(%ebp)
		je     _07c076_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000008(%ebp)
		call   _07c1a8_func
		jmp    _07c080_jump

	_07c076_jump:
		mov    $0x00ffff,%eax
		call   _07c1a8_func

	_07c080_jump:
		cmpb   $0x000000,_0bf450_data
		je     _07c08e_jump
		call   _0822f9_func

	_07c08e_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07c095_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07c0a5_jump
		jmp    _07c15f_jump

	_07c0a0_jump:
		incl   -0x000004(%ebp)
		jmp    _07c095_jump

	_07c0a5_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0bdefb_data(%eax)
		jne    _07c0c0_jump
		cmpw   $0x000000,_0bdeff_data(%eax)
		je     _07c15a_jump

	_07c0c0_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0bdf5b_data(%eax)
		jne    _07c118_jump
		cmpl   $0x00ffff,_0bdef7_data
		jne    _07c0f0_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0bdf9b_data(%eax)
		jmp    _07c116_jump

	_07c0f0_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0bdef7_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0bdf9b_data(%eax)

	_07c116_jump:
		jmp    _07c14a_jump

	_07c118_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bdf5b_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0bdef7_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0bdf9b_data(%eax)

	_07c14a_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bdfdb_data(%eax)

	_07c15a_jump:
		jmp    _07c0a0_jump

	_07c15f_jump:
		cmpb   $0x000000,_0bf450_data
		je     _07c16d_jump
		call   _082325_func

	_07c16d_jump:
		movl   $0x000000,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c1a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %eax,_0bdef7_data
		pushl  -0x000008(%ebp)
		call   _0821f1_func
		add    $0x000004,%esp
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c1dd_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		incl   _0be22a_data
		movl   $0x000000,_0be414_data

	_07c1fb_jump:
		cmpl   $0x000010,_0be414_data
		jb     _07c211_jump
		jmp    _07c29a_jump

	_07c209_jump:
		incl   _0be414_data
		jmp    _07c1fb_jump

	_07c211_jump:
		imul   $0x000006,_0be414_data,%eax
		cmpl   $0x000000,_0bdefb_data(%eax)
		jne    _07c22b_jump
		cmpw   $0x000000,_0bdeff_data(%eax)
		je     _07c295_jump

	_07c22b_jump:
		mov    _0be414_data,%eax
		shl    $0x000002,%eax
		mov    _0be414_data,%edx
		shl    $0x000002,%edx
		mov    _0bdf9b_data(%edx),%edx
		add    %edx,_0bdfdb_data(%eax)
		mov    _0be414_data,%eax
		shl    $0x000002,%eax
		testb  $0x000001,_0bdfdd_data(%eax)
		je     _07c295_jump
		mov    _0be414_data,%eax
		shl    $0x000002,%eax
		movw   $0x000000,_0bdfdd_data(%eax)
		mov    _0be414_data,%eax
		cmpb   $0x0000ff,_0be01b_data(%eax)
		je     _07c288_jump
		mov    _0be414_data,%eax
		mov    _0be01b_data(%eax),%al
		mov    %al,_0be02b_data

	_07c288_jump:
		imul   $0x000006,_0be414_data,%eax
		lcall  *_0bdefb_data(%eax)

	_07c295_jump:
		jmp    _07c209_jump

	_07c29a_jump:
		decl   _0be22a_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_07c2a7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		call   _0823cd_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_07c2c1_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c2d6_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c2eb_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %dx,-0x000010(%ebp)
		mov    %eax,-0x000014(%ebp)
		cmpl   $0x000000,_0be28a_data
		je     _07c314_jump
		movl   $0x000003,-0x00000c(%ebp)
		jmp    _07c42c_jump

	_07c314_jump:
		movl   $0x00002c,-0x000008(%ebp)
		cmpl   $0x000000,-0x000014(%ebp)
		jne    _07c328_jump
		cmpw   $0x000000,-0x000010(%ebp)
		je     _07c346_jump

	_07c328_jump:
		mov    -0x000014(%ebp),%edx
		mov    $_0be12b_data,%eax
		call   _07ba40_func
		mov    $_0c0bfc_data,%edx
		mov    $_0be12b_data,%eax
		call   _07ba5f_func
		jmp    _07c355_jump

	_07c346_jump:
		mov    $_0c0bfc_data,%edx
		mov    $_0be12b_data,%eax
		call   _07ba40_func

	_07c355_jump:
		push   $0x000200
		mov    $_0be12b_data,%eax
		push   %eax
		call   _07abb6_func
		add    $0x000008,%esp
		mov    %eax,_0be29a_data
		cmpl   $0xffffffff,_0be29a_data
		jne    _07c382_jump
		movl   $0x00000f,-0x00000c(%ebp)
		jmp    _07c42c_jump

	_07c382_jump:
		mov    -0x000008(%ebp),%ebx
		mov    $_0be22e_data,%edx
		mov    _0be29a_data,%eax
		call   _07ae41_func
		mov    _0be256_data,%eax
		mov    %eax,-0x000004(%ebp)
		mov    $_0be2aa_data,%eax
		push   %eax
		mov    $_0be2a6_data,%eax
		push   %eax
		push   $0x001000
		call   _0824a3_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,_0be292_data
		mov    %ecx,_0be28e_data
		movzwl _0be292_data,%eax
		push   %eax
		pushl  _0be28e_data
		call   _082567_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,_0be298_data
		mov    %ecx,_0be294_data
		push   $0x001000
		pushl  _0be2aa_data
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07c40d_jump
		movl   $0x000005,-0x00000c(%ebp)
		jmp    _07c42c_jump

	_07c40d_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0be29a_data,%eax
		call   _07b9ff_func
		movl   $0x000001,_0be28a_data
		movl   $0x000000,-0x00000c(%ebp)

	_07c42c_jump:
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07c435_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		movl   $0x000000,_0be28a_data
		mov    _0be29a_data,%eax
		call   _07af54_func
		push   $0x001000
		pushl  _0be2aa_data
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07c477_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07c4b6_jump

	_07c477_jump:
		pushl  _0be2a6_data
		movzwl _0be292_data,%eax
		push   %eax
		pushl  _0be28e_data
		call   _082531_func
		add    $0x00000c,%esp
		pushl  _0be2a6_data
		movzwl _0be298_data,%eax
		push   %eax
		pushl  _0be294_data
		call   _082531_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_07c4b6_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c8d9_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000038,%esp
		mov    %dx,-0x000034(%ebp)
		mov    %eax,-0x000038(%ebp)
		mov    %cx,-0x00002c(%ebp)
		mov    %ebx,-0x000030(%ebp)
		movl   $0xffffffff,-0x000008(%ebp)
		movl   $0x000030,-0x000014(%ebp)
		movl   $0x000000,-0x000020(%ebp)
		movl   $0x000000,-0x000024(%ebp)
		cmpl   $0x000000,-0x000038(%ebp)
		jne    _07c927_jump
		cmpw   $0x000000,-0x000034(%ebp)
		jne    _07c927_jump
		movl   $0x000002,-0x000028(%ebp)
		jmp    _07cb24_jump

	_07c927_jump:
		movl   $0x000000,-0x00000c(%ebp)
		movl   $0x000000,-0x000010(%ebp)
		movl   $0x000000,_0be2a2_data
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0be29a_data,%eax
		call   _07b9ff_func
		mov    $0x00002c,%ebx
		mov    $_0be22e_data,%edx
		mov    _0be29a_data,%eax
		call   _07ae41_func

	_07c961_jump:
		mov    _0be2a2_data,%eax
		cmp    _0be24e_data,%eax
		ja     _07c974_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		je     _07c979_jump

	_07c974_jump:
		jmp    _07cb1d_jump

	_07c979_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    _0be29a_data,%eax
		call   _07b9ff_func
		mov    %eax,-0x000018(%ebp)
		mov    -0x000014(%ebp),%ebx
		mov    $_0be25a_data,%edx
		mov    _0be29a_data,%eax
		call   _07ae41_func
		mov    _0be27e_data,%eax
		mov    %eax,-0x000004(%ebp)
		mov    _0be282_data,%eax
		mov    %eax,-0x000008(%ebp)
		testb  $0x000080,_0be287_data
		je     _07cb00_jump
		lea    -0x00001c(%ebp),%eax
		push   %eax
		mov    -0x000004(%ebp),%edx
		mov    _0be292_data,%bx
		mov    _0be28e_data,%eax
		mov    _0be29a_data,%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _07b9ce_func
		mov    %ds,%eax
		mov    $_0be2b4_data,%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		movzwl _0be292_data,%eax
		push   %eax
		pushl  _0be28e_data
		movzwl _0be298_data,%eax
		push   %eax
		pushl  _0be294_data
		call   _082762_func
		add    $0x000018,%esp
		testb  $0x000001,_0be2f1_data
		je     _07ca79_jump
		movzwl _0be292_data,%eax
		push   %eax
		pushl  _0be28e_data
		movzwl _0be298_data,%eax
		push   %eax
		pushl  _0be294_data
		call   _082995_func
		add    $0x000010,%esp
		movl   $0x000000,-0x000020(%ebp)

	_07ca44_jump:
		pushl  -0x000020(%ebp)
		call   _0829d4_func
		add    $0x000004,%esp
		test   %eax,%eax
		je     _07ca79_jump
		pushl  -0x000020(%ebp)
		call   _0829d4_func
		add    $0x000004,%esp
		call   _082cac_func
		mov    %eax,-0x000024(%ebp)
		pushl  -0x000024(%ebp)
		pushl  -0x000020(%ebp)
		call   _082a1e_func
		add    $0x000008,%esp
		incl   -0x000020(%ebp)
		jmp    _07ca44_jump

	_07ca79_jump:
		movzwl _0be292_data,%eax
		push   %eax
		pushl  _0be28e_data
		movzwl _0be298_data,%eax
		push   %eax
		pushl  _0be294_data
		call   _0826fb_func
		add    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		cmpl   $0x000000,-0x000010(%ebp)
		je     _07cafe_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0be29e_data
		movzwl -0x000034(%ebp),%eax
		push   %eax
		pushl  -0x000038(%ebp)
		movzwl _0be292_data,%eax
		push   %eax
		pushl  _0be28e_data
		movzwl _0be298_data,%eax
		push   %eax
		pushl  _0be294_data
		call   _082762_func
		add    $0x000018,%esp
		mov    -0x000034(%ebp),%eax
		mov    %ax,_0be2b2_data
		mov    -0x000038(%ebp),%eax
		mov    %eax,_0be2ae_data
		mov    -0x000010(%ebp),%eax
		lgs    -0x000030(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000028(%ebp)
		jmp    _07cb24_jump

	_07cafe_jump:
		jmp    _07cb12_jump

	_07cb00_jump:
		mov    $0x000001,%ebx
		mov    -0x000004(%ebp),%edx
		mov    _0be29a_data,%eax
		call   _07b9ff_func

	_07cb12_jump:
		incl   _0be2a2_data
		jmp    _07c961_jump

	_07cb1d_jump:
		movl   $0x000007,-0x000028(%ebp)

	_07cb24_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		ret    



_07cd51_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00002c,%esp
		mov    %dx,-0x000028(%ebp)
		mov    %eax,-0x00002c(%ebp)
		movl   $0x000030,-0x000018(%ebp)
		cmpl   $0x000000,-0x00002c(%ebp)
		jne    _07cd85_jump
		cmpw   $0x000000,-0x000028(%ebp)
		jne    _07cd85_jump
		movl   $0x000002,-0x000024(%ebp)
		jmp    _07ced0_jump

	_07cd85_jump:
		xor    %ebx,%ebx
		mov    _0be29e_data,%edx
		mov    _0be29a_data,%eax
		call   _07b9ff_func
		movl   $0x000000,-0x00001c(%ebp)

	_07cd9e_jump:
		lgs    _0be2ae_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		cmpw   $0x00ffff,%gs:(%eax)
		je     _07cdeb_jump
		lgs    _0be2ae_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		movswl %gs:(%eax),%eax
		push   %eax
		call   _08292b_func
		add    $0x000004,%esp
		incl   -0x00001c(%ebp)
		jmp    _07cd9e_jump

	_07cdeb_jump:
		movzwl _0be292_data,%eax
		push   %eax
		pushl  _0be28e_data
		movzwl _0be298_data,%eax
		push   %eax
		pushl  _0be294_data
		call   _08271e_func
		add    $0x000010,%esp
		movl   $0x000000,-0x00001c(%ebp)

	_07ce16_jump:
		lgs    _0be2ae_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		cmpw   $0x00ffff,%gs:(%eax)
		je     _07ce63_jump
		lgs    _0be2ae_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		movswl %gs:(%eax),%eax
		push   %eax
		call   _082960_func
		add    $0x000004,%esp
		incl   -0x00001c(%ebp)
		jmp    _07ce16_jump

	_07ce63_jump:
		mov    _0bf54c_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:(%eax)
		mov    _0bf550_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x000008(%eax)
		mov    _0bf554_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x000004(%eax)
		mov    _0bf558_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x00000c(%eax)
		testb  $0x000001,_0be2f0_data
		jne    _07cec9_jump
		cmpl   $0x000001,_0bf554_data
		jbe    _07ceb5_jump
		cmpl   $0x000010,_0bf554_data
		jb     _07ceb7_jump

	_07ceb5_jump:
		jmp    _07cec0_jump

	_07ceb7_jump:
		movl   $0x000000,-0x000024(%ebp)
		jmp    _07ced0_jump

	_07cec0_jump:
		movl   $0x000011,-0x000024(%ebp)
		jmp    _07ced0_jump

	_07cec9_jump:
		movl   $0x000000,-0x000024(%ebp)

	_07ced0_jump:
		mov    -0x000024(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07cfaa_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07cfbf_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07cfd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_082d06_func,%edx
		mov    $_082d45_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_082d06_func,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d00d_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d00d_jump:
		mov    $_082d5a_func,%edx
		mov    $_082e00_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_082d5a_func,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d038_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d038_jump:
		mov    $_07f46a_func,%edx
		mov    $_07f555_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07f46a_func,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d063_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d063_jump:
		mov    $_07cfbf_func,%edx
		mov    $_07e369_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07cfbf_func,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d08e_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d08e_jump:
		mov    $_082e15_func,%edx
		mov    $_0833c1_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_082e15_func,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d0b9_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d0b9_jump:
		mov    $_07ba96_func,%edx
		mov    $_07bb0a_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ba96_func,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d0e4_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d0e4_jump:
		mov    $_0833d6_func,%edx
		mov    $_08344d_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0833d6_func,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d10f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d10f_jump:
		mov    $_07e37e_func,%edx
		mov    $_07edd1_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07e37e_func,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d13a_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d13a_jump:
		mov    $_07bb1f_func,%edx
		mov    $_07c2c1_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07bb1f_func,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d165_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d165_jump:
		mov    $_07ede6_func,%edx
		mov    $_07f455_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ede6_func,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d190_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d190_jump:
		mov    $_07c2d6_func,%edx
		mov    $_07cfaa_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07c2d6_func,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d1bb_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d1bb_jump:
		mov    $_082174_jump,%edx
		mov    $_082426_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_082174_jump,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d1e6_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d1e6_jump:
		mov    $_082428_jump,%edx
		mov    $_082cab_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_082428_jump,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d211_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d211_jump:
		mov    $_0bd500_data,%edx
		mov    $_0be418_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bd500_data,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d239_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d239_jump:
		mov    $_0be41c_data,%edx
		mov    $_0bf458_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0be41c_data,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d261_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d261_jump:
		mov    $_0bf45c_data,%edx
		mov    $_0bf55c_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bf45c_data,%eax
		push   %eax
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d289_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d290_jump

	_07d289_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07d290_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d29a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_082d06_func,%edx
		mov    $_082d45_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_082d06_func,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d2d3_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d2d3_jump:
		mov    $_082d5a_func,%edx
		mov    $_082e00_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_082d5a_func,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d2fe_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d2fe_jump:
		mov    $_07f46a_func,%edx
		mov    $_07f555_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07f46a_func,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d329_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d329_jump:
		mov    $_07cfbf_func,%edx
		mov    $_07e369_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07cfbf_func,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d354_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d354_jump:
		mov    $_082e15_func,%edx
		mov    $_0833c1_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_082e15_func,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d37f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d37f_jump:
		mov    $_07ba96_func,%edx
		mov    $_07bb0a_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ba96_func,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d3aa_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d3aa_jump:
		mov    $_0833d6_func,%edx
		mov    $_08344d_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0833d6_func,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d3d5_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d3d5_jump:
		mov    $_07e37e_func,%edx
		mov    $_07edd1_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07e37e_func,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d400_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d400_jump:
		mov    $_07bb1f_func,%edx
		mov    $_07c2c1_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07bb1f_func,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d42b_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d42b_jump:
		mov    $_07ede6_func,%edx
		mov    $_07f455_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ede6_func,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d456_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d456_jump:
		mov    $_07c2d6_func,%edx
		mov    $_07cfaa_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07c2d6_func,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d481_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d481_jump:
		mov    $_082174_jump,%edx
		mov    $_082426_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_082174_jump,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d4ac_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d4ac_jump:
		mov    $_082428_jump,%edx
		mov    $_082cab_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_082428_jump,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d4d7_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d4d7_jump:
		mov    $_0bd500_data,%edx
		mov    $_0be418_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bd500_data,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d4ff_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d4ff_jump:
		mov    $_0be41c_data,%edx
		mov    $_0bf458_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0be41c_data,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d527_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d527_jump:
		mov    $_0bf45c_data,%edx
		mov    $_0bf55c_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bf45c_data,%eax
		push   %eax
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07d54f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07d556_jump

	_07d54f_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07d556_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d560_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %dx,-0x000010(%ebp)
		mov    %eax,-0x000014(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		call   _07cfd4_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _07d58c_jump
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _07d5d1_jump

	_07d58c_jump:
		movl   $0x000001,_0be384_data
		cmpl   $0x000000,-0x000014(%ebp)
		jne    _07d5a3_jump
		cmpw   $0x000000,-0x000010(%ebp)
		je     _07d5c3_jump

	_07d5a3_jump:
		mov    -0x000010(%ebp),%ebx
		mov    -0x000014(%ebp),%eax
		mov    %ds,%edi
		mov    $_0be02c_data,%edx
		mov    %edi,%esi
		mov    %edx,%edi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _083462_func
		jmp    _07d5ca_jump

	_07d5c3_jump:
		movb   $0x000000,_0be02c_data

	_07d5ca_jump:
		movl   $0x000000,-0x000008(%ebp)

	_07d5d1_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07d5d9_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		call   _07d29a_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _07d5fe_jump
		movl   $0x000000,-0x000008(%ebp)
		jmp    _07d60f_jump

	_07d5fe_jump:
		movl   $0x000000,_0be384_data
		movl   $0x000000,-0x000008(%ebp)

	_07d60f_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d619_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000084,%esp
		mov    %eax,-0x000034(%ebp)
		mov    %cx,-0x000078(%ebp)
		mov    %ebx,-0x00007c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000004(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000008(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000008(%eax),%ax
		mov    %ax,-0x000048(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00004c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000010(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000014(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000014(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000018(%eax),%eax
		mov    %eax,-0x00001c(%ebp)
		movl   $0x000006,-0x00002c(%ebp)
		movl   $0x000000,-0x000028(%ebp)

	_07d696_jump:
		cmpl   $0x000005,-0x000028(%ebp)
		jb     _07d6a3_jump
		jmp    _07d6bc_jump

	_07d69e_jump:
		incl   -0x000028(%ebp)
		jmp    _07d696_jump

	_07d6a3_jump:
		mov    -0x000028(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bdab2_data(%eax)
		jne    _07d6ba_jump
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x00002c(%ebp)
		jmp    _07d6bc_jump

	_07d6ba_jump:
		jmp    _07d69e_jump

	_07d6bc_jump:
		cmpl   $0x000006,-0x00002c(%ebp)
		jne    _07d6ce_jump
		movl   $0x00000b,-0x000024(%ebp)
		jmp    _07decf_jump

	_07d6ce_jump:
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0bdab2_data(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000024(%eax)
		jne    _07d6f4_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000028(%eax)
		je     _07d757_jump

	_07d6f4_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000028(%eax),%ax
		mov    %ax,-0x000058(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000024(%eax),%eax
		mov    %eax,-0x00005c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000030(%eax),%ax
		mov    %ax,-0x000060(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00002c(%eax),%eax
		mov    %eax,-0x000064(%ebp)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0bd530_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0bd52c_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0bd54e_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0bd54a_data(%edx)
		jmp    _07d815_jump

	_07d757_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd504_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd568_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0bd5cc_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00005c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000064(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    -0x00002c(%ebp),%edx
		mov    -0x000034(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _082e2a_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07d7b9_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07decf_jump

	_07d7b9_jump:
		mov    -0x000058(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000028(%edx)
		mov    -0x00005c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000024(%edx)
		mov    -0x000060(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000030(%edx)
		mov    -0x000064(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00002c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0bd530_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0bd52c_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0bd54e_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0bd54a_data(%edx)

	_07d815_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		mov    $_0bdaca_data,%edx
		add    %edx,%eax
		mov    %ds,%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _082d6f_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07d844_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07decf_jump

	_07d844_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bdab2_data(%eax)
		jae    _07dc53_jump
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000004(%ebp),%eax
		mov    %eax,_0bd644_data(%edx)
		cmpl   $0x000000,-0x000010(%ebp)
		je     _07d98e_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0be370_data(%eax)
		movw   $0x000000,-0x000080(%ebp)
		movl   $0x000000,-0x000084(%ebp)
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    $_0bd68a_data,%eax
		add    %eax,%ebx
		lea    -0x00003c(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _07e0f1_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		mov    %bx,-0x000048(%ebp)
		mov    %ecx,-0x00004c(%ebp)
		mov    -0x00004c(%ebp),%eax
		cmp    -0x000084(%ebp),%eax
		jne    _07d8ee_jump
		mov    -0x000048(%ebp),%eax
		cmp    -0x000080(%ebp),%ax
		jne    _07d8ee_jump
		mov    -0x00002c(%ebp),%eax
		call   _08304d_func
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bdab2_data(%eax)
		movl   $0x000005,-0x000024(%ebp)
		jmp    _07decf_jump

	_07d8ee_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0bd65c_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0bd658_data(%edx)
		imul   $0x00006c,-0x00002c(%ebp),%eax
		cmpl   $0x000008,_0bdaee_data(%eax)
		jne    _07d969_jump
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000080,_0bdb07_data(%eax)
		je     _07d944_jump
		movl   $0x000000,-0x000044(%ebp)

	_07d926_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _07d935_jump
		jmp    _07d942_jump

	_07d930_jump:
		incl   -0x000044(%ebp)
		jmp    _07d926_jump

	_07d935_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _07d930_jump

	_07d942_jump:
		jmp    _07d967_jump

	_07d944_jump:
		movl   $0x000000,-0x000044(%ebp)

	_07d94b_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _07d95a_jump
		jmp    _07d967_jump

	_07d955_jump:
		incl   -0x000044(%ebp)
		jmp    _07d94b_jump

	_07d95a_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000080,%gs:(%eax)
		jmp    _07d955_jump

	_07d967_jump:
		jmp    _07d98c_jump

	_07d969_jump:
		movl   $0x000000,-0x000044(%ebp)

	_07d970_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _07d97f_jump
		jmp    _07d98c_jump

	_07d97a_jump:
		incl   -0x000044(%ebp)
		jmp    _07d970_jump

	_07d97f_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _07d97a_jump

	_07d98c_jump:
		jmp    _07d9b0_jump

	_07d98e_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0bd65c_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0bd658_data(%edx)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000048(%eax),%eax
		mov    %eax,-0x00003c(%ebp)

	_07d9b0_jump:
		mov    -0x000048(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000008(%edx)
		mov    -0x00004c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000048(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000034(%eax)
		jne    _07daca_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000038(%eax)
		jne    _07daca_jump
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000044(%eax)
		je     _07da62_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd518_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd57c_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd5e0_data,%edx
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _083125_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07da60_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07decf_jump

	_07da60_jump:
		jmp    _07dac8_jump

	_07da62_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd518_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd57c_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0bd5e0_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		imul   $0x00006c,-0x00002c(%ebp),%edx
		mov    _0bdb32_data(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _083125_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07dac8_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07decf_jump

	_07dac8_jump:
		jmp    _07dafa_jump

	_07daca_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000038(%eax),%ax
		mov    %ax,-0x000068(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    %eax,-0x00006c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    %ax,-0x000070(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00003c(%eax),%eax
		mov    %eax,-0x000074(%ebp)

	_07dafa_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000002,_0bdb07_data(%eax)
		je     _07db2f_jump
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _082a54_func
		add    $0x000020,%esp

	_07db2f_jump:
		mov    -0x000068(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000038(%edx)
		mov    -0x00006c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000034(%edx)
		mov    -0x000070(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000040(%edx)
		mov    -0x000074(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00003c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000068(%ebp),%eax
		mov    %ax,_0bd594_data(%edx)
		mov    -0x00006c(%ebp),%eax
		mov    %eax,_0bd590_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000070(%ebp),%eax
		mov    %ax,_0bd5b2_data(%edx)
		mov    -0x000074(%ebp),%eax
		mov    %eax,_0bd5ae_data(%edx)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd608_data(%eax)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    -0x000038(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bdd52_data(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    $_0be398_data,%eax
		push   %eax
		pushl  -0x00002c(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x000004(%ebp)
		movzwl -0x000048(%ebp),%eax
		push   %eax
		pushl  -0x00004c(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _082803_func
		add    $0x000028,%esp
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0be39c_data,%dx
		mov    _0be398_data,%ebx
		mov    %dx,_0bd6b6_data(%eax)
		mov    %ebx,_0bd6b2_data(%eax)
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0be3a4_data,%dx
		mov    _0be3a0_data,%ebx
		mov    %dx,_0bda94_data(%eax)
		mov    %ebx,_0bda90_data(%eax)
		mov    _0be3ac_data,%ax
		mov    %ax,-0x000050(%ebp)
		mov    _0be3a8_data,%eax
		mov    %eax,-0x000054(%ebp)
		movzwl -0x000050(%ebp),%eax
		push   %eax
		pushl  -0x000054(%ebp)
		imul   $0x0000c0,-0x00002c(%ebp),%eax
		mov    $_0bd6d0_data,%edx
		add    %edx,%eax
		push   %eax
		call   _0825c4_func
		add    $0x00000c,%esp
		jmp    _07dc6a_jump

	_07dc53_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		movw   $0x000000,_0bd6b6_data(%eax)
		movl   $0x000000,_0bd6b2_data(%eax)

	_07dc6a_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0bd6b6_data(%eax),%dx
		mov    _0bd6b2_data(%eax),%ebx
		lgs    0x000014(%ebp),%eax
		mov    %dx,%gs:0x000020(%eax)
		lgs    0x000014(%ebp),%eax
		mov    %ebx,%gs:0x00001c(%eax)
		lgs    -0x00007c(%ebp),%eax
		pushl  %gs:0x000008(%eax)
		call   _08292b_func
		add    $0x000004,%esp
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    -0x00003c(%ebp),%eax
		mov    %eax,_0bd676_data(%ebx)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000040(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000020(%ebp)
		mov    -0x000038(%ebp),%al
		mov    -0x00002c(%ebp),%edx
		mov    %al,_0bdd72_data(%edx)
		pushl  -0x000020(%ebp)
		pushl  -0x00001c(%ebp)
		pushl  -0x000018(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x00000c(%ebp)
		pushl  -0x000040(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _082856_func
		add    $0x000028,%esp
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _0828da_func
		add    $0x000010,%esp
		pushl  -0x000014(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _0828b4_func
		add    $0x000014,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bd676_data(%eax),%eax
		mov    %eax,-0x00003c(%ebp)
		pushl  -0x000004(%ebp)
		pushl  -0x00003c(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _08288b_func
		add    $0x000018,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd5f4_data(%eax)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd61c_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:(%ebx),%ebx
		mov    %ebx,_0bdd77_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000008(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%ebx
		mov    %dx,_0bdd7f_data(%eax)
		mov    %ebx,_0bdd7b_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00000c(%ebx),%ebx
		mov    %ebx,_0bdd83_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000010(%ebx),%ebx
		mov    %ebx,_0bdd87_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0bdd8b_data(%ebx)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000018(%ebx),%ebx
		mov    %ebx,_0bdd8f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000020(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00001c(%ebx),%ebx
		mov    %dx,_0bdd97_data(%eax)
		mov    %ebx,_0bdd93_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000028(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000024(%ebx),%ebx
		mov    %dx,_0bdd9f_data(%eax)
		mov    %ebx,_0bdd9b_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000038(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000034(%ebx),%ebx
		mov    %dx,_0bddaf_data(%eax)
		mov    %ebx,_0bddab_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000030(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		mov    %dx,_0bdda7_data(%eax)
		mov    %ebx,_0bdda3_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000040(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00003c(%ebx),%ebx
		mov    %dx,_0bddb7_data(%eax)
		mov    %ebx,_0bddb3_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %edx,_0bddbb_data(%eax)
		mov    -0x00002c(%ebp),%eax
		lgs    0x00001c(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000024(%ebp)

	_07decf_jump:
		mov    -0x000024(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000010



_07ded9_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000028,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bd5f4_data(%eax)
		jne    _07df09_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _07e0e9_jump

	_07df09_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bd61c_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bd69e_data(%eax)
		jae    _07dfc6_jump
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0be370_data(%eax)
		je     _07df44_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jne    _07df49_jump

	_07df44_jump:
		jmp    _07dfc6_jump

	_07df49_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd65c_data(%edx),%ax
		mov    %ax,-0x00001c(%ebp)
		mov    _0bd658_data(%edx),%eax
		mov    %eax,-0x000020(%ebp)
		call   _082ab4_func
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _07dfa0_jump
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0bd676_data(%ebx),%ecx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0bd68a_data(%ebx),%esi
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%eax
		mov    %ecx,%ebx
		mov    %esi,%edx
		call   _07e2ed_func
		jmp    _07dfb6_jump

	_07dfa0_jump:
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%ebx
		push   %ebx
		call   _08262a_func
		add    $0x000004,%esp

	_07dfb6_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be370_data(%eax)

	_07dfc6_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd530_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0bd52c_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd54e_data(%edx),%ax
		mov    %ax,-0x000014(%ebp)
		mov    _0bd54a_data(%edx),%eax
		mov    %eax,-0x000018(%ebp)
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _0826d8_func
		add    $0x000010,%esp
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _0827e0_func
		add    $0x000010,%esp
		mov    -0x000010(%ebp),%eax
		movzbl _0bdd72_data(%eax),%eax
		push   %eax
		call   _082960_func
		add    $0x000004,%esp
		cmpl   $0x000000,-0x000008(%ebp)
		je     _07e04f_jump
		mov    -0x000010(%ebp),%eax
		call   _08304d_func
		mov    -0x000010(%ebp),%eax
		call   _0832ff_func

	_07e04f_jump:
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd530_data(%eax)
		movl   $0x000000,_0bd52c_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd54e_data(%eax)
		movl   $0x000000,_0bd54a_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd6b6_data(%eax)
		movl   $0x000000,_0bd6b2_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd594_data(%eax)
		movl   $0x000000,_0bd590_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd5b2_data(%eax)
		movl   $0x000000,_0bd5ae_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bdab2_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bd5f4_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_07e0e9_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07e0f1_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		call   _082ab4_func
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _07e15f_jump
		lea    -0x000014(%ebp),%ebx
		lea    -0x000010(%ebp),%edx
		lea    -0x000028(%ebp),%eax
		call   _07e1d1_func
		test   %eax,%eax
		je     _07e140_jump
		movw   $0x000000,-0x00002c(%ebp)
		movl   $0x000000,-0x000030(%ebp)
		jmp    _07e1c6_jump

	_07e140_jump:
		mov    -0x000014(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000010(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x000030(%ebp)
		jmp    _07e1c6_jump

	_07e15f_jump:
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _0825f4_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)

	_07e181_jump:
		mov    -0x000004(%ebp),%edx
		and    $0x00ffff,%edx
		mov    $0x00ffff,%eax
		sub    -0x00001c(%ebp),%eax
		cmp    %eax,%edx
		jbe    _07e1ba_jump
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _0825f4_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _07e181_jump

	_07e1ba_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07e1c6_jump:
		mov    -0x00002c(%ebp),%edx
		mov    -0x000030(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07e1d1_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00002c,%esp
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		mov    -0x000024(%ebp),%eax
		movw   $0x000000,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000010(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000020(%ebp),%eax
		movl   $0x000000,(%eax)
		movl   $0x000000,-0x000004(%ebp)
		lea    -0x000004(%ebp),%eax
		push   %eax
		lea    -0x00000c(%ebp),%eax
		push   %eax
		push   $0x000020
		call   _082ad1_func
		add    $0x00000c,%esp
		test   %eax,%eax
		je     _07e241_jump
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _07e2e5_jump

	_07e241_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x000028(%ebp)
		mov    %edx,-0x00002c(%ebp)
		lgs    -0x00002c(%ebp),%edx
		movl   $0x001000,%gs:(%edx)
		pushl  -0x000004(%ebp)
		call   _082b40_func
		add    $0x000004,%esp
		mov    %eax,-0x000018(%ebp)
		push   $0x000010
		mov    -0x000028(%ebp),%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ds,%esi
		mov    $_0be388_data,%ecx
		mov    %esi,%eax
		mov    %ecx,%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _083495_func
		pushl  -0x000004(%ebp)
		pushl  -0x00000c(%ebp)
		call   _082b12_func
		add    $0x000008,%esp
		cmpl   $0x000000,-0x000018(%ebp)
		jne    _07e2de_jump
		andw   $0x00f000,_0be394_data
		pushl  _0be394_data
		call   _082bf9_func
		add    $0x000004,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    _0be394_data,%eax
		mov    %eax,-0x000014(%ebp)
		xor    %ebx,%ebx
		mov    -0x00000c(%ebp),%edx
		mov    -0x000024(%ebp),%eax
		mov    %dx,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		mov    %ebx,(%eax)
		mov    -0x000014(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _07e2e5_jump

	_07e2de_jump:
		movl   $0x000005,-0x00001c(%ebp)

	_07e2e5_jump:
		mov    -0x00001c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07e2ed_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00001c,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000004(%ebp)
		pushl  -0x000010(%ebp)
		call   _082c79_func
		add    $0x000004,%esp
		lea    -0x00000c(%ebp),%edx
		push   %edx
		lea    -0x000008(%ebp),%edx
		push   %edx
		push   $0x000020
		call   _082ad1_func
		add    $0x00000c,%esp
		xor    %edx,%edx
		mov    -0x000008(%ebp),%eax
		mov    %ax,-0x000018(%ebp)
		mov    %edx,-0x00001c(%ebp)
		push   $0x000010
		mov    %ds,%edx
		mov    $_0be388_data,%esi
		mov    %edx,%ebx
		mov    %esi,%edx
		mov    -0x000018(%ebp),%eax
		mov    -0x00001c(%ebp),%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _083495_func
		pushl  -0x00000c(%ebp)
		call   _082bac_func
		add    $0x000004,%esp
		pushl  -0x00000c(%ebp)
		pushl  -0x000008(%ebp)
		call   _082b12_func
		add    $0x000008,%esp
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07e369_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e37e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e393_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd530_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0bd52c_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bd69e_data(%eax)
		jb     _07e3fa_jump
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		mov    %ax,-0x000014(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		jmp    _07e99d_jump

	_07e3fa_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07e401_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _07e411_jump
		jmp    _07e994_jump

	_07e40c_jump:
		incl   -0x000004(%ebp)
		jmp    _07e401_jump

	_07e411_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _07e98f_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000004(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000004(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x00000c(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x000008(%eax)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%edx
		mov    %eax,%ebx
		lgs    -0x000020(%ebp),%eax
		add    %gs:0x000030(%eax),%edx
		mov    %ebx,%eax
		mov    %eax,%ebx
		mov    %edx,%ecx
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%eax
		mov    %bx,%gs:0x000014(%eax)
		mov    %ecx,%gs:0x000010(%eax)
		lgs    -0x000020(%ebp),%eax
		testb  $0x000040,%gs:0x000028(%eax)
		je     _07e5b3_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000020(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		add    %gs:0x000034(%edx),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		sub    %eax,%ebx
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		mov    %ebx,%gs:0x00002c(%edx)
		jmp    _07e60d_jump

	_07e5b3_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)

	_07e60d_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000014(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000032(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000018(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000034(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000028(%eax),%dx
		or     $0x0000a0,%dh
		imul   $0x0000c0,-0x000010(%ebp),%ebx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %ebx,%eax
		lgs    _0bd6d0_data(%eax),%eax
		mov    %dx,%gs:0x000030(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000010(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000036(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000020(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x00001c(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000040(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x00003c(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00000c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000038(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000024(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00004a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movw   $0x000000,%gs:0x00003a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000038(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000044(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movw   $0x000000,%gs:0x000048(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movl   $0x000000,%gs:0x00004c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000050(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000054(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000044(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000056(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000048(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000058(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00004c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000050(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000054(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005e(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd6d4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd6d0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000058(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000060(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movl   $0x000000,%gs:0x000064(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movw   $0x000000,%gs:0x000068(%edx)
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _07e9a4_jump

	_07e98f_jump:
		jmp    _07e40c_jump

	_07e994_jump:
		movl   $0xffffffff,-0x000008(%ebp)
		jmp    _07e9a4_jump

	_07e99d_jump:
		movl   $0x000000,-0x000008(%ebp)

	_07e9a4_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_07e9ac_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _07ea4a_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _07ea02_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		testb  $0x000010,%gs:0x000031(%edx)
		je     _07ea04_jump

	_07ea02_jump:
		jmp    _07ea41_jump

	_07ea04_jump:
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%eax
		andb   $0x00007f,%gs:0x000031(%eax)
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movw   $0x000000,%gs:0x000034(%edx)
		movl   $0x000000,-0x000004(%ebp)
		jmp    _07ea51_jump

	_07ea41_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _07ea51_jump

	_07ea4a_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_07ea51_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07edd1_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ede6_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ee27_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _07ee94_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movswl %gs:0x000032(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000032(%edx)
		jmp    _07ee9d_jump

	_07ee94_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _07eea3_jump

	_07ee9d_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_07eea3_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07f0ca_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _07f137_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movswl %gs:0x000054(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000054(%edx)
		jmp    _07f140_jump

	_07f137_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _07f146_jump

	_07f140_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_07f146_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07f455_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f46a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f47f_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _07f4c8_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd6d0_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _07f4bf_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _07f4cf_jump

	_07f4bf_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _07f4cf_jump

	_07f4c8_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_07f4cf_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07f555_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07f56a_jump:
		sub    %edx,%edx
		sub    %eax,%eax
		ret    

	_07f56f_jump:
		mov    $0x000083,%eax
		call   _080768_func
		jmp    _07f58c_jump

	_07f57b_jump:
		push   %eax
		call   _080745_func
		mov    $0x000084,%eax
		call   _080768_func
		pop    %eax

	_07f58c_jump:
		and    $0x80000000,%eax
		or     $0x7ff00000,%eax
		mov    %eax,%edx
		sub    %eax,%eax
		ret    



_07f5c3_func:
		push   %ebx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    (%ebx),%edx
		call   _07a930_func
		incl   0x000010(%ebx)
		pop    %ebx
		ret    



_07f5d4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0x00000c(%eax),%ebp
		mov    0x00000c(%eax),%ah
		mov    0x000008(%esi),%ecx
		and    $0x0000cf,%ah
		and    $0x000030,%ebp
		mov    %ah,0x00000c(%esi)
		test   %ecx,%ecx
		jne    _07f5f7_jump
		mov    %esi,%eax
		call   _080946_func

	_07f5f7_jump:
		mov    0x00000d(%esi),%cl
		xor    %edi,%edi
		test   $0x000004,%cl
		je     _07f615_jump
		mov    %cl,%ch
		and    $0x0000fa,%ch
		mov    %ch,%al
		mov    %ch,0x00000d(%esi)
		or     $0x000001,%al
		mov    $0x000001,%edi
		mov    %al,0x00000d(%esi)

	_07f615_jump:
		mov    $_07f5c3_func,%ecx
		mov    %esi,%eax
		call   _07fa93_func
		mov    %eax,%edx
		test   %edi,%edi
		je     _07f63f_jump
		mov    0x00000d(%esi),%ah
		and    $0x0000fa,%ah
		mov    %ah,%bl
		mov    %ah,0x00000d(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x00000d(%esi)
		call   _0809dc_func

	_07f63f_jump:
		testb  $0x000020,0x00000c(%esi)
		je     _07f64a_jump
		mov    $0xffffffff,%edx

	_07f64a_jump:
		mov    0x00000c(%esi),%edi
		or     %ebp,%edi
		mov    %edx,%eax
		mov    %edi,0x00000c(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07f659_func:
		ret    



_07f65a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		mov    %eax,%ebx

	_07f668_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		cmp    %eax,%ebx
		je     _07f668_jump
		xor    %esi,%esi
		mov    %al,%bl

	_07f678_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		inc    %esi
		cmp    %dh,%bl
		je     _07f678_jump
		mov    %esi,_0dee30_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07f68c_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		test   %eax,%eax
		je     _07f6bf_jump
		imul   _0dee30_data,%eax
		mov    $0x0003e8,%esi
		add    $0x0001f4,%eax
		xor    %edx,%edx
		div    %esi
		mov    %eax,%esi
		test   %eax,%eax
		jne    _07f6b2_jump
		lea    0x000001(%eax),%esi

	_07f6b2_jump:
		xor    %eax,%eax
		mov    %al,%bl

	_07f6b6_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		cmp    %dh,%bl
		dec    %esi
		jne    _07f6b6_jump

	_07f6bf_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f6d0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %dl,%al
		call   _08075c_func
		cmp    $0x000100,%edx
		jae    _07f71f_jump
		cmpb   $0x000003,_0bd42b_data
		jb     _07f709_jump
		cmp    $0x000050,%dl
		jne    _07f6f9_jump
		mov    $0x00000e,%bl
		jmp    _07f709_jump

	_07f6f9_jump:
		cmp    $0x000022,%dl
		jb     _07f702_jump
		mov    $0x000013,%bl
		jmp    _07f709_jump

	_07f702_jump:
		cmp    $0x000020,%dl
		jb     _07f709_jump
		mov    $0x000005,%bl

	_07f709_jump:
		cmp    $0x000013,%bl
		jbe    _07f710_jump
		mov    $0x000013,%bl

	_07f710_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0bd431_data(%edx),%eax
		sar    $0x000018,%eax
		jmp    _07f729_jump

	_07f71f_jump:
		mov    %edx,%eax
		shr    $0x000008,%eax
		and    $0x0000ff,%eax

	_07f729_jump:
		call   _080739_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    



_07f736_func:
		push   %edx
		push   %ebp
		mov    %esp,%ebp
		mov    _0bd40c_data,%edx
		add    $0x000003,%edx
		and    $0x0000fc,%dl
		call   _083541_func
		cmp    %eax,%edx
		jae    _07f757_jump
		mov    %edx,%eax
		sub    %eax,%esp
		mov    %esp,%eax
		jmp    _07f759_jump

	_07f757_jump:
		xor    %eax,%eax

	_07f759_jump:
		mov    _0bd40c_data,%edx
		add    %edx,%eax
		mov    %eax,_0bd410_data
		call   _08354a_func
		mov    _0dee40_data,%edx
		mov    _0dee3c_data,%eax
		call   _018334_func
		call   _079d2c_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edx
		ret    



_07f786_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %edx
		push   %es
		mov    %eax,%edx

	_07f78d_jump:
		ds mov $_0c117c_data,%esi
		ds mov $_0c11a6_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_07f79d_jump:
		cmp    %edi,%esi
		jae    _07f7b5_jump
		cmpb   $0x000002,(%esi)
		je     _07f7b0_jump
		cmp    %al,0x000001(%esi)
		ja     _07f7b0_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_07f7b0_jump:
		add    $0x000006,%esi
		jmp    _07f79d_jump

	_07f7b5_jump:
		cmp    %edi,%ebx
		je     _07f7cb_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _07f7c6_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_07f7c6_jump:
		movb   $0x000002,(%ebx)
		jmp    _07f78d_jump

	_07f7cb_jump:
		pop    %es
		pop    %edx
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_07f7d1_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %es
		mov    %dl,%dh
		mov    %al,%dl

	_07f7d9_jump:
		ds mov $_0c11a6_data,%esi
		ds mov $_0c11ac_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_07f7e9_jump:
		cmp    %edi,%esi
		jae    _07f801_jump
		cmpb   $0x000002,(%esi)
		je     _07f7fc_jump
		cmp    0x000001(%esi),%al
		ja     _07f7fc_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_07f7fc_jump:
		add    $0x000006,%esi
		jmp    _07f7e9_jump

	_07f801_jump:
		cmp    %edi,%ebx
		je     _07f81b_jump
		cmp    %dh,%al
		ja     _07f816_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _07f816_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_07f816_jump:
		movb   $0x000002,(%ebx)
		jmp    _07f7d9_jump

	_07f81b_jump:
		pop    %es
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_07f820_func:
		push   %ebx
		push   %edx
		mov    $_083555_func,%edx
		mov    $_08367a_func,%ebx
		mov    %edx,_0bf560_data
		mov    %ebx,_0bf564_data
		pop    %edx
		pop    %ebx
		ret    



_07f83b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %esp,%ebx
		mov    _0bd3f8_data,%eax
		xor    %edx,%edx
		call   _07f8f8_func
		mov    (%esp),%ecx
		lea    0x000001(%eax),%ebp
		mov    _0bd3f8_data,%edx
		mov    %ebp,%eax
		sub    %edx,%ecx
		shl    $0x000002,%eax
		inc    %ecx
		mov    %eax,0x000004(%esp)
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _07b866_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _07f8d4_jump
		mov    _0bd3f8_data,%esi
		add    %ecx,%eax
		mov    %edx,%edi
		mov    %eax,_0bd1a4_data
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    _0bd1a4_data,%ecx
		mov    _0bd3fc_data,%eax
		mov    %esp,%ebx
		mov    %eax,(%ecx)
		add    $0x000004,%ecx
		mov    %edx,%eax
		mov    %ecx,%edx
		mov    0x000004(%esp),%esi
		call   _07f8f8_func
		mov    _0bd1a4_data,%edx
		add    %esi,%edx
		mov    %ebp,_0bd1a0_data
		movl   $0x000000,(%edx)
		jmp    _07f8de_jump

	_07f8d4_jump:
		mov    %eax,_0bd1a4_data
		mov    %eax,_0bd1a0_data

	_07f8de_jump:
		mov    _0bd1a4_data,%eax
		mov    %ebp,_0dee3c_data
		mov    %eax,_0dee40_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f8f8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %ebx,0x000004(%esp)
		xor    %ecx,%ecx

	_07f907_jump:
		mov    (%eax),%dl
		cmp    $0x000020,%dl
		je     _07f913_jump
		cmp    $0x000009,%dl
		jne    _07f916_jump

	_07f913_jump:
		inc    %eax
		jmp    _07f907_jump

	_07f916_jump:
		test   %dl,%dl
		je     _07f9d1_jump
		cmp    $0x000022,%dl
		jne    _07f962_jump
		inc    %eax
		mov    %eax,(%esp)
		mov    %eax,%edx

	_07f929_jump:
		mov    (%eax),%bh
		cmp    $0x000022,%bh
		je     _07f997_jump
		test   %bh,%bh
		je     _07f997_jump
		cmp    $0x00005c,%bh
		jne    _07f94e_jump
		mov    0x000001(%eax),%bl
		cmp    $0x000022,%bl
		je     _07f94d_jump
		cmp    %bh,%bl
		jne    _07f94e_jump

	_07f94d_jump:
		inc    %eax

	_07f94e_jump:
		lea    0x000001(%eax),%ebx
		test   %esi,%esi
		je     _07f95e_jump
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    _07f929_jump

	_07f95e_jump:
		mov    %ebx,%eax
		jmp    _07f929_jump

	_07f962_jump:
		mov    %eax,(%esp)
		mov    %eax,%edx

	_07f967_jump:
		mov    (%eax),%bl
		test   %bl,%bl
		je     _07f997_jump
		cmp    $0x000020,%bl
		je     _07f997_jump
		cmp    $0x000009,%bl
		je     _07f997_jump
		cmp    $0x00005c,%bl
		jne    _07f983_jump
		cmpb   $0x000022,0x000001(%eax)
		jne    _07f983_jump
		inc    %eax

	_07f983_jump:
		lea    0x000001(%eax),%ebx
		test   %esi,%esi
		je     _07f993_jump
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    _07f967_jump

	_07f993_jump:
		mov    %ebx,%eax
		jmp    _07f967_jump

	_07f997_jump:
		lea    0x000001(%eax),%ebp
		lea    0x000001(%ecx),%edi
		test   %esi,%esi
		je     _07f9c2_jump
		shl    $0x000002,%ecx
		lea    (%esi,%ecx,1),%ebx
		mov    (%esp),%ecx
		mov    %ecx,(%ebx)
		mov    (%eax),%bl
		mov    %edi,%ecx
		test   %bl,%bl
		jne    _07f9b8_jump
		mov    %bl,(%edx)
		jmp    _07f9d1_jump

	_07f9b8_jump:
		mov    %ebp,%eax
		movb   $0x000000,(%edx)
		jmp    _07f907_jump

	_07f9c2_jump:
		mov    (%eax),%dl
		mov    %edi,%ecx
		test   %dl,%dl
		je     _07f9d1_jump
		mov    %ebp,%eax
		jmp    _07f907_jump

	_07f9d1_jump:
		mov    0x000004(%esp),%edx
		mov    %eax,(%edx)
		mov    %ecx,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07f9f0_func:
		or     %ecx,%ecx
		je     _07fa20_jump
		cmp    %dl,(%eax)

	_07f9f6_jump:
		test   $0x000003,%al
		je     _07fa03_jump
		mov    %dl,(%eax)
		inc    %eax
		ror    $0x000008,%edx
		dec    %ecx
		jne    _07f9f6_jump

	_07fa03_jump:
		push   %ecx
		shr    $0x000002,%ecx
		call   _07fa27_func
		pop    %ecx
		and    $0x000003,%ecx
		je     _07fa20_jump
		mov    %dl,(%eax)
		dec    %ecx
		je     _07fa20_jump
		mov    %dh,0x000001(%eax)
		dec    %ecx
		je     _07fa20_jump
		mov    %dl,0x000002(%eax)

	_07fa20_jump:
		ret    



_07fa27_func:
		or     %ecx,%ecx
		je     _07fa92_jump

	_07fa2b_jump:
		test   $0x00001f,%al
		je     _07fa37_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		jne    _07fa2b_jump

	_07fa37_jump:
		push   %ecx
		shr    $0x000002,%ecx
		je     _07fa77_jump
		dec    %ecx
		je     _07fa69_jump

	_07fa40_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		dec    %ecx
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		je     _07fa66_jump
		cmp    %dl,0x000020(%eax)
		mov    %edx,0x000010(%eax)
		mov    %edx,0x000014(%eax)
		dec    %ecx
		mov    %edx,0x000018(%eax)
		mov    %edx,0x00001c(%eax)
		lea    0x000020(%eax),%eax
		jne    _07fa40_jump
		lea    -0x000010(%eax),%eax

	_07fa66_jump:
		lea    0x000010(%eax),%eax

	_07fa69_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		lea    0x000010(%eax),%eax

	_07fa77_jump:
		pop    %ecx
		and    $0x000003,%ecx
		je     _07fa92_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _07fa92_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _07fa92_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax

	_07fa92_jump:
		ret    



_07fa93_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x00004c,%esp
		mov    %ebx,%esi
		mov    %ecx,0x000044(%esp)
		xor    %bl,%bl
		mov    %eax,0x000028(%esp)
		mov    %bl,0x000048(%esp)
		mov    %bl,0x00003c(%esp)
		xor    %ebx,%ebx
		mov    %edx,%edi
		mov    %ebx,0x000038(%esp)
		mov    $0x000004,%ebp
		jmp    _07fb16_jump

	_07fabd_jump:
		lea    0x000028(%esp),%ebx
		mov    %esi,%edx
		call   _07fd14_func
		mov    %eax,%edi
		mov    (%eax),%al
		inc    %edi
		mov    %al,0x00003d(%esp)
		test   %al,%al
		je     _07fd08_jump
		cmp    $0x00006e,%al
		jne    _07fbb8_jump
		mov    0x00003c(%esp),%bl
		test   $0x000020,%bl
		je     _07fb43_jump
		test   $0x000080,%bl
		je     _07fb02_jump
		mov    (%esi),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%esi)
		les    -0x000008(%ecx),%edx

	_07faf9_jump:
		mov    0x000038(%esp),%eax
		mov    %eax,%es:(%edx)
		jmp    _07fb16_jump

	_07fb02_jump:
		test   $0x000040,%bl
		je     _07fb38_jump
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx

	_07fb10_jump:
		mov    0x000038(%esp),%eax
		mov    %eax,(%edx)

	_07fb16_jump:
		mov    (%edi),%cl
		test   %cl,%cl
		je     _07fd08_jump
		lea    0x000001(%edi),%eax
		cmp    $0x000025,%cl
		je     _07fabd_jump
		mov    %eax,%edi
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %cl,%dl
		call   *0x000044(%esp)
		jmp    _07fb16_jump

	_07fb38_jump:
		mov    (%esi),%edx
		add    %ebp,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		jmp    _07fb10_jump

	_07fb43_jump:
		test   $0x000010,%bl
		je     _07fb83_jump
		test   $0x000080,%bl
		je     _07fb61_jump
		mov    (%esi),%eax
		add    $0x000008,%eax
		mov    %eax,(%esi)
		les    -0x000008(%eax),%edx
		mov    0x000038(%esp),%eax
		mov    %ax,%es:(%edx)
		jmp    _07fb16_jump

	_07fb61_jump:
		test   $0x000040,%bl
		je     _07fb78_jump
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx

	_07fb6f_jump:
		mov    0x000038(%esp),%eax
		mov    %ax,(%edx)
		jmp    _07fb16_jump

	_07fb78_jump:
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx
		jmp    _07fb6f_jump

	_07fb83_jump:
		test   $0x000080,%bl
		je     _07fb97_jump
		mov    (%esi),%edx
		add    $0x000008,%edx
		mov    %edx,(%esi)
		les    -0x000008(%edx),%edx
		jmp    _07faf9_jump

	_07fb97_jump:
		test   $0x000040,%bl
		je     _07fbaa_jump
		mov    (%esi),%eax
		add    %ebp,%eax
		mov    %eax,(%esi)
		mov    -0x000004(%eax),%edx
		jmp    _07fb10_jump

	_07fbaa_jump:
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx
		jmp    _07fb10_jump

	_07fbb8_jump:
		mov    %esp,%eax
		lea    0x000028(%esp),%ebx
		lea    0x000048(%esp),%ecx
		mov    %esi,%edx
		call   _08002c_func
		mov    %edx,%es
		mov    0x00003c(%esp),%dl
		mov    %eax,%ebx
		test   $0x000008,%dl
		jne    _07fbfa_jump
		cmpb   $0x000020,0x00003e(%esp)
		jne    _07fbfa_jump

	_07fbdd_jump:
		mov    0x00002c(%esp),%eax
		dec    %eax
		mov    %eax,0x00002c(%esp)
		test   %eax,%eax
		jl     _07fbfa_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    0x00003e(%esp),%dl
		call   *0x000044(%esp)
		jmp    _07fbdd_jump

	_07fbfa_jump:
		lea    0x00003f(%esp),%ecx

	_07fbfe_jump:
		mov    (%ecx),%al
		test   %al,%al
		je     _07fc13_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000028(%esp),%eax
		inc    %ecx
		call   *0x000044(%esp)
		jmp    _07fbfe_jump

	_07fc13_jump:
		mov    0x000034(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000034(%esp)
		test   %eax,%eax
		je     _07fc31_jump
		lea    0x000028(%esp),%eax
		mov    $0x000030,%edx
		call   *0x000044(%esp)
		jmp    _07fc13_jump

	_07fc31_jump:
		testb  $0x000008,0x00003c(%esp)
		jne    _07fc5c_jump
		cmpb   $0x000020,0x00003e(%esp)
		je     _07fc5c_jump

	_07fc3f_jump:
		mov    0x00002c(%esp),%eax
		dec    %eax
		mov    %eax,0x00002c(%esp)
		test   %eax,%eax
		jl     _07fc5c_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    0x00003e(%esp),%dl
		call   *0x000044(%esp)
		jmp    _07fc3f_jump

	_07fc5c_jump:
		mov    0x00003d(%esp),%dh
		cmp    $0x000073,%dh
		je     _07fc6a_jump
		cmp    $0x000053,%dh
		jne    _07fcb1_jump

	_07fc6a_jump:
		testb  $0x000020,0x00003c(%esp)
		je     _07fc92_jump

	_07fc71_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000030(%esp)
		test   %eax,%eax
		je     _07fcd0_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		add    $0x000002,%ebx
		jmp    _07fc71_jump

	_07fc92_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x000030(%esp)
		test   %eax,%eax
		je     _07fcd0_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		inc    %ebx
		jmp    _07fc92_jump

	_07fcb1_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000030(%esp)
		test   %eax,%eax
		je     _07fcd0_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		inc    %ebx
		jmp    _07fcb1_jump

	_07fcd0_jump:
		testb  $0x000008,0x00003c(%esp)
		je     _07fb16_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _07fb16_jump

	_07fce6_jump:
		mov    0x00002c(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x00002c(%esp)
		test   %eax,%eax
		je     _07fb16_jump
		lea    0x000028(%esp),%eax
		mov    $0x000020,%edx
		call   *0x000044(%esp)
		jmp    _07fce6_jump

	_07fd08_jump:
		mov    0x000038(%esp),%eax
		add    $0x00004c,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_07fd14_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		movb   $0x000000,0x000017(%ebx)
		mov    %ebx,%edx
		movb   $0x000020,0x000016(%ebx)
		call   _07fe47_func
		movl   $0x000000,0x000004(%ebx)
		mov    (%eax),%cl
		mov    %eax,%edx
		cmp    $0x000030,%cl
		jb     _07fd5c_jump
		cmp    $0x000039,%cl
		ja     _07fd5c_jump

	_07fd3d_jump:
		imul   $0x00000a,0x000004(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x000030,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x000004(%ebx)
		mov    (%eax),%cl
		cmp    $0x000030,%cl
		jb     _07fd83_jump
		cmp    $0x000039,%cl
		jbe    _07fd3d_jump
		jmp    _07fd83_jump

	_07fd5c_jump:
		cmpb   $0x00002a,(%eax)
		jne    _07fd83_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000004(%ebx)
		test   %edx,%edx
		jge    _07fd82_jump
		mov    %edx,%edi
		mov    0x000014(%ebx),%dh
		neg    %edi
		or     $0x000008,%dh
		mov    %edi,0x000004(%ebx)
		mov    %dh,0x000014(%ebx)

	_07fd82_jump:
		inc    %eax

	_07fd83_jump:
		movl   $0xffffffff,0x000008(%ebx)
		cmpb   $0x00002e,(%eax)
		jne    _07fdd6_jump
		inc    %eax
		movl   $0x000000,0x000008(%ebx)
		cmpb   $0x00002a,(%eax)
		jne    _07fdb7_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000008(%ebx)
		test   %edx,%edx
		jge    _07fdb4_jump
		movl   $0xffffffff,0x000008(%ebx)

	_07fdb4_jump:
		inc    %eax
		jmp    _07fdd6_jump

	_07fdb7_jump:
		mov    (%eax),%cl
		cmp    $0x000030,%cl
		jb     _07fdd6_jump
		cmp    $0x000039,%cl
		ja     _07fdd6_jump
		imul   $0x00000a,0x000008(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x000030,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x000008(%ebx)
		jmp    _07fdb7_jump

	_07fdd6_jump:
		mov    (%eax),%cl
		lea    0x000001(%eax),%edx
		cmp    $0x00004e,%cl
		jb     _07fdfb_jump
		jbe    _07fe38_jump
		cmp    $0x00006c,%cl
		jb     _07fdf2_jump
		jbe    _07fe0b_jump
		cmp    $0x000077,%cl
		je     _07fe0b_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07fdf2_jump:
		cmp    $0x000068,%cl
		je     _07fe19_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07fdfb_jump:
		cmp    $0x000046,%cl
		jb     _07fe43_jump
		jbe    _07fe32_jump
		cmp    $0x00004c,%cl
		je     _07fe28_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07fe0b_jump:
		mov    0x000014(%ebx),%dl
		or     $0x000020,%dl
		inc    %eax
		mov    %dl,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07fe19_jump:
		mov    0x000014(%ebx),%cl
		or     $0x000010,%cl
		mov    %edx,%eax
		mov    %cl,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07fe28_jump:
		orb    $0x000040,0x000014(%ebx)

	_07fe2c_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07fe32_jump:
		orb    $0x000080,0x000014(%ebx)
		jmp    _07fe2c_jump

	_07fe38_jump:
		mov    0x000014(%ebx),%ch
		or     $0x000040,%ch
		mov    %edx,%eax
		mov    %ch,0x000014(%ebx)

	_07fe43_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07fe47_func:
		push   %ebx
		push   %ecx
		movb   $0x000000,0x000014(%edx)

	_07fe4d_jump:
		mov    (%eax),%bl
		cmp    $0x00002d,%bl
		jne    _07fe5a_jump
		orb    $0x000008,0x000014(%edx)
		jmp    _07fe9c_jump

	_07fe5a_jump:
		cmp    $0x000023,%bl
		jne    _07fe65_jump
		orb    $0x000001,0x000014(%edx)
		jmp    _07fe9c_jump

	_07fe65_jump:
		cmp    $0x00002b,%bl
		jne    _07fe7d_jump
		mov    0x000014(%edx),%ch
		or     $0x000004,%ch
		mov    %ch,%bl
		mov    %ch,0x000014(%edx)
		and    $0x0000fd,%bl
		mov    %bl,0x000014(%edx)
		jmp    _07fe9c_jump

	_07fe7d_jump:
		cmp    $0x000020,%bl
		jne    _07fe94_jump
		mov    0x000014(%edx),%bh
		test   $0x000004,%bh
		jne    _07fe9c_jump
		mov    %bh,%cl
		or     $0x000002,%cl
		mov    %cl,0x000014(%edx)
		jmp    _07fe9c_jump

	_07fe94_jump:
		cmp    $0x000030,%bl
		jne    _07fe9f_jump
		mov    %bl,0x000016(%edx)

	_07fe9c_jump:
		inc    %eax
		jmp    _07fe4d_jump

	_07fe9f_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07fea2_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    %eax,%edx
		xor    %eax,%eax

	_07feae_jump:
		mov    %esi,%es
		mov    %edx,%ebx
		mov    %es:(%ebx),%cl
		inc    %edx
		test   %cl,%cl
		je     _07fec1_jump
		cmp    %edi,%eax
		je     _07fec1_jump
		inc    %eax
		jmp    _07feae_jump

	_07fec1_jump:
		pop    %es
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07fec6_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%ecx
		mov    %ebx,%esi
		mov    %eax,%edx
		xor    %eax,%eax

	_07fed2_jump:
		mov    %ecx,%es
		mov    %edx,%ebx
		mov    %es:(%ebx),%di
		add    $0x000002,%edx
		test   %di,%di
		je     _07fec1_jump
		cmp    %esi,%eax
		je     _07fec1_jump
		inc    %eax
		jmp    _07fed2_jump



_07fee9_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    $0x000010,%ebx
		mov    %ebp,%edi
		call   _07aa5a_func
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    (%esp),%eax
		mov    %ecx,%esi
		mov    %ebp,%edi
		dec    %eax
		lea    (%ecx,%ebp,1),%edx
		lea    (%eax,%ebp,1),%ebx
		jmp    _07ff29_jump

	_07ff21_jump:
		dec    %edx
		dec    %esi
		mov    (%edx),%cl
		dec    %eax
		mov    %cl,(%ebx)
		dec    %ebx

	_07ff29_jump:
		cmp    %edi,%edx
		jne    _07ff21_jump
		lea    (%eax,%ebp,1),%edx

	_07ff30_jump:
		test   %eax,%eax
		jl     _07ff3b_jump
		dec    %eax
		movb   $0x000030,(%edx)
		dec    %edx
		jmp    _07ff30_jump

	_07ff3b_jump:
		add    (%esp),%ebp
		movb   $0x000000,0x000000(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07ff4a_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    _07ff66_jump
		neg    %edx
		lea    0x000001(%eax),%ecx
		movb   $0x00002d,(%eax)
		mov    %edx,(%esp)

	_07ff66_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		jne    _07ff73_jump
		movl   $0x000004,0x000008(%esi)

	_07ff73_jump:
		mov    $0x00000a,%ebx
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x000002(%esp),%ax
		call   _07aa5a_func
		mov    %ecx,%ebx

	_07ff88_jump:
		mov    (%ecx),%ah
		lea    0x000001(%ecx),%edx
		test   %ah,%ah
		je     _07ff95_jump
		mov    %edx,%ecx
		jmp    _07ff88_jump

	_07ff95_jump:
		cmpl   $0x000000,0x000008(%esi)
		je     _07ffc7_jump
		movb   $0x00002e,(%ecx)
		xor    %eax,%eax
		mov    %edx,%ecx
		jmp    _07ffbf_jump

	_07ffa4_jump:
		xor    %edx,%edx
		mov    %dx,0x000002(%esp)
		mov    (%esp),%edi
		imul   $0x00000a,%edi,%edx
		mov    %edx,(%esp)
		mov    0x000002(%esp),%dl
		add    $0x000030,%dl
		inc    %eax
		mov    %dl,(%ecx)
		inc    %ecx

	_07ffbf_jump:
		cmp    0x000008(%esi),%eax
		jl     _07ffa4_jump
		movb   $0x000000,(%ecx)

	_07ffc7_jump:
		testb  $0x000080,0x000001(%esp)
		je     _08001e_jump

	_07ffce_jump:
		cmp    %ebx,%ecx
		jne    _080004_jump
		lea    0x000001(%ebx),%ecx
		movb   $0x000031,(%ebx)

	_07ffd8_jump:
		mov    (%ecx),%dl
		lea    0x000001(%ecx),%eax
		cmp    $0x000030,%dl
		jne    _07ffe6_jump
		mov    %eax,%ecx
		jmp    _07ffd8_jump

	_07ffe6_jump:
		cmp    $0x00002e,%dl
		jne    _07fffb_jump
		movb   $0x000030,(%ecx)
		lea    0x000001(%eax),%ecx
		mov    %dl,(%eax)

	_07fff3_jump:
		cmpb   $0x000030,(%ecx)
		jne    _07fffb_jump
		inc    %ecx
		jmp    _07fff3_jump

	_07fffb_jump:
		movb   $0x000030,(%ecx)
		inc    %ecx
		movb   $0x000000,(%ecx)
		jmp    _08001e_jump

	_080004_jump:
		dec    %ecx
		cmpb   $0x00002e,(%ecx)
		jne    _08000b_jump
		dec    %ecx

	_08000b_jump:
		mov    (%ecx),%al
		cmp    $0x000039,%al
		je     _080019_jump
		mov    %al,%ah
		inc    %ah
		mov    %ah,(%ecx)
		jmp    _08001e_jump

	_080019_jump:
		movb   $0x000030,(%ecx)
		jmp    _07ffce_jump

	_08001e_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_080025_func:
		call   *_0bf560_data
		ret    



_08002c_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		mov    $0x000001,%ebx
		mov    %ds,%eax
		mov    %edi,%ecx
		mov    %ebx,0x000004(%esp)
		mov    %eax,%es
		mov    0x000015(%esi),%al
		movl   $0x000000,0x00000c(%esi)
		cmp    $0x000069,%al
		jb     _08006d_jump
		jbe    _0800ad_jump
		cmp    $0x000075,%al
		jb     _080069_jump
		jbe    _080079_jump
		cmp    $0x000078,%al

	_080065_jump:
		je     _080079_jump
		jmp    _0800b7_jump

	_080069_jump:
		cmp    $0x00006f,%al
		jmp    _080065_jump

	_08006d_jump:
		cmp    $0x000058,%al
		jb     _0800b7_jump
		jbe    _080079_jump
		cmp    $0x000064,%al
		je     _0800ad_jump
		jmp    _0800b7_jump

	_080079_jump:
		mov    0x000014(%esi),%ah
		test   $0x000020,%ah
		je     _08008d_jump
		mov    (%edx),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%edx)
		mov    -0x000004(%ebx),%ebp
		jmp    _0800a9_jump

	_08008d_jump:
		test   $0x000010,%ah
		je     _08009f_jump
		mov    (%edx),%eax
		add    $0x000004,%eax
		mov    %eax,(%edx)
		movzwl -0x000004(%eax),%ebp
		jmp    _0800a9_jump

	_08009f_jump:
		mov    (%edx),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%edx)
		mov    -0x000004(%ebp),%ebp

	_0800a9_jump:
		andb   $0x0000f9,0x000014(%esi)

	_0800ad_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		je     _0800b7_jump
		movb   $0x000020,0x000016(%esi)

	_0800b7_jump:
		mov    0x000015(%esi),%al
		mov    $0x00000a,%ebx
		cmp    $0x000065,%al
		jb     _08011c_jump
		jbe    _08018d_jump
		cmp    $0x00006f,%al
		jb     _080105_jump
		jbe    _0801a1_jump
		cmp    $0x000073,%al
		jb     _0800f8_jump
		jbe    _08021c_jump
		cmp    $0x000075,%al
		jb     _0803b0_jump
		jbe    _0802e5_jump
		cmp    $0x000078,%al
		je     _0802c8_jump
		jmp    _0803b0_jump

	_0800f8_jump:
		cmp    $0x000070,%al
		je     _080304_jump
		jmp    _0803b0_jump

	_080105_jump:
		cmp    $0x000067,%al
		jb     _080163_jump
		jbe    _08018d_jump
		cmp    $0x000069,%al
		je     _0801dc_jump
		jmp    _0803b0_jump

	_08011c_jump:
		cmp    $0x000050,%al
		jb     _080150_jump
		jbe    _080304_jump
		cmp    $0x000058,%al
		jb     _080143_jump
		jbe    _0802c8_jump
		cmp    $0x000063,%al
		jb     _0803b0_jump
		jbe    _080383_jump
		jmp    _0801dc_jump

	_080143_jump:
		cmp    $0x000053,%al
		je     _08021c_jump
		jmp    _0803b0_jump

	_080150_jump:
		cmp    $0x000046,%al
		jb     _08015f_jump
		jbe    _080163_jump
		cmp    $0x000047,%al

	_080158_jump:
		je     _08018d_jump
		jmp    _0803b0_jump

	_08015f_jump:
		cmp    $0x000045,%al
		jmp    _080158_jump

	_080163_jump:
		testb  $0x000010,0x000014(%esi)
		je     _08018d_jump
		mov    (%edx),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%edx)
		mov    %edi,%eax
		mov    -0x000004(%ebx),%edx
		mov    %esi,%ebx
		call   _07ff4a_func
		mov    $0xffffffff,%ebx
		mov    %ds,%eax
		mov    %ds,%edx
		mov    %eax,%es
		mov    %edi,%eax
		mov    %edi,%ecx
		jmp    _0801d2_jump

	_08018d_jump:
		mov    %edi,%eax
		mov    %esi,%ebx
		call   _080025_func
		mov    $0xffffffff,%ebx
		mov    %edx,%es
		mov    %eax,%ecx
		jmp    _0801d2_jump

	_0801a1_jump:
		mov    0x000014(%esi),%al
		mov    $0x000008,%ebx
		test   $0x000001,%al
		je     _0801b1_jump
		movb   $0x000030,(%edi)
		inc    %edi

	_0801b1_jump:
		mov    %ebp,%eax
		mov    %edi,%edx
		call   _07aae3_func

	_0801ba_jump:
		cmpl   $0x000000,0x000008(%esi)
		jne    _0801c9_jump
		cmpb   $0x000030,(%edi)
		jne    _0801c9_jump
		movb   $0x000000,%es:(%ecx)

	_0801c9_jump:
		mov    $0xffffffff,%ebx
		mov    %es,%edx
		mov    %ecx,%eax

	_0801d2_jump:
		call   _07fea2_func
		jmp    _0803da_jump

	_0801dc_jump:
		mov    0x000014(%esi),%al
		test   $0x000020,%al
		je     _0801f6_jump
		mov    (%edx),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%edx)
		mov    %edi,%edx
		mov    -0x000004(%ebp),%eax

	_0801ef_jump:
		call   _07aae3_func
		jmp    _0801ba_jump

	_0801f6_jump:
		test   $0x000010,%al
		je     _080209_jump
		mov    (%edx),%eax
		add    $0x000004,%eax
		mov    %eax,(%edx)
		mov    %edi,%edx
		movswl -0x000004(%eax),%eax
		jmp    _0801ef_jump

	_080209_jump:
		mov    (%edx),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%edx)
		mov    %edi,%edx
		mov    -0x000004(%ebp),%eax
		call   _07aa5a_func
		jmp    _0801ba_jump

	_08021c_jump:
		mov    0x000014(%esi),%ah
		test   $0x000080,%ah
		je     _080246_jump
		mov    (%edx),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%edx)
		mov    -0x000004(%ecx),%dx
		mov    -0x000008(%ecx),%ecx
		test   %ecx,%ecx
		jne    _08023b_jump
		test   %dx,%dx
		je     _08023f_jump

	_08023b_jump:
		mov    %edx,%es
		jmp    _080272_jump

	_08023f_jump:
		mov    %ds,%eax
		mov    (%esp),%ecx
		jmp    _080270_jump

	_080246_jump:
		test   $0x000040,%ah
		je     _08025d_jump
		mov    (%edx),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%edx)
		mov    -0x000004(%ebx),%ecx
		test   %ecx,%ecx
		je     _08023f_jump

	_080259_jump:
		mov    %ds,%eax
		jmp    _080270_jump

	_08025d_jump:
		mov    (%edx),%eax
		add    $0x000004,%eax
		mov    %eax,(%edx)
		mov    -0x000004(%eax),%ecx
		test   %ecx,%ecx
		jne    _080259_jump
		mov    %ds,%eax
		mov    (%esp),%ecx

	_080270_jump:
		mov    %eax,%es

	_080272_jump:
		mov    0x000014(%esi),%bh
		mov    0x000015(%esi),%al
		xor    %edi,%edi
		and    $0x0000f9,%bh
		mov    %edi,0x000004(%esp)
		mov    %bh,0x000014(%esi)
		cmp    $0x000053,%al
		jne    _0802a6_jump
		test   $0x000020,%bh
		je     _08029b_jump
		xor    %eax,%eax
		mov    %es:(%ecx),%ax
		add    $0x000002,%ecx
		jmp    _0803da_jump

	_08029b_jump:
		xor    %eax,%eax
		mov    %es:(%ecx),%al
		inc    %ecx
		jmp    _0803da_jump

	_0802a6_jump:
		test   $0x000020,%bh
		je     _0802bc_jump
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		call   _07fec6_func
		jmp    _0803da_jump

	_0802bc_jump:
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		jmp    _0801d2_jump

	_0802c8_jump:
		testb  $0x000001,0x000014(%esi)
		je     _0802e0_jump
		test   %ebp,%ebp
		je     _0802e0_jump
		movb   $0x000030,0x000017(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000019(%esi)
		mov    %al,0x000018(%esi)

	_0802e0_jump:
		mov    $0x000010,%ebx

	_0802e5_jump:
		mov    %ebp,%eax
		mov    %edi,%edx
		call   _07aa9a_func
		cmpb   $0x000058,0x000015(%esi)
		jne    _0801ba_jump
		mov    %edi,%eax
		call   _080475_func
		jmp    _0801ba_jump

	_080304_jump:
		cmpl   $0x000000,0x000004(%esi)
		jne    _080320_jump
		testb  $0x000080,0x000014(%esi)
		je     _080319_jump
		movl   $0x00000d,0x000004(%esi)
		jmp    _080320_jump

	_080319_jump:
		movl   $0x000008,0x000004(%esi)

	_080320_jump:
		andb   $0x0000f9,0x000014(%esi)
		mov    (%edx),%eax
		add    $0x000004,%eax
		mov    %eax,(%edx)
		mov    0x000014(%esi),%bl
		mov    -0x000004(%eax),%ebp
		test   $0x000080,%bl
		je     _08035f_jump
		add    $0x000004,%eax
		mov    %eax,(%edx)
		mov    $0x000004,%ebx
		mov    -0x000004(%eax),%eax
		mov    %edi,%edx
		and    $0x00ffff,%eax
		call   _07fee9_func
		mov    $0x000008,%ebx
		lea    0x000005(%edi),%edx
		mov    %ebp,%eax
		movb   $0x00003a,0x000004(%edi)
		jmp    _080368_jump

	_08035f_jump:
		mov    $0x000008,%ebx
		mov    %ebp,%eax
		mov    %edi,%edx

	_080368_jump:
		call   _07fee9_func
		cmpb   $0x000050,0x000015(%esi)
		jne    _0801c9_jump
		mov    %edi,%eax
		call   _080475_func
		jmp    _0801c9_jump

	_080383_jump:
		mov    (%edx),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%edx)
		mov    -0x000004(%ebx),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    $0x000001,%eax
		mov    0x000014(%esi),%dh
		xor    %edi,%edi
		and    $0x0000f9,%dh
		mov    %edi,0x000004(%esp)
		mov    %dh,0x000014(%esi)
		jmp    _0803da_jump

	_0803b0_jump:
		movl   $0x000000,0x000004(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    0x000014(%esi),%al
		xor    %edi,%edi
		and    $0x0000f9,%al
		mov    %edi,0x000004(%esp)
		mov    %al,0x000014(%esi)
		mov    $0x000001,%eax

	_0803da_jump:
		cmpl   $0x000000,0x000004(%esp)
		je     _080420_jump
		mov    %es:(%ecx),%dl
		cmp    $0x00002d,%dl
		jne    _0803f4_jump
		inc    %ecx
		movb   $0x000000,0x000018(%esi)
		dec    %eax
		mov    %dl,0x000017(%esi)
		jmp    _08040f_jump

	_0803f4_jump:
		mov    0x000014(%esi),%dh
		test   $0x000002,%dh
		je     _080402_jump
		movb   $0x000020,0x000017(%esi)
		jmp    _08040b_jump

	_080402_jump:
		test   $0x000004,%dh
		je     _08040f_jump
		movb   $0x00002b,0x000017(%esi)

	_08040b_jump:
		movb   $0x000000,0x000018(%esi)

	_08040f_jump:
		mov    0x000008(%esi),%edx
		cmp    %edx,%eax
		jle    _08041b_jump
		mov    %eax,0x000008(%esi)
		jmp    _080420_jump

	_08041b_jump:
		sub    %eax,%edx
		mov    %edx,0x00000c(%esi)

	_080420_jump:
		cmpb   $0x00002a,0x000016(%esi)
		jne    _080433_jump
		mov    0x000014(%esi),%dl
		movb   $0x000000,0x000017(%esi)
		and    $0x0000f9,%dl
		mov    %dl,0x000014(%esi)

	_080433_jump:
		mov    0x000008(%esi),%ebx
		cmp    $0xffffffff,%ebx
		je     _08043f_jump
		cmp    %ebx,%eax
		jge    _080448_jump

	_08043f_jump:
		cmpb   $0x000063,0x000015(%esi)
		je     _080448_jump
		mov    %eax,0x000008(%esi)

	_080448_jump:
		mov    $0xffffffff,%ebx
		lea    0x000017(%esi),%eax
		mov    %ds,%edx
		call   _07fea2_func
		mov    0x000008(%esi),%ebp
		mov    0x00000c(%esi),%edx
		add    %ebp,%eax
		mov    0x000004(%esi),%ebx
		add    %edx,%eax
		mov    %es,%edx
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x000004(%esi)
		add    $0x000008,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_080475_func:
		push   %edx
		mov    %eax,%edx

	_080478_jump:
		cmpb   $0x000000,(%edx)
		je     _08048b_jump
		xor    %eax,%eax
		mov    (%edx),%al
		call   _08369d_func
		mov    %al,(%edx)
		inc    %edx
		jmp    _080478_jump

	_08048b_jump:
		pop    %edx
		ret    



_08048d_func:
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %ecx,(%esp)
		mov    %edx,0x000004(%esp)
		xor    %eax,%eax
		test   %edx,%edx
		je     _0804d2_jump
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		mov    0x000006(%esp),%edx
		and    $0x00ffff,%eax
		and    $0x00800f,%edx
		sar    $0x000004,%eax
		mov    %edx,%ecx
		mov    %dx,0x000006(%esp)
		or     $0x003fe0,%ecx
		sub    $0x0003fe,%eax
		mov    %cx,0x000006(%esp)

	_0804d2_jump:
		mov    0x000004(%esp),%edx
		mov    %eax,(%ebx)
		mov    (%esp),%eax
		add    $0x000008,%esp
		pop    %ecx
		ret    



_0804e0_func:
		push   %ebx
		mov    %edx,%ebx
		call   _0804ea_func
		pop    %ebx
		ret    



_0804ea_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%ecx
		mov    (%edx),%eax
		mov    %eax,-0x000020(%ebp)
		mov    0x000004(%edx),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    (%ebx),%eax
		mov    %eax,-0x000018(%ebp)
		mov    0x000004(%ebx),%eax
		mov    %eax,-0x000014(%ebp)
		test   $0x000040,%cl
		je     _080516_jump
		mov    $0x000001,%esi
		jmp    _080550_jump

	_080516_jump:
		test   $0x000080,%cl
		je     _080522_jump
		mov    $0x000002,%esi
		jmp    _080550_jump

	_080522_jump:
		test   $0x000001,%ch
		je     _08052e_jump
		mov    $0x000003,%esi
		jmp    _080550_jump

	_08052e_jump:
		test   $0x000008,%ch
		je     _08053a_jump
		mov    $0x000004,%esi
		jmp    _080550_jump

	_08053a_jump:
		test   $0x000002,%ch
		je     _080546_jump
		mov    $0x000006,%esi
		jmp    _080550_jump

	_080546_jump:
		test   $0x000004,%ch
		je     _080550_jump
		mov    $0x000005,%esi

	_080550_jump:
		mov    %ecx,%eax
		and    $0x00001f,%eax
		mov    _0bd444_data(,%eax,4),%eax
		mov    %esi,-0x000028(%ebp)
		mov    %eax,-0x000024(%ebp)
		test   $0x000010,%ch
		je     _08057f_jump
		mov    _0c1034_data,%eax
		mov    _0c1038_data,%edx
		call   _07a208_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		jmp    _0805c1_jump

	_08057f_jump:
		test   $0x000020,%ch
		je     _08058e_jump
		xor    %ecx,%ecx
		mov    %ecx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		jmp    _0805c1_jump

	_08058e_jump:
		test   $0x000040,%ch
		je     _0805a2_jump
		xor    %edx,%edx
		mov    $0x3ff00000,%ebx
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _0805c1_jump

	_0805a2_jump:
		test   $0x000080,%ch
		je     _0805b6_jump
		mov    _0c1034_data,%eax
		mov    %eax,-0x000010(%ebp)
		mov    _0c1038_data,%eax
		jmp    _0805be_jump

	_0805b6_jump:
		mov    (%ebx),%eax
		mov    %eax,-0x000010(%ebp)
		mov    0x000004(%ebx),%eax

	_0805be_jump:
		mov    %eax,-0x00000c(%ebp)

	_0805c1_jump:
		lea    -0x000028(%ebp),%eax
		call   _0836f9_func
		lea    -0x000008(%ebp),%esp
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_0805d0_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %ecx
		push   %ebx
		push   %eax
		mov    0x000008(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    0x000010(%ebp),%ebx
		mov    0x000014(%ebp),%ecx
		or     %ecx,%ecx
		jne    _0805fc_jump
		sub    %eax,%eax
		mov    0x000018(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    0x00001c(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    %eax,0x000004(%ebx)
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    

	_0805fc_jump:
		push   %esi
		push   %edi
		push   %edx
		push   %ecx
		mov    %edx,%esi
		mov    %ecx,%edi
		and    $0x7ff00000,%esi
		and    $0x7ff00000,%edi
		and    $0x0fffff,%edx
		and    $0x0fffff,%ecx
		or     $0x100000,%edx
		or     $0x100000,%ecx
		sub    %edi,%esi
		jl     _080694_jump
		sub    %edi,%edi

	_08062e_jump:
		cmp    %edx,%ecx
		jne    _080636_jump
		cmp    %eax,%ebx
		je     _080638_jump

	_080636_jump:
		jae    _08063d_jump

	_080638_jump:
		sub    %ebx,%eax
		sbb    %ecx,%edx
		stc    

	_08063d_jump:
		adc    %edi,%edi
		sub    $0x100000,%esi
		jl     _08065e_jump
		add    %eax,%eax
		adc    %edx,%edx
		cmp    $0x200000,%edx
		jae    _080638_jump
		cmp    $0x100000,%edx
		jae    _08062e_jump
		cmc    
		jmp    _08063d_jump

	_08065e_jump:
		sub    %esi,%esi
		or     %eax,%eax
		jne    _08066a_jump
		or     %edx,%edx
		jne    _08066a_jump
		jmp    _080692_jump

	_08066a_jump:
		test   $0x200000,%edx
		jne    _08067e_jump
		adc    %eax,%eax
		adc    %edx,%edx
		sub    $0x100000,%esi
		jmp    _08066a_jump

	_08067e_jump:
		shr    %edx
		rcr    %eax
		add    $0x100000,%esi
		pop    %ecx
		push   %ecx
		and    $0x7ff00000,%ecx
		add    %ecx,%esi

	_080692_jump:
		jmp    _080698_jump

	_080694_jump:
		add    %edi,%esi
		sub    %edi,%edi

	_080698_jump:
		and    $0x0fffff,%edx
		add    %esi,%edx
		pop    %ecx
		pop    %esi
		and    $0x80000000,%esi
		or     %edx,%edx
		je     _0806ae_jump
		or     %esi,%edx

	_0806ae_jump:
		xor    %ecx,%esi
		jns    _0806b4_jump
		neg    %edi

	_0806b4_jump:
		mov    0x000018(%ebp),%esi
		mov    %edi,(%esi)
		mov    0x00001c(%ebp),%esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)
		pop    %edi
		pop    %esi
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    



_0806c9_func:
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,%esi
		mov    %ecx,%edi
		lea    0x000008(%ebx),%esi
		mov    (%ebx),%eax
		mov    0x000004(%ebx),%edx

	_0806db_jump:
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		call   _07975f_func
		mov    %esi,%ecx
		mov    (%ecx),%ebx
		mov    0x000004(%ecx),%ecx
		add    $0x000008,%esi
		call   _0795a8_func
		dec    %edi
		jne    _0806db_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0806fe_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07975f_func
		mov    -0x000010(%ebp),%ebx
		mov    -0x00000c(%ebp),%ecx
		call   _0806c9_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07975f_func
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_080734_func:
		mov    $0x00000d,%eax



_080739_func:
		push   %edx
		mov    %eax,%edx
		call   _083729_func
		mov    %edx,(%eax)
		pop    %edx
		ret    



_080745_func:
		mov    $0x00000e,%eax
		jmp    _080739_func



_08075c_func:
		push   %edx
		mov    %eax,%edx
		call   _08372f_func
		mov    %edx,(%eax)
		pop    %edx
		ret    



_080768_func:
		call   *_0bd42d_data
		ret    

.data

_080812_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f"

.text



_08081c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000002,%al
		jmp    _08082c_jump



_080825_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000000,%al

	_08082c_jump:
		mov    %al,%dl
		fldt   %cs:_080812_data
		fldl   -0x000008(%ebp)
		ftst   
		fnstsw %ax
		and    $0x004100,%ax
		cmp    $0x000100,%ax
		jne    _08084f_jump
		fchs   
		cmp    $0x000000,%dl
		jne    _08084f_jump
		mov    $0x000004,%dl

	_08084f_jump:
		fprem  
		fnstsw %ax
		test   $0x000400,%ax
		jne    _08084f_jump
		mov    $0x000000,%al
		test   $0x000002,%ah
		je     _080866_jump
		or     $0x000001,%al
		fsub   %st(1),%st
		fchs   

	_080866_jump:
		test   $0x000040,%ah
		je     _08086d_jump
		or     $0x000002,%al

	_08086d_jump:
		test   $0x000001,%ah
		je     _080874_jump
		add    $0x000004,%al

	_080874_jump:
		fstp   %st(1)
		fptan  
		fld    %st(0)
		fmul   %st(0),%st
		fld    %st(2)
		fmul   %st(0),%st
		faddp  %st,%st(1)
		fsqrt  
		add    %dl,%al
		and    $0x000007,%al
		cmp    $0x000004,%al
		jl     _08088e_jump
		fchs   

	_08088e_jump:
		and    $0x000003,%al
		cmp    $0x000000,%al
		je     _080896_jump
		cmp    $0x000003,%al

	_080896_jump:
		jne    _08089e_jump
		fstp   %st(1)
		fdivrp %st,%st(1)
		jmp    _0808a2_jump

	_08089e_jump:
		fdivrp %st,%st(1)
		fstp   %st(1)

	_0808a2_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

.data

_0808aa_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xff\x3f"

_0808b4_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f\x55\x89\xe5\x52\x50\xd9"
		.ascii  "\xeb\xb2\x00\xb6\x00\xdd\x45\xf8"
		.ascii  "\xd9\xe4\xdf\xe0\x9e\x73\x04\xd9"
		.ascii  "\xe0\xf6\xd6\xd9\xf8\xdf\xe0\x9e"
		.ascii  "\x7a\xf9\x2e\xdb\x2d"
		.long   _0808aa_data
		.ascii  "\xdd\xda\xd8\xd1\xdf\xe0\x9e\x76"
		.ascii  "\x06\xd8\xe1\xf6\xd2\xf6\xd6\x2e"
		.ascii  "\xdb\x2d"
		.long   _0808b4_func
		.ascii  "\xd8\xd9\xdf\xe0\x9e\x73\x04\xd8"
		.ascii  "\xe9\xf6\xd2\xdd\xd9\xd9\xf2\x80"
		.ascii  "\xfa\x00\x74\x04\xde\xf1\xeb\x02"

.text



_080929_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %ds,%edx
		call   _083735_func
		test   %eax,%eax
		jne    _080943_jump
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _079c7f_func

	_080943_jump:
		pop    %ecx
		pop    %ebx
		ret    



_080946_func:
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _081013_func
		cmpl   $0x000000,0x000014(%edx)
		jne    _08097b_jump
		mov    0x00000d(%edx),%ah
		test   $0x000002,%ah
		je     _080966_jump
		movl   $0x000086,0x000014(%edx)
		jmp    _08097b_jump

	_080966_jump:
		test   $0x000004,%ah
		je     _080974_jump
		movl   $0x000001,0x000014(%edx)
		jmp    _08097b_jump

	_080974_jump:
		movl   $0x001000,0x000014(%edx)

	_08097b_jump:
		mov    0x000014(%edx),%eax
		call   _07b866_func
		mov    %eax,0x000008(%edx)
		test   %eax,%eax
		jne    _0809aa_jump
		lea    0x000018(%edx),%eax
		mov    0x00000d(%edx),%cl
		movl   $0x000001,0x000014(%edx)
		and    $0x0000f8,%cl
		mov    %eax,0x000008(%edx)
		mov    %cl,%ch
		mov    %cl,0x00000d(%edx)
		or     $0x000004,%ch
		mov    %ch,0x00000d(%edx)
		jmp    _0809ae_jump

	_0809aa_jump:
		orb    $0x000008,0x00000c(%edx)

	_0809ae_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		pop    %edx
		pop    %ecx
		ret    



_0809bd_func:
		push   %ecx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _0809da_jump
		and    $0x00ffff,%eax
		call   _07f6d0_func

	_0809da_jump:
		pop    %ecx
		ret    



_0809dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    0x00000d(%eax),%ah
		xor    %esi,%esi
		test   $0x000010,%ah
		je     _080a49_jump
		mov    0x00000d(%ecx),%bh
		and    $0x0000ef,%bh
		mov    0x00000c(%ecx),%al
		mov    %bh,0x00000d(%ecx)
		test   $0x000002,%al
		je     _080a88_jump
		cmpl   $0x000000,0x000008(%ecx)
		je     _080a88_jump
		mov    0x000004(%ecx),%ebx
		mov    0x000008(%ecx),%edx
		mov    0x000010(%ecx),%eax
		call   _08375b_func
		cmp    $0xffffffff,%eax
		jne    _080a2a_jump
		mov    0x00000c(%ecx),%dl
		or     $0x000020,%dl
		mov    %eax,%esi
		mov    %dl,0x00000c(%ecx)
		jmp    _080a88_jump

	_080a2a_jump:
		cmp    0x000004(%ecx),%eax
		je     _080a88_jump
		mov    $0x00000c,%eax
		call   _080739_func
		mov    0x00000c(%ecx),%ah
		or     $0x000020,%ah
		mov    $0xffffffff,%esi
		mov    %ah,0x00000c(%ecx)
		jmp    _080a88_jump

	_080a49_jump:
		cmpl   $0x000000,0x000008(%ecx)
		je     _080a88_jump
		mov    0x00000c(%ecx),%dl
		and    $0x0000ef,%dl
		mov    0x00000d(%ecx),%dh
		mov    %dl,0x00000c(%ecx)
		test   $0x000020,%dh
		jne    _080a88_jump
		mov    0x000004(%ecx),%eax
		test   %eax,%eax
		je     _080a78_jump
		mov    %eax,%edx
		mov    $0x000001,%ebx
		neg    %edx
		mov    0x000010(%ecx),%eax
		call   _07b9ff_func

	_080a78_jump:
		cmp    $0xffffffff,%eax
		jne    _080a88_jump
		mov    0x00000c(%ecx),%bl
		or     $0x000020,%bl
		mov    %eax,%esi
		mov    %bl,0x00000c(%ecx)

	_080a88_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080a9b_func:
		push   %ebx
		push   %edx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _07b9ff_func
		pop    %edx
		pop    %ebx
		ret    



_080c82_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0dee34_data,%edx
		xor    %ebx,%ebx
		jmp    _080ca7_jump

	_080c91_jump:
		mov    0x000004(%edx),%eax
		test   %ecx,0x00000c(%eax)
		je     _080ca5_jump
		inc    %ebx
		testb  $0x000010,0x00000d(%eax)
		je     _080ca5_jump
		call   _0809dc_func

	_080ca5_jump:
		mov    (%edx),%edx

	_080ca7_jump:
		test   %edx,%edx
		jne    _080c91_jump
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080cb1_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000000,%al
		mov    $0x000044,%ah
		int    $0x000021
		rcl    %edx
		ror    %edx
		test   $0x000080,%dl
		setne  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080ccf_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmp    _0bd4a8_data,%eax
		jb     _080ce2_jump
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_080ce2_jump:
		cmp    $0x000005,%eax
		jg     _080d18_jump
		mov    %eax,%ebx
		mov    _0bd4fc_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000001(%eax),%cl
		test   $0x000040,%cl
		jne    _080d18_jump
		mov    %cl,%ch
		or     $0x000040,%ch
		mov    %ch,0x000001(%eax)
		mov    %edx,%eax
		call   _080cb1_func
		test   %eax,%eax
		je     _080d18_jump
		mov    _0bd4fc_data,%eax
		orb    $0x000020,0x000001(%ebx,%eax,1)

	_080d18_jump:
		mov    _0bd4fc_data,%eax
		mov    (%eax,%edx,4),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080d24_func:
		push   %ebx
		or     $0x000040,%dh
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    _0bd4fc_data,%eax
		shl    $0x000002,%edx
		mov    %ebx,(%edx,%eax,1)
		pop    %ebx
		ret    



_080d39_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _080d59_jump
		mov    %edx,%eax
		xor    %edx,%edx
		call   _080d24_func
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    

	_080d59_jump:
		mov    $0x000004,%eax
		call   _080739_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    



_080d74_func:
		test   %edx,%edx
		jl     _07a208_func
		ret    



_080d7e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		call   _080d93_func
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_080d93_func:
		fldl2e 
		fmulp  %st,%st(1)
		push   %ebp
		mov    %esp,%ebp
		mov    $0x008001,%ax
		push   %eax
		filds  -0x000004(%ebp)
		fcom   %st(1)
		fnstsw %ax
		sahf   
		mov    %ebp,%esp
		fstp   %st(0)
		jbe    _080db3_jump
		fstp   %st(0)
		fldz   
		pop    %ebp
		ret    

	_080db3_jump:
		fld    %st(0)
		call   _080e04_func
		push   %eax
		fists  -0x000004(%ebp)
		fwait
		pop    %eax
		cmp    $0x008000,%ax
		jne    _080dd3_jump
		dec    %ax
		push   %eax
		fstp   %st(0)
		fstp   %st(0)
		filds  -0x000004(%ebp)
		fld    %st(0)
		pop    %eax

	_080dd3_jump:
		fld    %st(0)
		fld1   
		fscale 
		fstp   %st(1)
		fxch   %st(1)
		fld    %st(2)
		fsubp  %st,%st(1)
		ftst   
		fnstsw %ax
		sahf   
		je     _080dfe_jump
		fld1   
		fchs   
		fxch   %st(1)
		fscale 
		fstp   %st(1)
		f2xm1  
		fld1   
		faddp  %st,%st(1)
		fmul   %st(0),%st
		fmulp  %st,%st(1)
		jmp    _080e00_jump

	_080dfe_jump:
		fstp   %st(0)

	_080e00_jump:
		fstp   %st(1)
		pop    %ebp
		ret    



_080e04_func:
		push   %ebp
		mov    %esp,%ebp
		push   %eax
		fstcw  -0x000002(%ebp)
		fwait
		mov    -0x000002(%ebp),%ax
		and    $0x00f3ff,%ax
		or     $0x000400,%ax
		push   %eax
		fldcw  -0x000008(%ebp)
		frndint 
		fldcw  -0x000002(%ebp)
		fwait
		mov    %ebp,%esp
		pop    %ebp
		ret    



_080e27_func:
		test   %edx,%edx
		jne    _080e2e_jump
		xor    %eax,%eax
		ret    

	_080e2e_jump:
		jge    _080e36_jump
		mov    $0xffffffff,%eax
		ret    

	_080e36_jump:
		mov    $0x000001,%eax
		ret    



_080e3c_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		lea    -0x000008(%ebp),%eax
		lea    -0x000010(%ebp),%edx
		call   _0837e2_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,(%ebx)
		mov    -0x00000c(%ebp),%eax
		mov    %eax,0x000004(%ebx)
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_080e68_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		test   %edx,%edx
		je     _080efa_jump
		mov    -0x000006(%ebp),%eax
		and    $0x007ff0,%eax
		cwtl   
		sar    $0x000004,%eax
		cmp    $0x003e80,%ebx
		jle    _080e96_jump
		mov    $0x003e80,%ebx

	_080e96_jump:
		cmp    $0xffffc180,%ebx
		jge    _080ea3_jump
		mov    $0xffffc180,%ebx

	_080ea3_jump:
		add    %ebx,%eax
		test   %eax,%eax
		jg     _080eaf_jump
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _080f00_jump

	_080eaf_jump:
		cmp    $0x0007ff,%eax
		jl     _080ee2_jump
		mov    -0x000006(%ebp),%ecx
		call   _080745_func
		test   %cx,%cx
		jle    _080ed0_jump
		mov    _0c1034_data,%eax
		mov    _0c1038_data,%edx
		jmp    _080f00_jump

	_080ed0_jump:
		mov    _0c1034_data,%eax
		mov    _0c1038_data,%edx
		call   _07a208_func
		jmp    _080f00_jump

	_080ee2_jump:
		mov    -0x000006(%ebp),%edx
		and    $0x00800f,%edx
		shl    $0x000004,%eax
		mov    %edx,%ebx
		mov    %dx,-0x000006(%ebp)
		or     %eax,%ebx
		mov    %bx,-0x000006(%ebp)

	_080efa_jump:
		mov    -0x00000c(%ebp),%eax
		mov    -0x000008(%ebp),%edx

	_080f00_jump:
		lea    -0x000004(%ebp),%esp
		pop    %ecx
		pop    %ebp
		ret    



_080f06_func:
		cmp    $0x000041,%eax
		jl     _080f13_jump
		cmp    $0x00005a,%eax
		jg     _080f13_jump
		add    $0x000020,%eax

	_080f13_jump:
		ret    



_080f14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0dee2c_data,%esi
		test   %esi,%esi
		je     _080f3c_jump
		mov    0x000004(%esi),%ecx
		mov    0x00000c(%ecx),%edi
		mov    (%esi),%eax
		and    $0x004003,%edi
		mov    %eax,_0dee2c_data
		or     $0x000003,%di
		jmp    _080f85_jump

	_080f3c_jump:
		mov    $_0bd1dc_data,%ecx
		jmp    _080f63_jump

	_080f43_jump:
		testb  $0x000003,0x00000c(%ecx)
		jne    _080f60_jump
		mov    $0x000008,%eax
		call   _07b866_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _080faa_jump
		mov    $0x000003,%edi
		jmp    _080f85_jump

	_080f60_jump:
		add    $0x00001a,%ecx

	_080f63_jump:
		cmp    $_0bd3e4_data,%ecx
		jb     _080f43_jump
		mov    $0x000022,%eax
		mov    $0x004003,%edi
		call   _07b866_func
		mov    %eax,%ecx
		mov    %eax,%esi
		test   %eax,%eax
		je     _080faa_jump
		lea    0x000008(%eax),%ecx

	_080f85_jump:
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _079cd0_func
		mov    %edi,0x00000c(%ecx)
		mov    _0dee34_data,%eax
		mov    %ecx,0x000004(%esi)
		mov    %esi,_0dee34_data
		mov    %eax,(%esi)
		mov    %ecx,%eax
		jmp    _080fb6_jump

	_080faa_jump:
		mov    $0x000005,%eax
		call   _080739_func
		xor    %eax,%eax

	_080fb6_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080fbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_0dee34_data,%edx

	_080fc6_jump:
		mov    (%edx),%eax
		test   %eax,%eax
		je     _080ff1_jump
		mov    0x000004(%eax),%ecx
		cmp    %ecx,%ebx
		je     _080fd7_jump
		mov    %eax,%edx
		jmp    _080fc6_jump

	_080fd7_jump:
		mov    0x00000c(%ecx),%cl
		or     $0x000003,%cl
		mov    %cl,0x00000c(%ebx)
		mov    (%eax),%ebx
		mov    %ebx,(%edx)
		mov    _0dee2c_data,%edx
		mov    %eax,_0dee2c_data
		mov    %edx,(%eax)

	_080ff1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_080ff5_jump:
		push   %edx

	_080ff6_jump:
		mov    _0dee2c_data,%edx
		test   %edx,%edx
		je     _081011_jump
		mov    %edx,%eax
		mov    (%edx),%edx
		call   _07b961_func
		mov    %edx,_0dee2c_data
		jmp    _080ff6_jump

	_081011_jump:
		pop    %edx
		ret    



_081013_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		testb  $0x000020,0x00000d(%eax)
		jne    _081040_jump
		mov    0x000010(%edx),%eax
		call   _080cb1_func
		test   %eax,%eax
		je     _081040_jump
		mov    0x00000d(%edx),%bl
		or     $0x000020,%bl
		mov    %bl,0x00000d(%edx)
		test   $0x000007,%bl
		jne    _081040_jump
		mov    %bl,%cl
		or     $0x000002,%cl
		mov    %cl,0x00000d(%edx)

	_081040_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081044_func:
		mov    _0bd400_data,%eax
		ret    



_08104a_func:
		push   %edx
		mov    %eax,%edx
		mov    %cs,%eax
		mov    %ax,0x000002(%edx)
		mov    %ds,%eax
		mov    %ax,0x000006(%edx)
		mov    %es,%eax
		mov    %ax,(%edx)
		mov    %ss,%eax
		mov    %ax,0x000004(%edx)
		mov    %fs,%eax
		mov    %ax,0x000008(%edx)
		mov    %gs,%eax
		mov    %ax,0x00000a(%edx)
		pop    %edx
		ret    



_081072_func:
		push   %ebp
		push   %es
		push   %ebx
		push   %ds
		push   %edx
		call   _0810aa_func
		push   %ds
		push   %edi
		mov    %esp,%ebp
		mov    0x000008(%ebp),%edi
		mov    0x00000c(%ebp),%ds
		mov    %eax,(%edi)
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edx,0x00000c(%edi)
		mov    %esi,0x000010(%edi)
		popl   0x000014(%edi)
		sbb    %eax,%eax
		mov    %eax,0x000018(%edi)
		pop    %eax
		pop    %ebx
		pop    %ebx
		pop    %ebx
		mov    %ax,0x000006(%ebx)
		data16 mov %es,(%ebx)
		pop    %es
		pop    %ebp
		ret    



_0810aa_func:
		lea    (%esi,%esi,2),%esi
		lea    %cs:_081150_jump(%esi),%eax
		push   %eax
		mov    (%ebx),%es
		mov    0x000006(%ebx),%bp
		mov    (%edi),%eax
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%ecx
		mov    0x00000c(%edi),%edx
		mov    0x000010(%edi),%esi
		mov    0x000014(%edi),%edi
		mov    %ebp,%ds
		ret    

	_081150_jump:
		int    $0x000000
		ret    



_081450_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000006(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000005(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    %eax,0x00000c(%ebx)
		mov    $0x00002c,%ah
		int    $0x000021
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    0x000003(%esp),%al
		xor    %edx,%edx
		mov    %eax,0x000008(%ebx)
		xor    %eax,%eax
		mov    (%esp),%dl
		mov    0x000002(%esp),%al
		mov    %edx,%esi
		mov    %eax,0x000004(%ebx)
		xor    %eax,%eax
		shl    $0x000002,%esi
		mov    0x000001(%esp),%al
		add    %edx,%esi
		mov    %eax,(%ebx)
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000008(%esp)
		mov    0x000004(%esp),%ah
		mov    0x000008(%esp),%al
		add    %esi,%esi
		cmp    %ah,%al
		je     _081502_jump
		cmpl   $0x000017,0x000008(%ebx)
		je     _081502_jump
		xor    %eax,%eax
		mov    0x00000a(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000009(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,0x00000c(%ebx)

	_081502_jump:
		mov    %esi,%eax
		movl   $0xffffffff,0x000020(%ebx)
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081513_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    $0x00000c,%esi
		mov    0x000010(%ebp),%edx
		mov    0x000010(%eax),%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $_0c10a0_data,%ebx
		mov    0x000014(%ebp),%esi
		mov    %edx,%edi
		cmp    $0xf4fb7ea1,%esi
		jge    _081547_jump

	_08153d_jump:
		mov    $0xffffffff,%eax
		jmp    _081660_jump

	_081547_jump:
		mov    0x000010(%ebp),%eax
		mov    %eax,%edx
		mov    $0x00000c,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %eax,%esi

	_081558_jump:
		test   %edi,%edi
		jge    _081562_jump
		dec    %esi
		add    $0x00000c,%edi
		jmp    _081558_jump

	_081562_jump:
		test   %esi,%esi
		jl     _08153d_jump
		lea    0x00076c(%esi),%eax
		call   _0839e9_func
		test   %eax,%eax
		je     _08157a_jump
		mov    $_0c10ba_data,%ebx

	_08157a_jump:
		mov    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		lea    0x000003(%esi),%ecx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sar    $0x000002,%ecx
		add    %edx,%eax
		lea    (%eax,%ecx,1),%edx
		movswl (%ebx,%edi,2),%eax
		mov    0x00000c(%ebp),%edi
		add    %edx,%eax
		add    %eax,%edi
		dec    %edi
		test   %esi,%esi
		je     _0815a7_jump
		dec    %edi

	_0815a7_jump:
		mov    0x000008(%ebp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    0x000000(%ebp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi

	_0815c8_jump:
		test   %esi,%esi
		jge    _0815d5_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _0815c8_jump

	_0815d5_jump:
		mov    %edi,%eax
		mov    %esi,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		call   _083e05_func
		call   _083f44_func
		mov    _0bf5b8_data,%edx
		mov    0x000020(%ebp),%ebx
		add    %edx,%esi
		test   %ebx,%ebx
		jge    _0815fd_jump
		mov    %ebp,%eax
		call   _083b31_func

	_0815fd_jump:
		cmpl   $0x000000,0x000020(%ebp)
		jle    _081609_jump
		sub    _0bf5bc_data,%esi

	_081609_jump:
		test   %esi,%esi
		jge    _081616_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _081609_jump

	_081616_jump:
		cmp    $0x0063de,%edi
		jl     _08153d_jump
		jne    _081640_jump
		mov    _0bf5b8_data,%eax
		sub    $0x015180,%esi
		test   %eax,%eax
		jle    _08153d_jump
		test   %esi,%esi
		jge    _08165e_jump
		jmp    _08153d_jump

	_081640_jump:
		lea    -0x0063df(%edi),%eax
		mov    %eax,%edi
		shl    $0x000003,%edi
		sub    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		shl    $0x000007,%edi
		mov    %edi,%eax
		shl    $0x000002,%edi
		sub    %eax,%edi
		add    %edi,%esi

	_08165e_jump:
		mov    %esi,%eax

	_081660_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081679_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0bd1d9_data,%ah
		test   %ah,%ah
		je     _08169d_jump
		mov    %edi,%eax
		call   _084214_func
		jmp    _0817e7_jump

	_08169d_jump:
		mov    %ah,-0x000018(%ebp)
		mov    %ah,-0x000014(%ebp)
		mov    %edi,%eax
		mov    $0x3ff00000,%ecx
		call   _080e27_func
		mov    %eax,-0x00001c(%ebp)
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _080d74_func
		mov    %eax,%edi
		mov    %edx,%esi
		call   _07b674_func
		jne    _0816d7_jump
		mov    $0x54442d18,%edi
		mov    $0x3fe921fb,%esi
		jmp    _0817d0_jump

	_0816d7_jump:
		mov    $0x3ff00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _07b674_func
		jle    _081702_jump
		mov    $0x3ff00000,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		xor    %eax,%eax
		call   _079d5a_func
		mov    $0x000001,%bl
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bl,-0x000018(%ebp)

	_081702_jump:
		mov    $0x5e9ecd56,%ebx
		mov    $0x3fd12614,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07b674_func
		jle    _08177c_jump
		mov    $0xd0b09955,%ebx
		mov    $0x3fe76cf5,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07975f_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _0795a8_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _0795a8_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _0795a8_func
		mov    $0xe8584ca9,%ebx
		mov    $0x3ffbb67a,%ecx
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0795a8_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _079d5a_func
		mov    $0x000001,%bh
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bh,-0x000014(%ebp)

	_08177c_jump:
		mov    $_0c103c_data,%ebx
		mov    $0x000008,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0806fe_func
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    %eax,%edi
		mov    -0x000014(%ebp),%al
		mov    %edx,%esi
		test   %al,%al
		je     _0817b3_jump
		mov    $0x382d7366,%ebx
		mov    %ecx,%eax
		mov    $0x3fe0c152,%ecx
		call   _0795a8_func
		mov    %eax,%edi
		mov    %edx,%esi

	_0817b3_jump:
		cmpb   $0x000000,-0x000018(%ebp)
		je     _0817d0_jump
		mov    $0x54442d1a,%eax
		mov    $0x3ff921fb,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _0795a2_func
		mov    %eax,%edi
		mov    %edx,%esi

	_0817d0_jump:
		cmpl   $0x000000,-0x00001c(%ebp)
		jge    _0817e3_jump
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07a208_func
		mov    %eax,%edi
		mov    %edx,%esi

	_0817e3_jump:
		mov    %edi,%eax
		mov    %esi,%edx

	_0817e7_jump:
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_0817f0_func:
		push   %ebx
		sub    $0x00000c,%esp
		mov    %esp,%ebx
		call   _0818db_func
		mov    %esp,%eax
		call   _08180f_func
		mov    %esp,%eax
		call   _08195b_func
		add    $0x00000c,%esp
		pop    %ebx
		ret    



_08180e_func:
		ret    



_08180f_func:
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		or     %ebx,%ebx
		jne    _081855_jump
		or     %edx,%edx
		jne    _08184a_jump
		add    %cx,%cx
		je     _0818d6_jump

	_08182e_jump:
		movw   $0x00ffff,0x000008(%eax)
		movl   $0x000000,0x000004(%eax)
		movl   $0x000000,(%eax)

	_081841_jump:
		orb    $0x0000c0,0x000007(%eax)
		jmp    _0818d5_jump

	_08184a_jump:
		cmp    $0x007fff,%cx
		je     _0818d6_jump

	_081855_jump:
		mov    %ecx,%edx
		and    $0x00007f,%dh
		cmp    $0x007fff,%dx
		je     _081841_jump
		add    %cx,%cx
		jb     _081841_jump
		shr    %cx
		je     _081872_jump
		mov    0x000004(%eax),%edx
		add    %edx,%edx
		jae    _08182e_jump

	_081872_jump:
		mov    0x000004(%eax),%edx
		sub    %edi,%edi
		push   %eax
		sub    $0x003fff,%cx
		sar    %cx
		jb     _081888_jump
		shr    %edx
		rcr    %ebx
		rcr    %edi

	_081888_jump:
		add    $0x003fff,%cx
		mov    %cx,0x000008(%eax)
		mov    %edx,%ecx
		mov    %ebx,%eax
		mov    %edx,%esi
		stc    
		rcr    %esi
		inc    %edx
		je     _0818bb_jump
		dec    %edx

	_08189e_jump:
		div    %esi
		dec    %esi
		cmp    %eax,%esi
		jbe    _0818b0_jump
		inc    %esi
		add    %eax,%esi
		rcr    %esi
		mov    %ecx,%edx
		mov    %ebx,%eax
		jmp    _08189e_jump

	_0818b0_jump:
		inc    %esi
		mov    %eax,%ecx
		mov    %edi,%eax
		div    %esi
		add    %ecx,%esi
		jmp    _0818c4_jump

	_0818bb_jump:
		cmp    %esi,%eax
		je     _0818cd_jump
		xchg   %eax,%edx
		mov    %edi,%eax
		div    %esi

	_0818c4_jump:
		sub    %edx,%edx
		stc    
		rcr    %esi
		rcr    %eax
		adc    %edx,%eax

	_0818cd_jump:
		adc    %esi,%edx
		pop    %esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)

	_0818d5_jump:
		pop    %ebx

	_0818d6_jump:
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret    



_0818db_func:
		push   %ecx
		mov    %edx,%ecx
		shld   $0x00000b,%eax,%edx
		shl    $0x00000b,%eax
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		je     _081926_jump
		cmp    $0x0007ff,%cx
		je     _0818fd_jump
		add    $0x003c00,%cx
		jmp    _08191e_jump

	_0818fd_jump:
		mov    $0x007fff,%cx
		test   $0x7fffffff,%edx
		jne    _08190b_jump
		or     %eax,%eax

	_08190b_jump:
		je     _08191e_jump
		push   %eax
		mov    $0x000001,%al
		mov    $0x000081,%ah
		call   _08180e_func
		pop    %eax
		or     $0x40000000,%edx

	_08191e_jump:
		or     $0x80000000,%edx
		jmp    _08194b_jump

	_081926_jump:
		or     %edx,%edx
		jne    _081932_jump
		or     %eax,%eax
		jne    _081932_jump
		sub    %ecx,%ecx
		jmp    _08194b_jump

	_081932_jump:
		mov    $0x003c01,%cx
		or     %edx,%edx
		jne    _08193f_jump
		xchg   %eax,%edx
		sub    $0x000020,%cx

	_08193f_jump:
		or     %edx,%edx
		js     _08194b_jump
		add    %eax,%eax
		adc    %edx,%edx
		dec    %cx
		jmp    _08193f_jump

	_08194b_jump:
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		add    %ecx,%ecx
		rcr    %cx
		mov    %cx,0x000008(%ebx)
		pop    %ecx
		ret    



_08195b_func:
		push   %ecx
		push   %ebx
		push   %esi
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%eax
		mov    $0xfffff800,%esi
		mov    %eax,%ebx
		shl    $0x000016,%ebx
		jae    _081988_jump
		jne    _081977_jump
		add    %esi,%esi

	_081977_jump:
		add    $0x000800,%eax
		adc    $0x000000,%edx
		jae    _081988_jump
		mov    $0x80000000,%edx
		inc    %cx

	_081988_jump:
		and    %esi,%eax
		mov    %ecx,%ebx
		and    $0x007fff,%cx
		add    $0x00c400,%cx
		cmp    $0x0007ff,%cx
		jae    _0819be_jump
		or     %cx,%cx
		jne    _0819ad_jump
		shrd   $0x00000c,%edx,%eax
		add    %edx,%edx
		shr    $0x00000c,%edx
		jmp    _0819b7_jump

	_0819ad_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shrd   $0x00000b,%ecx,%edx

	_0819b7_jump:
		add    %bx,%bx
		rcr    %edx
		jmp    _081a1e_jump

	_0819be_jump:
		cmp    $0x00c400,%cx
		jb     _0819f8_jump
		cmp    $0x00ffcc,%cx
		jl     _0819f2_jump
		sub    $0x00000c,%cx
		neg    %cx
		cmp    $0x000020,%cl
		jb     _0819e0_jump
		sub    $0x000020,%cl
		mov    %eax,%esi
		mov    %edx,%eax
		sub    %edx,%edx

	_0819e0_jump:
		shrd   %cl,%eax,%esi
		shrd   %cl,%edx,%eax
		shr    %cl,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		jmp    _0819f6_jump

	_0819f2_jump:
		sub    %eax,%eax
		sub    %edx,%edx

	_0819f6_jump:
		jmp    _081a1e_jump

	_0819f8_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shr    $0x00000b,%edx
		add    %bx,%bx
		rcr    %edx
		or     $0x7ff00000,%edx
		cmp    $0x0043ff,%cx
		je     _081a1e_jump
		push   %eax
		mov    $0x000008,%al
		mov    $0x000084,%ah
		call   _08180e_func
		pop    %eax

	_081a1e_jump:
		pop    %esi
		pop    %ebx
		pop    %ecx
		ret    



_081a22_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _081a71_jump
		add    $0x000007,%eax
		jb     _081a71_jump
		and    $0x0000fc,%al
		mov    $0x00000c,%edx
		sub    %edx,%eax
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%eax
		add    %edx,%eax
		cmp    0x000014(%ebx),%eax
		ja     _081a71_jump
		mov    0x00000c(%ebx),%esi
		mov    0x000010(%ebx),%edi
		cmp    %edi,%eax
		ja     _081a55_jump
		mov    0x000028(%ebx),%esi
		sub    %edi,%edi

	_081a55_jump:
		mov    (%esi),%edx
		cmp    %edx,%eax
		jbe    _081a75_jump
		sub    %edx,%edi
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%edi
		add    %edx,%edi
		lea    0x000020(%ebx),%edx
		mov    0x000008(%esi),%esi
		cmp    %edx,%esi
		jne    _081a55_jump
		mov    %edi,0x000014(%ebx)

	_081a71_jump:
		sub    %eax,%eax
		jmp    _081ac0_jump

	_081a75_jump:
		sub    %eax,%edx
		mov    %edi,0x000010(%ebx)
		incl   0x000018(%ebx)
		mov    0x000008(%esi),%ecx
		cmp    $0x00000c,%edx
		jb     _081aa3_jump
		mov    %esi,%edi
		add    %eax,%edi
		mov    %edi,0x00000c(%ebx)
		mov    %edx,(%edi)
		mov    %eax,(%esi)
		mov    0x000004(%esi),%ebx
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edi,0x000008(%ebx)
		mov    %ecx,%ebx
		mov    %edi,0x000004(%ebx)
		jmp    _081ab8_jump

	_081aa3_jump:
		decl   0x00001c(%ebx)
		mov    %esi,%eax
		mov    %ecx,%edi
		mov    0x000004(%esi),%esi
		mov    %edi,0x000008(%esi)
		mov    %esi,0x000004(%edi)
		mov    %esi,0x00000c(%ebx)
		mov    %eax,%esi

	_081ab8_jump:
		orl    $0x000001,(%esi)
		mov    %esi,%eax
		add    $0x000004,%eax

	_081ac0_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    

	_081ac5_jump:
		jmp    _081bd0_jump



_081aca_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _081ac5_jump
		mov    %eax,%esi
		sub    $0x000004,%esi
		mov    (%esi),%eax
		test   $0x000001,%al
		je     _081ac5_jump
		and    $0x0000fe,%al
		mov    %esi,%edi
		add    %eax,%edi
		testl  $0x000001,(%edi)
		jne    _081b0c_jump
		cmp    0x00000c(%ebx),%edi
		jne    _081af5_jump
		mov    %esi,0x00000c(%ebx)

	_081af5_jump:
		add    (%edi),%eax
		mov    %eax,(%esi)
		push   %ebx
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%edi
		mov    %edi,0x000008(%ebx)
		mov    %ebx,0x000004(%edi)
		pop    %ebx
		decl   0x00001c(%ebx)
		jmp    _081b88_jump

	_081b0c_jump:
		mov    %eax,(%esi)
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _081b23_jump
		cmp    0x000004(%edi),%esi
		ja     _081b88_jump
		mov    0x000028(%ebx),%edi
		cmp    %edi,%esi
		jb     _081b88_jump
		jmp    _081b32_jump

	_081b23_jump:
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _081b88_jump
		lea    0x000020(%ebx),%edi
		cmp    0x000024(%ebx),%esi
		ja     _081b88_jump

	_081b32_jump:
		sub    %edx,%edx
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%ecx
		inc    %ecx
		div    %ecx
		dec    %ecx
		cmp    %ecx,%eax
		jae    _081b67_jump
		mov    0x000018(%ebx),%edx
		sub    %ecx,%edx
		add    %eax,%eax
		cmp    %ecx,%edx
		ja     _081b4f_jump
		sub    %eax,%eax

	_081b4f_jump:
		mov    %esi,%edi
		add    (%esi),%edi

	_081b53_jump:
		mov    (%edi),%edx
		test   $0x000001,%dl
		je     _081b88_jump
		cmp    $0xffffffff,%edx
		je     _081b67_jump
		and    $0x0000fe,%dl
		add    %edx,%edi
		dec    %eax
		jne    _081b53_jump

	_081b67_jump:
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _081b71_jump
		mov    0x000028(%ebx),%edi

	_081b71_jump:
		cmp    %edi,%esi
		jb     _081b88_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _081b88_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _081b88_jump
		mov    0x000008(%edi),%edi
		jmp    _081b71_jump

	_081b88_jump:
		mov    0x000004(%edi),%edx
		mov    (%esi),%ecx
		xchg   %edi,%edx
		mov    %edi,%eax
		add    (%edi),%eax
		cmp    %esi,%eax
		jne    _081ba7_jump
		add    (%edi),%ecx
		mov    %ecx,(%edi)
		cmp    0x00000c(%ebx),%esi
		jne    _081ba3_jump
		mov    %edi,0x00000c(%ebx)

	_081ba3_jump:
		mov    %edi,%esi
		jmp    _081bb8_jump

	_081ba7_jump:
		incl   0x00001c(%ebx)
		mov    %edx,0x000008(%esi)
		mov    %edi,0x000004(%esi)
		mov    %esi,0x000008(%edi)
		mov    %edx,%edi
		mov    %esi,0x000004(%edi)

	_081bb8_jump:
		decl   0x000018(%ebx)
		cmp    0x00000c(%ebx),%esi
		jae    _081bc8_jump
		cmp    0x000010(%ebx),%ecx
		jbe    _081bc8_jump
		mov    %ecx,0x000010(%ebx)

	_081bc8_jump:
		cmp    0x000014(%ebx),%ecx
		jbe    _081bd0_jump
		mov    %ecx,0x000014(%ebx)

	_081bd0_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    



_081bd5_func:
		push   %ebx
		push   %edx
		mov    _0bd1d0_data,%edx
		cmp    %edx,%eax
		jne    _081bea_jump
		mov    0x000008(%edx),%edx
		mov    %edx,_0bd1d0_data

	_081bea_jump:
		mov    _0bd1cc_data,%ebx
		cmp    %ebx,%eax
		jne    _081bfd_jump
		mov    0x000008(%ebx),%edx
		mov    %edx,_0bd1cc_data

	_081bfd_jump:
		mov    0x000004(%eax),%edx
		mov    0x000008(%eax),%eax
		test   %edx,%edx
		je     _081c0a_jump
		mov    %eax,0x000008(%edx)

	_081c0a_jump:
		test   %eax,%eax
		je     _081c11_jump
		mov    %edx,0x000004(%eax)

	_081c11_jump:
		pop    %edx
		pop    %ebx
		ret    



_081c14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0bd1cc_data,%edx

	_081c1f_jump:
		test   %edx,%edx
		je     _081eeb_jump
		mov    0x000024(%edx),%eax
		mov    (%eax),%eax
		mov    (%edx),%ebx
		add    $0x00002c,%eax
		cmp    %ebx,%eax
		jne    _081c6d_jump
		lea    -0x000008(%edx),%ebx
		mov    %edx,%eax
		mov    0x000008(%edx),%ecx
		call   _081bd5_func
		mov    %ecx,%edx
		mov    0x000004(%ebx),%ecx
		test   %ecx,%ecx
		jne    _081c5d_jump
		mov    (%ebx),%eax
		shr    $0x000010,%eax
		mov    (%ebx),%di
		mov    %eax,%esi
		mov    $0x000005,%ah
		mov    $0x000002,%al
		int    $0x000031
		jmp    _081c1f_jump

	_081c5d_jump:
		mov    %ecx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		jmp    _081c1f_jump

	_081c6d_jump:
		mov    0x000008(%edx),%edx
		jmp    _081c1f_jump



_081d5c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0bd1cc_data,%eax
		xor    %ebx,%ebx
		jmp    _081d72_jump

	_081d69_jump:
		cmp    %eax,%edx
		jb     _081d76_jump
		mov    %eax,%ebx
		mov    0x000008(%eax),%eax

	_081d72_jump:
		test   %eax,%eax
		jne    _081d69_jump

	_081d76_jump:
		mov    %ebx,0x000004(%edx)
		mov    %eax,0x000008(%edx)
		test   %ebx,%ebx
		je     _081d85_jump
		mov    %edx,0x000008(%ebx)
		jmp    _081d8b_jump

	_081d85_jump:
		mov    %edx,_0bd1cc_data

	_081d8b_jump:
		test   %eax,%eax
		je     _081d92_jump
		mov    %edx,0x000004(%eax)

	_081d92_jump:
		lea    0x000020(%edx),%ebx
		mov    (%edx),%eax
		add    $0x00002c,%edx
		movl   $0x000000,-0x00000c(%edx)
		movl   $0x000000,-0x00001c(%edx)
		movl   $0x000000,-0x000014(%edx)
		movl   $0x000000,-0x000010(%edx)
		mov    %ebx,-0x000008(%edx)
		mov    %ebx,-0x000004(%edx)
		sub    $0x00002c,%eax
		mov    %ebx,-0x000020(%edx)
		mov    %eax,(%edx)
		movl   $0xffffffff,(%edx,%eax,1)
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_081dd0_func:
		push   %ebx
		push   %edx
		mov    _0bd1cc_data,%edx
		test   %edx,%edx
		je     _081e19_jump
		mov    0x000024(%edx),%edx
		mov    (%edx),%ebx
		add    %edx,%ebx
		mov    _0bd422_data,%ah
		add    $0x000004,%ebx
		cmp    $0x000002,%ah
		jb     _081e0c_jump
		cmp    $0x000008,%ah
		ja     _081e0c_jump
		cmpb   $0x000000,_0bd424_data
		jne    _081e0c_jump
		xor    %eax,%eax
		mov    %ds,%eax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0bd3f4_data

	_081e0c_jump:
		cmp    _0bd3f4_data,%ebx
		jne    _081e19_jump
		mov    (%edx),%eax
		pop    %edx
		pop    %ebx
		ret    

	_081e19_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_081e1e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		call   _081c14_func
		mov    (%esp),%eax
		shr    $0x000010,%eax
		mov    (%esp),%ecx
		mov    %eax,%ebx
		mov    $0x000005,%ah
		mov    $0x000001,%al
		int    $0x000031
		sbb    %eax,%eax
		inc    %eax
		je     _081e4f_jump
		mov    %bx,%ax
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %di,(%eax)
		mov    %si,0x000002(%eax)

	_081e4f_jump:
		test   %eax,%eax
		je     _081e6c_jump
		mov    (%esp),%ebx
		lea    0x000008(%eax),%edx
		sub    $0x000008,%ebx
		mov    %ebx,(%edx)
		movl   $0x000000,0x000004(%eax)
		mov    %edx,%eax
		jmp    _081ee8_jump

	_081e6c_jump:
		testw  $0x00fff0,_0dee72_data
		je     _081e81_jump
		movl   $0x0fffff,_0dee70_data

	_081e81_jump:
		cmpl   $0x010000,(%esp)
		ja     _081ee6_jump
		mov    _0dee70_data,%ebx
		shr    $0x000004,%ebx
		or     $0x000001,%bl
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jl     _081ee6_jump
		mov    (%esp),%ebx
		shr    $0x000004,%ebx
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%ebx
		mov    %edx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		test   %esi,%esi
		jl     _081ee6_jump
		mov    $0x000000,%ah
		mov    $0x000006,%al
		int    $0x000031
		mov    %ecx,%eax
		shl    $0x000010,%eax
		mov    %dx,%ax
		add    $0x000008,%eax
		mov    (%esp),%edx
		mov    %esi,-0x000004(%eax)
		sub    $0x000008,%edx
		mov    %edx,(%eax)
		jmp    _081ee8_jump

	_081ee6_jump:
		xor    %eax,%eax

	_081ee8_jump:
		add    $0x000004,%esp

	_081eeb_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081ef1_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		cmpl   $0x000000,_0bf60c_data
		jne    _081f04_jump

	_081f00_jump:
		xor    %eax,%eax
		jmp    _081ee8_jump

	_081f04_jump:
		cmpl   $0xfffffffe,_0bd3f4_data
		je     _081f00_jump
		mov    %esp,%eax
		call   _0820e4_func
		test   %eax,%eax
		je     _081ee8_jump
		cmpb   $0x000001,_0bd422_data
		jne    _081f38_jump
		mov    (%esp),%eax
		call   _081e1e_func
		mov    %eax,%ebx
		mov    %eax,%edx
		test   %eax,%eax
		je     _081f53_jump
		mov    (%eax),%eax
		mov    %eax,(%esp)
		jmp    _081f53_jump

	_081f38_jump:
		mov    (%esp),%ebx
		mov    $0x80004800,%eax
		int    $0x000021
		sbb    %ebx,%ebx
		not    %ebx
		and    %ebx,%eax
		mov    (%esp),%ecx
		sub    $0x000004,%ecx
		mov    %eax,%edx
		mov    %ecx,(%esp)

	_081f53_jump:
		test   %edx,%edx
		je     _081f00_jump
		mov    (%esp),%eax
		mov    (%esp),%esi
		sub    $0x000004,%eax
		cmp    %esi,%eax
		ja     _081f00_jump
		mov    %eax,(%esp)
		cmp    $0x000038,%eax
		jb     _081f00_jump
		mov    %eax,(%edx)
		mov    %edx,%eax
		call   _081d5c_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)
		or     $0x000001,%al
		mov    %eax,(%ebx)
		mov    0x000018(%edx),%edi
		movl   $0xffffffff,0x000014(%edx)
		inc    %edi
		lea    0x000004(%ebx),%eax
		mov    %edi,0x000018(%edx)
		call   _07b961_func
		mov    $0x000001,%eax
		jmp    _081ee8_jump



_081fa0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		push   %eax
		cmpb   $0x000001,_0bd422_data
		jne    _081fb8_jump
		cmpb   $0x000000,_0bd423_data
		je     _081fc1_jump

	_081fb8_jump:
		cmpb   $0x000009,_0bd422_data
		jne    _081fce_jump

	_081fc1_jump:
		mov    (%esp),%eax
		call   _081ef1_func
		jmp    _0820db_jump

	_081fce_jump:
		cmpl   $0x000000,_0bf60c_data
		jne    _081fde_jump

	_081fd7_jump:
		xor    %eax,%eax
		jmp    _0820db_jump

	_081fde_jump:
		cmpl   $0xfffffffe,_0bd3f4_data
		je     _081fd7_jump
		mov    %esp,%eax
		call   _0820e4_func
		test   %eax,%eax
		je     _0820db_jump
		mov    _0bd422_data,%bl
		cmp    $0x000002,%bl
		jb     _08201c_jump
		cmp    $0x000008,%bl
		ja     _08201c_jump
		cmpb   $0x000000,_0bd424_data
		jne    _08201c_jump
		xor    %eax,%eax
		mov    %ds,%eax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0bd3f4_data

	_08201c_jump:
		mov    (%esp),%edx
		mov    _0bd3f4_data,%ecx
		add    %ecx,%edx
		cmp    %ecx,%edx
		jae    _082030_jump
		mov    $0xfffffffe,%edx

	_082030_jump:
		mov    %edx,%eax
		call   _08432a_func
		cmp    $0xffffffff,%eax
		je     _081fd7_jump
		mov    %eax,%ebx
		cmp    $0xfffffff8,%eax
		ja     _081fd7_jump
		cmp    %eax,%edx
		jbe    _081fd7_jump
		sub    %eax,%edx
		lea    -0x000004(%edx),%eax
		mov    %edx,(%esp)
		cmp    %edx,%eax
		ja     _081fd7_jump
		mov    _0bd1cc_data,%edx
		mov    %eax,(%esp)
		jmp    _082070_jump

	_08205e_jump:
		mov    0x000008(%edx),%ebp
		test   %ebp,%ebp
		je     _082074_jump
		cmp    %ebx,%edx
		ja     _08206d_jump
		cmp    %ebp,%ebx
		jb     _082074_jump

	_08206d_jump:
		mov    0x000008(%edx),%edx

	_082070_jump:
		test   %edx,%edx
		jne    _08205e_jump

	_082074_jump:
		test   %edx,%edx
		je     _08209e_jump
		mov    (%edx),%eax
		lea    -0x000004(%ebx),%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jne    _08209e_jump
		mov    (%esp),%esi
		add    $0x000004,%esi
		mov    %esi,(%esp)
		add    %esi,(%edx)
		mov    (%esp),%ebp
		lea    (%eax,%ebp,1),%ecx
		mov    %eax,%ebx
		movl   $0xffffffff,(%ecx)
		jmp    _0820bd_jump

	_08209e_jump:
		cmpl   $0x000038,(%esp)
		jb     _081fd7_jump
		mov    (%esp),%eax
		mov    %eax,(%ebx)
		mov    %ebx,%eax
		mov    %ebx,%edx
		call   _081d5c_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)

	_0820bd_jump:
		mov    (%esp),%eax
		or     $0x000001,%al
		mov    %eax,(%ebx)
		incl   0x000018(%edx)
		lea    0x000004(%ebx),%eax
		movl   $0xffffffff,0x000014(%edx)
		call   _07b961_func
		mov    $0x000001,%eax

	_0820db_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0820e4_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    (%eax),%edx
		add    $0x000003,%edx
		and    $0x0000fc,%dl
		test   %edx,%edx
		jne    _0820fb_jump

	_0820f5_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0820fb_jump:
		cmpb   $0x000001,_0bd422_data
		jne    _08210d_jump
		cmpb   $0x000000,_0bd423_data
		je     _082116_jump

	_08210d_jump:
		cmpb   $0x000009,_0bd422_data
		jne    _08211b_jump

	_082116_jump:
		add    $0x000008,%edx
		jmp    _082122_jump

	_08211b_jump:
		call   _081dd0_func
		sub    %eax,%edx

	_082122_jump:
		mov    %edx,(%ebx)
		add    $0x00003c,%edx
		cmp    (%ebx),%edx
		jb     _0820f5_jump
		mov    _0bf610_data,%esi
		cmp    %esi,%edx
		jae    _08213a_jump
		mov    %esi,%edx
		and    $0x0000fe,%dl

	_08213a_jump:
		mov    %edx,(%ebx)
		add    $0x000fff,%edx
		cmp    (%ebx),%edx
		jb     _0820f5_jump
		and    $0x0000f0,%dh
		xor    %dl,%dl
		mov    %edx,(%ebx)
		test   %edx,%edx
		setne  %al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_08215b_func:
		xor    %eax,%eax
		ret    



_08215e_func:
		jae    _08216e_jump
		and    $0x00ffff,%eax
		push   %eax
		call   _07f6d0_func
		pop    %eax
		jmp    _082170_jump

	_08216e_jump:
		sub    %eax,%eax

	_082170_jump:
		ret    

	_082174_jump:
		ret    



_082175_func:
		push   %ds
		call   _079cb8_func
		cmpw   $0x000001,_0bf44e_data
		je     _0821d0_jump
		nop
		nop
		nop
		nop
		movw   $0x000001,_0bf44e_data
		mov    %esp,_0be43e_data
		data16 mov %ss,_0be442_data
		lss    _0be436_data,%esp
		pusha  
		push   %es
		push   %fs
		push   %gs
		push   %ds
		pop    %es
		mov    %esp,_0bf446_data
		lcall  *_0be42c_data
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0be43e_data,%esp
		movw   $0x000000,_0bf44e_data

	_0821d0_jump:
		pop    %ds
		push   %ax
		mov    $0x000020,%ax
		out    %al,$0x000020
		pop    %ax
		iret   



_0821f1_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf450_data
		je     _08222c_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_08222c_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082237_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		les    0x00000c(%ebp),%edi
		mov    %edi,_0be42c_data
		data16 mov %es,_0be430_data
		data16 mov %ds,_0be434_data
		data16 mov %ds,_0be43a_data
		cmpl   $0x000000,_0bf450_data
		je     _0822ee_jump
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0bf454_data
		je     _0822ad_jump
		nop
		nop
		nop
		nop
		mov    $0x000204,%ax
		mov    $0x000008,%bl
		int    $0x000031
		mov    %edx,_0be420_data
		mov    %cx,_0be424_data
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    $_082175_func,%edx
		mov    %cs,%cx
		int    $0x000031
		jmp    _0822d4_jump

	_0822ad_jump:
		mov    $0x003508,%ax
		int    $0x000021
		mov    %ebx,_0be420_data
		data16 mov %es,_0be424_data
		push   %ds
		xor    %ax,%ax
		mov    %eax,%es
		mov    $0x002508,%ax
		mov    $_082175_func,%edx
		push   %cs
		pop    %ds
		int    $0x000021
		pop    %ds

	_0822d4_jump:
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_0822ee_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0822f9_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf450_data
		je     _08231a_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)

	_08231a_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082325_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf450_data
		je     _082346_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_082346_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082351_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf450_data
		je     _0823c2_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0bf454_data
		je     _082399_jump
		nop
		nop
		nop
		nop
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    _0be424_data,%cx
		mov    _0be420_data,%edx
		int    $0x000031
		jmp    _0823b0_jump

	_082399_jump:
		push   %ds
		mov    $0x002508,%ax
		mov    _0be424_data,%cx
		mov    _0be420_data,%edx
		mov    %ecx,%ds
		int    $0x000021
		pop    %ds

	_0823b0_jump:
		mov    $0x000040,%dx
		mov    $0x000000,%ax
		out    %al,(%dx)
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_0823c2_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0823cd_func:
		cmpl   $0x000000,_0bf450_data
		je     _082425_jump
		nop
		nop
		nop
		nop
		movw   $0x000000,_0bf44e_data
		mov    _0bf446_data,%esp
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0be43e_data,%esp
		mov    %eax,_0bf44a_data
		pop    %eax
		mov    %ax,_0bf446_data
		push   %eax
		push   %eax
		mov    _0be420_data,%eax
		mov    %eax,(%esp)
		mov    _0be424_data,%eax
		mov    %eax,0x000004(%esp)
		mov    _0bf44a_data,%eax
		push   %eax
		mov    _0bf446_data,%ax
		mov    %eax,%ds
		pop    %eax
		lret   

	_082425_jump:
		ret    

	_082426_jump:
		ret    

	_082428_jump:
		ret    



_082429_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000600,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _08245b_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_08245b_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082466_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000601,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _082498_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_082498_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0824a3_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		mov    %ax,-0x000002(%ebp)
		push   %eax
		mov    %ax,%bx
		mov    $0x000008,%ax
		xor    %cx,%cx
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %eax
		mov    $0x000501,%ax
		xor    %ebx,%ebx
		mov    0x000008(%ebp),%ecx
		add    $0x000050,%cx
		int    $0x000031
		push   %ebx
		mov    0x00000c(%ebp),%ebx
		mov    %si,(%ebx)
		mov    %di,0x000002(%ebx)
		pop    %ebx
		pop    %eax
		push   %eax
		mov    0x000010(%ebp),%esi
		mov    %cx,(%esi)
		mov    %bx,0x000002(%esi)
		mov    %cx,%dx
		mov    %bx,%cx
		mov    %ax,%bx
		mov    $0x000007,%ax
		int    $0x000031
		movzwl -0x000002(%ebp),%ecx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		or     $0x004000,%cx
		mov    -0x000002(%ebp),%bx
		mov    $0x000009,%ax
		int    $0x000031
		pop    %eax
		xor    %edx,%edx
		mov    %ax,%dx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082531_func:
		push   %eax
		mov    %ds,%ax
		mov    %eax,%gs
		pop    %eax
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000010(%ebp),%si
		mov    0x000012(%ebp),%di
		mov    $0x000502,%ax
		int    $0x000031
		mov    $0x000001,%ax
		mov    0x00000c(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082567_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		push   %eax
		push   %eax
		push   %eax
		mov    0x00000c(%ebp),%bx
		mov    $0x000006,%ax
		int    $0x000031
		pop    %ebx
		mov    $0x000007,%ax
		int    $0x000031
		xor    %ebx,%ebx
		mov    0x00000c(%ebp),%bx
		lsl    %bx,%edx
		mov    $0x000008,%ax
		pop    %ebx
		xor    %ecx,%ecx
		int    $0x000031
		mov    $0x000009,%ax
		pop    %ebx
		lar    %bx,%ecx
		shr    $0x000008,%ecx
		or     $0x004008,%cx
		int    $0x000031
		pop    %edx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0825c4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%esi
		les    0x00000c(%ebp),%edi
		mov    $0x000020,%ecx

	_0825db_jump:
		mov    %edi,(%esi)
		data16 mov %es,0x000004(%esi)
		add    $0x00006c,%edi
		add    $0x000006,%esi
		loop   _0825db_jump
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0825f4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		add    $0x000100,%ebx
		int    $0x000031
		mov    0x00000c(%ebp),%esi
		shl    $0x000004,%eax
		mov    %eax,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %dx,(%esi)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08262a_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%es
		mov    %eax,%fs
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08268a_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000008,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		push   %ds
		push   %es
		les    0x000018(%ebp),%edi
		lds    0x000010(%ebp),%esi
		mov    %edx,%esi
		mov    $0x00006a,%ecx
		cld    
		rep movsb %ds:(%esi),%es:(%edi)
		les    0x000018(%ebp),%edi
		data16 mov %ds,%es:0x000044(%edi)
		data16 mov %ds,%es:0x00004c(%edi)
		data16 mov %ds,%es:0x000054(%edi)
		data16 mov %ds,%es:0x00005c(%edi)
		pop    %es
		pop    %ds
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0826d8_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000005,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0826fb_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08271e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		mov    %ax,_0bf54c_data
		mov    %ch,%al
		cbtw   
		mov    %ax,_0bf554_data
		mov    %cl,%al
		cbtw   
		mov    %ax,_0bf550_data
		mov    %dx,_0bf558_data
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082762_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %es
		mov    $0x000002,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		push   %ds
		les    0x000018(%ebp),%edi
		lds    0x000010(%ebp),%esi
		mov    %edx,%esi
		mov    $0x00006a,%ecx
		cld    
		rep movsb %ds:(%esi),%es:(%edi)
		les    0x000018(%ebp),%edi
		data16 mov %ds,%es:0x000044(%edi)
		data16 mov %ds,%es:0x00004c(%edi)
		data16 mov %ds,%es:0x000054(%edi)
		data16 mov %ds,%es:0x00005c(%edi)
		pop    %ds
		pop    %es
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0827e0_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082803_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x00000a,%eax
		mov    0x000020(%ebp),%ecx
		les    0x000018(%ebp),%edi
		mov    0x000024(%ebp),%edx
		mov    0x000028(%ebp),%ebx
		push   %ds
		pop    %gs
		lcall  *0x000008(%ebp)
		cli    
		mov    0x00002c(%ebp),%ebx
		mov    %edi,(%ebx)
		mov    %ecx,0x000008(%ebx)
		mov    %esi,0x000010(%ebx)
		mov    0x00000c(%ebp),%ax
		mov    %ax,0x000004(%ebx)
		mov    0x000014(%ebp),%ax
		mov    %ax,0x00000c(%ebx)
		mov    %ax,0x000014(%ebx)
		sti    
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082856_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000000,%eax
		mov    0x000018(%ebp),%bx
		mov    0x00001c(%ebp),%cx
		mov    0x000020(%ebp),%dx
		mov    %dl,%ch
		mov    0x00002c(%ebp),%si
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08288b_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000004,%eax
		mov    0x00001c(%ebp),%ecx
		mov    0x000018(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0828b4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000002,%eax
		mov    0x000018(%ebp),%ebx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0828da_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000003,%eax
		mov    $0x000008,%bx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08292b_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _082955_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000b,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_082955_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082960_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _08298a_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000c,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_08298a_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082995_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000004,%eax
		lcall  *0x000008(%ebp)
		mov    %esi,_0bf4b0_data
		mov    %edi,_0bf4b8_data
		mov    0x000014(%ebp),%ax
		mov    %ax,_0bf4b4_data
		mov    %ax,_0bf4bc_data
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0829d4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %ds
		push   %ds
		pop    %es
		mov    $_0bf460_data,%edi
		mov    0x000008(%ebp),%ebx
		lds    _0bf4b0_data,%esi
		mov    (%esi,%ebx,4),%esi
		cmp    $0xffffffff,%esi
		jne    _082a05_jump
		nop
		nop
		nop
		nop
		xor    %eax,%eax
		pop    %ds
		jmp    _082a13_jump

	_082a05_jump:
		mov    $0x000050,%ecx
		cld    
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %ds
		mov    $_0bf460_data,%eax

	_082a13_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082a1e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		les    _0bf4b8_data,%esi
		mov    0x000008(%ebp),%eax
		mov    %eax,%ebx
		shl    %eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		mov    0x00000c(%ebp),%eax
		mov    %eax,%es:(%esi,%ebx,1)
		data16 mov %ds,%es:0x000004(%esi,%ebx,1)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082a54_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %esi
		push   %es
		mov    $0x00000b,%ax
		lfs    0x000020(%ebp),%edi
		lcall  *0x000018(%ebp)
		mov    %eax,%esi
		mov    %edx,%es
		mov    $0x00000c,%ax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %esi
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082ab4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082ad1_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		int    $0x000031
		jae    _082af6_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax
		jmp    _082b07_jump

	_082af6_jump:
		mov    0x00000c(%ebp),%esi
		mov    %dx,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %ax,(%esi)
		mov    $0x000000,%eax

	_082b07_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082b12_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000000,%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082b40_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0bf4fc_data,%esi
		movl   $0x008107,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0bf4fc_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		mov    $_0bf4fc_data,%esi
		andw   $0x000001,0x000020(%esi)
		jne    _082b9c_jump
		nop
		nop
		nop
		nop
		mov    $0x000000,%eax
		jmp    _082ba1_jump

	_082b9c_jump:
		mov    $0x000001,%eax

	_082ba1_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082bac_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0bf4fc_data,%esi
		movl   $0x008108,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0bf4fc_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082bf9_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000800,%ax
		mov    0x00000a(%ebp),%bx
		mov    0x000008(%ebp),%cx
		mov    $0x000000,%si
		mov    $0x004000,%di
		int    $0x000031
		mov    %cx,-0x000008(%ebp)
		mov    %bx,-0x000006(%ebp)
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		mov    %ax,-0x000004(%ebp)
		mov    $0x000007,%ax
		mov    -0x000004(%ebp),%bx
		mov    -0x000006(%ebp),%cx
		mov    -0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000008,%ax
		mov    -0x000004(%ebp),%bx
		mov    $0x00ffff,%cx
		mov    $0x00ffff,%dx
		int    $0x000031
		mov    $0x000009,%ax
		xor    %ecx,%ecx
		mov    %ds,%cx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		mov    -0x000004(%ebp),%bx
		int    $0x000031
		mov    -0x000004(%ebp),%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082c79_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%ax
		mov    0x000008(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_082cab_jump:
		ret    



_082cac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    _0bf614_data,%esi
		test   %esi,%esi
		je     _082cfd_jump
		test   %eax,%eax
		je     _082cfd_jump
		mov    %eax,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    %ecx,%edi
		jmp    _082cf7_jump

	_082cd8_jump:
		mov    %ecx,%eax
		mov    %ebp,%edx
		mov    %edi,%ebx
		call   _0843ec_func
		test   %eax,%eax
		jne    _082cf4_jump
		cmpb   $0x00003d,(%ecx,%edi,1)
		jne    _082cf4_jump
		lea    0x000001(%edi),%eax
		add    %ecx,%eax
		jmp    _082cff_jump

	_082cf4_jump:
		add    $0x000004,%esi

	_082cf7_jump:
		mov    (%esi),%ecx
		test   %ecx,%ecx
		jne    _082cd8_jump

	_082cfd_jump:
		xor    %eax,%eax

	_082cff_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082d06_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082d45_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082d5a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082d6f_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %cx,-0x00000c(%ebp)
		mov    %ebx,-0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		cmpl   $0x000000,_0bd52c_data(%eax)
		jne    _082da5_jump
		cmpw   $0x000000,_0bd530_data(%eax)
		jne    _082da5_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _082df8_jump

	_082da5_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		jne    _082db2_jump
		cmpw   $0x000000,-0x00000c(%ebp)
		je     _082de8_jump

	_082db2_jump:
		movzwl -0x00000c(%ebp),%eax
		push   %eax
		pushl  -0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd530_data(%eax),%edx
		push   %edx
		pushl  _0bd52c_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd54e_data(%eax),%edx
		push   %edx
		pushl  _0bd54a_data(%eax)
		call   _08268a_func
		add    $0x000018,%esp
		jmp    _082df1_jump

	_082de8_jump:
		movl   $0x000002,-0x000004(%ebp)
		jmp    _082df8_jump

	_082df1_jump:
		movl   $0x000000,-0x000004(%ebp)

	_082df8_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_082e00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082e15_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082e2a_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000048,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)
		mov    %cx,-0x000044(%ebp)
		mov    %ebx,-0x000048(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x000005,-0x000030(%ebp)
		jbe    _082e70_jump
		movl   $0x00000a,-0x000028(%ebp)
		jmp    _083044_jump

	_082e70_jump:
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bd5f4_data(%eax)
		je     _082e8b_jump
		movl   $0x000009,-0x000028(%ebp)
		jmp    _083044_jump

	_082e8b_jump:
		cmpl   $0x00e000,-0x00002c(%ebp)
		jb     _082e9d_jump
		cmpl   $0x00e200,-0x00002c(%ebp)
		jbe    _082ea9_jump

	_082e9d_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _083044_jump

	_082ea9_jump:
		mov    $_0be02c_data,%edx
		mov    $_0be12b_data,%eax
		call   _07ba40_func
		mov    $_0c0e5c_data,%edx
		mov    $_0be12b_data,%eax
		call   _07ba5f_func
		push   $0x000200
		mov    $_0be12b_data,%eax
		push   %eax
		call   _07abb6_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _082eef_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _083044_jump

	_082eef_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0be3b8_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _07ae41_func

	_082eff_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0be3d8_data,%eax
		ja     _082f10_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _082f15_jump

	_082f10_jump:
		jmp    _083013_jump

	_082f15_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0be3e4_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _07ae41_func
		mov    _0be408_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0be40c_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _082f40_jump
		testb  $0x000080,_0be411_data
		jne    _082f45_jump

	_082f40_jump:
		jmp    _082ffb_jump

	_082f45_jump:
		movl   $0x000001,-0x000014(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x000018(%ebp)
		pushl  -0x000008(%ebp)
		call   _0824a3_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x00003c(%ebp)
		mov    %ecx,-0x000040(%ebp)
		movzwl -0x00003c(%ebp),%eax
		push   %eax
		pushl  -0x000040(%ebp)
		call   _082567_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000034(%ebp)
		mov    %ecx,-0x000038(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082fa2_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _083044_jump

	_082fa2_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000040(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _07b9ce_func
		mov    -0x000034(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000040(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x00001c(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000020(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _08300b_jump

	_082ffb_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _07b9ff_func

	_08300b_jump:
		incl   -0x000018(%ebp)
		jmp    _082eff_jump

	_083013_jump:
		mov    -0x000004(%ebp),%eax
		call   _07af54_func
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be40c_data,%edx
		mov    %edx,_0bd69e_data(%eax)
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd5f4_data(%eax)
		movl   $0x000000,-0x000028(%ebp)

	_083044_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		ret    $0x000014



_08304d_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		cmpl   $0x000005,-0x000008(%ebp)
		jbe    _083070_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _08311b_jump

	_083070_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bd5f4_data(%eax)
		jne    _08308b_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _08311b_jump

	_08308b_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bd5f4_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd568_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd504_data(%eax)
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0830c8_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _08311b_jump

	_0830c8_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd5cc_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd530_data(%eax),%edx
		push   %edx
		pushl  _0bd52c_data(%eax)
		call   _082531_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd5cc_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd54e_data(%eax),%edx
		push   %edx
		pushl  _0bd54a_data(%eax)
		call   _082531_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_08311b_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083125_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000044,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %cx,-0x000040(%ebp)
		mov    %ebx,-0x000044(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x001000,-0x00002c(%ebp)
		jb     _083169_jump
		cmpl   $0x001023,-0x00002c(%ebp)
		jbe    _083175_jump

	_083169_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _0832f5_jump

	_083175_jump:
		mov    $_0be02c_data,%edx
		mov    $_0be12b_data,%eax
		call   _07ba40_func
		mov    $_0c0e5c_data,%edx
		mov    $_0be12b_data,%eax
		call   _07ba5f_func
		push   $0x000200
		mov    $_0be12b_data,%eax
		push   %eax
		call   _07abb6_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _0831bb_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _0832f5_jump

	_0831bb_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0be3b8_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _07ae41_func

	_0831cb_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0be3d8_data,%eax
		ja     _0831dc_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _0831e1_jump

	_0831dc_jump:
		jmp    _0832e6_jump

	_0831e1_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0be3e4_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _07ae41_func
		mov    _0be408_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0be40c_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _08320c_jump
		testb  $0x000040,_0be411_data
		jne    _083211_jump

	_08320c_jump:
		jmp    _0832ce_jump

	_083211_jump:
		movl   $0x000001,-0x000014(%ebp)
		addl   $0x004000,-0x000008(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x00001c(%ebp)
		pushl  -0x000008(%ebp)
		call   _0824a3_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x000038(%ebp)
		mov    %ecx,-0x00003c(%ebp)
		movzwl -0x000038(%ebp),%eax
		push   %eax
		pushl  -0x00003c(%ebp)
		call   _082567_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000030(%ebp)
		mov    %ecx,-0x000034(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _082429_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _083275_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _0832f5_jump

	_083275_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _07b9ce_func
		mov    -0x000030(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000034(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x000020(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000024(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _0832de_jump

	_0832ce_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _07b9ff_func

	_0832de_jump:
		incl   -0x000018(%ebp)
		jmp    _0831cb_jump

	_0832e6_jump:
		mov    -0x000004(%ebp),%eax
		call   _07af54_func
		movl   $0x000000,-0x000028(%ebp)

	_0832f5_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000014



_0832ff_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd57c_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd518_data(%eax)
		call   _082466_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08333d_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _083390_jump

	_08333d_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd5e0_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd594_data(%eax),%edx
		push   %edx
		pushl  _0bd590_data(%eax)
		call   _082531_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd5e0_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd5b2_data(%eax),%edx
		push   %edx
		pushl  _0bd5ae_data(%eax)
		call   _082531_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_083390_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0833c1_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0833d6_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08344d_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083462_func:
		push   %esi
		push   %edi
		push   %ds
		push   %es
		push   %eax
		mov    %dx,%es
		mov    %cx,%ds
		mov    %ebx,%esi
		mov    %eax,%edi

	_083471_jump:
		mov    (%esi),%al
		mov    %al,%es:(%edi)
		cmp    $0x000000,%al
		je     _08348f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,%es:0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _083471_jump

	_08348f_jump:
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    



_083495_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    0x00000c(%esp),%eax
		push   %ds
		push   %es
		push   %edi
		xchg   %eax,%ecx
		mov    %eax,%ds
		mov    %edx,%es
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    $0x000004



_0834bd_func:
		fsave  (%eax)
		fwait
		ret    



_0834c2_func:
		frstor (%eax)
		fwait
		ret    



_0834c6_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0bd1d9_data
		je     _0834e7_jump
		mov    $_0834bd_func,%edx
		mov    $_0834c2_func,%ebx
		mov    %edx,_0bf61c_data
		mov    %ebx,_0bf620_data

	_0834e7_jump:
		xor    %eax,%eax
		mov    _0bf624_data,%ax
		call   _084444_func
		pop    %edx
		pop    %ebx
		ret    



_083501_func:
		push   %edx
		mov    _0bd1d8_data,%ah
		test   %ah,%ah
		jne    _08353f_jump
		mov    %ah,_0bd1d9_data
		sub    %eax,%eax
		push   %eax
		fninit 
		fnstcw (%esp)
		pop    %eax
		mov    %ah,%al
		xor    %dl,%dl
		cmp    $0x000003,%al
		jne    _08352a_jump
		call   _0834c6_func
		mov    %al,%dl

	_08352a_jump:
		cmpb   $0x000000,_0bd420_data
		jne    _08353f_jump
		mov    %dl,_0bd1d8_data
		mov    %dl,_0bd1d9_data

	_08353f_jump:
		pop    %edx
		ret    



_083541_func:
		mov    %esp,%eax
		sub    _0bd404_data,%eax
		ret    



_08354a_func:
		movl   $0x008000,_0bf610_data
		ret    



_083555_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		movl   $0x000000,0x00000c(%ebx)
		mov    %ds,0x000008(%esp)
		mov    0x000015(%edi),%cl
		xor    %ebx,%ebx
		cmp    $0x000047,%cl
		jb     _083592_jump
		jbe    _08359f_jump
		cmp    $0x000066,%cl
		jb     _083588_jump
		jbe    _0835b4_jump
		cmp    $0x000067,%cl
		je     _08359f_jump
		jmp    _083626_jump

	_083588_jump:
		cmp    $0x000065,%cl
		je     _0835af_jump
		jmp    _083626_jump

	_083592_jump:
		cmp    $0x000045,%cl
		jb     _083626_jump
		jbe    _0835af_jump
		jmp    _0835b4_jump

	_08359f_jump:
		cmpl   $0x000000,0x000008(%edi)
		jne    _0835ac_jump
		movl   $0x000001,0x000008(%edi)

	_0835ac_jump:
		sub    $0x000002,%cl

	_0835af_jump:
		mov    $0x000001,%ebx

	_0835b4_jump:
		mov    (%edx),%ebp
		add    $0x000008,%ebp
		mov    %ebp,(%edx)
		mov    -0x000008(%ebp),%eax
		mov    %eax,(%esp)
		mov    -0x000004(%ebp),%eax
		mov    %eax,0x000004(%esp)
		cmpl   $0xffffffff,0x000008(%edi)
		jne    _0835d5_jump
		movl   $0x000006,0x000008(%edi)

	_0835d5_jump:
		mov    0x000015(%edi),%al
		and    $0x00005f,%al
		and    $0x0000ff,%eax
		push   %eax
		xor    %eax,%eax
		mov    %cl,%al
		push   %eax
		push   $0x000003
		push   %ebx
		lea    0x000010(%esp),%edx
		xor    %ecx,%ecx
		push   $0x000027
		mov    %esi,%eax
		mov    0x000008(%edi),%ebx
		call   _0845e6_func
		mov    (%esi),%ah
		cmp    $0x00002a,%ah
		jne    _083604_jump
		mov    %ah,0x000016(%edi)

	_083604_jump:
		movb   $0x000000,0x000027(%esi)

	_083608_jump:
		cmpb   $0x000020,(%esi)
		jne    _083610_jump
		inc    %esi
		jmp    _083608_jump

	_083610_jump:
		mov    %esi,%eax
		mov    %edi,%edx
		call   _083632_func
		mov    %ds,0x000008(%esp)
		mov    %esi,%eax
		movl   $0xffffffff,0x000008(%edi)

	_083626_jump:
		mov    0x000008(%esp),%edx
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_083632_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		testb  $0x000001,0x000014(%edx)
		jne    _083677_jump

	_08363c_jump:
		mov    (%eax),%dh
		test   %dh,%dh
		je     _08364f_jump
		cmp    $0x000065,%dh
		je     _08364f_jump
		cmp    $0x000045,%dh
		je     _08364f_jump
		inc    %eax
		jmp    _08363c_jump

	_08364f_jump:
		mov    %eax,%edx
		mov    0x000015(%ebx),%cl
		dec    %eax
		cmp    $0x000047,%cl
		je     _08365f_jump
		cmp    $0x000067,%cl
		jne    _083667_jump

	_08365f_jump:
		cmpb   $0x000030,(%eax)
		jne    _083667_jump
		dec    %eax
		jmp    _08365f_jump

	_083667_jump:
		cmpb   $0x00002e,(%eax)
		je     _08366d_jump
		inc    %eax

	_08366d_jump:
		mov    (%edx),%bl
		inc    %edx
		mov    %bl,(%eax)
		inc    %eax
		test   %bl,%bl
		jne    _08366d_jump

	_083677_jump:
		pop    %ecx
		pop    %ebx
		ret    



_08367a_func:
		push   %ebx
		mov    %edx,%ebx
		xor    %edx,%edx
		call   _0847c8_func
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		pop    %ebx
		ret    



_08368b_func:
		push   %edx
		mov    $_0c0e68_data,%eax
		mov    $0x000001,%edx
		call   _080929_func
		pop    %edx
		ret    



_08369d_func:
		cmp    $0x000061,%eax
		jl     _0836aa_jump
		cmp    $0x00007a,%eax
		jg     _0836aa_jump
		sub    $0x000020,%eax

	_0836aa_jump:
		ret    



_0836b1_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000002,%eax
		call   _084987_func
		mov    %eax,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		mov    _0c1084_data(,%eax,4),%eax
		call   _0849a6_func
		mov    $_0c0f11_data,%eax
		mov    %ebx,%edx
		call   _0849a6_func
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _0849a6_func
		mov    $0x00000a,%eax
		mov    %ebx,%edx
		call   _07a930_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0836f9_func:
		push   %ebx
		mov    %eax,%ebx
		call   *_0bf568_data
		test   %eax,%eax
		jne    _083721_jump
		mov    0x000004(%ebx),%edx
		mov    (%ebx),%eax
		call   _0836b1_func
		cmpl   $0x000001,(%ebx)
		jne    _08371c_jump
		call   _080734_func
		jmp    _083721_jump

	_08371c_jump:
		call   _080745_func

	_083721_jump:
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%edx
		pop    %ebx
		ret    



_083729_func:
		mov    $_0dee48_data,%eax
		ret    



_08372f_func:
		mov    $_0dee44_data,%eax
		ret    



_083735_func:
		cmpb   $0x000000,_0bf56c_data
		je     _083758_jump
		and    $0x00ffff,%edx
		push   %edx
		push   %eax
		int3   
		jmp    _08374f_jump

	_08374f_jump:
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_083758_jump:
		xor    %eax,%eax
		ret    



_08375b_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,%ebp
		call   _080ccf_func
		test   $0x000080,%al
		je     _08379f_jump
		mov    $0x000002,%al
		mov    %esi,%ebx
		xor    %edx,%edx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		rcl    %dx
		ror    %dx
		shl    $0x000010,%edx
		mov    %ax,%dx
		mov    %edx,%edi
		test   %edx,%edx
		jge    _08379f_jump
		xor    %eax,%eax
		mov    %dx,%ax

	_083798_jump:
		call   _07f6d0_func
		jmp    _0837cf_jump

	_08379f_jump:
		mov    (%esp),%edx
		mov    %esi,%ebx
		mov    %ebp,%ecx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%edi
		mov    %eax,%edx
		test   %eax,%eax
		jge    _0837bf_jump
		xor    %eax,%eax
		mov    %si,%ax
		jmp    _083798_jump

	_0837bf_jump:
		cmp    %ebp,%eax
		je     _0837cd_jump
		mov    $0x00000c,%eax
		call   _080739_func

	_0837cd_jump:
		mov    %edx,%eax

	_0837cf_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0837e2_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		mov    %edx,%esi
		mov    %eax,%ebp
		mov    0x000000(%ebp),%eax
		mov    0x000004(%ebp),%edx
		xchg   %ebp,%esi
		mov    %eax,0x000000(%ebp)
		mov    %edx,0x000004(%ebp)
		mov    %edx,%ecx
		and    $0x7ff00000,%ecx
		je     _08380d_jump
		cmp    $0x43300000,%ecx
		jb     _08381b_jump
		xchg   %esi,%ebp

	_08380d_jump:
		sub    %eax,%eax
		mov    %eax,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_08381b_jump:
		mov    %ecx,%edi
		shr    $0x000014,%ecx
		sub    $0x0003ff,%cx
		jb     _08380d_jump
		push   %edx
		sub    %eax,%eax
		mov    $0xfff00000,%edx
		cmp    $0x000014,%cl
		jbe    _083840_jump
		sar    $0x000015,%edx
		rcr    %eax
		sub    $0x000015,%cl
		sar    %cl,%eax
		jmp    _083842_jump

	_083840_jump:
		sar    %cl,%edx

	_083842_jump:
		and    %edx,0x000004(%ebp)
		and    %eax,0x000000(%ebp)
		not    %edx
		not    %eax
		mov    %esi,%ebp
		and    0x000004(%ebp),%edx
		and    0x000000(%ebp),%eax
		call   _0838bd_func
		pop    %esi
		or     %edx,%edx
		je     _083866_jump
		and    $0x80000000,%esi
		or     %esi,%edx

	_083866_jump:
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_083872_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		push   %edx
		mov    %eax,%esi
		sub    %edx,%edx
		sub    %ecx,%ecx
		sub    %eax,%eax

	_083880_jump:
		mov    (%esi),%al
		cmp    $0x000000,%al
		je     _0838a4_jump
		mov    %edx,%edi
		mov    %ecx,%ebx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ebx,%ecx
		adc    %edi,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		and    $0x00000f,%al
		add    %eax,%ecx
		adc    $0x000000,%edx
		inc    %esi
		jmp    _083880_jump

	_0838a4_jump:
		mov    %ecx,%eax
		mov    $0x43300000,%edi
		call   _0838bd_func
		pop    %ebp
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0838bd_func:
		sub    %esi,%esi
		or     %eax,%esi
		or     %edx,%esi
		je     _08390d_jump
		test   $0xfff00000,%edx
		jne    _0838e1_jump

	_0838cd_jump:
		sub    $0x100000,%edi
		add    %eax,%eax
		adc    %edx,%edx
		test   $0xfff00000,%edx
		je     _0838cd_jump
		jmp    _083905_jump

	_0838e1_jump:
		test   $0xffe00000,%edx
		je     _083905_jump

	_0838e9_jump:
		add    $0x100000,%edi
		shr    %edx
		rcr    %eax
		rcr    %esi
		test   $0xffe00000,%edx
		jne    _0838e9_jump
		adc    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_083905_jump:
		and    $0x0fffff,%edx
		or     %edi,%edx

	_08390d_jump:
		ret    



_08390e_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0bd21d_data,%ah
		and    $0x0000f8,%ah
		mov    %ah,%dl
		mov    %ah,_0bd21d_data
		or     $0x000004,%dl
		mov    $_0bd1dc_data,%ecx
		mov    %dl,_0bd21d_data
		jmp    _083975_jump

	_083932_jump:
		mov    $0x000008,%eax
		call   _07b866_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _083961_jump
		mov    $0x000008,%eax
		call   _07b866_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _083961_jump
		mov    $_0c0f18_data,%eax
		mov    $0x000001,%edx
		call   _080929_func

	_083961_jump:
		mov    _0dee34_data,%edx
		mov    %ecx,0x000004(%ebx)
		mov    %ebx,_0dee34_data
		add    $0x00001a,%ecx
		mov    %edx,(%ebx)

	_083975_jump:
		mov    0x00000c(%ecx),%edx
		test   %edx,%edx
		jne    _083932_jump
		mov    %edx,_0dee2c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083986_func:
		xor    %eax,%eax
		call   _083997_func
		jmp    _080ff5_jump



_083997_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    $_0bd1dc_data,%esi
		add    %eax,%eax
		xor    %ebx,%ebx
		add    %eax,%esi
		mov    _0dee34_data,%eax
		jmp    _0839de_jump

	_0839b9_jump:
		mov    (%eax),%ecx
		mov    0x000004(%eax),%eax
		mov    $0x000001,%edx
		testb  $0x000040,0x00000d(%eax)
		jne    _0839d6_jump
		cmp    %esi,%eax
		jb     _0839dc_jump
		cmp    $_0bd25e_data,%eax
		jae    _0839d6_jump
		xor    %edx,%edx

	_0839d6_jump:
		call   _07b41a_func
		inc    %ebx

	_0839dc_jump:
		mov    %ecx,%eax

	_0839de_jump:
		test   %eax,%eax
		jne    _0839b9_jump
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0839e9_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		test   $0x000003,%bl
		jne    _083a1e_jump
		mov    %eax,%edx
		mov    $0x000064,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _083a0c_jump

	_083a03_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_083a0c_jump:
		mov    $0x000190,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _083a03_jump

	_083a1e_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083a24_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    0x000020(%eax),%ecx
		test   %ecx,%ecx
		jne    _083af1_jump
		lea    0x00076c(%edx),%eax
		call   _0839e9_func
		test   %eax,%eax
		je     _083a5b_jump
		mov    0x000010(%ebx),%eax
		mov    _0c10ba_data(,%eax,2),%esi
		mov    _0c10b8_data(,%eax,2),%eax
		jmp    _083a6c_jump

	_083a5b_jump:
		mov    0x000010(%ebx),%eax
		mov    _0c10a0_data(,%eax,2),%esi
		mov    _0c109e_data(,%eax,2),%eax

	_083a6c_jump:
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sub    %eax,%esi
		xor    %edi,%edi
		mov    $0x000001,%ecx
		mov    %edi,(%esp)
		mov    %edi,0x000004(%esp)
		mov    %edi,0x000008(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    0x000010(%ebx),%eax
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    %esp,%eax
		mov    %edi,0x000020(%esp)
		call   _081513_func
		mov    0x000018(%esp),%ebp
		mov    0x000018(%ebx),%edx
		sub    %ebp,%edx
		add    $0x000007,%edx
		mov    $0x000007,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00000c(%ebx),%eax
		cmp    $0x000005,%eax
		jne    _083adf_jump
		lea    -0x000001(%eax),%ecx
		mov    %ecx,%edi
		shl    $0x000003,%edi
		lea    0x000001(%edx),%eax
		sub    %ecx,%edi
		add    %edi,%eax
		cmp    %esi,%eax
		jle    _083adb_jump
		mov    0x00000c(%ebx),%eax
		sub    $0x000002,%eax
		jmp    _083ae0_jump

	_083adb_jump:
		mov    %ecx,%eax
		jmp    _083ae0_jump

	_083adf_jump:
		dec    %eax

	_083ae0_jump:
		mov    0x00001c(%esp),%ebx
		add    %edx,%ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		add    %ebx,%eax
		jmp    _083b00_jump

	_083af1_jump:
		cmp    $0x000001,%ecx
		jne    _083afd_jump
		mov    0x00001c(%eax),%eax
		sub    %ecx,%eax
		jmp    _083b00_jump

	_083afd_jump:
		mov    0x00001c(%eax),%eax

	_083b00_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_083b09_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %ebx,%edx
		call   _083a24_func
		mov    %eax,%edi
		mov    %ebx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _083a24_func
		cmp    %eax,%edi
		jle    _083b2b_jump
		mov    $0x000001,%ecx

	_083b2b_jump:
		mov    %ecx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_083b31_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ecx
		mov    $_0bf594_data,%edx
		mov    0x000014(%eax),%ebx
		mov    $_0bf570_data,%eax
		xor    %edi,%edi
		call   _083b09_func
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		je     _083b64_jump
		mov    $_0bf594_data,%ebx
		mov    $_0bf570_data,%esi
		jmp    _083b6e_jump

	_083b64_jump:
		mov    $_0bf570_data,%ebx
		mov    $_0bf594_data,%esi

	_083b6e_jump:
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		mov    0x000010(%ecx),%ebp
		call   _0839e9_func
		mov    %eax,%edx
		lea    0x000000(%ebp,%ebp,1),%eax
		test   %edx,%edx
		je     _083b96_jump
		mov    _0c10ba_data(%eax),%edx
		mov    _0c10b8_data(%eax),%eax
		jmp    _083ba2_jump

	_083b96_jump:
		mov    _0c10a0_data(%eax),%edx
		mov    _0c109e_data(%eax),%eax

	_083ba2_jump:
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000008(%esp)
		xor    %edx,%edx
		mov    0x000020(%ebx),%eax
		mov    %edx,0x000014(%esp)
		test   %eax,%eax
		jne    _083c72_jump
		mov    0x000010(%ebx),%eax
		cmp    %eax,%ebp
		jle    _083bd0_jump
		mov    $0x000001,%edi
		jmp    _083cab_jump

	_083bd0_jump:
		jne    _083cab_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%ebx),%eax
		add    $0x000007,%edx
		sub    %eax,%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		sub    %edx,%eax
		mov    0x000018(%ecx),%edx
		mov    %eax,0x000004(%esp)
		add    $0x000006,%edx
		sub    0x000018(%ebx),%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		dec    %eax
		sub    %edx,%eax
		mov    0x00000c(%ebx),%edx
		mov    %eax,(%esp)
		cmp    $0x000005,%edx
		jne    _083c4b_jump
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%edx
		sub    $0x000007,%eax
		cmp    %edx,%eax
		jge    _083cab_jump
		mov    (%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jl     _083cab_jump
		jmp    _083ca7_jump

	_083c4b_jump:
		lea    -0x000001(%edx),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		mov    0x000004(%esp),%edx
		inc    %eax
		cmp    %edx,%eax
		jg     _083cab_jump
		mov    (%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jle    _083cab_jump
		jmp    _083ca7_jump

	_083c72_jump:
		mov    0x00001c(%ebx),%edx
		cmp    $0x000001,%eax
		jne    _083c99_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _0839e9_func
		test   %eax,%eax
		je     _083c98_jump
		mov    _0c10a2_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _083c98_jump
		inc    %edx

	_083c98_jump:
		dec    %edx

	_083c99_jump:
		mov    0x00001c(%ecx),%eax
		cmp    %eax,%edx
		jg     _083cab_jump
		mov    $0x000001,%edi
		jne    _083cab_jump

	_083ca7_jump:
		mov    %edi,0x000014(%esp)

	_083cab_jump:
		cmpl   $0x000000,0x000014(%esp)
		je     _083cc3_jump
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _083dd5_func
		test   %eax,%eax
		sete   %al
		movzbl %al,%edi

	_083cc3_jump:
		test   %edi,%edi
		jne    _083cda_jump
		mov    0x00000c(%esp),%esi
		test   %esi,%esi
		je     _083dc6_jump
		mov    %esi,%edi
		jmp    _083dc6_jump

	_083cda_jump:
		xor    %ebx,%ebx
		mov    0x000020(%esi),%eax
		mov    %ebx,0x000010(%esp)
		test   %eax,%eax
		jne    _083d6a_jump
		mov    0x000010(%esi),%ebx
		cmp    %ebx,%ebp
		jle    _083cf9_jump
		xor    %edi,%edi
		jmp    _083da6_jump

	_083cf9_jump:
		jne    _083da6_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%esi),%ebx
		add    $0x000007,%edx
		sub    %ebx,%edx
		mov    $0x000007,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x00000c(%ecx),%ebp
		sub    %edx,%ebp
		mov    0x000018(%ecx),%edx
		mov    0x000018(%esi),%eax
		add    $0x000006,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x00000c(%ecx),%eax
		dec    %eax
		xor    %edi,%edi
		sub    %edx,%eax
		mov    0x00000c(%esi),%ebx
		mov    %eax,%edx
		cmp    $0x000005,%ebx
		jne    _083d57_jump
		mov    0x000008(%esp),%eax
		sub    $0x000007,%eax
		cmp    %eax,%ebp
		jg     _083d51_jump

	_083d4a_jump:
		mov    $0x000001,%edi
		jmp    _083da6_jump

	_083d51_jump:
		cmp    %eax,%edx
		jg     _083da6_jump
		jmp    _083d9e_jump

	_083d57_jump:
		dec    %ebx
		mov    %ebx,%eax
		shl    $0x000003,%eax
		sub    %ebx,%eax
		inc    %eax
		cmp    %eax,%ebp
		jl     _083d4a_jump
		cmp    %eax,%edx
		jge    _083da6_jump
		jmp    _083d9e_jump

	_083d6a_jump:
		mov    0x00001c(%esi),%ebx
		cmp    $0x000001,%eax
		jne    _083d91_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _0839e9_func
		test   %eax,%eax
		je     _083d90_jump
		mov    _0c10a2_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%ebx
		jle    _083d90_jump
		inc    %ebx

	_083d90_jump:
		dec    %ebx

	_083d91_jump:
		mov    0x00001c(%ecx),%ebp
		cmp    %ebp,%ebx
		jg     _083da6_jump
		xor    %edi,%edi
		cmp    %ebp,%ebx
		jne    _083da6_jump

	_083d9e_jump:
		movl   $0x000001,0x000010(%esp)

	_083da6_jump:
		cmpl   $0x000000,0x000010(%esp)
		je     _083db8_jump
		mov    %ecx,%eax
		mov    %esi,%edx
		call   _083dd5_func
		mov    %eax,%edi

	_083db8_jump:
		mov    0x00000c(%esp),%ebx
		test   %ebx,%ebx
		je     _083dc6_jump
		mov    %ebx,%eax
		sub    %edi,%eax
		mov    %eax,%edi

	_083dc6_jump:
		mov    %edi,%eax
		mov    %edi,0x000020(%ecx)
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083dd5_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    0x000008(%eax),%ecx
		mov    0x000008(%edx),%esi
		xor    %ebx,%ebx
		cmp    %esi,%ecx
		jl     _083df9_jump
		jne    _083dfe_jump
		mov    0x000004(%eax),%ecx
		mov    0x000004(%edx),%ebp
		cmp    %ebp,%ecx
		jl     _083df9_jump
		jne    _083dfe_jump
		mov    (%eax),%eax
		cmp    (%edx),%eax
		jge    _083dfe_jump

	_083df9_jump:
		mov    $0x000001,%ebx

	_083dfe_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_083e05_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%eax
		cmp    $0x00a8c0,%edx
		jae    _083e32_jump
		test   %ebx,%ebx
		jle    _083e32_jump
		lea    0x015180(%edx),%esi
		sub    %ebx,%esi
		xor    %edx,%edx
		mov    $0x015180,%ebx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi
		dec    %edi
		jmp    _083e41_jump

	_083e32_jump:
		mov    $0x015180,%ebx
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi

	_083e41_jump:
		mov    $0x015180,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %edx,%ebx
		mov    $0x000e10,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    %edx,%ebx
		mov    $0x00003c,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000004(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    $0x00016e,%ebx
		mov    %edi,%eax
		mov    %edx,(%ecx)
		xor    %edx,%edx
		div    %ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    %edi,%ebx
		sub    %eax,%ebx
		test   %edx,%edx
		jbe    _083ea8_jump
		lea    -0x000001(%edx),%eax
		shr    $0x000002,%eax
		sub    %eax,%ebx

	_083ea8_jump:
		lea    0x00076c(%edx),%eax
		call   _0839e9_func
		add    $0x00016d,%eax

	_083eb8_jump:
		cmp    %eax,%ebx
		jb     _083ec1_jump
		inc    %edx
		sub    %eax,%ebx
		jmp    _083eb8_jump

	_083ec1_jump:
		mov    $_0c10a0_data,%esi
		mov    %ebx,0x00001c(%ecx)
		lea    0x00076c(%edx),%eax
		mov    %edx,0x000014(%ecx)
		call   _0839e9_func
		test   %eax,%eax
		je     _083ee0_jump
		mov    $_0c10ba_data,%esi

	_083ee0_jump:
		mov    $0x00001f,%ebp
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		mov    %eax,%edx
		mov    (%esi,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    %edx,%ebx
		jb     _083ef8_jump
		inc    %eax

	_083ef8_jump:
		mov    %eax,0x000010(%ecx)
		movswl (%esi,%eax,2),%eax
		sub    %eax,%ebx
		xor    %edx,%edx
		inc    %ebx
		lea    0x000001(%edi),%eax
		mov    %ebx,0x00000c(%ecx)
		mov    $0x000007,%ebx
		div    %ebx
		mov    %ecx,%eax
		mov    %edx,0x000018(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_083f44_func:
		mov    $_0c0f48_data,%eax
		call   _082cac_func
		test   %eax,%eax
		jne    _084185_jump
		ret    



_083f57_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ecx
		xor    %edx,%edx

	_083f5d_jump:
		mov    (%eax),%bl
		cmp    $0x000030,%bl
		jb     _083f78_jump
		cmp    $0x000039,%bl
		ja     _083f78_jump
		imul   $0x00000a,%edx,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		add    %ebx,%edx
		inc    %eax
		sub    $0x000030,%edx
		jmp    _083f5d_jump

	_083f78_jump:
		mov    %edx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_083f7d_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,0x000010(%esp)
		cmpb   $0x00003a,(%eax)
		jne    _083f90_jump
		inc    %ebp

	_083f90_jump:
		mov    %ebp,%esi

	_083f92_jump:
		mov    0x000000(%ebp),%dl
		test   %dl,%dl
		je     _083fb5_jump
		cmp    $0x00002c,%dl
		je     _083fb5_jump
		cmp    $0x00002d,%dl
		je     _083fb5_jump
		cmp    $0x00002b,%dl
		je     _083fb5_jump
		cmp    $0x000030,%dl
		jb     _083fb2_jump
		cmp    $0x000039,%dl
		jbe    _083fb5_jump

	_083fb2_jump:
		inc    %ebp
		jmp    _083f92_jump

	_083fb5_jump:
		mov    %ebp,%eax
		sub    %esi,%eax
		mov    %eax,0x00000c(%esp)
		cmp    $0x00001e,%eax
		jle    _083fca_jump
		movl   $0x00001e,0x00000c(%esp)

	_083fca_jump:
		mov    0x000010(%esp),%edi
		mov    0x00000c(%esp),%ecx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x00000c(%esp),%ecx
		lea    (%edi,%ecx,1),%eax
		xor    %esi,%esi
		movb   $0x000000,(%eax)
		lea    0x000001(%ebp),%eax
		cmp    $0x00002d,%dl
		jne    _084003_jump
		mov    $0x000001,%esi
		jmp    _084008_jump

	_084003_jump:
		cmp    $0x00002b,%dl
		jne    _08400a_jump

	_084008_jump:
		mov    %eax,%ebp

	_08400a_jump:
		mov    0x000000(%ebp),%al
		cmp    $0x000030,%al
		jb     _084089_jump
		cmp    $0x000039,%al
		ja     _084089_jump
		lea    0x000008(%esp),%edx
		xor    %edi,%edi
		mov    %ebp,%eax
		mov    %edi,(%esp)
		mov    %edi,0x000004(%esp)
		mov    %edi,0x000008(%esp)
		call   _083f57_func
		mov    %eax,%edx
		mov    (%eax),%cl
		mov    %eax,%ebp
		cmp    $0x00003a,%cl
		jne    _08405a_jump
		lea    0x000004(%esp),%edx
		inc    %eax
		call   _083f57_func
		mov    %eax,%edx
		mov    (%eax),%ch
		mov    %eax,%ebp
		cmp    %cl,%ch
		jne    _08405a_jump
		mov    %esp,%edx
		inc    %eax
		call   _083f57_func
		mov    %eax,%ebp

	_08405a_jump:
		mov    0x000008(%esp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    0x000004(%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,(%ebx)
		test   %esi,%esi
		je     _084089_jump
		mov    %edx,%ecx
		neg    %ecx
		mov    %ecx,(%ebx)

	_084089_jump:
		mov    %ebp,%eax
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_084093_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    (%eax),%ah
		mov    $0xffffffff,%esi
		cmp    $0x00004a,%ah
		jne    _0840b0_jump
		mov    $0x000001,%esi
		add    %esi,%ebx

	_0840b0_jump:
		cmpb   $0x00004d,(%ebx)
		jne    _0840b8_jump
		inc    %ebx
		xor    %esi,%esi

	_0840b8_jump:
		lea    0x00000c(%esp),%edx
		mov    %ebx,%eax
		mov    %esi,0x000020(%ecx)
		call   _083f57_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %esi,%esi
		je     _0840d7_jump
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00001c(%ecx)
		jmp    _08411c_jump

	_0840d7_jump:
		mov    0x00000c(%esp),%eax
		dec    %eax
		mov    %eax,0x000010(%ecx)
		cmpb   $0x00002e,(%edx)
		jne    _084115_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _083f57_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00000c(%ecx)
		cmpb   $0x00002e,(%edx)
		jne    _084115_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _083f57_func
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000018(%ecx)

	_084115_jump:
		movl   $0x000000,0x00001c(%ecx)

	_08411c_jump:
		mov    $0x000002,%edx
		xor    %esi,%esi
		mov    %edx,0x000008(%esp)
		mov    %esi,(%esp)
		mov    %esi,0x000004(%esp)
		cmpb   $0x00002f,(%ebx)
		jne    _084169_jump
		lea    0x000008(%esp),%edx
		lea    0x000001(%ebx),%eax
		call   _083f57_func
		mov    %eax,%edx
		mov    %eax,%ebx
		cmpb   $0x00003a,(%eax)
		jne    _084169_jump
		lea    0x000001(%edx),%eax
		lea    0x000004(%esp),%edx
		call   _083f57_func
		mov    %eax,%edx
		mov    %eax,%ebx
		cmpb   $0x00003a,(%eax)
		jne    _084169_jump
		lea    0x000001(%edx),%eax
		mov    %esp,%edx
		call   _083f57_func
		mov    %eax,%ebx

	_084169_jump:
		mov    (%esp),%eax
		mov    %eax,(%ecx)
		mov    0x000004(%esp),%eax
		mov    %eax,0x000004(%ecx)
		mov    0x000008(%esp),%eax
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		add    $0x000010,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_084185_jump:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    $_0bf5b8_data,%ebx
		mov    %edx,_0bf5c0_data
		mov    $_0bf5c4_data,%edx
		call   _083f7d_func
		mov    %eax,%edx
		mov    (%eax),%ah
		test   %ah,%ah
		jne    _0841b2_jump
		mov    %ah,_0bf5e3_data
		jmp    _08420d_jump

	_0841b2_jump:
		mov    $0x000001,%ebx
		mov    _0bf5b8_data,%eax
		mov    %ebx,_0bf5c0_data
		sub    $0x000e10,%eax
		mov    %esp,%ebx
		mov    %eax,(%esp)
		mov    %edx,%eax
		mov    $_0bf5e3_data,%edx
		call   _083f7d_func
		mov    (%esp),%ecx
		mov    _0bf5b8_data,%ebx
		sub    %ecx,%ebx
		mov    %ebx,_0bf5bc_data
		mov    (%eax),%bl
		mov    %eax,%edx
		cmp    $0x00002c,%bl
		jne    _0841fd_jump
		mov    $_0bf570_data,%edx
		inc    %eax
		call   _084093_func

	_0841fd_jump:
		cmpb   $0x00002c,(%eax)
		jne    _08420d_jump
		mov    $_0bf594_data,%edx
		inc    %eax
		call   _084093_func

	_08420d_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084214_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		mov    $0x000000,%dl
		ftst   
		fnstsw %ax
		sahf   
		jae    _084229_jump
		fchs   
		not    %dl

	_084229_jump:
		fld1   
		fcom   %st(1)
		fnstsw %ax
		and    $0x004100,%ax
		je     _08424a_jump
		fxch   %st(1)
		fpatan 
		mov    $0x000002,%ax
		mov    %ax,-0x000002(%ebp)
		fldpi  
		fidivs -0x000002(%ebp)
		fsubp  %st,%st(1)
		jmp    _08424c_jump

	_08424a_jump:
		fpatan 

	_08424c_jump:
		cmp    $0x000000,%dl
		je     _084253_jump
		fchs   

	_084253_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

	_084324_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08432a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		push   %eax
		cmp    _0bd408_data,%eax
		jb     _084391_jump
		cmpb   $0x000000,_0bd422_data
		jne    _0843a3_jump
		mov    (%esp),%ebp
		add    $0x00000f,%ebp
		shr    $0x000004,%ebp
		test   %ebp,%ebp
		jne    _084355_jump
		mov    $0xfffffff,%ebp

	_084355_jump:
		xor    %ebx,%ebx
		mov    %ds,%eax
		mov    %ax,%bx
		mov    $0x0000ed,%ah
		int    $0x000021
		shl    $0x00001f,%eax
		and    $0x00ffff,%edi
		or     %eax,%edi
		test   %edi,%edi
		jge    _08437f_jump
		mov    %edi,%es
		mov    %ebp,%ebx
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _084391_jump

	_08437f_jump:
		mov    %ds,%eax
		mov    %eax,%es
		mov    %ebp,%ebx

	_084385_jump:
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    _0843d4_jump

	_084391_jump:
		call   _083729_func
		movl   $0x000005,(%eax)
		mov    $0xffffffff,%eax
		jmp    _0843e2_jump

	_0843a3_jump:
		mov    (%esp),%ebx
		add    $0x000fff,%ebx
		shr    $0x00000c,%ebx
		test   %ebx,%ebx
		jne    _0843b8_jump
		mov    $0x0fffff,%ebx

	_0843b8_jump:
		mov    _0bd422_data,%dl
		cmp    $0x000001,%dl
		jne    _0843ce_jump
		cmp    _0bd423_data,%dl
		jne    _0843ce_jump
		shl    $0x000008,%ebx

	_0843ce_jump:
		mov    %ds,%eax
		mov    %eax,%es
		jmp    _084385_jump

	_0843d4_jump:
		mov    (%esp),%ebx
		mov    _0bd3f4_data,%eax
		mov    %ebx,_0bd3f4_data

	_0843e2_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %es
		jmp    _084324_jump



_0843ec_func:
		push   %ecx
		sub    $0x000004,%esp

	_0843f0_jump:
		test   %ebx,%ebx
		jne    _0843fb_jump

	_0843f4_jump:
		xor    %eax,%eax
		add    $0x000004,%esp
		pop    %ecx
		ret    

	_0843fb_jump:
		mov    (%edx),%ch
		mov    (%eax),%cl
		mov    %ch,(%esp)
		cmp    $0x000041,%cl
		jb     _08440f_jump
		cmp    $0x00005a,%cl
		ja     _08440f_jump
		add    $0x000020,%cl

	_08440f_jump:
		mov    (%esp),%ch
		cmp    $0x000041,%ch
		jb     _084422_jump
		cmp    $0x00005a,%ch
		ja     _084422_jump
		add    $0x000020,%ch
		mov    %ch,(%esp)

	_084422_jump:
		mov    (%esp),%ch
		cmp    %ch,%cl
		je     _08443a_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %cl,%dl
		mov    %ch,%al
		sub    %eax,%edx
		mov    %edx,%eax
		add    $0x000004,%esp
		pop    %ecx
		ret    

	_08443a_jump:
		test   %ch,%ch
		je     _0843f4_jump
		inc    %eax
		inc    %edx
		dec    %ebx
		jmp    _0843f0_jump

	_084443_jump:
		ret    



_084444_func:
		push   %ax
		finit  
		fld1   
		fldz   
		fdivrp %st,%st(1)
		fld    %st(0)
		fchs   
		fcompp 
		fnstsw %ax
		mov    $0x000002,%al
		sahf   
		je     _08445e_jump
		mov    $0x000003,%al

	_08445e_jump:
		finit  
		fldcw  (%esp)
		xchg   %ax,(%esp)
		pop    %ax
		ret    



_084471_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%eax
		test   %edx,%edx
		jge    _08448a_jump
		mov    $0x00002d,%dh
		neg    %esi
		mov    %dh,(%esp)
		jmp    _08448e_jump

	_08448a_jump:
		movb   $0x00002b,(%esp)

	_08448e_jump:
		mov    $0x000064,%ebx
		mov    $0x000003,%edx
		cmp    %ebx,%esi
		jge    _0844b1_jump
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		cmp    %ebx,%esi
		jge    _0844b1_jump
		mov    $0x000001,%edx
		mov    %edx,%ebx

	_0844b1_jump:
		test   %eax,%eax
		jne    _0844c1_jump
		mov    $0x000002,%eax
		cmp    $0x000003,%edx
		jne    _0844c1_jump
		mov    %edx,%eax

	_0844c1_jump:
		lea    0x000001(%eax),%ebp
		cmp    %ecx,%ebp
		jg     _08450f_jump
		cmp    %eax,%edx
		jg     _08450c_jump
		mov    (%esp),%cl
		mov    %cl,(%edi)

	_0844d1_jump:
		inc    %edi
		cmp    %edx,%eax
		jle    _0844dc_jump
		dec    %eax
		movb   $0x000030,(%edi)
		jmp    _0844d1_jump

	_0844dc_jump:
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,%edx
		add    $0x000030,%eax
		sar    $0x00001f,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		idiv   %ebx
		mov    %edx,%esi
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edi
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _0844dc_jump
		jmp    _08450f_jump

	_08450c_jump:
		lea    0x000001(%edx),%ebp

	_08450f_jump:
		mov    %ebp,%eax
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi

	_084516_jump:
		pop    %esi
		ret    



_084518_func:
		push   %esi
		mov    %ebx,%esi
		test   %ecx,%ecx
		jne    _08452d_jump
		test   %ebx,%ebx
		jg     _08452d_jump
		movb   $0x000030,(%eax)
		inc    %eax
		movb   $0x00002e,(%eax)
		inc    %eax
		pop    %esi
		ret    

	_08452d_jump:
		test   %esi,%esi
		jle    _08453e_jump
		mov    (%edx),%bl
		test   %bl,%bl
		je     _08453e_jump
		inc    %edx
		dec    %esi
		mov    %bl,(%eax)
		inc    %eax
		jmp    _08452d_jump

	_08453e_jump:
		test   %esi,%esi
		jle    _08454b_jump

	_084542_jump:
		dec    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		test   %esi,%esi
		jg     _084542_jump

	_08454b_jump:
		movb   $0x00002e,(%eax)
		inc    %eax
		test   %ecx,%ecx
		jle    _08455f_jump

	_084553_jump:
		test   %esi,%esi
		je     _08455f_jump
		inc    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		dec    %ecx
		jne    _084553_jump

	_08455f_jump:
		test   %ecx,%ecx
		jle    _084516_jump

	_084563_jump:
		mov    (%edx),%bh
		test   %bh,%bh
		je     _084570_jump
		inc    %edx
		mov    %bh,(%eax)
		inc    %eax
		dec    %ecx
		jne    _084563_jump

	_084570_jump:
		test   %ecx,%ecx
		je     _084516_jump
		dec    %ecx
		movb   $0x000030,(%eax)
		inc    %eax
		jmp    _084570_jump



_08457b_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmp    %ebx,%edx
		je     _0845de_jump
		mov    %edi,-0x000014(%ebp)
		mov    0x000001(%eax),%al
		lea    (%ebx,%edi,1),%edx
		mov    %al,-0x000010(%ebp)
		lea    (%esi,%edi,1),%eax

	_08459b_jump:
		dec    %eax
		dec    %edx
		mov    (%eax),%cl
		dec    %esi
		mov    %cl,(%edx)
		mov    -0x000014(%ebp),%ecx
		dec    %ebx
		cmp    %ecx,%eax
		jne    _08459b_jump
		mov    (%edi),%ah
		cmp    $0x00002e,%ah
		jne    _0845b8_jump
		dec    %ebx
		movb   $0x000030,(%edi,%ebx,1)
		jmp    _0845d2_jump

	_0845b8_jump:
		cmp    $0x00002b,%ah
		je     _0845c2_jump
		cmp    $0x00002d,%ah
		jne    _0845d2_jump

	_0845c2_jump:
		cmpb   $0x00002e,-0x000010(%ebp)
		jne    _0845d2_jump
		movb   $0x000030,(%edi,%ebx,1)
		dec    %ebx
		mov    (%edi),%dl
		mov    %dl,(%edi,%ebx,1)

	_0845d2_jump:
		mov    $0x000020,%edx
		mov    %edi,%eax
		call   _079cd0_func

	_0845de_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_0845e6_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000008(%ebp),%edi
		mov    %eax,-0x000014(%ebp)
		mov    %edx,%esi
		mov    %ebx,-0x000018(%ebp)
		mov    %cl,-0x000010(%ebp)
		mov    0x000018(%ebp),%cl
		lea    -0x00003c(%ebp),%ebx
		mov    (%edx),%eax
		mov    0x000004(%edx),%edx
		call   _084afb_func
		test   %eax,%eax
		je     _08462c_jump
		mov    -0x000014(%ebp),%eax
		xor    %esi,%esi
		jmp    _08461f_jump

	_084617_jump:
		cmp    %edi,%esi
		jge    _08461d_jump
		mov    %dh,(%eax)

	_08461d_jump:
		inc    %eax
		inc    %esi

	_08461f_jump:
		mov    -0x00003c(%esi,%ebp,1),%dh
		test   %dh,%dh
		jne    _084617_jump
		jmp    _0847ab_jump

	_08462c_jump:
		mov    %cl,-0x00000c(%ebp)
		cmp    $0x000047,%cl
		jne    _084686_jump
		mov    (%esi),%eax
		mov    0x000004(%esi),%edx
		call   _080d74_func
		mov    %edx,%ebx
		test   %edx,%edx
		je     _08467e_jump
		call   _084b81_func
		mov    %edx,%ebx
		call   _084bab_func
		call   _07a21c_func
		cmp    $0xfffffffc,%eax
		jl     _08465f_jump
		cmp    -0x000018(%ebp),%eax
		jl     _084665_jump

	_08465f_jump:
		movb   $0x000045,-0x00000c(%ebp)
		jmp    _084686_jump

	_084665_jump:
		test   %ebx,%ebx
		jl     _08466a_jump
		inc    %eax

	_08466a_jump:
		mov    $0x000046,%dl
		mov    -0x000018(%ebp),%ebx
		mov    %dl,-0x00000c(%ebp)
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,-0x000018(%ebp)
		mov    %eax,0x00000c(%ebp)
		jmp    _084686_jump

	_08467e_jump:
		mov    $0x000046,%ah
		mov    %edx,0x00000c(%ebp)
		mov    %ah,-0x00000c(%ebp)

	_084686_jump:
		cmpb   $0x000045,-0x00000c(%ebp)
		jne    _0846b6_jump
		mov    -0x000018(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		neg    %eax
		cmp    %edx,%eax
		jge    _0846a2_jump
		mov    -0x000018(%ebp),%eax
		add    $0x000002,%eax
		cmp    %edx,%eax
		jg     _0846b6_jump

	_0846a2_jump:
		mov    -0x000014(%ebp),%eax
		mov    $0x00002a,%edx
		mov    %edi,%ebx
		call   _079cd0_func
		jmp    _0847bf_jump

	_0846b6_jump:
		mov    -0x000018(%ebp),%eax
		mov    %eax,-0x00001c(%ebp)
		cmp    $0x000045,%cl
		jne    _0846d2_jump
		mov    0x00000c(%ebp),%ecx
		test   %ecx,%ecx
		jle    _0846cb_jump
		inc    %eax
		jmp    _0846cf_jump

	_0846cb_jump:
		jge    _0846d2_jump
		add    %ecx,%eax

	_0846cf_jump:
		mov    %eax,-0x00001c(%ebp)

	_0846d2_jump:
		mov    0x000004(%esi),%edx
		mov    (%esi),%eax
		mov    %edx,-0x000020(%ebp)
		test   %edx,%edx
		je     _0846f5_jump
		cmpb   $0x000045,-0x00000c(%ebp)
		je     _0846f5_jump
		mov    0x00000c(%ebp),%ecx
		test   %ecx,%ecx
		je     _0846f5_jump
		mov    %ecx,%ebx
		call   _084c2a_func
		mov    %edx,-0x000020(%ebp)

	_0846f5_jump:
		lea    -0x00003c(%ebp),%edx
		push   %edx
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%dl
		push   %edx
		lea    -0x000028(%ebp),%edx
		mov    -0x00001c(%ebp),%ebx
		push   %edx
		lea    -0x000024(%ebp),%ecx
		mov    -0x000020(%ebp),%edx
		call   _084d4a_func
		mov    -0x000014(%ebp),%eax
		mov    -0x000028(%ebp),%esi
		lea    0x000001(%eax),%edx
		test   %esi,%esi
		je     _084723_jump
		movb   $0x00002d,(%eax)
		jmp    _08472c_jump

	_084723_jump:
		cmpb   $0x000000,-0x000010(%ebp)
		je     _08472e_jump
		movb   $0x00002b,(%eax)

	_08472c_jump:
		mov    %edx,%eax

	_08472e_jump:
		cmpb   $0x000045,-0x00000c(%ebp)
		jne    _08477e_jump
		mov    -0x00001c(%ebp),%ecx
		mov    0x00000c(%ebp),%edx
		mov    0x00000c(%ebp),%ebx
		sub    %edx,%ecx
		lea    -0x00003c(%ebp),%edx
		call   _084518_func
		mov    -0x000014(%ebp),%ecx
		mov    0x000014(%ebp),%dl
		mov    %eax,%esi
		mov    %eax,%ebx
		sub    %ecx,%esi
		test   %dl,%dl
		je     _08475f_jump
		cmp    %edi,%esi
		jge    _08475f_jump
		inc    %esi
		mov    %dl,(%eax)
		inc    %eax

	_08475f_jump:
		cmpl   $0x000000,-0x000020(%ebp)
		je     _08476b_jump
		mov    0x00000c(%ebp),%edx
		sub    %edx,-0x000024(%ebp)

	_08476b_jump:
		mov    -0x000024(%ebp),%edx
		mov    %edi,%ecx
		mov    0x000010(%ebp),%ebx
		sub    %esi,%ecx
		call   _084471_func
		add    %eax,%esi
		jmp    _0847ab_jump

	_08477e_jump:
		mov    -0x000014(%ebp),%edx
		mov    %eax,%ebx
		sub    %edx,%ebx
		mov    -0x000024(%ebp),%edx
		mov    -0x00001c(%ebp),%ecx
		inc    %edx
		add    %ecx,%edx
		add    %ebx,%edx
		cmp    %edx,%edi
		jge    _084799_jump
		lea    0x000001(%edi),%esi
		jmp    _0847ab_jump

	_084799_jump:
		lea    -0x00003c(%ebp),%edx
		mov    -0x000024(%ebp),%ebx
		mov    -0x000014(%ebp),%esi
		call   _084518_func
		sub    %esi,%eax
		mov    %eax,%esi

	_0847ab_jump:
		cmp    %edi,%esi
		jg     _0846a2_jump
		mov    -0x000014(%ebp),%eax
		mov    %esi,%edx
		mov    %edi,%ebx
		call   _08457b_func

	_0847bf_jump:
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x000014



_0847c8_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000024,%esp
		push   %edx
		mov    %eax,-0x000018(%ebp)

	_0847d6_jump:
		mov    (%eax),%dl
		cmp    $0x000020,%dl
		je     _0847e7_jump
		cmp    $0x000009,%dl
		jb     _0847ea_jump
		cmp    $0x00000d,%dl
		ja     _0847ea_jump

	_0847e7_jump:
		inc    %eax
		jmp    _0847d6_jump

	_0847ea_jump:
		lea    0x000001(%eax),%ebx
		xor    %cl,%cl
		cmp    $0x00002b,%dl
		je     _0847fb_jump
		cmp    $0x00002d,%dl
		jne    _0847fd_jump
		mov    $0x000001,%cl

	_0847fb_jump:
		mov    %ebx,%eax

	_0847fd_jump:
		mov    $0x000030,%bl
		xor    %edx,%edx
		xor    %esi,%esi

	_084803_jump:
		mov    (%eax),%ch
		inc    %eax
		cmp    $0x00002e,%ch
		jne    _084815_jump
		test   $0x000008,%cl
		jne    _08483b_jump
		or     $0x000008,%cl
		jmp    _084803_jump

	_084815_jump:
		cmp    $0x000030,%ch
		jb     _08483b_jump
		cmp    $0x000039,%ch
		ja     _08483b_jump
		test   $0x000008,%cl
		je     _084825_jump
		inc    %esi

	_084825_jump:
		or     %ch,%bl
		cmp    $0x000030,%bl
		je     _084836_jump
		cmp    $0x000011,%edx
		jge    _084835_jump
		mov    %ch,-0x000034(%edx,%ebp,1)

	_084835_jump:
		inc    %edx

	_084836_jump:
		or     $0x000004,%cl
		jmp    _084803_jump

	_08483b_jump:
		xor    %ebx,%ebx
		test   $0x000004,%cl
		je     _0848b1_jump
		cmp    $0x000065,%ch
		je     _08485a_jump
		cmp    $0x000045,%ch
		je     _08485a_jump
		cmp    $0x000064,%ch
		je     _08485a_jump
		cmp    $0x000044,%ch
		jne    _0848ad_jump

	_08485a_jump:
		lea    -0x000001(%eax),%edi
		mov    %edi,-0x000014(%ebp)
		lea    0x000001(%eax),%edi
		mov    (%eax),%ch
		cmp    $0x00002b,%ch
		je     _084872_jump
		cmp    $0x00002d,%ch
		jne    _084874_jump
		or     $0x000002,%cl

	_084872_jump:
		mov    %edi,%eax

	_084874_jump:
		and    $0x0000fb,%cl

	_084877_jump:
		mov    (%eax),%ch
		cmp    $0x000030,%ch
		jb     _08489c_jump
		cmp    $0x000039,%ch
		ja     _08489c_jump
		cmp    $0x0003e8,%ebx
		jge    _084896_jump
		imul   $0x00000a,%ebx,%ebx
		movzbl %ch,%edi
		add    %edi,%ebx
		sub    $0x000030,%ebx

	_084896_jump:
		or     $0x000004,%cl
		inc    %eax
		jmp    _084877_jump

	_08489c_jump:
		test   $0x000002,%cl
		je     _0848a3_jump
		neg    %ebx

	_0848a3_jump:
		test   $0x000004,%cl
		jne    _0848ae_jump
		mov    -0x000014(%ebp),%eax
		jmp    _0848ae_jump

	_0848ad_jump:
		dec    %eax

	_0848ae_jump:
		mov    %eax,-0x000018(%ebp)

	_0848b1_jump:
		sub    %esi,%ebx
		cmp    $0x000011,%edx
		jle    _0848c2_jump
		sub    $0x000011,%edx
		add    %edx,%ebx
		mov    $0x000011,%edx

	_0848c2_jump:
		test   %edx,%edx
		jle    _0848d1_jump
		cmpb   $0x000030,-0x000035(%edx,%ebp,1)
		jne    _0848d1_jump
		inc    %ebx
		dec    %edx
		jmp    _0848c2_jump

	_0848d1_jump:
		test   %edx,%edx
		jne    _0848dd_jump
		mov    %edx,-0x000020(%ebp)
		jmp    _084963_jump

	_0848dd_jump:
		xor    %ah,%ah
		mov    %ah,-0x000034(%edx,%ebp,1)
		lea    -0x000034(%ebp),%eax
		lea    -0x000020(%ebp),%edx
		call   _083872_func
		cmp    $0x000134,%ebx
		jle    _084927_jump
		call   _080745_func
		test   $0x000001,%cl
		je     _084915_jump
		mov    _0c1034_data,%eax
		mov    _0c1038_data,%edx
		call   _07a208_func
		mov    %eax,-0x000020(%ebp)
		jmp    _084963_jump

	_084915_jump:
		mov    _0c1034_data,%eax
		mov    %eax,-0x000020(%ebp)
		mov    _0c1038_data,%eax

	_084922_jump:
		mov    %eax,-0x00001c(%ebp)
		jmp    _084966_jump

	_084927_jump:
		cmp    $0xfffffebb,%ebx
		jge    _08493b_jump
		call   _080745_func
		xor    %eax,%eax
		mov    %eax,-0x000020(%ebp)
		jmp    _084922_jump

	_08493b_jump:
		test   %ebx,%ebx
		je     _084950_jump
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _084c2a_func
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x00001c(%ebp)

	_084950_jump:
		test   $0x000001,%cl
		je     _084966_jump
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _07a208_func
		mov    %eax,-0x000020(%ebp)

	_084963_jump:
		mov    %edx,-0x00001c(%ebp)

	_084966_jump:
		mov    -0x000038(%ebp),%esi
		test   %esi,%esi
		je     _084972_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,(%esi)

	_084972_jump:
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_084982_func:
		jmp    _084f2f_jump



_084987_func:
		push   %edx
		cmp    $0x000005,%eax
		jbe    _084991_jump
		xor    %eax,%eax
		pop    %edx
		ret    

	_084991_jump:
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0bd1dc_data,%eax
		pop    %edx
		ret    



_0849a6_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    %edx,%ebx
		cmpl   $0x000000,0x000008(%edx)
		jne    _0849bc_jump
		mov    %ebx,%eax
		call   _080946_func

	_0849bc_jump:
		mov    0x00000d(%ebx),%ah
		xor    %edi,%edi
		test   $0x000004,%ah
		je     _0849db_jump
		mov    %ah,%dl
		and    $0x0000f9,%dl
		mov    %dl,%dh
		mov    %dl,0x00000d(%ebx)
		or     $0x000002,%dh
		mov    $0x000001,%edi
		mov    %dh,0x00000d(%ebx)

	_0849db_jump:
		mov    %ecx,%ebp
		xor    %esi,%esi

	_0849df_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		test   %eax,%eax
		je     _0849f6_jump
		mov    %ebx,%edx
		inc    %ecx
		call   _07a930_func
		cmp    $0xffffffff,%eax
		jne    _0849df_jump
		mov    %eax,%esi

	_0849f6_jump:
		test   %edi,%edi
		je     _084a17_jump
		mov    0x00000d(%ebx),%al
		and    $0x0000f9,%al
		mov    %al,%ah
		mov    %al,0x00000d(%ebx)
		or     $0x000004,%ah
		mov    %ah,0x00000d(%ebx)
		test   %esi,%esi
		jne    _084a17_jump
		mov    %ebx,%eax
		call   _0809dc_func
		mov    %eax,%esi

	_084a17_jump:
		test   %esi,%esi
		jne    _084a1f_jump
		mov    %ecx,%esi
		sub    %ebp,%esi

	_084a1f_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_084a27_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		cmpl   $0x000000,_0bf614_data
		jne    _084af2_jump
		mov    _0bd429_data,%fs
		xor    %ecx,%ecx
		xor    %dl,%dl
		mov    %fs,%eax
		mov    _0bd425_data,%edi
		mov    %eax,%es
		mov    %edi,%eax

	_084a52_jump:
		cmp    %es:(%eax),%dl
		je     _084a6a_jump

	_084a57_jump:
		mov    %es:(%eax),%dh
		lea    0x000001(%eax),%ebx
		cmp    %dh,%dl
		je     _084a65_jump
		mov    %ebx,%eax
		jmp    _084a57_jump

	_084a65_jump:
		inc    %ecx
		mov    %ebx,%eax
		jmp    _084a52_jump

	_084a6a_jump:
		sub    %edi,%eax
		jne    _084a73_jump
		mov    $0x000001,%eax

	_084a73_jump:
		call   _07b866_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %eax,%eax
		je     _084af2_jump
		mov    %ecx,%eax
		shl    $0x000002,%eax
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _07b866_func
		test   %eax,%eax
		je     _084aeb_jump
		mov    %eax,_0bf614_data
		xor    %esi,%esi
		mov    %fs,%eax
		xor    %ecx,%ecx
		mov    %eax,%es
		mov    %edi,%eax

	_084aa6_jump:
		cmpb   $0x000000,%es:(%eax)
		je     _084ac6_jump
		mov    _0bf614_data,%edx
		mov    %ebx,(%ecx,%edx,1)

	_084ab5_jump:
		mov    %es:(%eax),%dl
		inc    %eax
		mov    %dl,(%ebx)
		inc    %ebx
		test   %dl,%dl
		jne    _084ab5_jump
		add    $0x000004,%ecx
		inc    %esi
		jmp    _084aa6_jump

	_084ac6_jump:
		mov    _0bf614_data,%edx
		movl   $0x000000,(%ecx,%edx,1)
		add    $0x000004,%ecx
		add    %ecx,%edx
		mov    %esi,%ebx
		mov    %edx,_0bf618_data
		mov    %edx,%eax
		xor    %edx,%edx
		call   _079cd0_func
		jmp    _084af2_jump

	_084aeb_jump:
		mov    %edx,%eax
		call   _07b961_func

	_084af2_jump:
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084afb_func:
		sub    $0x000008,%esp
		mov    %edx,0x000004(%esp)
		mov    %eax,(%esp)
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		cmp    $0x007ff0,%ax
		jne    _084b69_jump
		mov    0x000007(%esp),%dl
		mov    %ebx,%eax
		test   $0x000080,%dl
		je     _084b25_jump
		lea    0x000001(%ebx),%eax
		movb   $0x00002d,(%ebx)

	_084b25_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%esp),%dx
		mov    (%esp),%bx
		or     %edx,%ebx
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		or     %edx,%ebx
		mov    0x000006(%esp),%edx
		and    $0x00000f,%dl
		xor    %dh,%dh
		and    $0x00ffff,%edx
		or     %ebx,%edx
		jne    _084b58_jump
		mov    _0c0f4c_data,%edx
		jmp    _084b5e_jump

	_084b58_jump:
		mov    _0c0f50_data,%edx

	_084b5e_jump:
		mov    %edx,(%eax)
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_084b69_jump:
		xor    %eax,%eax
		add    $0x000008,%esp
		ret    



_084b81_func:
		push   %ebx
		push   %ecx
		test   %edx,%edx
		jg     _084b94_jump
		mov    $0x00000b,%ebx
		call   _084f32_func
		pop    %ecx
		pop    %ebx
		ret    

	_084b94_jump:
		mov    $0x1526e50e,%ebx
		mov    $0x3fdbcb7b,%ecx
		call   _084f74_func
		call   _07975f_func
		pop    %ecx
		pop    %ebx
		ret    



_084bab_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		lea    -0x000010(%ebp),%ebx
		call   _080e3c_func
		test   %edx,%edx
		jge    _084bd7_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0xbff00000,%ecx
		xor    %ebx,%ebx
		call   _0795a8_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_084bd7_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_084be4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		sub    $0x000008,%esp
		mov    0x000008(%ebp),%esi
		mov    %ebx,-0x00000c(%ebp)
		mov    %ecx,-0x000008(%ebp)
		mov    %edx,%ecx
		cmp    %edx,%eax
		je     _084c0f_jump
		mov    %edx,%ebx
		mov    -0x000008(%ebp),%edx
		sub    %eax,%ebx
		mov    -0x00000c(%ebp),%eax
		call   _084c2a_func
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)

	_084c0f_jump:
		lea    -0x00000c(%ebp),%eax
		mov    %esi,%edx
		call   _085150_func
		mov    %ecx,%eax
		mov    %esi,%edx
		call   _085116_func
		lea    -0x000004(%ebp),%esp
		pop    %esi
		pop    %ebp
		ret    $0x000004



_084c2a_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    %ebx,(%esp)
		mov    _0c10d4_data,%ebx
		mov    _0c10d8_data,%ecx
		call   _07b674_func
		jne    _084c5a_jump
		mov    _0c10e8_data,%eax
		mov    _0c10e4_data,%ebp
		jmp    _084c7e_jump

	_084c5a_jump:
		mov    0x000004(%esp),%edx
		mov    _0c10dc_data,%ebx
		mov    _0c10e0_data,%ecx
		mov    %ebp,%eax
		call   _07b674_func
		jne    _084c82_jump
		mov    _0c10f0_data,%eax
		mov    _0c10ec_data,%ebp

	_084c7e_jump:
		mov    %eax,0x000004(%esp)

	_084c82_jump:
		mov    (%esp),%edx
		mov    $_0c112c_data,%esi
		test   %edx,%edx
		jge    _084cb9_jump
		mov    %edx,%edi
		neg    %edi
		cmp    $0x000134,%edi
		jle    _084ce6_jump
		mov    0x000004(%esp),%edx
		mov    _0c112e_data,%ebx
		mov    _0c1132_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _079d5a_func
		jmp    _084ce0_jump

	_084cb9_jump:
		mov    %edx,%edi
		cmp    $0x000134,%edx
		jle    _084ce6_jump
		mov    0x000004(%esp),%edx
		mov    _0c112e_data,%ebx
		mov    _0c1132_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _07975f_func

	_084ce0_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)

	_084ce6_jump:
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx

	_084ced_jump:
		movswl (%esi),%eax
		cmp    %eax,%edi
		jl     _084d09_jump
		mov    %ecx,%edx
		sub    %eax,%edi
		mov    %ebx,%eax
		mov    0x000006(%esi),%ecx
		mov    0x000002(%esi),%ebx
		call   _07975f_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_084d09_jump:
		test   %edi,%edi
		je     _084d18_jump
		cmpw   $0x000001,(%esi)
		je     _084ced_jump
		add    $0x00000a,%esi
		jmp    _084ced_jump

	_084d18_jump:
		cmpl   $0x000000,(%esp)
		jge    _084d2b_jump
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _079d5a_func
		jmp    _084d36_jump

	_084d2b_jump:
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _07975f_func

	_084d36_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_084d4a_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		push   %eax
		push   %edx
		mov    %ebx,%esi
		mov    %ecx,%edi
		mov    0x000008(%ebp),%eax
		mov    0x000010(%ebp),%ebx
		movl   $0x000000,(%eax)
		mov    -0x000038(%ebp),%eax
		movl   $0x000000,(%ecx)
		call   _084afb_func
		test   %eax,%eax
		je     _084d7e_jump
		mov    0x000010(%ebp),%edi
		jmp    _084f24_jump

	_084d7e_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dx,-0x000020(%ebp)
		mov    %bx,-0x00001e(%ebp)
		mov    %dx,-0x00001a(%ebp)
		mov    -0x00003c(%ebp),%edx
		mov    %cx,-0x00001c(%ebp)
		test   %edx,%edx
		je     _084edd_jump
		jge    _084db8_jump
		mov    0x000008(%ebp),%eax
		movl   $0xffffffff,(%eax)
		mov    -0x000038(%ebp),%eax
		call   _07a208_func
		mov    %eax,-0x000038(%ebp)
		mov    %edx,-0x00003c(%ebp)

	_084db8_jump:
		mov    -0x000038(%ebp),%eax
		mov    -0x00003c(%ebp),%edx
		mov    %edi,%ebx
		call   _08048d_func
		mov    (%edi),%eax
		mov    %eax,-0x000010(%ebp)
		test   %eax,%eax
		jge    _084dd3_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_084dd3_jump:
		mov    -0x000010(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		add    $0x000005,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    (%edi),%ecx
		mov    %eax,-0x000010(%ebp)
		test   %ecx,%ecx
		jge    _084dfb_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_084dfb_jump:
		mov    -0x000010(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    %eax,(%edi)
		cmp    $0x000046,%edx
		jne    _084e0a_jump
		add    %eax,%esi

	_084e0a_jump:
		test   %esi,%esi
		jl     _084ea3_jump
		cmp    $0x000010,%esi
		jle    _084e1c_jump
		mov    $0x000010,%esi

	_084e1c_jump:
		mov    -0x00003c(%ebp),%edx
		xor    %ah,%ah
		lea    -0x000018(%ebp),%ebx
		mov    %ah,-0x00000c(%ebp)
		mov    -0x000038(%ebp),%eax
		call   _080e3c_func
		test   %edx,%edx
		jne    _084e41_jump
		mov    -0x000010(%ebp),%ecx
		cmp    %ecx,%esi
		jle    _084e41_jump
		mov    $0x000001,%dl
		mov    %ecx,%esi
		mov    %dl,-0x00000c(%ebp)

	_084e41_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _084be4_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _084ea3_jump
		mov    (%edi),%ebx
		add    %eax,%ebx
		mov    0x00000c(%ebp),%ecx
		mov    %ebx,(%edi)
		cmp    $0x000046,%ecx
		je     _084e6e_jump
		cmpb   $0x000000,-0x00000c(%ebp)
		je     _084e70_jump

	_084e6e_jump:
		add    %eax,%esi

	_084e70_jump:
		cmp    $0x000001,%esi
		jge    _084e7c_jump
		mov    $0x000001,%esi
		jmp    _084e86_jump

	_084e7c_jump:
		cmp    $0x000010,%esi
		jle    _084e86_jump
		mov    $0x000010,%esi

	_084e86_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _084be4_func
		test   %eax,%eax
		jle    _084ea3_jump
		mov    (%edi),%eax
		inc    %eax
		inc    %esi
		mov    %eax,(%edi)

	_084ea3_jump:
		mov    -0x000020(%ebp),%eax
		mov    -0x000022(%ebp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		or     %eax,%edx
		mov    -0x00001e(%ebp),%eax
		sar    $0x000010,%eax
		or     %eax,%edx
		mov    -0x00001c(%ebp),%eax
		sar    $0x000010,%eax
		or     %edx,%eax
		jne    _084edd_jump
		mov    0x000008(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    0x00000c(%ebp),%edx
		movl   $0x000000,(%edi)
		cmp    $0x000046,%edx
		jne    _084edd_jump
		sub    -0x000010(%ebp),%esi

	_084edd_jump:
		cmp    $0x000001,%esi
		jge    _084ee9_jump
		mov    $0x000001,%esi
		jmp    _084ef3_jump

	_084ee9_jump:
		cmp    $0x000011,%esi
		jle    _084ef3_jump
		mov    $0x000011,%esi

	_084ef3_jump:
		lea    -0x000020(%ebp),%eax
		lea    -0x000034(%ebp),%edx
		mov    0x000010(%ebp),%edi
		mov    %esi,%ebx
		lea    -0x000034(%ebp),%esi
		call   _0851bb_func
		push   %edi

	_084f07_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _084f23_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _084f07_jump

	_084f23_jump:
		pop    %edi

	_084f24_jump:
		mov    %edi,%eax
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x00000c

	_084f2f_jump:
		xor    %eax,%eax
		ret    



_084f32_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		mov    %ebx,%eax
		and    $0x00001f,%eax
		cmp    $0x000008,%eax
		je     _084f52_jump
		test   %edx,%edx
		jne    _084f52_jump
		or     $0x001080,%ax
		jmp    _084f56_jump

	_084f52_jump:
		or     $0x001040,%ax

	_084f56_jump:
		lea    -0x000008(%ebp),%edx
		call   _0804e0_func
		mov    %ebp,%esp
		pop    %ebp
		ret    



_084f74_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		test   %edx,%edx
		jg     _084f95_jump
		mov    $0x00000a,%ebx
		call   _084f32_func
		jmp    _085105_jump

	_084f95_jump:
		cmpb   $0x000000,_0bd1d9_data
		je     _084faa_jump
		mov    %edi,%eax
		call   _0852dc_func
		jmp    _085105_jump

	_084faa_jump:
		lea    -0x000024(%ebp),%ebx
		mov    %edi,%eax
		mov    $0xbfe00000,%ecx
		call   _08048d_func
		mov    %eax,%edi
		xor    %ebx,%ebx
		mov    %edx,%esi
		call   _0795a8_func
		mov    $0x667f3bcd,%ebx
		mov    $0x3fe6a09e,%ecx
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07b674_func
		jle    _084ff9_jump
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _0795a8_func
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		jmp    _085006_jump

	_084ff9_jump:
		mov    -0x000024(%ebp),%edx
		mov    -0x000018(%ebp),%edi
		dec    %edx
		mov    -0x000014(%ebp),%esi
		mov    %edx,-0x000024(%ebp)

	_085006_jump:
		mov    $0x3fe00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _07975f_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _0795a8_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _079d5a_func
		mov    %eax,-0x000018(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edx,-0x000014(%ebp)
		call   _07975f_func
		mov    %eax,%edi
		mov    %edx,%esi
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07975f_func
		mov    $_0c10f4_data,%ebx
		mov    $0x000002,%ecx
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x00001c(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0806c9_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _07975f_func
		mov    $_0c110c_data,%ebx
		mov    $0x000003,%ecx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0806c9_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _079d5a_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _0795a8_func
		mov    -0x000024(%ebp),%ebx
		mov    %eax,%edi
		mov    %edx,%esi
		test   %ebx,%ebx
		je     _085109_jump
		mov    %ebx,%eax
		mov    $0xbf2bd010,%ecx
		call   _079562_func
		mov    $0x5c610ca9,%ebx
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x00001c(%ebp)
		call   _07975f_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _0795a8_func
		mov    $0x3fe63000,%ecx
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %ebx,%ebx
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _07975f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _0795a8_func

	_085105_jump:
		mov    %eax,%edi
		mov    %edx,%esi

	_085109_jump:
		mov    %edi,%eax
		mov    %esi,%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_085116_func:
		push   %edi
		push   %ecx
		call   _085225_data
		inc    %eax
		lea    (%edi,%eax,8),%edi
		mov    (%edx),%ecx
		mov    0x000004(%edx),%edx
		sub    %eax,%eax

	_085128_jump:
		cmp    %cs:(%edi),%edx
		jne    _085131_jump
		cmp    %cs:0x000004(%edi),%ecx

	_085131_jump:
		jb     _085139_jump
		add    $0x000008,%edi
		inc    %eax
		jmp    _085128_jump

	_085139_jump:
		sub    $0x000008,%edi

	_08513c_jump:
		cmp    %cs:(%edi),%edx
		jne    _085145_jump
		cmp    %cs:0x000004(%edi),%ecx

	_085145_jump:
		jae    _08514d_jump
		sub    $0x000008,%edi
		dec    %eax
		jmp    _08513c_jump

	_08514d_jump:
		pop    %ecx
		pop    %edi
		ret    



_085150_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		push   %esi
		push   %edx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%ebx
		mov    %ebx,%ebp
		and    $0xfff00000,%ebp
		xor    %ebp,%ebx
		xor    $0x100000,%ebx
		shr    $0x000014,%ebp
		sub    $0x000433,%ebp
		je     _0851ae_jump
		jbe    _085184_jump

	_08517b_jump:
		shl    %ecx
		rcl    %ebx
		dec    %ebp
		jne    _08517b_jump
		jmp    _0851ae_jump

	_085184_jump:
		sub    %eax,%eax
		sub    %esi,%esi

	_085188_jump:
		shr    %ebx
		rcr    %ecx
		rcr    %eax
		adc    %esi,%esi
		inc    %ebp
		jne    _085188_jump
		cmp    $0x80000000,%eax
		jb     _0851ae_jump
		jne    _0851a8_jump
		or     %esi,%esi
		jne    _0851a8_jump
		test   $0x000001,%ecx
		je     _0851ae_jump

	_0851a8_jump:
		add    $0x000001,%ecx
		adc    $0x000000,%ebx

	_0851ae_jump:
		pop    %ebp
		mov    %ecx,0x000000(%ebp)
		mov    %ebx,0x000004(%ebp)
		pop    %esi
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0851bb_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %ebx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%eax
		mov    %edx,%ebp
		add    %ebx,%ebp
		movb   $0x000000,0x000000(%ebp)
		push   %eax

	_0851d0_jump:
		pop    %eax
		mov    $0x002710,%edi
		sub    %edx,%edx
		or     %eax,%eax
		jne    _0851e3_jump
		or     %ecx,%ecx
		jne    _0851e5_jump
		push   %eax
		jmp    _0851fb_jump

	_0851e3_jump:
		div    %edi

	_0851e5_jump:
		xchg   %eax,%ecx
		div    %edi
		xchg   %eax,%ecx
		push   %eax
		mov    %edx,%eax
		mov    $0x000064,%dl
		div    %dl
		mov    %ah,%dl
		mov    $0x000000,%ah
		aam    $0x00000a
		xchg   %eax,%edx
		mov    $0x000000,%ah
		aam    $0x00000a

	_0851fb_jump:
		add    $0x003030,%ax
		add    $0x003030,%dx
		sub    $0x000004,%ebp
		mov    %al,0x000003(%ebp)
		dec    %ebx
		je     _08521f_jump
		mov    %ah,0x000002(%ebp)
		dec    %ebx
		je     _08521f_jump
		mov    %dl,0x000001(%ebp)
		dec    %ebx
		je     _08521f_jump
		mov    %dh,0x000000(%ebp)
		dec    %ebx
		jne    _0851d0_jump

	_08521f_jump:
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %ebp
		ret    

.data

_085225_data:
		.ascii  "\xe8\xb0"
		.fill   0xf
		.ascii  "\x01"
		.fill   0x7
		.ascii  "\x0a"
		.fill   0x7
		.ascii  "\x64"
		.fill   0x7
		.ascii  "\xe8\x03"
		.fill   0x6
		.ascii  "\x10\x27"
		.fill   0x6
		.ascii  "\xa0\x86\x01"
		.fill   0x5
		.ascii  "\x40\x42\x0f"
		.fill   0x5

_08526e_data:
		.ascii  "\x80\x96\x98"
		.fill   0x6
		.ascii  "\xe1\xf5\x05"
		.fill   0x5
		.ascii  "\xca\x9a\x3b\x02"
		.fill   0x4
		.ascii  "\xe4\x0b\x54\x17"
		.fill   0x4
		.ascii  "\xe8\x76\x48\xe8"
		.fill   0x4
		.ascii  "\x10\xa5\xd4\x18\x09\x00\x00\x00"
		.ascii  "\xa0\x72\x4e\xf3\x5a\x00\x00\x00"
		.ascii  "\x40\x7a\x10\x7e\x8d\x03\x00\x00"
		.ascii  "\x80\xc6\xa4\xf2\x86\x23\x00\x00"
		.ascii  "\x00\xc1"
		.ascii   "oxEc"
		.ascii  "\x01\x00\x00\x8a\x5d\xb3\xb6\xe0"
		.ascii  "\x0d\x00\x00\x64\xa7\x04\x23\xc7"
		.ascii  "\x8a\x00\x00\xe8\x89\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff"

_0852da_data:
		.ascii  "\x5f\xc3"

.text



_0852dc_func:
		fldln2 
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		fyl2x  
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

.data

_090000_data:
		.ascii  "\x01\x01\x01\x00"

_090004_data:
		.fill   0x4

_090008_data:
		.ascii  "\xff\xff\x00\x00"

_09000c_data:
		.fill   0x4

_090010_data:
		.fill   0x4

_090014_data:
		.fill   0x4

_090018_data:
		.fill   0x4

_09001c_data:
		.fill   0xc
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e

_091908_data:
		.fill   0xe

_091916_data:
		.fill   0xc

_091922_data:
		.fill   0x4

_091926_data:
		.fill   0x4

_09192a_data:
		.fill   0x4

_09192e_data:
		.fill   0x4

_091932_data:
		.fill   0x4

_091936_data:
		.fill   0x4

_09193a_data:
		.fill   0x4

_09193e_data:
		.fill   0x10

_09194e_data:
		.fill   0x4
		.ascii  "\x80\x3e\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x80\xbb\x00\x00"

_09195e_data:
		.ascii  "\x00"

_09195f_data:
		.ascii  "\x00"

_091960_data:
		.ascii  "\x00"

_091961_data:
		.ascii  "\x00"

_091962_data:
		.ascii  "\x00"

_091963_data:
		.fill   0x191

_091af4_data:
		.fill   0x4
		.ascii  "\x40\x01\x00\x00\x80\x02\x00\x00"
		.ascii  "\xc0\x03\x00\x00\x00\x05\x00\x00"
		.ascii  "\x40\x06\x00\x00\x80\x07\x00\x00"
		.ascii  "\xc0\x08\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x40\x0b\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xc0\x0d\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x40\x10\x00\x00\x80\x11\x00\x00"
		.ascii  "\xc0\x12\x00\x00\x00\x14\x00\x00"
		.ascii  "\x40\x15\x00\x00\x80\x16\x00\x00"
		.ascii  "\xc0\x17\x00\x00\x00\x19\x00\x00"
		.ascii  "\x40\x1a\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xc0\x1c\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x40\x1f\x00\x00\x80\x20\x00\x00"
		.ascii  "\xc0\x21\x00\x00\x00\x23\x00\x00"
		.ascii  "\x40\x24\x00\x00\x80\x25\x00\x00"
		.ascii  "\xc0\x26\x00\x00\x00\x28\x00\x00"
		.ascii  "\x40\x29\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xc0\x2b\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x40\x2e\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xc0\x30\x00\x00\x00\x32\x00\x00"
		.ascii  "\x40\x33\x00\x00\x80\x34\x00\x00"
		.ascii  "\xc0\x35\x00\x00\x00\x37\x00\x00"
		.ascii  "\x40\x38\x00\x00\x80\x39\x00\x00"
		.ascii  "\xc0\x3a\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x40\x3d\x00\x00\x80\x3e\x00\x00"
		.ascii  "\xc0\x3f\x00\x00\x00\x41\x00\x00"
		.ascii  "\x40\x42\x00\x00\x80\x43\x00\x00"
		.ascii  "\xc0\x44\x00\x00\x00\x46\x00\x00"
		.ascii  "\x40\x47\x00\x00\x80\x48\x00\x00"
		.ascii  "\xc0\x49\x00\x00\x00\x4b\x00\x00"
		.ascii  "\x40\x4c\x00\x00\x80\x4d\x00\x00"
		.ascii  "\xc0\x4e\x00\x00\x00\x50\x00\x00"
		.ascii  "\x40\x51\x00\x00\x80\x52\x00\x00"
		.ascii  "\xc0\x53\x00\x00\x00\x55\x00\x00"
		.ascii  "\x40\x56\x00\x00\x80\x57\x00\x00"
		.ascii  "\xc0\x58\x00\x00\x00\x5a\x00\x00"
		.ascii  "\x40\x5b\x00\x00\x80\x5c\x00\x00"
		.ascii  "\xc0\x5d\x00\x00\x00\x5f\x00\x00"
		.ascii  "\x40\x60\x00\x00\x80\x61\x00\x00"
		.ascii  "\xc0\x62\x00\x00\x00\x64\x00\x00"
		.ascii  "\x40\x65\x00\x00\x80\x66\x00\x00"
		.ascii  "\xc0\x67\x00\x00\x00\x69\x00\x00"
		.ascii  "\x40\x6a\x00\x00\x80\x6b\x00\x00"
		.ascii  "\xc0\x6c\x00\x00\x00\x6e\x00\x00"
		.ascii  "\x40\x6f\x00\x00\x80\x70\x00\x00"
		.ascii  "\xc0\x71\x00\x00\x00\x73\x00\x00"
		.ascii  "\x40\x74\x00\x00\x80\x75\x00\x00"
		.ascii  "\xc0\x76\x00\x00\x00\x78\x00\x00"
		.ascii  "\x40\x79\x00\x00\x80\x7a\x00\x00"
		.ascii  "\xc0\x7b\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x40\x7e\x00\x00\x80\x7f\x00\x00"
		.ascii  "\xc0\x80\x00\x00\x00\x82\x00\x00"
		.ascii  "\x40\x83\x00\x00\x80\x84\x00\x00"
		.ascii  "\xc0\x85\x00\x00\x00\x87\x00\x00"
		.ascii  "\x40\x88\x00\x00\x80\x89\x00\x00"
		.ascii  "\xc0\x8a\x00\x00\x00\x8c\x00\x00"
		.ascii  "\x40\x8d\x00\x00\x80\x8e\x00\x00"
		.ascii  "\xc0\x8f\x00\x00\x00\x91\x00\x00"
		.ascii  "\x40\x92\x00\x00\x80\x93\x00\x00"
		.ascii  "\xc0\x94\x00\x00\x00\x96\x00\x00"
		.ascii  "\x40\x97\x00\x00\x80\x98\x00\x00"
		.ascii  "\xc0\x99\x00\x00\x00\x9b\x00\x00"
		.ascii  "\x40\x9c\x00\x00\x80\x9d\x00\x00"
		.ascii  "\xc0\x9e\x00\x00\x00\xa0\x00\x00"
		.ascii  "\x40\xa1\x00\x00\x80\xa2\x00\x00"
		.ascii  "\xc0\xa3\x00\x00\x00\xa5\x00\x00"
		.ascii  "\x40\xa6\x00\x00\x80\xa7\x00\x00"
		.ascii  "\xc0\xa8\x00\x00\x00\xaa\x00\x00"
		.ascii  "\x40\xab\x00\x00\x80\xac\x00\x00"
		.ascii  "\xc0\xad\x00\x00\x00\xaf\x00\x00"
		.ascii  "\x40\xb0\x00\x00\x80\xb1\x00\x00"
		.ascii  "\xc0\xb2\x00\x00\x00\xb4\x00\x00"
		.ascii  "\x40\xb5\x00\x00\x80\xb6\x00\x00"
		.ascii  "\xc0\xb7\x00\x00\x00\xb9\x00\x00"
		.ascii  "\x40\xba\x00\x00\x80\xbb\x00\x00"
		.ascii  "\xc0\xbc\x00\x00\x00\xbe\x00\x00"
		.ascii  "\x40\xbf\x00\x00\x80\xc0\x00\x00"
		.ascii  "\xc0\xc1\x00\x00\x00\xc3\x00\x00"
		.ascii  "\x40\xc4\x00\x00\x80\xc5\x00\x00"
		.ascii  "\xc0\xc6\x00\x00\x00\xc8\x00\x00"
		.ascii  "\x40\xc9\x00\x00\x80\xca\x00\x00"
		.ascii  "\xc0\xcb\x00\x00\x00\xcd\x00\x00"
		.ascii  "\x40\xce\x00\x00\x80\xcf\x00\x00"
		.ascii  "\xc0\xd0\x00\x00\x00\xd2\x00\x00"
		.ascii  "\x40\xd3\x00\x00\x80\xd4\x00\x00"
		.ascii  "\xc0\xd5\x00\x00\x00\xd7\x00\x00"
		.ascii  "\x40\xd8\x00\x00\x80\xd9\x00\x00"
		.ascii  "\xc0\xda\x00\x00\x00\xdc\x00\x00"
		.ascii  "\x40\xdd\x00\x00\x80\xde\x00\x00"
		.ascii  "\xc0\xdf\x00\x00\x00\xe1\x00\x00"
		.ascii  "\x40\xe2\x00\x00\x80\xe3\x00\x00"
		.ascii  "\xc0\xe4\x00\x00\x00\xe6\x00\x00"
		.ascii  "\x40\xe7\x00\x00\x80\xe8\x00\x00"
		.ascii  "\xc0\xe9\x00\x00\x00\xeb\x00\x00"
		.ascii  "\x40\xec\x00\x00\x80\xed\x00\x00"
		.ascii  "\xc0\xee\x00\x00\x00\xf0\x00\x00"
		.ascii  "\x40\xf1\x00\x00\x80\xf2\x00\x00"
		.ascii  "\xc0\xf3\x00\x00\x00\xf5\x00\x00"
		.ascii  "\x40\xf6\x00\x00\x80\xf7\x00\x00"
		.ascii  "\xc0\xf8\x00\x00"

_091e14_data:
		.fill   0x4
		.ascii  "\x50\x00\x00\x00\xa0\x00\x00\x00"
		.ascii  "\xf0\x00\x00\x00\x40\x01\x00\x00"
		.ascii  "\x90\x01\x00\x00\xe0\x01\x00\x00"
		.ascii  "\x30\x02\x00\x00\x80\x02\x00\x00"
		.ascii  "\xd0\x02\x00\x00\x20\x03\x00\x00"
		.ascii  "\x70\x03\x00\x00\xc0\x03\x00\x00"
		.ascii  "\x10\x04\x00\x00\x60\x04\x00\x00"
		.ascii  "\xb0\x04\x00\x00\x00\x05\x00\x00"
		.ascii  "\x50\x05\x00\x00\xa0\x05\x00\x00"
		.ascii  "\xf0\x05\x00\x00\x40\x06\x00\x00"
		.ascii  "\x90\x06\x00\x00\xe0\x06\x00\x00"
		.ascii  "\x30\x07\x00\x00\x80\x07\x00\x00"
		.ascii  "\xd0\x07\x00\x00\x20\x08\x00\x00"
		.ascii  "\x70\x08\x00\x00\xc0\x08\x00\x00"
		.ascii  "\x10\x09\x00\x00\x60\x09\x00\x00"
		.ascii  "\xb0\x09\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x50\x0a\x00\x00\xa0\x0a\x00\x00"
		.ascii  "\xf0\x0a\x00\x00\x40\x0b\x00\x00"
		.ascii  "\x90\x0b\x00\x00\xe0\x0b\x00\x00"
		.ascii  "\x30\x0c\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xd0\x0c\x00\x00\x20\x0d\x00\x00"
		.ascii  "\x70\x0d\x00\x00\xc0\x0d\x00\x00"
		.ascii  "\x10\x0e\x00\x00\x60\x0e\x00\x00"
		.ascii  "\xb0\x0e\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x50\x0f\x00\x00\xa0\x0f\x00\x00"
		.ascii  "\xf0\x0f\x00\x00\x40\x10\x00\x00"
		.ascii  "\x90\x10\x00\x00\xe0\x10\x00\x00"
		.ascii  "\x30\x11\x00\x00\x80\x11\x00\x00"
		.ascii  "\xd0\x11\x00\x00\x20\x12\x00\x00"
		.ascii  "\x70\x12\x00\x00\xc0\x12\x00\x00"
		.ascii  "\x10\x13\x00\x00\x60\x13\x00\x00"
		.ascii  "\xb0\x13\x00\x00\x00\x14\x00\x00"
		.ascii  "\x50\x14\x00\x00\xa0\x14\x00\x00"
		.ascii  "\xf0\x14\x00\x00\x40\x15\x00\x00"
		.ascii  "\x90\x15\x00\x00\xe0\x15\x00\x00"
		.ascii  "\x30\x16\x00\x00\x80\x16\x00\x00"
		.ascii  "\xd0\x16\x00\x00\x20\x17\x00\x00"
		.ascii  "\x70\x17\x00\x00\xc0\x17\x00\x00"
		.ascii  "\x10\x18\x00\x00\x60\x18\x00\x00"
		.ascii  "\xb0\x18\x00\x00\x00\x19\x00\x00"
		.ascii  "\x50\x19\x00\x00\xa0\x19\x00\x00"
		.ascii  "\xf0\x19\x00\x00\x40\x1a\x00\x00"
		.ascii  "\x90\x1a\x00\x00\xe0\x1a\x00\x00"
		.ascii  "\x30\x1b\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xd0\x1b\x00\x00\x20\x1c\x00\x00"
		.ascii  "\x70\x1c\x00\x00\xc0\x1c\x00\x00"
		.ascii  "\x10\x1d\x00\x00\x60\x1d\x00\x00"
		.ascii  "\xb0\x1d\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x50\x1e\x00\x00\xa0\x1e\x00\x00"
		.ascii  "\xf0\x1e\x00\x00\x40\x1f\x00\x00"
		.ascii  "\x90\x1f\x00\x00\xe0\x1f\x00\x00"
		.ascii  "\x30\x20\x00\x00\x80\x20\x00\x00"
		.ascii  "\xd0\x20\x00\x00\x20\x21\x00\x00"
		.ascii  "\x70\x21\x00\x00\xc0\x21\x00\x00"
		.ascii  "\x10\x22\x00\x00\x60\x22\x00\x00"
		.ascii  "\xb0\x22\x00\x00\x00\x23\x00\x00"
		.ascii  "\x50\x23\x00\x00\xa0\x23\x00\x00"
		.ascii  "\xf0\x23\x00\x00\x40\x24\x00\x00"
		.ascii  "\x90\x24\x00\x00\xe0\x24\x00\x00"
		.ascii  "\x30\x25\x00\x00\x80\x25\x00\x00"
		.ascii  "\xd0\x25\x00\x00\x20\x26\x00\x00"
		.ascii  "\x70\x26\x00\x00\xc0\x26\x00\x00"
		.ascii  "\x10\x27\x00\x00\x60\x27\x00\x00"
		.ascii  "\xb0\x27\x00\x00\x00\x28\x00\x00"
		.ascii  "\x50\x28\x00\x00\xa0\x28\x00\x00"
		.ascii  "\xf0\x28\x00\x00\x40\x29\x00\x00"
		.ascii  "\x90\x29\x00\x00\xe0\x29\x00\x00"
		.ascii  "\x30\x2a\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xd0\x2a\x00\x00\x20\x2b\x00\x00"
		.ascii  "\x70\x2b\x00\x00\xc0\x2b\x00\x00"
		.ascii  "\x10\x2c\x00\x00\x60\x2c\x00\x00"
		.ascii  "\xb0\x2c\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x50\x2d\x00\x00\xa0\x2d\x00\x00"
		.ascii  "\xf0\x2d\x00\x00\x40\x2e\x00\x00"
		.ascii  "\x90\x2e\x00\x00\xe0\x2e\x00\x00"
		.ascii  "\x30\x2f\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xd0\x2f\x00\x00\x20\x30\x00\x00"
		.ascii  "\x70\x30\x00\x00\xc0\x30\x00\x00"
		.ascii  "\x10\x31\x00\x00\x60\x31\x00\x00"
		.ascii  "\xb0\x31\x00\x00\x00\x32\x00\x00"
		.ascii  "\x50\x32\x00\x00\xa0\x32\x00\x00"
		.ascii  "\xf0\x32\x00\x00\x40\x33\x00\x00"
		.ascii  "\x90\x33\x00\x00\xe0\x33\x00\x00"
		.ascii  "\x30\x34\x00\x00\x80\x34\x00\x00"
		.ascii  "\xd0\x34\x00\x00\x20\x35\x00\x00"
		.ascii  "\x70\x35\x00\x00\xc0\x35\x00\x00"
		.ascii  "\x10\x36\x00\x00\x60\x36\x00\x00"
		.ascii  "\xb0\x36\x00\x00\x00\x37\x00\x00"
		.ascii  "\x50\x37\x00\x00\xa0\x37\x00\x00"
		.ascii  "\xf0\x37\x00\x00\x40\x38\x00\x00"
		.ascii  "\x90\x38\x00\x00\xe0\x38\x00\x00"
		.ascii  "\x30\x39\x00\x00\x80\x39\x00\x00"
		.ascii  "\xd0\x39\x00\x00\x20\x3a\x00\x00"
		.ascii  "\x70\x3a\x00\x00\xc0\x3a\x00\x00"
		.ascii  "\x10\x3b\x00\x00\x60\x3b\x00\x00"
		.ascii  "\xb0\x3b\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x50\x3c\x00\x00\xa0\x3c\x00\x00"
		.ascii  "\xf0\x3c\x00\x00\x40\x3d\x00\x00"
		.ascii  "\x90\x3d\x00\x00\xe0\x3d\x00\x00"
		.ascii  "\x30\x3e\x00\x00"

_092134_data:
		.fill   0x4

_092138_data:
		.fill   0x4

_09213c_data:
		.fill   0x8

_092144_data:
		.fill   0x4

_092148_data:
		.ascii  "\x2b\x5a\x00\x00"

_09214c_data:
		.ascii  "\x26"

_09214d_data:
		.ascii  "\xd0\x00\x00\x2b\x5a\x00\x00\x09"
		.ascii  "\x68\x00\x00\x5a\x28\x00\x00\x34"
		.ascii  "\xc2\x00\x00\xe0\x68\x00\x00\xb7"
		.ascii  "\x77\x00\x00\x14\x2b\x01\x00\x46"
		.ascii  "\x68\x00\x00\xa6\xc4\x00\x00\x5a"
		.ascii  "\x93\x01\x00\x35\x47\x00\x00\x1e"
		.ascii  "\xef\x00\x00\x8f\xda\x01\x00\xd9"
		.ascii  "\x23\x00\x00\x61\x01\x00\x00\x68"
		.ascii  "\xfe\x01\x00\xd6\x81\x00\x00\x25"
		.ascii  "\x2d\x00\x00\x3e\x80\x02\x00\x32"
		.ascii  "\xd5\x00\x00\xae\x7b\x00\x00\x70"
		.ascii  "\x55\x03\x00\x33\x0a\x02\x00\xcb"
		.ascii  "\x5c\x00\x00\xa3\x5f\x05\x00\xc5"
		.ascii  "\xc6\x00\x00\x39\xba\x00\x00\x68"
		.ascii  "\x26\x06\x00\x0c\x58\x00\x00\xe0"
		.ascii  "\xf5\x00\x00\x74\x7e\x06\x00\x22"
		.ascii  "\xc5\x00\x00\x39\x9f\x00\x00"

_0921d4_data:
		.fill   0x4

_0921d8_data:
		.ascii  "\x6d\x0f\x00\x00"

_0921dc_data:
		.ascii  "\x5f"

_0921dd_data:
		.ascii  "\x22\x00\x00"

_0921e0_data:
		.ascii  "\x02\x01\x03\x00\x04\x07\x06\x05"
		.ascii  "\x01\x03\x02\x00\x04\x07\x06\x05"
		.ascii  "\x04\x01\x03\x02\x00\x07\x06\x05"

_0921f8_data:
		.ascii  "\x00\x20\x42\xc2\x42\x42\xc2\xc2"
		.ascii  "\x04\x0b"
		.fill   0x4
		.ascii  "\x03\x13\x00\x00\x4a\xca\x4a\x4a"
		.ascii  "\xca\xca"
		.fill   0x6
		.ascii  "\x0b\x00"
		.ascii   "                                "

_092238_data:
		.ascii  "\x28"

_092239_data:
		.ascii  "\x80"

_09223a_data:
		.ascii  "\x03"

_09223b_data:
		.ascii  "\x23\x04\x00\x03\x02\x00\x00\x02"
		.ascii  "\x42\x21\x80\x21\x42\x04\x00\x02"
		.ascii  "\x42\x20\x00\x02\x02\x08\x10\x47"
		.ascii  "\x26\x08\x00\x02\x02\x00\x11\x43"
		.ascii  "\x20\x28\x80\x03\x23\x18\x80\x01"
		.ascii  "\x02\x05\x00\x00\x4a\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x04\x81\x02"
		.ascii  "\x02\x04\x81\x02\x02\x04\x80\x03"
		.ascii  "\x02\x01\x00\x20\x4a\x28\x91\x03"
		.ascii  "\x03\x20\x80\x02\x02\x00\x81\x03"
		.ascii  "\x02\x40\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x00\x02\x02\x00\x40\x02"
		.ascii  "\x02\x00\xc0\x02\x02\x00\x41\x02"
		.ascii  "\x02\x00\x40\x02\x02\x00\x00\x10"
		.ascii  "\x20\x01\x00\x00\x42\x08\x80\x02"
		.ascii  "\x02\x09\xb0\x22\x42\x00\x81\x03"
		.ascii  "\x02\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\x00\x03\x02\x01\x80\x03"
		.ascii  "\x42\x01\x80\x23\x42\x08\x90\x03"
		.ascii  "\x03\x08\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x08\x81\x02\x02\x98\x80\x03"
		.ascii  "\x03\x08\x10\x03\x22\x04\x80\x02"
		.ascii  "\x02\x00\x80\x02\x02\x98\xb0\x00"
		.ascii  "\x03\x09\x90\x23\x42\x19\x90\x23"
		.ascii  "\x42\x28\x90\x03\x02\x00\x80\x02"
		.ascii  "\x02\x20\x80\x02\x02\x28\x80\x03"
		.ascii  "\x03\x28\x80\x02\x03\x04\x02\x03"
		.ascii  "\x22\x05\x00\x23\x42\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\xb1\x02\x02\x00\x80\x00"
		.ascii  "\x42\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x04\x01\x02\x02\x00\xc0\x02"
		.ascii  "\x02\x08\x10\x03\x23\x28\x80\x03"
		.ascii  "\x03\x09\x80\x03\x43\x28\x00\x23"
		.ascii  "\x03\x09\xb0\x03\x42\x98\x80\x03"
		.ascii  "\x03\x05\x00\x20\x48\x00\x80\x03"
		.ascii  "\x02\x28\x00\x22\x03\x09\x90\x63"
		.ascii  "\x43\x09\x80\x23\x42\x00\x00\x03"
		.ascii  "\x02\x20\x88\x13\x03\x00\x00\x12"
		.ascii  "\x22\x09\x00\x20\x42\x00\x00\x02"
		.ascii  "\x02\x00\x00\x02\x03\x00\x81\x02"
		.ascii  "\x02\x00\x01\x02\x42\x00\x01\x02"
		.ascii  "\x42\x20\x80\x03\x02\x09\x80\x23"
		.ascii  "\x42\x09\x80\x23\x42\x09\x80\x23"
		.ascii  "\x42\x01\x80\x23\x42\x11\x00\x00"
		.ascii  "\x42\x00\x00\x02\x42\x00\x80\x02"
		.ascii  "\x03\x19\x80\x27\x43\x98\xb0\x03"
		.ascii  "\x03\x04\x00\x00\x42\x28\x80\x13"
		.ascii  "\x03\x08\x00\x02\x02\x09\x80\x23"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x02"
		.ascii  "\x02\x08\x80\x02\x02\x08\x81\x03"
		.ascii  "\x02\x08\x00\x02\x02\x01\xb0\x12"
		.ascii  "\x42\x00\x00\x06\x32\x01\x00\x22"
		.ascii  "\x42\x00\x80\x02\x02\x09\x10\x23"
		.ascii  "\x43\x08\x80\x02\x02\x00\x80\x03"
		.ascii  "\x02\x01\xc0\x02\x42\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x80\x03"
		.ascii  "\x03\x09\x80\x23\x42\x38\x90\x03"
		.ascii  "\x03\x09\x80\x23\x42\x09\x90\x23"
		.ascii  "\x43\x68\x90\x0b\x23\x00\x00\x12"
		.ascii  "\x42\x00\x88\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x07\x02\x05\x10\x63"
		.ascii  "\x42\x00\x80\x03\x02\x28\x80\x02"
		.ascii  "\x03\x00\x00\x03\x02\x00\x11\x43"
		.ascii  "\x20\x09\x80\x22\x42\x01\x00\x02"
		.ascii  "\x42\x00\x00\x12\x22\x00\x89\x03"
		.ascii  "\x02\x05\x00\x22\x42\x00\x81\x03"
		.ascii  "\x02\x00\x00\x13\x42\x00\x02\x12"
		.ascii  "\x22\x11\x00\x00\x4a\x00\x82\x01"
		.ascii  "\x42\x08\x80\x02\x02\x09\x00\x23"
		.ascii  "\x42\x28\x80\x03\x03\x00\x80\x03"
		.ascii  "\x42\x04\x00\x03\x02\xb8\x84\x02"
		.ascii  "\x03\x08\x80\x03\x22\x20\xc0\x03"
		.ascii  "\x03\x30\x80\x03\x03\x00\x89\x03"
		.ascii  "\x02\x00\x89\x03\x02\x08\x80\x03"
		.ascii  "\x03\x10\x00\x00\x02\x00\x00\x03"
		.ascii  "\x42\x00\x08\x03\x02\x00\x08\x03"
		.ascii  "\x02\x00\x00\x12\x42\x00\x01\x02"
		.ascii  "\x42\x00\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x23\x00\x00\x02"
		.ascii  "\x02\x00\x10\x43\x20\x00\xb0\x03"
		.ascii  "\x03\x00\xb8\x13\x03\x09\x80\x22"
		.ascii  "\x4a\x05\x00\x03\x42\x28\x80\x1b"
		.ascii  "\x03\x00\xb0\x23\x02\x28\x90\x02"
		.ascii  "\x03\x08\x00\x02\x02\x08\x00\x06"
		.ascii  "\x12\x00\x11\x47\x26\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x98\x80\x13"
		.ascii  "\x03\x20\x80\x03\x43\x08\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x90\x02"
		.ascii  "\x03\x08\x80\x03\x03\x01\x00\x22"
		.ascii  "\x42\x98\x84\x03\x03\x08\x00\x02"
		.ascii  "\x02\x08\x81\x03\x02\x19\xf0\x03"
		.ascii  "\x42\x08\x00\x02\x02\x19\x90\x22"
		.ascii  "\x43\x09\xb0\x02\x43\x09\xb0\x22"
		.ascii  "\x43\x28\x10\x03\x03\x09\xb0\x22"
		.ascii  "\x42\x05\x00\x02\x42\x98\x84\x13"
		.ascii  "\x03\x20\x80\x03\x03\x08\x84\x13"
		.ascii  "\x03\x08\x80\x13\x03\x05\x00\x03"
		.ascii  "\x42\x09\x00\x03\x42\x19\x80\x02"
		.ascii  "\x42\x19\x80\x02\x42\x01\x00\x02"
		.ascii  "\x42\x00\x80\x01\x00\x01\x00\x02"
		.ascii  "\x4a\x09\x90\x13\x42\x09\x90\x13"
		.ascii  "\x42\x01\x00\x43\x42\x28\x80\x02"
		.ascii  "\x03\x98\xb0\x03\x03\x00\x10\x83"
		.ascii  "\x42\x11\x80\x22\x4a\x00\x80\x02"
		.ascii  "\x02\x08\x80\x03\x03\x08\x90\x03"
		.ascii  "\x03\x10\x80\x02\x02\x10\xa0\x02"
		.ascii  "\x02\x01\x00\x02\x42\x01\x00\x22"
		.ascii  "\x42\x08\x80\x02\x03\x09\x90\x02"
		.ascii  "\x43\x28\x90\x02\x03\x28\x90\x02"
		.ascii  "\x03\x98\xb0\x00\x02\x00\x80\x03"
		.ascii  "\x02\x08\x00\x02\x02\x08\x00\x02"
		.ascii  "\x02\x08\xa0\x02\x43\x08\xa0\x02"
		.ascii  "\x43\x09\x80\x22\x42\x08\x00\x02"
		.ascii  "\x42\x08\x00\x03\x02\x00\x00\x02"
		.ascii  "\x02\x00\xc0\x03\x02\x05\x00\x00"
		.ascii  "\x42\x28\x00\x23\x02\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x08\x00\x06"
		.ascii  "\x12\x08\xc0\x06\x02\x19\x90\x22"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x03"
		.ascii  "\x42\x00\x80\x03\x02\x09\x90\x02"
		.ascii  "\x42\x04\xa0\x02\x42\x08\x00\x02"
		.ascii  "\x02\x04\x00\x02\x42\x04\x00\x02"
		.ascii  "\x42\x04\x00\x02\x42\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x01\xb0\x03"
		.ascii  "\x42\x00\xb0\x03\x02\x00\x88\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02"

_092650_data:
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x6
		.ascii  "\xc8\x00\x00\x00\xc8\x00\x00\x00"
		.ascii  "\xc4\xff\xc4\xff"
		.fill   0x4
		.ascii  "\x3c"
		.fill   0xb
		.ascii  "\xc4\xff"
		.fill   0x8
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\xce\xff"
		.fill   0x1c
		.ascii  "\x3c\x00\x00\x00\x96"
		.fill   0xd
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\xc2\x01\xce\xff\x00\x00\x64\x00"
		.ascii  "\x00\x00\xce\xff\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0x1d
		.ascii  "\x96\x00\xce\xff"
		.fill   0x12
		.ascii  "\xb0\xff"
		.fill   0xc
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0x1d
		.ascii  "\xce\xff\xce\xff\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x8
		.ascii  "\xc8\x00\x28\x00\xc8"
		.fill   0x7
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0xf
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\xc2\x01"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x19
		.ascii  "\xc8\x00\xc8\x00\x00\x00\xce\xff"
		.fill   0x16
		.ascii  "\xce\xff\xce\xff\xce\xff\x00\x00"
		.ascii  "\x64"
		.fill   0x23

_09285c_data:
		.fill   0x4c
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\x2c\x01"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x2c
		.ascii  "\x78\x00\xce\xff\x00\x00\x96"
		.fill   0x5
		.ascii  "\xc8\x00\xc8"
		.fill   0xb
		.ascii  "\x5e\x01\xce\xff\x00\x00\x2c\x01"
		.fill   0x4
		.ascii  "\xc8\x00\x8c"
		.fill   0x29
		.ascii  "\x32\x00\x00\x00\xce\xff"
		.fill   0x1e
		.ascii  "\x78\x00\xce\xff\xce\xff"
		.fill   0x6
		.ascii  "\x64\x00\x2c\x01\x00\x00\xc8"
		.fill   0x5
		.ascii  "\x78"
		.fill   0xd
		.ascii  "\x96\x00\x96\x00\x00\x00\xce\xff"
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\x78\x00\x78"
		.fill   0x5
		.ascii  "\x78\x00\xc8\x00\xc8"
		.fill   0x13
		.ascii  "\xc8"
		.fill   0x1b
		.ascii  "\x96\x00\x00\x00\x32"
		.fill   0xb
		.ascii  "\x5e\x01"
		.fill   0xa
		.ascii  "\x96"
		.fill   0xb
		.ascii  "\x32\x00\x64\x00\x96"
		.fill   0x9
		.ascii  "\xc8\x00\xc8"
		.fill   0x2d
		.ascii  "\x32"
		.fill   0x19

_092a68_data:
		.ascii  "\x54\x00\x2c\x00\x0d\x11\x04\xff"
		.ascii  "\x03\x00\x04\x00\x03\x0d\x03\x00"
		.ascii  "\x0c\x00\x0b\x00\x10\x10\x03\x04"
		.ascii  "\x07\x00\x06\x00\x1a\x19\x01\xff"
		.ascii  "\x02\x00\x01\x00\x08\x0d\x03\x02"
		.ascii  "\x4c\x00\x3f\x00\x0a\x16\x01\xff"
		.ascii  "\x05\x00\x08\x00\x0c\x08\x03\x00"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\xeb\xff\xed\xff\x40\x40\x03\x00"
		.ascii  "\x69\x00\xa8\x00\x30\x3c\x01\xff"
		.ascii  "\x61\x00\x81\x00\x02\x02\x01\xff"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x06\x00\x05\x00\x0a\x0b\x03\x00"
		.ascii  "\x4a\x00\x49\x00\x0d\x0e\x01\xff"
		.ascii  "\x09\x00\x0a\x00\x10\x10\x03\x00"
		.ascii  "\x0e\x00\x01\x00\x0e\x2c\x03\x00"
		.ascii  "\x09\x00\x0a\x00\x10\x10\x03\x00"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x40\x00\x30\x00\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x0b\x00\x0a\x00"
		.ascii  "\x10\x10\x03\x00\x10\x00\x1a\x00"
		.ascii  "\x30\x26\x03\x00\x0b\x00\x0b\x00"
		.ascii  "\x10\x10\x03\x00\x01\x00\xf9\xff"
		.ascii  "\x0c\x22\x03\x02\x08\x00\x06\x00"
		.ascii  "\x14\x14\x03\x00\x01\x00\xf8\xff"
		.ascii  "\x0d\x1e\x03\x00\x06\x00\x03\x00"
		.ascii  "\x0b\x02\x03\x00\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\x3f\x00\x4d\x00"
		.ascii  "\x15\x0a\x04\xff\x08\x00\x05\x00"
		.ascii  "\x12\x17\x03\x03\x07\x00\x0e\x00"
		.ascii  "\x06\x07\x03\x00\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x4b\x00\x3a\x00"
		.ascii  "\x0c\x0c\x01\xff\x06\x00\x04\x00"
		.ascii  "\x18\x19\x06\x04\x02\x00\x04\x00"
		.ascii  "\x12\x0e\x03\x05\x08\x00\x08\x00"
		.ascii  "\x31\x33\x03\x06\x12\x00\x09\x00"
		.ascii  "\x10\x10\x03\x01\x13\x00\x02\x00"
		.ascii  "\x0e\x44\x03\x03\xfd\xff\xfe\xff"
		.ascii  "\x0b\x07\x03\x0a\x0a\x00\x06\x00"
		.ascii  "\x10\x13\x03\x00\x0b\x00\x07\x00"
		.ascii  "\x0e\x11\x03\x01\x0a\x00\x08\x00"
		.ascii  "\x11\x10\x03\x02\x18\x00\x18\x00"
		.ascii  "\x36\x35\x03\x04\x4c\x00\x3c\x00"
		.ascii  "\x08\x09\x01\xff\x15\x00\x14\x00"
		.ascii  "\x38\x38\x03\x00\x3f\x00\x28\x00"
		.ascii  "\x2b\x2d\x01\xff\x7b\x00\x82\x00"
		.ascii  "\x2b\x2d\x01\xff\xa8\x00\x8c\x00"
		.ascii  "\x20\x30\x01\xff\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x0a\x00\x06\x00"
		.ascii  "\x13\x0b\x03\x00\x0a\x00\x06\x00"
		.ascii  "\x13\x0b\x03\x01\x02\x00\x14\x00"
		.ascii  "\x20\x25\x03\x02\x0b\x00\x0d\x00"
		.ascii  "\x3b\x0c\x03\x03\x12\x00\x0e\x00"
		.ascii  "\x29\x29\x03\x0e\x12\x00\x0e\x00"
		.ascii  "\x29\x29\x03\x0f"
		.fill   0x4
		.ascii  "\x13\x20\x06\x0a\x04\x00\x00\x00"
		.ascii  "\x13\x20\x06\x0b\x4a\x00\x49\x00"
		.ascii  "\x0d\x0e\x01\xff\x46\x00\x44\x00"
		.ascii  "\x0e\x0c\x01\xff\x0f\x00\x03\x00"
		.ascii  "\x0c\x2a\x03\x00\x6d\x00\x33\x00"
		.ascii  "\x36\x38\x01\xff\x6f\x00\x98\x00"
		.ascii  "\x33\x17\x01\xff\x4f\x00\x53\x00"
		.ascii  "\x74\x26\x01\xff\x32\x00\x72\x00"
		.ascii  "\x34\x0f\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\x00\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x44\x00\x35\x00"
		.ascii  "\x21\x22\x01\xff\x04\x00\x01\x00"
		.ascii  "\x10\x1c\x03\x02\x09\x00\x09\x00"
		.ascii  "\x24\x09\x03\x00\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x03\x00\x03\x00"
		.ascii  "\x0c\x0c\x03\x04\x07\x00\x04\x00"
		.ascii  "\x0d\x0b\x03\x06\x04\x00\x03\x00"
		.ascii  "\x11\x11\x03\x07\x0c\x00\x0b\x00"
		.ascii  "\x1f\x1c\x03\x0b\x0f\x00\x14\x00"
		.ascii  "\x16\x2f\x03\x0c\x0d\x00\xfa\xff"
		.ascii  "\x35\x21\x03\x10\x06\x00\x07\x00"
		.ascii  "\x1e\x0e\x03\x11\x47\x00\x31\x00"
		.ascii  "\x12\x06\x01\xff"
		.fill   0x4
		.ascii  "\x4b\x50\x03\x02\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x07\x00\x05\x00"
		.ascii  "\x13\x13\x01\xff\x02\x00\x01\x00"
		.ascii  "\x08\x0d\x03\x02\x4c\x00\x3f\x00"
		.ascii  "\x0a\x16\x01\xff\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x04\x00\x04\x00"
		.ascii  "\x10\x10\x03\x00\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x02\x00\xff\xff"
		.ascii  "\x02\x1b\x03\x01\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x12\x00\x07\x00"
		.ascii  "\x20\x1d\x03\x02\x07\x00\x00\x00"
		.ascii  "\x1a\x17\x03\x05\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\xfa\xff\x7f\xff"
		.ascii  "\x16\x8b\x03\x03\x10\x00\x04\x00"
		.ascii  "\x08\x08\x03\x00\xf8\xff\x04\x00"
		.ascii  "\x08\x08\x03\x01\x00\x00\x04\x00"
		.ascii  "\x08\x08\x03\x02\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x04\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x05\x04\x00\x0c\x00"
		.ascii  "\x17\x06\x03\x00\x07\x00\x0c\x00"
		.ascii  "\x18\x08\x03\x01\x04\x00\x0c\x00"
		.ascii  "\x17\x06\x03\x00\x07\x00\x0c\x00"
		.ascii  "\x18\x08\x03\x01\x0e\x00\x05\x00"
		.ascii  "\x5d\x0c\x03\x08\x03\x00\x02\x00"
		.ascii  "\x16\x05\x03\x01\x0c\x00\xd8\xff"
		.ascii  "\x3c\x99\x01\xff\x48\x00\xd8\xff"
		.ascii  "\x3c\x99\x01\xff\x69\x00\xa8\x00"
		.ascii  "\x30\x3c\x01\xff\xa8\x00\x8c\x00"
		.ascii  "\x20\x30\x01\xff\x0a\x00\x06\x00"
		.ascii  "\x15\x10\x03\x00\x05\x00\x04\x00"
		.ascii  "\x0c\x0c\x03\x03\x06\x00\x04\x00"
		.ascii  "\x0c\x0c\x03\x06\x0b\x00\x07\x00"
		.ascii  "\x17\x12\x03\x08\x07\x00\x02\x00"
		.ascii  "\x10\x09\x03\x02\x0c\x00\x07\x00"
		.ascii  "\x2f\x0f\x03\x04\x0f\x00\x07\x00"
		.ascii  "\x38\x11\x03\x05\x04\x00\x02\x00"
		.ascii  "\x06\x32\x03\x07\x0a\x00\x16\x00"
		.ascii  "\x38\x07\x03\x08\x16\x00\x12\x00"
		.ascii  "\x16\x32\x03\x06\x10\x00\x02\x00"
		.ascii  "\x2b\x1e\x03\x01\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x02\x00\x02\x00"
		.ascii  "\x02\x28\x03\x01\x01\x00\x01\x00"
		.ascii  "\x1f\x02\x03\x01\xf3\xff\xf3\xff"
		.ascii  "\x30\x2b\x03\x03\x05\x00\x02\x00"
		.ascii  "\x1e\x11\x03\x07\xf3\xff\xf3\xff"
		.ascii  "\x30\x2b\x03\x03\x05\x00\x02\x00"
		.ascii  "\x1e\x11\x03\x07\x0d\x00\x04\x00"
		.ascii  "\x07\x08\x03\x08\x00\x00\x50\x00"
		.ascii  "\x80\x01\x01\xff\x40\x00\x00\x00"
		.ascii  "\x20\x80\x01\xff\x06\x00\x05\x00"
		.ascii  "\x07\x11\x03\x01\x07\x00\xf8\xff"
		.ascii  "\x09\x22\x03\x03\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x54\x00\x2a\x00"
		.ascii  "\x0d\x62\x04\xff\x05\x00\x01\x00"
		.ascii  "\x02\x13\x03\x00\x10\x00\x04\x00"
		.ascii  "\x08\x08\x03\x00\xf8\xff\x04\x00"
		.ascii  "\x08\x08\x03\x01\x00\x00\x04\x00"
		.ascii  "\x08\x08\x03\x02\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x04\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x05\x0b\x00\xba\x00"
		.ascii  "\x38\x22\x01\xff\x10\x00\xe8\xff"
		.ascii  "\x02\x51\x03"
		.fill   0x79

_0930a8_data:
		.fill   0xd
		.ascii  "\x10\x02\x08\x03\x08\x04\x10\x06"
		.ascii  "\x08\x00\x00\x07\x10\x09\x08\x0a"
		.ascii  "\x10\x0c\x08"
		.fill   0x1c
		.ascii  "\x0d\x08\x00\x00\x0e\x08\x0f\x08"
		.fill   0x4
		.ascii  "\x10\x08\x11\x08"
		.fill   0x4
		.ascii  "\x12\x08\x13\x08\x14\x08"
		.fill   0x4
		.ascii  "\x15\x08\x00\x00\x16\x08"
		.fill   0x4
		.ascii  "\x17\x20\x1b\x08\x1c\x08\x1d\x08"
		.fill   0xe
		.ascii  "\x1e\x08"
		.fill   0xe
		.ascii  "\x1f\x08"
		.fill   0x4
		.ascii  "\x20\x08\x21\x08\x22\x10"
		.fill   0x4
		.ascii  "\x24\x10\x26\x08"
		.fill   0x4
		.ascii  "\x27\x08"
		.fill   0x10
		.ascii  "\x28\x08\x29\x08\x2a\x08"
		.fill   0x4
		.ascii  "\x2b\x08\x2c\x18\x00\x00\x2f\x18"
		.fill   0x4
		.ascii  "\x32\x20\x36\x08"
		.fill   0x8
		.ascii  "\x37\x08\x00\x00\x38\x08\x00\x00"
		.ascii  "\x39\x08\x3a\x08"
		.fill   0x6
		.ascii  "\x3b\x08\x3c\x08\x3d\x08\x00\x00"
		.ascii  "\x3e\x40\x00\x00\x46\x08\x47\x08"
		.ascii  "\x48\x08\x00\x00\x49\x08\x4a\x18"
		.ascii  "\x4d\x10"
		.fill   0xa
		.ascii  "\x4f\x08"
		.fill   0x4
		.ascii  "\x50\x08"
		.fill   0x4
		.ascii  "\x51\x08"
		.fill   0x8
		.ascii  "\x52\x08\x00\x00\x53\x20"
		.fill   0x4
		.ascii  "\x57\x38\x5e\x08\x5f\x08"
		.fill   0x6
		.ascii  "\x60\x08"
		.fill   0x8
		.ascii  "\x61\x08"
		.fill   0x6
		.ascii  "\x62\x10\x00\x00\x64\x08\x65\x08"
		.ascii  "\x00\x00\x66\x08"
		.fill   0x6
		.ascii  "\x67\x10\x69\x08\x6a\x10\x00\x00"
		.ascii  "\x6c\x10\x6e\x10\x70\x10\x00\x00"
		.ascii  "\x72\x08\x73\x10\x75\x10\x77\x08"
		.ascii  "\x00\x00\x78\x10\x7a\x08\x7b\x08"
		.ascii  "\x00\x00\x7c\x08\x7d\x28\x82\x10"
		.ascii  "\x84\x10"
		.fill   0x10
		.ascii  "\x86\x08"
		.fill   0x4
		.ascii  "\x87\x08"
		.fill   0x4
		.ascii  "\x88\x08\x89\x08\x00\x00\x8a\x08"
		.ascii  "\x8b\x08"
		.fill   0x8
		.ascii  "\x8c\x20"
		.fill   0x8
		.ascii  "\x90\x30\x96\x08\x97\x10\x99\x10"
		.ascii  "\x9b\x20\x00\x00\x9f\x08\xa0\x08"
		.ascii  "\xa1\x10\xa3\x10\xa5\x08\xa6\x08"
		.ascii  "\x00\x00\xa7\x08"
		.fill   0x4
		.ascii  "\xa8\x10\xaa\x10\xac\x10\xae\x10"
		.ascii  "\xb0\x10\xb2\x28"
		.fill   0x6
		.ascii  "\xb7\x08\x00\x00\xb8\x08"
		.fill   0x16

_0932b4_data:
		.long   _02d750_func

_0932b8_data:
		.long   _0581fc_func

_0932bc_data:
		.long   _02cde0_func

_0932c0_data:
		.long   _0582dc_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _059b90_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _0572ec_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _028324_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _028564_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _05693c_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02fa58_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02f9c0_func
		.long   _02fa58_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _058070_func
		.long   _02cde0_func
		.long   _05816c_func
		.long   _0566e0_func
		.long   _05d4a8_func
		.long   _05d6bc_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _057f44_func
		.long   _02cde0_func
		.long   _057fbc_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _057f44_func
		.long   _02cde0_func
		.long   _057fbc_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _057ca4_func
		.long   _057eec_func
		.long   _02cde0_func
		.long   _057f3c_func
		.long   _0566e0_func
		.long   _05875c_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d3ac_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _0588f0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _03c588_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _03d108_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d3ac_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _072d88_func
		.long   _073874_func
		.long   _02cde0_func
		.long   _0739f8_func
		.long   _0566e0_func
		.long   _0721bc_func
		.long   _072960_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _056cac_func
		.long   _056d84_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _05736c_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _071f80_func
		.long   _072154_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _05758c_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _072edc_func
		.long   _073874_func
		.long   _02cde0_func
		.long   _0739f8_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d3ac_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02180c_func
		.long   _0223ac_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _0721bc_func
		.long   _072960_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d3ac_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _049710_func
		.long   _049a98_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _049dc8_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _057bb0_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _057c8c_func
		.long   _0566e0_func
		.long   _072588_func
		.long   _07394c_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _0584dc_func
		.long   _0566e0_func
		.long   _027cc0_func
		.long   _027d14_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _027cb0_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _028ed0_func
		.long   _02cde0_func
		.long   _028fc0_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _028ed0_func
		.long   _02cde0_func
		.long   _028fc0_func
		.long   _0566e0_func
		.long   _02f748_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d3ac_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _01cc50_func
		.long   _01cdcc_func
		.long   _02cde0_func
		.long   _01ce94_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _0721bc_func
		.long   _072960_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _073b30_func
		.long   _073e28_func
		.long   _02cde0_func
		.long   _073e9c_func
		.long   _0566e0_func
		.long   _06aaec_func
		.long   _06b0a0_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _052c0c_func
		.long   _052f2c_func
		.long   _02cde0_func
		.long   _052bcc_func
		.long   _0566e0_func
		.long   _052ffc_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _06b5dc_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _03a51c_func
		.long   _03add4_func
		.long   _02cde0_func
		.long   _03af00_func
		.long   _0566e0_func
		.long   _03afa0_func
		.long   _02b6f4_jump
		.long   _0707b0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _072610_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _0306c0_func
		.long   _02b6f4_jump
		.long   _030f44_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _057478_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d810_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02e13c_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _0585b0_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _058684_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _06b0a0_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _06b0a0_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _06aaec_func
		.long   _06b0a0_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _06aaec_func
		.long   _06b0a0_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _05cc78_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _0571f0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _020390_func
		.long   _0202d0_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _020f7c_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _046da0_func
		.long   _047060_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02fb48_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _047b94_func
		.long   _048008_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _05714c_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _05cfd0_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d3ac_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _03d998_func
		.long   _02b6f4_jump
		.long   _03dd34_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _0737fc_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _0736cc_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02dd48_func
		.long   _02b6f4_jump
		.long   _02ddc8_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02369c_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _028590_func
		.long   _028f44_func
		.long   _02cde0_func
		.long   _028ff8_func
		.long   _0566e0_func
		.long   _0287d8_func
		.long   _028f44_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02888c_func
		.long   _028f44_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _0707b0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _01fdc8_func
		.long   _020238_func
		.long   _02cde0_func
		.long   _020204_func
		.long   _0566e0_func
		.long   _023534_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _071f80_func
		.long   _072154_func
		.long   _02cde0_func
		.long   _073a44_func
		.long   _0566e0_func
		.long   _023b84_func
		.long   _023bb4_func
		.long   _02cde0_func
		.long   _023c5c_func
		.long   _023848_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _057af8_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _057078_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _057048_func
		.long   _057064_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02fb00_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _05d0fc_func
		.long   _05d350_func
		.long   _02cde0_func
		.long   _05d714_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _057330_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02f9c0_func
		.long   _02fa58_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _05752c_func
		.long   _02b6f4_jump
		.long   _057550_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d3ac_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d3ac_func
		.long   _02d428_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _0517a0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _057090_func
		.long   _0570cc_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02f490_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _028324_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d810_func
		.long   _02dac8_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02e31c_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _049b84_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _049d4c_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _057194_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _06f220_func
		.long   _06f568_func
		.long   _02cde0_func
		.long   _06f4d8_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _05837c_func
		.long   _058414_func
		.long   _02cde0_func
		.long   _05848c_func
		.long   _0566e0_func
		.long   _037a88_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _037e64_func
		.long   _0566e0_func
		.long   _02d3ac_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d3ac_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02e3e0_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02e648_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _05739c_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _073fc0_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _07437c_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _05750c_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _056eac_func
		.long   _058070_func
		.long   _02cde0_func
		.long   _05816c_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _0743b0_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02f9c0_func
		.long   _02fa58_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _030a60_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _030a60_func
		.long   _02b6f4_jump
		.long   _030f44_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _072278_func
		.long   _07394c_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02f578_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _0589f0_func
		.long   _058cf4_func
		.long   _02cde0_func
		.long   _058e44_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02fa58_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02ea80_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02ea80_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _06c278_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _06c7e8_func
		.long   _0566e0_func
		.long   _06aaec_func
		.long   _06b0a0_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _06c7f8_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _06c9c0_func
		.long   _0566e0_func
		.long   _0589f0_func
		.long   _058cf4_func
		.long   _02cde0_func
		.long   _058e44_func
		.long   _0566e0_func
		.long   _02e3e0_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _05b8d4_func
		.long   _05bfe4_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d3ac_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _05b5c0_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _04721c_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _0472f0_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _01c0e0_func
		.long   _01c52c_func
		.long   _02cde0_func
		.long   _01c668_func
		.long   _0566e0_func
		.long   _01c744_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _027d9c_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _0223f4_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _022fe4_func
		.long   _0566e0_func
		.long   _023160_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _023448_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02eafc_func
		.long   _02b6f4_jump
		.long   _02ee50_jump
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02ee50_jump
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _066e8c_unknown
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02ee68_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _03d618_func
		.long   _02b6f4_jump
		.long   _03d64c_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _03d618_func
		.long   _02b6f4_jump
		.long   _03d64c_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _031b78_func
		.long   _0320b8_func
		.long   _02cde0_func
		.long   _0320fc_func
		.long   _0566e0_func
		.long   _046da0_func
		.long   _047060_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _0586f0_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _032164_func
		.long   _02b6f4_jump
		.long   _032414_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _0584fc_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _048050_func
		.long   _0481f4_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _03b2f0_func
		.long   _03b458_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02f160_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02f34c_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02f3f0_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _03b55c_func
		.long   _03b850_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _0589f0_func
		.long   _058cf4_func
		.long   _02cde0_func
		.long   _058e44_func
		.long   _0566e0_func
		.long   _0589f0_func
		.long   _058cf4_func
		.long   _02cde0_func
		.long   _058e44_func
		.long   _0566e0_func
		.long   _049710_func
		.long   _049a98_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _056fe8_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _03b91c_func
		.long   _03be0c_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _03b91c_func
		.long   _03be0c_func
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _03c00c_func
		.long   _02b6f4_jump
		.long   _03c218_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _0325f8_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _03a51c_func
		.long   _03add4_func
		.long   _02cde0_func
		.long   _03af00_func
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02ea80_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02ea80_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _04721c_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _032ae0_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _0588f8_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _0279b8_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02792c_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func
		.long   _02d750_func
		.long   _02b6f4_jump
		.long   _02cde0_func
		.long   _04d1fc_unknown
		.long   _0566e0_func

_09472c_data:
		.ascii  "\x00\x16\x12\x0d\x0d\x0c"

_094732_data:
		.ascii  "\x04\x00\x00\x00\x03\x00\x07\x00"
		.ascii  "\x0a\x00\x0d\x00\x10\x00\x13\x00"
		.ascii  "\x16\x00\x19\x00\x1c\x00\x1f\x00"
		.ascii  "\x22\x00\x25\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00"

_094754_data:
		.ascii  "\x08\x08\x08\x08\x08\x08\x08\x08"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"

_094854_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xc4\xff\xe6\xff"
		.ascii  "\x08\x00\x20\x00\x4b\x00\x20\x00"
		.ascii  "\x08\x00\xe6\xff\xc4\xff"

_09487a_data:
		.ascii  "\xff\xff"
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x30\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00"

_0948a2_data:
		.ascii  "\x00\x00"

_0948a4_data:
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x3c\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00\x00\x00"

_0948cc_data:
		.ascii  "\x00\x00\x57\x03\x39\x03\x00\x00"
		.ascii  "\xff\xfc\x1a\xfd\xff\xff\xb2\x02"
		.ascii  "\x9a\x02\x00\x00\x93\xfd\xa9\xfd"
		.ascii  "\xff\xff\x2d\x02\x19\x02\x00\x00"
		.ascii  "\x0b\xfe\x1c\xfe\xff\xff\xc1\x01"
		.ascii  "\xb2\x01\x00\x00\x6b\xfe\x79\xfe"
		.ascii  "\xff\xff\x6b\x01\x5e\x01\x00\x00"
		.ascii  "\xb9\xfe\xc5\xfe\xff\xff\x24\x01"
		.ascii  "\x1a\x01\x00\x00\xf8\xfe\x01\xff"
		.ascii  "\xff\xff\xec\x00\xe4\x00\x00\x00"
		.ascii  "\x2b\xff\x32\xff\xff\xff\xbe\x00"
		.ascii  "\xb8\x00\x00\x00\x54\xff\x5a\xff"
		.ascii  "\xff\xff\x99\x00\x94\x00\x00\x00"
		.ascii  "\x75\xff\x7a\xff\xff\xff\x7c\x00"
		.ascii  "\x78\x00\x00\x00\x90\xff\x94\xff"
		.ascii  "\xff\xff\x50\x00\x80\x7f"

_09494a_data:
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"

_0949aa_data:
		.ascii  "\xff\x00\x00\x00\xfd\xff\xfa\xff"
		.ascii  "\xf8\xff\xf7\xff\xf6\xff\xf7\xff"
		.ascii  "\xf9\xff\xfb\xff\xfe\xff\x02\x00"
		.ascii  "\x06\x00\x07\x00"

_0949c6_data:
		.ascii  "\x04\x00\x09\x00\x00\x00\x07\x00"
		.ascii  "\x05\x00"

_0949d0_data:
		.ascii  "\x80"
		.string "~}|zyxwutsrponmljihgfecba`_^]\\[ZYXWVUTSRQPONNMLKJIIHGFFEDDCBAA@@"

_094a12_data:
		.ascii  "\x00\x00"

_094a14_data:
		.ascii  "\x1d\x00"

_094a16_data:
		.ascii  "\x08\x01"

_094a18_data:
		.ascii  "\x12"

_094a19_data:
		.ascii  "\x00"

_094a1a_data:
		.ascii  "\x00"

_094a1b_data:
		.ascii  "\x01"

_094a1c_data:
		.ascii  "\x01"

_094a1d_data:
		.ascii  "\x00"

_094a1e_data:
		.ascii  "\x01"

_094a1f_data:
		.ascii  "\x01"

_094a20_data:
		.ascii  "\x02\x00\x00\x00"

_094a24_data:
		.long   _0bf87f_data
		.ascii  "\x64\x00\xfe\x00\x02\x01\x00\x04"

_094a30_data:
		.ascii  "\x00\x00\x01\x05"
		.fill   0x4
		.long   _0bf880_data
		.ascii  "\x5a\x00\xd4\x00\x02\x01\x03\x02"

_094a44_data:
		.ascii  "\x00\x00\x01\x09\x02\x00\x00\x00"
		.long   _0bf881_data
		.ascii  "\x2f\x00\xc8\x00\x03\x03\x03\x02"

_094a58_data:
		.ascii  "\x00\x00\x01\x0c\x01\x00\x00\x00"
		.long   _0bf882_data
		.ascii  "\xb4\x00\xd7\x00\x05\x13\x01\x04"

_094a6c_data:
		.ascii  "\x00\x00\x02\x01\x02\x00\x00\x00"
		.long   _0bf883_data
		.ascii  "\xb9\x00\xaf\x00\x08\x04\x06\x08"

_094a80_data:
		.ascii  "\x00\x00\x02\x07"
		.fill   0x4
		.long   _0bf884_data
		.ascii  "\x87\x00\xa0\x00\x14\x06\x07\x05"

_094a94_data:
		.ascii  "\x00\x00\x02\x0c\x02\x00\x00\x00"
		.long   _0bf885_data
		.ascii  "\x5b\x00\x8f\x00\x07\x07\x07\x06"

_094aa8_data:
		.ascii  "\x00\x00\x02\x0e\x03\x00\x00\x00"
		.long   _0bf886_data
		.ascii  "\xd4\x00\x85\x00\x09\x05\x05\x08"

_094abc_data:
		.ascii  "\x00\x00\x03\x01\x01\x00\x00\x00"
		.long   _0bf887_data
		.ascii  "\xd1\x00\x5c\x00\x15\x08\x09\x0a"

_094ad0_data:
		.ascii  "\x00\x00\x03\x03"
		.fill   0x4
		.long   _0bf888_data
		.ascii  "\x01\x01\x50\x00\x0a\x0b\x09\x0a"

_094ae4_data:
		.ascii  "\x00\x00\x03\x06\x01\x00\x00\x00"
		.long   _0bf889_data
		.ascii  "\xea\x00\xeb\x00\x0a\x0b\x0b\x0c"

_094af8_data:
		.ascii  "\x00\x00\x04\x01\x01\x00\x00\x00"
		.long   _0bf88a_data
		.ascii  "\x16\x01\xbe\x00\x0d\x0b\x0b\x0c"

_094b0c_data:
		.ascii  "\x00\x00\x04\x05\x05\x00\x00\x00"
		.long   _0bf88b_data
		.ascii  "\x22\x01\x91\x00\x16\x0c\x0d\x0e"

_094b20_data:
		.ascii  "\x00\x00\x04\x08\x01\x00\x00\x00"
		.long   _0bf88c_data
		.ascii  "\x4f\x01\xb4\x00\x0d\x0f\x0d\x0e"

_094b34_data:
		.ascii  "\x00\x00\x05\x01"
		.fill   0x4
		.long   _0bf88d_data
		.ascii  "\x38\x01\xe4\x00\x0e\x17\x0f\x10"

_094b48_data:
		.ascii  "\x00\x00\x05\x03\x05\x00\x00\x00"
		.long   _0bf88e_data
		.ascii  "\x68\x01\xdc\x00\x11\x10\x0f\x10"

_094b5c_data:
		.ascii  "\x00\x00\x05\x09\x02\x00\x00\x00"
		.long   _0bf88f_data
		.ascii  "\x65\x01\x50\x00\x11\x10\x11\x11"

_094b70_data:
		.ascii  "\x00\x00\x06\x01\x02\x00\x00\x00"
		.long   _0bf890_data
		.ascii  "\x0a\x00\xd4\x00\x12\x00\x12\x12"

_094b84_data:
		.ascii  "\x00\x00\x07\x14\x05\x00\x00\x00"

_094b8c_data:
		.long   _0bf891_data
		.ascii  "\xb6\x00\x0a\x01\x04\x13\x13\x13"

_094b98_data:
		.ascii  "\x00\x00\x07\x14\x03\x00\x00\x00"

_094ba0_data:
		.long   _0bf892_data
		.ascii  "\x91\x00\x61\x00\x14\x06\x14\x14"

_094bac_data:
		.ascii  "\x00\x00\x07\x14"
		.fill   0x4

_094bb4_data:
		.long   _0bf893_data
		.ascii  "\xbe\x00\x2d\x00\x15\x09\x15\x15"

_094bc0_data:
		.ascii  "\x00\x00\x07\x14\x02\x00\x00\x00"

_094bc8_data:
		.long   _0bf894_data
		.ascii  "\x14\x01\x73\x00\x16\x0d\x16\x16"

_094bd4_data:
		.ascii  "\x00\x00\x07\x14\x01\x00\x00\x00"

_094bdc_data:
		.long   _0bf895_data
		.ascii  "\x32\x01\x0b\x01\x0f\x17\x17\x17"

_094be8_data:
		.ascii  "\x00\x00\x07\x14\x01\x00\x00\x00"

_094bf0_data:
		.ascii  "\x96\xf8\x0b"

_094bf3_data:
		.ascii  "\x00\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03"

_094c74_data:
		.ascii  "\x03\x03\x03\x03\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00"
		.long   _0bf897_data
		.long   _0bf898_data
		.long   _0bf899_data
		.long   _0bf89a_data
		.long   _0bf89b_data
		.long   _0bf89c_data
		.long   _0bf89d_data
		.long   _0bf89e_data

_094ea8_data:
		.long   _0bf89f_data
		.ascii  "\xa0\x00\x6e\x00\x01\x04\x02\x00"
		.long   _0bf8a0_data
		.ascii  "\xa0\x00\x70\x00\x02\x66\x01\x00"
		.long   _0bf8a1_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bf8b0_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bf8c1_data
		.ascii  "\xa0\x00\x71\x00\x02\x66\x02\x00"
		.long   _0bf8c2_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x02\x00"
		.long   _0bf8d6_data
		.ascii  "\xa0\x00\x73\x00\x02\x66\x05\x00"
		.long   _0bf8d7_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bf8e6_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bf8f6_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x05\x00"
		.long   _0bf8f7_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bf907_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bf91b_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bf92a_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x05\x00"
		.long   _0bf93f_data
		.ascii  "\xa0\x00\x74\x00\x02\x66\x00\x00"
		.long   _0bf940_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bf954_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x00\x00"
		.long   _0bf955_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bf967_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bf976_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bf988_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bf99a_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bf9aa_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bf9bf_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bf9d3_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bf9e6_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bf9fb_data
		.ascii  "\xa0\x00\x75\x00\x02\x66\x01\x00"
		.long   _0bf9fc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa0b_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfa1c_data
		.ascii  "\xa0\x00\x72\x00\x02\x66\x00\x00"
		.long   _0bfa1d_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa3a_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa49_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa5b_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa70_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa84_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa95_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfaa6_data
		.ascii  "\xa0\x00\x76\x00\x02\x66\x05\x00"
		.long   _0bfaa7_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfab9_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfacc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfadb_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x05\x00"
		.long   _0bfadc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfaed_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb00_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb11_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb24_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb37_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb48_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb5c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb6d_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb7f_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb95_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfba7_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfbb7_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfbc8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfbd9_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfbe8_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x05\x00"
		.long   _0bfbfe_data
		.ascii  "\xa0\x00\x77\x00\x02\x66\x00\x00"
		.long   _0bfbff_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc14_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc22_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x00\x00"
		.long   _0bfc23_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc34_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc45_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc57_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc6a_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc79_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc86_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc97_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfcad_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfcbf_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfcd2_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfce4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfcf6_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfd07_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfd16_data
		.ascii  "\xa0\x00\x78\x00\x02\x66\x01\x00"
		.long   _0bfd17_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfd2a_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x01\x00"
		.long   _0bfd2b_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfd3d_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfd4c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfd5d_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfd6c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfd7f_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfd93_data
		.ascii  "\xa0\x00\x79\x00\x02\x66\x01\x00"
		.long   _0bfd94_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfda4_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x01\x00"
		.long   _0bfda5_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfdb4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfdc5_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfdda_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfdea_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfdff_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe11_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe25_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe32_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe41_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe50_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe5e_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe73_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe88_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfe99_data
		.ascii  "\xa0\x00\x7a\x00\x02\x66\x02\x00"
		.long   _0bfe9a_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x02\x00"
		.long   _0bfea9_data
		.ascii  "\xa0\x00\x7b\x00\x02\x66\x05\x00"
		.long   _0bfeaa_data
		.ascii  "\xa0\x00\x00\x00\x02\x02\x05\x00"
		.long   _0bfec9_data
		.ascii  "\xa0\x00\x7c\x00\x02\x66\x05\x00"
		.long   _0bfeca_data
		.ascii  "\xa0\x00\x00\x00\x02\x02\x05\x00"
		.long   _0bfeeb_data
		.ascii  "\xa0\x00\x7d\x00\x02\x66\x05\x00"
		.long   _0bfeec_data
		.ascii  "\xa0\x00\x00\x00\x02\x04\x05\x00"
		.long   _0bff09_data
		.ascii  "\xa0\x00\x7e\x00\x02\x00\x01\x00"
		.long   _0bff0a_data
		.ascii  "\xa0\x00\x7f\x00\x02\x06\x01\x00"
		.long   _0bff0b_data
		.ascii  "\xa0\x00\x80\x00\x01\x00\x01\x00"
		.long   _0bff0c_data
		.ascii  "\xc8\x00\x00\x00\x02\xff\x02"
		.fill   0xfd

_0954fc_data:
		.ascii  "\x00\x29\x20\x08\x00\x13\x20\x1b"
		.ascii  "\x00\x1e\x04\x02\x00\x3c\x20\x0b"
		.ascii  "\x00\x10\x04\x0c\x00\x45\x04\x07"
		.ascii  "\x24\x14\x20\x1b\x00\x4a\x80\x2a"
		.ascii  "\xa0\x04\x20\x08\x24\x0b\x20\x7c"
		.ascii  "\x24\x13\x20\x3a\x00\x1c\x10\x2e"
		.ascii  "\x00\x0d\x80\x17\x90\x01\x10\x17"
		.ascii  "\x90\x01\x80\x1f\x90\x02\x10\x34"
		.ascii  "\x00\x21\x80\x03\x90\x01\x10\x17"
		.ascii  "\x90\x01\x80\x1b\x90\x03\x10\x4a"
		.ascii  "\x00\x44\x80\x1f\x90\x01\x10\x04"
		.ascii  "\x14\x0c\x10\x0e\x00\x08\xa0\x1d"
		.ascii  "\x80\x02\x90\x01\x80\xca\x90\x0d"
		.ascii  "\x10\x23\x00\x11\x20\x24\x00\x13"
		.ascii  "\x20\x0d\xa0\x01\x80\x16\xa0\x19"
		.ascii  "\x20\x26\x24\x0e\x20\x1d\x00\x10"
		.ascii  "\x80\x19\x90\x11\x80\x01\x90\x01"
		.ascii  "\x80\x0c\xa0"
		.ascii   "0 #$"
		.ascii  "\x04"
		.ascii   " u$\t "
		.ascii  "\x0f\x00\x55\x10\x02"
		.fill   0x61
		.ascii  "\x29\x20\x0c\x24\x13\x04\x02\x14"
		.ascii  "\x01\x10\x09\x14\x01\x04\x0c\x00"
		.ascii  "\x1a\x04\x05\x00\x2b\x10\x07\x00"
		.ascii  "\x07\x20\x07\x00\x02\x04\x03\x00"
		.ascii  "\x02\x10\x01\x50\x01\x10\x06\x00"
		.ascii  "\x07\x20\x08\x00\x4b\x04\x05\x00"
		.ascii  "\x3f\x10\x06\x00\x0e\x20\x09\x00"
		.ascii  "\x09\x04\x06\x00\x0c\x20\x37\x00"
		.ascii  "\x05\x10\x02\x50\x1c\x10\x01\x04"
		.ascii  "\x05\x00\x14\x10\x07\x00\x08\x20"
		.ascii  "\x05\x00\x38\x04\x04\x00\x0e\x10"
		.ascii  "\x08\x00\x22\x20\x06\x00\x19\x54"
		.ascii  "\x04\x50\x17\x10\x15\x00\x08\x20"
		.ascii  "\x16\x00\x0f\x20\x0b\x00\x01\x04"
		.ascii  "\x06\x00\x0d\x10\x06\x00\x52\x04"
		.ascii  "\x04\x00\x58\x20\x04\x24\x04\x20"
		.ascii  "\x2c\x00\x0a\x10\x02\x50\x17\x10"
		.ascii  "\x02\x00\x0d\x04\x04\x00\x0a\x10"
		.ascii  "\x03\x00\x0a\x20\x04\x00\x10\x10"
		.ascii  "\x05\x00\x34\x04\x04\x00\x33\x10"
		.ascii  "\x04\x00\x0d\x20\x03\x00\x1b\x04"
		.ascii  "\x05\x00\x47\x04\x04\x00\x51\x04"
		.ascii  "\x04\x00\x21\x10\x0c\x00\x13\x20"
		.ascii  "\x06\x00\x05\x04\x07\x00\x42"
		.fill   0x3b
		.ascii  "\x25\x02\x14\x22\x28\x26\x05\x20"
		.ascii  "\x01\x00\x10\x01\x07\x00\x42\x20"
		.ascii  "\x0c\x24\x12\x20\x08\x00\x15\x20"
		.ascii  "\x06\x24\x07"
		.ascii   " %$\t "
		.ascii  "\x0f\x00\x2c\x02\x20\x22\x06\x26"
		.ascii  "\x0b\x22\x14\x02\x14\x22\x08\x26"
		.ascii  "\x16\x22\x04\x26\x15\x22\x1f\x26"
		.ascii  "\x06\x22\x39\x26\x18\x22\x0a\x66"
		.ascii  "\x02\x56\x02\x16\x06\x56\x0b\x52"
		.ascii  "\x0a\x12\x01\x02\x26\x22\x17\x02"
		.ascii  "\x13\x22\x0c\x02\x01\x22\x43\x26"
		.ascii  "\x08\x22\x26\x26\x06\x22\x13\x02"
		.ascii  "\x04\x00\x37\x20\x04\x24\x04\x20"
		.ascii  "\x0c\x00\x06\x20\x0c\x24\x09\x20"
		.ascii  "\x04\x24\x05\x04\x04\x00\x1d\x02"
		.ascii  "\x01\x22\x06\x26\x09\x22\x0e\x02"
		.ascii   "\t\"\r&"
		.ascii  "\x04\x22\x16\x02\x18\x22\x08\x26"
		.ascii  "\x0b\x22\x0e\x26\x10\x22\x0a\x02"
		.ascii  "\x20\x22\x1d\x26\x08\x22\x14\x26"
		.ascii  "\x13\x22\x1a\x02\x01\x00\x07\x04"
		.ascii  "\x16\x00\x05\x04\x1b\x00\x01\x20"
		.ascii  "\x08\x00\x03\x01\x3b\x21\x08\x01"
		.ascii  "\x25\x00\x16\x04\x14\x00\x05\x04"
		.ascii  "\x03\x24\x0a\x04\x11\x00\x09\x01"
		.ascii  "\x4e\x00\x04\x04\x26\x00\x05\x04"
		.ascii  "\x25\x00\x0f\x04\x09\x00\x12\x01"
		.ascii  "\x30"
		.fill   0x25
		.ascii  "\x28\x20\x4a\x00\x03\x20\x25\x24"
		.ascii  "\x0c\x20\x07\x00\x15\x01\x09\x00"
		.ascii  "\x0e\x80\x1d\x00\x1e\x20\x0a\x24"
		.ascii  "\x1a\x20\x0b\x00\x22\x20\x10\x24"
		.ascii  "\x09\x20\x13\x00\x10\x20\x10\x00"
		.ascii  "\x04\x01\x3d\x00\x1c\x80\x35\x00"
		.ascii  "\x0c\x01\x20\x81\x03\x80\x2f\x00"
		.ascii  "\x03\x01\x1b\x81\x04\x80\x34\x00"
		.ascii  "\x0f\x20\x09\x24\x08\x20\x17\x00"
		.ascii  "\x20\x20\x07\x00\x09\x04\x14\x00"
		.ascii  "\x11\x01\x07\x00\x11\x80\x24\x00"
		.ascii  "\x1d\x20\x01\x24\x0e\x20\x15\x00"
		.ascii  "\x1f\x20\x02\x24\x1e\x20\x09\x00"
		.ascii  "\x0f\x10\x08\x00\x04\x01\x29\x00"
		.ascii  "\x2c\x10\x0e\x14\x07\x10\x2c\x00"
		.ascii  "\x12\x04\x1f\x24\x07\x20\x22\x00"
		.ascii  "\x06\x20\x02\x24\x05\x20\x0f\x00"
		.ascii  "\x2e\x10\x18\x00\x0c\x20\x06\x00"
		.ascii  "\x21\x20\x05\x24\x05\x20\x14\x24"
		.ascii  "\x0e\x20\x10\x00\x34\x20\x10\x00"
		.ascii  "\x0e\x80\x0f\xa0\x13\xa4\xff\xa4"
		.ascii  "\x22\xa0\x28"
		.fill   0x4f
		.ascii  "\xbc\x20\x10\x00\xb0\x02\x0e\x00"
		.ascii  "\x2a\x04\x17\x00\x15\x04\x02\x24"
		.ascii  "\x11\x20\x02\x00\x1d\x04\x01\x24"
		.ascii  "\x08\x20\x02\x00\x25\x20\x0d\x00"
		.ascii  "\x0a\x02\x0b\x00\x76\x04\x0f\x00"
		.ascii  "\x2b\x04\x0a\x24\x04\x20\x02\x00"
		.ascii  "\x2b\x10\x14\x14\x13\x10\x27\x14"
		.ascii  "\x07\x10\x1f\x00\x15\x02\x0e\x00"
		.ascii  "\x29\x04\x18\x00\x13\x20\x05\x00"
		.ascii  "\x58\x04\x12\x24\x0c\x20\x01\x00"
		.ascii  "\x66\x04\x05\x24\x07\x20\x0b\x00"
		.ascii  "\x06\x20\x01\x00\x1a\x02\x0a\x00"
		.ascii  "\x34\x04\x0c\x00\x19\x10\x04\x00"
		.ascii  "\x17\x04\x02\x14\x02\x04\x06\x00"
		.ascii  "\x61\x04\x02\x14\x02\x54\x0a\x14"
		.ascii  "\x01\x10\x16\x00\x08\x01\x05\x00"
		.ascii  "\x1b\x10\x45\x00\x07\x20\x34\x00"
		.ascii  "\x0a\x02\x0a\x00\x2e\x04\x10\x00"
		.ascii  "\x10\x20\x09\x00\x0a\x04\x06\x24"
		.ascii  "\x0e\x20\x05\x00\x04\x10\x08\x00"
		.ascii  "\x02\x01\x06\x00\xa5\x20\x21\x00"
		.ascii  "\x05\x20\x14\x00\x0c\x02\x08\x00"
		.ascii  "\x26\x04\x11\x00\x19\x10\x04\x14"
		.ascii  "\x05\x04\x02\x00\x20\x14\x09\x10"
		.ascii  "\x08\x00\x1e\x10\x4a\x00\x80"
		.fill   0x33
		.ascii  "\x54\x10\x25\x00\x1a\x10\x03\x00"
		.ascii  "\x0a\x20\x06\x00\x3a\x10\x0d\x00"
		.ascii  "\x09\x20\x03\x00\xff\x00\x0b\x20"
		.ascii  "\x03\x24\x11\x20\x13\x00\x17\x10"
		.ascii  "\x07\x50\x02\x54\x1f\x50\x11\x10"
		.ascii  "\x01\x00\x11\x20\x03\x00\x8b\x20"
		.ascii  "\x04\x24\x0f\x20\x13\x00\x2d\x10"
		.ascii  "\x03\x50\x03"
		.ascii   "T P\t"
		.ascii  "\x10\x04\x00\x31\x20\x02\x00\x73"
		.ascii  "\x04\x18\x00\x35\x04\x18\x00\x4a"
		.ascii  "\x20\x08\x24\x1e\x20\x0b\x24\x12"
		.ascii  "\x20\x03\x00\x19\x20\x27\x00\x44"
		.ascii  "\x04\x0e\x00\x07\x20\x05\x00\x50"
		.ascii  "\x04\x13\x14\x09\x04\x01\x00\x20"
		.ascii  "\x10\x04\x00\x11\x20\x04\x00\x22"
		.fill   0x80

_095ad6_data:
		.ascii  "\x00\x00\x9a\x00\xc0\x00\xd6\x00"
		.ascii  "\xac\x00\xc8\x00"

_095ae2_data:
		.ascii  "\x78\x00"

_095ae4_data:
		.ascii  "\x02\x00\x03\x00\x04\x00\x05\x00"
		.ascii  "\x01\x00"

_095aee_data:
		.ascii  "\x05\x00"

_095af0_data:
		.ascii  "\x07\x00\x07\x00\x01\x00\x04\x00"
		.ascii  "\x09\x00\x0a\x00"

_095afc_data:
		.ascii  "\x00\x00\x0a\x00"

_095b00_data:
		.ascii  "\xff"

_095b01_data:
		.ascii  "\xff"

_095b02_data:
		.ascii  "\x4d"

_095b03_data:
		.ascii  "\x48"

_095b04_data:
		.ascii  "\x4b"

_095b05_data:
		.ascii  "\x50"

_095b06_data:
		.ascii  "\x39"

_095b07_data:
		.ascii  "\x38"

_095b08_data:
		.ascii  "\x1d\x00\x00\x00"
		.long   _095b04_data
		.long   _095b03_data
		.long   _095b02_data
		.long   _095b05_data
		.long   _095b07_data
		.long   _095b06_data
		.long   _095b08_data
		.ascii   "KHMP89"
		.ascii  "\x1d\x00"

_095b30_data:
		.ascii  "\x01\x00"

_095b32_data:
		.ascii  "\x01\x00"

_095b34_data:
		.ascii  "\x01\x00\x00\x00"

_095b38_data:
		.ascii  "\x01"

_095b39_data:
		.ascii  "\x01\x00\x00"

_095b3c_data:
		.ascii  "\x15\x16\x17\x18\x15\x19\x16\x15"

_095b44_data:
		.ascii  "\x00\x00"

_095b46_data:
		.ascii  "\x02\x00\xff"
		.fill   0x19
		.ascii  "\x02\x00\x01\x00\x03\x00\xff"
		.fill   0x13
		.ascii  "\x06\x00\x02\x00\x02\x00\x02\x00"
		.ascii  "\x00\x00\x01\x00\x01\x00\x01"
		.fill   0x5
		.ascii  "\xff"
		.fill   0x7
		.ascii  "\x03"
		.fill   0x5
		.ascii  "\x01\x00\x01\x00\x01\x00\xff"
		.fill   0xf
		.ascii  "\x05\x00\x01\x00\x02\x00\x03"
		.fill   0x5
		.ascii  "\x03\x00\x01\x00\x04\x00\x00\x00"
		.ascii  "\xff"
		.fill   0x7
		.ascii  "\x07\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x06\x00\x00\x00\x03"
		.fill   0x5
		.ascii  "\x01\x00\x04\x00\x00\x00\xff\x00"
		.ascii  "\x00\x00"

_095bec_data:
		.ascii  "\x14\x00"

_095bee_data:
		.fill   0x4
		.ascii  "\x06\x00\x02\x00\x05\x00\x04\x00"
		.ascii  "\x08\x00"

_095bfc_data:
		.ascii  "\x14\x00"

_095bfe_data:
		.ascii  "\xf4\x01\x00\x00"

_095c02_data:
		.ascii  "\x40\x02"

_095c04_data:
		.ascii  "\x00\x00\x90\x02\x00\x00\xe0\x02"
		.ascii  "\x00\x00\x30\x03\x00\x00\x80\x03"
		.ascii  "\x00\x00\xd0\x03\x00\x00\x20\x04"
		.ascii  "\x00\x00\x70\x04\x00\x00\xd4\xff"
		.ascii  "\x3d\x02\xce\xff\x8d\x02\xc7\xff"
		.ascii  "\xdd\x02\xc0\xff\x2c\x03\xb9\xff"
		.ascii  "\x7c\x03\xb2\xff\xcc\x03\xab\xff"
		.ascii  "\x1b\x04\xa4\xff\x6b\x04\x9d\xff"
		.ascii  "\xa6\xff\x37\x02\x9c\xff\x86\x02"
		.ascii  "\x8f\xff\xd4\x02\x81\xff\x23\x03"
		.ascii  "\x73\xff\x72\x03\x65\xff\xc1\x03"
		.ascii  "\x57\xff\x0f\x04\x49\xff\x5e\x04"
		.ascii  "\x3b\xff\x77\xff\x2c\x02\x6b\xff"
		.ascii  "\x79\x02\x57\xff\xc6\x02\x42\xff"
		.ascii  "\x14\x03\x2d\xff\x61\x03\x19\xff"
		.ascii  "\xae\x03\x04\xff\xfc\x03\xef\xfe"
		.ascii  "\x49\x04\xda\xfe\x46\xff\x1d\x02"
		.ascii  "\x3b\xff\x68\x02\x20\xff\xb3\x02"
		.ascii  "\x05\xff\xfe\x02\xe9\xfe\x49\x03"
		.ascii  "\xce\xfe\x95\x03\xb3\xfe\xe0\x03"
		.ascii  "\x97\xfe\x2b\x04\x7c\xfe\x12\xff"
		.ascii  "\x0a\x02\x0d\xff\x52\x02\xeb\xfe"
		.ascii  "\x9b\x02\xc9\xfe\xe3\x02\xa8\xfe"
		.ascii  "\x2c\x03\x86\xfe\x74\x03\x64\xfe"
		.ascii  "\xbd\x03\x42\xfe\x05\x04\x20\xfe"
		.ascii  "\xd9\xfe\xf2\x01\xe1\xfe\x38\x02"
		.ascii  "\xb9\xfe\x7d\x02\x91\xfe\xc2\x02"
		.ascii  "\x69\xfe\x07\x03\x41\xfe\x4d\x03"
		.ascii  "\x19\xfe\x92\x03\xf1\xfd\xd7\x03"
		.ascii  "\xc9\xfd\x9a\xfe\xd7\x01\xb6\xfe"
		.ascii  "\x19\x02\x88\xfe\x5a\x02\x5a\xfe"
		.ascii  "\x9c\x02\x2c\xfe\xdd\x02\xff\xfd"
		.ascii  "\x1f\x03\xd1\xfd\x61\x03\xa3\xfd"
		.ascii  "\xa2\x03\x75\xfd\x53\xfe\xb9\x01"
		.ascii  "\x8e\xfe\xf6\x01\x5b\xfe\x33\x02"
		.ascii  "\x27\xfe\x71\x02\xf4\xfd\xae\x02"
		.ascii  "\xc1\xfd\xeb\x02\x8d\xfd\x28\x03"
		.ascii  "\x5a\xfd\x66\x03\x26\xfd\x01\xfe"
		.ascii  "\x97\x01\x69\xfe\xcf\x01\x31\xfe"
		.ascii  "\x08\x02\xf8\xfd\x40\x02\xc0\xfd"
		.ascii  "\x79\x02\x87\xfd\xb2\x02\x4e\xfd"
		.ascii  "\xea\x02\x16\xfd\x23\x03\xdd\xfc"
		.ascii  "\x9e\xfd\x72\x01\x47\xfe\xa5\x01"
		.ascii  "\x0a\xfe\xd9\x01\xcd\xfd\x0c\x02"
		.ascii  "\x8f\xfd\x3f\x02\x52\xfd\x73\x02"
		.ascii  "\x15\xfd\xa6\x02\xd8\xfc\xda\x02"
		.ascii  "\x9a\xfc\x25\xfd\x4a\x01\x29\xfe"
		.ascii  "\x78\x01\xe7\xfd\xa6\x01\xa6\xfd"
		.ascii  "\xd4\x01\x64\xfd\x01\x02\x23\xfd"
		.ascii  "\x2f\x02\xe1\xfc\x5d\x02\x9f\xfc"
		.ascii  "\x8b\x02\x5e\xfc\x8a\xfc\x20\x01"
		.ascii  "\x0e\xfe\x48\x01\xc8\xfd\x70\x01"
		.ascii  "\x83\xfd\x98\x01\x3e\xfd\xc0\x01"
		.ascii  "\xf9\xfc\xe8\x01\xb3\xfc\x10\x02"
		.ascii  "\x6e\xfc\x38\x02\x29\xfc\xb7\xfb"
		.ascii  "\xf3\x00\xf6\xfd\x15\x01\xae\xfd"
		.ascii  "\x37\x01\x65\xfd\x58\x01\x1d\xfd"
		.ascii  "\x7a\x01\xd4\xfc\x9c\x01\x8c\xfc"
		.ascii  "\xbe\x01\x43\xfc\xe0\x01\xfb\xfb"
		.ascii  "\x82\xfa\xc5\x00\xe3\xfd\xe0\x00"
		.ascii  "\x98\xfd\xfb\x00\x4d\xfd\x17\x01"
		.ascii  "\x02\xfd\x32\x01\xb7\xfc\x4d\x01"
		.ascii  "\x6b\xfc\x69\x01\x20\xfc\x84\x01"
		.ascii  "\xd5\xfb\x8a\xf8\x95\x00\xd4\xfd"
		.ascii  "\xa9\x00\x87\xfd\xbe\x00\x3a\xfd"
		.ascii  "\xd3\x00\xec\xfc\xe7\x00\x9f\xfc"
		.ascii  "\xfc\x00\x52\xfc\x11\x01\x04\xfc"
		.ascii  "\x26\x01\xb7\xfb\xa9\xf4\x64\x00"
		.ascii  "\xc9\xfd\x71\x00\x7a\xfd\x7f\x00"
		.ascii  "\x2c\xfd\x8d\x00\xdd\xfc\x9b\x00"
		.ascii  "\x8e\xfc\xa9\x00\x3f\xfc\xb7\x00"
		.ascii  "\xf1\xfb\xc5\x00\xa2\xfb\x24\xe9"
		.ascii  "\x32\x00\xc3\xfd\x39\x00\x73\xfd"
		.ascii  "\x40\x00\x23\xfd\x47\x00\xd4\xfc"
		.ascii  "\x4e\x00\x84\xfc\x55\x00\x34\xfc"
		.ascii  "\x5c\x00\xe5\xfb\x63\x00\x95\xfb"
		.fill   0x4
		.ascii  "\xc0\xfd\x00\x00\x70\xfd\x00\x00"
		.ascii  "\x20\xfd\x00\x00\xd0\xfc\x00\x00"
		.ascii  "\x80\xfc\x00\x00\x30\xfc\x00\x00"
		.ascii  "\xe0\xfb\x00\x00\x90\xfb"

_095e86_data:
		.ascii  "\x12\x00"

_095e88_data:
		.ascii  "\xb9\x01\x00\x00"

_095e8c_data:
		.ascii  "\xfd\xff\xfe\xff\xff\xff\x00\x00"
		.ascii  "\x01\x00\x01\x00\x03\x00"

_095e9a_data:
		.ascii  "\xfd\xff\xfb\xff\xfc\xff\xfa\xff"
		.ascii  "\xfb\xff\xfd\xff\xfd\xff"
		.long   _0bffe9_data

_095eac_data:
		.ascii  "\x53\x00"

_095eae_data:
		.fill   0x4
		.ascii  "\x04\x00\x07\x00\x09\x00\x0a\x00"
		.ascii  "\x09\x00\x07\x00\x04\x00\x00\x00"
		.ascii  "\xfe\xff\xfc\xff\xfb\xff\xfa\xff"
		.ascii  "\xfb\xff\xfc\xff\xfe\xff\x00\x00"
		.ascii  "\x01\x00\x02\x00\x03\x00\x02\x00"
		.ascii  "\x01\x00\x00\x00\xff\xff\xfe\xff"
		.ascii  "\xff\xff\x00\x00\x01"
		.fill   0x5

_095eec_data:
		.ascii  "\x00\x01\x02\x00"

_095ef0_data:
		.ascii  "\x00\x00\x02\x00\x02"

_095ef5_data:
		.ascii  "\x02\x00\x00\x02\x00"

_095efa_data:
		.ascii  "\x02\x02\x00\x00\x00"

_095eff_data:
		.fill   0x5

_095f04_data:
		.ascii  "\x11\x00\x00\x00\x10\x00\x00\x00"
		.ascii  "\x0b\x00\x00\x00\x0b\x00\x00\x00"
		.ascii  "\x0b\x00\x00\x00\x04"

_095f19_data:
		.ascii  "\x00\x00\x00"

_095f1c_data:
		.ascii  "\x01\x00\x00\x00"

_095f20_data:
		.long   _03dff4_jump

_095f24_data:
		.long   _03e008_jump

_095f28_data:
		.long   _03e01c_jump
		.ascii  "\x83\x86\x85\xa6\xb8\x00\x00\x00"
		.ascii  "\xb6\xb0\x85\x8e\xba\xb0\x86\x00"
		.ascii  "\x89\xa7\x84\xb0\x89\x84\xb9\x81"
		.ascii  "\xb0\x83\x86\x85\x85\x84\xba\x8e"
		.ascii  "\x8f\x00\x00\x00\x83\x86\x85\x84"
		.ascii  "\xb9\x8e\xb1\x00\x8f\x86\xb1\xa7"
		.ascii  "\x81\xba\x00\x00"
		.string "jungle\\"
		.fill   0x5
		.string "music\\"
		.fill   0x6
		.string "mountain\\"
		.ascii  "\x00\x00\x00"
		.string "image\\"
		.fill   0x6
		.string "cave\\"
		.fill   0x7
		.string "cake\\"
		.fill   0x9

_095fb0_data:
		.string "jungle"
		.fill   0x6
		.string "music"
		.fill   0x7
		.string "mountain"
		.fill   0x4
		.string "image"
		.fill   0x7
		.string "cave"
		.fill   0x8
		.string "cake"
		.fill   0xa
		.ascii  "\x2f"
		.fill   0x63
		.long   _0c0497_data
		.long   _0c049f_data
		.long   _0c04a7_data
		.ascii  "\xaf\x04"

_096072_data:
		.ascii  "\x0c\x00\x04\x00\x0c\x00\x14\x00"

_09607a_data:
		.ascii  "\x18\x00\x40\x01\x38\x01\x30\x01"

_096082_data:
		.ascii  "\x2c\x01\x00\x00\x08\x00\x10\x00"

_09608a_data:
		.ascii  "\x14\x00\xc8\x00\xc0\x00\xb8\x00"
		.ascii  "\xb4\x00"
		.long   _0c04b7_data
		.long   _0c04ba_data
		.long   _0c04bd_data
		.long   _0c04c0_data
		.long   _0c04c3_data
		.ascii  "\x01"
		.fill   0xb
		.long   _0c04cd_data
		.long   _0c04cf_data
		.long   _0c04d1_data
		.long   _0c04d3_data
		.long   _0c04d5_data
		.long   _0c04d7_data
		.long   _0c04d9_data
		.long   _0c04db_data
		.long   _0c04dd_data
		.long   _0c04df_data
		.fill   0x10
		.long   _0c04e1_data
		.long   _0c04e3_data
		.long   _0c04e5_data
		.long   _0c04e7_data
		.long   _0c04e9_data
		.long   _0c04eb_data
		.long   _0c04ed_data
		.long   _0c04ef_data
		.long   _0c04f1_data
		.long   _0c04f3_data
		.fill   0x10
		.long   _0c04f5_data
		.long   _0c04f7_data
		.long   _0c04f9_data
		.long   _0c04fb_data
		.long   _0c04fd_data
		.long   _0c04ff_data
		.long   _0c0501_data
		.long   _0c0503_data
		.long   _0c0505_data
		.long   _0c0507_data
		.fill   0x10
		.long   _0c0509_data
		.long   _0c050b_data
		.long   _0c050d_data
		.long   _0c050f_data
		.long   _0c0511_data
		.long   _0c0513_data
		.long   _0c0515_data
		.long   _0c0517_data
		.long   _0c0519_data
		.fill   0x5c
		.long   _0c051b_data
		.fill   0xcc

_0962ac_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_0962bc_data:
		.ascii  "\x02\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x06\x00"

_0962cc_data:
		.fill   0x8
		.ascii  "\x08"
		.fill   0x7

_0962dc_data:
		.ascii  "\x07\x00\x08\x00\x08"
		.fill   0x5
		.ascii  "\x08\x00\x08\x00\x01\x00"

_0962ec_data:
		.ascii  "\x08\x00\x08\x00\x01\x00\x08\x00"
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"

_0962fc_data:
		.fill   0xe
		.ascii  "\x08\x00"

_09630c_data:
		.fill   0xa
		.ascii  "\x08"
		.fill   0x5
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x01\x00\x08\x00"
		.ascii  "\x07\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x01\x00"

_09633c_data:
		.ascii  "\x07\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_09634c_data:
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_09635c_data:
		.ascii  "\x08\x00\x08\x00\x07\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_09636c_data:
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962bc_data

_09638c_data:
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _09630c_data

_0963ac_data:
		.long   _0962ac_data
		.long   _09635c_data
		.long   _0962ac_data
		.long   _09634c_data
		.long   _0962ac_data
		.long   _09633c_data
		.long   _0962ac_data
		.long   _0962ac_data

_0963cc_data:
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962dc_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data

_0963ec_data:
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ec_data
		.long   _0962ac_data
		.long   _0962bc_data
		.long   _0962ac_data

_09640c_data:
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962fc_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data

_09642c_data:
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962ac_data
		.long   _0962cc_data
		.long   _0962ac_data

_09644c_data:
		.long   _09636c_data
		.long   _09638c_data
		.long   _0963ac_data
		.long   _0963cc_data
		.long   _0963ec_data
		.long   _09640c_data
		.long   _09642c_data

_096468_data:
		.ascii  "\x2a\x2e\x05\x00"

_09646c_data:
		.ascii  "\x2c\x02"

_09646e_data:
		.ascii  "\x28\x02"

_096470_data:
		.ascii  "\x07\x08\x0c\x26\x0d\x0e\x00\x00"

_096478_data:
		.ascii  "\x29\x0f\x10\x29\x1a\x12\x13\x01"

_096480_data:
		.ascii  "\x15\x16\x2d\x18\x29\x1a\x12\x13"
		.ascii  "\x01\x00\x00\x00"

_09648c_data:
		.ascii  "\x1b\x1c\x00\x00\x1d\x1c\x20\xfe"
		.ascii  "\x1d\x1c\x00\x01\x1d\x1c\x20\xfe"
		.ascii  "\x1d\x1c\x10\x02\x1d\x1c\x10\x02"
		.ascii  "\x1d\x1c\x30\x03\x1d\x1c\x00\x04"
		.ascii  "\x1d\x1c\x5c\x05\x1d\x1c\x36\x05"
		.ascii  "\x1d\x1c\x10\x05\x1d\x1c\x00\x06"
		.ascii  "\x1d\x1e\x18\x29\x1a\x12\x13\x00"

_0964c4_data:
		.ascii  "\x15\x16\x19\x1f"
		.fill   0x4

_0964cc_data:
		.ascii  "\x24\x23\x2b\x01"
		.ascii   "\"$\"!"
		.ascii  "\x01"
		.ascii   "#$#+"
		.ascii  "\x01\x22\x22\x21\x01\x23\x23\x2b"
		.ascii  "\x02\x22\x22\x21\x01\x23\x23\x2b"
		.ascii  "\x02\x22\x20\x01\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x01\x22\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x01\x22\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x03\x22\x01\x00\x00"

_096508_data:
		.ascii  "\x25\x27\x00\x00"

_09650c_data:
		.ascii  "\x2d\x18\x29\x1a\x12\x13\x1b\x1c"
		.ascii  "\x10\xff\x1d\x2d\x18\x29\x1a\x12"
		.ascii  "\x12\x13\x15\x16\x1c\x20\xfe\x1d"
		.ascii  "\x01\x00\x00\x00"

_096528_data:
		.long   _096470_data
		.long   _096478_data
		.long   _096480_data
		.long   _09648c_data
		.long   _0964c4_data
		.long   _0964cc_data
		.long   _096508_data
		.long   _09650c_data
		.long   _09646e_data
		.long   _09646c_data
		.long   _096468_data

_096554_data:
		.ascii  "\x10\x17\x18\x16\x19\x00\x00\x00"

_09655c_data:
		.ascii  "\x10\x11\x0f\x1a\x0b\x05\x00\x00"

_096564_data:
		.ascii  "\x0d\x1a\x0e\x03"

_096568_data:
		.ascii  "\x0d\x1a\x0e\x04\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x13\x15\x04\x14\x0a\x1a\x0e\x02"

_096590_data:
		.ascii  "\x0d\x1a\x0e\x04\x07\x00\x07\x00"
		.ascii  "\x0a\x1a\x0e\x04\x03\x00\x00\x00"

_0965a0_data:
		.ascii  "\x07\x04\x07\x08\x0a\x1a\x0e\x0d"
		.ascii  "\x1a\x0e\x04\x02"

_0965ac_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x04"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02\x00\x00\x00"

_0965c4_data:
		.ascii  "\x09\x00\x12\x15\x04\x14\x09\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x0d"
		.ascii  "\x0e\x04\x02\x00"

_0965d8_data:
		.ascii  "\x07\x08\x08\x08\x09\x00\x13\x15"
		.ascii  "\x04\x14\x09\x08\x12\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02\x00\x00\x00"

_0965f0_data:
		.long   _096564_data

_0965f4_data:
		.long   _096568_data
		.long   _096564_data
		.long   _096590_data
		.long   _0965a0_data
		.long   _0965ac_data
		.long   _0965c4_data
		.long   _0965d8_data
		.long   _09655c_data
		.long   _096554_data

_096618_data:
		.ascii  "\x00\x02\x00\x02\x00\x02\x00\x02"
		.ascii  "\x00\x02\x00\x02\xff\x01\xff\x01"
		.ascii  "\xfe\x01\xfd\x01\xfd\x01\xfc\x01"
		.ascii  "\xfb\x01\xfa\x01\xf9\x01\xf8\x01"
		.ascii  "\xf7\x01\xf5\x01\xf4\x01\xf3\x01"
		.ascii  "\xf1\x01\xf0\x01\xee\x01\xec\x01"
		.ascii  "\xea\x01\xe9\x01\xe7\x01\xe5\x01"
		.ascii  "\xe3\x01\xe0\x01\xde\x01\xdc\x01"
		.ascii  "\xda\x01\xd7\x01\xd5\x01\xd2\x01"
		.ascii  "\xcf\x01\xcd\x01\xca\x01\xc7\x01"
		.ascii  "\xc4\x01\xc1\x01\xbe\x01\xbb\x01"
		.ascii  "\xb8\x01\xb4\x01\xb1\x01\xae\x01"
		.ascii  "\xaa\x01\xa7\x01\xa3\x01\x9f\x01"
		.ascii  "\x9c\x01\x98\x01\x94\x01\x90\x01"
		.ascii  "\x8c\x01\x88\x01\x84\x01\x80\x01"
		.ascii  "\x7c\x01\x78\x01\x73\x01\x6f\x01"
		.ascii  "\x6b\x01\x66\x01\x62\x01\x5d\x01"
		.ascii  "\x58\x01\x54\x01\x4f\x01\x4a\x01"
		.ascii  "\x45\x01\x40\x01\x3c\x01\x37\x01"
		.ascii  "\x32\x01\x2c\x01\x27\x01\x22\x01"
		.ascii  "\x1d\x01\x18\x01\x12\x01\x0d\x01"
		.ascii  "\x08\x01\x02\x01\xfd\x00\xf7\x00"
		.ascii  "\xf2\x00\xec\x00\xe7\x00\xe1\x00"
		.ascii  "\xdb\x00\xd6\x00\xd0\x00\xca\x00"
		.ascii  "\xc4\x00\xbf\x00\xb9\x00\xb3\x00"
		.ascii  "\xad\x00\xa7\x00\xa1\x00\x9b\x00"
		.ascii  "\x95\x00\x8f\x00\x89\x00\x83\x00"
		.ascii  "\x7d\x00\x77\x00\x71\x00\x6b\x00"
		.ascii  "\x64\x00\x5e\x00\x58\x00\x52\x00"
		.ascii  "\x4c\x00\x45\x00\x3f\x00\x39\x00"
		.ascii  "\x33\x00\x2c\x00\x26\x00\x20\x00"
		.ascii  "\x1a\x00\x13\x00\x0d\x00\x07\x00"
		.ascii  "\x01\x00\x00\x00"

_09671c_data:
		.long   _055ee8_func

_096720_data:
		.long   _056010_jump

_096724_data:
		.long   _056050_jump
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056050_jump
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056050_jump
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056050_jump
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056050_jump
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056200_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056220_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056050_jump
		.long   _055ee8_func
		.long   _056010_jump
		.long   _0561e0_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056244_func
		.long   _055ee4_jump
		.long   _055ee4_jump
		.long   _056284_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056060_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _0561c8_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056254_func
		.long   _055ee4_jump
		.long   _055ee4_jump
		.long   _05627c_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _0562c0_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _0562e4_func
		.long   _055f08_func
		.long   _056018_func
		.long   _056384_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056360_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056064_func
		.long   _055f94_func
		.long   _056048_func
		.long   _056050_jump
		.long   _055f48_func
		.long   _056040_jump
		.long   _056170_func
		.long   _055f48_func
		.long   _056040_jump
		.long   _05619c_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _0560b0_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _0560b0_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056084_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _0560d0_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _0560f8_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056120_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056148_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056050_jump
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056308_func
		.long   _055ee8_func
		.long   _056010_jump
		.long   _056334_func
		.long   _056000_func
		.long   _056054_func
		.long   _0562b4_func

_0968b4_data:
		.ascii  "\x03\x05\x05\x03\x03\x04\x00\x00"

_0968bc_data:
		.ascii  "\x00\x03\x05\x00\x05\x01\x04\x02"

_0968c4_data:
		.ascii  "\x03\x04\x02\x03\x02\x00\x00\x00"

_0968cc_data:
		.ascii  "\x01\x00\x15\x00\x9c\xff\x08\x00"
		.ascii  "\x01\x00\x00\x00\x12\x00\xa0\x00"
		.ascii  "\x08\x00\x03\x00\x2b\x00\x13\x00"
		.ascii  "\x0e\x00"

_0968e6_data:
		.ascii  "\x01\x00\x15\x00\x9c\xff\x08\x00"
		.ascii  "\x06\x00\x0f\x00\x12\x00\x4a\x01"
		.ascii  "\x0e\x00"

_0968f8_data:
		.ascii  "\x00\x00\x15\x00\x4a\x01\x08\x00"
		.ascii  "\x06\x00\x10\x00\x12\x00\x88\xff"
		.ascii  "\x0e\x00"

_09690a_data:
		.ascii  "\x00\x00\x15\x00\x40\x01\x08\x00"
		.ascii  "\x01\x00\x00\x00\x12\x00\xf8\xff"
		.ascii  "\x08\x00\x03\x00\x2a\x00\x13\x00"
		.ascii  "\x0e\x00"

_096924_data:
		.ascii  "\x00\x00\x15\x00\x64\x00\x08\x00"
		.ascii  "\x03\x00\x2c\x00\x13\x00\x08\x00"
		.ascii  "\x03\x00\x2d\x00\x13\x00\x0e\x00"

_09693c_data:
		.ascii  "\x00\x00\x15\x00\xc8\x00\x08\x00"
		.ascii  "\x03\x00\x30\x00\x13\x00\x08\x00"
		.ascii  "\x03\x00\x31\x00\x13\x00\x11\x00"
		.ascii  "\x12\x00\x14\x00\xf8\xff\x11\x00"
		.ascii  "\x1e\x00\x14\x00\xf0\xff\x11\x00"
		.ascii  "\x2d\x00\x14\x00\xe0\xff\x11\x00"
		.ascii  "\x3c\x00\x14\x00\xc0\xff\x11\x00"
		.ascii  "\x41\x00\x14\x00\x00\x00\x13\x00"
		.ascii  "\x0e\x00"

_09697e_data:
		.ascii  "\x00\x00"

_096980_data:
		.ascii  "\x04\x00\x57\x01\x22\x00\x6c\x01"
		.ascii  "\xde\x00\x25\x02\xc8\x00\xcd\x02"
		.ascii  "\xcc\x03\x19\x01\xc6\x01\x6f\x00"
		.ascii  "\xca\x02\x41\x02\x2a\x00\xa9\x00"
		.ascii  "\x43\x03\xbd\x02\x0e\x03\x4f\x03"
		.ascii  "\xd6\x03\xe0\x00\xb5\x01\xcf\x03"
		.ascii  "\x5b\x03\xb1\x03\x3e\x03\xcd\x01"
		.ascii  "\x6b\x02\xa5\x02\x66\x02\x32\x02"
		.ascii  "\xe1\x02\x74\x00\x9f\x01\x7c\x00"
		.ascii  "\xaf\x02\xe6\x01\xf6\x01\x41\x02"
		.ascii  "\x60\x01\x79\x03\x0e\x01\xb8\x00"
		.ascii  "\xb1\x01\xc7\x02\xa7\x00\x27\x02"
		.ascii  "\x94\x02\x7e\x02\x03\x00\x26\x03"
		.ascii  "\x13\x01\xd8\x01\x8b\x01\x81\x01"
		.ascii  "\x53\x02\x69\x02\x1e\x01\xae\x00"
		.ascii  "\x38\x03\x2e\x01\x55\x01\xa2\x01"
		.ascii  "\xf6\x00\xa7\x01\x37\x00\xf9\x01"
		.ascii  "\xef\x03\x01\x00\xa3\x01\x47\x00"
		.ascii  "\x4b\x00\x04\x01\xe6\x03\x6b\x01"
		.ascii  "\x9e\x01\xc9\x00\xc9\x00\xd8\x00"
		.ascii  "\xff\x00\x08\x03\x8e\x03\x9f\x03"
		.ascii  "\xf1\x02\xd8\x01\x20\x02\x24\x00"
		.ascii  "\x85\x00\xd5\x01\xef\x01\x63\x02"
		.ascii  "\x03\x01\x75\x00\xce\x02\x98\x02"
		.ascii  "\x8b\x03\x80\x03\x2b\x00\x36\x02"
		.ascii  "\x0a\x02\x7b\x02\x15\x03\x03\x01"
		.ascii  "\xde\x00\xf1\x00\x57\x01\x43\x02"
		.ascii  "\x88\x00\x74\x02\x1f\x00\xcb\x03"
		.ascii  "\xd9\x00\x3b\x03\x84\x02\xdc\x02"
		.ascii  "\xed\x02\x35\x02\x49\x02\xac\x00"
		.ascii  "\x54\x01\x7a\x03\x4c\x03\x75\x02"
		.ascii  "\xd0\x03\xf7\x03\xed\x03\xf3\x02"
		.ascii  "\x0a\x02\x2e\x01\xdf\x02\x24\x01"
		.ascii  "\x8f\x02\xf8\x01\xb3\x00\x3c\x02"
		.ascii  "\x89\x01\x19\x03\x8e\x01\x9a\x02"
		.ascii  "\x82\x00\x94\x00\x58\x01\xad\x03"
		.ascii  "\x9e\x02\x98\x02\xd6\x02\x9f\x02"
		.ascii  "\xa5\x02\xe2\x02\xfd\x03\xaf\x01"
		.ascii  "\x3f\x02\x81\x01\xef\x03\x0f\x00"
		.ascii  "\xc4\x03\xcf\x01\xf3\x00\x2f\x02"
		.ascii  "\xfa\x01\x81\x02\xd4\x02\x55\x02"
		.ascii  "\x28\x03\xba\x01\x03\x00\x57\x03"
		.ascii  "\xdd\x02\xf2\x03\xd4\x01\x69\x01"
		.ascii  "\xc1\x03\x93\x02\x42\x02\xcb\x02"
		.ascii  "\xe4\x00\x3d\x01\x97\x03\x49\x00"
		.ascii  "\xd4\x03\x73\x02\x53\x00\x63\x03"
		.ascii  "\xe8\x02\xb2\x02\xb3\x03\xf9\x01"
		.ascii  "\x24\x01\xb9\x02\x3d\x01\x6b\x01"
		.ascii  "\x05\x03\xe8\x03\xaf\x03\xfa\x00"
		.ascii  "\xa4\x01\xa7\x03\xad\x01\x5a\x01"
		.ascii  "\x8b\x03\x95\x00\x94\x00\x4a\x01"
		.ascii  "\x9b\x00\x7f\x02\xcc\x03\x13\x01"
		.ascii  "\x66\x00\xeb\x03\xfb\x00\xdd\x00"
		.ascii  "\x57\x00\x1c\x02\x82\x03\x9e\x03"
		.ascii  "\x0f\x01\x75\x02\x93\x03\x9f\x02"
		.ascii  "\x55\x00\x10\x02\x4a\x03\x64\x03"
		.ascii  "\xf4\x02\x74\x02\x30\x02\xe5\x03"
		.ascii  "\xee\x03\x41\x00\x77\x01\xeb\x02"
		.ascii  "\x63\x00\xb9\x02\x5a\x01\x76\x00"
		.ascii  "\x84\x01\x02\x01\x04\x02\x14\x00"
		.ascii  "\xfc\x03\x01\x00\x54\x00\xfd\x00"
		.ascii  "\x2b\x02\xb0\x01\xe1\x00\xd6\x01"
		.ascii  "\x95\x00\xd1\x00\xa9\x01\x09\x00"
		.ascii  "\xdb\x01\xd2\x01\xba\x00\x0a\x00"

_096b80_data:
		.ascii  "\x07\x03\x1b\x07\x07\x03\x1b\x03"
		.ascii  "\x03\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x07\x03\x03\x03\x0f"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x0f"
		.ascii  "\x0b\x07\x03\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x07\x03\x07\x07"
		.ascii  "\x1b\x07\x07\x03\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x07\x07\x0b\x0b"
		.ascii  "\x03\x07\x03\x03\x0b\x07\x03\x03"
		.ascii  "\x07\x07\x07\x07\x00\x07\x07\x07"
		.ascii  "\x0f\x07\x1f\x07\x07\x03\x03\x03"
		.ascii  "\x03\x03\x03\x1b\x03\x07\x03\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x1b\x03\x03\x03\x07\x0f"
		.ascii  "\x07\x07\x07\x07\x07\x1b\x03\x07"
		.ascii  "\x1b\x07\x07\x07\x07\x07\x07\x0b"
		.ascii  "\x03\x0b\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x03\x03\x07\x03\x03"
		.ascii  "\x03\x03\x07\x07\x07\x07\x07\x0f"
		.ascii  "\x07\x1b\x07\x07\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x03\x03\x03\x07"
		.ascii  "\x03\x07\x03\x07\x03\x03\x03\x03"
		.ascii  "\x04\x04\x07\x03\x07\x07\x03\x07"
		.ascii  "\x07\x1b\x07\x03\x00\x1f\x07\x07"
		.ascii  "\x03\x07\x07\x07\x03\x07\x07\x03"
		.ascii  "\x07\x07\x07\x03\x07\x1b\x1f\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x07\x07\x07\x0f"
		.ascii  "\x03\x03\x07\x07\x04\x1b\x04\x07"
		.ascii  "\x07\x07\x03\x03\x03\x03\x07\x07"

_096c80_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0xb
		.ascii  "\x14\x1c\x00\x01\x02\x00\x00\x00"
		.ascii  "\x22"
		.fill   0x12
		.ascii  "\x01\x07\x02"
		.fill   0x5
		.ascii  "\x1e\x0f\x00\x02\x00\x00\x01"
		.fill   0xd
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\x0a"
		.fill   0x5
		.ascii  "\x1e\x36"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x4
		.ascii  "\x1e\x3c\x00\x3c\x28"
		.fill   0x7
		.ascii  "\x14\x00\x3c\x01"
		.fill   0x4
		.ascii  "\x09"
		.fill   0x9
		.ascii  "\x0a\x00\x0b"
		.fill   0x4
		.ascii  "\x1f\x19\x1e"
		.fill   0x6
		.ascii  "\x28\x00\x4b"
		.fill   0xd
		.ascii  "\x50"
		.fill   0x6
		.ascii  "\x3c"
		.fill   0x18
		.ascii  "\x01\x00\x00\x0c"
		.fill   0xf
		.ascii  "\x1e"
		.fill   0x7
		.ascii  "\x2d"
		.fill   0xb
		.ascii  "\x0f\x46"
		.fill   0xa
		.ascii  "\x07\x14"
		.fill   0x4

_096d80_data:
		.fill   0x2a
		.ascii  "\x41"
		.fill   0xd
		.ascii  "\x28"
		.fill   0x3f
		.ascii  "\x23"
		.fill   0x10
		.ascii  "\x15"
		.fill   0x3d
		.ascii  "\x28"
		.fill   0x26
		.ascii  "\x1d\x0f"
		.fill   0xb
		.ascii  "\x14"
		.fill   0x4

_096e80_data:
		.fill   0x54
		.ascii  "\x2a"
		.fill   0x1b
		.ascii  "\x38"
		.fill   0x7f
		.ascii  "\x78"
		.fill   0x21
		.ascii  "\x89"
		.fill   0x7b
		.ascii  "\xc7"
		.fill   0x4d
		.ascii  "\xee\x00\x17"
		.fill   0x17
		.ascii  "\x46"
		.fill   0x9

_097080_data:
		.ascii  "\x00"

_097081_data:
		.ascii  "\xff"

_097082_data:
		.ascii  "\x00"

_097083_data:
		.ascii  "\x7f\x35\x0f\x00\x50\x35\x00\x00"
		.ascii  "\x5a\x35\xff\x00\x5a\x3c\xff\x00"
		.ascii  "\x7f\x35\x05\x00\x73\x37\x03\x00"
		.ascii  "\x32\x35\xff\x00\x50\x35\x08\x00"
		.ascii  "\x37\x35\x0c\x00\x32\x35\xff\x00"
		.ascii  "\x50\x48\x06\x00\x5a\x35\x08\x00"
		.ascii  "\x3c\x41\x01\x00\x3c"

_0970b8_data:
		.ascii  "\x35"

_0970b9_data:
		.ascii  "\x07"

_0970ba_data:
		.ascii  "\x00\x50"

_0970bc_data:
		.ascii  "\x3a"

_0970bd_data:
		.ascii  "\x0d"

_0970be_data:
		.ascii  "\x00\x50\x36\x04\x00\x50\x35\x1f"
		.ascii  "\x00\x50\x37\x1e\x00\x50"

_0970cc_data:
		.ascii  "\x3e"

_0970cd_data:
		.ascii  "\x10"

_0970ce_data:
		.ascii  "\x00\x50\x37\x15\x00\x41\x35\x16"
		.ascii  "\x00\x50\x31\x17\x00\x50\x3c\x19"
		.ascii  "\x00\x3c\x37\x18\x00\x4b\x35\x4c"
		.ascii  "\x00\x50\x35\xff\x00\x50\x38\xff"
		.ascii  "\x00\x50\x35\x47\x00\x3c\x35\x48"
		.ascii  "\x00\x41\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x50\x3c\x4b\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\x68\x00\x2d\x37\x4f"
		.ascii  "\x00\x3c\x36\x50\x00\x3c\x39\x51"
		.ascii  "\x00\x3c\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x1a\x00\x50\x35\x55"
		.ascii  "\x00\x3c\x35\x5d\x00\x28\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x64\x35\x5a\x00\x50"

_09713c_data:
		.ascii  "\x35"

_09713d_data:
		.ascii  "\x5b"

_09713e_data:
		.ascii  "\x00\x3c\x35\x5c\x00\x50\x35\x46"
		.ascii  "\x00\x46\x38\x1b\x00\x50\x33\x05"
		.ascii  "\x00\x50\x39\x60\x00\x50"

_097154_data:
		.ascii  "\x35"

_097155_data:
		.ascii  "\x01"

_097156_data:
		.ascii  "\x00\x5a\x38\x56\x00\x50\x3c\x27"
		.ascii  "\x00\x50\x41\x27\x00\x50\x46\x27"
		.ascii  "\x00\x50\x35\x15\x00\x32\x35\x16"
		.ascii  "\x00\x3c\x35\x20\x00\x1e\x35\x21"
		.ascii  "\x00\x3c\x35\x6a\x00\x50\x35\x63"
		.ascii  "\x00\x50\x35\x6b\x00\x50\x35\x6b"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x54"
		.ascii  "\x00\x46\x35\x0c\x00\x28\x35\x0b"
		.ascii  "\x00\x46\x3a\x5e\x00\x50\x33\x5f"
		.ascii  "\x00\x7f\x35\x60\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x69"
		.ascii  "\x00\x2d\x35\x61\x00\x50\x35\x5f"
		.ascii  "\x00\x5f\x35\x15\x00\x50\x35\x16"
		.ascii  "\x00\x50"

_0971c0_data:
		.ascii  "\x35"

_0971c1_data:
		.ascii  "\x52"

_0971c2_data:
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x54"
		.ascii  "\x00\x50\x35\x33\x00\x5f\x36\x34"
		.ascii  "\x00\x46\x35\x46\x00\x50\x35\x47"
		.ascii  "\x00\x28\x35\x48\x00\x3c\x38\x49"
		.ascii  "\x00\x7f\x35\x4a\x00\x50\x35\x4b"
		.ascii  "\x00\x50\x35\x3d\x00\x50\x35\x3e"
		.ascii  "\x00\x3c\x35\x36\x00\x50\x35\x37"
		.ascii  "\x00\x32\x30\x38\x00\x7f\x35\x4d"
		.ascii  "\x00\x50\x35\x4e\x00\x73\x35\x4f"
		.ascii  "\x00\x64\x35\x32\x00\x2d\x35\x50"
		.ascii  "\x00\x73\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x61"
		.ascii  "\x00\x7f\x35\x62\x00\x50\x35\x63"
		.ascii  "\x00\x50\x37\x64\x00\x50\x35\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x47"
		.ascii  "\x00\x46\x37\x46\x00\x46\x31\x47"
		.ascii  "\x00\x46\x35\x67\x00\x50\x35\x4b"
		.ascii  "\x00\x73\x32\x5e\x00\x7f\x33\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x39\xff"
		.ascii  "\x00\x50\x35\x4b\x00\x78\x37\x4c"
		.ascii  "\x00\x7f\x35\x4d\x00\x6e\x35\x4e"
		.ascii  "\x00\x50\x35\x50\x00\x50\x38\x4f"
		.ascii  "\x00\x37\x37\x51\x00\x50\x3f\x52"
		.ascii  "\x00\x37\x35\xff\x00\x50\x3e\x54"
		.ascii  "\x00\x2d\x39\x55\x00\x50\x3c\x56"
		.ascii  "\x00\x50\x35\x57\x00\x5a\x35\x58"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x13"
		.ascii  "\x00\x25\x35\x0f\x00\x41\x35\x24"
		.ascii  "\x00\x5a\x35\x22\x00\x50\x35\x23"
		.ascii  "\x00\x50\x35\x62\x00\x2d\x37\x62"
		.ascii  "\x00\x2d\x35\xff\x00\x50\x35\x49"
		.ascii  "\x00\x50\x32\x4a\x00\x50\x41\x4b"
		.ascii  "\x00\x50\x35\x67\x00\x64\x37\x4c"
		.ascii  "\x00\x1e\x3b\x4d\x00\x28\x35\xff"
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x51\x00\x50\x35\xff"
		.ascii  "\x00\x50\x3d\x53\x00\x78\x35\x54"
		.ascii  "\x00\x2d\x35\x55\x00\x50\x35\x56"
		.ascii  "\x00\x50\x3c\xff\x00\x7f\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x55\x35\x5a\x00\x37\x3c\x48"
		.ascii  "\x00\x46\x3c\x48\x00\x46\x35\x49"
		.ascii  "\x00\x50\x3c\x33\x00\x46\x35\xff"
		.ascii  "\x00\x50\x35\x3f\x00\x6e\x35\x4c"
		.ascii  "\x00\x50\x35\x4d\x00\x37"

_097328_data:
		.ascii  "\x35"

_097329_data:
		.ascii  "\x4e"

_09732a_data:
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\x50"
		.ascii  "\x00\x50\x32\xff\x00\x50\x35\x52"
		.ascii  "\x00\x50\x37\x53\x00\x50\x30\x54"
		.ascii  "\x00\x5a\x2e\x55\x00\x50\x32\xff"
		.ascii  "\x00\x50\x35\x56\x00\x50\x35\x46"
		.ascii  "\x00\x28\x35\x47\x00\x28\x35\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x37\x35\x4b\x00\x50\x35\x4c"
		.ascii  "\x00\x50\x35\x4d\x00\x50\x35\x4e"
		.ascii  "\x00\x64\x35\x4f\x00\x7f\x35\x50"
		.ascii  "\x00\x50\x35\x51\x00\x50\x32\x25"
		.ascii  "\x00\x41\x35\x26\x00\x3c\x35\x0b"
		.ascii  "\x00\x50\x25\x68\x00\x1e\x3c\xff"
		.ascii  "\x00\x7f\x35\x08\x00\x50\x35\x64"
		.ascii  "\x00\x50\x38\x01\x00\x50\x35\x35"
		.ascii  "\x00\x32\x35\x3c\x00\x2d\x35\x4c"
		.ascii  "\x00\x50\x35\x62\x00\x64\x35\x29"
		.ascii  "\x00\x28\x35\x39\x00\x50\x35\x28"
		.ascii  "\x00\x64\x3c\x27\x00\x69\x35\x62"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x4c"
		.ascii  "\x00\x7f\x3c\x60\x00\x50\x35\x2a"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x2b"
		.ascii  "\x00\x50\x35\xff\x00\x50\x2e\x5a"
		.ascii  "\x00\x5a\x35\x5c\x00\x50\x35\x5f"
		.ascii  "\x00\x28\x35\x5e\x00\x32\x35\x5e"
		.ascii  "\x00\x50\x35\x52\x00\x50\x35\x53"
		.ascii  "\x00\x50\x35\xff\x00\x50\x34\x4d"
		.ascii  "\x00\x50\x38\x4a\x00\x50\x32\x4a"
		.ascii  "\x00\x50\x35\x5a\x00\x50\x35\x59"
		.ascii  "\x00\x50\x35\x55\x00\x50\x30\x56"
		.ascii  "\x00\x50\x35\x57\x00\x50\x39\x58"
		.ascii  "\x00\x50\x32\x4c\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x3c\xff\x00\x7f\x35\x33"
		.ascii  "\x00\x7f\x3c\x19\x00\x3c\x41\x15"
		.ascii  "\x00\x32\x41\x16\x00\x3c\x35\x5d"
		.ascii  "\x00\x37\x35\x5e\x00\x7f\x35\x5e"
		.ascii  "\x00\x7f"

_097454_data:
		.ascii  "\x35"

_097455_data:
		.ascii  "\x5c"

_097456_data:
		.ascii  "\x00\x28\x35\x5f\x00\x7f\x35\x37"
		.ascii  "\x00\x50\x46\x61\x00\x37\x3c\x61"
		.ascii  "\x00\x32\x3c\x67\x00\x50\x3a\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x13"
		.ascii  "\x00\x50\x3c\xff\x00\x7f\x3c\xff"
		.ascii  "\x00\x7f"

_097480_data:
		.fill   0x4
		.ascii  "\x01"
		.fill   0x14
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01"
		.fill   0x7
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x00\x00\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\x01\x01\x01\x01"
		.ascii  "\x00\x01\x00\x00\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"

_09756c_data:
		.ascii  "\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x01\x00\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x00"

_09757e_data:
		.ascii  "\x01\x01"

_097580_data:
		.ascii  "\x7f\x00\x01\x00\x00\x02\x04\x05"
		.ascii  "\x07\x09\x0b\x0c"

_09758c_data:
		.ascii   "(.37<@CFHJMPSVY[]_`behkmoqsuxz|}"
		.ascii  "\x7f\x81\x83\x85\x87\x89\x8a\x8c"
		.ascii  "\x8e\x90\x91\x93\x95\x96\x98\x99"
		.ascii  "\x9b\x9c\x9e\xa0\xa1\xa3\xa4\xa6"
		.ascii  "\xa7\xa8\xaa\xab\xad\xae\xb0\xb1"
		.ascii  "\xb2\xb4\xb5\xb6\xb8\xb9\xba\xbb"
		.ascii  "\xbd\xbe\xbf\xc1\xc2\xc3\xc4\xc6"
		.ascii  "\xc7\xc8\xc9\xca\xcb\xcd\xce\xcf"
		.ascii  "\xd0\xd2\xd3\xd4\xd5\xd6\xd7\xd9"
		.ascii  "\xda\xdb\xdc\xde\xdf\xe0\xe1\xe2"
		.ascii  "\xe3\xe5\xe6\xe7\xe8\xe9\xea\xeb"
		.ascii  "\xec\xed\xee\xef\xf0\xf1\xf2\xf3"
		.ascii  "\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb"

_09760c_data:
		.ascii  "\x00\x00"

_09760e_data:
		.ascii  "\x01\x00"

_097610_data:
		.ascii  "\xff\xff"

_097612_data:
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\xfd\xff\x3c\x00"
		.ascii  "\x00\x00\x02\x00\x02\x00\xfe\xff"
		.fill   0x4
		.ascii  "\x01\x00\x03\x00\xfc\xff\x1e\x00"
		.ascii  "\x00\x00\x01\x00\x02\x00\xfc\xff"
		.ascii  "\x1e\x00\x00\x00\x01\x00\x02\x00"
		.ascii  "\xfd\xff\x2a\x00\x00\x00\x01\x00"
		.ascii  "\x01\x00\xfc\xff\x50\x00\x00\x00"

_097652_data:
		.ascii  "\x01"

_097653_data:
		.ascii  "\x01"

_097654_data:
		.ascii  "\x00\x00\x03\xff\x00\x00\x01\x01"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x1d
		.ascii  "\x09\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03\xff\x00\x00\x05"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x19
		.ascii  "\x02\x01\x00\x00\x07\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x08\x00\x00\x00"
		.ascii  "\x01\xff"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x15
		.ascii  "\x03\xff\x00\x00\x04\xff\x00\x00"
		.ascii  "\x06\x01\x00\x00\x09\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x7
		.ascii  "\x09\x00\x01"
		.fill   0xb
		.ascii  "\x01\x00\x02\x00\x03\x00\x04\x00"
		.ascii  "\x00\x00\x06\x00\x06\x00\x00\x00"

_097714_data:
		.ascii  "\x00\x00\x01\x02\x02\x00\x01\x02"
		.ascii  "\x02\x02\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x02\x02\x02\x00\x00\x01\x00"
		.ascii  "\x00\x01\x02\x00\x02\x02\x00\x00"
		.ascii  "\x02\x02"
		.fill   0x4
		.ascii  "\x02\x02"
		.fill   0x4
		.ascii  "\x02\x00\x02\x02\x02\x02\x00\x00"
		.ascii  "\x02\x00\x00\x02\x02\x02\x02\x02"

_097750_data:
		.ascii  "\x01\x01\x01\x01\x01\x04\x04\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x04"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x02\x0a\x01\x02\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x02\x04\x03\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x03\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x02\x03\x01"
		.ascii  "\x01\x01\x01\x01"

_09778c_data:
		.ascii  "\x20\x01"

_09778e_data:
		.ascii  "\x02\x00"

_097790_data:
		.ascii  "\x00\x00"

_097792_data:
		.fill   0x95a
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x40\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x58\x00\x06\x00\x04\x00\x04\x00"
		.ascii  "\x6e\x00\x04"
		.fill   0x5
		.ascii  "\x0f\x00\x03"
		.fill   0x5
		.ascii  "\x4b\x00\x02"
		.fill   0x94d
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\xc0\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x945
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xa8\x00\x06\x00\x04\x00\x05\x00"
		.ascii  "\x46\x00\x04"
		.fill   0x5
		.ascii  "\x32\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x40\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x01"
		.fill   0x95d
		.ascii  "\x9f\x00\x04"
		.fill   0x5
		.ascii  "\x81\x00\x02"
		.fill   0x955
		.ascii  "\x0c\x00\x06"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x38\x00\x06"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x1c\x00\x06"
		.fill   0x5
		.ascii  "\x10\x00\x08"
		.fill   0x915
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x54\x00\x04"
		.fill   0x5
		.ascii  "\xcc\x00\x02"
		.fill   0x955
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xb1\x00\x04"
		.fill   0x5
		.ascii  "\x6f\x00\x02"
		.fill   0x955
		.ascii  "\xb3"
		.fill   0x5
		.ascii  "\x03\x00\x14\x00\x00\x00\x10\x00"
		.ascii  "\x01\x00\x01\x00\x00\x00\x20\x00"
		.ascii  "\x01\x00\x28"
		.fill   0x5
		.ascii  "\x03"
		.fill   0x941
		.ascii  "\xb7\x00\x06"
		.fill   0x5
		.ascii  "\x68\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x6d\x00\x06"
		.fill   0x5
		.ascii  "\xb2\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xd5\x00\x04"
		.fill   0x5
		.ascii  "\x4b\x00\x02"
		.fill   0x955
		.ascii  "\xc8\x00\x06"
		.fill   0x5
		.ascii  "\x57\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d

_0baa0c_data:
		.fill   0x5
		.ascii  "\x0e\x09"
		.fill   0x8
		.ascii  "\x0f"
		.fill   0x8
		.ascii  "\x04\x00\x00\x02"
		.fill   0x7
		.ascii  "\x03\x0a\x0c"
		.fill   0x7
		.ascii  "\x0b"
		.fill   0x7
		.ascii  "\x06\x0d"
		.fill   0x5

_0baa48_data:
		.ascii  "\x00\x00"

_0baa4a_data:
		.ascii  "\x00\x00"

_0baa4c_data:
		.fill   0x31e
		.ascii  "\x46\x00\x01\x00\x00\x00\x35\x00"
		.ascii  "\x40\x00\x01\x00\x00\x00\x59\x00"
		.ascii  "\x24\x00\x01\x00\x00\x00\x79\x00"
		.ascii  "\x31\x00\x01\x00\x00\x00\x95\x00"
		.ascii  "\x47\x00\x01\x00\x00\x00\xc3\x00"
		.ascii  "\x3b\x00\x01\x00\x00\x00\xef\x00"
		.ascii  "\x18\x00\x01\x00\x00\x00\x17\x01"
		.ascii  "\x00\x00\x01\x00\x00\x00\x48\x01"
		.ascii  "\x47\x00\x01\x00\x00\x00\x2b\x01"
		.ascii  "\xaf\x00\x02\x00\x00\x00\xaf\x00"
		.ascii  "\xaa\x00\x02\x00\x00\x00\x26\x00"
		.ascii  "\xae\x00\x02\x00\x00\x00\x06\x01"
		.ascii  "\xb9\x00\x03\x00\x00\x00\x6c\x01"
		.ascii  "\x94\x00\x03"
		.fill   0x33
		.ascii  "\x40\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x40\x00\x78\x00\x01\x00\x00\x00"
		.ascii  "\xc0\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\xc0\x00\x78\x00\x03"
		.fill   0xd
		.ascii  "\x99"
		.fill   0x5
		.ascii  "\x28\x01"
		.fill   0x6
		.ascii  "\x28\x01\x35"
		.fill   0x5
		.ascii  "\x28\x01\x8d"
		.fill   0x55d
		.ascii  "\xaa\x00\x61\x00\x01\x00\x00\x00"
		.ascii  "\xea\x00\x4b\x00\x01\x00\x00\x00"
		.ascii  "\x2a\x01\x88\x00\x01\x00\x00\x00"
		.ascii  "\x6a\x01\x88\x00\x01\x00\x00\x00"
		.ascii  "\x2a\x00\x79\x00\x01\x00\x00\x00"
		.ascii  "\x6a\x00\x75\x00\x01\x00\x00\x00"
		.ascii  "\xaa\x00\xe3\x00\x02\x00\x00\x00"
		.ascii  "\xd8\x00\xe5\x00\x02\x00\x00\x00"
		.ascii  "\x32\x01\xe1\x00\x02\x00\x00\x00"
		.ascii  "\x72\x01\x6b\x00\x02\x00\x00\x00"
		.ascii  "\x32\x00\x7f\x00\x02\x00\x00\x00"
		.ascii  "\x52\x00\xcd\x00\x02\x00\x00\x00"
		.ascii  "\x8a\x00\xdd\x00\x02\x00\x00\x00"
		.ascii  "\x68\x01\xe1\x00\x03\x00\x00\x00"
		.ascii  "\x28\x00\x0f\x01\x03"
		.fill   0x52b
		.ascii  "\x3f\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\x70\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\xff\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\x30\x01\x8f\x00\x01"
		.fill   0x1c3
		.ascii  "\x06\x00\x42\x00\x01\x00\x00\x00"
		.ascii  "\x08\x01\x39\x00\x01"
		.fill   0x4f3
		.ascii  "\x8a\x00\x8d\x00\x01\x00\x00\x00"
		.ascii  "\xca\x00\x93\x00\x01\x00\x00\x00"
		.ascii  "\x0a\x01\x97\x00\x01"
		.fill   0x8d
		.ascii  "\x7b\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\x89\x00\x01\x00\x00\x00\x80\x00"
		.ascii  "\x83\x00\x01\x00\x00\x00\xc0\x00"
		.ascii  "\x8d\x00\x01"
		.fill   0x4
		.ascii  "\x01\xa1\x00\x01"
		.fill   0x5
		.ascii  "\xb9\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xa6\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xa4\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xa4\x00\x02"
		.fill   0x4
		.ascii  "\x01\xb0\x00\x02"
		.fill   0x55
		.ascii  "\x93\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\xad\x00\x01\x00\x00\x00\x80\x00"
		.ascii  "\x84\x00\x01\x00\x00\x00\xc0\x00"
		.ascii  "\x70\x00\x01"
		.fill   0x4
		.ascii  "\x01\x72\x00\x01\x00\x00\x00\x40"
		.ascii  "\x01\x7f\x00\x01"
		.fill   0x5
		.ascii  "\xde\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xec\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xdb\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xe3\x00\x02"
		.fill   0x4
		.ascii  "\x01\xe9\x00\x02\x00\x00\x00\x40"
		.ascii  "\x01\xe7\x00\x02"
		.fill   0x4a5
		.ascii  "\x55\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\x52\x00\x01\x00\x00\x00\x93\x00"
		.ascii  "\x2c\x00\x01\x00\x00\x00\xd3\x00"
		.ascii  "\x2c\x00\x01\x00\x00\x00\x4c\x01"
		.ascii  "\x60\x00\x01"
		.fill   0x5
		.ascii  "\xd8\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xd0\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xd7\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xec\x00\x02"
		.fill   0x4
		.ascii  "\x01\xe3\x00\x02\x00\x00\x00\x40"
		.ascii  "\x01\xe1\x00\x02"
		.fill   0x4ab
		.ascii  "\x43\x00\xb9\x00\x01\x00\x00\x00"
		.ascii  "\x73\x00\xa2\x00\x01\x00\x00\x00"
		.ascii  "\xd3\x00\xa6\x00\x01\x00\x00\x00"
		.ascii  "\x03\x01\x75\x00\x01\x00\x00\x00"
		.ascii  "\x43\x01\x6f\x00\x01\x00\x00\x00"
		.ascii  "\x59\x01\xab\x00\x01"
		.fill   0x73
		.ascii  "\x19\x00\x69\x00\x01\x00\x00\x00"
		.ascii  "\xa2\x00\xb6\x00\x01\x00\x00\x00"
		.ascii  "\xd6\x00\xa8\x00\x01\x00\x00\x00"
		.ascii  "\x4a\x01\xad\x00\x01"
		.fill   0x5
		.ascii  "\x0a\x01\x02\x00\x00\x00\x20\x00"
		.ascii  "\xe3\x00\x02\x00\x00\x00\x41\x00"
		.ascii  "\x83\x00\x02\x00\x00\x00\x54\x00"
		.ascii  "\xfb\x00\x02\x00\x00\x00\xa4\x00"
		.ascii  "\xea\x00\x02\x00\x00\x00\xd8\x00"
		.ascii  "\x00\x01\x02\x00\x00\x00\xef\x00"
		.ascii  "\xad\x00\x02\x00\x00\x00\x1c\x01"
		.ascii  "\x10\x01\x02\x00\x00\x00\x58\x01"
		.ascii  "\xfe\x00\x02"
		.fill   0x35b

_0bcfc8_data:
		.ascii  "\x00\x00\x00\x01\x03\x05\x07"
		.ascii   "\t\n\n\n\t"
		.ascii  "\x07\x05\x03\x01"

_0bcfd8_data:
		.ascii  "\x04\x00\x02\x00\x00\x00\xfe\xff"
		.ascii  "\xfc\xff\x02\x00\x00\x00\xfe\xff"

_0bcfe8_data:
		.ascii  "\x00\x00\x02\x00\x04\x00\x02\x00"
		.ascii  "\x00\x00\xfe\xff\xfc\xff\xfe\xff"
		.long   _0c0960_data
		.long   _0c0978_data
		.long   _0c0985_data
		.long   _0c0995_data
		.long   _0c09a5_data
		.long   _0c09af_data
		.long   _0c09d2_data
		.long   _0c09dd_data
		.long   _0c09eb_data
		.long   _0c09fc_data
		.long   _0c0a11_data
		.long   _0c0a1d_data
		.long   _0c0a28_data
		.long   _0c0a38_data
		.long   _0c0a41_data
		.long   _0c0a4a_data

_0bd038_data:
		.ascii  "\x3c"

_0bd039_data:
		.ascii  "\x3c\x00\x00"

_0bd03c_data:
		.ascii  "\x00\x01"
		.fill   0x6

_0bd044_data:
		.ascii  "\x00\x20"
		.fill   0xa
		.ascii  "\x01\x00\x00\x00"

_0bd054_data:
		.fill   0xc

_0bd060_data:
		.fill   0x4

_0bd064_data:
		.fill   0x2c

_0bd090_data:
		.fill   0x4

_0bd094_data:
		.ascii  "\x00\x00"

_0bd096_data:
		.ascii  "\x00\x00\x0b\x00\x0c\x00\x0d\x00"
		.ascii  "\x0e\x00\x0f\x00\x10\x00\x10\x00"
		.ascii  "\x11\x00\x13\x00\x14\x00\x15\x00"
		.ascii  "\x16\x00\x17\x00\x19\x00\x1a\x00"
		.ascii  "\x1c\x00\x1e\x00\x20\x00\x21\x00"
		.ascii  "\x23\x00\x26\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00\x2f\x00\x32\x00\x35\x00"
		.ascii  "\x39\x00\x3c\x00\x40\x00\x43\x00"
		.ascii  "\x47\x00\x4c\x00\x50\x00\x55\x00"
		.ascii  "\x5a\x00\x60\x00\x65\x00\x6b\x00"
		.ascii  "\x72\x00\x78\x00\x80\x00\x87\x00"
		.ascii  "\x8f\x00\x98\x00\xa1\x00\xaa\x00"
		.ascii  "\xb5\x00\xbf\x00\xcb\x00\xd7\x00"
		.ascii  "\xe4\x00\xf1\x00\x00\x01\x0f\x01"
		.ascii  "\x1f\x01\x30\x01\x42\x01\x55\x01"
		.ascii  "\x6a\x01\x7f\x01\x96\x01\xae\x01"
		.ascii  "\xc8\x01\xe3\x01\x00\x02\x1e\x02"
		.ascii  "\x3e\x02\x60\x02\x85\x02\xab\x02"
		.ascii  "\xd4\x02\xff\x02\x2c\x03\x5d\x03"
		.ascii  "\x90\x03\xc6\x03\x00\x04\x3c\x04"
		.ascii  "\x7d\x04\xc1\x04\x0a\x05\x56\x05"
		.ascii  "\xa8\x05\xfe\x05\x59\x06\xba\x06"
		.ascii  "\x20\x07\x8d\x07\x00\x08\x79\x08"
		.ascii  "\xfa\x08\x83\x09\x15\x0a\xad\x0a"
		.ascii  "\x50\x0b\xfc\x0b\xb2\x0c\x74\x0d"
		.ascii  "\x41\x0e\x1a\x0f\x00\x10\xf3\x10"
		.ascii  "\xf5\x11\x06\x13\x28\x14\x5b\x15"
		.ascii  "\xa0\x16\xf9\x17\x65\x19\xe8\x1a"
		.ascii  "\x82\x1c\x34\x1e\x00\x20\xe7\x21"
		.ascii  "\xeb"
		.ascii   "#\r&Q("
		.ascii  "\xb7\x2a\x41\x2d\xf2\x2f\xcb\x32"
		.ascii  "\xd1\x35\x04\x39\x68\x3c\x00\x40"
		.ascii  "\xce\x43\xd6\x47"

_0bd198_data:
		.fill   0x4

_0bd19c_data:
		.ascii  "\x20\x00\x00\x00"

_0bd1a0_data:
		.fill   0x4

_0bd1a4_data:
		.fill   0x4

_0bd1a8_data:
		.long   _079d2b_jump

_0bd1ac_data:
		.long   _079d2b_jump

_0bd1b0_data:
		.long   _079d2b_jump

_0bd1b4_data:
		.ascii  "\x00\x00"

_0bd1b6_data:
		.string "Stack Overflow!\r\n"

_0bd1c8_data:
		.ascii  "\x01\x00\x00\x00"

_0bd1cc_data:
		.fill   0x4

_0bd1d0_data:
		.fill   0x4

_0bd1d4_data:
		.fill   0x4

_0bd1d8_data:
		.ascii  "\x00"

_0bd1d9_data:
		.ascii  "\x00\x00\x00"

_0bd1dc_data:
		.fill   0xc
		.ascii  "\x01"
		.fill   0xd

_0bd1f6_data:
		.fill   0xc
		.ascii  "\x02\x00\x00\x00\x01"
		.fill   0x15
		.ascii  "\x02"

_0bd21d_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0x15
		.ascii  "\x03\x00\x00\x00\x03"
		.fill   0x15
		.ascii  "\x02\x00\x00\x00\x04"
		.fill   0x9

_0bd25e_data:
		.fill   0x186

_0bd3e4_data:
		.ascii  "\x61"

_0bd3e5_data:
		.ascii  "\x00\x01\x00\x00"
		.long   _0dee34_data
		.ascii  "\x00\x00\x00"

_0bd3f0_data:
		.fill   0x4

_0bd3f4_data:
		.fill   0x4

_0bd3f8_data:
		.fill   0x4

_0bd3fc_data:
		.fill   0x4

_0bd400_data:
		.fill   0x4

_0bd404_data:
		.fill   0x4

_0bd408_data:
		.fill   0x4

_0bd40c_data:
		.fill   0x4

_0bd410_data:
		.fill   0x4

_0bd414_data:
		.fill   0xc

_0bd420_data:
		.ascii  "\x00\x00"

_0bd422_data:
		.ascii  "\x00"

_0bd423_data:
		.ascii  "\x00"

_0bd424_data:
		.ascii  "\x00"

_0bd425_data:
		.fill   0x4

_0bd429_data:
		.ascii  "\x00\x00"

_0bd42b_data:
		.ascii  "\x00"

_0bd42c_data:
		.ascii  "\x00"

_0bd42d_data:
		.long   _07f659_func

_0bd431_data:
		.fill   0x4
		.ascii  "\x09\x01\x01\x0b\x06\x04\x05\x05"
		.ascii  "\x05\x02\x03\xff\xff\x07\x08"

_0bd444_data:
		.ascii  "\x06\x08\x01\xff"
		.long   _0c0c08_data
		.long   _0c0c0d_data
		.long   _0c0c12_data
		.long   _0c0c17_data
		.long   _0c0c1b_data
		.long   _0c0c20_data
		.long   _0c0c25_data
		.long   _0c0c29_data
		.long   _0c0c2f_data
		.long   _0c0c34_data
		.long   _0c0c38_data
		.long   _0c0c3e_data
		.long   _0c0c44_data
		.long   _0c0c4a_data
		.long   _0c0c4f_data
		.long   _0c0c55_data
		.long   _0c0c59_data
		.long   _0c0c5d_data
		.long   _0c0c61_data
		.long   _0c0c64_data
		.long   _0c0c67_data
		.long   _0c0c6a_data
		.long   _0c0c6e_data

_0bd4a4_data:
		.fill   0x4

_0bd4a8_data:
		.ascii  "\x14\x00\x00\x00"

_0bd4ac_data:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x02"
		.fill   0x3f

_0bd4fc_data:
		.long   _0bd4ac_data

_0bd500_data:
		.fill   0x4

_0bd504_data:
		.fill   0x14

_0bd518_data:
		.fill   0x14

_0bd52c_data:
		.fill   0x4

_0bd530_data:
		.fill   0x1a

_0bd54a_data:
		.fill   0x4

_0bd54e_data:
		.fill   0x1a

_0bd568_data:
		.fill   0x14

_0bd57c_data:
		.fill   0x14

_0bd590_data:
		.fill   0x4

_0bd594_data:
		.fill   0x1a

_0bd5ae_data:
		.fill   0x4

_0bd5b2_data:
		.fill   0x1a

_0bd5cc_data:
		.fill   0x14

_0bd5e0_data:
		.fill   0x14

_0bd5f4_data:
		.fill   0x14

_0bd608_data:
		.fill   0x14

_0bd61c_data:
		.fill   0x14

_0bd630_data:
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xe8\x03\x00\x00"

_0bd644_data:
		.fill   0x14

_0bd658_data:
		.fill   0x4

_0bd65c_data:
		.fill   0x1a

_0bd676_data:
		.fill   0x14

_0bd68a_data:
		.fill   0x14

_0bd69e_data:
		.fill   0x14

_0bd6b2_data:
		.fill   0x4

_0bd6b6_data:
		.fill   0x1a

_0bd6d0_data:
		.fill   0x4

_0bd6d4_data:
		.fill   0x3bc

_0bda90_data:
		.fill   0x4

_0bda94_data:
		.fill   0x1e

_0bdab2_data:
		.fill   0x18

_0bdaca_data:
		.fill   0x24

_0bdaee_data:
		.fill   0x19

_0bdb07_data:
		.fill   0x2b

_0bdb32_data:
		.fill   0x220

_0bdd52_data:
		.ascii  "\x01\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x07\x00\x00\x00"
		.ascii  "\xc2\x00\x00\x00\xc6\x00\x00\x00"
		.ascii  "\xca\x00\x00\x00\xce\x00\x00\x00"

_0bdd72_data:
		.fill   0x5

_0bdd77_data:
		.fill   0x4

_0bdd7b_data:
		.fill   0x4

_0bdd7f_data:
		.fill   0x4

_0bdd83_data:
		.fill   0x4

_0bdd87_data:
		.fill   0x4

_0bdd8b_data:
		.fill   0x4

_0bdd8f_data:
		.fill   0x4

_0bdd93_data:
		.fill   0x4

_0bdd97_data:
		.fill   0x4

_0bdd9b_data:
		.fill   0x4

_0bdd9f_data:
		.fill   0x4

_0bdda3_data:
		.fill   0x4

_0bdda7_data:
		.fill   0x4

_0bddab_data:
		.fill   0x4

_0bddaf_data:
		.fill   0x4

_0bddb3_data:
		.fill   0x4

_0bddb7_data:
		.fill   0x4

_0bddbb_data:
		.fill   0x13c

_0bdef7_data:
		.ascii  "\xff\xff\xff\xff"

_0bdefb_data:
		.fill   0x4

_0bdeff_data:
		.fill   0x56

_0bdf55_data:
		.fill   0x4

_0bdf59_data:
		.ascii  "\x00\x00"

_0bdf5b_data:
		.fill   0x3c

_0bdf97_data:
		.fill   0x4

_0bdf9b_data:
		.fill   0x3c

_0bdfd7_data:
		.fill   0x4

_0bdfdb_data:
		.ascii  "\x00\x00"

_0bdfdd_data:
		.fill   0x3e

_0be01b_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"

_0be02b_data:
		.ascii  "\x00"

_0be02c_data:
		.fill   0xff

_0be12b_data:
		.fill   0xff

_0be22a_data:
		.fill   0x4

_0be22e_data:
		.fill   0x20

_0be24e_data:
		.fill   0x8

_0be256_data:
		.fill   0x4

_0be25a_data:
		.fill   0x24

_0be27e_data:
		.fill   0x4

_0be282_data:
		.fill   0x5

_0be287_data:
		.ascii  "\x00\x00\x00"

_0be28a_data:
		.fill   0x4

_0be28e_data:
		.fill   0x4

_0be292_data:
		.ascii  "\x00\x00"

_0be294_data:
		.fill   0x4

_0be298_data:
		.ascii  "\x00\x00"

_0be29a_data:
		.fill   0x4

_0be29e_data:
		.fill   0x4

_0be2a2_data:
		.fill   0x4

_0be2a6_data:
		.fill   0x4

_0be2aa_data:
		.fill   0x4

_0be2ae_data:
		.fill   0x4

_0be2b2_data:
		.ascii  "\x00\x00"

_0be2b4_data:
		.fill   0x3c

_0be2f0_data:
		.ascii  "\x00"

_0be2f1_data:
		.fill   0x2f

_0be320_data:
		.long   _0c0c74_data
		.long   _0c0c9a_data
		.long   _0c0cb9_data
		.long   _0c0cd3_data
		.long   _0c0cfb_data
		.long   _0c0d0d_data
		.long   _0c0d27_data
		.long   _0c0d39_data
		.long   _0c0d4a_data
		.long   _0c0d73_data
		.long   _0c0da0_data
		.long   _0c0daf_data
		.long   _0c0dc4_data
		.long   _0c0ddc_data
		.long   _0c0df0_data
		.long   _0c0e02_data
		.long   _0c0e1d_data
		.long   _0c0e2c_data
		.long   _0c0e3a_data
		.long   _0c0e48_data

_0be370_data:
		.fill   0x14

_0be384_data:
		.fill   0x4

_0be388_data:
		.fill   0xc

_0be394_data:
		.fill   0x4

_0be398_data:
		.fill   0x4

_0be39c_data:
		.fill   0x4

_0be3a0_data:
		.fill   0x4

_0be3a4_data:
		.fill   0x4

_0be3a8_data:
		.fill   0x4

_0be3ac_data:
		.fill   0xc

_0be3b8_data:
		.fill   0x20

_0be3d8_data:
		.fill   0xc

_0be3e4_data:
		.fill   0x24

_0be408_data:
		.fill   0x4

_0be40c_data:
		.fill   0x5

_0be411_data:
		.ascii  "\x00\x00\x00"

_0be414_data:
		.fill   0x4

_0be418_data:
		.fill   0x4

_0be41c_data:
		.fill   0x4

_0be420_data:
		.fill   0x4

_0be424_data:
		.fill   0x8

_0be42c_data:
		.fill   0x4

_0be430_data:
		.fill   0x4

_0be434_data:
		.ascii  "\x00\x00"

_0be436_data:
		.long   _0bf446_data

_0be43a_data:
		.fill   0x4

_0be43e_data:
		.fill   0x4

_0be442_data:
		.fill   0x1004

_0bf446_data:
		.fill   0x4

_0bf44a_data:
		.fill   0x4

_0bf44e_data:
		.ascii  "\x00\x00"

_0bf450_data:
		.fill   0x4

_0bf454_data:
		.fill   0x4

_0bf458_data:
		.fill   0x4

_0bf45c_data:
		.fill   0x4

_0bf460_data:
		.fill   0x50

_0bf4b0_data:
		.fill   0x4

_0bf4b4_data:
		.fill   0x4

_0bf4b8_data:
		.fill   0x4

_0bf4bc_data:
		.fill   0x4

_0bf4c0_data:
		.fill   0x3c

_0bf4fc_data:
		.fill   0x50

_0bf54c_data:
		.fill   0x4

_0bf550_data:
		.fill   0x4

_0bf554_data:
		.fill   0x4

_0bf558_data:
		.fill   0x4

_0bf55c_data:
		.fill   0x4

_0bf560_data:
		.long   _08368b_func

_0bf564_data:
		.long   _08368b_func

_0bf568_data:
		.long   _084982_func

_0bf56c_data:
		.fill   0x4

_0bf570_data:
		.fill   0x8
		.ascii  "\x02\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03"
		.fill   0x13

_0bf594_data:
		.fill   0x8
		.ascii  "\x02\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x13

_0bf5b8_data:
		.ascii  "\x50\x46\x00\x00"

_0bf5bc_data:
		.ascii  "\x10\x0e\x00\x00"

_0bf5c0_data:
		.ascii  "\x01\x00\x00\x00"

_0bf5c4_data:
		.ascii  "\x45\x53\x54"
		.fill   0x1c

_0bf5e3_data:
		.ascii  "\x45\x44\x54"
		.fill   0x1c
		.long   _0bf5c4_data
		.long   _0bf5e3_data
		.ascii  "\x00\x00"

_0bf60c_data:
		.ascii  "\x01\x00\x00\x00"

_0bf610_data:
		.ascii  "\x10\x00\x00\x00"

_0bf614_data:
		.fill   0x4

_0bf618_data:
		.fill   0x4

_0bf61c_data:
		.long   _084443_jump

_0bf620_data:
		.long   _084443_jump

_0bf624_data:
		.ascii  "\x7f\x12\x00\x00"

_0bf628_data:
		.ascii  "\x11\x00\x00\x00"

_0bf62c_data:
		.ascii  "\x2e\x5c\x00"

_0bf62f_data:
		.string "SAVE"

_0bf634_data:
		.ascii  "\x5c\x00"

_0bf636_data:
		.string "-EDIT"

_0bf63c_data:
		.string "-OLDWORLD"

_0bf646_data:
		.string "-NOCD"

_0bf64c_data:
		.string "Left memory available = %.3f Mo.\n\n"

_0bf66f_data:
		.string "No windows detected.\n"

_0bf685_data:
		.string "Windows real mode detected.\n"

_0bf6a2_data:
		.string "Windows standard mode detected.\n"

_0bf6c3_data:
		.string "Windows/386 V 2.x detected.\n"

_0bf6e0_data:
		.string "Windows 95 detected.\n"

_0bf6f6_data:
		.string "Windows V %d.%d detected.\n"

_0bf711_data:
		.string "Not enough memory."

_0bf724_data:
		.ascii  "\x0a\x00"

_0bf726_data:
		.string "Normal and X mode available.\n"

_0bf744_data:
		.string "Only X mode available.\n"

_0bf75c_data:
		.string "Sound and CD music.\n"

_0bf771_data:
		.string "Only sound, no CD music.\n"

_0bf78b_data:
		.string "Only CD music, no sound.\n"

_0bf7a5_data:
		.string "no CD music, no sound.\n"

_0bf7bd_data:
		.string "Background available.\n"

_0bf7d4_data:
		.string "No background.\n"

_0bf7e4_data:
		.ascii  "\x0a\x00"

_0bf7e6_data:
		.ascii  "\x0a\x00"

_0bf7e8_data:
		.string "Allocation error in variables.\n"

_0bf808_data:
		.string "Allocation error in variables.\n"

_0bf828_data:
		.string "RAYMAN v1.00"

_0bf835_data:
		.string "(C) 1994-1995 UBI STUDIOS, FRANCE"

_0bf857_data:
		.ascii  "\x0a\x0a\x00"

_0bf85a_data:
		.string "rayman.cfg"

_0bf865_data:
		.string "CD ROM's Initialization.\n"

_0bf87f_data:
		.ascii  "\x00"

_0bf880_data:
		.ascii  "\x00"

_0bf881_data:
		.ascii  "\x00"

_0bf882_data:
		.ascii  "\x00"

_0bf883_data:
		.ascii  "\x00"

_0bf884_data:
		.ascii  "\x00"

_0bf885_data:
		.ascii  "\x00"

_0bf886_data:
		.ascii  "\x00"

_0bf887_data:
		.ascii  "\x00"

_0bf888_data:
		.ascii  "\x00"

_0bf889_data:
		.ascii  "\x00"

_0bf88a_data:
		.ascii  "\x00"

_0bf88b_data:
		.ascii  "\x00"

_0bf88c_data:
		.ascii  "\x00"

_0bf88d_data:
		.ascii  "\x00"

_0bf88e_data:
		.ascii  "\x00"

_0bf88f_data:
		.ascii  "\x00"

_0bf890_data:
		.ascii  "\x00"

_0bf891_data:
		.ascii  "\x00"

_0bf892_data:
		.ascii  "\x00"

_0bf893_data:
		.ascii  "\x00"

_0bf894_data:
		.ascii  "\x00"

_0bf895_data:
		.ascii  "\x00"

_0bf896_data:
		.ascii  "\x00"

_0bf897_data:
		.ascii  "\x00"

_0bf898_data:
		.ascii  "\x00"

_0bf899_data:
		.ascii  "\x00"

_0bf89a_data:
		.ascii  "\x00"

_0bf89b_data:
		.ascii  "\x00"

_0bf89c_data:
		.ascii  "\x00"

_0bf89d_data:
		.ascii  "\x00"

_0bf89e_data:
		.ascii  "\x00"

_0bf89f_data:
		.ascii  "\x00"

_0bf8a0_data:
		.ascii  "\x00"

_0bf8a1_data:
		.string "/michel ancel/"

_0bf8b0_data:
		.string "/frederic houde/"

_0bf8c1_data:
		.ascii  "\x00"

_0bf8c2_data:
		.string "/alexandra steible/"

_0bf8d6_data:
		.ascii  "\x00"

_0bf8d7_data:
		.string "/michel ancel/"

_0bf8e6_data:
		.string "/serge hascoet/"

_0bf8f6_data:
		.ascii  "\x00"

_0bf8f7_data:
		.string "/bruno bouvret/"

_0bf907_data:
		.string "/sacha gentilhomme/"

_0bf91b_data:
		.string "/michael guez/"

_0bf92a_data:
		.string "/christophe thibaut/"

_0bf93f_data:
		.ascii  "\x00"

_0bf940_data:
		.string "/alexandra steible/"

_0bf954_data:
		.ascii  "\x00"

_0bf955_data:
		.string "/kamal aitmihoub/"

_0bf967_data:
		.string "/david gilson/"

_0bf976_data:
		.string "/sophie esturgie/"

_0bf988_data:
		.string "/jacques exertie/"

_0bf99a_data:
		.string "/gregoire pons/"

_0bf9aa_data:
		.string "/veronique rondello/"

_0bf9bf_data:
		.string "/beatrice sauterau/"

_0bf9d3_data:
		.string "/philippe vindolet"

_0bf9e6_data:
		.string "/christian volckman/"

_0bf9fb_data:
		.ascii  "\x00"

_0bf9fc_data:
		.string "/eric pelatan/"

_0bfa0b_data:
		.string "/sylvaine jenny/"

_0bfa1c_data:
		.ascii  "\x00"

_0bfa1d_data:
		.string "/jean christophe alessandri/"

_0bfa3a_data:
		.string "/sophie ancel/"

_0bfa49_data:
		.string "/olivier bechard/"

_0bfa5b_data:
		.string "/nicolas bocquillon/"

_0bfa70_data:
		.string "/jean marc geffroy/"

_0bfa84_data:
		.string "/laurent rettig/"

_0bfa95_data:
		.string "/olivier soleil/"

_0bfaa6_data:
		.ascii  "\x00"

_0bfaa7_data:
		.string "/bertrand helias/"

_0bfab9_data:
		.string "/yann le tensorer/"

_0bfacc_data:
		.string "/daniel palix/"

_0bfadb_data:
		.ascii  "\x00"

_0bfadc_data:
		.string "/cyril cauchois/"

_0bfaed_data:
		.string "/olivier couvreur/"

_0bfb00_data:
		.string "/antoine dodens/"

_0bfb11_data:
		.string "/antonio ferreira/"

_0bfb24_data:
		.string "/philippe fuentes/"

_0bfb37_data:
		.string "/benoit germain/"

_0bfb48_data:
		.string "/christophe giraud/"

_0bfb5c_data:
		.string "/frederic houde/"

_0bfb6d_data:
		.string "/francois mahieu/"

_0bfb7f_data:
		.string "/christian mihalache/"

_0bfb95_data:
		.string "/sebastien morin/"

_0bfba7_data:
		.string "/bogdan radusi/"

_0bfbb7_data:
		.string "/daniel raviart/"

_0bfbc8_data:
		.string "/olivier rozier/"

_0bfbd9_data:
		.string "/jozef skrabo/"

_0bfbe8_data:
		.string "/gilles vanwalleghem/"

_0bfbfe_data:
		.ascii  "\x00"

_0bfbff_data:
		.string "/stephane bellanger/"

_0bfc14_data:
		.string "/didier lord/"

_0bfc22_data:
		.ascii  "\x00"

_0bfc23_data:
		.string "/olivier amiaud/"

_0bfc34_data:
		.string "/sylvain brunet/"

_0bfc45_data:
		.string "/nathalie drouet/"

_0bfc57_data:
		.string "/dominique dumont/"

_0bfc6a_data:
		.string "/kamel feunas/"

_0bfc79_data:
		.string "/remy gazel/"

_0bfc86_data:
		.string "/didier leglise/"

_0bfc97_data:
		.string "/jean marc litchmann/"

_0bfcad_data:
		.string "/frederic louvre/"

_0bfcbf_data:
		.string "/guillaume michel/"

_0bfcd2_data:
		.string "/olivier mortier/"

_0bfce4_data:
		.string "/frederic prados/"

_0bfcf6_data:
		.string "/stephane ronse/"

_0bfd07_data:
		.string "/rene de wael/"

_0bfd16_data:
		.ascii  "\x00"

_0bfd17_data:
		.string "/emmanuelle cosso/"

_0bfd2a_data:
		.ascii  "\x00"

_0bfd2b_data:
		.string "/mitsuyuki bando/"

_0bfd3d_data:
		.string "/chris benard/"

_0bfd4c_data:
		.string "/patrice dozier/"

_0bfd5d_data:
		.string "/douglas rand/"

_0bfd6c_data:
		.string "/steven perkinson/"

_0bfd7f_data:
		.string "/christian stonner/"

_0bfd93_data:
		.ascii  "\x00"

_0bfd94_data:
		.string "/serge hascoet/"

_0bfda4_data:
		.ascii  "\x00"

_0bfda5_data:
		.string "/bruno barone/"

_0bfdb4_data:
		.string "/thomas belmont/"

_0bfdc5_data:
		.string "/nicolas bocquillon/"

_0bfdda_data:
		.string "/bruno bouvret/"

_0bfdea_data:
		.string "/christophe cavelan/"

_0bfdff_data:
		.string "/gunther galipot/"

_0bfe11_data:
		.string "/sacha gentilhomme/"

_0bfe25_data:
		.string "/marc gioan/"

_0bfe32_data:
		.string "/michael guez/"

_0bfe41_data:
		.string "/benoit macon/"

_0bfe50_data:
		.string "/lionel rico/"

_0bfe5e_data:
		.string "/emmanuel texandier/"

_0bfe73_data:
		.string "/christophe thibaut/"

_0bfe88_data:
		.string "/dorian thibaut/"

_0bfe99_data:
		.ascii  "\x00"

_0bfe9a_data:
		.string "/agnes haegel/"

_0bfea9_data:
		.ascii  "\x00"

_0bfeaa_data:
		.string "/ludimedia : gerard guillemot/"

_0bfec9_data:
		.ascii  "\x00"

_0bfeca_data:
		.string "/ubi studios : michel guillemot/"

_0bfeeb_data:
		.ascii  "\x00"

_0bfeec_data:
		.string "/ubi soft :  yves guillemot/"

_0bff09_data:
		.ascii  "\x00"

_0bff0a_data:
		.ascii  "\x00"

_0bff0b_data:
		.ascii  "\x00"

_0bff0c_data:
		.string "rayman"
		.ascii  "\x00"

_0bff14_data:
		.string "/limited version/"

_0bff26_data:
		.string "/install rayman with cdrom/"

_0bff42_data:
		.ascii  "\x25\x00"

_0bff44_data:
		.string "/go !/"

_0bff4b_data:
		.string "''game over''"

_0bff59_data:
		.string "game over"

_0bff63_data:
		.ascii  "\x3a"
		.fill   0x4

_0bff68_data:
		.ascii  "\x00"

_0bff69_data:
		.string "Rayman says fatal error :\n%s\n"

_0bff87_data:
		.string "\nPress a key to exit.\n"
		.ascii  "\x00\x00"

_0bffa0_data:
		.string "/%s/"
		.ascii  "\x00\x00\x00"

_0bffa8_data:
		.string "Source file checksum error\n"

_0bffc4_data:
		.string "Corrupted source file\n"

_0bffdb_data:
		.string "Fatal error: "

_0bffe9_data:
		.string "Differential method"
		.ascii  "\x00\x00\x00"

_0c0000_data:
		.ascii  "\x00"

_0c0001_data:
		.ascii  "\x00"

_0c0002_data:
		.ascii  "\x7e\x00\x7a"

_0c0005_data:
		.ascii  "\x00"

_0c0006_data:
		.ascii  "\x7e\x00"

_0c0008_data:
		.string "level "

_0c000f_data:
		.string "conclu.dat"
		.ascii  "\x00\x00"

_0c001c_data:
		.string "Memory error in draw_buffer.\n"

_0c003a_data:
		.ascii  "\x52\x41\x59\x00"

_0c003e_data:
		.string ".LEV"

_0c0043_data:
		.ascii  "\x52\x41\x59\x00"

_0c0047_data:
		.string ".WLD"

_0c004c_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c0050_data:
		.string "RAYMAN"

_0c0057_data:
		.string ".SAV"

_0c005c_data:
		.string "RAYMAN"

_0c0063_data:
		.string ".SAV"

_0c0068_data:
		.string "Thank you for playing RAYMAN !\n"

_0c0088_data:
		.string "FILE NOT FOUND: %s\n"

_0c009c_data:
		.string "DANY"

_0c00a1_data:
		.string " tu veux voir comment y joue Monsieur Daniel ?\n"

_0c00d1_data:
		.string " NaMe oF fILe ? (DEfAuLT:%s) \n"

_0c00f0_data:
		.string ".REC"
		.ascii  "\x00\x00\x00"

_0c00f8_data:
		.string "Pas de Jumelle"
		.ascii  "\x00"

_0c0108_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c010c_data:
		.string "PCMAP"

_0c0112_data:
		.ascii  "\x5c\x00"

_0c0114_data:
		.ascii  "\x72\x62\x00"

_0c0117_data:
		.string "Can not open file %s (load_world).\n"

_0c013b_data:
		.string "%s : File integrity fault.\n"

_0c0157_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c015b_data:
		.string "PCMAP"

_0c0161_data:
		.ascii  "\x5c\x00"

_0c0163_data:
		.ascii  "\x5c\x00"

_0c0165_data:
		.ascii  "\x72\x62\x00"

_0c0168_data:
		.string "Can not open file %s (load_level).\n"

_0c018c_data:
		.string "%s : File integrity fault.\n"

_0c01a8_data:
		.string "%s : File integrity fault.\n"

_0c01c4_data:
		.string "%s : File integrity fault (Block Normal).\n"

_0c01ef_data:
		.string "PCMAP"

_0c01f5_data:
		.ascii  "\x5c\x00"

_0c01f7_data:
		.string "bray.dat"

_0c0200_data:
		.ascii  "\x72\x62\x00"

_0c0203_data:
		.string "Can not open file %s (load_big_ray).\n"

_0c0229_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c022d_data:
		.string "PCMAP"

_0c0233_data:
		.ascii  "\x5c\x00"

_0c0235_data:
		.string "ALLFIX.DAT"

_0c0240_data:
		.ascii  "\x72\x62\x00"

_0c0243_data:
		.string "Can not open file %s (load_all_fix).\n"

_0c0269_data:
		.string "%s : File integrity fault.\n"

_0c0285_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c0289_data:
		.string "VIGNET.DAT"

_0c0294_data:
		.ascii  "\x72\x62\x00"

_0c0297_data:
		.string "%s : Can not open.\n"

_0c02ab_data:
		.string "%s : File integrity fault (%d).\n"

_0c02cc_data:
		.string "No memory allocated for it (load_pcx) !!"

_0c02f5_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c02f9_data:
		.string "VIGNET.DAT"

_0c0304_data:
		.ascii  "\x72\x62\x00"

_0c0307_data:
		.string "%s : Can not open.\n"

_0c031b_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c031f_data:
		.string "VIGNET.DAT"

_0c032a_data:
		.ascii  "\x72\x62\x00"

_0c032d_data:
		.string "%s : Can not open.\n"

_0c0341_data:
		.string "%s : File integrity fault (%d).\n"

_0c0362_data:
		.string "No memory allocated (load_plan0)."

_0c0384_data:
		.string "No memory allocated (PLAN0FND_to_bits_planes)."

_0c03b3_data:
		.string "RAY.LNG"

_0c03bb_data:
		.ascii  "\x72\x62\x00"

_0c03be_data:
		.string "%s : Can not open.\n"

_0c03d2_data:
		.string "Memory error in LoadLanguageTxt"

_0c03f2_data:
		.string "%s : File integrity fault.\n"

_0c040e_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c0412_data:
		.string "VIGNET.DAT"

_0c041d_data:
		.ascii  "\x72\x62\x00"

_0c0420_data:
		.string "%s : Can not open.\n"

_0c0434_data:
		.string "%s : File integrity fault (%d).\n"

_0c0455_data:
		.string "No memory allocated for it (load_pcx) !!"
		.ascii  "\x00\x00"

_0c0480_data:
		.string "Can't init sound card."

_0c0497_data:
		.string "320x200"

_0c049f_data:
		.string "312x196"

_0c04a7_data:
		.string "304x192"

_0c04af_data:
		.string "300x188"

_0c04b7_data:
		.ascii  "\x36\x30\x00"

_0c04ba_data:
		.ascii  "\x35\x30\x00"

_0c04bd_data:
		.ascii  "\x33\x30\x00"

_0c04c0_data:
		.ascii  "\x32\x35\x00"

_0c04c3_data:
		.string "mode dieu"

_0c04cd_data:
		.ascii  "\x31\x00"

_0c04cf_data:
		.ascii  "\x32\x00"

_0c04d1_data:
		.ascii  "\x33\x00"

_0c04d3_data:
		.ascii  "\x34\x00"

_0c04d5_data:
		.ascii  "\x35\x00"

_0c04d7_data:
		.ascii  "\x36\x00"

_0c04d9_data:
		.ascii  "\x37\x00"

_0c04db_data:
		.ascii  "\x38\x00"

_0c04dd_data:
		.ascii  "\x39\x00"

_0c04df_data:
		.ascii  "\x30\x00"

_0c04e1_data:
		.ascii  "\x61\x00"

_0c04e3_data:
		.ascii  "\x7a\x00"

_0c04e5_data:
		.ascii  "\x65\x00"

_0c04e7_data:
		.ascii  "\x72\x00"

_0c04e9_data:
		.ascii  "\x74\x00"

_0c04eb_data:
		.ascii  "\x79\x00"

_0c04ed_data:
		.ascii  "\x75\x00"

_0c04ef_data:
		.ascii  "\x69\x00"

_0c04f1_data:
		.ascii  "\x6f\x00"

_0c04f3_data:
		.ascii  "\x70\x00"

_0c04f5_data:
		.ascii  "\x71\x00"

_0c04f7_data:
		.ascii  "\x73\x00"

_0c04f9_data:
		.ascii  "\x64\x00"

_0c04fb_data:
		.ascii  "\x66\x00"

_0c04fd_data:
		.ascii  "\x67\x00"

_0c04ff_data:
		.ascii  "\x68\x00"

_0c0501_data:
		.ascii  "\x6a\x00"

_0c0503_data:
		.ascii  "\x6b\x00"

_0c0505_data:
		.ascii  "\x6c\x00"

_0c0507_data:
		.ascii  "\x6d\x00"

_0c0509_data:
		.ascii  "\x77\x00"

_0c050b_data:
		.ascii  "\x78\x00"

_0c050d_data:
		.ascii  "\x63\x00"

_0c050f_data:
		.ascii  "\x76\x00"

_0c0511_data:
		.ascii  "\x62\x00"

_0c0513_data:
		.ascii  "\x6e\x00"

_0c0515_data:
		.ascii  "\x3f\x00"

_0c0517_data:
		.ascii  "\x2e\x00"

_0c0519_data:
		.ascii  "\x3a\x00"

_0c051b_data:
		.ascii  "\x35"
		.fill   0x4

_0c0520_data:
		.string "Error On MAX_ACTOBJ."

_0c0535_data:
		.string "/%2d : %02d/"

_0c0542_data:
		.string "/perfect !/"
		.ascii  "\x00\x00"

_0c0550_data:
		.string "Augmenter MAX_NB_SCROLL_PER_MAP"

_0c0570_data:
		.ascii  "\x2f\x00"

_0c0572_data:
		.ascii  "\x2f\x00"

_0c0574_data:
		.ascii  "\x2f\x00"

_0c0576_data:
		.ascii  "\x2f\x00"

_0c0578_data:
		.ascii  "\x2f\x00"

_0c057a_data:
		.ascii  "\x2f\x00"

_0c057c_data:
		.ascii  "\x61\x61\x61\x00"

_0c0580_data:
		.ascii  "\x61\x00"

_0c0582_data:
		.ascii  "\x62\x00"

_0c0584_data:
		.ascii  "\x64\x00"

_0c0586_data:
		.ascii  "\x63\x00"

_0c0588_data:
		.string "/you have done it !/"

_0c059d_data:
		.string "/you have saved the world !/"
		.ascii  "\x00\x00"

_0c05bc_data:
		.string "NewIntDebug ask.\n"
		.ascii  "\x00\x00"

_0c05d0_data:
		.ascii  "\x72\x00\x00\x00"

_0c05d4_data:
		.string "Information sur le bloc_malloc.\n\n"

_0c05f6_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e fixes                           : %u\n"

_0c0630_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e fixes   (w=%3d, l=%3d) : %u (%u*1024L)\n"

_0c0675_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e mondes                          : %u\n"

_0c06af_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e mondes  (w=%3d, l=%3d) : %u (%u*1024L)\n"

_0c06f4_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e maps                            : %u\n"

_0c072e_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e maps    (w=%3d, l=%3d) : %u (%u*1024L)\n"

_0c0773_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e sprites                         : %u\n"

_0c07ad_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e sprites (w=%3d, l=%3d) : %u (%u*1024L)\n"

_0c07f2_data:
		.ascii  "\x0a\x00"

_0c07f4_data:
		.string "Information sur le temp_malloc.\n\n"

_0c0816_data:
		.ascii   "   - Taille de la m"
		.ascii  "\x82"
		.ascii   "moire allou"
		.ascii  "\x82"
		.string "e            : %u\n"

_0c0849_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e                 : %u (%u*1024L)\n"

_0c0887_data:
		.ascii  "\x0a\x00"

_0c0889_data:
		.string "Left memory = %d"

_0c089a_data:
		.ascii  "\x66\x69\x78\x00"

_0c089e_data:
		.string "world"

_0c08a4_data:
		.string "level"

_0c08aa_data:
		.string "sprite"

_0c08b1_data:
		.string "unknown mem"

_0c08bd_data:
		.string "Memory error in block_malloc : %s = %p, size = %ul.\n"

_0c08f2_data:
		.string "Can not allocate %d bytes in memory.\n"

_0c0918_data:
		.string "not enough memory in pool.\nMemory error in tmp_malloc : size = %ul.\n"
		.ascii  "\x00\x00\x00"

_0c0960_data:
		.string "Write Protect Violation"

_0c0978_data:
		.string "Unknown unit"

_0c0985_data:
		.string "Drive not ready"

_0c0995_data:
		.string "Unknown command"

_0c09a5_data:
		.string "CRC error"

_0c09af_data:
		.string "Bad drive request structure length"

_0c09d2_data:
		.string "Seek error"

_0c09dd_data:
		.string "Unknown media"

_0c09eb_data:
		.string "Sector not found"

_0c09fc_data:
		.string "Printer out of paper"

_0c0a11_data:
		.string "Write fault"

_0c0a1d_data:
		.string "Read fault"

_0c0a28_data:
		.string "General failure"

_0c0a38_data:
		.string "Reserved"

_0c0a41_data:
		.string "Reserved"

_0c0a4a_data:
		.string "Invalid disk change"
		.ascii  "\x00\x00"

_0c0a60_data:
		.string "Rayman sound says fatal error :\n%s\n"

_0c0a84_data:
		.string ".h8b"
		.ascii  "\x00\x89\xca"

_0c0a8c_data:
		.string ".d8b"
		.ascii  "\x89\xc1\x89"

_0c0a94_data:
		.ascii  "\x72\x62\x00\xa0"

_0c0a98_data:
		.string "Fichier header introuvable.\n"
		.ascii  "\x51\x89\xc3"

_0c0ab8_data:
		.string "Fichier data introuvable.\n"
		.ascii  "\xfe"

_0c0ad4_data:
		.ascii  "\x4d\x82"
		.string "moire insuffisante pour charger les samples.\n"

_0c0b04_data:
		.string "bnksnd\\fix"
		.ascii  "\x00"

_0c0b10_data:
		.string "bnksnd\\jun"
		.ascii  "\x64"

_0c0b1c_data:
		.string "bnksnd\\mus"
		.ascii  "\x20"

_0c0b28_data:
		.string "bnksnd\\mon"
		.ascii  "\x00"

_0c0b34_data:
		.string "bnksnd\\img"
		.ascii  "\x62"

_0c0b40_data:
		.string "bnksnd\\cav"
		.ascii  "\x68"

_0c0b4c_data:
		.string "bnksnd\\cak"
		.ascii  "\x69"

_0c0b58_data:
		.string "bnksnd\\seed.vig"

_0c0b68_data:
		.string "bnksnd\\perfect.vig"
		.ascii  "\x76"

_0c0b7c_data:
		.string "bnksnd\\musicien.vig"

_0c0b90_data:
		.string "bnksnd\\dark.vig"

_0c0ba0_data:
		.string "bnksnd\\betilla.vig"
		.ascii  "\x00"

_0c0bb4_data:
		.string "bnksnd\\joe.vig"
		.ascii  "\x00"

_0c0bc4_data:
		.string "bnksnd\\perdu.vig"
		.ascii  "\x64\x5c\x6d"

_0c0bd8_data:
		.ascii  "\x72\x2b\x62\x00"

_0c0bdc_data:
		.string "Fichier Tchach introuvable.\n"
		.ascii  "\x00\x00\x00"

_0c0bfc_data:
		.string "hmidet.386"
		.ascii  "\x00"

_0c0c08_data:
		.string "acos"

_0c0c0d_data:
		.string "asin"

_0c0c12_data:
		.string "sqrt"

_0c0c17_data:
		.ascii  "\x65\x78\x70\x00"

_0c0c1b_data:
		.string "cosh"

_0c0c20_data:
		.string "sinh"

_0c0c25_data:
		.ascii  "\x70\x6f\x77\x00"

_0c0c29_data:
		.string "acosh"

_0c0c2f_data:
		.string "log2"

_0c0c34_data:
		.ascii  "\x6c\x6f\x67\x00"

_0c0c38_data:
		.string "log10"

_0c0c3e_data:
		.string "atanh"

_0c0c44_data:
		.string "atan2"

_0c0c4a_data:
		.string "ipow"

_0c0c4f_data:
		.string "dpowi"

_0c0c55_data:
		.ascii  "\x63\x6f\x73\x00"

_0c0c59_data:
		.ascii  "\x73\x69\x6e\x00"

_0c0c5d_data:
		.ascii  "\x74\x61\x6e\x00"

_0c0c61_data:
		.ascii  "\x79\x30\x00"

_0c0c64_data:
		.ascii  "\x79\x31\x00"

_0c0c67_data:
		.ascii  "\x79\x6e\x00"

_0c0c6a_data:
		.ascii  "\x6d\x6f\x64\x00"

_0c0c6e_data:
		.string "cotan"

_0c0c74_data:
		.string "Error Code Does Not Indicate An Error"

_0c0c9a_data:
		.string "Specified Driver Is Not Loaded"

_0c0cb9_data:
		.string "Specified Pointer Is NULL"

_0c0cd3_data:
		.string "Detection System Is Already Initialized"

_0c0cfb_data:
		.string "File Open Failure"

_0c0d0d_data:
		.string "Memory Allocation Failure"

_0c0d27_data:
		.string "Invalid Driver ID"

_0c0d39_data:
		.string "Driver Not Found"

_0c0d4a_data:
		.string "Detection System Failed To Find Hardware"

_0c0d73_data:
		.string "Driver Already Loaded Using Specified Handle"

_0c0da0_data:
		.string "Invalid Handle"

_0c0daf_data:
		.string "No Handles Available"

_0c0dc4_data:
		.string "Hardware Already Paused"

_0c0ddc_data:
		.string "Hardware Not Paused"

_0c0df0_data:
		.string "Data Is Not Valid"

_0c0e02_data:
		.string "HMI*.386 File Open Failure"

_0c0e1d_data:
		.string "Incorrect Port"

_0c0e2c_data:
		.string "Incorrect IRQ"

_0c0e3a_data:
		.string "Incorrect DMA"

_0c0e48_data:
		.string "Incorrect DMA/IRQ"
		.ascii  "\x00\x00"

_0c0e5c_data:
		.string "hmidrv.386"
		.ascii  "\x00"

_0c0e68_data:
		.string "Floating-point support not loaded\r\n"

_0c0e8c_data:
		.string "Domain error"

_0c0e99_data:
		.string "Argument singularity"

_0c0eae_data:
		.string "Overflow range error"

_0c0ec3_data:
		.string "Underflow range error"

_0c0ed9_data:
		.string "Total loss of significance"

_0c0ef4_data:
		.string "Partial loss of significance"

_0c0f11_data:
		.string " in "
		.ascii  "\x00\x00"

_0c0f18_data:
		.string "Not enough memory to allocate file structures\r\n"

_0c0f48_data:
		.ascii  "\x54\x5a\x00\x00"

_0c0f4c_data:
		.ascii  "\x69\x6e\x66\x00"

_0c0f50_data:
		.ascii  "\x6e\x61\x6e\x00"

_0c0f54_data:
		.ascii  "\x4c\xad\x30\x70\xc7\x52\xe9\x3c"
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x6a\xbd"
		.ascii  "\x08\x6d\xa8\x13\x46\x12\xe6\x3d"
		.ascii  "\xe5\x44\xf5\x67\x45\xe6\x5a\xbe"
		.ascii  "\x36\xc7\x56\xa5\xe3\x1d\xc7\x3e"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\x2a\xbf"
		.ascii  "\x11\x11\x11\x11\x11\x11\x81"
		.ascii   "?WUUUUU"
		.ascii  "\xc5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c0f9c_data:
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x2a\x3d"
		.ascii  "\xa0\x7c\xc0\xa8\x74\x39\xa9\xbd"
		.ascii  "\x98\xd8\xf8\xef\xd8\xee\x21\x3e"
		.ascii  "\x5c\x9f\x78\xb7\x4f\x7e\x92\xbe"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\xfa\x3e"
		.ascii  "\x17\x6c\xc1\x16\x6c\xc1\x56\xbf"
		.ascii   "VUUUUU"
		.ascii  "\xa5\x3f"
		.fill   0x6
		.ascii  "\xe0\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c0fe4_data:
		.fill   0x4
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x03\x00\x00\x00\x04\x00\x00\x00"
		.ascii  "\x04\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x06\x00\x00\x00"

_0c1008_data:
		.ascii  "\x11\x00\x00\x00\x12\x00\x00\x00"
		.ascii  "\x10\x00\x00\x00"

_0c1014_data:
		.ascii  "\x10\x89\xf9\x6c\x58\xb5\xf0"
		.ascii   "?|Q}<"
		.ascii  "\xb8\x72\xf1\x3f\x15\xb7\x31\x0a"
		.ascii  "\xfe\x06\xf3\x3f\xcc\x3b\x7f\x66"
		.ascii  "\x9e\xa0\xf6\x3f"

_0c1034_data:
		.fill   0x4

_0c1038_data:
		.ascii  "\x00\x00\xf0\x7f"

_0c103c_data:
		.ascii  "\xc3\x1c\x98\xfc\x38\xba\xa6\x3f"
		.ascii  "\x21\x00\x01\x61\xd3\x98\xb0\xbf"
		.ascii  "\xa5\x98\xcd\x45\xc0\xa8\xb3\x3f"
		.ascii  "\x73\x4d\xa1\x33\x77\x45\xb7\xbf"
		.ascii  "\x62\xa5\xf2\xe4\xc4\x71\xbc\x3f"
		.ascii  "\x8f\xb3\x5b\x8e\x24\x49\xc2\xbf"
		.ascii  "\x76\x9d\x92\x99\x99\x99\xc9\x3f"
		.ascii  "\xf0"
		.ascii   "RUUUU"
		.ascii  "\xd5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c1084_data:
		.fill   0x4
		.long   _0c0e8c_data
		.long   _0c0e99_data
		.long   _0c0eae_data
		.long   _0c0ec3_data
		.long   _0c0ed9_data
		.ascii  "\xf4\x0e"

_0c109e_data:
		.ascii  "\x0c\x00"

_0c10a0_data:
		.ascii  "\x00\x00"

_0c10a2_data:
		.ascii  "\x1f\x00\x3b\x00\x5a\x00\x78\x00"
		.ascii  "\x97\x00\xb5\x00\xd4\x00\xf3\x00"
		.ascii  "\x11\x01\x30\x01\x4e\x01"

_0c10b8_data:
		.ascii  "\x6d\x01"

_0c10ba_data:
		.ascii  "\x00\x00\x1f\x00\x3c\x00\x5b\x00"
		.ascii  "\x79\x00\x98\x00\xb6\x00\xd5\x00"
		.ascii  "\xf4\x00\x12\x01\x31\x01\x4f\x01"
		.ascii  "\x6e\x01"

_0c10d4_data:
		.fill   0x4

_0c10d8_data:
		.ascii  "\x00\x00\xf0\x7f"

_0c10dc_data:
		.fill   0x4

_0c10e0_data:
		.ascii  "\x00\x00\xf0\xff"

_0c10e4_data:
		.ascii  "\xff\xff\xff\xff"

_0c10e8_data:
		.ascii  "\xff\xff\xef\x7f"

_0c10ec_data:
		.ascii  "\xff\xff\xff\xff"

_0c10f0_data:
		.ascii  "\xff\xff\xef\xff"

_0c10f4_data:
		.ascii  "\x29\xbd\x56\xb3\x15\x44\xe9\xbf"
		.ascii  "\xee\xaf\x16"
		.ascii   " Jb0@"
		.ascii  "\x9a\xb5\xb3\x12\xff\x07\x50\xc0"

_0c110c_data:
		.fill   0x6
		.ascii  "\xf0\x3f\x0f\xce\x67\x4b\x80\xd5"
		.ascii  "\x41\xc0\x7f\x26\x15\xfa\x83\x80"
		.ascii  "\x73\x40\x77\x90\x0d\x9c\xfe\x0b"
		.ascii  "\x88\xc0"

_0c112c_data:
		.ascii  "\xd8\x00"

_0c112e_data:
		.ascii  "\xc6\xf9\xc6\x40"

_0c1132_data:
		.ascii  "\xe9\x34\xc7\x6c\x6c\x00\x12\x4e"
		.ascii  "\x83\xcc"
		.string "=@[V6"
		.ascii  "\xce\xc9\x14\x88\x87\xe1\x24\x4b"
		.ascii  "\x1b\x00\x02\x84\xfe\xe4\x71\xd9"
		.ascii  "\x89\x45\x0e\x00\x00\x00\x90\x1e"
		.ascii  "\xc4\xbc\xd6\x42\x08"
		.fill   0x5
		.ascii  "\x84\xd7\x97\x41\x04"
		.fill   0x6
		.ascii  "\x88\xc3\x40\x01"
		.fill   0x7
		.ascii  "\x24\x40"

_0c117c_data:
		.ascii  "\x00\x20"
		.long   _07f65a_func
		.ascii  "\x00\x20"
		.long   _07f820_func
		.ascii  "\x00\x20"
		.long   _07f83b_func
		.ascii  "\x00\x20"
		.long   _07a296_func
		.ascii  "\x00\x02"
		.long   _083501_func
		.ascii  "\x00\x20"
		.long   _08390e_func
		.ascii  "\x00\x20"
		.long   _084a27_func

_0c11a6_data:
		.ascii  "\x00\x20\x86\x39"

_0c11aa_data:
		.ascii  "\x08\x00"

_0c11ac_data:
		.ascii  "\x00\x00"

_0c11ae_data:
		.ascii  "\x00"

_0c11af_data:
		.ascii  "\x00"

_0c11b0_data:
		.ascii  "\x00\x00"

_0c11b2_data:
		.ascii  "\x00\x00"

_0c11b4_data:
		.fill   0x190

_0c1344_data:
		.ascii  "\x00"

_0c1345_data:
		.ascii  "\x00"

_0c1346_data:
		.ascii  "\x00\x00"

_0c1348_data:
		.ascii  "\x00\x00"

_0c134a_data:
		.ascii  "\x00\x00"

_0c134c_data:
		.ascii  "\x00\x00\x00"

_0c134f_data:
		.ascii  "\x00"

_0c1350_data:
		.fill   0xc

_0c135c_data:
		.fill   0x40

_0c139c_data:
		.ascii  "\x00\x00"

_0c139e_data:
		.ascii  "\x00\x00"

_0c13a0_data:
		.ascii  "\x00\x00"

_0c13a2_data:
		.ascii  "\x00\x00"

_0c13a4_data:
		.ascii  "\x00\x00"

_0c13a6_data:
		.fill   0x4

_0c13aa_data:
		.ascii  "\x00\x00"

_0c13ac_data:
		.ascii  "\x00\x00"

_0c13ae_data:
		.ascii  "\x00\x00"

_0c13b0_data:
		.ascii  "\x00\x00"

_0c13b2_data:
		.ascii  "\x00\x00"

_0c13b4_data:
		.ascii  "\x00\x00"

_0c13b6_data:
		.ascii  "\x00"

_0c13b7_data:
		.ascii  "\x00"

_0c13b8_data:
		.ascii  "\x00"

_0c13b9_data:
		.fill   0x7

_0c13c0_data:
		.ascii  "\x00\x00"

_0c13c2_data:
		.ascii  "\x00\x00"

_0c13c4_data:
		.fill   0x4

_0c13c8_data:
		.fill   0x15

_0c13dd_data:
		.ascii  "\x00"

_0c13de_data:
		.ascii  "\x00"

_0c13df_data:
		.ascii  "\x00"

_0c13e0_data:
		.ascii  "\x00"

_0c13e1_data:
		.ascii  "\x00"

_0c13e2_data:
		.ascii  "\x00\x00"

_0c13e4_data:
		.fill   0x71a

_0c1afe_data:
		.ascii  "\x00"

_0c1aff_data:
		.ascii  "\x00"

_0c1b00_data:
		.ascii  "\x00\x00"

_0c1b02_data:
		.ascii  "\x00\x00"

_0c1b04_data:
		.ascii  "\x00\x00"

_0c1b06_data:
		.ascii  "\x00\x00"

_0c1b08_data:
		.ascii  "\x00\x00"

_0c1b0a_data:
		.ascii  "\x00\x00"

_0c1b0c_data:
		.ascii  "\x00\x00"

_0c1b0e_data:
		.ascii  "\x00\x00"

_0c1b10_data:
		.ascii  "\x00\x00"

_0c1b12_data:
		.ascii  "\x00\x00"

_0c1b14_data:
		.ascii  "\x00\x00"

_0c1b16_data:
		.ascii  "\x00\x00"

_0c1b18_data:
		.ascii  "\x00\x00"

_0c1b1a_data:
		.ascii  "\x00\x00"

_0c1b1c_data:
		.ascii  "\x00\x00"

_0c1b1e_data:
		.ascii  "\x00\x00"

_0c1b20_data:
		.ascii  "\x00\x00"

_0c1b22_data:
		.ascii  "\x00\x00"

_0c1b24_data:
		.ascii  "\x00\x00"

_0c1b26_data:
		.ascii  "\x00\x00"

_0c1b28_data:
		.ascii  "\x00\x00"

_0c1b2a_data:
		.ascii  "\x00\x00"

_0c1b2c_data:
		.fill   0x4

_0c1b30_data:
		.fill   0x4

_0c1b34_data:
		.ascii  "\x00\x00"

_0c1b36_data:
		.ascii  "\x00\x00"

_0c1b38_data:
		.fill   0x4

_0c1b3c_data:
		.ascii  "\x00\x00"

_0c1b3e_data:
		.ascii  "\x00\x00"

_0c1b40_data:
		.fill   0x4

_0c1b44_data:
		.fill   0x4

_0c1b48_data:
		.fill   0x4

_0c1b4c_data:
		.fill   0x4

_0c1b50_data:
		.fill   0x4

_0c1b54_data:
		.fill   0x4

_0c1b58_data:
		.fill   0x18

_0c1b70_data:
		.fill   0x4

_0c1b74_data:
		.fill   0x4

_0c1b78_data:
		.fill   0x8

_0c1b80_data:
		.ascii  "\x00\x00"

_0c1b82_data:
		.ascii  "\x00\x00"

_0c1b84_data:
		.fill   0x6

_0c1b8a_data:
		.ascii  "\x00\x00"

_0c1b8c_data:
		.ascii  "\x00\x00"

_0c1b8e_data:
		.ascii  "\x00\x00"

_0c1b90_data:
		.fill   0x4

_0c1b94_data:
		.ascii  "\x00\x00"

_0c1b96_data:
		.fill   0x4

_0c1b9a_data:
		.ascii  "\x00\x00"

_0c1b9c_data:
		.ascii  "\x00\x00"

_0c1b9e_data:
		.ascii  "\x00\x00"

_0c1ba0_data:
		.ascii  "\x00\x00"

_0c1ba2_data:
		.ascii  "\x00\x00"

_0c1ba4_data:
		.ascii  "\x00\x00"

_0c1ba6_data:
		.fill   0x6

_0c1bac_data:
		.ascii  "\x00"

_0c1bad_data:
		.ascii  "\x00"

_0c1bae_data:
		.ascii  "\x00"

_0c1baf_data:
		.ascii  "\x00"

_0c1bb0_data:
		.ascii  "\x00"

_0c1bb1_data:
		.ascii  "\x00"

_0c1bb2_data:
		.ascii  "\x00\x00"

_0c1bb4_data:
		.ascii  "\x00"

_0c1bb5_data:
		.ascii  "\x00"

_0c1bb6_data:
		.ascii  "\x00"

_0c1bb7_data:
		.ascii  "\x00"

_0c1bb8_data:
		.ascii  "\x00"

_0c1bb9_data:
		.ascii  "\x00\x00\x00"

_0c1bbc_data:
		.ascii  "\x00"

_0c1bbd_data:
		.ascii  "\x00"

_0c1bbe_data:
		.ascii  "\x00\x00"

_0c1bc0_data:
		.ascii  "\x00\x00"

_0c1bc2_data:
		.ascii  "\x00"

_0c1bc3_data:
		.ascii  "\x00\x00"

_0c1bc5_data:
		.fill   0x4

_0c1bc9_data:
		.ascii  "\x00\x00"

_0c1bcb_data:
		.ascii  "\x00\x00"

_0c1bcd_data:
		.ascii  "\x00\x00\x00"

_0c1bd0_data:
		.fill   0x4

_0c1bd4_data:
		.fill   0x4

_0c1bd8_data:
		.fill   0x20

_0c1bf8_data:
		.fill   0x4

_0c1bfc_data:
		.fill   0xa

_0c1c06_data:
		.ascii  "\x00\x00"

_0c1c08_data:
		.fill   0x8

_0c1c10_data:
		.ascii  "\x00\x00"

_0c1c12_data:
		.fill   0x8

_0c1c1a_data:
		.fill   0x6

_0c1c20_data:
		.ascii  "\x00\x00"

_0c1c22_data:
		.fill   0x4

_0c1c26_data:
		.fill   0x12

_0c1c38_data:
		.ascii  "\x00"

_0c1c39_data:
		.ascii  "\x00"

_0c1c3a_data:
		.ascii  "\x00"

_0c1c3b_data:
		.ascii  "\x00"

_0c1c3c_data:
		.ascii  "\x00"

_0c1c3d_data:
		.fill   0x7

_0c1c44_data:
		.ascii  "\x00\x00"

_0c1c46_data:
		.ascii  "\x00"

_0c1c47_data:
		.ascii  "\x00\x00"

_0c1c49_data:
		.fill   0x4

_0c1c4d_data:
		.ascii  "\x00\x00"

_0c1c4f_data:
		.ascii  "\x00\x00"

_0c1c51_data:
		.ascii  "\x00\x00\x00"

_0c1c54_data:
		.fill   0x8

_0c1c5c_data:
		.fill   0x3c

_0c1c98_data:
		.fill   0x32

_0c1cca_data:
		.ascii  "\x00"

_0c1ccb_data:
		.ascii  "\x00\x00"

_0c1ccd_data:
		.fill   0xb

_0c1cd8_data:
		.fill   0x8

_0c1ce0_data:
		.fill   0x3c

_0c1d1c_data:
		.fill   0x40

_0c1d5c_data:
		.fill   0x28

_0c1d84_data:
		.fill   0x4

_0c1d88_data:
		.fill   0x58

_0c1de0_data:
		.fill   0x84

_0c1e64_data:
		.fill   0x4

_0c1e68_data:
		.fill   0x8

_0c1e70_data:
		.fill   0x28

_0c1e98_data:
		.ascii  "\x00\x00"

_0c1e9a_data:
		.ascii  "\x00\x00"

_0c1e9c_data:
		.fill   0x8

_0c1ea4_data:
		.fill   0x28

_0c1ecc_data:
		.ascii  "\x00"

_0c1ecd_data:
		.ascii  "\x00"

_0c1ece_data:
		.ascii  "\x00"

_0c1ecf_data:
		.ascii  "\x00"

_0c1ed0_data:
		.ascii  "\x00"

_0c1ed1_data:
		.ascii  "\x00\x00\x00"

_0c1ed4_data:
		.fill   0xf

_0c1ee3_data:
		.ascii  "\x00\x00"

_0c1ee5_data:
		.ascii  "\x00\x00\x00"

_0c1ee8_data:
		.fill   0x4

_0c1eec_data:
		.fill   0x4

_0c1ef0_data:
		.fill   0x4

_0c1ef4_data:
		.fill   0x4

_0c1ef8_data:
		.ascii  "\x00\x00"

_0c1efa_data:
		.ascii  "\x00\x00"

_0c1efc_data:
		.ascii  "\x00\x00"

_0c1efe_data:
		.ascii  "\x00\x00"

_0c1f00_data:
		.ascii  "\x00"

_0c1f01_data:
		.ascii  "\x00"

_0c1f02_data:
		.ascii  "\x00"

_0c1f03_data:
		.ascii  "\x00"

_0c1f04_data:
		.ascii  "\x00"

_0c1f05_data:
		.ascii  "\x00\x00\x00"

_0c1f08_data:
		.fill   0x44

_0c1f4c_data:
		.fill   0x4

_0c1f50_data:
		.fill   0x20b

_0c215b_data:
		.ascii  "\x00"

_0c215c_data:
		.fill   0x5

_0c2161_data:
		.ascii  "\x00\x00\x00"

_0c2164_data:
		.fill   0x25c

_0c23c0_data:
		.ascii  "\x00\x00"

_0c23c2_data:
		.ascii  "\x00\x00"

_0c23c4_data:
		.fill   0xc4

_0c2488_data:
		.ascii  "\x00\x00"

_0c248a_data:
		.ascii  "\x00\x00"

_0c248c_data:
		.fill   0x4

_0c2490_data:
		.fill   0x4

_0c2494_data:
		.fill   0x4

_0c2498_data:
		.fill   0x4

_0c249c_data:
		.fill   0x4

_0c24a0_data:
		.fill   0x4

_0c24a4_data:
		.fill   0x4

_0c24a8_data:
		.ascii  "\x00"

_0c24a9_data:
		.ascii  "\x00"

_0c24aa_data:
		.ascii  "\x00\x00"

_0c24ac_data:
		.ascii  "\x00\x00"

_0c24ae_data:
		.ascii  "\x00\x00"

_0c24b0_data:
		.ascii  "\x00\x00"

_0c24b2_data:
		.ascii  "\x00\x00"

_0c24b4_data:
		.ascii  "\x00\x00"

_0c24b6_data:
		.ascii  "\x00\x00"

_0c24b8_data:
		.ascii  "\x00\x00"

_0c24ba_data:
		.ascii  "\x00\x00"

_0c24bc_data:
		.ascii  "\x00\x00"

_0c24be_data:
		.ascii  "\x00\x00"

_0c24c0_data:
		.ascii  "\x00\x00"

_0c24c2_data:
		.ascii  "\x00\x00"

_0c24c4_data:
		.ascii  "\x00\x00\x00"

_0c24c7_data:
		.ascii  "\x00"

_0c24c8_data:
		.ascii  "\x00"

_0c24c9_data:
		.ascii  "\x00"

_0c24ca_data:
		.ascii  "\x00"

_0c24cb_data:
		.ascii  "\x00"

_0c24cc_data:
		.ascii  "\x00"

_0c24cd_data:
		.ascii  "\x00"

_0c24ce_data:
		.ascii  "\x00\x00"

_0c24d0_data:
		.ascii  "\x00\x00"

_0c24d2_data:
		.fill   0xa

_0c24dc_data:
		.fill   0x6

_0c24e2_data:
		.ascii  "\x00\x00"

_0c24e4_data:
		.ascii  "\x00\x00"

_0c24e6_data:
		.ascii  "\x00\x00"

_0c24e8_data:
		.fill   0x4

_0c24ec_data:
		.ascii  "\x00\x00"

_0c24ee_data:
		.ascii  "\x00\x00"

_0c24f0_data:
		.ascii  "\x00\x00"

_0c24f2_data:
		.ascii  "\x00\x00"

_0c24f4_data:
		.ascii  "\x00\x00"

_0c24f6_data:
		.ascii  "\x00\x00"

_0c24f8_data:
		.ascii  "\x00\x00"

_0c24fa_data:
		.ascii  "\x00"

_0c24fb_data:
		.ascii  "\x00"

_0c24fc_data:
		.ascii  "\x00"

_0c24fd_data:
		.ascii  "\x00"

_0c24fe_data:
		.ascii  "\x00"

_0c24ff_data:
		.ascii  "\x00"

_0c2500_data:
		.ascii  "\x00"

_0c2501_data:
		.ascii  "\x00"

_0c2502_data:
		.ascii  "\x00"

_0c2503_data:
		.ascii  "\x00"

_0c2504_data:
		.ascii  "\x00\x00"

_0c2506_data:
		.ascii  "\x00"

_0c2507_data:
		.ascii  "\x00"

_0c2508_data:
		.ascii  "\x00\x00"

_0c250a_data:
		.ascii  "\x00\x00"

_0c250c_data:
		.ascii  "\x00\x00"

_0c250e_data:
		.ascii  "\x00\x00"

_0c2510_data:
		.ascii  "\x00\x00"

_0c2512_data:
		.ascii  "\x00\x00"

_0c2514_data:
		.ascii  "\x00\x00"

_0c2516_data:
		.fill   0x4

_0c251a_data:
		.ascii  "\x00\x00"

_0c251c_data:
		.ascii  "\x00\x00"

_0c251e_data:
		.ascii  "\x00\x00"

_0c2520_data:
		.ascii  "\x00\x00"

_0c2522_data:
		.ascii  "\x00\x00"

_0c2524_data:
		.ascii  "\x00\x00"

_0c2526_data:
		.ascii  "\x00\x00"

_0c2528_data:
		.ascii  "\x00\x00"

_0c252a_data:
		.fill   0x62

_0c258c_data:
		.ascii  "\x00\x00"

_0c258e_data:
		.ascii  "\x00\x00"

_0c2590_data:
		.ascii  "\x00\x00"

_0c2592_data:
		.ascii  "\x00\x00"

_0c2594_data:
		.ascii  "\x00"

_0c2595_data:
		.ascii  "\x00"

_0c2596_data:
		.ascii  "\x00\x00"

_0c2598_data:
		.ascii  "\x00\x00"

_0c259a_data:
		.ascii  "\x00\x00"

_0c259c_data:
		.ascii  "\x00"

_0c259d_data:
		.ascii  "\x00"

_0c259e_data:
		.ascii  "\x00"

_0c259f_data:
		.ascii  "\x00"

_0c25a0_data:
		.ascii  "\x00"

_0c25a1_data:
		.ascii  "\x00"

_0c25a2_data:
		.ascii  "\x00"

_0c25a3_data:
		.ascii  "\x00"

_0c25a4_data:
		.ascii  "\x00\x00"

_0c25a6_data:
		.ascii  "\x00\x00"

_0c25a8_data:
		.ascii  "\x00\x00"

_0c25aa_data:
		.ascii  "\x00\x00"

_0c25ac_data:
		.ascii  "\x00\x00"

_0c25ae_data:
		.ascii  "\x00\x00"

_0c25b0_data:
		.ascii  "\x00\x00"

_0c25b2_data:
		.ascii  "\x00\x00"

_0c25b4_data:
		.ascii  "\x00\x00"

_0c25b6_data:
		.ascii  "\x00\x00"

_0c25b8_data:
		.fill   0x10

_0c25c8_data:
		.ascii  "\x00\x00"

_0c25ca_data:
		.ascii  "\x00\x00"

_0c25cc_data:
		.ascii  "\x00\x00"

_0c25ce_data:
		.ascii  "\x00\x00"

_0c25d0_data:
		.ascii  "\x00\x00"

_0c25d2_data:
		.ascii  "\x00\x00"

_0c25d4_data:
		.ascii  "\x00\x00"

_0c25d6_data:
		.ascii  "\x00\x00"

_0c25d8_data:
		.ascii  "\x00\x00"

_0c25da_data:
		.ascii  "\x00\x00"

_0c25dc_data:
		.ascii  "\x00\x00"

_0c25de_data:
		.ascii  "\x00"

_0c25df_data:
		.ascii  "\x00"

_0c25e0_data:
		.ascii  "\x00"

_0c25e1_data:
		.ascii  "\x00"

_0c25e2_data:
		.ascii  "\x00"

_0c25e3_data:
		.ascii  "\x00"

_0c25e4_data:
		.ascii  "\x00"

_0c25e5_data:
		.ascii  "\x00"

_0c25e6_data:
		.ascii  "\x00"

_0c25e7_data:
		.ascii  "\x00"

_0c25e8_data:
		.fill   0x4

_0c25ec_data:
		.fill   0x4

_0c25f0_data:
		.ascii  "\x00\x00"

_0c25f2_data:
		.ascii  "\x00\x00"

_0c25f4_data:
		.ascii  "\x00\x00"

_0c25f6_data:
		.ascii  "\x00\x00"

_0c25f8_data:
		.ascii  "\x00\x00"

_0c25fa_data:
		.ascii  "\x00\x00"

_0c25fc_data:
		.fill   0x6

_0c2602_data:
		.ascii  "\x00\x00"

_0c2604_data:
		.ascii  "\x00\x00"

_0c2606_data:
		.ascii  "\x00\x00"

_0c2608_data:
		.ascii  "\x00\x00"

_0c260a_data:
		.ascii  "\x00\x00"

_0c260c_data:
		.ascii  "\x00\x00"

_0c260e_data:
		.ascii  "\x00\x00"

_0c2610_data:
		.ascii  "\x00\x00"

_0c2612_data:
		.ascii  "\x00"

_0c2613_data:
		.ascii  "\x00"

_0c2614_data:
		.ascii  "\x00\x00"

_0c2616_data:
		.fill   0x4

_0c261a_data:
		.ascii  "\x00"

_0c261b_data:
		.ascii  "\x00"

_0c261c_data:
		.ascii  "\x00\x00"

_0c261e_data:
		.ascii  "\x00\x00"

_0c2620_data:
		.ascii  "\x00\x00"

_0c2622_data:
		.ascii  "\x00\x00"

_0c2624_data:
		.fill   0x4

_0c2628_data:
		.fill   0x8

_0c2630_data:
		.fill   0x2a

_0c265a_data:
		.ascii  "\x00\x00"

_0c265c_data:
		.fill   0x30

_0c268c_data:
		.ascii  "\x00"

_0c268d_data:
		.ascii  "\x00"

_0c268e_data:
		.ascii  "\x00"

_0c268f_data:
		.ascii  "\x00"

_0c2690_data:
		.ascii  "\x00"

_0c2691_data:
		.fill   0x12

_0c26a3_data:
		.ascii  "\x00\x00"

_0c26a5_data:
		.fill   0xc63

_0c3308_data:
		.ascii  "\x00\x00"

_0c330a_data:
		.ascii  "\x00\x00"

_0c330c_data:
		.ascii  "\x00\x00"

_0c330e_data:
		.ascii  "\x00\x00"

_0c3310_data:
		.ascii  "\x00"

_0c3311_data:
		.ascii  "\x00\x00\x00"

_0c3314_data:
		.ascii  "\x00"

_0c3315_data:
		.ascii  "\x00"

_0c3316_data:
		.ascii  "\x00\x00"

_0c3318_data:
		.fill   0x4

_0c331c_data:
		.ascii  "\x00"

_0c331d_data:
		.ascii  "\x00"

_0c331e_data:
		.ascii  "\x00"

_0c331f_data:
		.ascii  "\x00"

_0c3320_data:
		.ascii  "\x00\x00"

_0c3322_data:
		.ascii  "\x00\x00"

_0c3324_data:
		.ascii  "\x00\x00"

_0c3326_data:
		.fill   0xc6

_0c33ec_data:
		.ascii  "\x00\x00"

_0c33ee_data:
		.ascii  "\x00\x00"

_0c33f0_data:
		.ascii  "\x00\x00"

_0c33f2_data:
		.ascii  "\x00\x00"

_0c33f4_data:
		.ascii  "\x00\x00"

_0c33f6_data:
		.ascii  "\x00\x00"

_0c33f8_data:
		.ascii  "\x00\x00"

_0c33fa_data:
		.ascii  "\x00"

_0c33fb_data:
		.ascii  "\x00"

_0c33fc_data:
		.ascii  "\x00"

_0c33fd_data:
		.ascii  "\x00"

_0c33fe_data:
		.fill   0xc6

_0c34c4_data:
		.fill   0x4

_0c34c8_data:
		.fill   0x4

_0c34cc_data:
		.ascii  "\x00\x00"

_0c34ce_data:
		.ascii  "\x00\x00"

_0c34d0_data:
		.ascii  "\x00\x00"

_0c34d2_data:
		.ascii  "\x00"

_0c34d3_data:
		.ascii  "\x00"

_0c34d4_data:
		.ascii  "\x00"

_0c34d5_data:
		.ascii  "\x00"

_0c34d6_data:
		.fill   0xc6

_0c359c_data:
		.ascii  "\x00\x00"

_0c359e_data:
		.ascii  "\x00\x00"

_0c35a0_data:
		.ascii  "\x00\x00"

_0c35a2_data:
		.ascii  "\x00\x00"

_0c35a4_data:
		.ascii  "\x00\x00"

_0c35a6_data:
		.ascii  "\x00\x00"

_0c35a8_data:
		.ascii  "\x00\x00"

_0c35aa_data:
		.ascii  "\x00"

_0c35ab_data:
		.ascii  "\x00"

_0c35ac_data:
		.ascii  "\x00"

_0c35ad_data:
		.ascii  "\x00"

_0c35ae_data:
		.fill   0xc6

_0c3674_data:
		.fill   0x4

_0c3678_data:
		.fill   0x4

_0c367c_data:
		.ascii  "\x00\x00"

_0c367e_data:
		.ascii  "\x00\x00"

_0c3680_data:
		.ascii  "\x00\x00"

_0c3682_data:
		.ascii  "\x00"

_0c3683_data:
		.ascii  "\x00"

_0c3684_data:
		.ascii  "\x00"

_0c3685_data:
		.ascii  "\x00"

_0c3686_data:
		.fill   0xd8

_0c375e_data:
		.fill   0xd8

_0c3836_data:
		.fill   0xd8

_0c390e_data:
		.fill   0xd8

_0c39e6_data:
		.fill   0xd8

_0c3abe_data:
		.fill   0x1a0

_0c3c5e_data:
		.fill   0x956

_0c45b4_data:
		.ascii  "\x00\x00"

_0c45b6_data:
		.ascii  "\x00\x00"

_0c45b8_data:
		.ascii  "\x00\x00"

_0c45ba_data:
		.ascii  "\x00\x00"

_0c45bc_data:
		.ascii  "\x00\x00"

_0c45be_data:
		.fill   0x8

_0c45c6_data:
		.ascii  "\x00\x00"

_0c45c8_data:
		.ascii  "\x00\x00"

_0c45ca_data:
		.fill   0x181

_0c474b_data:
		.ascii  "\x00"

_0c474c_data:
		.fill   0x18

_0c4764_data:
		.fill   0x4

_0c4768_data:
		.fill   0x4

_0c476c_data:
		.fill   0x4

_0c4770_data:
		.fill   0xa20

_0c5190_data:
		.fill   0x14

_0c51a4_data:
		.ascii  "\x00"

_0c51a5_data:
		.ascii  "\x00"

_0c51a6_data:
		.ascii  "\x00"

_0c51a7_data:
		.ascii  "\x00"

_0c51a8_data:
		.ascii  "\x00\x00"

_0c51aa_data:
		.ascii  "\x00"

_0c51ab_data:
		.fill   0x9

_0c51b4_data:
		.ascii  "\x00"

_0c51b5_data:
		.ascii  "\x00"

_0c51b6_data:
		.ascii  "\x00\x00"

_0c51b8_data:
		.fill   0x4

_0c51bc_data:
		.ascii  "\x00\x00"

_0c51be_data:
		.ascii  "\x00\x00"

_0c51c0_data:
		.ascii  "\x00\x00"

_0c51c2_data:
		.ascii  "\x00\x00"

_0c51c4_data:
		.ascii  "\x00\x00"

_0c51c6_data:
		.ascii  "\x00\x00"

_0c51c8_data:
		.ascii  "\x00\x00"

_0c51ca_data:
		.ascii  "\x00\x00"

_0c51cc_data:
		.ascii  "\x00\x00"

_0c51ce_data:
		.ascii  "\x00\x00"

_0c51d0_data:
		.ascii  "\x00\x00"

_0c51d2_data:
		.ascii  "\x00\x00"

_0c51d4_data:
		.ascii  "\x00\x00"

_0c51d6_data:
		.ascii  "\x00\x00"

_0c51d8_data:
		.fill   0xe

_0c51e6_data:
		.ascii  "\x00\x00"

_0c51e8_data:
		.ascii  "\x00\x00"

_0c51ea_data:
		.ascii  "\x00\x00"

_0c51ec_data:
		.ascii  "\x00\x00"

_0c51ee_data:
		.ascii  "\x00\x00"

_0c51f0_data:
		.ascii  "\x00\x00"

_0c51f2_data:
		.ascii  "\x00\x00"

_0c51f4_data:
		.ascii  "\x00\x00"

_0c51f6_data:
		.ascii  "\x00\x00"

_0c51f8_data:
		.ascii  "\x00\x00"

_0c51fa_data:
		.ascii  "\x00\x00"

_0c51fc_data:
		.ascii  "\x00\x00"

_0c51fe_data:
		.ascii  "\x00\x00"

_0c5200_data:
		.ascii  "\x00\x00"

_0c5202_data:
		.ascii  "\x00\x00"

_0c5204_data:
		.ascii  "\x00\x00"

_0c5206_data:
		.ascii  "\x00\x00"

_0c5208_data:
		.fill   0x10

_0c5218_data:
		.fill   0x10

_0c5228_data:
		.fill   0x10

_0c5238_data:
		.fill   0xe

_0c5246_data:
		.ascii  "\x00\x00"

_0c5248_data:
		.ascii  "\x00\x00"

_0c524a_data:
		.ascii  "\x00\x00"

_0c524c_data:
		.fill   0x80

_0c52cc_data:
		.ascii  "\x00\x00"

_0c52ce_data:
		.ascii  "\x00\x00"

_0c52d0_data:
		.fill   0x1fe

_0c54ce_data:
		.fill   0x27e

_0c574c_data:
		.ascii  "\x00\x00"

_0c574e_data:
		.fill   0x1192

_0c68e0_data:
		.fill   0x76

_0c6956_data:
		.ascii  "\x00\x00"

_0c6958_data:
		.fill   0x4

_0c695c_data:
		.fill   0x4

_0c6960_data:
		.fill   0x4

_0c6964_data:
		.fill   0x4

_0c6968_data:
		.fill   0x4

_0c696c_data:
		.fill   0x4

_0c6970_data:
		.ascii  "\x00"

_0c6971_data:
		.ascii  "\x00"

_0c6972_data:
		.ascii  "\x00\x00\x00"

_0c6975_data:
		.fill   0x7

_0c697c_data:
		.fill   0x4

_0c6980_data:
		.fill   0x4

_0c6984_data:
		.fill   0x4

_0c6988_data:
		.fill   0xc

_0c6994_data:
		.ascii  "\x00"

_0c6995_data:
		.ascii  "\x00"

_0c6996_data:
		.ascii  "\x00\x00"

_0c6998_data:
		.ascii  "\x00\x00"

_0c699a_data:
		.ascii  "\x00\x00"

_0c699c_data:
		.fill   0x4

_0c69a0_data:
		.fill   0x4

_0c69a4_data:
		.fill   0x4

_0c69a8_data:
		.fill   0x4

_0c69ac_data:
		.fill   0x4

_0c69b0_data:
		.fill   0x4

_0c69b4_data:
		.fill   0x16c

_0c6b20_data:
		.fill   0xc

_0c6b2c_data:
		.fill   0x8

_0c6b34_data:
		.fill   0x4

_0c6b38_data:
		.fill   0x8

_0c6b40_data:
		.fill   0x4

_0c6b44_data:
		.fill   0x8

_0c6b4c_data:
		.fill   0x4

_0c6b50_data:
		.fill   0x8

_0c6b58_data:
		.fill   0x4

_0c6b5c_data:
		.fill   0x4

_0c6b60_data:
		.fill   0x4

_0c6b64_data:
		.fill   0x4

_0c6b68_data:
		.fill   0x4

_0c6b6c_data:
		.fill   0x4

_0c6b70_data:
		.ascii  "\x00\x00"

_0c6b72_data:
		.ascii  "\x00\x00"

_0c6b74_data:
		.ascii  "\x00\x00"

_0c6b76_data:
		.ascii  "\x00"

_0c6b77_data:
		.ascii  "\x00"

_0c6b78_data:
		.fill   0x4

_0c6b7c_data:
		.ascii  "\x00\x00"

_0c6b7e_data:
		.ascii  "\x00\x00"

_0c6b80_data:
		.fill   0x4

_0c6b84_data:
		.ascii  "\x00\x00\x00"

_0c6b87_data:
		.ascii  "\x00"

_0c6b88_data:
		.fill   0xc

_0c6b94_data:
		.fill   0x4

_0c6b98_data:
		.fill   0x700

_0c7298_data:
		.fill   0x80

_0c7318_data:
		.fill   0x680

_0c7998_data:
		.ascii  "\x00\x00\x00"

_0c799b_data:
		.ascii  "\x00"

_0c799c_data:
		.ascii  "\x00"

_0c799d_data:
		.fill   0x2fc

_0c7c99_data:
		.ascii  "\x00"

_0c7c9a_data:
		.ascii  "\x00"

_0c7c9b_data:
		.ascii  "\x00"

_0c7c9c_data:
		.ascii  "\x00"

_0c7c9d_data:
		.ascii  "\x00"

_0c7c9e_data:
		.fill   0x8fe

_0c859c_data:
		.fill   0x300

_0c889c_data:
		.ascii  "\x00"

_0c889d_data:
		.ascii  "\x00"

_0c889e_data:
		.fill   0x2fe

_0c8b9c_data:
		.fill   0x600

_0c919c_data:
		.fill   0x4

_0c91a0_data:
		.ascii  "\x00\x00"

_0c91a2_data:
		.ascii  "\x00\x00"

_0c91a4_data:
		.fill   0x300

_0c94a4_data:
		.ascii  "\x00"

_0c94a5_data:
		.ascii  "\x00\x00\x00"

_0c94a8_data:
		.fill   0x14

_0c94bc_data:
		.fill   0x12

_0c94ce_data:
		.ascii  "\x00\x00"

_0c94d0_data:
		.fill   0x4

_0c94d4_data:
		.fill   0x4

_0c94d8_data:
		.fill   0x4

_0c94dc_data:
		.fill   0x4

_0c94e0_data:
		.ascii  "\x00\x00"

_0c94e2_data:
		.ascii  "\x00\x00"

_0c94e4_data:
		.fill   0x4

_0c94e8_data:
		.fill   0x4

_0c94ec_data:
		.fill   0x4

_0c94f0_data:
		.fill   0x4

_0c94f4_data:
		.fill   0x4

_0c94f8_data:
		.fill   0x4

_0c94fc_data:
		.fill   0x4

_0c9500_data:
		.fill   0x4

_0c9504_data:
		.fill   0x4

_0c9508_data:
		.fill   0x4

_0c950c_data:
		.fill   0x4

_0c9510_data:
		.fill   0x1c

_0c952c_data:
		.fill   0x1c

_0c9548_data:
		.fill   0x1c

_0c9564_data:
		.fill   0x1500

_0caa64_data:
		.fill   0x4

_0caa68_data:
		.fill   0x4

_0caa6c_data:
		.fill   0x4

_0caa70_data:
		.fill   0x4

_0caa74_data:
		.fill   0x4

_0caa78_data:
		.fill   0x4

_0caa7c_data:
		.fill   0x12bc

_0cbd38_data:
		.fill   0x4

_0cbd3c_data:
		.fill   0x12c0

_0ccffc_data:
		.fill   0x4

_0cd000_data:
		.ascii  "\x00\x00"

_0cd002_data:
		.ascii  "\x00\x00"

_0cd004_data:
		.ascii  "\x00\x00"

_0cd006_data:
		.ascii  "\x00\x00"

_0cd008_data:
		.ascii  "\x00\x00"

_0cd00a_data:
		.fill   0xa

_0cd014_data:
		.ascii  "\x00\x00"

_0cd016_data:
		.ascii  "\x00\x00"

_0cd018_data:
		.ascii  "\x00\x00"

_0cd01a_data:
		.ascii  "\x00\x00"

_0cd01c_data:
		.ascii  "\x00\x00"

_0cd01e_data:
		.ascii  "\x00\x00"

_0cd020_data:
		.ascii  "\x00\x00"

_0cd022_data:
		.fill   0x8

_0cd02a_data:
		.fill   0x6

_0cd030_data:
		.ascii  "\x00\x00"

_0cd032_data:
		.ascii  "\x00\x00"

_0cd034_data:
		.ascii  "\x00\x00"

_0cd036_data:
		.ascii  "\x00\x00"

_0cd038_data:
		.ascii  "\x00\x00"

_0cd03a_data:
		.ascii  "\x00\x00"

_0cd03c_data:
		.fill   0x4

_0cd040_data:
		.fill   0x4

_0cd044_data:
		.fill   0x4

_0cd048_data:
		.ascii  "\x00\x00"

_0cd04a_data:
		.ascii  "\x00\x00"

_0cd04c_data:
		.ascii  "\x00\x00"

_0cd04e_data:
		.ascii  "\x00\x00"

_0cd050_data:
		.ascii  "\x00\x00"

_0cd052_data:
		.ascii  "\x00\x00"

_0cd054_data:
		.ascii  "\x00\x00"

_0cd056_data:
		.ascii  "\x00\x00"

_0cd058_data:
		.fill   0x4

_0cd05c_data:
		.fill   0x20

_0cd07c_data:
		.ascii  "\x00\x00"

_0cd07e_data:
		.ascii  "\x00\x00"

_0cd080_data:
		.ascii  "\x00\x00"

_0cd082_data:
		.ascii  "\x00\x00"

_0cd084_data:
		.ascii  "\x00\x00"

_0cd086_data:
		.fill   0x4

_0cd08a_data:
		.ascii  "\x00"

_0cd08b_data:
		.fill   0x5

_0cd090_data:
		.fill   0x4

_0cd094_data:
		.fill   0x4

_0cd098_data:
		.fill   0x4

_0cd09c_data:
		.ascii  "\x00\x00"

_0cd09e_data:
		.ascii  "\x00\x00"

_0cd0a0_data:
		.ascii  "\x00\x00"

_0cd0a2_data:
		.ascii  "\x00\x00"

_0cd0a4_data:
		.ascii  "\x00\x00"

_0cd0a6_data:
		.fill   0x6

_0cd0ac_data:
		.ascii  "\x00\x00"

_0cd0ae_data:
		.ascii  "\x00\x00"

_0cd0b0_data:
		.ascii  "\x00\x00"

_0cd0b2_data:
		.ascii  "\x00\x00"

_0cd0b4_data:
		.ascii  "\x00\x00"

_0cd0b6_data:
		.ascii  "\x00\x00"

_0cd0b8_data:
		.ascii  "\x00\x00"

_0cd0ba_data:
		.ascii  "\x00\x00"

_0cd0bc_data:
		.ascii  "\x00\x00"

_0cd0be_data:
		.ascii  "\x00\x00"

_0cd0c0_data:
		.ascii  "\x00\x00"

_0cd0c2_data:
		.ascii  "\x00\x00"

_0cd0c4_data:
		.ascii  "\x00\x00"

_0cd0c6_data:
		.ascii  "\x00\x00"

_0cd0c8_data:
		.fill   0xc

_0cd0d4_data:
		.ascii  "\x00\x00"

_0cd0d6_data:
		.ascii  "\x00\x00"

_0cd0d8_data:
		.ascii  "\x00\x00"

_0cd0da_data:
		.ascii  "\x00\x00"

_0cd0dc_data:
		.fill   0x4

_0cd0e0_data:
		.ascii  "\x00\x00"

_0cd0e2_data:
		.ascii  "\x00\x00"

_0cd0e4_data:
		.ascii  "\x00\x00"

_0cd0e6_data:
		.ascii  "\x00\x00"

_0cd0e8_data:
		.fill   0x4

_0cd0ec_data:
		.ascii  "\x00\x00"

_0cd0ee_data:
		.ascii  "\x00\x00"

_0cd0f0_data:
		.ascii  "\x00\x00"

_0cd0f2_data:
		.ascii  "\x00\x00"

_0cd0f4_data:
		.ascii  "\x00\x00"

_0cd0f6_data:
		.fill   0x6

_0cd0fc_data:
		.ascii  "\x00\x00"

_0cd0fe_data:
		.ascii  "\x00\x00"

_0cd100_data:
		.ascii  "\x00"

_0cd101_data:
		.ascii  "\x00"

_0cd102_data:
		.ascii  "\x00\x00"

_0cd104_data:
		.ascii  "\x00"

_0cd105_data:
		.ascii  "\x00"

_0cd106_data:
		.ascii  "\x00"

_0cd107_data:
		.ascii  "\x00"

_0cd108_data:
		.ascii  "\x00"

_0cd109_data:
		.fill   0x5

_0cd10e_data:
		.ascii  "\x00"

_0cd10f_data:
		.ascii  "\x00"

_0cd110_data:
		.fill   0x4

_0cd114_data:
		.fill   0x4

_0cd118_data:
		.ascii  "\x00"

_0cd119_data:
		.ascii  "\x00"

_0cd11a_data:
		.ascii  "\x00\x00"

_0cd11c_data:
		.ascii  "\x00\x00"

_0cd11e_data:
		.ascii  "\x00\x00"

_0cd120_data:
		.ascii  "\x00\x00"

_0cd122_data:
		.ascii  "\x00\x00"

_0cd124_data:
		.ascii  "\x00\x00"

_0cd126_data:
		.ascii  "\x00\x00"

_0cd128_data:
		.ascii  "\x00"

_0cd129_data:
		.fill   0x64c

_0cd775_data:
		.ascii  "\x00"

_0cd776_data:
		.ascii  "\x00"

_0cd777_data:
		.ascii  "\x00"

_0cd778_data:
		.ascii  "\x00\x00"

_0cd77a_data:
		.ascii  "\x00\x00"

_0cd77c_data:
		.fill   0x4

_0cd780_data:
		.fill   0x60

_0cd7e0_data:
		.fill   0x4

_0cd7e4_data:
		.fill   0x4

_0cd7e8_data:
		.fill   0x4

_0cd7ec_data:
		.fill   0x4

_0cd7f0_data:
		.fill   0x4

_0cd7f4_data:
		.fill   0x4

_0cd7f8_data:
		.fill   0x4

_0cd7fc_data:
		.fill   0x4

_0cd800_data:
		.fill   0x4

_0cd804_data:
		.fill   0x4

_0cd808_data:
		.fill   0x4

_0cd80c_data:
		.fill   0x4

_0cd810_data:
		.fill   0x4

_0cd814_data:
		.fill   0x4

_0cd818_data:
		.fill   0x4

_0cd81c_data:
		.fill   0x4

_0cd820_data:
		.fill   0x4

_0cd824_data:
		.fill   0x4

_0cd828_data:
		.fill   0x4

_0cd82c_data:
		.fill   0x4

_0cd830_data:
		.fill   0x4

_0cd834_data:
		.fill   0x4

_0cd838_data:
		.fill   0x4

_0cd83c_data:
		.fill   0x4

_0cd840_data:
		.fill   0x4

_0cd844_data:
		.fill   0x4

_0cd848_data:
		.fill   0x4

_0cd84c_data:
		.fill   0x4

_0cd850_data:
		.fill   0x4

_0cd854_data:
		.fill   0x4

_0cd858_data:
		.fill   0x4

_0cd85c_data:
		.fill   0x4

_0cd860_data:
		.fill   0x4

_0cd864_data:
		.fill   0x4

_0cd868_data:
		.fill   0x4

_0cd86c_data:
		.fill   0x4

_0cd870_data:
		.fill   0x4

_0cd874_data:
		.fill   0x4

_0cd878_data:
		.fill   0x4

_0cd87c_data:
		.fill   0x4

_0cd880_data:
		.fill   0x4

_0cd884_data:
		.fill   0x4

_0cd888_data:
		.fill   0x4

_0cd88c_data:
		.fill   0x4

_0cd890_data:
		.fill   0x4

_0cd894_data:
		.fill   0x4

_0cd898_data:
		.fill   0x4

_0cd89c_data:
		.fill   0x4

_0cd8a0_data:
		.fill   0x4

_0cd8a4_data:
		.fill   0x4

_0cd8a8_data:
		.fill   0x4

_0cd8ac_data:
		.fill   0x4

_0cd8b0_data:
		.fill   0x4

_0cd8b4_data:
		.fill   0x4

_0cd8b8_data:
		.fill   0x4

_0cd8bc_data:
		.fill   0x4

_0cd8c0_data:
		.fill   0x4

_0cd8c4_data:
		.fill   0x4

_0cd8c8_data:
		.fill   0x4

_0cd8cc_data:
		.fill   0x4

_0cd8d0_data:
		.fill   0x4

_0cd8d4_data:
		.fill   0x4

_0cd8d8_data:
		.fill   0x4

_0cd8dc_data:
		.fill   0x4

_0cd8e0_data:
		.fill   0x4

_0cd8e4_data:
		.fill   0x4

_0cd8e8_data:
		.fill   0x4

_0cd8ec_data:
		.fill   0x4

_0cd8f0_data:
		.fill   0x4

_0cd8f4_data:
		.fill   0x8

_0cd8fc_data:
		.fill   0x4

_0cd900_data:
		.fill   0x4

_0cd904_data:
		.fill   0x4

_0cd908_data:
		.fill   0x4

_0cd90c_data:
		.fill   0x74

_0cd980_data:
		.fill   0x54

_0cd9d4_data:
		.fill   0x4

_0cd9d8_data:
		.fill   0x4

_0cd9dc_data:
		.fill   0x4

_0cd9e0_data:
		.fill   0xc

_0cd9ec_data:
		.fill   0x4

_0cd9f0_data:
		.fill   0x4

_0cd9f4_data:
		.fill   0x4

_0cd9f8_data:
		.fill   0x4

_0cd9fc_data:
		.fill   0x4

_0cda00_data:
		.fill   0x4

_0cda04_data:
		.fill   0x8

_0cda0c_data:
		.fill   0x8

_0cda14_data:
		.fill   0x8

_0cda1c_data:
		.fill   0x8

_0cda24_data:
		.fill   0x2c

_0cda50_data:
		.fill   0x20

_0cda70_data:
		.fill   0xa8

_0cdb18_data:
		.fill   0x4

_0cdb1c_data:
		.ascii  "\x00\x00"

_0cdb1e_data:
		.ascii  "\x00\x00"

_0cdb20_data:
		.ascii  "\x00\x00"

_0cdb22_data:
		.ascii  "\x00\x00"

_0cdb24_data:
		.fill   0x4

_0cdb28_data:
		.fill   0x4

_0cdb2c_data:
		.fill   0x100

_0cdc2c_data:
		.fill   0x100

_0cdd2c_data:
		.fill   0x100

_0cde2c_data:
		.fill   0x100

_0cdf2c_data:
		.fill   0x4

_0cdf30_data:
		.fill   0x4

_0cdf34_data:
		.fill   0x4

_0cdf38_data:
		.fill   0x4

_0cdf3c_data:
		.ascii  "\x00\x00"

_0cdf3e_data:
		.ascii  "\x00\x00"

_0cdf40_data:
		.fill   0x4

_0cdf44_data:
		.fill   0x4

_0cdf48_data:
		.fill   0x4

_0cdf4c_data:
		.fill   0x4

_0cdf50_data:
		.fill   0x4

_0cdf54_data:
		.fill   0x4

_0cdf58_data:
		.fill   0x4

_0cdf5c_data:
		.fill   0x4

_0cdf60_data:
		.fill   0x4

_0cdf64_data:
		.fill   0x4

_0cdf68_data:
		.fill   0x4

_0cdf6c_data:
		.fill   0x4

_0cdf70_data:
		.fill   0x4

_0cdf74_data:
		.fill   0x4

_0cdf78_data:
		.fill   0x4

_0cdf7c_data:
		.fill   0x4

_0cdf80_data:
		.fill   0x4

_0cdf84_data:
		.fill   0x4

_0cdf88_data:
		.fill   0x4

_0cdf8c_data:
		.fill   0x4

_0cdf90_data:
		.ascii  "\x00"

_0cdf91_data:
		.ascii  "\x00\x00\x00"

_0cdf94_data:
		.fill   0x4

_0cdf98_data:
		.fill   0x4

_0cdf9c_data:
		.ascii  "\x00"

_0cdf9d_data:
		.ascii  "\x00"

_0cdf9e_data:
		.ascii  "\x00\x00"

_0cdfa0_data:
		.fill   0x4

_0cdfa4_data:
		.fill   0x4

_0cdfa8_data:
		.fill   0x4

_0cdfac_data:
		.fill   0x4

_0cdfb0_data:
		.fill   0x4

_0cdfb4_data:
		.fill   0x4

_0cdfb8_data:
		.fill   0x4

_0cdfbc_data:
		.fill   0x4

_0cdfc0_data:
		.fill   0x4

_0cdfc4_data:
		.fill   0x4

_0cdfc8_data:
		.fill   0x4

_0cdfcc_data:
		.fill   0xc8

_0ce094_data:
		.fill   0xc8

_0ce15c_data:
		.fill   0xc8

_0ce224_data:
		.fill   0xc8

_0ce2ec_data:
		.fill   0x78

_0ce364_data:
		.fill   0x78

_0ce3dc_data:
		.fill   0x78

_0ce454_data:
		.fill   0x78

_0ce4cc_data:
		.fill   0x4

_0ce4d0_data:
		.fill   0x4

_0ce4d4_data:
		.fill   0x4

_0ce4d8_data:
		.fill   0x4

_0ce4dc_data:
		.fill   0x4

_0ce4e0_data:
		.fill   0x20

_0ce500_data:
		.fill   0x32

_0ce532_data:
		.ascii  "\x00\x00"

_0ce534_data:
		.fill   0x4

_0ce538_data:
		.fill   0x4

_0ce53c_data:
		.ascii  "\x00\x00"

_0ce53e_data:
		.ascii  "\x00\x00"

_0ce540_data:
		.fill   0x4

_0ce544_data:
		.fill   0x4

_0ce548_data:
		.fill   0x4

_0ce54c_data:
		.fill   0x4

_0ce550_data:
		.fill   0x4

_0ce554_data:
		.fill   0x4

_0ce558_data:
		.fill   0x4

_0ce55c_data:
		.fill   0x4

_0ce560_data:
		.ascii  "\x00\x00"

_0ce562_data:
		.ascii  "\x00\x00"

_0ce564_data:
		.ascii  "\x00\x00"

_0ce566_data:
		.fill   0x6

_0ce56c_data:
		.fill   0x14

_0ce580_data:
		.fill   0x1e

_0ce59e_data:
		.ascii  "\x00\x00"

_0ce5a0_data:
		.ascii  "\x00\x00"

_0ce5a2_data:
		.ascii  "\x00\x00"

_0ce5a4_data:
		.fill   0x4

_0ce5a8_data:
		.fill   0x4

_0ce5ac_data:
		.fill   0x4

_0ce5b0_data:
		.fill   0x4c

_0ce5fc_data:
		.fill   0x4

_0ce600_data:
		.fill   0x4

_0ce604_data:
		.fill   0x4

_0ce608_data:
		.fill   0x4

_0ce60c_data:
		.ascii  "\x00"

_0ce60d_data:
		.fill   0x103

_0ce710_data:
		.fill   0x100

_0ce810_data:
		.ascii  "\x00\x00"

_0ce812_data:
		.ascii  "\x00\x00"

_0ce814_data:
		.ascii  "\x00"

_0ce815_data:
		.ascii  "\x00"

_0ce816_data:
		.fill   0x4

_0ce81a_data:
		.ascii  "\x00"

_0ce81b_data:
		.ascii  "\x00\x00"

_0ce81d_data:
		.ascii  "\x00\x00"

_0ce81f_data:
		.fill   0x9

_0ce828_data:
		.ascii  "\x00\x00"

_0ce82a_data:
		.ascii  "\x00\x00"

_0ce82c_data:
		.fill   0x4

_0ce830_data:
		.fill   0x4

_0ce834_data:
		.fill   0x4

_0ce838_data:
		.fill   0x4

_0ce83c_data:
		.fill   0x4

_0ce840_data:
		.ascii  "\x00\x00"

_0ce842_data:
		.fill   0x4

_0ce846_data:
		.ascii  "\x00\x00"

_0ce848_data:
		.ascii  "\x00\x00"

_0ce84a_data:
		.ascii  "\x00\x00"

_0ce84c_data:
		.fill   0x4

_0ce850_data:
		.fill   0x4

_0ce854_data:
		.fill   0x4

_0ce858_data:
		.fill   0x4

_0ce85c_data:
		.fill   0x4

_0ce860_data:
		.ascii  "\x00"

_0ce861_data:
		.fill   0x9

_0ce86a_data:
		.ascii  "\x00"

_0ce86b_data:
		.ascii  "\x00"

_0ce86c_data:
		.ascii  "\x00"

_0ce86d_data:
		.ascii  "\x00"

_0ce86e_data:
		.ascii  "\x00"

_0ce86f_data:
		.ascii  "\x00"

_0ce870_data:
		.ascii  "\x00"

_0ce871_data:
		.ascii  "\x00"

_0ce872_data:
		.ascii  "\x00\x00"

_0ce874_data:
		.fill   0x64

_0ce8d8_data:
		.fill   0x30

_0ce908_data:
		.fill   0x4

_0ce90c_data:
		.fill   0x4

_0ce910_data:
		.fill   0x4

_0ce914_data:
		.ascii  "\x00\x00"

_0ce916_data:
		.ascii  "\x00\x00"

_0ce918_data:
		.ascii  "\x00\x00"

_0ce91a_data:
		.ascii  "\x00\x00"

_0ce91c_data:
		.ascii  "\x00\x00"

_0ce91e_data:
		.ascii  "\x00\x00"

_0ce920_data:
		.ascii  "\x00\x00"

_0ce922_data:
		.ascii  "\x00\x00"

_0ce924_data:
		.ascii  "\x00\x00"

_0ce926_data:
		.ascii  "\x00\x00"

_0ce928_data:
		.ascii  "\x00\x00"

_0ce92a_data:
		.ascii  "\x00"

_0ce92b_data:
		.ascii  "\x00"

_0ce92c_data:
		.ascii  "\x00\x00"

_0ce92e_data:
		.ascii  "\x00\x00"

_0ce930_data:
		.ascii  "\x00\x00"

_0ce932_data:
		.ascii  "\x00\x00"

_0ce934_data:
		.fill   0x8306

_0d6c3a_data:
		.ascii  "\x00\x00"

_0d6c3c_data:
		.ascii  "\x00\x00"

_0d6c3e_data:
		.ascii  "\x00\x00"

_0d6c40_data:
		.ascii  "\x00\x00"

_0d6c42_data:
		.ascii  "\x00\x00"

_0d6c44_data:
		.ascii  "\x00\x00"

_0d6c46_data:
		.ascii  "\x00\x00"

_0d6c48_data:
		.ascii  "\x00\x00"

_0d6c4a_data:
		.ascii  "\x00\x00"

_0d6c4c_data:
		.ascii  "\x00\x00"

_0d6c4e_data:
		.ascii  "\x00\x00"

_0d6c50_data:
		.ascii  "\x00\x00"

_0d6c52_data:
		.ascii  "\x00\x00"

_0d6c54_data:
		.ascii  "\x00\x00"

_0d6c56_data:
		.ascii  "\x00\x00"

_0d6c58_data:
		.ascii  "\x00\x00"

_0d6c5a_data:
		.fill   0x9a

_0d6cf4_data:
		.ascii  "\x00"

_0d6cf5_data:
		.ascii  "\x00"

_0d6cf6_data:
		.ascii  "\x00"

_0d6cf7_data:
		.ascii  "\x00"

_0d6cf8_data:
		.ascii  "\x00\x00"

_0d6cfa_data:
		.ascii  "\x00\x00"

_0d6cfc_data:
		.ascii  "\x00\x00"

_0d6cfe_data:
		.ascii  "\x00\x00"

_0d6d00_data:
		.ascii  "\x00\x00"

_0d6d02_data:
		.ascii  "\x00\x00"

_0d6d04_data:
		.ascii  "\x00\x00"

_0d6d06_data:
		.ascii  "\x00\x00"

_0d6d08_data:
		.ascii  "\x00\x00"

_0d6d0a_data:
		.ascii  "\x00\x00"

_0d6d0c_data:
		.ascii  "\x00\x00"

_0d6d0e_data:
		.ascii  "\x00\x00"

_0d6d10_data:
		.ascii  "\x00\x00"

_0d6d12_data:
		.ascii  "\x00\x00"

_0d6d14_data:
		.fill   0x4

_0d6d18_data:
		.fill   0x4

_0d6d1c_data:
		.ascii  "\x00"

_0d6d1d_data:
		.ascii  "\x00"

_0d6d1e_data:
		.ascii  "\x00\x00"

_0d6d20_data:
		.ascii  "\x00\x00"

_0d6d22_data:
		.ascii  "\x00"

_0d6d23_data:
		.ascii  "\x00"

_0d6d24_data:
		.ascii  "\x00\x00"

_0d6d26_data:
		.ascii  "\x00"

_0d6d27_data:
		.ascii  "\x00"

_0d6d28_data:
		.ascii  "\x00\x00"

_0d6d2a_data:
		.ascii  "\x00\x00"

_0d6d2c_data:
		.ascii  "\x00\x00"

_0d6d2e_data:
		.ascii  "\x00\x00"

_0d6d30_data:
		.ascii  "\x00\x00"

_0d6d32_data:
		.ascii  "\x00\x00"

_0d6d34_data:
		.ascii  "\x00\x00"

_0d6d36_data:
		.ascii  "\x00\x00"

_0d6d38_data:
		.fill   0x4

_0d6d3c_data:
		.fill   0x800

_0d753c_data:
		.fill   0x8

_0d7544_data:
		.ascii  "\x00"

_0d7545_data:
		.ascii  "\x00\x00\x00"

_0d7548_data:
		.fill   0x4

_0d754c_data:
		.fill   0x4

_0d7550_data:
		.ascii  "\x00\x00"

_0d7552_data:
		.ascii  "\x00\x00"

_0d7554_data:
		.ascii  "\x00"

_0d7555_data:
		.ascii  "\x00"

_0d7556_data:
		.ascii  "\x00"

_0d7557_data:
		.ascii  "\x00"

_0d7558_data:
		.fill   0x2a

_0d7582_data:
		.ascii  "\x00"

_0d7583_data:
		.ascii  "\x00"

_0d7584_data:
		.ascii  "\x00\x00"

_0d7586_data:
		.ascii  "\x00\x00"

_0d7588_data:
		.ascii  "\x00\x00"

_0d758a_data:
		.ascii  "\x00\x00"

_0d758c_data:
		.ascii  "\x00\x00"

_0d758e_data:
		.fill   0x4

_0d7592_data:
		.ascii  "\x00\x00"

_0d7594_data:
		.fill   0x4

_0d7598_data:
		.fill   0x4

_0d759c_data:
		.fill   0x4

_0d75a0_data:
		.fill   0x4

_0d75a4_data:
		.fill   0x4

_0d75a8_data:
		.fill   0x4

_0d75ac_data:
		.fill   0x4

_0d75b0_data:
		.ascii  "\x00"

_0d75b1_data:
		.ascii  "\x00"

_0d75b2_data:
		.ascii  "\x00\x00"

_0d75b4_data:
		.ascii  "\x00\x00"

_0d75b6_data:
		.ascii  "\x00\x00"

_0d75b8_data:
		.fill   0x4

_0d75bc_data:
		.fill   0x4

_0d75c0_data:
		.fill   0x4

_0d75c4_data:
		.fill   0x4

_0d75c8_data:
		.ascii  "\x00\x00"

_0d75ca_data:
		.ascii  "\x00\x00"

_0d75cc_data:
		.fill   0xc

_0d75d8_data:
		.fill   0x4

_0d75dc_data:
		.fill   0x4

_0d75e0_data:
		.fill   0x4

_0d75e4_data:
		.fill   0x4

_0d75e8_data:
		.fill   0x4

_0d75ec_data:
		.fill   0x4

_0d75f0_data:
		.fill   0x4

_0d75f4_data:
		.fill   0x4

_0d75f8_data:
		.ascii  "\x00"

_0d75f9_data:
		.ascii  "\x00"

_0d75fa_data:
		.ascii  "\x00"

_0d75fb_data:
		.ascii  "\x00"

_0d75fc_data:
		.ascii  "\x00"

_0d75fd_data:
		.ascii  "\x00"

_0d75fe_data:
		.ascii  "\x00\x00"

_0d7600_data:
		.ascii  "\x00\x00"

_0d7602_data:
		.ascii  "\x00\x00"

_0d7604_data:
		.ascii  "\x00\x00"

_0d7606_data:
		.ascii  "\x00"

_0d7607_data:
		.ascii  "\x00"

_0d7608_data:
		.fill   0x4

_0d760c_data:
		.ascii  "\x00\x00"

_0d760e_data:
		.ascii  "\x00\x00"

_0d7610_data:
		.ascii  "\x00\x00"

_0d7612_data:
		.ascii  "\x00\x00"

_0d7614_data:
		.ascii  "\x00\x00"

_0d7616_data:
		.fill   0x4

_0d761a_data:
		.ascii  "\x00\x00"

_0d761c_data:
		.ascii  "\x00\x00"

_0d761e_data:
		.ascii  "\x00\x00"

_0d7620_data:
		.ascii  "\x00\x00"

_0d7622_data:
		.ascii  "\x00\x00"

_0d7624_data:
		.ascii  "\x00\x00"

_0d7626_data:
		.ascii  "\x00\x00"

_0d7628_data:
		.ascii  "\x00"

_0d7629_data:
		.ascii  "\x00"

_0d762a_data:
		.ascii  "\x00"

_0d762b_data:
		.ascii  "\x00"

_0d762c_data:
		.fill   0x4

_0d7630_data:
		.fill   0x62

_0d7692_data:
		.ascii  "\x00\x00"

_0d7694_data:
		.ascii  "\x00\x00"

_0d7696_data:
		.ascii  "\x00\x00"

_0d7698_data:
		.ascii  "\x00\x00"

_0d769a_data:
		.ascii  "\x00\x00"

_0d769c_data:
		.ascii  "\x00\x00"

_0d769e_data:
		.ascii  "\x00\x00"

_0d76a0_data:
		.ascii  "\x00\x00"

_0d76a2_data:
		.ascii  "\x00\x00"

_0d76a4_data:
		.fill   0x4

_0d76a8_data:
		.fill   0x4

_0d76ac_data:
		.fill   0x4

_0d76b0_data:
		.fill   0x4

_0d76b4_data:
		.fill   0x80

_0d7734_data:
		.fill   0x4

_0d7738_data:
		.fill   0x4

_0d773c_data:
		.ascii  "\x00\x00"

_0d773e_data:
		.ascii  "\x00\x00"

_0d7740_data:
		.ascii  "\x00\x00"

_0d7742_data:
		.ascii  "\x00\x00"

_0d7744_data:
		.ascii  "\x00\x00"

_0d7746_data:
		.ascii  "\x00\x00"

_0d7748_data:
		.ascii  "\x00\x00"

_0d774a_data:
		.ascii  "\x00\x00"

_0d774c_data:
		.ascii  "\x00\x00"

_0d774e_data:
		.ascii  "\x00\x00"

_0d7750_data:
		.ascii  "\x00\x00"

_0d7752_data:
		.ascii  "\x00\x00"

_0d7754_data:
		.ascii  "\x00\x00"

_0d7756_data:
		.ascii  "\x00\x00"

_0d7758_data:
		.ascii  "\x00\x00"

_0d775a_data:
		.fill   0xa

_0d7764_data:
		.fill   0x4

_0d7768_data:
		.fill   0x4

_0d776c_data:
		.fill   0x4

_0d7770_data:
		.fill   0x4

_0d7774_data:
		.fill   0x4

_0d7778_data:
		.fill   0x4

_0d777c_data:
		.fill   0x4

_0d7780_data:
		.fill   0x4

_0d7784_data:
		.fill   0x4

_0d7788_data:
		.fill   0x4

_0d778c_data:
		.fill   0x4

_0d7790_data:
		.fill   0x4

_0d7794_data:
		.fill   0x4

_0d7798_data:
		.fill   0x4

_0d779c_data:
		.fill   0x4

_0d77a0_data:
		.fill   0x4

_0d77a4_data:
		.fill   0x4

_0d77a8_data:
		.fill   0x4

_0d77ac_data:
		.fill   0x4

_0d77b0_data:
		.fill   0x4

_0d77b4_data:
		.fill   0x1c

_0d77d0_data:
		.fill   0x1c

_0d77ec_data:
		.fill   0x3c

_0d7828_data:
		.fill   0x3311

_0dab39_data:
		.fill   0x669

_0db1a2_data:
		.ascii  "\x00\x00"

_0db1a4_data:
		.ascii  "\x00\x00"

_0db1a6_data:
		.ascii  "\x00\x00"

_0db1a8_data:
		.ascii  "\x00\x00\x00"

_0db1ab_data:
		.ascii  "\x00"

_0db1ac_data:
		.fill   0x4

_0db1b0_data:
		.fill   0x6

_0db1b6_data:
		.ascii  "\x00\x00"

_0db1b8_data:
		.ascii  "\x00\x00"

_0db1ba_data:
		.ascii  "\x00"

_0db1bb_data:
		.ascii  "\x00"

_0db1bc_data:
		.ascii  "\x00\x00"

_0db1be_data:
		.ascii  "\x00\x00"

_0db1c0_data:
		.fill   0x4

_0db1c4_data:
		.ascii  "\x00\x00"

_0db1c6_data:
		.ascii  "\x00\x00"

_0db1c8_data:
		.fill   0x7e

_0db246_data:
		.ascii  "\x00\x00"

_0db248_data:
		.ascii  "\x00\x00"

_0db24a_data:
		.ascii  "\x00"

_0db24b_data:
		.ascii  "\x00"

_0db24c_data:
		.fill   0x4

_0db250_data:
		.fill   0x4

_0db254_data:
		.fill   0x4

_0db258_data:
		.fill   0x14

_0db26c_data:
		.ascii  "\x00\x00"

_0db26e_data:
		.ascii  "\x00\x00"

_0db270_data:
		.fill   0x4

_0db274_data:
		.ascii  "\x00"

_0db275_data:
		.ascii  "\x00"

_0db276_data:
		.ascii  "\x00"

_0db277_data:
		.ascii  "\x00"

_0db278_data:
		.ascii  "\x00"

_0db279_data:
		.ascii  "\x00"

_0db27a_data:
		.ascii  "\x00\x00"

_0db27c_data:
		.ascii  "\x00\x00"

_0db27e_data:
		.ascii  "\x00\x00"

_0db280_data:
		.ascii  "\x00\x00"

_0db282_data:
		.ascii  "\x00\x00"

_0db284_data:
		.ascii  "\x00\x00"

_0db286_data:
		.ascii  "\x00\x00"

_0db288_data:
		.ascii  "\x00\x00"

_0db28a_data:
		.ascii  "\x00\x00"

_0db28c_data:
		.ascii  "\x00\x00"

_0db28e_data:
		.ascii  "\x00\x00"

_0db290_data:
		.ascii  "\x00"

_0db291_data:
		.ascii  "\x00"

_0db292_data:
		.fill   0x52

_0db2e4_data:
		.fill   0xc

_0db2f0_data:
		.fill   0x4

_0db2f4_data:
		.ascii  "\x00"

_0db2f5_data:
		.ascii  "\x00\x00\x00"

_0db2f8_data:
		.fill   0x4

_0db2fc_data:
		.fill   0x8

_0db304_data:
		.fill   0x4

_0db308_data:
		.fill   0x4

_0db30c_data:
		.fill   0x4

_0db310_data:
		.fill   0xc

_0db31c_data:
		.fill   0x4

_0db320_data:
		.fill   0x4

_0db324_data:
		.fill   0x4

_0db328_data:
		.fill   0x4

_0db32c_data:
		.ascii  "\x00\x00"

_0db32e_data:
		.ascii  "\x00\x00"

_0db330_data:
		.fill   0x8

_0db338_data:
		.fill   0x4

_0db33c_data:
		.fill   0x4

_0db340_data:
		.fill   0x4

_0db344_data:
		.fill   0x4

_0db348_data:
		.ascii  "\x00\x00"

_0db34a_data:
		.ascii  "\x00\x00"

_0db34c_data:
		.ascii  "\x00\x00"

_0db34e_data:
		.fill   0x11a

_0db468_data:
		.fill   0x1c

_0db484_data:
		.ascii  "\x00\x00"

_0db486_data:
		.fill   0x26

_0db4ac_data:
		.ascii  "\x00\x00"

_0db4ae_data:
		.fill   0x2c

_0db4da_data:
		.ascii  "\x00\x00"

_0db4dc_data:
		.ascii  "\x00\x00"

_0db4de_data:
		.fill   0x4

_0db4e2_data:
		.ascii  "\x00\x00"

_0db4e4_data:
		.ascii  "\x00\x00"

_0db4e6_data:
		.ascii  "\x00\x00"

_0db4e8_data:
		.ascii  "\x00\x00"

_0db4ea_data:
		.ascii  "\x00\x00"

_0db4ec_data:
		.ascii  "\x00\x00"

_0db4ee_data:
		.ascii  "\x00\x00"

_0db4f0_data:
		.ascii  "\x00\x00"

_0db4f2_data:
		.ascii  "\x00\x00"

_0db4f4_data:
		.fill   0x4

_0db4f8_data:
		.fill   0xda

_0db5d2_data:
		.ascii  "\x00\x00"

_0db5d4_data:
		.fill   0x4

_0db5d8_data:
		.ascii  "\x00"

_0db5d9_data:
		.ascii  "\x00\x00\x00"

_0db5dc_data:
		.fill   0x4

_0db5e0_data:
		.ascii  "\x00"

_0db5e1_data:
		.ascii  "\x00"

_0db5e2_data:
		.ascii  "\x00\x00"

_0db5e4_data:
		.ascii  "\x00\x00"

_0db5e6_data:
		.ascii  "\x00\x00"

_0db5e8_data:
		.ascii  "\x00\x00"

_0db5ea_data:
		.ascii  "\x00\x00"

_0db5ec_data:
		.ascii  "\x00\x00"

_0db5ee_data:
		.ascii  "\x00\x00"

_0db5f0_data:
		.ascii  "\x00\x00"

_0db5f2_data:
		.ascii  "\x00\x00"

_0db5f4_data:
		.ascii  "\x00\x00"

_0db5f6_data:
		.ascii  "\x00"

_0db5f7_data:
		.ascii  "\x00"

_0db5f8_data:
		.ascii  "\x00"

_0db5f9_data:
		.ascii  "\x00"

_0db5fa_data:
		.ascii  "\x00\x00"

_0db5fc_data:
		.fill   0x4

_0db600_data:
		.fill   0x4

_0db604_data:
		.ascii  "\x00\x00"

_0db606_data:
		.ascii  "\x00\x00"

_0db608_data:
		.ascii  "\x00\x00"

_0db60a_data:
		.ascii  "\x00\x00"

_0db60c_data:
		.ascii  "\x00"

_0db60d_data:
		.ascii  "\x00\x00\x00"

_0db610_data:
		.fill   0x4

_0db614_data:
		.fill   0x4

_0db618_data:
		.fill   0x1c0a

_0dd222_data:
		.ascii  "\x00\x00"

_0dd224_data:
		.ascii  "\x00\x00"

_0dd226_data:
		.ascii  "\x00\x00"

_0dd228_data:
		.fill   0x9c

_0dd2c4_data:
		.ascii  "\x00\x00"

_0dd2c6_data:
		.ascii  "\x00\x00"

_0dd2c8_data:
		.ascii  "\x00\x00"

_0dd2ca_data:
		.ascii  "\x00\x00"

_0dd2cc_data:
		.fill   0x4

_0dd2d0_data:
		.fill   0x4

_0dd2d4_data:
		.fill   0x4

_0dd2d8_data:
		.fill   0x4

_0dd2dc_data:
		.fill   0x4

_0dd2e0_data:
		.fill   0x4

_0dd2e4_data:
		.fill   0x4

_0dd2e8_data:
		.fill   0x4

_0dd2ec_data:
		.ascii  "\x00\x00"

_0dd2ee_data:
		.ascii  "\x00\x00"

_0dd2f0_data:
		.fill   0x4

_0dd2f4_data:
		.ascii  "\x00\x00"

_0dd2f6_data:
		.ascii  "\x00\x00"

_0dd2f8_data:
		.fill   0x4

_0dd2fc_data:
		.ascii  "\x00\x00"

_0dd2fe_data:
		.ascii  "\x00\x00"

_0dd300_data:
		.fill   0x4

_0dd304_data:
		.ascii  "\x00\x00"

_0dd306_data:
		.ascii  "\x00\x00"

_0dd308_data:
		.fill   0x4

_0dd30c_data:
		.fill   0x4

_0dd310_data:
		.fill   0x4

_0dd314_data:
		.ascii  "\x00\x00"

_0dd316_data:
		.ascii  "\x00\x00"

_0dd318_data:
		.fill   0xe

_0dd326_data:
		.fill   0x4

_0dd32a_data:
		.ascii  "\x00\x00"

_0dd32c_data:
		.ascii  "\x00"

_0dd32d_data:
		.fill   0x1b

_0dd348_data:
		.ascii  "\x00"

_0dd349_data:
		.ascii  "\x00"

_0dd34a_data:
		.ascii  "\x00"

_0dd34b_data:
		.fill   0x4

_0dd34f_data:
		.fill   0x4

_0dd353_data:
		.fill   0x18c

_0dd4df_data:
		.fill   0x4

_0dd4e3_data:
		.fill   0x190

_0dd673_data:
		.fill   0x190

_0dd803_data:
		.fill   0x64

_0dd867_data:
		.ascii  "\x00"

_0dd868_data:
		.ascii  "\x00"

_0dd869_data:
		.ascii  "\x00"

_0dd86a_data:
		.ascii  "\x00"

_0dd86b_data:
		.ascii  "\x00"

_0dd86c_data:
		.ascii  "\x00"

_0dd86d_data:
		.ascii  "\x00"

_0dd86e_data:
		.ascii  "\x00\x00"

_0dd870_data:
		.fill   0x104

_0dd974_data:
		.fill   0x4

_0dd978_data:
		.fill   0x4

_0dd97c_data:
		.fill   0x4

_0dd980_data:
		.fill   0x4

_0dd984_data:
		.fill   0x4

_0dd988_data:
		.fill   0x4

_0dd98c_data:
		.fill   0x4

_0dd990_data:
		.fill   0x4

_0dd994_data:
		.fill   0x4

_0dd998_data:
		.fill   0x4

_0dd99c_data:
		.fill   0x4

_0dd9a0_data:
		.fill   0x4

_0dd9a4_data:
		.fill   0x4

_0dd9a8_data:
		.fill   0x4

_0dd9ac_data:
		.fill   0x4

_0dd9b0_data:
		.fill   0x4

_0dd9b4_data:
		.fill   0x4

_0dd9b8_data:
		.fill   0x4

_0dd9bc_data:
		.fill   0x4

_0dd9c0_data:
		.fill   0x4

_0dd9c4_data:
		.fill   0x4

_0dd9c8_data:
		.fill   0x4

_0dd9cc_data:
		.fill   0x4

_0dd9d0_data:
		.fill   0x4

_0dd9d4_data:
		.fill   0x4

_0dd9d8_data:
		.fill   0x4

_0dd9dc_data:
		.fill   0x4

_0dd9e0_data:
		.fill   0x4

_0dd9e4_data:
		.fill   0x4

_0dd9e8_data:
		.fill   0x4

_0dd9ec_data:
		.fill   0x4

_0dd9f0_data:
		.fill   0x4

_0dd9f4_data:
		.fill   0x4

_0dd9f8_data:
		.fill   0x4

_0dd9fc_data:
		.ascii  "\x00"

_0dd9fd_data:
		.ascii  "\x00"

_0dd9fe_data:
		.ascii  "\x00\x00"

_0dda00_data:
		.ascii  "\x00"

_0dda01_data:
		.ascii  "\x00"

_0dda02_data:
		.fill   0x2fe

_0ddd00_data:
		.fill   0x4

_0ddd04_data:
		.fill   0x4

_0ddd08_data:
		.fill   0x4

_0ddd0c_data:
		.fill   0x10

_0ddd1c_data:
		.fill   0x4

_0ddd20_data:
		.fill   0x4

_0ddd24_data:
		.fill   0x4

_0ddd28_data:
		.fill   0x7f4

_0de51c_data:
		.fill   0x4

_0de520_data:
		.fill   0x4

_0de524_data:
		.fill   0x4

_0de528_data:
		.fill   0x7f4

_0ded1c_data:
		.fill   0x4

_0ded20_data:
		.fill   0x4

_0ded24_data:
		.fill   0x4

_0ded28_data:
		.fill   0x4

_0ded2c_data:
		.fill   0x4

_0ded30_data:
		.fill   0x64

_0ded94_data:
		.fill   0x8

_0ded9c_data:
		.fill   0x4

_0deda0_data:
		.ascii  "\x00\x00"

_0deda2_data:
		.ascii  "\x00\x00"

_0deda4_data:
		.fill   0x4

_0deda8_data:
		.fill   0x80

_0dee28_data:
		.fill   0x4

_0dee2c_data:
		.fill   0x4

_0dee30_data:
		.fill   0x4

_0dee34_data:
		.fill   0x5

_0dee39_data:
		.ascii  "\x00\x00\x00"

_0dee3c_data:
		.fill   0x4

_0dee40_data:
		.fill   0x4

_0dee44_data:
		.fill   0x4

_0dee48_data:
		.fill   0x4

_0dee4c_data:
		.fill   0x24

_0dee70_data:
		.ascii  "\x00\x00"

_0dee72_data:
		.ascii  "\x00\x00"

_0dee74_data:
		.fill   0x200c
